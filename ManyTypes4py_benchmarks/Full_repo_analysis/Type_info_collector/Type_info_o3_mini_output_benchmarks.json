{
  "catt_api.py": {
    "__init__@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "name",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "ip_addr",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "lazy",
        "type": [
          ""
        ]
      }
    ],
    "__repr__@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      }
    ],
    "_create_cast@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      }
    ],
    "_create_controller@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      }
    ],
    "controller@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      }
    ],
    "play_url@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "resolve",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "block",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "subtitle_url",
        "type": [
          ""
        ]
      }
    ],
    "stop@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      }
    ],
    "play@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      }
    ],
    "pause@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      }
    ],
    "seek@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "seconds",
        "type": [
          ""
        ]
      }
    ],
    "rewind@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "seconds",
        "type": [
          ""
        ]
      }
    ],
    "ffwd@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "seconds",
        "type": [
          ""
        ]
      }
    ],
    "volume@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "level",
        "type": [
          ""
        ]
      }
    ],
    "volumeup@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "delta",
        "type": [
          ""
        ]
      }
    ],
    "volumedown@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "delta",
        "type": [
          ""
        ]
      }
    ],
    "volumemute@CattDevice@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "muted",
        "type": [
          ""
        ]
      }
    ],
    "discover@global@": []
  },
  "tests___init___gpt4o.py": {
    "add@global@": [
      {
        "category": "arg",
        "name": "a",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "b",
        "type": [
          ""
        ]
      }
    ],
    "greet@global@": [
      {
        "category": "arg",
        "name": "name",
        "type": [
          ""
        ]
      }
    ],
    "is_even@global@": [
      {
        "category": "arg",
        "name": "number",
        "type": [
          ""
        ]
      }
    ],
    "get_length@global@": [
      {
        "category": "arg",
        "name": "items",
        "type": [
          ""
        ]
      }
    ],
    "find_max@global@": [
      {
        "category": "arg",
        "name": "numbers",
        "type": [
          ""
        ]
      }
    ]
  },
  "requests_html.py": {
    "__init__@MaxRetries@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "message",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "raw_html@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "html",
        "type": [
          "bytes"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "html@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "html",
        "type": [
          "Union[str, bytes]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "encoding@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "enc",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "pq@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "PyQuery"
        ]
      }
    ],
    "lxml@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "HtmlElement"
        ]
      }
    ],
    "text@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "full_text@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "find@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "selector",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Union['Element', List['Element'], None]"
        ]
      }
    ],
    "xpath@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "selector",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Union['Element', List[Union['Element', str]], None]"
        ]
      }
    ],
    "search@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "template",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[Result]"
        ]
      }
    ],
    "search_all@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "template",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Result]"
        ]
      }
    ],
    "links@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Set[str]"
        ]
      }
    ],
    "_make_absolute@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "link",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "absolute_links@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Set[str]"
        ]
      }
    ],
    "base_url@BaseParser@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "__init__@Element@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__repr__@Element@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "attrs@Element@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "__init__@HTML@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__repr__@HTML@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "next@HTML@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "fetch",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "next_symbol",
        "type": [
          "Optional[List[str]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Union['HTML', str, None]"
        ]
      }
    ],
    "__iter__@HTML@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Iterator['HTML']"
        ]
      }
    ],
    "__next__@HTML@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'HTML'"
        ]
      }
    ],
    "__aiter__@HTML@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "AsyncIterator['HTML']"
        ]
      }
    ],
    "add_next_symbol@HTML@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "next_symbol",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_convert_cookiejar_to_render@HTML@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "session_cookiejar",
        "type": [
          "http.cookiejar.Cookie"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "_convert_cookiesjar_to_render@HTML@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Dict[str, Any]]"
        ]
      }
    ],
    "render@HTML@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "retries",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "script",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "wait",
        "type": [
          "Union[int, float]"
        ]
      },
      {
        "category": "arg",
        "name": "scrolldown",
        "type": [
          "Union[bool, int]"
        ]
      },
      {
        "category": "arg",
        "name": "sleep",
        "type": [
          "Union[int, float]"
        ]
      },
      {
        "category": "arg",
        "name": "reload",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "timeout",
        "type": [
          "Union[int, float]"
        ]
      },
      {
        "category": "arg",
        "name": "keep_page",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "cookies",
        "type": [
          "List[Dict[str, Any]]"
        ]
      },
      {
        "category": "arg",
        "name": "send_cookies_session",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[Any]"
        ]
      }
    ],
    "__init__@HTMLResponse@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "session",
        "type": [
          "'BaseSession'"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "html@HTMLResponse@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "HTML"
        ]
      }
    ],
    "_from_response@HTMLResponse@": [
      {
        "category": "arg",
        "name": "cls",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "response",
        "type": [
          "requests.Response"
        ]
      },
      {
        "category": "arg",
        "name": "session",
        "type": [
          "'BaseSession'"
        ]
      },
      {
        "category": "return",
        "type": [
          "'HTMLResponse'"
        ]
      }
    ],
    "user_agent@global@": [
      {
        "category": "arg",
        "name": "style",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_get_first_or_list@global@": [
      {
        "category": "arg",
        "name": "l",
        "type": [
          "List[Any]"
        ]
      },
      {
        "category": "arg",
        "name": "first",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Union[Any, List[Any], None]"
        ]
      }
    ],
    "__init__@BaseSession@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "mock_browser",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "verify",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "browser_args",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "response_hook@BaseSession@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "response",
        "type": [
          "requests.Response"
        ]
      },
      {
        "category": "return",
        "type": [
          "requests.Response"
        ]
      }
    ],
    "__init__@HTMLSession@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "browser@HTMLSession@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "close@HTMLSession@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@AsyncHTMLSession@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "loop",
        "type": [
          "Optional[asyncio.AbstractEventLoop]"
        ]
      },
      {
        "category": "arg",
        "name": "workers",
        "type": [
          "Optional[int]"
        ]
      },
      {
        "category": "arg",
        "name": "mock_browser",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "request@AsyncHTMLSession@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Awaitable[requests.Response]"
        ]
      }
    ],
    "run@AsyncHTMLSession@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "gen@global@": [
      {
        "category": "return",
        "type": [
          "Iterator[str]"
        ]
      }
    ],
    "get_next@global@": [
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "__convert@global@": [
      {
        "category": "arg",
        "name": "cookiejar",
        "type": [
          "http.cookiejar.Cookie"
        ]
      },
      {
        "category": "arg",
        "name": "key",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ]
  },
  "NEMbox_api.py": {
    "_song_url_by_id@Parse@": [
      {
        "category": "arg",
        "name": "cls",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "sid",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[str, str]"
        ]
      }
    ],
    "song_url@Parse@": [
      {
        "category": "arg",
        "name": "cls",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "song",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[str, str]"
        ]
      }
    ],
    "song_album@Parse@": [
      {
        "category": "arg",
        "name": "cls",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "song",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[str, Union[str, int]]"
        ]
      }
    ],
    "song_artist@Parse@": [
      {
        "category": "arg",
        "name": "cls",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "song",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "songs@Parse@": [
      {
        "category": "arg",
        "name": "cls",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "songs",
        "type": [
          "List[Dict[str, Any]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Dict[str, Any]]"
        ]
      }
    ],
    "artists@Parse@": [
      {
        "category": "arg",
        "name": "cls",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "artists",
        "type": [
          "List[Dict[str, Any]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Dict[str, Any]]"
        ]
      }
    ],
    "albums@Parse@": [
      {
        "category": "arg",
        "name": "cls",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "albums",
        "type": [
          "List[Dict[str, Any]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Dict[str, Any]]"
        ]
      }
    ],
    "playlists@Parse@": [
      {
        "category": "arg",
        "name": "cls",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "playlists",
        "type": [
          "List[Dict[str, Any]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Dict[str, Any]]"
        ]
      }
    ],
    "__init__@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "toplists@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "logout@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_raw_request@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "method",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "endpoint",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "data",
        "type": [
          "Optional[Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "requests.Response"
        ]
      }
    ],
    "make_cookie@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "name",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Cookie"
        ]
      }
    ],
    "request@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "method",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "path",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "params",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "default",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "custom_cookies",
        "type": [
          "Dict[str, str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "login@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "username",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "password",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "daily_task@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "is_mobile",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "user_playlist@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "uid",
        "type": [
          "Union[str, int]"
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "recommend_resource@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "recommend_playlist@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "total",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "personal_fm@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "fm_like@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "songid",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "arg",
        "name": "like",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "time",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "alg",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "fm_trash@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "songid",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "arg",
        "name": "time",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "alg",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "search@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "keywords",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "stype",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "total",
        "type": [
          "Union[bool, str]"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "new_albums@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "top_playlists@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "category",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "order",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "playlist_catelogs@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "playlist_songlist@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "playlist_id",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "top_artists@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "top_songlist@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "idx",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "artists@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "artist_id",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "get_artist_album@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "artist_id",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "album@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "album_id",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "song_comments@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "music_id",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "total",
        "type": [
          "Union[bool, str]"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "songs_detail@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "ids",
        "type": [
          "List[Union[int, str]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "songs_url@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "ids",
        "type": [
          "List[Union[int, str]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "song_lyric@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "music_id",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "song_tlyric@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "music_id",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "djRadios@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "djprograms@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "radio_id",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "arg",
        "name": "asc",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "alldjprograms@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "radio_id",
        "type": [
          "Union[int, str]"
        ]
      },
      {
        "category": "arg",
        "name": "asc",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "limit",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "get_version@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "dig_info@NetEase@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "data",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "dig_type",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ]
  },
  "catt_subs_info.py": {
    "__init__@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "subs_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "local_ip",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "port",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "url@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_read_subs@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "subs_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_convert_srt_to_webvtt@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "content",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_read_local_subs@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "filename",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_fetch_remote_subs@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ]
  },
  "catt_cli.py": {
    "convert@CattTimeParamType@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "param",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "convert@YtdlOptParamType@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "param",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[str, Union[str, bool]]"
        ]
      }
    ],
    "process_url@global@": [
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "click.Context"
        ]
      },
      {
        "category": "arg",
        "name": "param",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "process_path@global@": [
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "click.Context"
        ]
      },
      {
        "category": "arg",
        "name": "param",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[Path]"
        ]
      }
    ],
    "process_subtitles@global@": [
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "click.Context"
        ]
      },
      {
        "category": "arg",
        "name": "param",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "process_device@global@": [
      {
        "category": "arg",
        "name": "device_desc",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "aliases",
        "type": [
          "Dict[str, str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "fail_if_no_ip@global@": [
      {
        "category": "arg",
        "name": "ipaddr",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "create_server_thread@global@": [
      {
        "category": "arg",
        "name": "filename",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "address",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "port",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "content_type",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "single_req",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Thread"
        ]
      }
    ],
    "cli@global@": [
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "click.Context"
        ]
      },
      {
        "category": "arg",
        "name": "device",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "cast@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "video_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "subtitles",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "force_default",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "random_play",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "no_subs",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "no_playlist",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "ytdl_option",
        "type": [
          "Tuple[Tuple[str, Union[str, bool]], ...]"
        ]
      },
      {
        "category": "arg",
        "name": "seek_to",
        "type": [
          "Optional[int]"
        ]
      },
      {
        "category": "arg",
        "name": "block",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "cast_site@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "add@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "video_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "play_next",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "remove@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "video_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "clear@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "pause@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play_toggle@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "stop@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "force",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "rewind@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "timedesc",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "ffwd@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "timedesc",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "seek@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "timedesc",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "skip@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volume@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "level",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volumeup@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "delta",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volumedown@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "delta",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volumemute@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "muted",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "status@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "info@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "json_output",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "scan@global@": [
      {
        "category": "arg",
        "name": "json_output",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "save@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "path",
        "type": [
          "Optional[Path]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "restore@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "path",
        "type": [
          "Optional[Path]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "write_config@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "set_default@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "del_default@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "set_alias@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "name",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "del_alias@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "get_alias_from_config@global@": [
      {
        "category": "arg",
        "name": "config",
        "type": [
          "ConfigParser"
        ]
      },
      {
        "category": "arg",
        "name": "device",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "get_device_from_settings@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "writeconfig@global@": [
      {
        "category": "arg",
        "name": "config",
        "type": [
          "ConfigParser"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "readconfig@global@": [
      {
        "category": "return",
        "type": [
          "ConfigParser"
        ]
      }
    ],
    "get_config_as_dict@global@": [
      {
        "category": "return",
        "type": [
          "Dict[str, Dict[str, str]]"
        ]
      }
    ],
    "main@global@": [
      {
        "category": "return",
        "type": [
          "Optional[int]"
        ]
      }
    ]
  },
  "catt_cli_gpt4o.py": {
    "convert@CattTimeParamType@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "param",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "click.Context"
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "convert@YtdlOptParamType@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "param",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "click.Context"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[str, Union[bool, str]]"
        ]
      }
    ],
    "process_url@global@": [
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "click.Context"
        ]
      },
      {
        "category": "arg",
        "name": "param",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "process_path@global@": [
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "click.Context"
        ]
      },
      {
        "category": "arg",
        "name": "param",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[Path]"
        ]
      }
    ],
    "process_subtitles@global@": [
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "click.Context"
        ]
      },
      {
        "category": "arg",
        "name": "param",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "process_device@global@": [
      {
        "category": "arg",
        "name": "device_desc",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "aliases",
        "type": [
          "Dict[str, str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "fail_if_no_ip@global@": [
      {
        "category": "arg",
        "name": "ipaddr",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "create_server_thread@global@": [
      {
        "category": "arg",
        "name": "filename",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "address",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "port",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "content_type",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "single_req",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Thread"
        ]
      }
    ],
    "cli@global@": [
      {
        "category": "arg",
        "name": "ctx",
        "type": [
          "click.Context"
        ]
      },
      {
        "category": "arg",
        "name": "device",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "cast@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "video_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "subtitles",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "force_default",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "random_play",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "no_subs",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "no_playlist",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "ytdl_option",
        "type": [
          "Tuple[str, Union[bool, str]]"
        ]
      },
      {
        "category": "arg",
        "name": "seek_to",
        "type": [
          "Optional[int]"
        ]
      },
      {
        "category": "arg",
        "name": "block",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "cast_site@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "add@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "video_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "play_next",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "remove@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "video_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "clear@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "pause@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play_toggle@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "stop@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "force",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "rewind@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "timedesc",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "ffwd@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "timedesc",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "seek@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "timedesc",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "skip@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volume@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "level",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volumeup@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "delta",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volumedown@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "delta",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volumemute@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "muted",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "status@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "info@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "json_output",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "scan@global@": [
      {
        "category": "arg",
        "name": "json_output",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "save@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "path",
        "type": [
          "Optional[Path]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "restore@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "path",
        "type": [
          "Optional[Path]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "write_config@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "set_default@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "del_default@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "set_alias@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "arg",
        "name": "name",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "del_alias@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "get_alias_from_config@global@": [
      {
        "category": "arg",
        "name": "config",
        "type": [
          "configparser.ConfigParser"
        ]
      },
      {
        "category": "arg",
        "name": "device",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "get_device_from_settings@global@": [
      {
        "category": "arg",
        "name": "settings",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "writeconfig@global@": [
      {
        "category": "arg",
        "name": "config",
        "type": [
          "configparser.ConfigParser"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "readconfig@global@": [
      {
        "category": "return",
        "type": [
          "configparser.ConfigParser"
        ]
      }
    ],
    "get_config_as_dict@global@": [
      {
        "category": "return",
        "type": [
          "Dict[str, Dict[str, str]]"
        ]
      }
    ],
    "main@global@": [
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ]
  },
  "databases___init___4.py": {
    "factorial@global@": [
      {
        "category": "arg",
        "name": "n",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "sum_of_list@global@": [
      {
        "category": "arg",
        "name": "numbers",
        "type": [
          "list[int]"
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "greet@global@": [
      {
        "category": "arg",
        "name": "name",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "main@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "easyquotation_helpers.py": {
    "update_stock_codes@global@": [
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "get_stock_codes@global@": [
      {
        "category": "arg",
        "name": "realtime",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "get_stock_type@global@": [
      {
        "category": "arg",
        "name": "stock_code",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ]
  },
  "tests___init___3.py": {},
  "catt___init___gpt4o.py": {},
  "catt_discovery.py": {
    "get_casts@global@": [
      {
        "category": "arg",
        "name": "names",
        "type": [
          "Optional[List[str]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[pychromecast.Chromecast]"
        ]
      }
    ],
    "get_cast_infos@global@": [
      {
        "category": "return",
        "type": [
          "List[pychromecast.CastInfo]"
        ]
      }
    ],
    "get_cast_with_name@global@": [
      {
        "category": "arg",
        "name": "cast_name",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[pychromecast.Chromecast]"
        ]
      }
    ],
    "get_cast_with_ip@global@": [
      {
        "category": "arg",
        "name": "cast_ip",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "port",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[pychromecast.Chromecast]"
        ]
      }
    ],
    "cast_ip_exists@global@": [
      {
        "category": "arg",
        "name": "cast_ip",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "get_cast@global@": [
      {
        "category": "arg",
        "name": "cast_desc",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "pychromecast.Chromecast"
        ]
      }
    ]
  },
  "tests___init___2.py": {},
  "NEMbox_utils.py": {
    "md5@global@": [
      {
        "category": "arg",
        "name": "s",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "mkdir@global@": [
      {
        "category": "arg",
        "name": "path",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "create_dir@global@": [
      {
        "category": "arg",
        "name": "path",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "create_file@global@": [
      {
        "category": "arg",
        "name": "path",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "default",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "uniq@global@": [
      {
        "category": "arg",
        "name": "arr",
        "type": [
          "List[Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "utf8_data_to_file@global@": [
      {
        "category": "arg",
        "name": "f",
        "type": [
          "IO[str]"
        ]
      },
      {
        "category": "arg",
        "name": "data",
        "type": [
          "Union[str, bytes]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "notify_command_osx@global@": [
      {
        "category": "arg",
        "name": "msg",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "msg_type",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "duration_time",
        "type": [
          "Optional[int]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Union[str, bytes]]"
        ]
      }
    ],
    "notify_command_linux@global@": [
      {
        "category": "arg",
        "name": "msg",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "duration_time",
        "type": [
          "Optional[int]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Union[str, bytes]]"
        ]
      }
    ],
    "notify@global@": [
      {
        "category": "arg",
        "name": "msg",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "msg_type",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "duration_time",
        "type": [
          "Optional[int]"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ]
  },
  "tests_test_database_url.py": {
    "test_database_url_repr@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_database_url_properties@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_database_url_escape@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_database_url_constructor@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_database_url_options@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_replace_database_url_components@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "tests_test_databases.py": {
    "process_bind_param@MyEpochType@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "datetime.date"
        ]
      },
      {
        "category": "arg",
        "name": "dialect",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "process_result_value@MyEpochType@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "dialect",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "datetime.date"
        ]
      }
    ],
    "create_test_database@global@": [
      {
        "category": "return",
        "type": [
          "Generator[None, None, None]"
        ]
      }
    ],
    "async_adapter@global@": [
      {
        "category": "arg",
        "name": "wrapped_func",
        "type": [
          "Callable[..., Awaitable[Any]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Callable[..., Any]"
        ]
      }
    ],
    "test_global_connection_is_initialized_lazily@global@": [
      {
        "category": "arg",
        "name": "database_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "run_sync@global@": [
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "insert_independently@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "delete_independently@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "tests_test_sina.py": {
    "setUp@TestSina@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_extract_stock_name@TestSina@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_skip_empty_quotation_stock@TestSina@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "catt_subs_info_gpt4o.py": {
    "__init__@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "subs_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "local_ip",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "port",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "url@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_read_subs@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "subs_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_convert_srt_to_webvtt@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "content",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_read_local_subs@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "filename",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_fetch_remote_subs@SubsInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ]
  },
  "databases_importer.py": {
    "import_from_string@global@": [
      {
        "category": "arg",
        "name": "import_str",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Any"
        ]
      }
    ]
  },
  "easyquotation_api.py": {
    "use@global@": [
      {
        "category": "arg",
        "name": "source",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Union[sina.Sina, jsl.Jsl, tencent.Tencent, boc.Boc, timekline.TimeKline, daykline.Daykline, hkquote.HKQuote]"
        ]
      }
    ]
  },
  "databases___init___1.py": {},
  "tests_raise_import_error.py": {},
  "realcc_tests_test_procedure_gpt4o.py": {
    "subp_run@global@": [
      {
        "category": "arg",
        "name": "cmd",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "arg",
        "name": "allow_failure",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "subprocess.CompletedProcess[str]"
        ]
      }
    ],
    "__init__@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "desc",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "cmd_args",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "arg",
        "name": "sleep",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "should_fail",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "substring",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "time_test",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "check_data",
        "type": [
          "Optional[Tuple[Any, Any]]"
        ]
      },
      {
        "category": "arg",
        "name": "check_err",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "set_cmd_base@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "base",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_get_val@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "key",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "_should_fail_test@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "_failure_test@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "_regular_test@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "time_margin",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "run@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "run_tests@global@": [
      {
        "category": "arg",
        "name": "standard",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "audio",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "ultra",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "cli@global@": [
      {
        "category": "arg",
        "name": "standard",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "audio",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "ultra",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "catt_util.py": {
    "echo_warning@global@": [
      {
        "category": "arg",
        "name": "msg",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "echo_json@global@": [
      {
        "category": "arg",
        "name": "data_dict",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "human_time@global@": [
      {
        "category": "arg",
        "name": "seconds",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "echo_status@global@": [
      {
        "category": "arg",
        "name": "status",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "guess_mime@global@": [
      {
        "category": "arg",
        "name": "path",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "hunt_subtitles@global@": [
      {
        "category": "arg",
        "name": "video",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "create_temp_file@global@": [
      {
        "category": "arg",
        "name": "content",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "get_local_ip@global@": [
      {
        "category": "arg",
        "name": "host",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "is_ipaddress@global@": [
      {
        "category": "arg",
        "name": "device",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ]
  },
  "NEMbox_logger.py": {
    "getLogger@global@": [
      {
        "category": "arg",
        "name": "name",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Logger"
        ]
      }
    ]
  },
  "easyquotation_hkquote.py": {
    "stock_api@HKQuote@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_gen_stock_prefix@HKQuote@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "stock_codes",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "format_response_data@HKQuote@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "rep_data",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Dict[str, Any]]"
        ]
      }
    ]
  },
  "tests_test_importer.py": {
    "test_invalid_format@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_invalid_module@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_invalid_attr@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_internal_import_error@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_valid_import@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "NEMbox_const.py": {},
  "easyquotation___init__.py": {},
  "tests_test_internet.py": {
    "test_pagination@global@": [
      {
        "category": "arg",
        "name": "url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_async_run@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "NEMbox_scrollstring.py": {
    "__init__@scrollstring@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "content",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "START",
        "type": [
          "float"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "update@scrollstring@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__repr__@scrollstring@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "truelen@global@": [
      {
        "category": "arg",
        "name": "string",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "truelen_cut@global@": [
      {
        "category": "arg",
        "name": "string",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "length",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ]
  },
  "easyquotation_timekline.py": {
    "stock_api@TimeKline@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_gen_stock_prefix@TimeKline@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "stock_codes",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "_fetch_stock_data@TimeKline@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "stock_list",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Tuple[str, str]]"
        ]
      }
    ],
    "format_response_data@TimeKline@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "rep_data",
        "type": [
          "List[Tuple[str, str]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Dict[str, Union[str, List[List[str]]]]]"
        ]
      }
    ]
  },
  "easyquotation_tencent.py": {
    "stock_api@Tencent@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "format_response_data@Tencent@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "rep_data",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "arg",
        "name": "prefix",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Dict[str, Any]]"
        ]
      }
    ],
    "_safe_acquire_float@Tencent@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "stock",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "arg",
        "name": "idx",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[float]"
        ]
      }
    ],
    "_safe_float@Tencent@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "s",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[float]"
        ]
      }
    ]
  },
  "easyquotation_boc.py": {
    "get_exchange_rate@Boc@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "currency",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, str]"
        ]
      }
    ]
  },
  "easyquotation_daykline.py": {
    "stock_api@DayKline@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_gen_stock_prefix@DayKline@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "stock_codes",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "arg",
        "name": "day",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "format_response_data@DayKline@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "rep_data",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ]
  },
  "NEMbox_ui.py": {
    "break_substr@global@": [
      {
        "category": "arg",
        "name": "s",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "start",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "max_len",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "break_str@global@": [
      {
        "category": "arg",
        "name": "s",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "start",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "max_len",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "__init__@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "addstr@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "update_margin@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "build_playinfo@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "song_name",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "artist",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "album_name",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "quality",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "start",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "pause",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "update_lyrics@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "now_playing",
        "type": [
          "float"
        ]
      },
      {
        "category": "arg",
        "name": "lyrics",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "arg",
        "name": "tlyrics",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "build_process_bar@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "song",
        "type": [
          "dict"
        ]
      },
      {
        "category": "arg",
        "name": "now_playing",
        "type": [
          "float"
        ]
      },
      {
        "category": "arg",
        "name": "total_length",
        "type": [
          "float"
        ]
      },
      {
        "category": "arg",
        "name": "playing_flag",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "playing_mode",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "build_loading@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "build_submenu@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "data",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "build_menu@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "datatype",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "title",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "datalist",
        "type": [
          "List[Any]"
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "index",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "step",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "start",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "build_login@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[str, str]"
        ]
      }
    ],
    "build_login_bar@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "build_login_error@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "build_search_error@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "build_timing@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bytes"
        ]
      }
    ],
    "get_account@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "get_password@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "get_param@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "prompt_string",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "update_size@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "update_space@Ui@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "get_timestap@global@": [
      {
        "category": "arg",
        "name": "lyric_line",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "get_lyric_time@global@": [
      {
        "category": "arg",
        "name": "lyric_line",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "datetime.timedelta"
        ]
      }
    ],
    "strip_timestap@global@": [
      {
        "category": "arg",
        "name": "lyric_line",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "append_translation@global@": [
      {
        "category": "arg",
        "name": "translated_lyric",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "origin_lyric",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ]
  },
  "NEMbox_singleton.py": {
    "__new__@Singleton@": [
      {
        "category": "arg",
        "name": "cls",
        "type": [
          "Type[T]"
        ]
      },
      {
        "category": "return",
        "type": [
          "T"
        ]
      }
    ]
  },
  "NEMbox_cmd_parser.py": {
    "coroutine@global@": [
      {
        "category": "arg",
        "name": "func",
        "type": [
          "Callable[..., Generator[Any, Any, Any]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Callable[..., Generator[Any, Any, Any]]"
        ]
      }
    ],
    "_cmd_parser@global@": [
      {
        "category": "return",
        "type": [
          "Generator[int, int, List[int]]"
        ]
      }
    ],
    "cmd_parser@global@": [
      {
        "category": "arg",
        "name": "results",
        "type": [
          "List[int]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Generator[List[int], int, None]"
        ]
      }
    ],
    "_erase_coroutine@global@": [
      {
        "category": "return",
        "type": [
          "Generator[int, int, List[int]]"
        ]
      }
    ],
    "erase_coroutine@global@": [
      {
        "category": "arg",
        "name": "erase_cmd_list",
        "type": [
          "List[int]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Generator[List[int], int, None]"
        ]
      }
    ],
    "parse_keylist@global@": [
      {
        "category": "arg",
        "name": "keylist",
        "type": [
          "List[int]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[Union[int, Tuple[int, int]]]"
        ]
      }
    ],
    "main@global@": [
      {
        "category": "arg",
        "name": "data",
        "type": [
          "List[int]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "primer@global@": [
      {
        "category": "return",
        "type": [
          "Generator[Any, Any, Any]"
        ]
      }
    ]
  },
  "NEMbox_config.py": {
    "__init__@Config@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "generate_config_file@Config@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "save_config_file@Config@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "get@Config@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "name",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ]
  },
  "catt_http_server_gpt4o.py": {
    "copy_byte_range@global@": [
      {
        "category": "arg",
        "name": "infile",
        "type": [
          "BinaryIO"
        ]
      },
      {
        "category": "arg",
        "name": "outfile",
        "type": [
          "BinaryIO"
        ]
      },
      {
        "category": "arg",
        "name": "start",
        "type": [
          "Optional[int]"
        ]
      },
      {
        "category": "arg",
        "name": "stop",
        "type": [
          "Optional[int]"
        ]
      },
      {
        "category": "arg",
        "name": "bufsize",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "parse_byte_range@global@": [
      {
        "category": "arg",
        "name": "byte_range",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[Optional[int], Optional[int]]"
        ]
      }
    ],
    "serve_file@global@": [
      {
        "category": "arg",
        "name": "filename",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "address",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "port",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "content_type",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "single_req",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "format_size@FileHandler@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "size",
        "type": [
          "float"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[float, str]"
        ]
      }
    ],
    "log_message@FileHandler@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "format",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "do_GET@FileHandler@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "tests___init__.py": {},
  "NEMbox_menu.py": {
    "carousel@global@": [
      {
        "category": "arg",
        "name": "left",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "right",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "x",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "__init__@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "user@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "account@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "md5pass@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "userid@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "username@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "login@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "in_place_search@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[List[Any], str]"
        ]
      }
    ],
    "search@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "category",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "change_term@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "signum",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "frame",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "send_kill@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "signum",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "fram",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "update_alert@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "version",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "check_version@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Union[str, int]"
        ]
      }
    ],
    "start_fork@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "version",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "next_song@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "previous_song@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "prev_key_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "next_key_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "up_key_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "down_key_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "space_key_event_in_search_result@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "space_key_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "like_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "back_page_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "enter_page_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "album_key_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "num_jump_key_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "digit_key_song_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "time_key_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "down_page_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "up_page_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "resize_key_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "build_menu_processbar@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "quit_event@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "stop@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "start@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "dispatch_enter@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "idx",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "Union[bool, None]"
        ]
      }
    ],
    "show_playing_song@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "song_changed_callback@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "fm_callback@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "request_api@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "func",
        "type": [
          "Callable"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "get_new_fm@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "List[Any]"
        ]
      }
    ],
    "choice_channel@Menu@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "idx",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "easyquotation_sina.py": {
    "stock_api@Sina@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_get_headers@Sina@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, str]"
        ]
      }
    ],
    "format_response_data@Sina@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "rep_data",
        "type": [
          "Iterable[str]"
        ]
      },
      {
        "category": "arg",
        "name": "prefix",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Dict[str, Union[str, int, float]]]"
        ]
      }
    ]
  },
  "NEMbox___init__.py": {
    "create_config@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "NEMbox_encrypt.py": {
    "encrypted_id@global@": [
      {
        "category": "arg",
        "name": "id",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "encrypted_request@global@": [
      {
        "category": "arg",
        "name": "text",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, str]"
        ]
      }
    ],
    "aes@global@": [
      {
        "category": "arg",
        "name": "text",
        "type": [
          "bytes"
        ]
      },
      {
        "category": "arg",
        "name": "key",
        "type": [
          "bytes"
        ]
      },
      {
        "category": "return",
        "type": [
          "bytes"
        ]
      }
    ],
    "rsa@global@": [
      {
        "category": "arg",
        "name": "text",
        "type": [
          "bytes"
        ]
      },
      {
        "category": "arg",
        "name": "pubkey",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "modulus",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "create_key@global@": [
      {
        "category": "arg",
        "name": "size",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "bytes"
        ]
      }
    ]
  },
  "databases_core.py": {
    "__init__@Database@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_current_task@Database@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "asyncio.Task"
        ]
      }
    ],
    "_connection@Database@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "connection",
        "type": [
          "typing.Optional['Connection']"
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Optional['Connection']"
        ]
      }
    ],
    "connection@Database@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'Connection'"
        ]
      }
    ],
    "transaction@Database@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'Transaction'"
        ]
      }
    ],
    "force_rollback@Database@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Generator[None, None, None]"
        ]
      }
    ],
    "_get_backend@Database@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "__init__@Connection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "database",
        "type": [
          "Database"
        ]
      },
      {
        "category": "arg",
        "name": "backend",
        "type": [
          "DatabaseBackend"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "transaction@Connection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'Transaction'"
        ]
      }
    ],
    "raw_connection@Connection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Any"
        ]
      }
    ],
    "_build_query@Connection@": [
      {
        "category": "arg",
        "name": "query",
        "type": [
          "typing.Union[str, ClauseElement]"
        ]
      },
      {
        "category": "arg",
        "name": "values",
        "type": [
          "typing.Optional[dict[str, typing.Any]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "ClauseElement"
        ]
      }
    ],
    "__init__@Transaction@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "connection_callable",
        "type": [
          "typing.Callable[[], Connection]"
        ]
      },
      {
        "category": "arg",
        "name": "force_rollback",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_connection@Transaction@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Connection"
        ]
      }
    ],
    "_transaction@Transaction@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "transaction",
        "type": [
          "typing.Optional[TransactionBackend]"
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Optional[TransactionBackend]"
        ]
      }
    ],
    "__await__@Transaction@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Generator[typing.Any, None, 'Transaction']"
        ]
      }
    ],
    "__call__@Transaction@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "func",
        "type": [
          "_CallableType"
        ]
      },
      {
        "category": "return",
        "type": [
          "_CallableType"
        ]
      }
    ],
    "__bool__@_EmptyNetloc@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "__init__@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          "typing.Union[str, 'DatabaseURL']"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "components@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "SplitResult"
        ]
      }
    ],
    "scheme@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "dialect@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "driver@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "userinfo@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Optional[bytes]"
        ]
      }
    ],
    "username@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Optional[str]"
        ]
      }
    ],
    "password@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Optional[str]"
        ]
      }
    ],
    "hostname@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Optional[str]"
        ]
      }
    ],
    "port@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Optional[int]"
        ]
      }
    ],
    "netloc@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "database@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "options@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "dict[str, str]"
        ]
      }
    ],
    "replace@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'DatabaseURL'"
        ]
      }
    ],
    "obscure_password@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "__str__@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "__repr__@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "__eq__@DatabaseURL@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "other",
        "type": [
          "object"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "connection_callable@global@": [
      {
        "category": "return",
        "type": [
          "'Connection'"
        ]
      }
    ]
  },
  "tests_test_catt.py": {
    "ignore_tmr_failure@global@": [
      {
        "category": "arg",
        "name": "func",
        "type": [
          "F"
        ]
      },
      {
        "category": "return",
        "type": [
          "F"
        ]
      }
    ],
    "test_stream_info_youtube_video@TestThings@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_stream_info_youtube_playlist@TestThings@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_stream_info_other_video@TestThings@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "wrapper@global@": [
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ]
  },
  "setup_1.py": {},
  "easyquotation_basequotation.py": {
    "stock_api@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "__init__@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "gen_stock_list@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "stock_codes",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "_gen_stock_prefix@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "stock_codes",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "load_stock_codes@BaseQuotation@": [
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "all@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "all_market@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "stocks@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "stock_codes",
        "type": [
          "Union[str, List[str]]"
        ]
      },
      {
        "category": "arg",
        "name": "prefix",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "real@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "stock_codes",
        "type": [
          "Union[str, List[str]]"
        ]
      },
      {
        "category": "arg",
        "name": "prefix",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "market_snapshot@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "prefix",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "get_stocks_by_range@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "params",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "_get_headers@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, str]"
        ]
      }
    ],
    "get_stock_data@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "stock_list",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "_fetch_stock_data@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "stock_list",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "format_response_data@BaseQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "rep_data",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ]
  },
  "databases___init__.py": {},
  "easyquotation_jsl.py": {
    "__init__@Jsl@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "set_cookie@Jsl@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "cookie",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_get_headers@Jsl@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, str]"
        ]
      }
    ],
    "formatfundajson@Jsl@": [
      {
        "category": "arg",
        "name": "fundajson",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[Any, Any]"
        ]
      }
    ],
    "formatfundbjson@Jsl@": [
      {
        "category": "arg",
        "name": "fundbjson",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[Any, Any]"
        ]
      }
    ],
    "formatetfindexjson@Jsl@": [
      {
        "category": "arg",
        "name": "fundbjson",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[Any, Any]"
        ]
      }
    ],
    "formatjisilujson@Jsl@": [
      {
        "category": "arg",
        "name": "data",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[Any, Any]"
        ]
      }
    ],
    "percentage2float@Jsl@": [
      {
        "category": "arg",
        "name": "per",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "float"
        ]
      }
    ],
    "funda@Jsl@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "fields",
        "type": [
          "Optional[List[str]]"
        ]
      },
      {
        "category": "arg",
        "name": "min_volume",
        "type": [
          "float"
        ]
      },
      {
        "category": "arg",
        "name": "min_discount",
        "type": [
          "float"
        ]
      },
      {
        "category": "arg",
        "name": "ignore_nodown",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "forever",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[Any, Any]"
        ]
      }
    ],
    "fundm@Jsl@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[Any, Any]"
        ]
      }
    ],
    "fundb@Jsl@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "fields",
        "type": [
          "Optional[List[str]]"
        ]
      },
      {
        "category": "arg",
        "name": "min_volume",
        "type": [
          "float"
        ]
      },
      {
        "category": "arg",
        "name": "min_discount",
        "type": [
          "float"
        ]
      },
      {
        "category": "arg",
        "name": "forever",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[Any, Any]"
        ]
      }
    ],
    "fundarb@Jsl@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "jsl_username",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "jsl_password",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "avolume",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "bvolume",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "ptype",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[Any, Any]"
        ]
      }
    ],
    "etfindex@Jsl@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "index_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "min_volume",
        "type": [
          "float"
        ]
      },
      {
        "category": "arg",
        "name": "max_discount",
        "type": [
          "Optional[Union[str, float]]"
        ]
      },
      {
        "category": "arg",
        "name": "min_discount",
        "type": [
          "Optional[Union[str, float]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[Any, Any]"
        ]
      }
    ],
    "qdii@Jsl@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "min_volume",
        "type": [
          "float"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[Any, Any]"
        ]
      }
    ],
    "cb@Jsl@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "min_volume",
        "type": [
          "float"
        ]
      },
      {
        "category": "arg",
        "name": "cookie",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[Any, Any]"
        ]
      }
    ]
  },
  "realcc_tests_test_procedure.py": {
    "subp_run@global@": [
      {
        "category": "arg",
        "name": "cmd",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "arg",
        "name": "allow_failure",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "subprocess.CompletedProcess[str]"
        ]
      }
    ],
    "__init__@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "desc",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "cmd_args",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "arg",
        "name": "sleep",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "should_fail",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "substring",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "time_test",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "check_data",
        "type": [
          "Optional[Tuple[Any, Any]]"
        ]
      },
      {
        "category": "arg",
        "name": "check_err",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "set_cmd_base@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "base",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_get_val@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "key",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "_should_fail_test@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "_failure_test@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "_regular_test@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "time_margin",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "run@CattTest@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "run_tests@global@": [
      {
        "category": "arg",
        "name": "standard",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "audio",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "ultra",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "cli@global@": [
      {
        "category": "arg",
        "name": "standard",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "audio",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "ultra",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "tests_test_connection_options.py": {
    "test_postgres_pool_size@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_postgres_explicit_pool_size@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_postgres_ssl@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_postgres_ssl_verify_full@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_postgres_explicit_ssl@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_postgres_explicit_ssl_verify_full@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_postgres_no_extra_options@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_postgres_password_as_callable@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_mysql_pool_size@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_mysql_unix_socket@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_mysql_explicit_pool_size@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_mysql_ssl@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_mysql_explicit_ssl@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_mysql_pool_recycle@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_asyncmy_pool_size@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_asyncmy_unix_socket@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_asyncmy_explicit_pool_size@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_asyncmy_ssl@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_asyncmy_explicit_ssl@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_asyncmy_pool_recycle@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_aiopg_pool_size@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_aiopg_explicit_pool_size@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_aiopg_ssl@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_aiopg_explicit_ssl@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "gen_password@global@": [
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ]
  },
  "easyquotation_boc_gpt4o.py": {
    "get_exchange_rate@Boc@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "currency",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, str]"
        ]
      }
    ]
  },
  "databases_interfaces.py": {
    "connection@DatabaseBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'ConnectionBackend'"
        ]
      }
    ],
    "transaction@ConnectionBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'TransactionBackend'"
        ]
      }
    ],
    "raw_connection@ConnectionBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "_mapping@Record@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Mapping[str, Any]"
        ]
      }
    ],
    "__getitem__@Record@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "key",
        "type": [
          "Union[int, slice, str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ]
  },
  "docs_conf.py": {},
  "tests_test_timekline.py": {
    "setUp@TestTimeklineQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_fetch_stock_data@TestTimeklineQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "mock_super_fetch",
        "type": [
          "mock.MagicMock"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_format_response_data@TestTimeklineQuotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "setup.py": {
    "get_version@global@": [
      {
        "category": "arg",
        "name": "package",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "get_long_description@global@": [
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "get_packages@global@": [
      {
        "category": "arg",
        "name": "package",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ]
  },
  "setup_2.py": {
    "status@UploadCommand@": [
      {
        "category": "arg",
        "name": "s",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "initialize_options@UploadCommand@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "finalize_options@UploadCommand@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "run@UploadCommand@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "catt_stream_info.py": {
    "__init__@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "video_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "cast_info",
        "type": [
          "Optional[Any]"
        ]
      },
      {
        "category": "arg",
        "name": "ytdl_options",
        "type": [
          "Optional[Dict[str, Any]]"
        ]
      },
      {
        "category": "arg",
        "name": "throw_ytdl_dl_errs",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "is_remote_file@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "_is_direct_link@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "is_playlist@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "is_playlist_with_active_entry@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "extractor@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "video_title@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "video_url@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "video_id@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "video_thumbnail@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "guessed_content_type@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "guessed_content_category@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "playlist_length@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[int]"
        ]
      }
    ],
    "playlist_all_ids@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[List[str]]"
        ]
      }
    ],
    "playlist_title@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "playlist_id@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[str]"
        ]
      }
    ],
    "set_playlist_entry@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "number",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_get_stream_preinfo@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "video_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "_get_stream_info@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "preinfo",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "_get_stream_url@StreamInfo@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "info",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ]
  },
  "databases_psycopg.py": {
    "construct_params@APGCompiler_psycopg2@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "_exec_default@APGCompiler_psycopg2@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "default",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ]
  },
  "catt___init__.py": {},
  "databases_psycopg_1.py": {
    "bind_processor@PGNumeric@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "dialect",
        "type": [
          "Dialect"
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Optional[typing.Callable[[typing.Any], typing.Any]]"
        ]
      }
    ],
    "result_processor@PGNumeric@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "dialect",
        "type": [
          "Dialect"
        ]
      },
      {
        "category": "arg",
        "name": "coltype",
        "type": [
          "typing.Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Optional[typing.Callable[[typing.Any], typing.Any]]"
        ]
      }
    ]
  },
  "NEMbox_kill_thread.py": {
    "_async_raise@global@": [
      {
        "category": "arg",
        "name": "tid",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "exctype",
        "type": [
          "Type[BaseException]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "stop_thread@global@": [
      {
        "category": "arg",
        "name": "thread",
        "type": [
          "threading.Thread"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "tests_test_easyquotation.py": {
    "test_stock_code_with_prefix@TestEasyquotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_all@TestEasyquotation@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "setUp@TestHqouteQuotatin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_format_response_data@TestHqouteQuotatin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "setUp@TestDayklineQuotatin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_format_response_data@TestDayklineQuotatin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "databases_records.py": {
    "__init__@Record@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "row",
        "type": [
          "SQLRow"
        ]
      },
      {
        "category": "arg",
        "name": "result_columns",
        "type": [
          "typing.Iterable[typing.Tuple[str, typing.Any, typing.Any, TypeEngine]]"
        ]
      },
      {
        "category": "arg",
        "name": "dialect",
        "type": [
          "Dialect"
        ]
      },
      {
        "category": "arg",
        "name": "column_maps",
        "type": [
          "typing.Tuple[typing.Dict[str, typing.Tuple[int, TypeEngine]], typing.Dict[int, typing.Tuple[int, TypeEngine]], typing.Dict[str, typing.Tuple[int, TypeEngine]]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_mapping@Record@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Mapping"
        ]
      }
    ],
    "keys@Record@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.KeysView"
        ]
      }
    ],
    "values@Record@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.ValuesView"
        ]
      }
    ],
    "__getitem__@Record@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "key",
        "type": [
          "typing.Union[str, int, Column]"
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Any"
        ]
      }
    ],
    "__iter__@Record@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Iterator"
        ]
      }
    ],
    "__len__@Record@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "__getattr__@Record@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "name",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Any"
        ]
      }
    ],
    "__getitem__@Row@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "key",
        "type": [
          "typing.Union[int, str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Any"
        ]
      }
    ],
    "keys@Row@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.KeysView"
        ]
      }
    ],
    "values@Row@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.ValuesView"
        ]
      }
    ],
    "create_column_maps@global@": [
      {
        "category": "arg",
        "name": "result_columns",
        "type": [
          "typing.Iterable[typing.Tuple[str, typing.Any, typing.Any, TypeEngine]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "typing.Tuple[typing.Dict[str, typing.Tuple[int, TypeEngine]], typing.Dict[int, typing.Tuple[int, TypeEngine]], typing.Dict[str, typing.Tuple[int, TypeEngine]]]"
        ]
      }
    ]
  },
  "databases_sqlite.py": {
    "__init__@SQLiteBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "database_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "connection@SQLiteBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'SQLiteConnection'"
        ]
      }
    ],
    "__init__@SQLitePool@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          "DatabaseURL"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@CompilationContext@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "context",
        "type": [
          "ExecutionContext"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@SQLiteConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "pool",
        "type": [
          "SQLitePool"
        ]
      },
      {
        "category": "arg",
        "name": "dialect",
        "type": [
          "Dialect"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "transaction@SQLiteConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'SQLiteTransaction'"
        ]
      }
    ],
    "_compile@SQLiteConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "query",
        "type": [
          "ClauseElement"
        ]
      },
      {
        "category": "return",
        "type": [
          "t.Tuple[str, t.List[t.Any], t.Optional[t.Any], CompilationContext]"
        ]
      }
    ],
    "raw_connection@SQLiteConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "aiosqlite.Connection"
        ]
      }
    ],
    "__init__@SQLiteTransaction@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "connection",
        "type": [
          "SQLiteConnection"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "databases_postgres.py": {
    "__init__@PostgresBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "database_url",
        "type": [
          "Union[str, DatabaseURL]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_get_dialect@PostgresBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dialect"
        ]
      }
    ],
    "_get_connection_kwargs@PostgresBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "connection@PostgresBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'PostgresConnection'"
        ]
      }
    ],
    "__init__@PostgresConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "database",
        "type": [
          "PostgresBackend"
        ]
      },
      {
        "category": "arg",
        "name": "dialect",
        "type": [
          "Dialect"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "transaction@PostgresConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'PostgresTransaction'"
        ]
      }
    ],
    "_compile@PostgresConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "query",
        "type": [
          "ClauseElement"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[str, List[Any], Optional[Any]]"
        ]
      }
    ],
    "raw_connection@PostgresConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "AsyncpgConnection"
        ]
      }
    ],
    "__init__@PostgresTransaction@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "connection",
        "type": [
          "PostgresConnection"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "databases_mysql.py": {
    "__init__@MySQLBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "database_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_get_connection_kwargs@MySQLBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "connection@MySQLBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'MySQLConnection'"
        ]
      }
    ],
    "__init__@CompilationContext@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "context",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@MySQLConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "database",
        "type": [
          "MySQLBackend"
        ]
      },
      {
        "category": "arg",
        "name": "dialect",
        "type": [
          "Dialect"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "transaction@MySQLConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'MySQLTransaction'"
        ]
      }
    ],
    "_compile@MySQLConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "query",
        "type": [
          "ClauseElement"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[str, Dict[str, Any], Any, CompilationContext]"
        ]
      }
    ],
    "raw_connection@MySQLConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "aiomysql.Connection"
        ]
      }
    ],
    "__init__@MySQLTransaction@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "connection",
        "type": [
          "MySQLConnection"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "databases_asyncmy.py": {
    "__init__@AsyncMyBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "database_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_get_connection_kwargs@AsyncMyBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "dict[str, typing.Any]"
        ]
      }
    ],
    "connection@AsyncMyBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'AsyncMyConnection'"
        ]
      }
    ],
    "__init__@CompilationContext@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "context",
        "type": [
          "ExecutionContext"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@AsyncMyConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "database",
        "type": [
          "AsyncMyBackend"
        ]
      },
      {
        "category": "arg",
        "name": "dialect",
        "type": [
          "Dialect"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "transaction@AsyncMyConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'AsyncMyTransaction'"
        ]
      }
    ],
    "_compile@AsyncMyConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "query",
        "type": [
          "ClauseElement"
        ]
      },
      {
        "category": "return",
        "type": [
          "tuple[str, dict[str, typing.Any], typing.Optional[typing.Any], CompilationContext]"
        ]
      }
    ],
    "raw_connection@AsyncMyConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "asyncmy.Connection"
        ]
      }
    ],
    "__init__@AsyncMyTransaction@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "connection",
        "type": [
          "AsyncMyConnection"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "tests_test_api.py": {
    "test_api@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "tests_test_integration.py": {
    "create_test_database@global@": [
      {
        "category": "return",
        "type": [
          "Generator[None, None, None]"
        ]
      }
    ],
    "get_app@global@": [
      {
        "category": "arg",
        "name": "database_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Starlette"
        ]
      }
    ],
    "test_integration@global@": [
      {
        "category": "arg",
        "name": "database_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "catt_http_server.py": {
    "copy_byte_range@global@": [
      {
        "category": "arg",
        "name": "infile",
        "type": [
          "IO[bytes]"
        ]
      },
      {
        "category": "arg",
        "name": "outfile",
        "type": [
          "IO[bytes]"
        ]
      },
      {
        "category": "arg",
        "name": "start",
        "type": [
          "Optional[int]"
        ]
      },
      {
        "category": "arg",
        "name": "stop",
        "type": [
          "Optional[int]"
        ]
      },
      {
        "category": "arg",
        "name": "bufsize",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "parse_byte_range@global@": [
      {
        "category": "arg",
        "name": "byte_range",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[Optional[int], Optional[int]]"
        ]
      }
    ],
    "serve_file@global@": [
      {
        "category": "arg",
        "name": "filename",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "address",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "port",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "content_type",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "single_req",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "format_size@FileHandler@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "size",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[float, str]"
        ]
      }
    ],
    "log_message@FileHandler@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "format",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "do_GET@FileHandler@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "tests___init___1.py": {
    "greet@global@": [
      {
        "category": "arg",
        "name": "name",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "main@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "NEMbox_cache.py": {
    "__init__@Cache@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_is_cache_successful@Cache@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "_kill_all@Cache@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "start_download@Cache@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[bool]"
        ]
      }
    ],
    "add@Cache@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "song_id",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "song_name",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "artist",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "onExit",
        "type": [
          "OnExitType"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "quit@Cache@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "succ@global@": [
      {
        "category": "arg",
        "name": "x",
        "type": [
          "Optional[subprocess.Popen]"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "_kill@global@": [
      {
        "category": "arg",
        "name": "p",
        "type": [
          "Optional[subprocess.Popen]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "examples_accidents.py": {
    "ouch@global@": [
      {
        "category": "arg",
        "name": "device",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "NEMbox_player.py": {
    "__init__@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "info@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "songs@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Dict[str, Any]]"
        ]
      }
    ],
    "index@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "list@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "order@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "List[int]"
        ]
      }
    ],
    "mode@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "is_ordered_mode@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "is_ordered_loop_mode@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "is_single_loop_mode@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "is_random_mode@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "is_random_loop_mode@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "config_notifier@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "config_mpg123@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "List[str]"
        ]
      }
    ],
    "current_song@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "playing_id@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "playing_name@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "is_empty@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "is_index_valid@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "notify_playing@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "notify_copyright_issue@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "change_mode@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "step",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "build_playinfo@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "add_songs@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "songs",
        "type": [
          "List[Dict[str, Any]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "refresh_urls@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "stop@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "tune_volume@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "up",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "switch@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "run_mpg123@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "on_exit",
        "type": [
          "Callable[[], Any]"
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "expires",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "get_time",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "download_lyric@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "is_transalted",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "download_song@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "song_id",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "song_name",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "artist",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "start_playing@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "on_exit",
        "type": [
          "Callable[[], Any]"
        ]
      },
      {
        "category": "arg",
        "name": "args",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "threading.Thread"
        ]
      }
    ],
    "replay@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "shuffle_order@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "new_player_list@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "type",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "title",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "datalist",
        "type": [
          "List[Dict[str, Any]]"
        ]
      },
      {
        "category": "arg",
        "name": "offset",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "append_songs@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "datalist",
        "type": [
          "List[Dict[str, Any]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play_or_pause@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "idx",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "switch_flag",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_swap_song@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_need_to_shuffle@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "next_idx@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "next@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "prev_idx@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "prev@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "shuffle@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volume_up@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volume_down@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "update_size@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "cache_song@Player@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "song_id",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "song_name",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "artist",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "song_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "write_path@global@": [
      {
        "category": "arg",
        "name": "song_id_inner",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "path",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "on_exit@global@": [
      {
        "category": "arg",
        "name": "song_id_inner",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "path",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "NEMbox_osdlyrics.py": {
    "stop_lyrics_process@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "show_lyrics_new_process@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@Lyrics@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "initUI@Lyrics@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "mousePressEvent@Lyrics@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "event",
        "type": [
          "QtGui.QMouseEvent"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "mouseMoveEvent@Lyrics@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "event",
        "type": [
          "QtGui.QMouseEvent"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "wheelEvent@Lyrics@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "event",
        "type": [
          "QtGui.QWheelEvent"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "paintEvent@Lyrics@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "event",
        "type": [
          "QtGui.QPaintEvent"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "drawText@Lyrics@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "event",
        "type": [
          "QtGui.QPaintEvent"
        ]
      },
      {
        "category": "arg",
        "name": "qp",
        "type": [
          "QtGui.QPainter"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "setText@Lyrics@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "text",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@LyricsAdapter@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "connection",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "object_path",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "refresh_lyrics@LyricsAdapter@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "text",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "exit@LyricsAdapter@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "show_lyrics@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "databases___init___2.py": {},
  "NEMbox_storage.py": {
    "__init__@Storage@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "login@Storage@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "username",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "password",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "userid",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "nickname",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "logout@Storage@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "load@Storage@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "save@Storage@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "NEMbox___main__.py": {
    "start@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "databases___init___3.py": {
    "greet@global@": [
      {
        "category": "arg",
        "name": "name",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "add@global@": [
      {
        "category": "arg",
        "name": "a",
        "type": [
          "int"
        ]
      },
      {
        "category": "arg",
        "name": "b",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "int"
        ]
      }
    ],
    "main@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "tests_test_requests_html.py": {
    "get@global@": [
      {
        "category": "return",
        "type": [
          "Response"
        ]
      }
    ],
    "async_get@global@": [
      {
        "category": "arg",
        "name": "event_loop",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "Callable[[], Awaitable[Response]]"
        ]
      }
    ],
    "test_file_get@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_class_seperation@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_css_selector@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_containing@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_attrs@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_links@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_search@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_xpath@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_html_loading@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_anchor_links@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_absolute_links@global@": [
      {
        "category": "arg",
        "name": "url",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "link",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "expected",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_parser@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_render@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_bare_render@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_bare_js_eval@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_browser_session@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "test_browser_process@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "catt_error.py": {
    "__init__@CattError@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "message",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "catt_controllers.py": {
    "__init__@App@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "app_name",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "app_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "supported_device_types",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "get_app@global@": [
      {
        "category": "arg",
        "name": "id_or_name",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "cast_type",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "strict",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "show_warning",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "App"
        ]
      }
    ],
    "get_controller@global@": [
      {
        "category": "arg",
        "name": "cast",
        "type": [
          "pychromecast.Chromecast"
        ]
      },
      {
        "category": "arg",
        "name": "app",
        "type": [
          "App"
        ]
      },
      {
        "category": "arg",
        "name": "action",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "prep",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "CastController"
        ]
      }
    ],
    "setup_cast@global@": [
      {
        "category": "arg",
        "name": "device_desc",
        "type": [
          "Any"
        ]
      },
      {
        "category": "arg",
        "name": "video_url",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "controller",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "ytdl_options",
        "type": [
          "Optional[Any]"
        ]
      },
      {
        "category": "arg",
        "name": "action",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "arg",
        "name": "prep",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Union[CastController, Tuple[CastController, StreamInfo]]"
        ]
      }
    ],
    "__init__@CattStore@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "store_path",
        "type": [
          "Path"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_create_store_dir@CattStore@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_read_store@CattStore@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "_write_store@CattStore@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "data",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "get_data@CattStore@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "set_data@CattStore@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "clear@CattStore@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@CastState@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "state_path",
        "type": [
          "Path"
        ]
      },
      {
        "category": "arg",
        "name": "mode",
        "type": [
          "StateMode"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "get_data@CastState@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "name",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Any"
        ]
      }
    ],
    "set_data@CastState@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "name",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "value",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@CastStatusListener@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "app_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "active_app_id",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "new_cast_status@CastStatusListener@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "status",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_is_app_ready@CastStatusListener@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "status",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "__init__@MediaStatusListener@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "current_state",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "states",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "arg",
        "name": "invert",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "new_media_status@MediaStatusListener@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "status",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "wait_for_states@MediaStatusListener@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "timeout",
        "type": [
          "Optional[float]"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "__init__@SimpleListener@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "new_media_status@SimpleListener@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "status",
        "type": [
          "Any"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "block_until_status_received@SimpleListener@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "cast",
        "type": [
          "pychromecast.Chromecast"
        ]
      },
      {
        "category": "arg",
        "name": "app",
        "type": [
          "App"
        ]
      },
      {
        "category": "arg",
        "name": "prep",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "prep_app@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "prep_control@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "prep_info@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_update_status@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "cc_name@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "str"
        ]
      }
    ],
    "info@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "media_info@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "cast_info@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "is_streaming_local_file@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "_supports_google_media_namespace@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "_is_seekable@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "_is_audiovideo@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "_is_idle@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "volume@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "level",
        "type": [
          "float"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volumeup@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "delta",
        "type": [
          "float"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volumedown@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "delta",
        "type": [
          "float"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "volumemute@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "muted",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "kill@CastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "idle_only",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "force",
        "type": [
          "bool"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play@MediaControllerMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "pause@MediaControllerMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play_toggle@MediaControllerMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "seek@MediaControllerMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "seconds",
        "type": [
          "float"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "rewind@MediaControllerMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "seconds",
        "type": [
          "float"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "ffwd@MediaControllerMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "seconds",
        "type": [
          "float"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "skip@MediaControllerMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play_media_url@PlaybackBaseMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "video_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play_media_id@PlaybackBaseMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "video_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play_playlist@PlaybackBaseMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "playlist_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "video_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "wait_for@PlaybackBaseMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "states",
        "type": [
          "List[str]"
        ]
      },
      {
        "category": "arg",
        "name": "invert",
        "type": [
          "bool"
        ]
      },
      {
        "category": "arg",
        "name": "timeout",
        "type": [
          "Optional[float]"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "restore@PlaybackBaseMixin@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "data",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@DefaultCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "cast",
        "type": [
          "pychromecast.Chromecast"
        ]
      },
      {
        "category": "arg",
        "name": "app",
        "type": [
          "App"
        ]
      },
      {
        "category": "arg",
        "name": "prep",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play_media_url@DefaultCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "video_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "restore@DefaultCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "data",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@DashCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "cast",
        "type": [
          "pychromecast.Chromecast"
        ]
      },
      {
        "category": "arg",
        "name": "app",
        "type": [
          "App"
        ]
      },
      {
        "category": "arg",
        "name": "prep",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "load_url@DashCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "prep_app@DashCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@YoutubeCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "cast",
        "type": [
          "pychromecast.Chromecast"
        ]
      },
      {
        "category": "arg",
        "name": "app",
        "type": [
          "App"
        ]
      },
      {
        "category": "arg",
        "name": "prep",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play_media_id@YoutubeCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "video_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "play_playlist@YoutubeCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "playlist_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "video_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "add@YoutubeCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "video_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "add_next@YoutubeCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "video_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "remove@YoutubeCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "video_id",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "clear@YoutubeCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "restore@YoutubeCastController@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "data",
        "type": [
          "Dict[str, Any]"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "update@global@": [
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  },
  "catt_discovery_gpt4o.py": {
    "get_casts@global@": [
      {
        "category": "arg",
        "name": "names",
        "type": [
          "Optional[List[str]]"
        ]
      },
      {
        "category": "return",
        "type": [
          "List[pychromecast.Chromecast]"
        ]
      }
    ],
    "get_cast_infos@global@": [
      {
        "category": "return",
        "type": [
          "List[pychromecast.CastInfo]"
        ]
      }
    ],
    "get_cast_with_name@global@": [
      {
        "category": "arg",
        "name": "cast_name",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[pychromecast.Chromecast]"
        ]
      }
    ],
    "get_cast_with_ip@global@": [
      {
        "category": "arg",
        "name": "cast_ip",
        "type": [
          "str"
        ]
      },
      {
        "category": "arg",
        "name": "port",
        "type": [
          "int"
        ]
      },
      {
        "category": "return",
        "type": [
          "Optional[pychromecast.Chromecast]"
        ]
      }
    ],
    "cast_ip_exists@global@": [
      {
        "category": "arg",
        "name": "cast_ip",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "bool"
        ]
      }
    ],
    "get_cast@global@": [
      {
        "category": "arg",
        "name": "cast_desc",
        "type": [
          "Optional[str]"
        ]
      },
      {
        "category": "return",
        "type": [
          "pychromecast.Chromecast"
        ]
      }
    ]
  },
  "databases_aiopg.py": {
    "__init__@AiopgBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "database_url",
        "type": [
          "str"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "_get_dialect@AiopgBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dialect"
        ]
      }
    ],
    "_get_connection_kwargs@AiopgBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "Dict[str, Any]"
        ]
      }
    ],
    "connection@AiopgBackend@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'AiopgConnection'"
        ]
      }
    ],
    "__init__@CompilationContext@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "context",
        "type": [
          "ExecutionContext"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "__init__@AiopgConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "database",
        "type": [
          "AiopgBackend"
        ]
      },
      {
        "category": "arg",
        "name": "dialect",
        "type": [
          "Dialect"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ],
    "transaction@AiopgConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "'AiopgTransaction'"
        ]
      }
    ],
    "_compile@AiopgConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "query",
        "type": [
          "ClauseElement"
        ]
      },
      {
        "category": "return",
        "type": [
          "Tuple[str, Dict[str, Any], Any, CompilationContext]"
        ]
      }
    ],
    "raw_connection@AiopgConnection@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "return",
        "type": [
          "aiopg.connection.Connection"
        ]
      }
    ],
    "__init__@AiopgTransaction@": [
      {
        "category": "arg",
        "name": "self",
        "type": [
          ""
        ]
      },
      {
        "category": "arg",
        "name": "connection",
        "type": [
          "AiopgConnection"
        ]
      },
      {
        "category": "return",
        "type": [
          "None"
        ]
      }
    ]
  }
}