{
    "__init__@ConstantLearningRateScheduler": [
        {
            "category": "arg",
            "name": "optimizer",
            "type": [
                "torch.optim.Optimizer",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "last_epoch",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "torch.optim.Optimizer",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "last_epoch",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "lr_scheduler",
            "type": [
                "float",
                "int",
                "typing.DefaultDict"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ConstantWithWarmupLearningRateScheduler": [
        {
            "category": "arg",
            "name": "optimizer",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "num_warmup_steps",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "last_epoch",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "num_warmup_steps",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "last_epoch",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "lr_scheduler",
            "type": [
                "float",
                "list",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@CosineHardRestartsWithWarmupLearningRateScheduler": [
        {
            "category": "arg",
            "name": "optimizer",
            "type": [
                "int",
                "torch.optim.Optimizer",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "num_warmup_steps",
            "type": [
                "int",
                "torch.optim.Optimizer",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "num_training_steps",
            "type": [
                "int",
                "torch.optim.Optimizer",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "num_cycles",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "last_epoch",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "int",
                "torch.optim.Optimizer",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "num_warmup_steps",
            "type": [
                "int",
                "torch.optim.Optimizer",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "num_training_steps",
            "type": [
                "int",
                "torch.optim.Optimizer",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "num_cycles",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "last_epoch",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "lr_scheduler",
            "type": [
                "int",
                "float",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@CosineWithWarmupLearningRateScheduler": [
        {
            "category": "arg",
            "name": "optimizer",
            "type": [
                "int",
                "float",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "arg",
            "name": "num_warmup_steps",
            "type": [
                "int",
                "float",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "arg",
            "name": "num_training_steps",
            "type": [
                "int",
                "float",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "arg",
            "name": "num_cycles",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "last_epoch",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "int",
                "float",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "num_warmup_steps",
            "type": [
                "int",
                "float",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "num_training_steps",
            "type": [
                "int",
                "float",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "num_cycles",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "last_epoch",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "lr_scheduler",
            "type": [
                "float",
                "int",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@LearningRateScheduler": [
        {
            "category": "arg",
            "name": "optimizer",
            "type": [
                "int",
                "torch.optim.Optimizer"
            ]
        },
        {
            "category": "arg",
            "name": "last_epoch",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "int",
                "torch.optim.Optimizer"
            ]
        },
        {
            "category": "local",
            "name": "last_epoch",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_PyTorchLearningRateSchedulerWrapper": [
        {
            "category": "arg",
            "name": "lr_scheduler",
            "type": [
                "torch.optim.lr_scheduler._LRScheduler",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "lr_scheduler",
            "type": [
                "torch.optim.lr_scheduler._LRScheduler",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "get_values@LearningRateScheduler": [
        {
            "category": "return",
            "name": "get_values",
            "type": [
                "None"
            ]
        }
    ],
    "get_values@_PyTorchLearningRateSchedulerWrapper": [
        {
            "category": "return",
            "name": "get_values",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "global@global": [],
    "load_state_dict@_PyTorchLearningRateSchedulerWrapper": [
        {
            "category": "arg",
            "name": "state_dict",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "typing.MutableMapping"
            ]
        },
        {
            "category": "local",
            "name": "state_dict",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "typing.MutableMapping"
            ]
        },
        {
            "category": "return",
            "name": "load_state_dict",
            "type": [
                "None"
            ]
        }
    ],
    "state_dict@_PyTorchLearningRateSchedulerWrapper": [
        {
            "category": "return",
            "name": "state_dict",
            "type": []
        }
    ],
    "step@_PyTorchLearningRateSchedulerWithMetricsWrapper": [
        {
            "category": "arg",
            "name": "metric",
            "type": [
                "None",
                "float",
                "dict[str, float]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "metric",
            "type": [
                "None",
                "float",
                "dict[str, float]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "step",
            "type": [
                "None"
            ]
        }
    ],
    "step@_PyTorchLearningRateSchedulerWrapper": [
        {
            "category": "arg",
            "name": "metric",
            "type": [
                "None",
                "float",
                "typing.Iterable[float]"
            ]
        },
        {
            "category": "return",
            "name": "step",
            "type": [
                "None"
            ]
        }
    ]
}