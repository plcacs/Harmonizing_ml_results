{
    "global@global": [],
    "test_check_exit_amount@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "Exception",
                "None",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "bool",
                "typing.Collection"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "str",
                "bool",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "Exception",
                "None",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "bool",
                "typing.Collection"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "tests.core.test_task_map.IdTask"
            ]
        },
        {
            "category": "local",
            "name": "update_mock",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "total_mock",
            "type": [
                "int",
                "typing.Iterator",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "str",
                "bool",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "monkq.assets.trade.Trade",
                "list[rotkehlchen.exchanges.data_structures.Trade]"
            ]
        },
        {
            "category": "return",
            "name": "test_check_exit_amount",
            "type": [
                "None"
            ]
        }
    ],
    "test_check_exit_amount_futures@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.async_mock.Mock",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "str",
                "bool",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.async_mock.Mock",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "tests.core.test_task_map.IdTask"
            ]
        },
        {
            "category": "local",
            "name": "total_mock",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "str",
                "bool",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "monkq.assets.trade.Trade"
            ]
        },
        {
            "category": "local",
            "name": "trade_",
            "type": [
                "typing.Text",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "update_mock",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_check_exit_amount_futures",
            "type": [
                "None"
            ]
        }
    ],
    "test_dry_run_wallet_initialization@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf_usdt",
            "type": []
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "unittesmock.MagicMock",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "wallets",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "unittesmock.MagicMock",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "stake_currency",
            "type": [
                "tests.chain_integration.conftesCurrencyNetworkProxy",
                "qcodes.tests.instrument_mocks.DummyChannel",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "wallets",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_dry_run_wallet_initialization",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_starting_balance@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "mock.Mock",
                "unittesmock.MagicMock",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "available_capital",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "closed_profit",
            "type": [
                "mock.Mock",
                "unittesmock.MagicMock",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "open_stakes",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "mock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "free",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "unittesmock.MagicMock",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "available_capital",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "mock.Mock",
                "unittesmock.MagicMock",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "closed_profit",
            "type": [
                "mock.Mock",
                "unittesmock.MagicMock",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "open_stakes",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "mock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "free",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "unittesmock.MagicMock",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_get_starting_balance",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_trade_stake_amount_no_stake_amount@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_trade_stake_amount_no_stake_amount",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_trade_stake_amount_unlimited_amount@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "ticker",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "balance_ratio",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "capital",
            "type": [
                "str",
                "None",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "result1",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "result2",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "limit_buy_order_open",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ticker",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "limit_buy_order_open",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "conf",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Union[typing.Any,str]]"
            ]
        },
        {
            "category": "local",
            "name": "balance_ratio",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "capital",
            "type": [
                "str",
                "None",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "tuple[typing.Optional[typing.Any]]",
                "dict[str, typing.Any]",
                "protoactor.persistence.messages.PersistedEvent"
            ]
        },
        {
            "category": "return",
            "name": "test_get_trade_stake_amount_unlimited_amount",
            "type": [
                "None"
            ]
        }
    ],
    "test_sync_wallet_at_boot@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock",
                "tests.components.withings.common.ComponentFactory"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "tests.setup.SetupTest",
                "tests.async_mock.MagicMock",
                "tests.utils.CliObjectRunner"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "tests.setup.SetupTest",
                "tests.async_mock.MagicMock",
                "tests.utils.CliObjectRunner"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock",
                "tests.components.withings.common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "qcodes.tests.instrument_mocks.DummyInstrument"
            ]
        },
        {
            "category": "local",
            "name": "update_mock",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_sync_wallet_at_boot",
            "type": [
                "None"
            ]
        }
    ],
    "test_sync_wallet_dry@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf_usdt",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "default_conf_usdt",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "list[tuple[int]]",
                "list[dict[str, typing.Any]]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "bal",
            "type": [
                "tests.utils.blockchain.TesterBlockchain"
            ]
        },
        {
            "category": "local",
            "name": "usdt_bal",
            "type": [
                "str",
                "set[str]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "total",
            "type": [
                "int",
                "float",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "free",
            "type": [
                "float",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "used",
            "type": [
                "bool",
                "dict",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_sync_wallet_dry",
            "type": [
                "None"
            ]
        }
    ],
    "test_sync_wallet_futures_dry@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "tests.utils.CliObjectRunner"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "tests.utils.CliObjectRunner"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "typing.DefaultDict",
                "freqtrade.data.dataprovider.DataProvider"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "total",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_sync_wallet_futures_dry",
            "type": [
                "None"
            ]
        }
    ],
    "test_sync_wallet_futures_live@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "tests.setup.SetupTest",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "tests.setup.SetupTest",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_result",
            "type": [
                "list[dict[typing.Text, typing.Union[typing.Text,None,float,int]]]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "qcodes.tests.instrument_mocks.DummyChannelInstrument",
                "tests.pathfinding.test_fee_schedule.TokenNetworkForTests",
                "freqtrade.data.dataprovider.DataProvider"
            ]
        },
        {
            "category": "return",
            "name": "test_sync_wallet_futures_live",
            "type": [
                "None"
            ]
        }
    ],
    "test_sync_wallet_missing_data@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "qcodes.tests.instrument_mocks.DummyInstrument"
            ]
        },
        {
            "category": "return",
            "name": "test_sync_wallet_missing_data",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate_stake_amount@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "int",
                "None",
                "typing.Iterable[int]"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "stake_amount",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "min_stake",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "stake_available",
            "type": []
        },
        {
            "category": "arg",
            "name": "max_stake",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "trade_amount",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "int",
                "None",
                "typing.Iterable[int]"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "stake_amount",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_stake",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "max_stake",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "trade_amount",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate_stake_amount",
            "type": [
                "None"
            ]
        }
    ]
}