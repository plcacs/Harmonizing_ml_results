{
    "bar@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "event",
            "type": []
        },
        {
            "category": "arg",
            "name": "context",
            "type": []
        },
        {
            "category": "return",
            "name": "bar",
            "type": [
                "dict"
            ]
        }
    ],
    "connect@global": [
        {
            "category": "arg",
            "name": "event",
            "type": []
        },
        {
            "category": "return",
            "name": "connect",
            "type": [
                "None"
            ]
        }
    ],
    "create_config@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "app_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "iam_role_arn",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "policy_file",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "api_gateway_stage",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "autogen_policy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "security_group_ids",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "subnet_ids",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "reserved_concurrency",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "layers",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "automatic_layer",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "api_gateway_endpoint_type",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "api_gateway_endpoint_vpce",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "api_gateway_policy_file",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "api_gateway_custom_domain",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "websocket_api_custom_domain",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "log_retention_in_days",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "project_dir",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "app_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "project_dir",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "automatic_layer",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "api_gateway_stage",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "api_gateway_policy_file",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "api_gateway_endpoint_type",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "api_gateway_endpoint_vpce",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "api_gateway_custom_domain",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "websocket_api_custom_domain",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "kwargs",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,bool,None]]",
                "dict[typing.Text, typing.Union[typing.Text,bool,None,float]]"
            ]
        },
        {
            "category": "local",
            "name": "iam_role_arn",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "policy_file",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "autogen_policy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "security_group_ids",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "subnet_ids",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "reserved_concurrency",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "log_retention_in_days",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "layers",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "create_config",
            "type": []
        }
    ],
    "disconnect@global": [
        {
            "category": "arg",
            "name": "event",
            "type": []
        },
        {
            "category": "return",
            "name": "disconnect",
            "type": [
                "None"
            ]
        }
    ],
    "foo@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "event",
            "type": []
        },
        {
            "category": "arg",
            "name": "context",
            "type": []
        },
        {
            "category": "return",
            "name": "foo",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [],
    "message@global": [
        {
            "category": "arg",
            "name": "event",
            "type": []
        },
        {
            "category": "return",
            "name": "message",
            "type": [
                "None"
            ]
        }
    ],
    "new_handler@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "event",
            "type": []
        },
        {
            "category": "return",
            "name": "new_handler",
            "type": [
                "None"
            ]
        }
    ],
    "second@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "event",
            "type": []
        },
        {
            "category": "arg",
            "name": "context",
            "type": []
        },
        {
            "category": "return",
            "name": "second",
            "type": [
                "None"
            ]
        }
    ],
    "test_all_lambda_functions_share_managed_layer@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "croud.config.WeakConfigProxy"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "chalice.deploy.models.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_all_lambda_functions_share_managed_layer",
            "type": [
                "None"
            ]
        }
    ],
    "test_autogen_policy_for_function@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_lambda_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_lambda_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "tf_encrypted.config.LocalConfig",
                "box.conf.Config",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_autogen_policy_for_function",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_build_app_with_domain_name@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app",
            "type": []
        },
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "return",
            "name": "test_can_build_app_with_domain_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_build_lambda_function_app_with_reserved_concurrency@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_lambda_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_lambda_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "src.prefecconfiguration.Config"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "app.executor.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_can_build_lambda_function_app_with_reserved_concurrency",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_build_lambda_function_app_with_vpc_config@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "cli.config.BinaryAlertConfig",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "list[typing.Optional[str]]",
                "flask.app.Flask",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_build_lambda_function_app_with_vpc_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_build_lambda_function_with_layers@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "layers",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "gridsync.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "app.executor.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_can_build_lambda_function_with_layers",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_build_private_rest_api@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app",
            "type": [
                "dict",
                "apistar.app.App"
            ]
        },
        {
            "category": "local",
            "name": "sample_app",
            "type": [
                "dict",
                "apistar.app.App"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "flask.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "ultron8.config.smarConfiguration",
                "list[typing.Optional[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_build_private_rest_api",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_build_private_rest_api_custom_policy@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "tmpdir",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "sample_app",
            "type": [
                "app.utils.models.ModelManager",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "sample_app",
            "type": [
                "app.utils.models.ModelManager",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "tmpdir",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]",
                "vico.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "application_builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "build_stage",
            "type": [
                "BuildStage"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_can_build_private_rest_api_custom_policy",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_build_rest_api@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "sample_app",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "tf_encrypted.config.LocalConfig",
                "github_labels_sync.config.Config",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask"
            ]
        },
        {
            "category": "return",
            "name": "test_can_build_rest_api",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_build_rest_api_with_authorizer@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_with_auth",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_with_auth",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, str]",
                "dict",
                "vico.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "ultron8.config.smarConfiguration",
                "list[typing.Optional[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_build_rest_api_with_authorizer",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_build_single_lambda_function_app@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_lambda_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_lambda_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "src.prefecconfiguration.Config"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "app.executor.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_can_build_single_lambda_function_app",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_build_single_lambda_function_app_with_log_retention@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "qutebrowser.utils.usertypes.ClickTarget"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "qutebrowser.utils.usertypes.ClickTarget"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "aio_service.config.Config",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "app.executor.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_can_build_single_lambda_function_app_with_log_retention",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_build_single_lambda_function_app_with_managed_layer@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_lambda_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_lambda_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "cli.config.BinaryAlertConfig",
                "gridsync.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "app.executor.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_can_build_single_lambda_function_app_with_managed_layer",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_ddb_event_handler@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_ddb_event_app",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "sample_ddb_event_app",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, str]",
                "github_labels_sync.config.Config",
                "tf_encrypted.config.LocalConfig"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "list[typing.Optional[str]]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_ddb_event_handler",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_kinesis_event_handler@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_kinesis_event_app",
            "type": [
                "models.GithubWebhookEvent",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "sample_kinesis_event_app",
            "type": [
                "models.GithubWebhookEvent",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "dict[str, str]",
                "github_labels_sync.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "list[typing.Optional[str]]",
                "app.executor.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_kinesis_event_handler",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_s3_event_handler@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_s3_event_app",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "sample_s3_event_app",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "tf_encrypted.config.LocalConfig",
                "dict[str, str]",
                "github_labels_sync.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_s3_event_handler",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_sns_event_handler@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_sns_event_app",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "sample_sns_event_app",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "tf_encrypted.config.LocalConfig",
                "api.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "list[typing.Optional[str]]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_sns_event_handler",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_sqs_event_handler@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_sqs_event_app",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sample_sqs_event_app",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "tf_encrypted.config.LocalConfig",
                "dict[str, str]",
                "github_labels_sync.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "list[typing.Optional[str]]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_sqs_event_handler",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_sqs_handler_with_queue_arn@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_sqs_event_app",
            "type": [
                "app.utils.models.ModelManager",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "sample_sqs_event_app",
            "type": [
                "app.utils.models.ModelManager",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "tf_encrypted.config.LocalConfig",
                "dict[str, str]",
                "github_labels_sync.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_sqs_handler_with_queue_arn",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_websocket_api_with_domain_name@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_websocket_app",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "sample_websocket_app",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_websocket_api_with_domain_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_websocket_app_missing_connect@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "websocket_app_without_connect",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "websocket_app_without_connect",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "vico.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_websocket_app_missing_connect",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_websocket_app_missing_disconnect@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "websocket_app_without_disconnect",
            "type": []
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_websocket_app_missing_disconnect",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_websocket_app_missing_message@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "websocket_app_without_message",
            "type": [
                "utils.clienClient"
            ]
        },
        {
            "category": "local",
            "name": "websocket_app_without_message",
            "type": [
                "utils.clienClient"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_websocket_app_missing_message",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_websocket_event_handler@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_websocket_app",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "sample_websocket_app",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "dict[str, str]",
                "tf_encrypted.config.LocalConfig"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_websocket_event_handler",
            "type": [
                "None"
            ]
        }
    ],
    "test_cloudwatch_event_models@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_cloudwatch_event_app",
            "type": [
                "dict[str, str]",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "sample_cloudwatch_event_app",
            "type": [
                "dict[str, str]",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, str]",
                "tf_encrypted.config.LocalConfig",
                "box.conf.Config"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_cloudwatch_event_models",
            "type": [
                "None"
            ]
        }
    ],
    "test_exception_raised_when_missing_vpc_params@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]",
                "croud.config.WeakConfigProxy"
            ]
        },
        {
            "category": "return",
            "name": "test_exception_raised_when_missing_vpc_params",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_lambda_functions_share_role_and_package@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_lambda_only",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "str",
                "app.executor.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_multiple_lambda_functions_share_role_and_package",
            "type": [
                "None"
            ]
        }
    ],
    "test_scheduled_event_models@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_schedule_only",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_schedule_only",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, str]",
                "vico.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_scheduled_event_models",
            "type": [
                "None"
            ]
        }
    ],
    "test_vpc_trait_added_when_vpc_configured@TestApplicationGraphBuilder": [
        {
            "category": "arg",
            "name": "sample_app_lambda_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "builder",
            "type": [
                "ApplicationGraphBuilder"
            ]
        },
        {
            "category": "local",
            "name": "sample_app_lambda_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]",
                "tf_encrypted.config.LocalConfig"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "flask.app.Flask",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_vpc_trait_added_when_vpc_configured",
            "type": [
                "None"
            ]
        }
    ],
    "websocket_app_without_connect@global": [
        {
            "category": "local",
            "name": "app",
            "type": [
                "Chalice"
            ]
        },
        {
            "category": "return",
            "name": "websocket_app_without_connect",
            "type": [
                "Chalice"
            ]
        }
    ],
    "websocket_app_without_disconnect@global": [
        {
            "category": "local",
            "name": "app",
            "type": [
                "Chalice"
            ]
        },
        {
            "category": "return",
            "name": "websocket_app_without_disconnect",
            "type": [
                "Chalice"
            ]
        }
    ],
    "websocket_app_without_message@global": [
        {
            "category": "local",
            "name": "app",
            "type": [
                "Chalice"
            ]
        },
        {
            "category": "return",
            "name": "websocket_app_without_message",
            "type": [
                "Chalice"
            ]
        }
    ]
}