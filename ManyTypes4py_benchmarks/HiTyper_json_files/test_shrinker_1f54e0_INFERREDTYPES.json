{
    "global@global": [
        {
            "category": "local",
            "name": "numeric_nodes",
            "type": [
                "set",
                "staticmethod",
                "str",
                "None"
            ]
        }
    ],
    "nodes@global": [
        {
            "category": "arg",
            "name": "data",
            "type": []
        },
        {
            "category": "return",
            "name": "nodes",
            "type": [
                "None"
            ]
        }
    ],
    "run_step@BadShrinker": [
        {
            "category": "return",
            "name": "run_step",
            "type": [
                "None"
            ]
        }
    ],
    "shrinker@global": [
        {
            "category": "arg",
            "name": "data",
            "type": []
        },
        {
            "category": "local",
            "name": "b",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "shrinker",
            "type": [
                "None"
            ]
        }
    ],
    "test_accidental_duplication@global": [
        {
            "category": "return",
            "name": "test_accidental_duplication",
            "type": [
                "None"
            ]
        }
    ],
    "test_alternative_shrinking_will_lower_to_alternate_value@global": [
        {
            "category": "local",
            "name": "seen_int",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_alternative_shrinking_will_lower_to_alternate_value",
            "type": [
                "None"
            ]
        }
    ],
    "test_block_deletion_can_delete_short_ranges@global": [
        {
            "category": "return",
            "name": "test_block_deletion_can_delete_short_ranges",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_expand_deleted_region@global": [
        {
            "category": "return",
            "name": "test_can_expand_deleted_region",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_expand_zeroed_region@global": [
        {
            "category": "return",
            "name": "test_can_expand_zeroed_region",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_pass_to_an_indirect_descendant@global": [
        {
            "category": "local",
            "name": "initial",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "good",
            "type": [
                "set[tuple[int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_pass_to_an_indirect_descendant",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_quickly_shrink_to_trivial_collection@global": [
        {
            "category": "arg",
            "name": "n",
            "type": [
                "mypy.nodes.ClassDef"
            ]
        },
        {
            "category": "return",
            "name": "test_can_quickly_shrink_to_trivial_collection",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_reorder_examples@global": [
        {
            "category": "return",
            "name": "test_can_reorder_examples",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_shrink_variable_draws_with_just_deletion@global": [
        {
            "category": "arg",
            "name": "n",
            "type": [
                "tests.basilisp.helpers.CompileFn",
                "parsimonious.nodes.Node"
            ]
        },
        {
            "category": "return",
            "name": "test_can_shrink_variable_draws_with_just_deletion",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_simultaneously_lower_non_duplicated_nearby_integers@global": [
        {
            "category": "arg",
            "name": "n_gap",
            "type": []
        },
        {
            "category": "return",
            "name": "test_can_simultaneously_lower_non_duplicated_nearby_integers",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_zero_subintervals@global": [
        {
            "category": "return",
            "name": "test_can_zero_subintervals",
            "type": [
                "None"
            ]
        }
    ],
    "test_deletion_and_lowering_fails_to_shrink@global": [
        {
            "category": "arg",
            "name": "monkeypatch",
            "type": [
                "tests.basilisp.helpers.CompileFn"
            ]
        },
        {
            "category": "local",
            "name": "monkeypatch",
            "type": [
                "tests.basilisp.helpers.CompileFn"
            ]
        },
        {
            "category": "return",
            "name": "test_deletion_and_lowering_fails_to_shrink",
            "type": [
                "None"
            ]
        }
    ],
    "test_dependent_block_pairs_is_up_to_shrinking_integers@global": [
        {
            "category": "local",
            "name": "distribution",
            "type": [
                "Sampler"
            ]
        },
        {
            "category": "local",
            "name": "sizes",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_dependent_block_pairs_is_up_to_shrinking_integers",
            "type": [
                "None"
            ]
        }
    ],
    "test_duplicate_nodes_that_go_away@global": [
        {
            "category": "return",
            "name": "test_duplicate_nodes_that_go_away",
            "type": [
                "None"
            ]
        }
    ],
    "test_finding_a_minimal_balanced_binary_tree@global": [
        {
            "category": "return",
            "name": "test_finding_a_minimal_balanced_binary_tree",
            "type": [
                "None"
            ]
        }
    ],
    "test_handle_empty_draws@global": [
        {
            "category": "return",
            "name": "test_handle_empty_draws",
            "type": [
                "None"
            ]
        }
    ],
    "test_node_programs_are_adaptive@global": [
        {
            "category": "local",
            "name": "p",
            "type": [
                "str",
                "PyLibs.IPython.utils.tests.test_wildcard.obj_t"
            ]
        },
        {
            "category": "return",
            "name": "test_node_programs_are_adaptive",
            "type": [
                "None"
            ]
        }
    ],
    "test_permits_but_ignores_raising_order@global": [
        {
            "category": "arg",
            "name": "monkeypatch",
            "type": [
                "tests.basilisp.helpers.CompileFn"
            ]
        },
        {
            "category": "local",
            "name": "monkeypatch",
            "type": [
                "tests.basilisp.helpers.CompileFn"
            ]
        },
        {
            "category": "return",
            "name": "test_permits_but_ignores_raising_order",
            "type": [
                "None"
            ]
        }
    ],
    "test_redistribute_numeric_pairs@global": [
        {
            "category": "arg",
            "name": "node1",
            "type": [
                "int",
                "docutils.nodes.Node"
            ]
        },
        {
            "category": "arg",
            "name": "node2",
            "type": [
                "int",
                "docutils.nodes.Node"
            ]
        },
        {
            "category": "arg",
            "name": "stop",
            "type": [
                "int",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "node1",
            "type": [
                "int",
                "docutils.nodes.Node"
            ]
        },
        {
            "category": "local",
            "name": "node2",
            "type": [
                "int",
                "docutils.nodes.Node"
            ]
        },
        {
            "category": "local",
            "name": "stop",
            "type": [
                "int",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_redistribute_numeric_pairs",
            "type": [
                "None"
            ]
        }
    ],
    "test_redistribute_with_forced_node_integer@global": [
        {
            "category": "return",
            "name": "test_redistribute_with_forced_node_integer",
            "type": [
                "None"
            ]
        }
    ],
    "test_retain_end_of_buffer@global": [
        {
            "category": "return",
            "name": "test_retain_end_of_buffer",
            "type": [
                "None"
            ]
        }
    ],
    "test_shrink_pass_method_is_idempotent@global": [
        {
            "category": "local",
            "name": "sp",
            "type": [
                "list[int]",
                "dict",
                "myia.utils.unify.Var"
            ]
        },
        {
            "category": "return",
            "name": "test_shrink_pass_method_is_idempotent",
            "type": [
                "None"
            ]
        }
    ],
    "test_shrinking_blocks_from_common_offset@global": [
        {
            "category": "return",
            "name": "test_shrinking_blocks_from_common_offset",
            "type": [
                "None"
            ]
        }
    ],
    "test_silly_shrinker_subclass@global": [
        {
            "category": "return",
            "name": "test_silly_shrinker_subclass",
            "type": [
                "None"
            ]
        }
    ],
    "test_will_let_fixate_shrink_passes_do_a_full_run_through@global": [
        {
            "category": "local",
            "name": "shrinker_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "passes",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_will_let_fixate_shrink_passes_do_a_full_run_through",
            "type": [
                "None"
            ]
        }
    ],
    "test_will_terminate_stalled_shrinks@global": [
        {
            "category": "return",
            "name": "test_will_terminate_stalled_shrinks",
            "type": [
                "None"
            ]
        }
    ],
    "test_zero_contained_examples@global": [
        {
            "category": "return",
            "name": "test_zero_contained_examples",
            "type": [
                "None"
            ]
        }
    ],
    "test_zero_examples_with_variable_min_size@global": [
        {
            "category": "return",
            "name": "test_zero_examples_with_variable_min_size",
            "type": [
                "None"
            ]
        }
    ],
    "test_zero_irregular_examples@global": [
        {
            "category": "return",
            "name": "test_zero_irregular_examples",
            "type": [
                "None"
            ]
        }
    ],
    "test_zig_zags_quickly@global": [
        {
            "category": "return",
            "name": "test_zig_zags_quickly",
            "type": [
                "None"
            ]
        }
    ],
    "test_zig_zags_quickly_with_shrink_towards@global": [
        {
            "category": "arg",
            "name": "min_value",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "max_value",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "forced",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "shrink_towards",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "list[float]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_zig_zags_quickly_with_shrink_towards",
            "type": [
                "None"
            ]
        }
    ],
    "tree@global": [
        {
            "category": "arg",
            "name": "data",
            "type": []
        },
        {
            "category": "return",
            "name": "tree",
            "type": [
                "None"
            ]
        }
    ]
}