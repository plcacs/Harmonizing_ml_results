{
    "__init__@MockValidationError": [
        {
            "category": "arg",
            "name": "message",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "relative_path",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "instance",
            "type": [
                "None",
                "T",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "validator",
            "type": [
                "None",
                "jsonschema.Draft4Validator",
                "T",
                "\"ReferenceTypeId\""
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "relative_path",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "instance",
            "type": [
                "None",
                "T",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "validator",
            "type": [
                "None",
                "jsonschema.Draft4Validator",
                "T",
                "\"ReferenceTypeId\""
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [],
    "message@CatastrophicError": [
        {
            "category": "return",
            "name": "message",
            "type": []
        }
    ],
    "schema@TestArray": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,dict]]],list[typing.Text]]]"
            ]
        }
    ],
    "schema@TestArrayOfObjects": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,dict[typing.Text, typing.Text]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]],list[typing.Text]]]]]]"
            ]
        }
    ],
    "schema@TestArrayOfStrings": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,dict[typing.Text, typing.Text]]]],list[typing.Text]]]"
            ]
        }
    ],
    "schema@TestBoolean": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]],list[typing.Text]]]"
            ]
        }
    ],
    "schema@TestDate": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]],list[typing.Text]]]"
            ]
        }
    ],
    "schema@TestDateTime": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]],list[typing.Text]]]"
            ]
        }
    ],
    "schema@TestDict": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]],list[typing.Text]]]"
            ]
        }
    ],
    "schema@TestNestedObject": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]],list[typing.Text]]]]]]"
            ]
        }
    ],
    "schema@TestNumber": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]],list[typing.Text]]]"
            ]
        }
    ],
    "schema@TestObject": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]],list[typing.Text]]]]]]"
            ]
        }
    ],
    "schema@TestObjectOptionalParameters": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]]]]]]]"
            ]
        }
    ],
    "schema@TestString": [
        {
            "category": "return",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]],list[typing.Text]]]"
            ]
        }
    ],
    "test_array_of_objects@TestBuildErrorObject": [
        {
            "category": "local",
            "name": "errors",
            "type": [
                "list[MockValidationError]"
            ]
        },
        {
            "category": "local",
            "name": "error_obj",
            "type": [
                "str",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_array_of_objects",
            "type": [
                "None"
            ]
        }
    ],
    "test_array_of_strings@TestBuildErrorObject": [
        {
            "category": "local",
            "name": "errors",
            "type": [
                "list[MockValidationError]"
            ]
        },
        {
            "category": "local",
            "name": "error_obj",
            "type": [
                "str",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_array_of_strings",
            "type": [
                "None"
            ]
        }
    ],
    "test_circular_schema_ref@global": [
        {
            "category": "local",
            "name": "circular_schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]],list[typing.Text],list[dict[typing.Text, typing.Text]]]]]]]"
            ]
        },
        {
            "category": "return",
            "name": "test_circular_schema_ref",
            "type": [
                "None"
            ]
        }
    ],
    "test_field_missing@TestBuildErrorObject": [
        {
            "category": "local",
            "name": "errors",
            "type": [
                "list[MockValidationError]"
            ]
        },
        {
            "category": "local",
            "name": "error_obj",
            "type": [
                "str",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_field_missing",
            "type": [
                "None"
            ]
        }
    ],
    "test_hydration_error_causes_validation_error@global": [
        {
            "category": "local",
            "name": "error_msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "dict[typing.Text, CatastrophicError]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "typing.DefaultDict",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_hydration_error_causes_validation_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_ignore_required@global": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "list",
                "dict[str, typing.Any]",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_ignore_required",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_json@TestBuildErrorObjectWithPlaceholders": [
        {
            "category": "local",
            "name": "errors",
            "type": [
                "list[MockValidationError]"
            ]
        },
        {
            "category": "local",
            "name": "error_obj",
            "type": [
                "str",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_invalid_json",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_json_with_detail@TestBuildErrorObjectWithPlaceholders": [
        {
            "category": "local",
            "name": "errors",
            "type": [
                "list[MockValidationError]"
            ]
        },
        {
            "category": "local",
            "name": "error_obj",
            "type": [
                "str",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_invalid_json_with_detail",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestArray": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestArrayOfObjects": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestArrayOfStrings": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestBoolean": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestDate": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestDateTime": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestDict": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestNestedObject": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestNumber": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestObject": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestObjectOptionalParameters": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_valid@TestString": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_field_errors@TestBuildErrorObject": [
        {
            "category": "local",
            "name": "errors",
            "type": [
                "list[MockValidationError]"
            ]
        },
        {
            "category": "local",
            "name": "error_obj",
            "type": [
                "str",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_multiple_field_errors",
            "type": [
                "None"
            ]
        }
    ],
    "test_non_error_placeholder@TestBuildErrorObjectWithPlaceholders": [
        {
            "category": "local",
            "name": "placeholder",
            "type": [
                "ValidPlaceholder"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "list[MockValidationError]"
            ]
        },
        {
            "category": "local",
            "name": "error_obj",
            "type": [
                "str",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_non_error_placeholder",
            "type": [
                "None"
            ]
        }
    ],
    "test_prioritize_placeholder_errors@TestPrioritizePlaceholderErrors": [
        {
            "category": "local",
            "name": "errors",
            "type": [
                "list[MockValidationError]"
            ]
        },
        {
            "category": "local",
            "name": "prioritized_errors",
            "type": [
                "str",
                "typing.Type",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_prioritize_placeholder_errors",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_model_optional_int@TestPreprocessSchemaPydanticV1NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_model_optional_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_model_optional_int_or_none_default_int@TestPreprocessSchemaPydanticV1NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_model_optional_int_or_none_default_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_model_optional_int_or_none_default_none@TestPreprocessSchemaPydanticV1NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_model_optional_int_or_none_default_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_model_ordered_multi_type_tuple@TestPreprocessSchemaPydanticV1Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_model_ordered_multi_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_model_required_int@TestPreprocessSchemaPydanticV1NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]],list[typing.Text]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_model_required_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_model_required_int_or_none@TestPreprocessSchemaPydanticV1NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_model_required_int_or_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_model_single_type_tuple@TestPreprocessSchemaPydanticV1Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_model_single_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_model_union_type_tuple@TestPreprocessSchemaPydanticV1Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, list[dict[typing.Text, typing.Text]]]]]]],list[typing.Text]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_model_union_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_optional_int@TestPreprocessSchemaPydanticV1NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_optional_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_optional_int_default_none@TestPreprocessSchemaPydanticV1NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_optional_int_default_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_optional_int_or_none_default_int@TestPreprocessSchemaPydanticV1NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_optional_int_or_none_default_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_optional_int_or_none_default_none@TestPreprocessSchemaPydanticV1NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_optional_int_or_none_default_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_ordered_multi_type_tuple@TestPreprocessSchemaPydanticV1Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_ordered_multi_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_required_int@TestPreprocessSchemaPydanticV1NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_required_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_required_int_or_none@TestPreprocessSchemaPydanticV1NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_required_int_or_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_single_type_tuple@TestPreprocessSchemaPydanticV1Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, typing.Text]]]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_single_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v1_union_type_tuple@TestPreprocessSchemaPydanticV1Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int,list[dict[typing.Text, list[dict[typing.Text, typing.Text]]]]]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v1_union_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_model_optional_int@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[dict[typing.Text, dict[typing.Text, typing.Union[int,typing.Text]]],typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_model_optional_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_model_optional_int_default_none@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[dict[typing.Text, dict[typing.Text, typing.Union[None,typing.Text]]],typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_model_optional_int_default_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_model_optional_int_or_none_default_int@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]],typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_model_optional_int_or_none_default_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_model_optional_int_or_none_default_none@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],None,typing.Text]]],typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_model_optional_int_or_none_default_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_model_ordered_multi_type_tuple@TestPreprocessSchemaPydanticV2Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[dict[typing.Text, dict[typing.Text, typing.Union[int,list[dict[typing.Text, typing.Text]],typing.Text]]],list[typing.Text],typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_model_ordered_multi_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_model_required_int@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[dict[typing.Text, dict[typing.Text, typing.Text]],list[typing.Text],typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_model_required_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_model_required_int_or_none@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],typing.Text]]],list[typing.Text],typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_model_required_int_or_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_model_single_type_tuple@TestPreprocessSchemaPydanticV2Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[dict[typing.Text, dict[typing.Text, typing.Union[int,list[dict[typing.Text, typing.Text]],typing.Text]]],list[typing.Text],typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_model_single_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_model_union_type_tuple@TestPreprocessSchemaPydanticV2Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]],list[typing.Text],dict[typing.Text, dict[typing.Text, typing.Union[dict[typing.Text, dict[typing.Text, typing.Union[int,list[dict[typing.Text, list[dict[typing.Text, typing.Text]]]],typing.Text]]],list[typing.Text],typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_model_union_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_optional_int@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[int,typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_optional_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_optional_int_default_none@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[None,int,typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_optional_int_default_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_optional_int_or_none_default_int@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_optional_int_or_none_default_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_optional_int_or_none_default_none@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],None,int,typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_optional_int_or_none_default_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_ordered_multi_type_tuple@TestPreprocessSchemaPydanticV2Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[int,list[dict[typing.Text, typing.Text]],typing.Text]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_ordered_multi_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_required_int@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[int,typing.Text]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_required_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_required_int_or_none@TestPreprocessSchemaPydanticV2NullTypes": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],int,typing.Text]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_required_int_or_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_single_type_tuple@TestPreprocessSchemaPydanticV2Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[int,list[dict[typing.Text, typing.Text]],typing.Text]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_single_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_pydantic_v2_union_type_tuple@TestPreprocessSchemaPydanticV2Tuples": [
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[int,list[dict[typing.Text, list[dict[typing.Text, typing.Text]]]],typing.Text]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "preprocessed_schema",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pydantic_v2_union_type_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_root_level_error@TestBuildErrorObject": [
        {
            "category": "local",
            "name": "errors",
            "type": [
                "list[MockValidationError]"
            ]
        },
        {
            "category": "local",
            "name": "error_obj",
            "type": [
                "str",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_root_level_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_single_field_error@TestBuildErrorObject": [
        {
            "category": "local",
            "name": "errors",
            "type": [
                "list[MockValidationError]"
            ]
        },
        {
            "category": "local",
            "name": "error_obj",
            "type": [
                "str",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_single_field_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestArray": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestArrayOfObjects": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestArrayOfStrings": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestBoolean": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestDate": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestDateTime": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestDict": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestNestedObject": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestNumber": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestObject": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestObjectOptionalParameters": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate@TestString": [
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_errors",
            "type": [
                "Exception",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict",
                "\"Parameters\"",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_validate",
            "type": [
                "None"
            ]
        }
    ],
    "test_value_not_found@TestBuildErrorObjectWithPlaceholders": [
        {
            "category": "local",
            "name": "errors",
            "type": [
                "list[MockValidationError]"
            ]
        },
        {
            "category": "local",
            "name": "error_obj",
            "type": [
                "str",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_value_not_found",
            "type": [
                "None"
            ]
        }
    ]
}