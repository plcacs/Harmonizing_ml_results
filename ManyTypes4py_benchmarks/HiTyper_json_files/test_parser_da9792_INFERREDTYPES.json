{
    "_generate_macros@BaseParserTest": [
        {
            "category": "local",
            "name": "name_sql",
            "type": [
                "dict",
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "component",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text",
                "tuple[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "sql",
            "type": [
                "typing.Text",
                "tuple[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "pm",
            "type": [
                "Macro"
            ]
        },
        {
            "category": "return",
            "name": "_generate_macros",
            "type": [
                "typing.Generator[Macro]"
            ]
        }
    ],
    "assertEqualNodes@global": [
        {
            "category": "arg",
            "name": "node_one",
            "type": [
                "typing.Callable[None, bool]",
                "int",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "node_two",
            "type": [
                "int",
                "ruamel.yaml.Node"
            ]
        },
        {
            "category": "local",
            "name": "node_one",
            "type": [
                "typing.Callable[None, bool]",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "node_one_dict",
            "type": [
                "dict",
                "dict[int, int]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "node_two",
            "type": [
                "int",
                "ruamel.yaml.Node"
            ]
        },
        {
            "category": "local",
            "name": "node_two_dict",
            "type": [
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "assertEqualNodes",
            "type": [
                "bool"
            ]
        }
    ],
    "assert_has_manifest_lengths@BaseParserTest": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "depender.graph.dependency.DependencyGraph",
                "dict[str, utils.CWLObjectType]",
                "list[utils.CWLObjectType]"
            ]
        },
        {
            "category": "arg",
            "name": "macros",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "nodes",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "sources",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "docs",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "disabled",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "unit_tests",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "depender.graph.dependency.DependencyGraph",
                "dict[str, utils.CWLObjectType]",
                "list[utils.CWLObjectType]"
            ]
        },
        {
            "category": "local",
            "name": "macros",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "nodes",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "sources",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "docs",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "disabled",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "unit_tests",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "assert_has_manifest_lengths",
            "type": [
                "None"
            ]
        }
    ],
    "file_block_for@AnalysisParserTest": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "file_block_for",
            "type": [
                "list[str]",
                "typing.Sequence[str]"
            ]
        }
    ],
    "file_block_for@BaseParserTest": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "searched",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "searched",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "source_file",
            "type": [
                "str",
                "os.DirEntry"
            ]
        },
        {
            "category": "return",
            "name": "file_block_for",
            "type": [
                "FileBlock"
            ]
        }
    ],
    "file_block_for@GenericTestParserTest": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "file_block_for",
            "type": [
                "typing.Sequence[str]",
                "list[str]"
            ]
        }
    ],
    "file_block_for@MacroParserTest": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "file_block_for",
            "type": [
                "list[str]",
                "typing.Sequence[str]",
                "mypy.nodes.MypyFile"
            ]
        }
    ],
    "file_block_for@ModelParserTest": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "file_block_for",
            "type": [
                "typing.Sequence[str]",
                "list[str]",
                "str"
            ]
        }
    ],
    "file_block_for@SchemaParserTest": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "searched",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "searched",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "file_block_for",
            "type": [
                "typing.Sequence[str]",
                "str",
                "dict"
            ]
        }
    ],
    "file_block_for@SingularTestParserTest": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "file_block_for",
            "type": [
                "typing.Sequence[str]",
                "list[str]"
            ]
        }
    ],
    "file_block_for@SnapshotParserTest": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "file_block_for",
            "type": [
                "typing.Sequence[str]",
                "list[str]",
                "dbcontracts.files.SourceFile"
            ]
        }
    ],
    "file_block_for@StaticModelParserTest": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "file_block_for",
            "type": [
                "typing.Sequence[str]",
                "list[str]",
                "str"
            ]
        }
    ],
    "file_block_for@StaticModelParserUnitTest": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "file_block_for",
            "type": [
                "typing.Sequence[str]",
                "list[str]",
                "str"
            ]
        }
    ],
    "get_abs_os_path@global": [
        {
            "category": "arg",
            "name": "unix_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "unix_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_abs_os_path",
            "type": [
                "str"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "SINGLE_TABLE_SOURCE",
            "type": [
                "typing.Text",
                "str",
                "set[str]",
                "list[fonduer.parser.models.Sentence]"
            ]
        },
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_SOURCE_META",
            "type": [
                "typing.Text",
                "bool",
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "SINGLE_TABLE_SOURCE_TESTS",
            "type": [
                "typing.Text",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "SINGLE_TABLE_MODEL_TESTS",
            "type": [
                "typing.Text",
                "str",
                "list[bool]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "SINGLE_TABLE_MODEL_TESTS_WRONG_SEVERITY",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "SINGLE_TALBE_MODEL_FRESHNESS",
            "type": [
                "typing.Text",
                "str",
                "dict[str, typing.Callable[None,None, typing.Any]]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "SINGLE_TALBE_MODEL_FRESHNESS_ONLY_DEPEND_ON",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_VERSIONED_MODEL_TESTS",
            "type": [
                "typing.Text",
                "bool",
                "tuple[typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_VERSIONED_MODEL",
            "type": [
                "typing.Text",
                "bool",
                "dict[str, str]",
                "dep_check.models.Rules"
            ]
        },
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_VERSIONED_MODEL_CONTRACT_ENFORCED",
            "type": [
                "typing.Text",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_VERSIONED_MODEL_V0",
            "type": [
                "typing.Text",
                "dict[str, bool]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_VERSIONED_MODEL_V0_LATEST_VERSION",
            "type": [
                "typing.Text",
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "SINGLE_TABLE_SOURCE_PATCH",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "SOURCE_CUSTOM_FRESHNESS_AT_SOURCE",
            "type": [
                "typing.Text",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "SOURCE_CUSTOM_FRESHNESS_AT_SOURCE_FIELD_AT_TABLE",
            "type": [
                "typing.Text",
                "dict[str, dict[str, int]]",
                "dict[str, int]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "SOURCE_FIELD_AT_SOURCE_CUSTOM_FRESHNESS_AT_TABLE",
            "type": [
                "typing.Text",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "SOURCE_FIELD_AT_CUSTOM_FRESHNESS_BOTH_AT_TABLE",
            "type": [
                "typing.Text",
                "bool",
                "str",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "SOURCE_FIELD_AT_CUSTOM_FRESHNESS_BOTH_AT_SOURCE",
            "type": [
                "typing.Text",
                "str",
                "dict[str, typing.Any]",
                "dict[str, bool]"
            ]
        },
        {
            "category": "local",
            "name": "parser",
            "type": [
                "SchemaParser",
                "ModelParser",
                "SnapshotParser",
                "SingularTestParser",
                "AnalysisParser"
            ]
        },
        {
            "category": "local",
            "name": "source_patcher",
            "type": [
                "SourcePatcher"
            ]
        },
        {
            "category": "local",
            "name": "sql_model",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sql_model_parse_error",
            "type": [
                "typing.Text",
                "str",
                "dict[str, typing.Any]",
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "python_model",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "python_model_config",
            "type": [
                "typing.Text",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "python_model_config_with_defaults",
            "type": [
                "typing.Text",
                "dict[str, int]",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "python_model_single_argument",
            "type": [
                "typing.Text",
                "int",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "python_model_no_argument",
            "type": [
                "typing.Text",
                "int",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "python_model_incorrect_argument_name",
            "type": [
                "typing.Text",
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "python_model_multiple_models",
            "type": [
                "typing.Text",
                "bool",
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "python_model_incorrect_function_name",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "python_model_empty_file",
            "type": [
                "typing.Text",
                "str",
                "bool",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "python_model_multiple_returns",
            "type": [
                "typing.Text",
                "bool",
                "typing.Final"
            ]
        },
        {
            "category": "local",
            "name": "python_model_f_string",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "python_model_no_return",
            "type": [
                "typing.Text",
                "int",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "python_model_single_return",
            "type": [
                "typing.Text",
                "list[str]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "python_model_incorrect_ref",
            "type": [
                "typing.Text",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "python_model_default_materialization",
            "type": [
                "typing.Text",
                "int",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "python_model_custom_materialization",
            "type": [
                "typing.Text",
                "str",
                "frozenset",
                "dict[str, typing.Union[typing.Any,int]]"
            ]
        }
    ],
    "setUp@AnalysisParserTest": [
        {
            "category": "local",
            "name": "parser",
            "type": [
                "AnalysisParser"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@BaseParserTest": [
        {
            "category": "local",
            "name": "maxDiff",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "profile_data",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "root_project",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "local",
            "name": "root_project_config",
            "type": [
                "set[str]",
                "dict[typing.Any, str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "snowplow_project",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "local",
            "name": "snowplow_project_config",
            "type": [
                "dict[str, int]",
                "dict[str, list[typing.Any]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "all_projects",
            "type": [
                "dict[typing.Text, typing.Union[set[str],dict[typing.Any, str],dict[str, typing.Any],dict[str, int],dict[str, list[typing.Any]]]]"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "dict[typing.Text, typing.Union[set[str],dict[typing.Any, str],dict[str, typing.Any],dict[str, int],dict[str, list[typing.Any]]]]"
            ]
        },
        {
            "category": "local",
            "name": "factory",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "factory_parser",
            "type": [
                "argparse.ArgumentParser",
                "typing.Callable[str, typing.Union[typing.Any,None,int]]"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "Manifest"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@GenericTestParserTest": [
        {
            "category": "local",
            "name": "parser",
            "type": [
                "GenericTestParser"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@MacroParserTest": [
        {
            "category": "local",
            "name": "parser",
            "type": [
                "MacroParser"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@ModelParserTest": [
        {
            "category": "local",
            "name": "parser",
            "type": [
                "ModelParser"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@SchemaParserModelsTest": [
        {
            "category": "local",
            "name": "my_model_node",
            "type": [
                "MockNode"
            ]
        },
        {
            "category": "local",
            "name": "source_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "nodes",
            "type": [
                "dict[, MockNode]"
            ]
        },
        {
            "category": "local",
            "name": "macros",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "Manifest"
            ]
        },
        {
            "category": "local",
            "name": "parser",
            "type": [
                "SchemaParser"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@SchemaParserTest": [
        {
            "category": "local",
            "name": "parser",
            "type": [
                "SchemaParser"
            ]
        },
        {
            "category": "local",
            "name": "source_patcher",
            "type": [
                "SourcePatcher"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@SchemaParserVersionedModels": [
        {
            "category": "local",
            "name": "my_model_v1_node",
            "type": [
                "MockNode"
            ]
        },
        {
            "category": "local",
            "name": "my_model_v1_source_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "my_model_v2_node",
            "type": [
                "MockNode"
            ]
        },
        {
            "category": "local",
            "name": "my_model_v2_source_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "nodes",
            "type": [
                "dict[, MockNode]"
            ]
        },
        {
            "category": "local",
            "name": "macros",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "files",
            "type": [
                "dict[, str]"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "Manifest"
            ]
        },
        {
            "category": "local",
            "name": "parser",
            "type": [
                "SchemaParser"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@SingularTestParserTest": [
        {
            "category": "local",
            "name": "parser",
            "type": [
                "SingularTestParser"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@SnapshotParserTest": [
        {
            "category": "local",
            "name": "parser",
            "type": [
                "SnapshotParser"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@StaticModelParserTest": [
        {
            "category": "local",
            "name": "parser",
            "type": [
                "ModelParser"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@StaticModelParserUnitTest": [
        {
            "category": "local",
            "name": "parser",
            "type": [
                "ModelParser"
            ]
        },
        {
            "category": "local",
            "name": "example_node",
            "type": [
                "ModelNode"
            ]
        },
        {
            "category": "local",
            "name": "example_config",
            "type": [
                "ContextConfig"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "source_file_for@BaseParserTest": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "searched",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "root_dir",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "searched",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "FilePath"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "source_file_",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "source_file_for",
            "type": []
        }
    ],
    "tearDown@BaseParserTest": [
        {
            "category": "return",
            "name": "tearDown",
            "type": [
                "None"
            ]
        }
    ],
    "test__parse_basic_model_tests@SchemaParserModelsTest": [
        {
            "category": "local",
            "name": "SINGLE_TABLE_MODEL_TESTS",
            "type": [
                "str",
                "list[bool]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "src.pip_shims.models.ShimmedPathCollection",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "all_nodes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "tests",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test__parse_basic_model_tests",
            "type": [
                "None"
            ]
        }
    ],
    "test__parse_basic_source@SchemaParserSourceTest": [
        {
            "category": "local",
            "name": "SINGLE_TABLE_SOURCE",
            "type": [
                "str",
                "set[str]",
                "list[fonduer.parser.models.Sentence]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "src",
            "type": [
                "str",
                "list[str]",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "test__parse_basic_source",
            "type": [
                "None"
            ]
        }
    ],
    "test__parse_basic_source_meta@SchemaParserSourceTest": [
        {
            "category": "arg",
            "name": "mock_get_adapter",
            "type": [
                "mock.MagicMock",
                "mock.Mock",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_SOURCE_META",
            "type": [
                "bool",
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "list[str]",
                "components.scripdom.bindings.codegen.parser.WebIDL.IDLMethodOverload"
            ]
        },
        {
            "category": "local",
            "name": "src_default",
            "type": [
                "str",
                "list[str]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "src_override",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test__parse_basic_source_meta",
            "type": [
                "None"
            ]
        }
    ],
    "test__parse_basic_source_tests@SchemaParserSourceTest": [
        {
            "category": "local",
            "name": "SINGLE_TABLE_SOURCE_TESTS",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "src.pip_shims.models.ShimmedPathCollection"
            ]
        },
        {
            "category": "local",
            "name": "src",
            "type": [
                "str",
                "list[str]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "tests",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test__parse_basic_source_tests",
            "type": [
                "None"
            ]
        }
    ],
    "test__parse_model_freshness@SchemaParserModelsTest": [
        {
            "category": "local",
            "name": "SINGLE_TALBE_MODEL_FRESHNESS",
            "type": [
                "str",
                "dict[str, typing.Callable[None,None, typing.Any]]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "list",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test__parse_model_freshness",
            "type": [
                "None"
            ]
        }
    ],
    "test__parse_model_freshness_depend_on@SchemaParserModelsTest": [
        {
            "category": "local",
            "name": "SINGLE_TALBE_MODEL_FRESHNESS_ONLY_DEPEND_ON",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, None]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test__parse_model_freshness_depend_on",
            "type": [
                "None"
            ]
        }
    ],
    "test__parse_versioned_model_tests@SchemaParserVersionedModels": [
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_VERSIONED_MODEL_TESTS",
            "type": [
                "bool",
                "tuple[typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, None]"
            ]
        },
        {
            "category": "local",
            "name": "all_nodes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test__parse_versioned_model_tests",
            "type": [
                "None"
            ]
        }
    ],
    "test__parsed_versioned_models@SchemaParserVersionedModels": [
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_VERSIONED_MODEL",
            "type": [
                "bool",
                "dict[str, str]",
                "dep_check.models.Rules"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "int",
                "list",
                "set[str]"
            ]
        },
        {
            "category": "return",
            "name": "test__parsed_versioned_models",
            "type": [
                "None"
            ]
        }
    ],
    "test__parsed_versioned_models_contract_enforced@SchemaParserVersionedModels": [
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_VERSIONED_MODEL_CONTRACT_ENFORCED",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "set",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test__parsed_versioned_models_contract_enforced",
            "type": [
                "None"
            ]
        }
    ],
    "test__parsed_versioned_models_v0@SchemaParserVersionedModels": [
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_VERSIONED_MODEL_V0",
            "type": [
                "dict[str, bool]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "typing.Callable[None,None,None,None,None,None, None]"
            ]
        },
        {
            "category": "return",
            "name": "test__parsed_versioned_models_v0",
            "type": [
                "None"
            ]
        }
    ],
    "test__parsed_versioned_models_v0_latest_version@SchemaParserVersionedModels": [
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_VERSIONED_MODEL_V0_LATEST_VERSION",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "list[bool]",
                "typing.Callable[None,None,None,None,None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test__parsed_versioned_models_v0_latest_version",
            "type": [
                "None"
            ]
        }
    ],
    "test__read_basic_model_tests@SchemaParserModelsTest": [
        {
            "category": "local",
            "name": "SINGLE_TABLE_MODEL_TESTS",
            "type": [
                "str",
                "list[bool]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "set",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test__read_basic_model_tests",
            "type": [
                "None"
            ]
        }
    ],
    "test__read_basic_model_tests_wrong_severity@SchemaParserModelsTest": [
        {
            "category": "local",
            "name": "SINGLE_TABLE_MODEL_TESTS_WRONG_SEVERITY",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test__read_basic_model_tests_wrong_severity",
            "type": [
                "None"
            ]
        }
    ],
    "test__read_basic_source@SchemaParserSourceTest": [
        {
            "category": "local",
            "name": "SINGLE_TABLE_SOURCE",
            "type": [
                "str",
                "set[str]",
                "list[fonduer.parser.models.Sentence]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "list[str]",
                "argparse.Namespace"
            ]
        },
        {
            "category": "local",
            "name": "source_values",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test__read_basic_source",
            "type": [
                "None"
            ]
        }
    ],
    "test__read_basic_source_tests@SchemaParserSourceTest": [
        {
            "category": "local",
            "name": "SINGLE_TABLE_SOURCE_TESTS",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "list",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "source_values",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test__read_basic_source_tests",
            "type": [
                "None"
            ]
        }
    ],
    "test__read_source_patch@SchemaParserSourceTest": [
        {
            "category": "local",
            "name": "SINGLE_TABLE_SOURCE_PATCH",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "list[dict[str, typing.Any]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "source_patches",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "table",
            "type": [
                "dict",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test__read_source_patch",
            "type": [
                "None"
            ]
        }
    ],
    "test__read_versioned_model_tests@SchemaParserVersionedModels": [
        {
            "category": "local",
            "name": "MULTIPLE_TABLE_VERSIONED_MODEL_TESTS",
            "type": [
                "bool",
                "tuple[typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "set",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test__read_versioned_model_tests",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic@AnalysisParserTest": [
        {
            "category": "local",
            "name": "raw_code",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "list[bytes]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "typing.Any",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "AnalysisNode"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str",
                "dict[int, bytes]"
            ]
        },
        {
            "category": "return",
            "name": "test_basic",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic@GenericTestParserTest": [
        {
            "category": "local",
            "name": "raw_code",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "typing.Any",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Macro"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_basic",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic@ModelParserTest": [
        {
            "category": "local",
            "name": "sql_model",
            "type": [
                "str",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "list",
                "dict[str, object]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "typing.Any",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "ModelNode"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_basic",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic@SingularTestParserTest": [
        {
            "category": "local",
            "name": "raw_code",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "list[bytes]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "typing.Any",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "SingularTestNode"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str",
                "dict[int, bytes]"
            ]
        },
        {
            "category": "return",
            "name": "test_basic",
            "type": [
                "None"
            ]
        }
    ],
    "test_built_in_macro_override_detection@StaticModelParserTest": [
        {
            "category": "local",
            "name": "macro_unique_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "raw_code",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "typing.Type",
                "str",
                "tests.unibrowser.webkinetwork.test_filescheme.TestDirbrowserHtml.Item"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "ModelNode"
            ]
        },
        {
            "category": "return",
            "name": "test_built_in_macro_override_detection",
            "type": [
                "None"
            ]
        }
    ],
    "test_config_shifting@StaticModelParserUnitTest": [
        {
            "category": "local",
            "name": "static_parser_result",
            "type": [
                "dict[typing.Text, list[tuple[typing.Union[typing.Text,bool]]]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,bool,list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "got",
            "type": [
                "typing.Callable[None,None,None, typing.Callable[None, typing.Any]]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_config_shifting",
            "type": [
                "None"
            ]
        }
    ],
    "test_exp_sample_results@StaticModelParserUnitTest": [
        {
            "category": "return",
            "name": "test_exp_sample_results",
            "type": [
                "None"
            ]
        }
    ],
    "test_multi_block@SnapshotParserTest": [
        {
            "category": "local",
            "name": "raw_1",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "raw_2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "full_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "list",
                "myia.parser.Block"
            ]
        },
        {
            "category": "local",
            "name": "nodes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expect_foo",
            "type": [
                "SnapshotNode"
            ]
        },
        {
            "category": "local",
            "name": "expect_bar",
            "type": [
                "SnapshotNode"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_multi_block",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_blocks@MacroParserTest": [
        {
            "category": "local",
            "name": "raw_code",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "macros",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected_bar",
            "type": [
                "Macro"
            ]
        },
        {
            "category": "local",
            "name": "expected_foo",
            "type": [
                "Macro"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_multiple_blocks",
            "type": [
                "None"
            ]
        }
    ],
    "test_parse_error@SnapshotParserTest": [
        {
            "category": "local",
            "name": "block",
            "type": [
                "tuple",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_parse_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_parse_source_custom_freshness_at_source@SchemaParserSourceTest": [
        {
            "category": "arg",
            "name": "_",
            "type": [
                "tests.basilisp.helpers.CompileFn"
            ]
        },
        {
            "category": "local",
            "name": "SOURCE_CUSTOM_FRESHNESS_AT_SOURCE",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "src_default",
            "type": [
                "str",
                "list[str]",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test_parse_source_custom_freshness_at_source",
            "type": [
                "None"
            ]
        }
    ],
    "test_parse_source_custom_freshness_at_source_field_at_table@SchemaParserSourceTest": [
        {
            "category": "arg",
            "name": "_",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "SOURCE_CUSTOM_FRESHNESS_AT_SOURCE_FIELD_AT_TABLE",
            "type": [
                "dict[str, dict[str, int]]",
                "dict[str, int]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "src_default",
            "type": [
                "str",
                "list[str]",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test_parse_source_custom_freshness_at_source_field_at_table",
            "type": [
                "None"
            ]
        }
    ],
    "test_parse_source_field_at_custom_freshness_both_at_source_fails@SchemaParserSourceTest": [
        {
            "category": "arg",
            "name": "_",
            "type": [
                "tests.basilisp.helpers.CompileFn"
            ]
        },
        {
            "category": "local",
            "name": "SOURCE_FIELD_AT_CUSTOM_FRESHNESS_BOTH_AT_SOURCE",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict[str, bool]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "set[str]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_parse_source_field_at_custom_freshness_both_at_source_fails",
            "type": [
                "None"
            ]
        }
    ],
    "test_parse_source_field_at_custom_freshness_both_at_table_fails@SchemaParserSourceTest": [
        {
            "category": "arg",
            "name": "_",
            "type": [
                "tests.basilisp.helpers.CompileFn"
            ]
        },
        {
            "category": "local",
            "name": "SOURCE_FIELD_AT_CUSTOM_FRESHNESS_BOTH_AT_TABLE",
            "type": [
                "bool",
                "str",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "set[str]",
                "list",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_parse_source_field_at_custom_freshness_both_at_table_fails",
            "type": [
                "None"
            ]
        }
    ],
    "test_parse_source_field_at_source_custom_freshness_at_table@SchemaParserSourceTest": [
        {
            "category": "arg",
            "name": "_",
            "type": [
                "tests.basilisp.helpers.CompileFn"
            ]
        },
        {
            "category": "local",
            "name": "SOURCE_FIELD_AT_SOURCE_CUSTOM_FRESHNESS_AT_TABLE",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "list[str]",
                "dict[str, list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "src_default",
            "type": [
                "str",
                "list[str]",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test_parse_source_field_at_source_custom_freshness_at_table",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_config@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_config",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "list[str]",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "typing.Any",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_config_with_defaults@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_config_with_defaults",
            "type": [
                "dict[str, int]",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "jinja2.nodes.FromImport",
                "dict",
                "ami.flowcharlibrary.common.SourceNode"
            ]
        },
        {
            "category": "local",
            "name": "default_values",
            "type": [
                "dict[str, typing.Union[bool,float]]",
                "list",
                "dict[int, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_config_with_defaults",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_custom_materialization@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_custom_materialization",
            "type": [
                "str",
                "frozenset",
                "dict[str, typing.Union[typing.Any,int]]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "typing.Callable[None,None,None,None,None,None, None]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "list",
                "typing.Any",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_custom_materialization",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_default_materialization@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_default_materialization",
            "type": [
                "int",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, None]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "list",
                "typing.Any",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_default_materialization",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_empty_file@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_empty_file",
            "type": [
                "str",
                "bool",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, None]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_empty_file",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_f_string_config@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_f_string",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "int",
                "nex.utils.InfiniteDimension",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "typing.Any",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_f_string_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_incorrect_argument_name@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_incorrect_argument_name",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "int",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_incorrect_argument_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_incorrect_function_name@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_incorrect_function_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, None]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_incorrect_function_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_incorrect_ref@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_incorrect_ref",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "int",
                "nex.utils.InfiniteDimension"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_incorrect_ref",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_multiple_models@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_multiple_models",
            "type": [
                "bool",
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_multiple_models",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_multiple_returns@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_multiple_returns",
            "type": [
                "bool",
                "typing.Final"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_multiple_returns",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_no_argument@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_no_argument",
            "type": [
                "int",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, None]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_no_argument",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_no_return@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_no_return",
            "type": [
                "int",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, None]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_no_return",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_parse@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model",
            "type": [
                "str",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "typing.Any",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "python_packages",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "ModelNode"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_parse",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_single_argument@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_single_argument",
            "type": [
                "int",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "typing.Callable[None,None,None,None,None,None, None]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_single_argument",
            "type": [
                "None"
            ]
        }
    ],
    "test_python_model_single_return@ModelParserTest": [
        {
            "category": "local",
            "name": "python_model_single_return",
            "type": [
                "list[str]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_python_model_single_return",
            "type": [
                "None"
            ]
        }
    ],
    "test_sample_results@StaticModelParserUnitTest": [
        {
            "category": "local",
            "name": "sample_node_",
            "type": [
                "list",
                "list[typing.Text]",
                "list[list[typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "node_",
            "type": [
                "list[typing.Text]",
                "list",
                "list[list[typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "sample_config_",
            "type": [
                "dict",
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "config_",
            "type": [
                "dict[typing.Text, typing.Text]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_sample_results",
            "type": [
                "None"
            ]
        }
    ],
    "test_single_block@MacroParserTest": [
        {
            "category": "local",
            "name": "raw_code",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "macro",
            "type": [
                "list[str]",
                "list[tuple[str]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Macro"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_single_block",
            "type": [
                "None"
            ]
        }
    ],
    "test_single_block@SnapshotParserTest": [
        {
            "category": "local",
            "name": "raw_code",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "full_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "list",
                "myia.parser.Block"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "list",
                "typing.Any",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "SnapshotNode"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_single_block",
            "type": [
                "None"
            ]
        }
    ],
    "test_source_shifting@StaticModelParserUnitTest": [
        {
            "category": "local",
            "name": "static_parser_result",
            "type": [
                "dict[typing.Text, list[tuple[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "dict[typing.Text, list[list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "got",
            "type": [
                "tests.test_undefined_parameters.UnknownAPIDump",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_source_shifting",
            "type": [
                "None"
            ]
        }
    ],
    "test_sql_model_parse_error@ModelParserTest": [
        {
            "category": "local",
            "name": "sql_model_parse_error",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_sql_model_parse_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_stable_sample_results@StaticModelParserUnitTest": [
        {
            "category": "return",
            "name": "test_stable_sample_results",
            "type": [
                "None"
            ]
        }
    ],
    "yaml_block_for@SchemaParserTest": [
        {
            "category": "arg",
            "name": "test_yml",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_yml",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "file_block",
            "type": [
                "pytch.utils.FileInfo",
                "set"
            ]
        },
        {
            "category": "return",
            "name": "yaml_block_for",
            "type": []
        }
    ]
}