{
    "__init__@MockMusicServiceItem": [
        {
            "category": "arg",
            "name": "title",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "item_id",
            "type": [
                "str",
                "None",
                "list[\"TextLineItem\"]",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "parent_id",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "item_class",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "album_art_uri",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "title",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "item_id",
            "type": [
                "str",
                "None",
                "list[\"TextLineItem\"]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "item_class",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "parent_id",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "album_art_uri",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SoCoMockFactory": [
        {
            "category": "arg",
            "name": "music_library",
            "type": [
                "set[str]",
                "dict[str, set[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "speaker_info",
            "type": [
                "list[tuple[str]]",
                "set[str]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "current_track_info_empty",
            "type": [
                "dict",
                "dict[str, int]",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "battery_info",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "alarm_clock",
            "type": [
                "str",
                "list[str]",
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "sonos_playlists",
            "type": [
                "list[dict[str, typing.Any]]",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "sonos_queue",
            "type": [
                "bool",
                "str",
                "list[typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "mock_list",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "music_library",
            "type": [
                "set[str]",
                "dict[str, set[str]]"
            ]
        },
        {
            "category": "local",
            "name": "speaker_info",
            "type": [
                "list[tuple[str]]",
                "set[str]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "current_track_info_empty",
            "type": [
                "dict",
                "dict[str, int]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "current_track_info",
            "type": [
                "dict",
                "dict[str, int]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "battery_info",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "alarm_clock",
            "type": [
                "str",
                "list[str]",
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "sonos_playlists",
            "type": [
                "list[dict[str, typing.Any]]",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "sonos_queue",
            "type": [
                "bool",
                "str",
                "list[typing.Any]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SonosMockEvent": [
        {
            "category": "arg",
            "name": "soco",
            "type": [
                "bytes",
                "typing.Mapping",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "service",
            "type": [
                "str",
                "None",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "arg",
            "name": "variables",
            "type": [
                "str",
                "typing.Iterable[str]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "soco",
            "type": [
                "bytes",
                "typing.Mapping",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sid",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "seq",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "timestamp",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "service",
            "type": [
                "str",
                "None",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "variables",
            "type": [
                "str",
                "typing.Iterable[str]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SonosMockEventListener": [
        {
            "category": "arg",
            "name": "ip_address",
            "type": [
                "str",
                "\"Address\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ip_address",
            "type": [
                "str",
                "\"Address\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "address",
            "type": [
                "list[typing.Union[str,\"Address\",None]]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SonosMockService": [
        {
            "category": "arg",
            "name": "service_type",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "ip_address",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "service_type",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ip_address",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "subscribe",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SonosMockSubscribe": [
        {
            "category": "arg",
            "name": "ip_address",
            "type": [
                "str",
                "set",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "ip_address",
            "type": [
                "str",
                "set",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "event_listener",
            "type": [
                "SonosMockEventListener"
            ]
        },
        {
            "category": "local",
            "name": "service",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "callback_future",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_callback",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_get_callback_future@SonosMockSubscribe": [
        {
            "category": "local",
            "name": "callback_future",
            "type": [
                "collections.abc.Awaitable[typing.Any]",
                "asyncio.Task"
            ]
        },
        {
            "category": "return",
            "name": "_get_callback_future",
            "type": [
                "collections.abc.Awaitable[typing.Any]",
                "asyncio.Task"
            ]
        }
    ],
    "_wrapper@global": [
        {
            "category": "local",
            "name": "sonos_alarms",
            "type": [
                "Alarms"
            ]
        },
        {
            "category": "local",
            "name": "sonos_alarms_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_wrapper",
            "type": [
                "None"
            ]
        }
    ],
    "alarm_clock_fixture@global": [
        {
            "category": "local",
            "name": "alarm_clock",
            "type": [
                "SonosMockService"
            ]
        },
        {
            "category": "local",
            "name": "alarm_clock_",
            "type": [
                "Mock",
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "alarm_clock_fixture",
            "type": [
                "SonosMockService"
            ]
        }
    ],
    "alarm_clock_fixture_extended@global": [
        {
            "category": "local",
            "name": "alarm_clock",
            "type": [
                "SonosMockService"
            ]
        },
        {
            "category": "local",
            "name": "alarm_clock_",
            "type": [
                "Mock",
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "alarm_clock_fixture_extended",
            "type": [
                "SonosMockService"
            ]
        }
    ],
    "alarm_event_fixture@global": [
        {
            "category": "arg",
            "name": "soco",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "variables",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,None]]"
            ]
        },
        {
            "category": "local",
            "name": "soco",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "alarm_event_fixture",
            "type": [
                "SonosMockEvent"
            ]
        }
    ],
    "async_autosetup_sonos@global": [
        {
            "category": "arg",
            "name": "async_setup_sonos",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "async_autosetup_sonos",
            "type": [
                "None"
            ]
        }
    ],
    "async_setup_sonos@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "config_entry",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "fire_zgs_event",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "async_setup_sonos",
            "type": []
        }
    ],
    "battery_info_fixture@global": [
        {
            "category": "return",
            "name": "battery_info_fixture",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int]]"
            ]
        }
    ],
    "cache_mock@SoCoMockFactory": [
        {
            "category": "arg",
            "name": "mock_soco",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "ip_address",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "mock_soco",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "ip_address",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "mock_soco_",
            "type": [
                "str",
                "typing.Callable",
                "dict[str, str]",
                "dict[int, dict[str, typing.Any]]",
                "Mock",
                "SonosMockService",
                "set[typing.Union[str,typing.Callable]]"
            ]
        },
        {
            "category": "local",
            "name": "music_library",
            "type": [
                "str",
                "dict[str, str]",
                "dict[int, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "cache_mock",
            "type": [
                "str",
                "typing.Callable"
            ]
        }
    ],
    "callback@SonosMockSubscribe": [
        {
            "category": "local",
            "name": "_callback",
            "type": [
                "int",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "callback",
            "type": [
                "int",
                "typing.Type"
            ]
        }
    ],
    "config_entry_fixture@global": [
        {
            "category": "return",
            "name": "config_entry_fixture",
            "type": [
                "MockConfigEntry"
            ]
        }
    ],
    "config_fixture@global": [
        {
            "category": "return",
            "name": "config_fixture",
            "type": [
                "dict[, dict[, dict[, list[typing.Text]]]]"
            ]
        }
    ],
    "current_track_info_empty_fixture@global": [
        {
            "category": "return",
            "name": "current_track_info_empty_fixture",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        }
    ],
    "device_properties_event_fixture@global": [
        {
            "category": "arg",
            "name": "soco",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "variables",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "soco",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "device_properties_event_fixture",
            "type": [
                "SonosMockEvent"
            ]
        }
    ],
    "discover_fixture@global": [
        {
            "category": "arg",
            "name": "soco",
            "type": [
                "typing.IO",
                "tuple[tuple[typing.Union[bool,str]]]",
                "helpers.JSONType"
            ]
        },
        {
            "category": "return",
            "name": "discover_fixture",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "do_callback@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": []
        },
        {
            "category": "arg",
            "name": "callback",
            "type": []
        },
        {
            "category": "arg",
            "name": "match_dict",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "do_callback",
            "type": [
                "MagicMock"
            ]
        }
    ],
    "get_mock@SoCoMockFactory": [
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "ip_address",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "get_mock",
            "type": [
                "MockSoCo"
            ]
        },
        {
            "category": "local",
            "name": "mock_soco",
            "type": [
                "MockSoCo"
            ]
        }
    ],
    "global@global": [],
    "increment_variable@SonosMockEvent": [
        {
            "category": "arg",
            "name": "var_name",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "variables",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "var_name",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "newcount",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "increment_variable",
            "type": []
        }
    ],
    "list_from_json_fixture@global": [
        {
            "category": "arg",
            "name": "file_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "file_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "item_list",
            "type": [
                "list",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "list_from_json_fixture",
            "type": [
                "list[MockMusicServiceItem]"
            ]
        }
    ],
    "mock_browse_by_idstring@global": [
        {
            "category": "arg",
            "name": "search_type",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "idstring",
            "type": [
                "str",
                "eventdb.core.store.resolvemode.ResolveMode"
            ]
        },
        {
            "category": "arg",
            "name": "start",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "max_items",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "full_album_art_uri",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "search_type",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "idstring",
            "type": [
                "str",
                "eventdb.core.store.resolvemode.ResolveMode"
            ]
        },
        {
            "category": "return",
            "name": "mock_browse_by_idstring",
            "type": [
                "list[MockMusicServiceItem]",
                "boucanpy.core.http_server.HttpServerRepo",
                "boucanpy.core.security.TokenPayload",
                "list"
            ]
        }
    ],
    "mock_get_music_library_information@global": [
        {
            "category": "arg",
            "name": "search_type",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "search_term",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "full_album_art_uri",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "search_type",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "search_term",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "mock_get_music_library_information",
            "type": [
                "list[MockMusicServiceItem]",
                "list"
            ]
        }
    ],
    "music_library_browse_categories@global": [
        {
            "category": "return",
            "name": "music_library_browse_categories",
            "type": [
                "list[str]",
                "list[src.core.model.library.Library]",
                "list[dict[str, typing.Any]]"
            ]
        }
    ],
    "music_library_fixture@global": [
        {
            "category": "arg",
            "name": "sonos_favorites",
            "type": [
                "str",
                "bool",
                "dict[str, list[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "music_library_browse_categories",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "music_library",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "sonos_favorites",
            "type": [
                "str",
                "bool",
                "dict[str, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "music_library_",
            "type": [
                "str",
                "bool",
                "dict[str, list[str]]",
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "music_library_browse_categories",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "music_library_fixture",
            "type": [
                "MagicMock"
            ]
        }
    ],
    "no_media_event_fixture@global": [
        {
            "category": "arg",
            "name": "soco",
            "type": [
                "unittesmock.Mock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "variables",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "soco",
            "type": [
                "unittesmock.Mock",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "no_media_event_fixture",
            "type": [
                "SonosMockEvent"
            ]
        }
    ],
    "patch_gethostbyname@global": [
        {
            "category": "arg",
            "name": "host",
            "type": [
                "str",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "host",
            "type": [
                "str",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "patch_gethostbyname",
            "type": [
                "str",
                "bool",
                "list[str]"
            ]
        }
    ],
    "silent_ssdp_scanner@global": [
        {
            "category": "return",
            "name": "silent_ssdp_scanner",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "soco_factory@global": [
        {
            "category": "arg",
            "name": "music_library",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "speaker_info",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "current_track_info_empty",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "battery_info",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "alarm_clock",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "sonos_playlists",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "sonos_websocket",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "sonos_queue",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "music_library",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "speaker_info",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "current_track_info_empty",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "battery_info",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "alarm_clock",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "sonos_playlists",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "sonos_queue",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "factory",
            "type": [
                "SoCoMockFactory"
            ]
        },
        {
            "category": "return",
            "name": "soco_factory",
            "type": [
                "typing.Generator[SoCoMockFactory]"
            ]
        }
    ],
    "soco_fixture@global": [
        {
            "category": "arg",
            "name": "soco_factory",
            "type": []
        },
        {
            "category": "return",
            "name": "soco_fixture",
            "type": []
        }
    ],
    "soco_sharelink@global": [
        {
            "category": "local",
            "name": "mock_instance",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_instance_",
            "type": [
                "bool",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mock_share_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "soco_sharelink",
            "type": [
                "typing.Generator[MagicMock]"
            ]
        }
    ],
    "sonos_favorites_fixture@global": [
        {
            "category": "local",
            "name": "favorites",
            "type": [
                "list",
                "str",
                "dict[typing.Any, list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "fav",
            "type": [
                "typing.Text",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "favorite_list",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "sonos_favorites_fixture",
            "type": [
                "SearchResult"
            ]
        }
    ],
    "sonos_playlists_fixture@global": [
        {
            "category": "local",
            "name": "playlists",
            "type": [
                "dict[str, typing.Union[int,str]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "pl",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "playlists_list",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "sonos_playlists_fixture",
            "type": [
                "SearchResult"
            ]
        }
    ],
    "sonos_queue@global": [
        {
            "category": "local",
            "name": "queue",
            "type": [
                "dict[str, str]",
                "asyncio.Queue",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "track",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "sonos_queue",
            "type": [
                "list"
            ]
        }
    ],
    "sonos_setup_two_speakers@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "arg",
            "name": "soco_factory",
            "type": [
                "tests.async_mock.MagicMock",
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "soco_factory",
            "type": [
                "tests.async_mock.MagicMock",
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "soco_lr",
            "type": [
                "tests.mock.zwave.MockValue",
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "return",
            "name": "sonos_setup_two_speakers",
            "type": [
                "list[typing.Union[tests.mock.zwave.MockValue,unittesmock.Mock,unittesmock.MagicMock]]"
            ]
        }
    ],
    "sonos_websocket@global": [
        {
            "category": "local",
            "name": "mock_instance",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_instance_",
            "type": [
                "AsyncMock",
                "list[dict[typing.Text, int]]"
            ]
        },
        {
            "category": "local",
            "name": "mock_sonos_ws_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "sonos_websocket",
            "type": [
                "typing.Generator[AsyncMock]"
            ]
        }
    ],
    "speaker_info_fixture@global": [
        {
            "category": "return",
            "name": "speaker_info_fixture",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        }
    ],
    "tv_event_fixture@global": [
        {
            "category": "arg",
            "name": "soco",
            "type": [
                "asyncio.AbstractEventLoop",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "soco",
            "type": [
                "asyncio.AbstractEventLoop",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "variables",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Union[typing.Text,bool,list,None]]]]"
            ]
        },
        {
            "category": "return",
            "name": "tv_event_fixture",
            "type": [
                "SonosMockEvent"
            ]
        }
    ],
    "unsubscribe@SonosMockSubscribe": [
        {
            "category": "return",
            "name": "unsubscribe",
            "type": [
                "None"
            ]
        }
    ],
    "visible_zones@MockSoCo": [
        {
            "category": "return",
            "name": "visible_zones",
            "type": [
                "set[MockSoCo]"
            ]
        }
    ],
    "wait_for_callback_to_be_set@SonosMockSubscribe": [
        {
            "category": "return",
            "name": "wait_for_callback_to_be_set",
            "type": [
                "bool",
                "boucanpy.core.api_token.ApiTokenRepo"
            ]
        }
    ],
    "zeroconf_payload@global": [
        {
            "category": "return",
            "name": "zeroconf_payload",
            "type": [
                "ZeroconfServiceInfo"
            ]
        }
    ],
    "zgs_discovery_fixture@global": [
        {
            "category": "return",
            "name": "zgs_discovery_fixture",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "None",
                "str"
            ]
        }
    ],
    "zgs_event_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "soco",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "zgs_discovery",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "zgs_discovery",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "variables",
            "type": [
                "dict[typing.Text, homeassistancore.HomeAssistant]"
            ]
        },
        {
            "category": "return",
            "name": "zgs_event_fixture",
            "type": []
        }
    ]
}