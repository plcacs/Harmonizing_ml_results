{
    "deco@global": [
        {
            "category": "arg",
            "name": "fn",
            "type": []
        },
        {
            "category": "return",
            "name": "deco",
            "type": []
        }
    ],
    "deltas_name_to_flag_index@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "int",
                "None",
                "typing.Any"
            ]
        },
        {
            "category": "arg",
            "name": "deltas_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "deltas_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "int",
                "None",
                "typing.Any"
            ]
        },
        {
            "category": "return",
            "name": "deltas_name_to_flag_index",
            "type": []
        }
    ],
    "entry@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": []
        },
        {
            "category": "arg",
            "name": "state",
            "type": []
        },
        {
            "category": "arg",
            "name": "kw",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "_cache_dict",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "dict[typing.Any, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "entry",
            "type": []
        }
    ],
    "get_head_deltas@global": [
        {
            "category": "arg",
            "name": "state",
            "type": []
        },
        {
            "category": "return",
            "name": "get_head_deltas",
            "type": []
        }
    ],
    "get_inactivity_penalty_quotient@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "typing.Callable[str,str, float]",
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "typing.Callable[str,str, float]",
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "get_inactivity_penalty_quotient",
            "type": []
        }
    ],
    "get_source_deltas@global": [
        {
            "category": "arg",
            "name": "state",
            "type": []
        },
        {
            "category": "return",
            "name": "get_source_deltas",
            "type": []
        }
    ],
    "get_target_deltas@global": [
        {
            "category": "arg",
            "name": "state",
            "type": []
        },
        {
            "category": "return",
            "name": "get_target_deltas",
            "type": []
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_cache_dict",
            "type": [
                "LRU",
                "dict",
                "dict[str, typing.Any]",
                "dict[typing.Any, typing.Type]"
            ]
        }
    ],
    "has_enough_for_leak_penalty@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "has_enough_for_leak_penalty",
            "type": [
                "bool"
            ]
        }
    ],
    "has_enough_for_reward@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "has_enough_for_reward",
            "type": [
                "bool"
            ]
        }
    ],
    "leaking@global": [
        {
            "category": "arg",
            "name": "epochs",
            "type": [
                "None",
                "int",
                "typing.Callable",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "leaking",
            "type": []
        }
    ],
    "run_attestation_component_deltas@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "typing.Sequence[int]",
                "typing.Hashable",
                "None",
                "'InstrumentBase'"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "typing.Sequence[typing.Any]",
                "None",
                "typing.Iterable[typing.Iterable]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "component_delta_fn",
            "type": [
                "bool",
                "typing.Sequence[typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "matching_att_fn",
            "type": [
                "bool",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "deltas_name",
            "type": []
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "typing.Sequence[typing.Any]",
                "None",
                "typing.Iterable[typing.Iterable]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "rewards",
            "type": [
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "penalties",
            "type": [
                "float",
                "int",
                "tuple[float]"
            ]
        },
        {
            "category": "return",
            "name": "run_attestation_component_deltas",
            "type": [
                "typing.Generator[tuple[Deltas]]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "typing.Sequence[int]",
                "typing.Hashable",
                "None",
                "'InstrumentBase'"
            ]
        },
        {
            "category": "local",
            "name": "matching_attestations",
            "type": [
                "list",
                "list[dict[str, typing.Any]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "matching_indices",
            "type": [
                "int",
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "eligible_indices",
            "type": [
                "int",
                "None"
            ]
        }
    ],
    "run_deltas@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "run_deltas",
            "type": [
                "typing.Generator[tuple[typing.Union[typing.Text,mythril.laser.ethereum.state.global_state.GlobalState,int,dict[str, typing.Any]]]]",
                "typing.Generator"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "int",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "run_get_inactivity_penalty_deltas@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict[str, float]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "rewards",
            "type": [
                "float",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "penalties",
            "type": [
                "float",
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "run_get_inactivity_penalty_deltas",
            "type": [
                "typing.Generator[tuple[typing.Union[typing.Text,Deltas]]]"
            ]
        },
        {
            "category": "local",
            "name": "matching_attestations",
            "type": [
                "set",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "matching_attesting_indices",
            "type": [
                "int",
                "set",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "eligible_indices",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "penalty_denominator",
            "type": [
                "int",
                "float",
                "str"
            ]
        }
    ],
    "run_get_inclusion_delay_deltas@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "run_get_inclusion_delay_deltas",
            "type": [
                "typing.Generator[tuple[typing.Union[typing.Text,Deltas]]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "rewards",
            "type": [
                "list",
                "int",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "penalties",
            "type": [
                "list",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "eligible_attestations",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "attesting_indices",
            "type": [
                "int",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "rewarded_indices",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "rewarded_proposer_indices",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "a",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "earliest_attestation",
            "type": [
                "list[str]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "proposing_indices",
            "type": [
                "list"
            ]
        }
    ],
    "run_test_all_balances_too_low_for_reward@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, float]",
                "mythril.laser.ethereum.state.global_state.GlobalState"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "str",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, float]",
                "mythril.laser.ethereum.state.global_state.GlobalState"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "str",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "run_test_all_balances_too_low_for_reward",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_duplicate_attestations_at_later_slots@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "pyshgp.push.state.PushState",
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.constraints.Constraints",
                "state.State"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "pyshgp.push.state.PushState",
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.constraints.Constraints",
                "state.State"
            ]
        },
        {
            "category": "local",
            "name": "state_",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "num_attestations",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "per_slot_proposers",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "max_slot",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "later_attestations",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "run_test_duplicate_attestations_at_later_slots",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_empty@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict",
                "typing.Callable[str,str, float]",
                "dict[str, float]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict",
                "typing.Callable[str,str, float]",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict",
                "typing.Callable[str,str, float]",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "typing.Callable[str,str, float]",
                "dict[str, float]"
            ]
        },
        {
            "category": "return",
            "name": "run_test_empty",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_full_all_correct@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict[str, typing.Any]",
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict[str, typing.Any]",
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict[str, typing.Any]",
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict[str, typing.Any]",
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "run_test_full_all_correct",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_full_but_partial_participation@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "prefecengine.state.State"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "str",
                "list[float]"
            ]
        },
        {
            "category": "arg",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "prefecengine.state.State"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "str",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "a_",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "return",
            "name": "run_test_full_but_partial_participation",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_full_delay_max_slots@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": []
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "pyshgp.push.state.PushState",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "pyshgp.push.state.PushState",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "run_test_full_delay_max_slots",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_full_delay_one_slot@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict",
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "run_test_full_delay_one_slot",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_full_fraction_incorrect@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "int",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "correct_target",
            "type": [
                "bool",
                "str",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "correct_head",
            "type": [
                "bool",
                "str",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "fraction_incorrect",
            "type": []
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "int",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "num_incorrect",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "correct_target",
            "type": [
                "bool",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "pending_attestation_",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "correct_head",
            "type": [
                "bool",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "run_test_full_fraction_incorrect",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_full_mixed_delay@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "state.state.State"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "bytes",
                "mythril.laser.ethereum.state.global_state.GlobalState"
            ]
        },
        {
            "category": "arg",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "state.state.State"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "bytes",
                "mythril.laser.ethereum.state.global_state.GlobalState"
            ]
        },
        {
            "category": "local",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "return",
            "name": "run_test_full_mixed_delay",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_full_random@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "return",
            "name": "run_test_full_random",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_half_full@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "prefecengine.state.State",
                "dict",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "dict",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "prefecengine.state.State",
                "dict",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "dict",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "return",
            "name": "run_test_half_full",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_one_attestation_one_correct@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict[str, typing.Any]",
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "mythril.laser.ethereum.state.global_state.GlobalState"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict[str, typing.Any]",
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "mythril.laser.ethereum.state.global_state.GlobalState"
            ]
        },
        {
            "category": "return",
            "name": "run_test_one_attestation_one_correct",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_partial@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "prefecengine.state.State"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "int",
                "utils.MinMaxStats"
            ]
        },
        {
            "category": "arg",
            "name": "fraction_filled",
            "type": [
                "int",
                "utils.MinMaxStats",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "prefecengine.state.State"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "int",
                "utils.MinMaxStats"
            ]
        },
        {
            "category": "local",
            "name": "fraction_filled",
            "type": [
                "int",
                "utils.MinMaxStats",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "num_attestations",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "run_test_partial",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_proposer_not_in_attestations@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "prefecengine.state.State",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "prefecengine.state.State",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "non_proposer_attestations",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "state_",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "run_test_proposer_not_in_attestations",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_some_very_low_effective_balances_that_attested@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, float]",
                "mythril.laser.ethereum.state.global_state.GlobalState"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "state.State"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, float]",
                "mythril.laser.ethereum.state.global_state.GlobalState"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "state.State"
            ]
        },
        {
            "category": "return",
            "name": "run_test_some_very_low_effective_balances_that_attested",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_some_very_low_effective_balances_that_did_not_attest@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "str",
                "int",
                "prefecengine.state.State"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "set[str]",
                "mythril.laser.ethereum.state.constraints.Constraints"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "str",
                "int",
                "prefecengine.state.State"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "set[str]",
                "mythril.laser.ethereum.state.constraints.Constraints"
            ]
        },
        {
            "category": "local",
            "name": "indices",
            "type": [
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "run_test_some_very_low_effective_balances_that_did_not_attest",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_with_exited_validators@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": []
        },
        {
            "category": "arg",
            "name": "state",
            "type": []
        },
        {
            "category": "arg",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "local",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "return",
            "name": "run_test_with_exited_validators",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_with_not_yet_activated_validators@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "return",
            "name": "run_test_with_not_yet_activated_validators",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "run_test_with_slashed_validators@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "rng",
            "type": [
                "Random"
            ]
        },
        {
            "category": "return",
            "name": "run_test_with_slashed_validators",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "transition_state_to_leak@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "int",
                "float",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "rl_algorithms.utils.config.ConfigDict",
                "dict",
                "dict[str, list[bool]]"
            ]
        },
        {
            "category": "arg",
            "name": "epochs",
            "type": [
                "None",
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "epochs",
            "type": [
                "None",
                "int",
                "float",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "int",
                "float",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "rl_algorithms.utils.config.ConfigDict",
                "dict",
                "dict[str, list[bool]]"
            ]
        },
        {
            "category": "return",
            "name": "transition_state_to_leak",
            "type": [
                "None"
            ]
        }
    ]
}