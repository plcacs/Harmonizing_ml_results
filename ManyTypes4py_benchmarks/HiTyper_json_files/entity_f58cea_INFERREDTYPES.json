{
    "__init__@BondEntity": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict[str, typing.Any]",
                "tuple[typing.Union[int,str]]"
            ]
        },
        {
            "category": "arg",
            "name": "device",
            "type": [
                "int",
                "str",
                "dict[str, typing.Union[int,str]]"
            ]
        },
        {
            "category": "arg",
            "name": "sub_device",
            "type": [
                "None",
                "int",
                "boucanpy.core.dns_record.DnsRecordRepo",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "sub_device_id",
            "type": [
                "None",
                "str",
                "list[DeviceInfo]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[str, typing.Any]",
                "tuple[typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "device",
            "type": [
                "int",
                "str",
                "dict[str, typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "_device",
            "type": [
                "int",
                "str",
                "dict[str, typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "sub_device",
            "type": [
                "None",
                "int",
                "boucanpy.core.dns_record.DnsRecordRepo",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "_sub_device",
            "type": [
                "None",
                "int",
                "boucanpy.core.dns_record.DnsRecordRepo",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "_attr_available",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_update_lock",
            "type": [
                "Lock"
            ]
        },
        {
            "category": "local",
            "name": "_initialized",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "sub_device_id",
            "type": [
                "None",
                "str",
                "list[DeviceInfo]",
                "list",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_attr_unique_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "sub_device_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_attr_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_attr_assumed_state",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_bpup_polling_fallback",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_async_update_if_bpup_not_alive_job",
            "type": [
                "HassJob"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_apply_state@BondEntity": [
        {
            "category": "return",
            "name": "_apply_state",
            "type": [
                "None"
            ]
        }
    ],
    "_async_bpup_callback@BondEntity": [
        {
            "category": "arg",
            "name": "json_msg",
            "type": [
                "str",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "json_msg",
            "type": [
                "str",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "topic",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_async_bpup_callback",
            "type": [
                "None"
            ]
        }
    ],
    "_async_schedule_bpup_alive_or_poll@BondEntity": [
        {
            "category": "local",
            "name": "_BPUP_ALIVE_SCAN_INTERVAL",
            "type": [
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "_FALLBACK_SCAN_INTERVAL",
            "type": [
                "datetime.timedelta",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_async_schedule_bpup_alive_or_poll",
            "type": [
                "None"
            ]
        }
    ],
    "_async_state_callback@BondEntity": [
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict",
                "str",
                "models.State"
            ]
        },
        {
            "category": "local",
            "name": "_initialized",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_LOGGER",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "_attr_available",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "str",
                "models.State"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "dict",
                "str",
                "models.State"
            ]
        },
        {
            "category": "return",
            "name": "_async_state_callback",
            "type": [
                "None"
            ]
        }
    ],
    "_async_update@BondEntity": [
        {
            "category": "return",
            "name": "_async_update",
            "type": [
                "None"
            ]
        }
    ],
    "_async_update_from_api@BondEntity": [
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict[str, typing.Any]",
                "src.models.generic_task.TaskState",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "error",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "_LOGGER",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "_attr_available",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_async_update_from_api",
            "type": [
                "None"
            ]
        }
    ],
    "_async_update_if_bpup_not_alive@BondEntity": [
        {
            "category": "arg",
            "name": "now",
            "type": [
                "datetime",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_async_update_if_bpup_not_alive",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_LOGGER",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "_FALLBACK_SCAN_INTERVAL",
            "type": [
                "datetime.timedelta",
                "int"
            ]
        }
    ],
    "async_added_to_hass@BondEntity": [
        {
            "category": "return",
            "name": "async_added_to_hass",
            "type": [
                "None"
            ]
        }
    ],
    "async_update@BondEntity": [
        {
            "category": "return",
            "name": "async_update",
            "type": [
                "None"
            ]
        }
    ],
    "async_will_remove_from_hass@BondEntity": [
        {
            "category": "local",
            "name": "_bpup_polling_fallback",
            "type": [
                "bool",
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "async_will_remove_from_hass",
            "type": [
                "None"
            ]
        }
    ],
    "device_info@BondEntity": [
        {
            "category": "local",
            "name": "self_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "device_info",
            "type": [
                "DeviceInfo"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "model_data",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "device_info",
            "type": [
                "DeviceInfo"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_LOGGER",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "_FALLBACK_SCAN_INTERVAL",
            "type": [
                "int",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "_BPUP_ALIVE_SCAN_INTERVAL",
            "type": [
                "int",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "_async_update_if_bpup_not_alive_job",
            "type": [
                "HassJob"
            ]
        }
    ]
}