{
    "generate_result_metrics@global": [
        {
            "category": "return",
            "name": "generate_result_metrics",
            "type": [
                "dict[typing.Text, typing.Union[int,float]]"
            ]
        }
    ],
    "global@global": [],
    "stake_amount_interceptor@global": [
        {
            "category": "arg",
            "name": "func",
            "type": []
        },
        {
            "category": "return",
            "name": "stake_amount_interceptor",
            "type": []
        }
    ],
    "test_SKDecimal@global": [
        {
            "category": "local",
            "name": "space",
            "type": [
                "SKDecimal"
            ]
        },
        {
            "category": "return",
            "name": "test_SKDecimal",
            "type": [
                "None"
            ]
        }
    ],
    "test_clean_hyperopt@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "h",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "return",
            "name": "test_clean_hyperopt",
            "type": [
                "None"
            ]
        }
    ],
    "test_generate_optimizer@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "local",
            "name": "backtest_result",
            "type": [
                "dict[typing.Text, typing.Union[list,int]]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "optimizer_param",
            "type": [
                "dict[typing.Text, typing.Union[float,int]]"
            ]
        },
        {
            "category": "local",
            "name": "response_expected",
            "type": [
                "dict[typing.Text, typing.Union[float,typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[float,int]]],dict[typing.Text, typing.Union[float,int]]]]"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "generate_optimizer_value",
            "type": [
                "list",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_generate_optimizer",
            "type": [
                "None"
            ]
        }
    ],
    "test_hyperopt_format_results@global": [
        {
            "category": "arg",
            "name": "hyperopt",
            "type": [
                "typing.Callable",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "typing.Callable",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "bt_result",
            "type": [
                "dict[typing.Text, typing.Union[list,float,int]]"
            ]
        },
        {
            "category": "local",
            "name": "results_metrics",
            "type": [
                "list",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "local",
            "name": "total_profit",
            "type": [
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "results",
            "type": [
                "dict[typing.Text, typing.Union[float,None,list,list[tuple[str]],tuple[str],int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_hyperopt_format_results",
            "type": [
                "None"
            ]
        }
    ],
    "test_in_strategy_auto_hyperopt@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "bool",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "bool",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "opt_",
            "type": [
                "MagicMock",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_in_strategy_auto_hyperopt",
            "type": [
                "None"
            ]
        }
    ],
    "test_in_strategy_auto_hyperopt_per_epoch@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "dict",
                "bool",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "dict",
                "bool",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_conf",
            "type": [
                "dict",
                "dict[typing.Text, typing.Union[typing.Text,pathlib.Path,int,list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "go",
            "type": [
                "str",
                "bool",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "opt_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_in_strategy_auto_hyperopt_per_epoch",
            "type": [
                "None"
            ]
        }
    ],
    "test_in_strategy_auto_hyperopt_with_parallel@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "opt_",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_in_strategy_auto_hyperopt_with_parallel",
            "type": [
                "None"
            ]
        }
    ],
    "test_log_results_if_loss_improves@global": [
        {
            "category": "arg",
            "name": "hyperopt",
            "type": [
                "tests.basilisp.helpers.CompileFn",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "capsys",
            "type": [
                "tests.basilisp.helpers.CompileFn",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "tests.basilisp.helpers.CompileFn",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "capsys",
            "type": [
                "tests.basilisp.helpers.CompileFn",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "out",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_err",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_log_results_if_loss_improves",
            "type": [
                "None"
            ]
        }
    ],
    "test_max_open_trades_consistency@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "typing.Type",
                "typing.Callable",
                "lib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": [
                "lib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "lib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "typing.Type",
                "typing.Callable",
                "lib.Path"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "typing.Type",
                "typing.Callable",
                "lib.Path"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "lib.Path"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_conf",
            "type": [
                "lib.Path"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "first_time_evaluated",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_max_open_trades_consistency",
            "type": [
                "None"
            ]
        }
    ],
    "test_max_open_trades_dump@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "pathlib.Path",
                "dict[str, dict[str, typing.Any]]",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "bool",
                "None",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "capsys",
            "type": [
                "int",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "pathlib.Path",
                "dict[str, dict[str, typing.Any]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "bool",
                "None",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "capsys",
            "type": [
                "int",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "out",
            "type": [
                "str",
                "typing.TextIO",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_err",
            "type": [
                "str",
                "schema_salad.exceptions.ValidationException"
            ]
        },
        {
            "category": "return",
            "name": "test_max_open_trades_dump",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_log_if_loss_does_not_improve@global": [
        {
            "category": "arg",
            "name": "hyperopt",
            "type": [
                "tests.basilisp.helpers.CompileFn"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "tests.basilisp.helpers.CompileFn",
                "int",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "tests.basilisp.helpers.CompileFn"
            ]
        },
        {
            "category": "return",
            "name": "test_no_log_if_loss_does_not_improve",
            "type": [
                "None"
            ]
        }
    ],
    "test_params_no_optimize_details@global": [
        {
            "category": "arg",
            "name": "hyperopt",
            "type": [
                "tests.e2e.Helper"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_params_no_optimize_details",
            "type": [
                "None"
            ]
        }
    ],
    "test_populate_indicators@global": [
        {
            "category": "arg",
            "name": "hyperopt",
            "type": []
        },
        {
            "category": "arg",
            "name": "testdatadir",
            "type": []
        },
        {
            "category": "return",
            "name": "test_populate_indicators",
            "type": [
                "None"
            ]
        }
    ],
    "test_print_json_spaces_all@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "capsys",
            "type": []
        },
        {
            "category": "local",
            "name": "hyperopt_conf",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "result_str",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_print_json_spaces_all",
            "type": [
                "None"
            ]
        }
    ],
    "test_print_json_spaces_default@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "capsys",
            "type": []
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "dumper",
            "type": [
                "str",
                "typing.Callable[None,None, typing.Union[str,None]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "dumper2",
            "type": [
                "str",
                "typing.Callable[None,None, typing.Union[str,None]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "parallel",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_print_json_spaces_default",
            "type": [
                "None"
            ]
        }
    ],
    "test_print_json_spaces_roi_stoploss@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "capsys",
            "type": []
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "dumper",
            "type": [
                "str",
                "typing.Callable[None,None, typing.Union[str,None]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "dumper2",
            "type": [
                "str",
                "typing.Callable[None,None, typing.Union[str,None]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "parallel",
            "type": [
                "int",
                "unittesmock.MagicMock",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_print_json_spaces_roi_stoploss",
            "type": [
                "None"
            ]
        }
    ],
    "test_roi_table_generation@global": [
        {
            "category": "arg",
            "name": "hyperopt",
            "type": []
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "dict[typing.Text, int]"
            ]
        },
        {
            "category": "return",
            "name": "test_roi_table_generation",
            "type": [
                "None"
            ]
        }
    ],
    "test_setup_hyperopt_configuration_stake_amount@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "conf",
            "type": [
                "dict[str, typing.Union[typing.Any,str]]",
                "dict[str, typing.Union[str,None]]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_setup_hyperopt_configuration_stake_amount",
            "type": [
                "None"
            ]
        }
    ],
    "test_setup_hyperopt_configuration_with_arguments@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "backup.util.GlobalInfo",
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "str",
                "tests.setup.SetupTest",
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "typing.Callable[str, str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "backup.util.GlobalInfo",
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "str",
                "tests.setup.SetupTest",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_setup_hyperopt_configuration_with_arguments",
            "type": [
                "None"
            ]
        }
    ],
    "test_setup_hyperopt_configuration_without_arguments@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "tests.setup.SetupTest",
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "tests.setup.SetupTest",
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "test_setup_hyperopt_configuration_without_arguments",
            "type": [
                "None"
            ]
        }
    ],
    "test_simplified_interface_all_failed@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": []
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_simplified_interface_all_failed",
            "type": [
                "None"
            ]
        }
    ],
    "test_simplified_interface_buy@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "capsys",
            "type": []
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "dumper",
            "type": [
                "str",
                "typing.Callable[None,None, None]"
            ]
        },
        {
            "category": "local",
            "name": "dumper2",
            "type": [
                "str",
                "typing.Callable[None,None, typing.Union[str,None]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "parallel",
            "type": [
                "int",
                "unittesmock.MagicMock",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_simplified_interface_buy",
            "type": [
                "None"
            ]
        }
    ],
    "test_simplified_interface_failed@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.helpers.MockedFetcher"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "space",
            "type": [
                "str",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.helpers.MockedFetcher"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_conf",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "dict[str, typing.Union[typing.Any,str,tests.test_util.aiohttp.AiohttpClientMocker,list[str]]]"
            ]
        },
        {
            "category": "local",
            "name": "space",
            "type": [
                "str",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_simplified_interface_failed",
            "type": [
                "None"
            ]
        }
    ],
    "test_simplified_interface_roi_stoploss@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "capsys",
            "type": []
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "dumper",
            "type": [
                "str",
                "typing.Callable[None,None, typing.Union[str,None]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "dumper2",
            "type": [
                "str",
                "typing.Callable[None,None, typing.Union[str,None]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "parallel",
            "type": [
                "int",
                "unittesmock.MagicMock",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_simplified_interface_roi_stoploss",
            "type": [
                "None"
            ]
        }
    ],
    "test_simplified_interface_sell@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "capsys",
            "type": []
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "dumper",
            "type": [
                "str",
                "typing.Callable[None,None, None]"
            ]
        },
        {
            "category": "local",
            "name": "dumper2",
            "type": [
                "str",
                "typing.Callable[None,None, typing.Union[str,None]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "parallel",
            "type": [
                "int",
                "unittesmock.MagicMock",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_simplified_interface_sell",
            "type": [
                "None"
            ]
        }
    ],
    "test_stake_amount_unlimited_max_open_trades@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_conf",
            "type": [
                "dict",
                "dict[typing.Text, typing.Union[typing.Text,pathlib.Path,int,list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "return",
            "name": "test_stake_amount_unlimited_max_open_trades",
            "type": [
                "None"
            ]
        }
    ],
    "test_start_calls_optimizer@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "capsys",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "dumper",
            "type": [
                "str",
                "typing.Callable[None,None, typing.Union[str,None]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "dumper2",
            "type": [
                "str",
                "typing.Callable[None,None, typing.Union[str,None]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "parallel",
            "type": [
                "int",
                "unittesmock.MagicMock",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt",
            "type": [
                "Hyperopt"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "capsys",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "out",
            "type": [
                "str",
                "list",
                "typing.Callable[None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "_err",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_start_calls_optimizer",
            "type": [
                "None"
            ]
        }
    ],
    "test_start_filelock@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_conf",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "pargs",
            "type": [
                "list[str]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_start_filelock",
            "type": [
                "None"
            ]
        }
    ],
    "test_start_no_data@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "kata.data.repos.KataTemplateRepo",
                "pathlib.Path",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_conf",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "kata.data.repos.KataTemplateRepo",
                "pathlib.Path",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "pargs",
            "type": [
                "list[str]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_start_no_data",
            "type": [
                "None"
            ]
        }
    ],
    "test_start_no_hyperopt_allowed@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.async_mock.Mock",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "hyperopt_conf",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": []
        },
        {
            "category": "local",
            "name": "start_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.async_mock.Mock",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "hyperopt_conf",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "pargs",
            "type": [
                "list[str]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_start_no_hyperopt_allowed",
            "type": [
                "None"
            ]
        }
    ],
    "test_start_not_installed@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "import_fails",
            "type": [
                "bool",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "start_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "pargs",
            "type": [
                "list[str]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_start_not_installed",
            "type": [
                "None"
            ]
        }
    ],
    "wrapper@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "first_time_evaluated",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "wrapper",
            "type": []
        }
    ]
}