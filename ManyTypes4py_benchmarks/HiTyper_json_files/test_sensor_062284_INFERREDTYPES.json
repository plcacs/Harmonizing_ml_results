{
    "_fake_off_states@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "_fake_off_states",
            "type": [
                "dict[typing.Text, list]"
            ]
        }
    ],
    "_fake_states@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "_fake_states",
            "type": [
                "dict[typing.Text, list]"
            ]
        }
    ],
    "_fake_states_t3@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "_fake_states_t3",
            "type": [
                "dict[typing.Text, list]"
            ]
        }
    ],
    "global@global": [],
    "test_async_off_entire_period@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.config.Config",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "local",
            "name": "start_time",
            "type": [
                "float",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "t0",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t1",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t2",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.config.Config",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "return",
            "name": "test_async_off_entire_period",
            "type": [
                "None"
            ]
        }
    ],
    "test_async_on_entire_period@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "start_time",
            "type": [
                "float",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "t0",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t1",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t2",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "return",
            "name": "test_async_on_entire_period",
            "type": [
                "None"
            ]
        }
    ],
    "test_async_start_from_history_and_switch_to_watching_state_changes_multiple@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.config.Config",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.config.Config",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "local",
            "name": "one_hour_in",
            "type": [
                "datetime.timedelta",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "turn_off_time",
            "type": [
                "int",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "turn_back_on_time",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "datetime.timedelta"
            ]
        },
        {
            "category": "return",
            "name": "test_async_start_from_history_and_switch_to_watching_state_changes_multiple",
            "type": [
                "None"
            ]
        }
    ],
    "test_async_start_from_history_and_switch_to_watching_state_changes_single@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.config.Config",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.config.Config",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "local",
            "name": "one_hour_in",
            "type": [
                "datetime.timedelta",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "turn_off_time",
            "type": [
                "int",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "turn_back_on_time",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "after_end_time",
            "type": [
                "datetime.timedelta",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "test_async_start_from_history_and_switch_to_watching_state_changes_single",
            "type": [
                "None"
            ]
        }
    ],
    "test_async_start_from_history_and_switch_to_watching_state_changes_single_expanding_window@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "one_hour_in",
            "type": [
                "datetime.timedelta",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "turn_off_time",
            "type": [
                "int",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "turn_back_on_time",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "next_update_time",
            "type": [
                "datetime.datetime",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "datetime.timedelta"
            ]
        },
        {
            "category": "return",
            "name": "test_async_start_from_history_and_switch_to_watching_state_changes_single_expanding_window",
            "type": [
                "None"
            ]
        }
    ],
    "test_device_classes@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "return",
            "name": "test_device_classes",
            "type": [
                "None"
            ]
        }
    ],
    "test_device_id@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "common.ComponentFactory",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "typing.Callable[List,bool, None]"
            ]
        },
        {
            "category": "arg",
            "name": "device_registry",
            "type": [
                "typing.Callable[List,bool, None]",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "source_config_entry",
            "type": [
                "MockConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "common.ComponentFactory",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "local",
            "name": "device_registry",
            "type": [
                "typing.Callable[List,bool, None]",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "typing.Callable[List,bool, None]"
            ]
        },
        {
            "category": "local",
            "name": "history_stats_config_entry",
            "type": [
                "MockConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "history_stats_entity",
            "type": [
                "list[typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_device_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_does_not_work_into_the_future@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "one_hour_in",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "turn_off_time",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "turn_back_on_time",
            "type": [
                "str",
                "datetime.timedelta",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "in_the_window",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "past_the_window",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "past_the_window_with_data",
            "type": [
                "datetime.timedelta",
                "bool",
                "tuple[typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "at_the_next_window_with_data",
            "type": [
                "datetime.datetime",
                "dict[str, typing.Union[float,str]]",
                "datetime.timedelta"
            ]
        },
        {
            "category": "return",
            "name": "test_does_not_work_into_the_future",
            "type": [
                "None"
            ]
        }
    ],
    "test_end_time_with_microseconds_zeroed@global": [
        {
            "category": "arg",
            "name": "time_zone",
            "type": [
                "typing.Callable",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "async_setup_recorder_instance",
            "type": [
                "typing.Callable",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "time_zone",
            "type": [
                "typing.Callable",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "start_of_today",
            "type": [
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "start_time",
            "type": [
                "float",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "t0",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t1",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t2",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "time_200",
            "type": [
                "float",
                "int",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "time_400",
            "type": [
                "datetime.timedelta",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "time_600",
            "type": [
                "datetime.timedelta",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "rolled_to_next_day",
            "type": [
                "datetime.timedelta",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "rolled_to_next_day_plus_12",
            "type": [
                "list[int]",
                "datetime.datetime.datetime",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "rolled_to_next_day_plus_14",
            "type": [
                "list[int]",
                "datetime.datetime.datetime",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "rolled_to_next_day_plus_16_860000",
            "type": [
                "list[int]",
                "datetime.datetime.datetime",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "rolled_to_next_day_plus_18",
            "type": [
                "datetime.datetime.timedelta",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "test_end_time_with_microseconds_zeroed",
            "type": [
                "None"
            ]
        }
    ],
    "test_history_stats_handles_floored_timestamps@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.config.Config",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "local",
            "name": "last_times",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.config.Config",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "return",
            "name": "test_history_stats_handles_floored_timestamps",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_date_for_end@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "next_update_time",
            "type": [
                "datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "test_invalid_date_for_end",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_date_for_start@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "backup.ha.HaSource",
                "homeassistancore.HomeAssistant",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "backup.ha.HaSource",
                "homeassistancore.HomeAssistant",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "next_update_time",
            "type": [
                "datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "test_invalid_date_for_start",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_entity_in_template@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "backup.config.Config"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "backup.ha.HaSource",
                "homeassistancore.HomeAssistant",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "backup.ha.HaSource",
                "homeassistancore.HomeAssistant",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "next_update_time",
            "type": [
                "datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "test_invalid_entity_in_template",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_entity_returning_none_in_template@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "backup.config.Config"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "local",
            "name": "next_update_time",
            "type": [
                "datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "test_invalid_entity_returning_none_in_template",
            "type": [
                "None"
            ]
        }
    ],
    "test_measure@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "local",
            "name": "start_time",
            "type": [
                "float",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "t0",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t1",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t2",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "return",
            "name": "test_measure",
            "type": [
                "None"
            ]
        }
    ],
    "test_measure_cet@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "local",
            "name": "start_time",
            "type": [
                "float",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "t0",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t1",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t2",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "backup.ha.HaSource"
            ]
        },
        {
            "category": "return",
            "name": "test_measure_cet",
            "type": [
                "None"
            ]
        }
    ],
    "test_measure_from_end_going_backwards@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "start_time",
            "type": [
                "datetime.datetime",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "t0",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t1",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t2",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "past_next_update",
            "type": [
                "datetime.datetime",
                "datetime.date",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_measure_from_end_going_backwards",
            "type": [
                "None"
            ]
        }
    ],
    "test_measure_multiple@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "start_time",
            "type": [
                "float",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "t0",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t1",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t2",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "backup.ha.HaSource",
                "backup.config.Config"
            ]
        },
        {
            "category": "return",
            "name": "test_measure_multiple",
            "type": [
                "None"
            ]
        }
    ],
    "test_measure_sliding_window@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "mock.Mock",
                "tests.async_mock.MagicMock",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": []
        },
        {
            "category": "local",
            "name": "start_time",
            "type": [
                "datetime.datetime",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "t0",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t1",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t2",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "past_next_update",
            "type": [
                "datetime.datetime",
                "datetime.date",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_measure_sliding_window",
            "type": [
                "None"
            ]
        }
    ],
    "test_reload@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "yaml_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_reload",
            "type": [
                "None"
            ]
        }
    ],
    "test_reload_before_start_event@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "yaml_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_reload_before_start_event",
            "type": [
                "None"
            ]
        }
    ],
    "test_setup@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "str",
                "tuple[typing.Union[int,str]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_setup",
            "type": [
                "None"
            ]
        }
    ],
    "test_setup_config_entry@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "backup.config.Config",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "loaded_entry",
            "type": [
                "backup.config.Config",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "str",
                "tuple[typing.Union[int,str]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_setup_config_entry",
            "type": [
                "None"
            ]
        }
    ],
    "test_setup_invalid_config@global": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "backup.config.Config",
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "backup.config.Config",
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "return",
            "name": "test_setup_invalid_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_setup_multiple_states@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,list[typing.Text]]]]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "str",
                "tuple[typing.Union[int,str]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_setup_multiple_states",
            "type": [
                "None"
            ]
        }
    ],
    "test_state_change_during_window_rollover@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "backup.config.Config",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "t2",
            "type": [
                "str",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "t3",
            "type": [
                "datetime.timedelta",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "t4",
            "type": [
                "datetime.date.time.time",
                "float",
                "datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "test_state_change_during_window_rollover",
            "type": [
                "None"
            ]
        }
    ],
    "test_unique_id@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_unique_id",
            "type": [
                "None"
            ]
        }
    ]
}