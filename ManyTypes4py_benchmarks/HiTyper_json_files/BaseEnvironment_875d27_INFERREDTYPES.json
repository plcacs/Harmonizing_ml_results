{
    "__init__@BaseEnvironment": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "prices",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "reward_kwargs",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "window_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "starting_point",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "live",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "can_short",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "pair",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "df_raw",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "rl_config",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "add_state_info",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "max_drawdown",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "compound_trades",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "pair",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "df_raw",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "raw_features",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "int",
                "str",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "actions",
            "type": [
                "BaseActions"
            ]
        },
        {
            "category": "local",
            "name": "tensorboard_metrics",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "can_short",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "live",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "prices",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "window_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "reward_kwargs",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "starting_point",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_get_observation@BaseEnvironment": [
        {
            "category": "local",
            "name": "features_and_state",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "_get_observation",
            "type": []
        }
    ],
    "_is_valid@BaseEnvironment": [
        {
            "category": "arg",
            "name": "action",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_is_valid",
            "type": [
                "bool"
            ]
        }
    ],
    "_update_history@BaseEnvironment": [
        {
            "category": "arg",
            "name": "info",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "history",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "list",
                "dict[list[str], list]"
            ]
        },
        {
            "category": "local",
            "name": "info",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "list[str]",
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "_update_history",
            "type": [
                "None"
            ]
        }
    ],
    "_update_total_profit@BaseEnvironment": [
        {
            "category": "local",
            "name": "pnl",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_total_profit",
            "type": [
                "float",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "_update_total_profit",
            "type": [
                "None"
            ]
        }
    ],
    "_update_unrealized_total_profit@BaseEnvironment": [
        {
            "category": "local",
            "name": "pnl",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "unrl_profit",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_total_unrealized_profit",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_update_unrealized_total_profit",
            "type": [
                "None"
            ]
        }
    ],
    "action_masks@BaseEnvironment": [
        {
            "category": "return",
            "name": "action_masks",
            "type": [
                "list"
            ]
        }
    ],
    "add_entry_fee@BaseEnvironment": [
        {
            "category": "arg",
            "name": "price",
            "type": [
                "int",
                "float",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "price",
            "type": [
                "int",
                "float",
                "pandas.Series"
            ]
        },
        {
            "category": "return",
            "name": "add_entry_fee",
            "type": [
                "float"
            ]
        }
    ],
    "add_exit_fee@BaseEnvironment": [
        {
            "category": "arg",
            "name": "price",
            "type": [
                "int",
                "float",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "price",
            "type": [
                "int",
                "float",
                "dict[str, float]"
            ]
        },
        {
            "category": "return",
            "name": "add_exit_fee",
            "type": [
                "int",
                "float"
            ]
        }
    ],
    "calculate_reward@BaseEnvironment": [
        {
            "category": "arg",
            "name": "action",
            "type": [
                "numpy.ndarray",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "calculate_reward",
            "type": [
                "None"
            ]
        }
    ],
    "current_price@BaseEnvironment": [
        {
            "category": "return",
            "name": "current_price",
            "type": []
        }
    ],
    "get_actions@BaseEnvironment": [
        {
            "category": "return",
            "name": "get_actions",
            "type": []
        }
    ],
    "get_attr@BaseEnvironment": [
        {
            "category": "arg",
            "name": "attr",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "attr",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_attr",
            "type": [
                "str",
                "None",
                "bool"
            ]
        }
    ],
    "get_trade_duration@BaseEnvironment": [
        {
            "category": "local",
            "name": "_last_trade_tick",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_trade_duration",
            "type": [
                "int"
            ]
        }
    ],
    "get_unrealized_profit@BaseEnvironment": [
        {
            "category": "local",
            "name": "_last_trade_tick",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_unrealized_profit",
            "type": [
                "float"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        }
    ],
    "is_tradesignal@BaseEnvironment": [
        {
            "category": "arg",
            "name": "action",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "is_tradesignal",
            "type": [
                "bool"
            ]
        }
    ],
    "opposite@Positions": [
        {
            "category": "return",
            "name": "opposite",
            "type": []
        }
    ],
    "reset@BaseEnvironment": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int",
                "typing.Hashable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_done",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "starting_point",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "length_of_data",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_start_tick",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_position",
            "type": [
                "int",
                "dict[tuple[str], tuple[float]]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "_position_history",
            "type": [
                "list[typing.Union[None,int,dict[tuple[str], tuple[float]],list[int]]]"
            ]
        },
        {
            "category": "local",
            "name": "_current_tick",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_last_trade_tick",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "total_reward",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_total_profit",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "history",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "trade_history",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_profits",
            "type": [
                "list[tuple[typing.Union[float,int]]]"
            ]
        },
        {
            "category": "local",
            "name": "close_trade_profit",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_total_unrealized_profit",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "reset",
            "type": [
                "tuple[dict]"
            ]
        }
    ],
    "reset_env@BaseEnvironment": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "float",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "prices",
            "type": []
        },
        {
            "category": "arg",
            "name": "window_size",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "reward_kwargs",
            "type": [
                "freqtrade.persistence.Trade"
            ]
        },
        {
            "category": "arg",
            "name": "starting_point",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "float",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "signal_features",
            "type": [
                "float",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "window_size",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "starting_point",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "reward_kwargs",
            "type": [
                "freqtrade.persistence.Trade"
            ]
        },
        {
            "category": "local",
            "name": "rr",
            "type": [
                "str",
                "classmethod"
            ]
        },
        {
            "category": "local",
            "name": "profit_aim",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "tuple[typing.Union[int,None,float]]"
            ]
        },
        {
            "category": "local",
            "name": "_start_tick",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_end_tick",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_done",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_current_tick",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_last_trade_tick",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_position_history",
            "type": [
                "list[None]"
            ]
        },
        {
            "category": "local",
            "name": "total_reward",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_total_profit",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_total_unrealized_profit",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "history",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "trade_history",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "reset_env",
            "type": [
                "None"
            ]
        }
    ],
    "reset_tensorboard_log@BaseEnvironment": [
        {
            "category": "local",
            "name": "tensorboard_metrics",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "reset_tensorboard_log",
            "type": [
                "None"
            ]
        }
    ],
    "seed@BaseEnvironment": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "seed",
            "type": [
                "list"
            ]
        }
    ],
    "set_action_space@BaseEnvironment": [
        {
            "category": "return",
            "name": "set_action_space",
            "type": [
                "None"
            ]
        }
    ],
    "step@BaseEnvironment": [
        {
            "category": "arg",
            "name": "action",
            "type": [
                "numpy.ndarray",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "step",
            "type": [
                "None"
            ]
        }
    ],
    "tensorboard_log@BaseEnvironment": [
        {
            "category": "arg",
            "name": "metric",
            "type": [
                "str",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "None",
                "dict",
                "str",
                "list[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "inc",
            "type": [
                "None",
                "str",
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "category",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "None",
                "dict",
                "str",
                "list[typing.Any]",
                "int",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "increment",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "category",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "metric",
            "type": [
                "str",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "tensorboard_log",
            "type": [
                "None"
            ]
        }
    ]
}