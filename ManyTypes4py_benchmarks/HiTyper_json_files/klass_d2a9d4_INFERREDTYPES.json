{
    "__init__@ClassFilter": [
        {
            "category": "arg",
            "name": "class_value",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "node_context",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "is_instance",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "class_value",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "node_context",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "until_position",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "origin_scope",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_class_value",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "is_instance",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_is_instance",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ClassName": [
        {
            "category": "arg",
            "name": "class_value",
            "type": [
                "str",
                "typing.Any",
                "None",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "tree_name",
            "type": [
                "str",
                "typing.OrderedDict",
                "typing.Container"
            ]
        },
        {
            "category": "arg",
            "name": "name_context",
            "type": [
                "str",
                "typing.OrderedDict",
                "typing.Container"
            ]
        },
        {
            "category": "arg",
            "name": "apply_decorators",
            "type": [
                "bool",
                "typing.Any",
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "name_context",
            "type": [
                "str",
                "typing.OrderedDict",
                "typing.Container"
            ]
        },
        {
            "category": "local",
            "name": "tree_name",
            "type": [
                "str",
                "typing.OrderedDict",
                "typing.Container"
            ]
        },
        {
            "category": "local",
            "name": "apply_decorators",
            "type": [
                "bool",
                "typing.Any",
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_apply_decorators",
            "type": [
                "bool",
                "typing.Any",
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "class_value",
            "type": [
                "str",
                "typing.Any",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_class_value",
            "type": [
                "str",
                "typing.Any",
                "None",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_access_possible@ClassFilter": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expr_stmt",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_access_possible",
            "type": [
                "bool"
            ]
        }
    ],
    "_as_context@ClassMixin": [
        {
            "category": "return",
            "name": "_as_context",
            "type": [
                "ClassContext"
            ]
        }
    ],
    "_convert_names@ClassFilter": [
        {
            "category": "arg",
            "name": "names",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_convert_names",
            "type": [
                "list[ClassName]"
            ]
        }
    ],
    "_equals_origin_scope@ClassFilter": [
        {
            "category": "return",
            "name": "_equals_origin_scope",
            "type": [
                "bool"
            ]
        }
    ],
    "_filter@ClassFilter": [
        {
            "category": "arg",
            "name": "names",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "str",
                "None",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_filter",
            "type": [
                "list[typing.Text]"
            ]
        }
    ],
    "_get_bases_arguments@ClassValue": [
        {
            "category": "local",
            "name": "arglist",
            "type": [
                "str",
                "list",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "_get_bases_arguments",
            "type": [
                "None"
            ]
        }
    ],
    "api_type@ClassName": [
        {
            "category": "local",
            "name": "definition",
            "type": [
                "dict[str, str]",
                "typing.Type",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "api_type",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "define_generics@ClassMixin": [
        {
            "category": "arg",
            "name": "type_var_dict",
            "type": []
        },
        {
            "category": "return",
            "name": "define_generics",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "get_filters@ClassMixin": [
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "arg",
            "name": "is_instance",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "include_metaclasses",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "include_type_when_class",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "include_metaclasses",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "metaclasses",
            "type": [
                "str",
                "dict[str, int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "is_instance",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "typing.Generator",
                "typing.Generator[ClassFilter]"
            ]
        },
        {
            "category": "local",
            "name": "origin_scope",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "include_type_when_class",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "ValuesArguments"
            ]
        }
    ],
    "get_metaclass_filters@ClassValue": [
        {
            "category": "arg",
            "name": "metaclasses",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "is_instance",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "metaclasses",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_metaclass_filters",
            "type": [
                "list"
            ]
        }
    ],
    "get_metaclass_signatures@ClassValue": [
        {
            "category": "arg",
            "name": "metaclasses",
            "type": [
                "int",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "get_metaclass_signatures",
            "type": [
                "list"
            ]
        }
    ],
    "get_metaclasses@ClassValue": [
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[str]",
                "list",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "metaclasses",
            "type": [
                "ValueSet"
            ]
        },
        {
            "category": "return",
            "name": "get_metaclasses",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "get_signatures@ClassMixin": [
        {
            "category": "local",
            "name": "metaclasses",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sigs",
            "type": [
                "tuple",
                "typing.Iterator",
                "frozenset"
            ]
        },
        {
            "category": "return",
            "name": "get_signatures",
            "type": [
                "tuple",
                "typing.Iterator",
                "frozenset",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "ValuesArguments"
            ]
        },
        {
            "category": "local",
            "name": "init_funcs",
            "type": [
                "typing.Callable[None,None, typing.Any]",
                "list[str]",
                "typing.Type"
            ]
        }
    ],
    "get_type_hint@ClassMixin": [
        {
            "category": "arg",
            "name": "add_class_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "add_class_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_type_hint",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "global@global": [],
    "infer@ClassName": [
        {
            "category": "return",
            "name": "infer",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "is_class@ClassMixin": [
        {
            "category": "return",
            "name": "is_class",
            "type": [
                "bool"
            ]
        }
    ],
    "is_class_mixin@ClassMixin": [
        {
            "category": "return",
            "name": "is_class_mixin",
            "type": [
                "bool"
            ]
        }
    ],
    "is_typeddict@ClassMixin": [
        {
            "category": "return",
            "name": "is_typeddict",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "TypedDictClass"
            ]
        }
    ],
    "list_type_vars@ClassValue": [
        {
            "category": "local",
            "name": "found",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "arglist",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "list_type_vars",
            "type": [
                "list"
            ]
        }
    ],
    "name@ClassMixin": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "ValueName"
            ]
        }
    ],
    "py__bases__@ClassValue": [
        {
            "category": "local",
            "name": "args",
            "type": [
                "tuple[tuple]",
                "dict[str, typing.Any]",
                "tuple",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "lst",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "py__bases__",
            "type": [
                "list",
                "list[LazyKnownValues]"
            ]
        }
    ],
    "py__call__@ClassMixin": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "\"Vector\"",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "py__call__",
            "type": [
                "ValueSet"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "\"Vector\"",
                "T"
            ]
        }
    ],
    "py__class__@ClassMixin": [
        {
            "category": "return",
            "name": "py__class__",
            "type": []
        }
    ],
    "py__getitem__@ClassMixin": [
        {
            "category": "arg",
            "name": "index_value_set",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "index_value_set",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__getitem__",
            "type": [
                "ValueSet"
            ]
        },
        {
            "category": "local",
            "name": "index_value",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "py__mro__@ClassMixin": [
        {
            "category": "local",
            "name": "mro",
            "type": [
                "list[ClassMixin]"
            ]
        },
        {
            "category": "return",
            "name": "py__mro__",
            "type": [
                "typing.Generator[ClassMixin]",
                "typing.Generator"
            ]
        }
    ],
    "py__name__@ClassMixin": [
        {
            "category": "return",
            "name": "py__name__",
            "type": []
        }
    ],
    "remap_type_vars@ClassMixin": [
        {
            "category": "return",
            "name": "remap_type_vars",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "with_generics@ClassMixin": [
        {
            "category": "arg",
            "name": "generics_tuple",
            "type": [
                "typing.Type",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "generics_tuple",
            "type": [
                "typing.Type",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "with_generics",
            "type": [
                "GenericClass"
            ]
        }
    ]
}