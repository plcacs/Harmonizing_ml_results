{
    "__init__@NewType": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "T",
                "typing.Mapping",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "parent_context",
            "type": [
                "T",
                "typing.Mapping",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "tree_node",
            "type": [
                "list[dict[str, typing.Any]]",
                "typing.Type",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "type_value_set",
            "type": [
                "list[dict[str, typing.Any]]",
                "bool",
                "typing.NamedTuple"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "T",
                "typing.Mapping",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "T",
                "typing.Mapping",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "type_value_set",
            "type": [
                "list[dict[str, typing.Any]]",
                "bool",
                "typing.NamedTuple"
            ]
        },
        {
            "category": "local",
            "name": "_type_value_set",
            "type": [
                "list[dict[str, typing.Any]]",
                "bool",
                "typing.NamedTuple"
            ]
        },
        {
            "category": "local",
            "name": "tree_node",
            "type": [
                "list[dict[str, typing.Any]]",
                "typing.Type",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@TypeAlias": [
        {
            "category": "arg",
            "name": "parent_context",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "origin_tree_name",
            "type": [
                "str",
                "typing.Iterable[str]",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "actual",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "origin_tree_name",
            "type": [
                "str",
                "typing.Iterable[str]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "_origin_tree_name",
            "type": [
                "str",
                "typing.Iterable[str]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "actual",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_actual",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@TypedDict": [
        {
            "category": "arg",
            "name": "definition_class",
            "type": [
                "\"Node\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "definition_class",
            "type": [
                "\"Node\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_definition_class",
            "type": [
                "\"Node\"",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__repr__@NewType": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@TypeAlias": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_create_instance_with_generics@ProxyWithGenerics": [
        {
            "category": "arg",
            "name": "generics_manager",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "generics_manager",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_create_instance_with_generics",
            "type": [
                "ProxyWithGenerics"
            ]
        }
    ],
    "_create_instance_with_generics@TypingClassWithGenerics": [
        {
            "category": "arg",
            "name": "generics_manager",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "generics_manager",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_create_instance_with_generics",
            "type": [
                "TypingClassWithGenerics"
            ]
        }
    ],
    "_get_wrapped_value@Tuple": [
        {
            "category": "local",
            "name": "tuple_",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "_get_wrapped_value",
            "type": [
                "tuple"
            ]
        }
    ],
    "_get_wrapped_value@TypeAlias": [
        {
            "category": "local",
            "name": "module_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "class_name",
            "type": [
                "str",
                "set[str]",
                "dict[int, str]"
            ]
        },
        {
            "category": "local",
            "name": "module",
            "type": [
                "list",
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "classes",
            "type": [
                "list",
                "dict[typing.Any, tuple[typing.Any]]",
                "list[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type",
                "dict",
                "typing.Callable[None,None, str]"
            ]
        },
        {
            "category": "return",
            "name": "_get_wrapped_value",
            "type": [
                "typing.Type",
                "dict",
                "typing.Callable[None,None, str]"
            ]
        }
    ],
    "_get_wrapped_value@TypedDict": [
        {
            "category": "local",
            "name": "d",
            "type": [
                "str",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_get_wrapped_value",
            "type": [
                "dict",
                "list",
                "float"
            ]
        }
    ],
    "_is_homogenous@Tuple": [
        {
            "category": "return",
            "name": "_is_homogenous",
            "type": [
                "bool"
            ]
        }
    ],
    "_remap@TypingModuleName": [
        {
            "category": "local",
            "name": "_TYPE_ALIAS_TYPES",
            "type": [
                "str",
                "dict[str, str]",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "actual",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_remap",
            "type": [
                "typing.Generator",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_PROXY_CLASS_TYPES",
            "type": [
                "list[str]",
                "set[str]",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "_PROXY_TYPES",
            "type": [
                "list[str]",
                "dict[str, list[str]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type",
                "dict[int, int]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "str",
                "broqer.value.Value",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "cast_fn",
            "type": [
                "typing.Type",
                "str",
                "typing.Callable"
            ]
        }
    ],
    "execute_annotation@AnyClass": [
        {
            "category": "return",
            "name": "execute_annotation",
            "type": []
        }
    ],
    "execute_annotation@ProxyWithGenerics": [
        {
            "category": "return",
            "name": "execute_annotation",
            "type": [
                "dict[str, typing.Any]",
                "set[str]",
                "dict",
                "ValueSet"
            ]
        },
        {
            "category": "local",
            "name": "mapped",
            "type": [
                "dict[typing.Text, typing.Union[tuple,typing.Generic,typing.Protocol,typing.Callable]]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "tuple",
                "typing.Generic",
                "typing.Protocol",
                "typing.Callable"
            ]
        }
    ],
    "gather_annotation_classes@ProxyWithGenerics": [
        {
            "category": "return",
            "name": "gather_annotation_classes",
            "type": [
                "str",
                "None",
                "llvmlite.ir.Value"
            ]
        }
    ],
    "gather_annotation_classes@TypeAlias": [
        {
            "category": "return",
            "name": "gather_annotation_classes",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "get_key_values@TypedDict": [
        {
            "category": "local",
            "name": "filtered_values",
            "type": [
                "typing.Iterator",
                "list[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "get_key_values",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "get_metaclasses@_TypingClassMixin": [
        {
            "category": "return",
            "name": "get_metaclasses",
            "type": [
                "list"
            ]
        }
    ],
    "get_signatures@TypeAlias": [
        {
            "category": "return",
            "name": "get_signatures",
            "type": [
                "list"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_PROXY_CLASS_TYPES",
            "type": [
                "list[str]",
                "set[str]",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "_TYPE_ALIAS_TYPES",
            "type": [
                "dict[typing.Text, typing.Text]",
                "str",
                "dict[str, str]",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "_PROXY_TYPES",
            "type": [
                "list[str]",
                "dict[str, list[str]]",
                "set[str]"
            ]
        }
    ],
    "infer@TypingModuleName": [
        {
            "category": "return",
            "name": "infer",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "infer_type_vars@ProxyWithGenerics": [
        {
            "category": "arg",
            "name": "value_set",
            "type": [
                "keanu.vertex.base.Vertex",
                "keanu.vartypes.numpy_types",
                "int",
                "ForwardRef",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "annotation_generics",
            "type": [
                "tuple[int]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "infer_type_vars",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "annotation_name",
            "type": [
                "str",
                "list[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "value_set",
            "type": [
                "keanu.vertex.base.Vertex",
                "keanu.vartypes.numpy_types",
                "int",
                "ForwardRef",
                "typing.Callable"
            ]
        }
    ],
    "infer_type_vars@Tuple": [
        {
            "category": "arg",
            "name": "value_set",
            "type": [
                "ForwardRef",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "value_set",
            "type": [
                "ForwardRef",
                "str",
                "typing.Type",
                "frozenset"
            ]
        },
        {
            "category": "return",
            "name": "infer_type_vars",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "type_var_dict",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "py_class",
            "type": [
                "set[str]",
                "str",
                "dict[typing.Type, str]"
            ]
        }
    ],
    "infer_type_vars@TypingClassWithGenerics": [
        {
            "category": "arg",
            "name": "value_set",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "type_var_dict",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "annotation_generics",
            "type": [
                "str",
                "tuple[int]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "infer_type_vars",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "annotation_name",
            "type": [
                "str",
                "list[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "value_set",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "tuple_annotation",
            "type": [
                "list",
                "list[str]",
                "dict[tuple[str], list[str]]"
            ]
        }
    ],
    "name@NewType": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "CompiledValueName"
            ]
        }
    ],
    "name@Tuple": [
        {
            "category": "return",
            "name": "name",
            "type": []
        }
    ],
    "name@TypeAlias": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "ValueName"
            ]
        }
    ],
    "name@TypedDict": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "ValueName"
            ]
        }
    ],
    "name@_TypingClassMixin": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "ValueName"
            ]
        }
    ],
    "py__bases__@_TypingClassMixin": [
        {
            "category": "return",
            "name": "py__bases__",
            "type": [
                "list[LazyKnownValues]"
            ]
        }
    ],
    "py__call__@Callable": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__call__",
            "type": []
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "typing.Callable",
                "str"
            ]
        }
    ],
    "py__call__@CastFunction": [
        {
            "category": "arg",
            "name": "type_value_set",
            "type": [
                "typing.Callable",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "object_value_set",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "type_value_set",
            "type": [
                "typing.Callable",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "py__call__",
            "type": [
                "tuple[object]",
                "bool"
            ]
        }
    ],
    "py__call__@NewType": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "typing.Type",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "py__call__",
            "type": [
                "tuple[object]",
                "bool"
            ]
        }
    ],
    "py__call__@NewTypeFunction": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "ordered_args",
            "type": [
                "tuple[tuple]"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "typing.Type",
                "list",
                "typing.Callable[None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "second_arg",
            "type": [
                "list",
                "int",
                "typing.Final",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "py__call__",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "py__call__@OverloadFunction": [
        {
            "category": "arg",
            "name": "func_value_set",
            "type": [
                "T",
                "'IndexBase'",
                "'Series'"
            ]
        },
        {
            "category": "local",
            "name": "func_value_set",
            "type": [
                "T",
                "'IndexBase'",
                "'Series'"
            ]
        },
        {
            "category": "return",
            "name": "py__call__",
            "type": [
                "T",
                "'IndexBase'",
                "'Series'"
            ]
        }
    ],
    "py__class__@NewType": [
        {
            "category": "local",
            "name": "c",
            "type": [
                "list[int]",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "py__class__",
            "type": [
                "list[int]",
                "str",
                "float"
            ]
        }
    ],
    "py__get__@Callable": [
        {
            "category": "arg",
            "name": "instance",
            "type": [
                "typing.Callable",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "class_value",
            "type": [
                "typing.Callable",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "py__get__",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "py__getitem__@ProxyTypingValue": [
        {
            "category": "arg",
            "name": "index_value_set",
            "type": [
                "T",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "int",
                "T",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "index_value_set",
            "type": [
                "T",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "index_value",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "int",
                "T",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "py__getitem__",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "py__getitem__@Tuple": [
        {
            "category": "arg",
            "name": "index_value_set",
            "type": [
                "int",
                "typing.Type",
                "typing.Iterable[float]"
            ]
        },
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "int",
                "typing.Type",
                "typing.Iterable[float]"
            ]
        },
        {
            "category": "return",
            "name": "py__getitem__",
            "type": [
                "bool"
            ]
        }
    ],
    "py__iter__@Tuple": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "py__iter__",
            "type": [
                "typing.Generator[LazyKnownValues]"
            ]
        }
    ],
    "py__name__@TypeAlias": [
        {
            "category": "return",
            "name": "py__name__",
            "type": []
        }
    ],
    "py__simple_getitem__@Tuple": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "slice",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__simple_getitem__",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "slice",
                "str"
            ]
        }
    ],
    "py__simple_getitem__@TypedDict": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "str",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "str",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "py__simple_getitem__",
            "type": []
        }
    ],
    "with_generics@ProxyTypingValue": [
        {
            "category": "arg",
            "name": "generics_tuple",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "generics_tuple",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "with_generics",
            "type": [
                "typing.Sequence[object]"
            ]
        }
    ]
}