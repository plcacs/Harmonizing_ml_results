{
    "__init__@Model": [
        {
            "category": "arg",
            "name": "vocab",
            "type": [
                "allennlp.data.vocabulary.Vocabulary"
            ]
        },
        {
            "category": "arg",
            "name": "regularizer",
            "type": [
                "None",
                "dict[str, int]",
                "typing.Callable[str, bool]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "serialization_dir",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "ddp_accelerator",
            "type": [
                "None",
                "str",
                "bool",
                "typing.Iterable[typing.Union[str,os.PathLike]]"
            ]
        },
        {
            "category": "local",
            "name": "vocab",
            "type": [
                "allennlp.data.vocabulary.Vocabulary"
            ]
        },
        {
            "category": "local",
            "name": "regularizer",
            "type": [
                "None",
                "dict[str, int]",
                "typing.Callable[str, bool]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_regularizer",
            "type": [
                "None",
                "dict[str, int]",
                "typing.Callable[str, bool]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "serialization_dir",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ddp_accelerator",
            "type": [
                "None",
                "str",
                "bool",
                "typing.Iterable[typing.Union[str,os.PathLike]]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_get_prediction_device@Model": [
        {
            "category": "local",
            "name": "devices",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "devices_string",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_get_prediction_device",
            "type": [
                "set",
                "int"
            ]
        }
    ],
    "_load@Model": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "int",
                "allennlp.common.params.Params"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "allennlp.common.params.Params"
            ]
        },
        {
            "category": "arg",
            "name": "serialization_dir",
            "type": [
                "str",
                "int",
                "allennlp.common.params.Params"
            ]
        },
        {
            "category": "arg",
            "name": "weights_file",
            "type": [
                "None",
                "str",
                "int",
                "allennlp.common.params.Params"
            ]
        },
        {
            "category": "arg",
            "name": "cuda_device",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "weights_file",
            "type": [
                "None",
                "str",
                "int",
                "allennlp.common.params.Params"
            ]
        },
        {
            "category": "local",
            "name": "serialization_dir",
            "type": [
                "str",
                "int",
                "allennlp.common.params.Params"
            ]
        },
        {
            "category": "local",
            "name": "_DEFAULT_WEIGHTS",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "vocab_dir",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "allennlp.common.params.Params"
            ]
        },
        {
            "category": "local",
            "name": "vocab_params",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "model_params",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "cuda_device",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_load",
            "type": []
        }
    ],
    "_maybe_warn_for_unseparable_batches@Model": [
        {
            "category": "arg",
            "name": "output_key",
            "type": [
                "str",
                "tuple[str]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "output_key",
            "type": [
                "str",
                "tuple[str]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_warn_for_unseparable_batches",
            "type": [
                "None"
            ]
        }
    ],
    "extend_embedder_vocab@Model": [
        {
            "category": "arg",
            "name": "embedding_sources_mapping",
            "type": [
                "None",
                "torch.Tensor",
                "dict[str, torch.Tensor]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "embedding_sources_mapping",
            "type": [
                "None",
                "torch.Tensor",
                "dict[str, torch.Tensor]",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "pretrained_file",
            "type": [
                "torch.Tensor",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "extend_embedder_vocab",
            "type": [
                "None"
            ]
        }
    ],
    "filter_out_authorized_missing_keys@Model": [
        {
            "category": "arg",
            "name": "module",
            "type": []
        },
        {
            "category": "arg",
            "name": "prefix",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "missing_keys",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "prefix",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "child",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "filter_out_authorized_missing_keys",
            "type": [
                "None"
            ]
        }
    ],
    "forward@Model": [
        {
            "category": "arg",
            "name": "inputs",
            "type": [
                "torch.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "None"
            ]
        }
    ],
    "forward_on_instance@Model": [
        {
            "category": "arg",
            "name": "instance",
            "type": [
                "allennlp.data.Instance",
                "list[allennlp.data.Instance]"
            ]
        },
        {
            "category": "local",
            "name": "instance",
            "type": [
                "allennlp.data.Instance",
                "list[allennlp.data.Instance]"
            ]
        },
        {
            "category": "return",
            "name": "forward_on_instance",
            "type": [
                "collections.abc.Awaitable[None]",
                "\"CPSTransformerContext\""
            ]
        }
    ],
    "forward_on_instances@Model": [
        {
            "category": "arg",
            "name": "instances",
            "type": []
        },
        {
            "category": "local",
            "name": "batch_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cuda_device",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "dataset",
            "type": [
                "Batch"
            ]
        },
        {
            "category": "local",
            "name": "model_input",
            "type": [
                "list[tuple[typing.Union[str,typing.Any]]]",
                "dict[str, tuple[str]]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "instance_separated_output",
            "type": [
                "list[dict]"
            ]
        },
        {
            "category": "local",
            "name": "output",
            "type": [
                "torch.Tensor",
                "list[torch.Tensor]",
                "torch.tensor",
                "torch_@_Tensor"
            ]
        },
        {
            "category": "return",
            "name": "forward_on_instances",
            "type": [
                "list[dict]"
            ]
        }
    ],
    "from_archive@Model": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "list[str]",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "arg",
            "name": "archive_file",
            "type": [
                "str",
                "typing.Sequence[str]",
                "allennlp.data.Vocabulary"
            ]
        },
        {
            "category": "arg",
            "name": "vocab",
            "type": [
                "None",
                "allennlp.data.Vocabulary"
            ]
        },
        {
            "category": "local",
            "name": "archive_file",
            "type": [
                "str",
                "typing.Sequence[str]",
                "allennlp.data.Vocabulary"
            ]
        },
        {
            "category": "local",
            "name": "vocab",
            "type": [
                "None",
                "allennlp.data.Vocabulary"
            ]
        },
        {
            "category": "return",
            "name": "from_archive",
            "type": []
        }
    ],
    "get_metrics@Model": [
        {
            "category": "arg",
            "name": "reset",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_metrics",
            "type": [
                "dict"
            ]
        }
    ],
    "get_parameters_for_histogram_logging@Model": [
        {
            "category": "return",
            "name": "get_parameters_for_histogram_logging",
            "type": [
                "list"
            ]
        }
    ],
    "get_parameters_for_histogram_tensorboard_logging@Model": [
        {
            "category": "return",
            "name": "get_parameters_for_histogram_tensorboard_logging",
            "type": [
                "str",
                "list[str]",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "get_regularization_penalty@Model": [
        {
            "category": "local",
            "name": "_regularizer",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "regularization_penalty",
            "type": [
                "None",
                "float",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "get_regularization_penalty",
            "type": [
                "float",
                "list[float]",
                "None"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "_DEFAULT_WEIGHTS",
            "type": [
                "typing.Text",
                "str",
                "int",
                "float"
            ]
        }
    ],
    "load@Model": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "dict[str, allennlp.service.predictors.DemoModel]",
                "dict",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "allennlp.common.params.Params",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "serialization_dir",
            "type": [
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "arg",
            "name": "weights_file",
            "type": [
                "None",
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "arg",
            "name": "cuda_device",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "allennlp.common.params.Params",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "model_type",
            "type": [
                "str",
                "None",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "dict[str, allennlp.service.predictors.DemoModel]",
                "dict",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "model_class",
            "type": [
                "dere.models._model.Model",
                "typing.Type",
                "Model"
            ]
        },
        {
            "category": "local",
            "name": "serialization_dir",
            "type": [
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "local",
            "name": "weights_file",
            "type": [
                "None",
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "local",
            "name": "cuda_device",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "load",
            "type": [
                "str",
                "PathLike",
                "None"
            ]
        }
    ],
    "make_output_human_readable@Model": [
        {
            "category": "arg",
            "name": "output_dict",
            "type": [
                "dict[str, torch.Tensor]",
                "dict[str, torch.LongTensor]"
            ]
        },
        {
            "category": "local",
            "name": "output_dict",
            "type": [
                "dict[str, torch.Tensor]",
                "dict[str, torch.LongTensor]"
            ]
        },
        {
            "category": "return",
            "name": "make_output_human_readable",
            "type": [
                "dict[str, torch.Tensor]",
                "dict[str, torch.LongTensor]"
            ]
        }
    ],
    "remove_pretrained_embedding_params@global": [
        {
            "category": "arg",
            "name": "params",
            "type": [
                "typing.Mapping",
                "dict[str, typing.Union[int,str]]",
                "allennlp.common.Params"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "typing.Mapping",
                "dict[str, typing.Union[int,str]]",
                "allennlp.common.Params"
            ]
        },
        {
            "category": "return",
            "name": "remove_pretrained_embedding_params",
            "type": [
                "None"
            ]
        }
    ],
    "remove_weights_related_keys_from_params@global": [
        {
            "category": "arg",
            "name": "params",
            "type": [
                "dict",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "keys",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "dict",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "keys",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "remove_weights_related_keys_from_params",
            "type": [
                "None"
            ]
        }
    ]
}