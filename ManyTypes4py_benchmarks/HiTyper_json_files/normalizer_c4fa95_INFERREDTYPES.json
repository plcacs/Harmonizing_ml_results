{
    "__eq__@Issue": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "__eq__",
            "type": [
                "bool"
            ]
        }
    ],
    "__hash__@Issue": [
        {
            "category": "return",
            "name": "__hash__",
            "type": [
                "int"
            ]
        }
    ],
    "__init__@Issue": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "code",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "code",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Normalizer": [
        {
            "category": "arg",
            "name": "grammar",
            "type": []
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "_config",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "issues",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_rule_type_instances",
            "type": [
                "dict",
                "dict[str, set[typing.Any]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_rule_value_instances",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@RefactoringNormalizer": [
        {
            "category": "arg",
            "name": "node_to_str_map",
            "type": [
                "dict",
                "None",
                "dict[str, typing.Iterable[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "node_to_str_map",
            "type": [
                "dict",
                "None",
                "dict[str, typing.Iterable[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "_node_to_str_map",
            "type": [
                "dict",
                "None",
                "dict[str, typing.Iterable[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Rule": [
        {
            "category": "arg",
            "name": "normalizer",
            "type": [
                "typing.Callable",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "normalizer",
            "type": [
                "typing.Callable",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "_normalizer",
            "type": [
                "typing.Callable",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__ne__@Issue": [
        {
            "category": "arg",
            "name": "other",
            "type": []
        },
        {
            "category": "return",
            "name": "__ne__",
            "type": [
                "bool"
            ]
        }
    ],
    "__new__@_NormalizerMeta": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "arg",
            "name": "name",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "arg",
            "name": "bases",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "arg",
            "name": "dct",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "bases",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "dct",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "new_cls_",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__new__",
            "type": []
        }
    ],
    "__repr__@Issue": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_check_type_rules@Normalizer": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "return",
            "name": "_check_type_rules",
            "type": [
                "None"
            ]
        }
    ],
    "_get_message@Rule": [
        {
            "category": "arg",
            "name": "message",
            "type": [
                "bytes",
                "None",
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": [
                "dict[str, str]",
                "str",
                "None",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "bytes",
                "None",
                "dict",
                "str",
                "object"
            ]
        },
        {
            "category": "return",
            "name": "_get_message",
            "type": [
                "str",
                "None",
                "object"
            ]
        }
    ],
    "_instantiate_rules@Normalizer": [
        {
            "category": "arg",
            "name": "attr",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "dct",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "attr",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "new",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_instantiate_rules",
            "type": [
                "dict"
            ]
        }
    ],
    "add_issue@Normalizer": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "code",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "code",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "issue",
            "type": [
                "Issue"
            ]
        },
        {
            "category": "return",
            "name": "add_issue",
            "type": [
                "bool"
            ]
        }
    ],
    "add_issue@Rule": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "code",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "code",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "None",
                "str",
                "int",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "add_issue",
            "type": [
                "None"
            ]
        }
    ],
    "create_normalizer@NormalizerConfig": [
        {
            "category": "arg",
            "name": "grammar",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "normalizer_class",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "create_normalizer",
            "type": [
                "None",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "grammar",
            "type": [
                "dict"
            ]
        }
    ],
    "decorator@Normalizer": [
        {
            "category": "arg",
            "name": "rule_cls",
            "type": []
        },
        {
            "category": "return",
            "name": "decorator",
            "type": []
        }
    ],
    "feed_node@Rule": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "feed_node",
            "type": [
                "None"
            ]
        }
    ],
    "finalize@Normalizer": [
        {
            "category": "return",
            "name": "finalize",
            "type": [
                "None"
            ]
        }
    ],
    "get_node@Rule": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_node",
            "type": [
                "bool"
            ]
        }
    ],
    "global@global": [],
    "initialize@Normalizer": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "initialize",
            "type": [
                "None"
            ]
        }
    ],
    "is_issue@Rule": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "is_issue",
            "type": [
                "None"
            ]
        }
    ],
    "register_rule@Normalizer": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "type",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "types",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "tuple",
                "list",
                "list[typing.Union[str,dict[str, typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "types",
            "type": [
                "tuple",
                "list",
                "list[typing.Union[str,dict[str, typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "type",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "register_rule",
            "type": []
        }
    ],
    "visit@Normalizer": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "return",
            "name": "visit",
            "type": [
                "str"
            ]
        }
    ],
    "visit@RefactoringNormalizer": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "return",
            "name": "visit",
            "type": [
                "str"
            ]
        }
    ],
    "visit_leaf@Normalizer": [
        {
            "category": "arg",
            "name": "leaf",
            "type": []
        },
        {
            "category": "return",
            "name": "visit_leaf",
            "type": []
        }
    ],
    "visit_leaf@RefactoringNormalizer": [
        {
            "category": "arg",
            "name": "leaf",
            "type": []
        },
        {
            "category": "return",
            "name": "visit_leaf",
            "type": [
                "str"
            ]
        }
    ],
    "visit_node@Normalizer": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "return",
            "name": "visit_node",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "walk@Normalizer": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "int",
                "str",
                "list[None]"
            ]
        },
        {
            "category": "return",
            "name": "walk",
            "type": [
                "int",
                "str",
                "list[None]"
            ]
        }
    ]
}