{
    "check_replace@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "to_rep",
            "type": []
        },
        {
            "category": "arg",
            "name": "val",
            "type": []
        },
        {
            "category": "arg",
            "name": "expected",
            "type": []
        },
        {
            "category": "return",
            "name": "check_replace",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [],
    "test_pandas_replace_na@TestSeriesReplace": [
        {
            "category": "local",
            "name": "regex_mapping",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "test_pandas_replace_na",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace2@TestSeriesReplace": [
        {
            "category": "local",
            "name": "N",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "float",
                "pd.DataFrame",
                "typing.Callable[None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "rs",
            "type": [
                "int",
                "list",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "rs2",
            "type": [
                "int",
                "float",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "return_value",
            "type": [
                "dict[str, str]",
                "dict[str, int]",
                "dict[str, typing.Union[int,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_replace2",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace@TestSeriesReplace": [
        {
            "category": "local",
            "name": "N",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "list",
                "pandas.DataFrame",
                "Anaconda3.Lib.site-packages.astropy.time.core.TimeDelta"
            ]
        },
        {
            "category": "local",
            "name": "return_value",
            "type": [
                "list",
                "float",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "exp",
            "type": [
                "list",
                "dict[int, list[typing.Any]]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "rs",
            "type": [
                "int",
                "list",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "rs2",
            "type": [
                "int",
                "float",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_replace",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_Int_with_na@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "any_int_ea_dtype",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[tuple[typing.Union[typing.Any,int]]]"
            ]
        },
        {
            "category": "local",
            "name": "any_int_ea_dtype",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_Int_with_na",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_all_NA@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_all_NA",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_bool_with_bool@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_bool_with_bool",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_bool_with_string@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_bool_with_string",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_bool_with_string_no_op@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_bool_with_string_no_op",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_cascade@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_cascade",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_categorical@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "categorical",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "numeric",
            "type": [
                "bool",
                "pandas.DataFrame",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "categorical",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "str",
                "dict[str, None]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "float",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_categorical",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_categorical_inplace@TestSeriesReplace": [
        {
            "category": "local",
            "name": "data",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "data_exp",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_categorical_inplace",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_categorical_single@TestSeriesReplace": [
        {
            "category": "local",
            "name": "expected",
            "type": [
                "dict[str, bool]",
                "list[dict[str, typing.Any]]",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_categorical_single",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_change_dtype_series@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_change_dtype_series",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_commutative@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "ser",
            "type": [
                "static_frame.core.frame.Frame",
                "typing.Callable",
                "typing.BinaryIO"
            ]
        },
        {
            "category": "arg",
            "name": "to_replace",
            "type": [
                "str",
                "bool",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "exp",
            "type": [
                "typing.Callable",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "static_frame.core.frame.Frame",
                "typing.Callable",
                "typing.BinaryIO"
            ]
        },
        {
            "category": "local",
            "name": "exp",
            "type": [
                "typing.Callable",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "to_replace",
            "type": [
                "str",
                "bool",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_commutative",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_datetime64@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_datetime64",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_dict_like_with_dict_like@TestSeriesReplace": [
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_dict_like_with_dict_like",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_different_int_types@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "any_int_numpy_dtype",
            "type": [
                "typing.Iterable[typing.Any]",
                "typing.Mapping",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "any_int_numpy_dtype",
            "type": [
                "typing.Iterable[typing.Any]",
                "typing.Mapping",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_different_int_types",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_dtype@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "pandas.DataFrame",
                "list[slice]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "input_data",
            "type": [
                "numpy.ndarray",
                "list[slice]",
                "list[numpy.array]"
            ]
        },
        {
            "category": "arg",
            "name": "to_replace",
            "type": [
                "dict",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "expected_data",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "input_data",
            "type": [
                "numpy.ndarray",
                "list[slice]",
                "list[numpy.array]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "pandas.DataFrame",
                "list[slice]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "to_replace",
            "type": [
                "dict",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected_data",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_ea_float_with_bool@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_ea_float_with_bool",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_empty_copy@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "frame",
            "type": [
                "typing.Sequence[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "frame",
            "type": [
                "typing.Sequence[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_empty_copy",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_explicit_none@TestSeriesReplace": [
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_explicit_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_extension_other@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "pandas.core.series.Series",
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_extension_other",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_gh5319@TestSeriesReplace": [
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_gh5319",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_invalid_to_replace@TestSeriesReplace": [
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_invalid_to_replace",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_listlike_value_listlike_target@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "datetime_series",
            "type": [
                "pandas.Series",
                "pandas.DataFrame",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "datetime_series",
            "type": [
                "pandas.Series",
                "pandas.DataFrame",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_listlike_value_listlike_target",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_mixed_types@TestSeriesReplace": [
        {
            "category": "local",
            "name": "tr",
            "type": [
                "list[int]",
                "list[float]",
                "list[typing.Union[float,typing.Text]]",
                "list[typing.Union[float,bool]]"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "list[int]",
                "list[float]",
                "list[typing.Union[float,typing.Text]]",
                "list[typing.Union[float,bool]]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_mixed_types",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_mixed_types_with_string@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_mixed_types_with_string",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_na_in_obj_column@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "pandas.DataFrame",
                "typing.Callable",
                "typing.Iterable[typing.Callable[..., typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "pandas.DataFrame",
                "typing.Callable",
                "typing.Iterable[typing.Callable[..., typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_na_in_obj_column",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_nan_with_inf@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_nan_with_inf",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_nat_with_tz@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_nat_with_tz",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_no_cast@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "ser",
            "type": [
                "typing.BinaryIO",
                "list[tuple[typing.Union[str,int]]]",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "arg",
            "name": "exp",
            "type": [
                "typing.BinaryIO",
                "\"Resource\"",
                "None",
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "typing.BinaryIO",
                "list[tuple[typing.Union[str,int]]]",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "local",
            "name": "exp",
            "type": [
                "typing.BinaryIO",
                "\"Resource\"",
                "None",
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_no_cast",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_nonbool_regex@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "frame",
            "type": [
                "typing.Sequence[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "frame",
            "type": [
                "typing.Sequence[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_nonbool_regex",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_noop_doesnt_downcast@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_noop_doesnt_downcast",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_nullable_numeric@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_nullable_numeric",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_numeric_column_with_na@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "val",
            "type": [
                "bool",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "bool",
                "list",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_numeric_column_with_na",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_only_one_dictlike_arg@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "fixed_now_ts",
            "type": [
                "bool",
                "str",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "fixed_now_ts",
            "type": [
                "bool",
                "str",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "to_replace",
            "type": [
                "dict[int, typing.Union[int,typing.Text]]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "typing.Text",
                "dict[int, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_only_one_dictlike_arg",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_regex_dtype_series@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "regex",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "regex",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_regex_dtype_series",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_regex_dtype_series_string@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "regex",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "regex",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_regex_dtype_series_string",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_replacer_equals_replacement@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_replacer_equals_replacement",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_string_dtype@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_string_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_string_dtype_list_to_replace@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_string_dtype_list_to_replace",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_string_dtype_regex@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_string_dtype_regex",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_string_with_number@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_string_with_number",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_timedelta_td64@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_timedelta_td64",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_unicode_with_number@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_unicode_with_number",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_value_none_dtype_numeric@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "val",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_value_none_dtype_numeric",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_with_compiled_regex@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_with_compiled_regex",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_with_dict_with_bool_keys@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_with_dict_with_bool_keys",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_with_dictlike_and_string_dtype@TestSeriesReplace": [
        {
            "category": "arg",
            "name": "nullable_string_dtype",
            "type": [
                "bool",
                "pandas.DataFrame",
                "numpy.dtype"
            ]
        },
        {
            "category": "local",
            "name": "nullable_string_dtype",
            "type": [
                "bool",
                "pandas.DataFrame",
                "numpy.dtype"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_with_dictlike_and_string_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_with_empty_dictlike@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_with_empty_dictlike",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_with_no_overflowerror@TestSeriesReplace": [
        {
            "category": "return",
            "name": "test_replace_with_no_overflowerror",
            "type": [
                "None"
            ]
        }
    ],
    "test_replace_with_single_list@TestSeriesReplace": [
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_replace_with_single_list",
            "type": [
                "None"
            ]
        }
    ]
}