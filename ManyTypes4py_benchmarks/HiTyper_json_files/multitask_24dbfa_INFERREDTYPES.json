{
    "__init__@MultiTaskModel": [
        {
            "category": "arg",
            "name": "vocab",
            "type": [
                "allennlp.data.vocabulary.Vocabulary",
                "torch.nn.Module",
                "allennlp.nn.RegularizerApplicator",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "backbone",
            "type": [
                "list[dict]",
                "None",
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "heads",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "loss_weights",
            "type": [
                "None",
                "bool",
                "torch.Tensor",
                "float",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "arg_name_mapping",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "typing.Any"
            ]
        },
        {
            "category": "arg",
            "name": "allowed_arguments",
            "type": [
                "None",
                "list[dict]",
                "dict[str, str]",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "arg",
            "name": "initializer",
            "type": [
                "InitializerApplicator"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "vocab",
            "type": [
                "allennlp.data.vocabulary.Vocabulary",
                "torch.nn.Module",
                "allennlp.nn.RegularizerApplicator",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "backbone",
            "type": [
                "list[dict]",
                "None",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_backbone",
            "type": [
                "list[dict]",
                "None",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "heads",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "_heads",
            "type": [
                "str",
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "_heads_called",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "arg_name_mapping",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "_arg_name_mapping",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "allowed_arguments",
            "type": [
                "None",
                "list[dict]",
                "dict[str, str]",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_allowed_arguments",
            "type": [
                "None",
                "list[dict]",
                "dict[str, str]",
                "typing.Sequence[str]",
                "dict[typing.Text, dict[typing.Text, ]]"
            ]
        },
        {
            "category": "local",
            "name": "loss_weights",
            "type": [
                "None",
                "bool",
                "torch.Tensor",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_loss_weights",
            "type": [
                "None",
                "bool",
                "torch.Tensor",
                "float",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_get_arguments@MultiTaskModel": [
        {
            "category": "arg",
            "name": "available_args",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "component",
            "type": [
                "str",
                "dict",
                "models.Pkg"
            ]
        },
        {
            "category": "local",
            "name": "component",
            "type": [
                "str",
                "dict",
                "models.Pkg"
            ]
        },
        {
            "category": "local",
            "name": "name_mapping",
            "type": [
                "dict[str, str]",
                "dict",
                "dict[str, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "kept_arguments",
            "type": [
                "dict",
                "dict[typing.Union[str,list[str]], tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "available_args",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "new_key",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "_get_arguments",
            "type": [
                "dict[typing.Union[str,list[str]], tuple[typing.Union[str,typing.Any]]]"
            ]
        }
    ],
    "forward@MultiTaskModel": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "task_indices_just_for_mypy",
            "type": [
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "task",
            "type": [
                "tuple[typing.Union[str,dict[str, typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "indices",
            "type": [
                "tuple[typing.Union[str,dict[str, typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "task_indices",
            "type": [
                "dict[tuple[typing.Union[str,dict[str, typing.Any]]], ]"
            ]
        },
        {
            "category": "local",
            "name": "combined_arguments",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "outputs",
            "type": [
                "dict",
                "dict[typing.Text, str]",
                "dict[typing.Text, typing.Union[str,float,typing.Type,int]]"
            ]
        },
        {
            "category": "local",
            "name": "loss",
            "type": [
                "None",
                "float",
                "typing.Type",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "head_arguments",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "head_outputs",
            "type": [
                "list",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "dict[typing.Text, typing.Union[str,float,typing.Type,int]]"
            ]
        }
    ],
    "get_forward_arguments@global": [
        {
            "category": "arg",
            "name": "module",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "module",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "get_forward_arguments",
            "type": [
                "set"
            ]
        }
    ],
    "get_metrics@MultiTaskModel": [
        {
            "category": "arg",
            "name": "reset",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "metrics",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "reset",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_metrics",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "global@global": [],
    "make_inputs_for_task@MultiTaskModel": [
        {
            "category": "arg",
            "name": "task",
            "type": []
        },
        {
            "category": "arg",
            "name": "whole_batch_input",
            "type": []
        },
        {
            "category": "local",
            "name": "whole_batch_input",
            "type": [
                "dict",
                "torch_@_Tensor"
            ]
        },
        {
            "category": "return",
            "name": "make_inputs_for_task",
            "type": [
                "dict",
                "list"
            ]
        }
    ],
    "make_output_human_readable@MultiTaskModel": [
        {
            "category": "arg",
            "name": "output_dict",
            "type": [
                "dict[str, torch.Tensor]"
            ]
        },
        {
            "category": "local",
            "name": "output_dict",
            "type": [
                "dict[str, torch.Tensor]",
                "dict",
                "dict[str, typing.Union[int,str]]",
                "dict[str, set[int]]"
            ]
        },
        {
            "category": "local",
            "name": "head_outputs",
            "type": [
                "dict",
                "dict[, typing.Union[tuple[typing.Union[str,int]],tuple[typing.Union[str,set[int]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Union[str,int]]",
                "tuple[typing.Union[str,set[int]]]"
            ]
        },
        {
            "category": "return",
            "name": "make_output_human_readable",
            "type": [
                "dict",
                "dict[str, typing.Union[int,str]]",
                "dict[str, set[int]]"
            ]
        }
    ]
}