{
    "global@global": [],
    "my_register_pipeline@TestLoadKedroObjects": [
        {
            "category": "return",
            "name": "my_register_pipeline",
            "type": []
        }
    ],
    "test_find_node@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "dummy_pipelines",
            "type": [
                "str",
                "kedro.pipeline.node.Node"
            ]
        },
        {
            "category": "arg",
            "name": "dummy_node",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "node_to_find",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "dummy_pipelines",
            "type": [
                "str",
                "kedro.pipeline.node.Node"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_find_node",
            "type": [
                "None"
            ]
        }
    ],
    "test_format_node_inputs_text_empty_input@TestFormatNodeInputsText": [
        {
            "category": "local",
            "name": "input_params_dict",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected_output",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_format_node_inputs_text_empty_input",
            "type": [
                "None"
            ]
        }
    ],
    "test_format_node_inputs_text_multiple_inputs@TestFormatNodeInputsText": [
        {
            "category": "local",
            "name": "input_params_dict",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "expected_output",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_format_node_inputs_text_multiple_inputs",
            "type": [
                "None"
            ]
        }
    ],
    "test_format_node_inputs_text_no_catalog_load@TestFormatNodeInputsText": [
        {
            "category": "return",
            "name": "test_format_node_inputs_text_no_catalog_load",
            "type": [
                "None"
            ]
        }
    ],
    "test_format_node_inputs_text_single_input@TestFormatNodeInputsText": [
        {
            "category": "local",
            "name": "input_params_dict",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "expected_output",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_format_node_inputs_text_single_input",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_function_with_loop_body@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "dummy_function_with_loop_literal",
            "type": [
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_get_function_with_loop_body",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_lambda_function_body@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "lambda_node",
            "type": [
                "typing.Callable",
                "typing.Type",
                "BaseException"
            ]
        },
        {
            "category": "local",
            "name": "lambda_node",
            "type": [
                "typing.Callable",
                "typing.Type",
                "BaseException"
            ]
        },
        {
            "category": "return",
            "name": "test_get_lambda_function_body",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_nested_function_body@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "dummy_nested_function_literal",
            "type": [
                "typing.Callable",
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_nested_function_body",
            "type": [
                "None"
            ]
        }
    ],
    "test_ipython_kedro_extension_alias@TestLoadIPythonExtension": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": []
        },
        {
            "category": "return",
            "name": "test_ipython_kedro_extension_alias",
            "type": [
                "None"
            ]
        }
    ],
    "test_ipython_lazy_load_pipeline@TestLoadKedroObjects": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "my_pipelines",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "return",
            "name": "test_ipython_lazy_load_pipeline",
            "type": [
                "None"
            ]
        }
    ],
    "test_ipython_load_entry_points@TestLoadKedroObjects": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_line_magic_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "mock_line_magic_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "expected_message",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "log_messages",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_ipython_load_entry_points",
            "type": [
                "None"
            ]
        }
    ],
    "test_ipython_load_objects@TestLoadKedroObjects": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": []
        },
        {
            "category": "local",
            "name": "my_pipelines",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "return",
            "name": "test_ipython_load_objects",
            "type": [
                "None"
            ]
        }
    ],
    "test_ipython_load_objects_with_args@TestLoadKedroObjects": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": []
        },
        {
            "category": "local",
            "name": "my_pipelines",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "dummy_env",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "dummy_dict",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "dummy_conf_source",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_ipython_load_objects_with_args",
            "type": [
                "None"
            ]
        }
    ],
    "test_line_magic_with_invalid_arguments@TestLoadIPythonExtension": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ipython",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_line_magic_with_invalid_arguments",
            "type": [
                "None"
            ]
        }
    ],
    "test_line_magic_with_valid_arguments@TestLoadIPythonExtension": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ipython",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_line_magic_with_valid_arguments",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_extension_missing_dependency@TestLoadIPythonExtension": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "return",
            "name": "test_load_extension_missing_dependency",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_extension_not_in_kedro_project@TestLoadIPythonExtension": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": []
        },
        {
            "category": "local",
            "name": "log_messages",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected_message",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_load_extension_not_in_kedro_project",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_extension_register_line_magic@TestLoadIPythonExtension": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ipython",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_load_extension_register_line_magic",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_ipython_extension@TestLoadIPythonExtension": [
        {
            "category": "arg",
            "name": "ipython",
            "type": []
        },
        {
            "category": "return",
            "name": "test_load_ipython_extension",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_node@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "dummy_function_defintion",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "dummy_pipelines",
            "type": []
        },
        {
            "category": "local",
            "name": "node_inputs",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "node_imports",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "dummy_function_defintion",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "node_func_definition",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "node_func_call",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "expected_cells",
            "type": [
                "list[typing.Union[typing.Text,typing.Callable]]"
            ]
        },
        {
            "category": "local",
            "name": "node_to_load",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_load_node",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_node_magic@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "dummy_module_literal",
            "type": [
                "pathlib.Path",
                "bool",
                "Exception"
            ]
        },
        {
            "category": "arg",
            "name": "dummy_pipelines",
            "type": [
                "dict[str, str]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_jupyter_console",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "dummy_pipelines",
            "type": [
                "dict[str, str]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "mock_pipeline_values",
            "type": [
                "set[list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "node_to_load",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_load_node_magic",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_node_magic_with_valid_arguments@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": [
                "tuple[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ipython",
            "type": [
                "tuple[str]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_load_node_magic_with_valid_arguments",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_node_with_invalid_arguments@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ipython",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_load_node_with_invalid_arguments",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_node_with_ipython@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": []
        },
        {
            "category": "arg",
            "name": "run_env",
            "type": []
        },
        {
            "category": "return",
            "name": "test_load_node_with_ipython",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_node_with_jupyter@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": []
        },
        {
            "category": "local",
            "name": "calls",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_load_node_with_jupyter",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_node_with_other@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": []
        },
        {
            "category": "arg",
            "name": "run_env",
            "type": []
        },
        {
            "category": "arg",
            "name": "rich_installed",
            "type": []
        },
        {
            "category": "return",
            "name": "test_load_node_with_other",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_path_no_local_namespace_specified@TestProjectPathResolution": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "list",
                "tuple[typing.Union[str,list[str]]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "return",
            "name": "test_no_path_no_local_namespace_specified",
            "type": [
                "None"
            ]
        }
    ],
    "test_node_not_found@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "dummy_pipelines",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "node_to_find",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "dummy_pipelines",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "dummy_registered_pipelines",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_node_not_found",
            "type": [
                "None"
            ]
        }
    ],
    "test_only_local_namespace_specified@TestProjectPathResolution": [
        {
            "category": "local",
            "name": "project_path",
            "type": [
                "pathlib.Path",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "bytes",
                "tuple[typing.Union[str,list[str]]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "return",
            "name": "test_only_local_namespace_specified",
            "type": [
                "None"
            ]
        }
    ],
    "test_only_path_specified@TestProjectPathResolution": [
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "pathlib.PurePosixPath",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "return",
            "name": "test_only_path_specified",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_function_body@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "dummy_function_defintion",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_prepare_function_body",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_imports@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "func_imports",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_prepare_imports",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_imports_func_not_found@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "return",
            "name": "test_prepare_imports_func_not_found",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_imports_multiline@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "func_imports",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_prepare_imports_multiline",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_node_inputs@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "dummy_node",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "dummy_node",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "node_bound_arguments",
            "type": [
                "list",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_prepare_node_inputs",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_node_inputs_when_input_is_empty@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "dummy_node_empty_input",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "dummy_node_empty_input",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "node_bound_arguments",
            "type": [
                "list",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_prepare_node_inputs_when_input_is_empty",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_node_inputs_with_dict_input@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "dummy_node_dict_input",
            "type": [
                "dict",
                "typing.Callable[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "dummy_node_dict_input",
            "type": [
                "dict",
                "typing.Callable[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "node_bound_arguments",
            "type": [
                "list",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_prepare_node_inputs_with_dict_input",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_node_inputs_with_variable_length_args@TestLoadNodeMagic": [
        {
            "category": "arg",
            "name": "dummy_node_with_variable_length",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "dummy_node_with_variable_length",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "node_bound_arguments",
            "type": [
                "list",
                "dict",
                "typing.NamedTuple"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_prepare_node_inputs_with_variable_length_args",
            "type": [
                "None"
            ]
        }
    ],
    "test_project_path_unresolvable@TestProjectPathResolution": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "list",
                "tuple[typing.Union[str,list[str]]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_project_path_unresolvable",
            "type": [
                "None"
            ]
        }
    ],
    "test_project_path_unresolvable_warning@TestProjectPathResolution": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": []
        },
        {
            "category": "arg",
            "name": "ipython",
            "type": [
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "ipython",
            "type": [
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "log_messages",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected_message",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_project_path_unresolvable_warning",
            "type": [
                "None"
            ]
        }
    ],
    "test_project_path_update@TestProjectPathResolution": [
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "project_path",
            "type": [
                "pathlib.Path",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "local_namespace",
            "type": [
                "dict[typing.Text, MockKedroContext]"
            ]
        },
        {
            "category": "local",
            "name": "updated_path",
            "type": [
                "pathlib.Path",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "log_messages",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected_message",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_project_path_update",
            "type": [
                "None"
            ]
        }
    ]
}