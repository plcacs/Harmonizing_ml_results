{
    "apply_replacements@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "bool",
                "pandas.DataFrame",
                "dict[str, dict]"
            ]
        },
        {
            "category": "arg",
            "name": "columns",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "vec",
            "type": [
                "pandas.DataFrame",
                "dict",
                "None",
                "pandas.Series"
            ]
        },
        {
            "category": "arg",
            "name": "replace_unseen",
            "type": [
                "pandas.DataFrame",
                "dict",
                "None",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "column_categorizer",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "columns",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "col",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "categ_columns",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "bool",
                "pandas.DataFrame",
                "dict[str, dict]"
            ]
        },
        {
            "category": "return",
            "name": "apply_replacements",
            "type": [
                "pandas.DataFrame",
                "typing.OrderedDict"
            ]
        }
    ],
    "capper@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_cap",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "precomputed_caps",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "precomputed_caps",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "numpy.ndarray",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_cap",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "caps",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[dict,bool,typing.Callable,numpy.ndarray,None]]]"
            ]
        },
        {
            "category": "return",
            "name": "capper",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[dict,bool,typing.Callable,numpy.ndarray,None]]]]"
            ]
        }
    ],
    "categ_dict@global": [
        {
            "category": "arg",
            "name": "series",
            "type": []
        },
        {
            "category": "return",
            "name": "categ_dict",
            "type": []
        }
    ],
    "categ_target_dict@global": [
        {
            "category": "arg",
            "name": "column",
            "type": []
        },
        {
            "category": "return",
            "name": "categ_target_dict",
            "type": []
        }
    ],
    "col_categ_getter@global": [
        {
            "category": "arg",
            "name": "col",
            "type": []
        },
        {
            "category": "return",
            "name": "col_categ_getter",
            "type": []
        }
    ],
    "count_categorizer@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_categorize",
            "type": [
                "list[str]",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "replace_unseen",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "categ_getter",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_categorize",
            "type": [
                "list[str]",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "column",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "vec",
            "type": [
                "dict[str, ]"
            ]
        },
        {
            "category": "local",
            "name": "replace_unseen",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[list[str],str,pandas.DataFrame,int]]]",
                "dict[typing.Text, dict[typing.Text, typing.Union[list[str],str,pandas.DataFrame,int,dict[str, ]]]]"
            ]
        },
        {
            "category": "local",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "count_categorizer",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[list[str],str,pandas.DataFrame,int,dict[str, ]]]]]"
            ]
        }
    ],
    "custom_transformer@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_transform",
            "type": [
                "pandas.DataFrame",
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "transformation_function",
            "type": [
                "pandas.DataFrame",
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "is_vectorized",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_transform",
            "type": [
                "pandas.DataFrame",
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "transformation_function",
            "type": [
                "pandas.DataFrame",
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[pandas.DataFrame,bool,str,None]]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "custom_transformer",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[pandas.DataFrame,bool,str,None]]]]"
            ]
        }
    ],
    "discrete_ecdfer@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "prediction_column",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "ecdf_column",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "max_range",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "round_method",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "base",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "sign",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "max_range",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "prediction_column",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "df_ecdf",
            "type": [
                "pandas.DataFrame",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "round_method",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "boundaries",
            "type": [
                "str",
                "bytes",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "y",
            "type": [
                "str",
                "bytes",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "str",
                "bytes",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ecdf_column",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[int,list[typing.Text]]]]"
            ]
        },
        {
            "category": "return",
            "name": "discrete_ecdfer",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[int,list[typing.Text]]]]]"
            ]
        }
    ],
    "ecdfer@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "numpy.dtype",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "prediction_column",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "ecdf_column",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "max_range",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "base",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "sign",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "max_range",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "numpy.dtype",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "prediction_column",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ecdf_column",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[int,list[str]]]]"
            ]
        },
        {
            "category": "return",
            "name": "ecdfer",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[int,list[str]]]]]"
            ]
        }
    ],
    "floorer@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_floor",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "precomputed_floors",
            "type": [
                "None",
                "pandas.DataFrame",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "precomputed_floors",
            "type": [
                "None",
                "pandas.DataFrame",
                "float",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_floor",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "floors",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[dict,pandas.DataFrame,float,int,None]]]"
            ]
        },
        {
            "category": "return",
            "name": "floorer",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[dict,pandas.DataFrame,float,int,None]]]]"
            ]
        }
    ],
    "global@global": [],
    "label_categorizer@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_categorize",
            "type": [
                "list[str]",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "replace_unseen",
            "type": []
        },
        {
            "category": "arg",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_categorize",
            "type": [
                "list[str]",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "column",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "vec",
            "type": [
                "dict[str, ]"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[list[str],str,pandas.DataFrame]]]",
                "dict[typing.Text, dict[typing.Text, typing.Union[list[str],str,pandas.DataFrame,dict[str, ]]]]"
            ]
        },
        {
            "category": "local",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "label_categorizer",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[list[str],str,pandas.DataFrame,dict[str, ]]]]]"
            ]
        }
    ],
    "missing_warner@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "cols_list",
            "type": []
        },
        {
            "category": "arg",
            "name": "new_column_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "detailed_warning",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "detailed_column_name",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "detailed_warning",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "detailed_column_name",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "df_selected",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cols_without_missing",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[str,list[str]]]]"
            ]
        },
        {
            "category": "return",
            "name": "missing_warner",
            "type": [
                "tuple[typing.Union[pandas.DataFrame,list[str],str,dict[typing.Text, dict[typing.Text, typing.Union[str,list[str]]]]]]"
            ]
        }
    ],
    "new_col_value_map@global": [
        {
            "category": "arg",
            "name": "old_col_value_map",
            "type": []
        },
        {
            "category": "arg",
            "name": "new_keys",
            "type": []
        },
        {
            "category": "return",
            "name": "new_col_value_map",
            "type": [
                "dict"
            ]
        }
    ],
    "null_injector@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "proportion",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_inject",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "groups",
            "type": [
                "None",
                "int",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "proportion",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_inject",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "groups",
            "type": [
                "None",
                "int",
                "str",
                "dict[str, typing.Any]",
                "list[list[typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "f",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "null_cols",
            "type": [
                "dict",
                "str",
                "frozenset",
                "list[typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "seed_i",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "group",
            "type": [
                "list[typing.Text]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "replace_mask",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "feature",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "null_data",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, list[typing.Any]]",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[None,int,str,dict[str, typing.Any],list[list[typing.Text]]]]]"
            ]
        },
        {
            "category": "return",
            "name": "null_injector",
            "type": [
                "tuple[typing.Union[dict[str, typing.Any],dict[str, list[typing.Any]],dict[str, int],dict[typing.Text, dict[typing.Text, typing.Union[None,int,str,dict[str, typing.Any],list[list[typing.Text]]]]]]]"
            ]
        }
    ],
    "onehot_categorizer@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_categorize",
            "type": [
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "hardcode_nans",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "drop_first_column",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "categ_getter",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_categorize",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "vec",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "hardcode_nans",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "drop_first_column",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[list,bool]]]",
                "dict[typing.Text, dict[typing.Text, typing.Union[list,bool,dict]]]"
            ]
        },
        {
            "category": "local",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "onehot_categorizer",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[list,bool,dict]]]]"
            ]
        }
    ],
    "p@global": [
        {
            "category": "arg",
            "name": "new_data_set",
            "type": []
        },
        {
            "category": "return",
            "name": "p",
            "type": []
        }
    ],
    "prediction_ranger@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "prediction_min",
            "type": [
                "int",
                "str",
                "typing.Callable[list, list[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "prediction_max",
            "type": [
                "int",
                "str",
                "typing.Callable[list, list[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "prediction_column",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "prediction_min",
            "type": [
                "int",
                "str",
                "typing.Callable[list, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "prediction_max",
            "type": [
                "int",
                "str",
                "typing.Callable[list, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "prediction_column",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[int,str,typing.Callable[list, list[str]],list[typing.Text]]]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "prediction_ranger",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[int,str,typing.Callable[list, list[str]],list[typing.Text]]]]]"
            ]
        }
    ],
    "quantile_biner@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_bin",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "q",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "right",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "bin_getter",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_bin",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "column",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "bins",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "q",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[str,int]]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "quantile_biner",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[str,int]]]]"
            ]
        }
    ],
    "rank_categorical@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_rank",
            "type": [
                "list[str]",
                "dict[str, float]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "replace_unseen",
            "type": []
        },
        {
            "category": "arg",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_rank",
            "type": [
                "list[str]",
                "dict[str, float]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "column",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "vec",
            "type": [
                "dict[str, ]"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[list[str],dict[str, float],pandas.DataFrame]]]",
                "dict[typing.Text, dict[typing.Text, typing.Union[list[str],dict[str, float],pandas.DataFrame,dict[str, ]]]]"
            ]
        },
        {
            "category": "local",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "rank_categorical",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[list[str],dict[str, float],pandas.DataFrame,dict[str, ]]]]]"
            ]
        }
    ],
    "selector@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "training_columns",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "predict_columns",
            "type": [
                "None",
                "pandas.DataFrame",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "predict_columns",
            "type": [
                "None",
                "pandas.DataFrame",
                "list[str]",
                "list",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "training_columns",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[pandas.DataFrame,list[str],list,set[str]]]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "selector",
            "type": [
                "tuple[typing.Union[str,dict[typing.Text, dict[typing.Text, typing.Union[pandas.DataFrame,list[str],list,set[str]]]]]]"
            ]
        }
    ],
    "standard_scaler@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_scale",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "scaler",
            "type": [
                "StandardScaler"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_scale",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, pandas.DataFrame]]"
            ]
        },
        {
            "category": "return",
            "name": "standard_scaler",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, pandas.DataFrame]]]"
            ]
        }
    ],
    "target_categorizer@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_categorize",
            "type": [
                "pandas.DataFrame",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "target_column",
            "type": [
                "bool",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "smoothing",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "ignore_unseen",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "target_column",
            "type": [
                "bool",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "target_mean",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ignore_unseen",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "replace_unseen",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_categorize",
            "type": [
                "pandas.DataFrame",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "column",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "vec",
            "type": [
                "dict[str, ]"
            ]
        },
        {
            "category": "local",
            "name": "smoothing",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[pandas.DataFrame,list[str],bool,float]]]",
                "dict[typing.Text, dict[typing.Text, typing.Union[pandas.DataFrame,list[str],bool,float,dict[str, ]]]]"
            ]
        },
        {
            "category": "local",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "target_categorizer",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[pandas.DataFrame,list[str],bool,float,dict[str, ]]]]]"
            ]
        }
    ],
    "truncate_categorical@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "columns_to_truncate",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "percentile",
            "type": [
                "bool",
                "float",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "replacement",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "replace_unseen",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "get_categs",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "update",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "categs_to_dict",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "columns_to_truncate",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "column",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "vec",
            "type": [
                "dict[str, ]"
            ]
        },
        {
            "category": "local",
            "name": "replace_unseen",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "log",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[list[str],str,int]]]",
                "dict[typing.Text, dict[typing.Text, typing.Union[list[str],str,int,dict[str, ]]]]"
            ]
        },
        {
            "category": "local",
            "name": "store_mapping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "truncate_categorical",
            "type": [
                "tuple[dict[typing.Text, dict[typing.Text, typing.Union[list[str],str,int,dict[str, ]]]]]"
            ]
        }
    ],
    "value_mapper@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "dict[str, dict]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "value_maps",
            "type": [
                "pandas.DataFrame",
                "dict[str, dict]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "ignore_unseen",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "replace_unseen_to",
            "type": []
        },
        {
            "category": "local",
            "name": "value_maps",
            "type": [
                "pandas.DataFrame",
                "dict[str, dict]",
                "numpy.ndarray",
                "dict[list[str], ]"
            ]
        },
        {
            "category": "local",
            "name": "columns",
            "type": [
                "list[list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "ignore_unseen",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "col",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "dict[str, dict]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "value_mapper",
            "type": [
                "tuple[dict[typing.Text, typing.Union[pandas.DataFrame,dict[str, dict],numpy.ndarray,dict[list[str], ]]]]"
            ]
        }
    ]
}