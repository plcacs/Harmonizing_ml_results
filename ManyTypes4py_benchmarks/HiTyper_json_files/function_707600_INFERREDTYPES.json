{
    "__init__@FunctionExecutionContext": [
        {
            "category": "arg",
            "name": "function_value",
            "type": [
                "int",
                "T",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "str",
                "None",
                "typing.Callable",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "function_value",
            "type": [
                "int",
                "T",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "str",
                "None",
                "typing.Callable",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "_arguments",
            "type": [
                "str",
                "None",
                "typing.Callable",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@FunctionNameInClass": [
        {
            "category": "arg",
            "name": "class_context",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "class_context",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "_class_context",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@LambdaName": [
        {
            "category": "arg",
            "name": "lambda_value",
            "type": [
                "tuple[typing.Union[str,int]]",
                "typing.Callable",
                "typing.Sequence[object]"
            ]
        },
        {
            "category": "local",
            "name": "lambda_value",
            "type": [
                "tuple[typing.Union[str,int]]",
                "typing.Callable",
                "typing.Sequence[object]"
            ]
        },
        {
            "category": "local",
            "name": "_lambda_value",
            "type": [
                "tuple[typing.Union[str,int]]",
                "typing.Callable",
                "typing.Sequence[object]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MethodValue": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "class_context",
            "type": []
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@OverloadedFunctionValue": [
        {
            "category": "arg",
            "name": "function",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "overloaded_functions",
            "type": [
                "typing.Callable[typing.Any, T]"
            ]
        },
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "overloaded_functions",
            "type": [
                "typing.Callable[typing.Any, T]"
            ]
        },
        {
            "category": "local",
            "name": "_overloaded_functions",
            "type": [
                "typing.Callable[typing.Any, T]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_as_context@FunctionMixin": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "None",
                "typing.Type",
                "tuple[typing.Union[typing.Type,...]]",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "None",
                "typing.Type",
                "tuple[typing.Union[typing.Type,...]]",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_as_context",
            "type": [
                "AnonymousFunctionExecution",
                "FunctionExecutionContext"
            ]
        }
    ],
    "_find_overload_functions@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "tree_node",
            "type": [
                "dict",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "local",
            "name": "tree_node",
            "type": [
                "dict",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "return",
            "name": "_find_overload_functions",
            "type": [
                "None",
                "typing.Generator[typing.Union[dict,dbcontracts.graph.compiled.ManifestNode]]",
                "typing.Generator"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "filter",
            "type": [
                "ParserTreeFilter"
            ]
        },
        {
            "category": "local",
            "name": "found",
            "type": [
                "bool"
            ]
        }
    ],
    "_get_yield_lazy_value@BaseFunctionExecutionContext": [
        {
            "category": "arg",
            "name": "yield_expr",
            "type": []
        },
        {
            "category": "return",
            "name": "_get_yield_lazy_value",
            "type": [
                "typing.Generator[LazyKnownValue]",
                "None",
                "typing.Generator",
                "typing.Generator[LazyTreeValue]"
            ]
        },
        {
            "category": "local",
            "name": "cn",
            "type": [
                "ContextualizedNode"
            ]
        }
    ],
    "_is_overload_decorated@global": [
        {
            "category": "arg",
            "name": "funcdef",
            "type": []
        },
        {
            "category": "local",
            "name": "decorators",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_is_overload_decorated",
            "type": [
                "bool"
            ]
        }
    ],
    "create@FunctionValue": [
        {
            "category": "arg",
            "name": "tree_node",
            "type": []
        },
        {
            "category": "return",
            "name": "create",
            "type": [
                "MethodValue"
            ]
        }
    ],
    "from_context@FunctionValue": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "list[dict[str, typing.Any]]",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "tree_node",
            "type": []
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "overloaded_funcs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "from_context",
            "type": [
                "OverloadedFunctionValue"
            ]
        }
    ],
    "get_default_param_context@FunctionValue": [
        {
            "category": "return",
            "name": "get_default_param_context",
            "type": []
        }
    ],
    "get_default_param_context@MethodValue": [
        {
            "category": "return",
            "name": "get_default_param_context",
            "type": []
        }
    ],
    "get_defining_qualified_value@FunctionNameInClass": [
        {
            "category": "return",
            "name": "get_defining_qualified_value",
            "type": [
                "str",
                "bool",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "get_filters@AnonymousFunctionExecution": [
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "None",
                "int",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "until_position",
            "type": [
                "None",
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "origin_scope",
            "type": [
                "None",
                "int",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "typing.Generator[AnonymousFunctionExecutionFilter]"
            ]
        }
    ],
    "get_filters@FunctionExecutionContext": [
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "None",
                "tuple[int]",
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "tuple[int]",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "until_position",
            "type": [
                "None",
                "tuple[int]",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "origin_scope",
            "type": [
                "None",
                "tuple[int]",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "typing.Generator[FunctionExecutionFilter]"
            ]
        }
    ],
    "get_filters@FunctionMixin": [
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type",
                "dict[int, int]"
            ]
        },
        {
            "category": "local",
            "name": "origin_scope",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "get_param_names@AnonymousFunctionExecution": [
        {
            "category": "return",
            "name": "get_param_names",
            "type": [
                "str"
            ]
        }
    ],
    "get_param_names@FunctionExecutionContext": [
        {
            "category": "return",
            "name": "get_param_names",
            "type": [
                "list[ParamName]"
            ]
        }
    ],
    "get_param_names@FunctionMixin": [
        {
            "category": "return",
            "name": "get_param_names",
            "type": [
                "list[AnonymousParamName]"
            ]
        }
    ],
    "get_qualified_names@FunctionAndClassBase": [
        {
            "category": "local",
            "name": "n",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_qualified_names",
            "type": [
                "None",
                "tuple"
            ]
        }
    ],
    "get_qualified_names@MethodValue": [
        {
            "category": "local",
            "name": "names",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_qualified_names",
            "type": [
                "None"
            ]
        }
    ],
    "get_return_values@BaseFunctionExecutionContext": [
        {
            "category": "arg",
            "name": "check_yields",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_return_values",
            "type": [
                "tuple[str]",
                "str",
                "set[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "check_yields",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "value_set",
            "type": [
                "tuple[str]",
                "str",
                "set[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "check",
            "type": [
                "flow_analysis_@_UNREACHABLE",
                "dict",
                "dict[str, dict[str, typing.Any]]",
                "list[tuple[typing.Union[int,float]]]",
                "flow_analysis_@_REACHABLE"
            ]
        }
    ],
    "get_signature_functions@FunctionValue": [
        {
            "category": "return",
            "name": "get_signature_functions",
            "type": [
                "list[FunctionValue]"
            ]
        }
    ],
    "get_signature_functions@OverloadedFunctionValue": [
        {
            "category": "return",
            "name": "get_signature_functions",
            "type": []
        }
    ],
    "get_signatures@FunctionMixin": [
        {
            "category": "return",
            "name": "get_signatures",
            "type": [
                "list[TreeSignature]"
            ]
        }
    ],
    "get_type_hint@FunctionMixin": [
        {
            "category": "arg",
            "name": "add_class_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "return_annotation",
            "type": [
                "None",
                "str",
                "set",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "function_execution",
            "type": [
                "str",
                "typing.Callable",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Iterable[typing.Any]",
                "typing.Iterable[typing.Iterable[typing.Any]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "return_hint",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "get_type_hint",
            "type": [
                "str",
                "list[str]"
            ]
        }
    ],
    "get_type_hint@OverloadedFunctionValue": [
        {
            "category": "arg",
            "name": "add_class_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_type_hint",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "get_yield_lazy_values@BaseFunctionExecutionContext": [
        {
            "category": "arg",
            "name": "is_async",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "for_parents",
            "type": [
                "list[tuple]"
            ]
        },
        {
            "category": "local",
            "name": "yields_order",
            "type": [
                "list",
                "list[tuple[list]]",
                "list[tuple[typing.Optional[list]]]"
            ]
        },
        {
            "category": "local",
            "name": "last_for_stmt",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "for_stmt",
            "type": [
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "types",
            "type": [
                "list",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_yield_lazy_values",
            "type": [
                "typing.Generator[LazyKnownValues]",
                "None",
                "typing.Generator"
            ]
        },
        {
            "category": "local",
            "name": "yields",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "input_node",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "cn",
            "type": [
                "ContextualizedNode"
            ]
        },
        {
            "category": "local",
            "name": "ordered",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "lazy_value",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "dct",
            "type": [
                "dict[str, ]"
            ]
        }
    ],
    "global@global": [],
    "infer@BaseFunctionExecutionContext": [
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "T",
                "list",
                "list[dict]"
            ]
        },
        {
            "category": "local",
            "name": "is_coroutine",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "async_generator_classes",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "yield_values",
            "type": [
                "list[str]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "generics",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "c",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "infer",
            "type": [
                "bool",
                "str",
                "ValueSet"
            ]
        },
        {
            "category": "local",
            "name": "async_classes",
            "type": [
                "list",
                "list[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "return_values",
            "type": [
                "dict",
                "str",
                "dict[int, typing.Any]"
            ]
        }
    ],
    "infer@LambdaName": [
        {
            "category": "return",
            "name": "infer",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "infer_annotations@AnonymousFunctionExecution": [
        {
            "category": "return",
            "name": "infer_annotations",
            "type": []
        }
    ],
    "infer_annotations@BaseFunctionExecutionContext": [
        {
            "category": "return",
            "name": "infer_annotations",
            "type": [
                "None"
            ]
        }
    ],
    "infer_annotations@FunctionExecutionContext": [
        {
            "category": "return",
            "name": "infer_annotations",
            "type": []
        }
    ],
    "is_function@FunctionMixin": [
        {
            "category": "return",
            "name": "is_function",
            "type": [
                "bool"
            ]
        }
    ],
    "is_generator@BaseFunctionExecutionContext": [
        {
            "category": "return",
            "name": "is_generator",
            "type": [
                "bool"
            ]
        }
    ],
    "merge_yield_values@BaseFunctionExecutionContext": [
        {
            "category": "arg",
            "name": "is_async",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "merge_yield_values",
            "type": []
        }
    ],
    "name@FunctionMixin": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "LambdaName",
                "ValueName"
            ]
        }
    ],
    "name@MethodValue": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "FunctionNameInClass"
            ]
        }
    ],
    "param_name_to_str@FunctionMixin": [
        {
            "category": "arg",
            "name": "n",
            "type": []
        },
        {
            "category": "local",
            "name": "n_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "annotation",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "param_name_to_str",
            "type": []
        }
    ],
    "py__call__@FunctionMixin": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "typing.Mapping",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "typing.Mapping",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "function_execution",
            "type": [
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__call__",
            "type": [
                "bool",
                "typing.Callable"
            ]
        }
    ],
    "py__call__@OverloadedFunctionValue": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "bytes",
                "T",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "function_executions",
            "type": [
                "list",
                "list[typing.Union[typing.Callable,typing.Type,str]]"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "bytes",
                "T",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "function_execution",
            "type": [
                "typing.Callable",
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__call__",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "fe",
            "type": [
                "typing.Callable",
                "typing.Type",
                "str"
            ]
        }
    ],
    "py__class__@FunctionValue": [
        {
            "category": "return",
            "name": "py__class__",
            "type": []
        }
    ],
    "py__get__@FunctionMixin": [
        {
            "category": "arg",
            "name": "instance",
            "type": [
                "libcloud.compute.base.Node",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "class_value",
            "type": [
                "typing.Callable",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "instance",
            "type": [
                "libcloud.compute.base.Node",
                "typing.Type",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "py__get__",
            "type": [
                "ValueSet"
            ]
        },
        {
            "category": "local",
            "name": "class_value",
            "type": [
                "typing.Callable",
                "typing.Type"
            ]
        }
    ],
    "py__name__@FunctionMixin": [
        {
            "category": "return",
            "name": "py__name__",
            "type": []
        }
    ],
    "start_pos@LambdaName": [
        {
            "category": "return",
            "name": "start_pos",
            "type": []
        }
    ]
}