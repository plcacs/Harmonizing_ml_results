{
    "__init__@BuildStage": [
        {
            "category": "arg",
            "name": "steps",
            "type": [
                "int",
                "None",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "steps",
            "type": [
                "int",
                "None",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "_steps",
            "type": [
                "int",
                "None",
                "dict[str, int]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ChaliceDeploymentError": [
        {
            "category": "arg",
            "name": "error",
            "type": [
                "Exception",
                "BaseException",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "error",
            "type": [
                "Exception",
                "BaseException",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "original_error",
            "type": [
                "Exception",
                "BaseException",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "where",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "suggestion",
            "type": [
                "str",
                "dict[typing.Any, dict[str, int]]",
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Deployer": [
        {
            "category": "arg",
            "name": "application_builder",
            "type": [
                "str",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "deps_builder",
            "type": [
                "bool",
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "build_stage",
            "type": [
                "dict",
                "yacron.config.JobConfig",
                "cmk.utils.type_defs.HostName"
            ]
        },
        {
            "category": "arg",
            "name": "plan_stage",
            "type": [
                "dict[str, typing.Any]",
                "cmk.utils.rulesets.ruleset_matcher.RulesetMatcher",
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "sweeper",
            "type": [
                "bool",
                "typing.Sequence[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "executor",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "recorder",
            "type": [
                "ContextManager",
                "tuple[typing.Union[typing.Any,list[typing.Any]]]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "application_builder",
            "type": [
                "str",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "_application_builder",
            "type": [
                "str",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "deps_builder",
            "type": [
                "bool",
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "_deps_builder",
            "type": [
                "bool",
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "build_stage",
            "type": [
                "dict",
                "yacron.config.JobConfig",
                "cmk.utils.type_defs.HostName"
            ]
        },
        {
            "category": "local",
            "name": "_build_stage",
            "type": [
                "dict",
                "yacron.config.JobConfig",
                "cmk.utils.type_defs.HostName"
            ]
        },
        {
            "category": "local",
            "name": "plan_stage",
            "type": [
                "dict[str, typing.Any]",
                "cmk.utils.rulesets.ruleset_matcher.RulesetMatcher",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_plan_stage",
            "type": [
                "dict[str, typing.Any]",
                "cmk.utils.rulesets.ruleset_matcher.RulesetMatcher",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "sweeper",
            "type": [
                "bool",
                "typing.Sequence[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_sweeper",
            "type": [
                "bool",
                "typing.Sequence[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "executor",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_executor",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "recorder",
            "type": [
                "ContextManager",
                "tuple[typing.Union[typing.Any,list[typing.Any]]]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "_recorder",
            "type": [
                "ContextManager",
                "tuple[typing.Union[typing.Any,list[typing.Any]]]",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@DeploymentPackager": [
        {
            "category": "arg",
            "name": "packager",
            "type": [
                "list[str]",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "packager",
            "type": [
                "list[str]",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "_packager",
            "type": [
                "list[str]",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@DeploymentReporter": [
        {
            "category": "arg",
            "name": "ui",
            "type": [
                "\"Tracer\"",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ui",
            "type": [
                "\"Tracer\"",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_ui",
            "type": [
                "\"Tracer\"",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@InjectDefaults": [
        {
            "category": "arg",
            "name": "lambda_timeout",
            "type": []
        },
        {
            "category": "arg",
            "name": "lambda_memory_size",
            "type": []
        },
        {
            "category": "arg",
            "name": "tls_version",
            "type": []
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@LambdaEventSourcePolicyInjector": [
        {
            "category": "local",
            "name": "_sqs_policy_injected",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_kinesis_policy_injected",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_ddb_policy_injected",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ManagedLayerDeploymentPackager": [
        {
            "category": "arg",
            "name": "lambda_packager",
            "type": [
                "typing.Callable",
                "concurrenfutures.Executor",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "layer_packager",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "lambda_packager",
            "type": [
                "typing.Callable",
                "concurrenfutures.Executor",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_lambda_packager",
            "type": [
                "typing.Callable",
                "concurrenfutures.Executor",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "layer_packager",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_layer_packager",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@PolicyGenerator": [
        {
            "category": "arg",
            "name": "policy_gen",
            "type": [
                "bool",
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "osutils",
            "type": [
                "bool",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "policy_gen",
            "type": [
                "bool",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "_policy_gen",
            "type": [
                "bool",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "osutils",
            "type": [
                "bool",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_osutils",
            "type": [
                "bool",
                "dict",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ResultsRecorder": [
        {
            "category": "arg",
            "name": "osutils",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "osutils",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_osutils",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SwaggerBuilder": [
        {
            "category": "arg",
            "name": "swagger_generator",
            "type": []
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@WebsocketPolicyInjector": [
        {
            "category": "local",
            "name": "_policy_injected",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_create_deployer@global": [
        {
            "category": "arg",
            "name": "session",
            "type": [
                "audiopyle.lib.db.session.SessionProvider",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "config.Config",
                "cabrita.components.config.Compose"
            ]
        },
        {
            "category": "arg",
            "name": "ui",
            "type": [
                "config.Config",
                "cabrita.components.config.Compose"
            ]
        },
        {
            "category": "arg",
            "name": "executor_cls",
            "type": [
                "config.Config",
                "cabrita.components.config.Compose"
            ]
        },
        {
            "category": "arg",
            "name": "recorder_cls",
            "type": [
                "config.Config",
                "cabrita.components.config.Compose"
            ]
        },
        {
            "category": "local",
            "name": "session",
            "type": [
                "audiopyle.lib.db.session.SessionProvider",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "TypedAWSClient"
            ]
        },
        {
            "category": "local",
            "name": "osutils",
            "type": [
                "OSUtils"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "config.Config",
                "cabrita.components.config.Compose"
            ]
        },
        {
            "category": "local",
            "name": "ui",
            "type": [
                "config.Config",
                "cabrita.components.config.Compose"
            ]
        },
        {
            "category": "return",
            "name": "_create_deployer",
            "type": [
                "Deployer"
            ]
        }
    ],
    "_default_report@DeploymentReporter": [
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "report",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_default_report",
            "type": [
                "None"
            ]
        }
    ],
    "_deploy@Deployer": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "cmk.base.config.ConfigCache",
                "pyramid.config.Configurator",
                "cmk.base.config.HostConfig"
            ]
        },
        {
            "category": "arg",
            "name": "chalice_stage_name",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "neuromation.api.config._AuthConfig"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "cmk.base.config.ConfigCache",
                "pyramid.config.Configurator",
                "cmk.base.config.HostConfig"
            ]
        },
        {
            "category": "local",
            "name": "chalice_stage_name",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "neuromation.api.config._AuthConfig"
            ]
        },
        {
            "category": "local",
            "name": "application",
            "type": [
                "app.executor.Application",
                "ultron8.config.smarConfiguration"
            ]
        },
        {
            "category": "local",
            "name": "resources",
            "type": [
                "list[str]",
                "str",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "dict[str, set[typing.Any]]",
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "deployed_values",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "_deploy",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        }
    ],
    "_get_error_location@ChaliceDeploymentError": [
        {
            "category": "arg",
            "name": "error",
            "type": [
                "Exception",
                "dict",
                "BaseException"
            ]
        },
        {
            "category": "local",
            "name": "where",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "error",
            "type": [
                "Exception",
                "dict",
                "BaseException",
                "LambdaClientError"
            ]
        },
        {
            "category": "return",
            "name": "_get_error_location",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_get_error_message@ChaliceDeploymentError": [
        {
            "category": "arg",
            "name": "error",
            "type": [
                "Exception",
                "dict",
                "BaseException"
            ]
        },
        {
            "category": "local",
            "name": "error",
            "type": [
                "Exception",
                "dict",
                "BaseException",
                "LambdaClientError"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "error_",
            "type": [
                "RequestsConnectionError"
            ]
        },
        {
            "category": "return",
            "name": "_get_error_message",
            "type": [
                "str"
            ]
        }
    ],
    "_get_error_message_for_connection_error@ChaliceDeploymentError": [
        {
            "category": "arg",
            "name": "connection_error",
            "type": [
                "Exception",
                "typing.Type",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "connection_error",
            "type": [
                "Exception",
                "typing.Type",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "underlying_error",
            "type": [
                "socket_@_timeout",
                "dict[str, str]",
                "str",
                "Exception"
            ]
        },
        {
            "category": "return",
            "name": "_get_error_message_for_connection_error",
            "type": []
        }
    ],
    "_get_error_suggestion@ChaliceDeploymentError": [
        {
            "category": "arg",
            "name": "error",
            "type": [
                "Exception",
                "dict[str, typing.Any]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "suggestion",
            "type": [
                "None",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "error",
            "type": [
                "Exception",
                "dict[str, typing.Any]",
                "str",
                "None",
                "DeploymentPackageTooLargeError"
            ]
        },
        {
            "category": "local",
            "name": "size_warning",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_get_error_suggestion",
            "type": [
                "None",
                "typing.Text"
            ]
        }
    ],
    "_get_mb@ChaliceDeploymentError": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "float",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "float",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_get_mb",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_get_verb_from_client_method@ChaliceDeploymentError": [
        {
            "category": "arg",
            "name": "client_method_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "client_method_name_to_verb",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "client_method_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_get_verb_from_client_method",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_inject_into_function@WebsocketPolicyInjector": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "lambda_function",
            "type": [
                "typing.Callable",
                "list",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "lambda_function",
            "type": [
                "typing.Callable",
                "list",
                "T",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_inject_into_function",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "role",
            "type": [
                "None",
                "dict",
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "_policy_injected",
            "type": [
                "bool",
                "alerta.models.alerAlert",
                "None"
            ]
        }
    ],
    "_inject_policy@WebsocketPolicyInjector": [
        {
            "category": "arg",
            "name": "document",
            "type": [
                "dict",
                "list",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "policy",
            "type": [
                "dict",
                "list",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "document",
            "type": [
                "dict",
                "list",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "policy",
            "type": [
                "dict",
                "list",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "_inject_policy",
            "type": [
                "None"
            ]
        }
    ],
    "_inject_trigger_policy@LambdaEventSourcePolicyInjector": [
        {
            "category": "arg",
            "name": "document",
            "type": [
                "dict[str, typing.Any]",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "policy",
            "type": [
                "dict[str, typing.Any]",
                "list",
                "typing.Mapping",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "document",
            "type": [
                "dict[str, typing.Any]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "policy",
            "type": [
                "dict[str, typing.Any]",
                "list",
                "typing.Mapping",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_inject_trigger_policy",
            "type": [
                "None"
            ]
        }
    ],
    "_needs_policy_injected@LambdaEventSourcePolicyInjector": [
        {
            "category": "arg",
            "name": "role",
            "type": [
                "django.contrib.auth.models.User",
                "int",
                "abilian.core.models.Model",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "role",
            "type": [
                "django.contrib.auth.models.User",
                "int",
                "abilian.core.models.Model",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_needs_policy_injected",
            "type": [
                "bool"
            ]
        }
    ],
    "_read_document_from_file@PolicyGenerator": [
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_read_document_from_file",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "list[typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "Exception"
            ]
        }
    ],
    "_report_domain_name@DeploymentReporter": [
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "list[dict]",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "report",
            "type": [
                "list[dict]",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "report",
            "type": [
                "list[dict]",
                "list",
                "list[str]",
                "list[typing.Union[dict,str]]"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "list[dict]",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "_report_domain_name",
            "type": [
                "None"
            ]
        }
    ],
    "_report_lambda_function@DeploymentReporter": [
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "list[dict]"
            ]
        },
        {
            "category": "arg",
            "name": "report",
            "type": [
                "list[dict]"
            ]
        },
        {
            "category": "local",
            "name": "report",
            "type": [
                "list[dict]",
                "list[typing.Union[dict,typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "list[dict]"
            ]
        },
        {
            "category": "return",
            "name": "_report_lambda_function",
            "type": [
                "None"
            ]
        }
    ],
    "_report_lambda_layer@DeploymentReporter": [
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "list[int]",
                "list[dict]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "report",
            "type": [
                "list[int]",
                "list[dict]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "report",
            "type": [
                "list[int]",
                "list[dict]",
                "list[dict[str, typing.Any]]",
                "list[typing.Union[int,dict,dict[str, typing.Any],typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "list[int]",
                "list[dict]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "_report_lambda_layer",
            "type": [
                "None"
            ]
        }
    ],
    "_report_rest_api@DeploymentReporter": [
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "list[dict]"
            ]
        },
        {
            "category": "arg",
            "name": "report",
            "type": [
                "list[dict]"
            ]
        },
        {
            "category": "local",
            "name": "report",
            "type": [
                "list[dict]",
                "list[typing.Union[dict,typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "list[dict]"
            ]
        },
        {
            "category": "return",
            "name": "_report_rest_api",
            "type": [
                "None"
            ]
        }
    ],
    "_report_websocket_api@DeploymentReporter": [
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "list[dict[str, typing.Any]]",
                "list[dict]",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "report",
            "type": [
                "list[dict[str, typing.Any]]",
                "list[dict]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "report",
            "type": [
                "list[dict[str, typing.Any]]",
                "list[dict]",
                "list",
                "list[typing.Union[dict[str, typing.Any],dict,typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "list[dict[str, typing.Any]]",
                "list[dict]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_report_websocket_api",
            "type": [
                "None"
            ]
        }
    ],
    "_validate_config@Deployer": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "typing.Mapping",
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "typing.Mapping",
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "return",
            "name": "_validate_config",
            "type": [
                "None"
            ]
        }
    ],
    "_wrap_text@ChaliceDeploymentError": [
        {
            "category": "arg",
            "name": "text",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "indent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "indent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_wrap_text",
            "type": [
                "str"
            ]
        }
    ],
    "create_build_stage@global": [
        {
            "category": "arg",
            "name": "osutils",
            "type": [
                "minerstautils.Config",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "ui",
            "type": [
                "evtstrd.config.Config"
            ]
        },
        {
            "category": "arg",
            "name": "swagger_gen",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "core.Config"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict[str, list[str]]",
                "box.conf.Config",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "osutils",
            "type": [
                "minerstautils.Config",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "pip_runner",
            "type": [
                "PipRunner"
            ]
        },
        {
            "category": "local",
            "name": "dependency_builder",
            "type": [
                "str",
                "None",
                "typing.MutableMapping",
                "typing.MutableSequence",
                "bool",
                "float",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployment_packager",
            "type": [
                "ManagedLayerDeploymentPackager",
                "DeploymentPackager"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, list[str]]",
                "box.conf.Config",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "ui",
            "type": [
                "evtstrd.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "swagger_gen",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "core.Config"
            ]
        },
        {
            "category": "local",
            "name": "build_stage",
            "type": [
                "BuildStage"
            ]
        },
        {
            "category": "return",
            "name": "create_build_stage",
            "type": [
                "BuildStage"
            ]
        }
    ],
    "create_default_deployer@global": [
        {
            "category": "arg",
            "name": "session",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "ui",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "session",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "ui",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "create_default_deployer",
            "type": []
        }
    ],
    "create_deletion_deployer@global": [
        {
            "category": "arg",
            "name": "client",
            "type": []
        },
        {
            "category": "arg",
            "name": "ui",
            "type": []
        },
        {
            "category": "return",
            "name": "create_deletion_deployer",
            "type": [
                "Deployer"
            ]
        }
    ],
    "create_plan_only_deployer@global": [
        {
            "category": "arg",
            "name": "session",
            "type": []
        },
        {
            "category": "arg",
            "name": "config",
            "type": []
        },
        {
            "category": "arg",
            "name": "ui",
            "type": []
        },
        {
            "category": "return",
            "name": "create_plan_only_deployer",
            "type": []
        }
    ],
    "deploy@Deployer": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "cmk.base.config.ConfigCache"
            ]
        },
        {
            "category": "arg",
            "name": "chalice_stage_name",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "cmk.base.config.ConfigCache"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "cmk.base.config.ConfigCache"
            ]
        },
        {
            "category": "local",
            "name": "chalice_stage_name",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "cmk.base.config.ConfigCache"
            ]
        },
        {
            "category": "return",
            "name": "deploy",
            "type": [
                "str",
                "neuromation.api.config._AuthConfig",
                "isorsettings.Config"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "Exception"
            ]
        }
    ],
    "display_report@DeploymentReporter": [
        {
            "category": "arg",
            "name": "deployed_values",
            "type": [
                "str",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "deployed_values",
            "type": [
                "str",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "report",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "display_report",
            "type": [
                "None"
            ]
        }
    ],
    "execute@BuildStage": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "config.Config"
            ]
        },
        {
            "category": "arg",
            "name": "resources",
            "type": [
                "cmk.utils.type_defs.HostName",
                "cmk.utils.type_defs.HostAddress"
            ]
        },
        {
            "category": "local",
            "name": "resources",
            "type": [
                "cmk.utils.type_defs.HostName",
                "cmk.utils.type_defs.HostAddress"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "config.Config"
            ]
        },
        {
            "category": "return",
            "name": "execute",
            "type": [
                "None"
            ]
        }
    ],
    "generate_report@DeploymentReporter": [
        {
            "category": "arg",
            "name": "deployed_values",
            "type": [
                "dict",
                "list[str]",
                "list[dict]"
            ]
        },
        {
            "category": "local",
            "name": "report",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "deployed_values",
            "type": [
                "dict",
                "list[str]",
                "list[dict]"
            ]
        },
        {
            "category": "local",
            "name": "ordered",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "generate_report",
            "type": [
                "str"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "OptStr",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "LOGGER",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "_AWSCLIENT_EXCEPTIONS",
            "type": [
                "tuple"
            ]
        }
    ],
    "handle@BaseDeployStep": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "list[str]",
                "typing.Callable",
                "cerise.config.Config"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "dict[str, typing.Any]",
                "typing.Type",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "handler",
            "type": [
                "logging.Handler",
                "None",
                "typing.Callable[..., typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "list[str]",
                "typing.Callable",
                "cerise.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "dict[str, typing.Any]",
                "typing.Type",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "handle",
            "type": [
                "None"
            ]
        }
    ],
    "handle_autogeniampolicy@PolicyGenerator": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict",
                "solo.config.app.Config",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "dict",
                "models.LTI1p3Provider"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "dict",
                "models.LTI1p3Provider"
            ]
        },
        {
            "category": "local",
            "name": "resource_",
            "type": [
                "models_@_Placeholder",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "solo.config.app.Config",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "policy",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "handle_autogeniampolicy",
            "type": [
                "None"
            ]
        }
    ],
    "handle_deploymentpackage@DeploymentPackager": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "str",
                "neuromation.api.config._AuthConfig",
                "dss.config.Replica"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "str",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "resource_",
            "type": [
                "models_@_Placeholder",
                "str",
                "dict[str, typing.Union[str,None]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "str",
                "neuromation.api.config._AuthConfig",
                "dss.config.Replica"
            ]
        },
        {
            "category": "local",
            "name": "zip_filename",
            "type": [
                "str",
                "dict[str, typing.Union[str,None]]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "handle_deploymentpackage",
            "type": [
                "None"
            ]
        }
    ],
    "handle_domainname@InjectDefaults": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "cmk.utils.type_defs.HostAddress",
                "cmk.utils.type_defs.HostName",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "dict",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "dict",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "resource_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "handle_domainname",
            "type": [
                "None"
            ]
        }
    ],
    "handle_dynamodbeventsource@LambdaEventSourcePolicyInjector": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "cmk.utils.type_defs.HostAddress",
                "cmk.utils.type_defs.HostName",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str",
                "dict",
                "isorsettings.Config"
            ]
        },
        {
            "category": "local",
            "name": "_ddb_policy_injected",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "document",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "handle_dynamodbeventsource",
            "type": [
                "None"
            ]
        }
    ],
    "handle_filebasediampolicy@PolicyGenerator": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "cmk.utils.type_defs.HostAddress",
                "cmk.utils.type_defs.HostName",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "str",
                "dict",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "handle_filebasediampolicy",
            "type": [
                "None"
            ]
        }
    ],
    "handle_kinesiseventsource@LambdaEventSourcePolicyInjector": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "cmk.utils.type_defs.HostAddress",
                "cmk.utils.type_defs.HostName",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str",
                "dict",
                "isorsettings.Config"
            ]
        },
        {
            "category": "local",
            "name": "_kinesis_policy_injected",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "document",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "handle_kinesiseventsource",
            "type": [
                "None"
            ]
        }
    ],
    "handle_lambdafunction@InjectDefaults": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "cmk.utils.type_defs.HostAddress",
                "cmk.utils.type_defs.HostName",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str",
                "dict",
                "tracim.config.CFG"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "str",
                "dict",
                "tracim.config.CFG"
            ]
        },
        {
            "category": "local",
            "name": "resource_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "handle_lambdafunction",
            "type": [
                "None"
            ]
        }
    ],
    "handle_lambdafunction@ManagedLayerDeploymentPackager": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "str",
                "cerise.config.Config"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "kedro.config.ConfigLoader",
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "resource_",
            "type": [
                "models_@_Placeholder",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "str",
                "cerise.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "zip_filename",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "kedro.config.ConfigLoader",
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "handle_lambdafunction",
            "type": [
                "None"
            ]
        }
    ],
    "handle_lambdalayer@ManagedLayerDeploymentPackager": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "str",
                "cerise.config.Config",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "resource_",
            "type": [
                "models_@_Placeholder",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "str",
                "cerise.config.Config",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "zip_filename",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "handle_lambdalayer",
            "type": [
                "None"
            ]
        }
    ],
    "handle_restapi@PolicyGenerator": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "typing.Iterable[str]",
                "cmk.utils.type_defs.HostAddress"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str",
                "sqlalchemy.orm.Session",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "str",
                "sqlalchemy.orm.Session",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "handle_restapi",
            "type": [
                "None"
            ]
        }
    ],
    "handle_restapi@SwaggerBuilder": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict",
                "str",
                "isorsettings.Config"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "dict",
                "str",
                "neuromation.api.config._AuthConfig"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "str",
                "isorsettings.Config"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "dict",
                "str",
                "neuromation.api.config._AuthConfig"
            ]
        },
        {
            "category": "local",
            "name": "swagger_doc",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "resource_",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "handle_restapi",
            "type": [
                "None"
            ]
        }
    ],
    "handle_sqseventsource@LambdaEventSourcePolicyInjector": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "cmk.utils.type_defs.HostAddress",
                "cmk.utils.type_defs.HostName",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str",
                "dict",
                "isorsettings.Config"
            ]
        },
        {
            "category": "local",
            "name": "_sqs_policy_injected",
            "type": [
                "str",
                "dict[str, str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "document",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "handle_sqseventsource",
            "type": [
                "None"
            ]
        }
    ],
    "handle_websocketapi@WebsocketPolicyInjector": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "raiden.constants.Environment",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "dict[str, typing.Any]",
                "raiden.constants.Environment",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "raiden.constants.Environment",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "dict[str, typing.Any]",
                "raiden.constants.Environment",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "handle_websocketapi",
            "type": [
                "None"
            ]
        }
    ],
    "record_results@NoopResultsRecorder": [
        {
            "category": "arg",
            "name": "results",
            "type": [
                "str",
                "tartare.core.models.PlatformOptions"
            ]
        },
        {
            "category": "arg",
            "name": "chalice_stage_name",
            "type": [
                "str",
                "tartare.core.models.PlatformOptions"
            ]
        },
        {
            "category": "arg",
            "name": "project_dir",
            "type": [
                "str",
                "tartare.core.models.PlatformOptions"
            ]
        },
        {
            "category": "return",
            "name": "record_results",
            "type": [
                "None"
            ]
        }
    ],
    "record_results@ResultsRecorder": [
        {
            "category": "arg",
            "name": "results",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "models.combaai_impl.AIType"
            ]
        },
        {
            "category": "arg",
            "name": "chalice_stage_name",
            "type": [
                "str",
                "typing.IO"
            ]
        },
        {
            "category": "arg",
            "name": "project_dir",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "project_dir",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "deployed_dir",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "chalice_stage_name",
            "type": [
                "str",
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "deployed_filename",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "results",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "models.combaai_impl.AIType"
            ]
        },
        {
            "category": "local",
            "name": "serialized",
            "type": [
                "str",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "record_results",
            "type": [
                "None"
            ]
        }
    ]
}