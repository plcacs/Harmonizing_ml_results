{
    "__init__@DictComprehension": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "defining_context",
            "type": [
                "list[typing.Type]",
                "set",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "sync_comp_for_node",
            "type": [
                "bool",
                "list[typing.Type]"
            ]
        },
        {
            "category": "arg",
            "name": "key_node",
            "type": [
                "\"PerceptionGraph\"",
                "tuple[int]",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "value_node",
            "type": [
                "bool",
                "dict[str, tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "defining_context",
            "type": [
                "list[typing.Type]",
                "set",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_defining_context",
            "type": [
                "list[typing.Type]",
                "set",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "sync_comp_for_node",
            "type": [
                "bool",
                "list[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "_sync_comp_for_node",
            "type": [
                "bool",
                "list[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "key_node",
            "type": [
                "\"PerceptionGraph\"",
                "tuple[int]",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "_entry_node",
            "type": [
                "\"PerceptionGraph\"",
                "tuple[int]",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "value_node",
            "type": [
                "bool",
                "dict[str, tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "_value_node",
            "type": [
                "bool",
                "dict[str, tuple[int]]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@DictLiteralValue": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "str",
                "dict[str, list[bool]]"
            ]
        },
        {
            "category": "arg",
            "name": "defining_context",
            "type": [
                "bool",
                "dict[int, int]"
            ]
        },
        {
            "category": "arg",
            "name": "atom",
            "type": [
                "typing.Hashable"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "str",
                "dict[str, list[bool]]"
            ]
        },
        {
            "category": "local",
            "name": "defining_context",
            "type": [
                "bool",
                "dict[int, int]"
            ]
        },
        {
            "category": "local",
            "name": "_defining_context",
            "type": [
                "bool",
                "dict[int, int]"
            ]
        },
        {
            "category": "local",
            "name": "atom",
            "type": [
                "typing.Hashable"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@FakeDict": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "dict",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "dct",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "dict",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "dct",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "_dct",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Generator": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "str",
                "rl_algorithms.utils.config.ConfigDict"
            ]
        },
        {
            "category": "arg",
            "name": "func_execution_context",
            "type": [
                "dict[str, typing.Any]",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "str",
                "rl_algorithms.utils.config.ConfigDict"
            ]
        },
        {
            "category": "local",
            "name": "func_execution_context",
            "type": [
                "dict[str, typing.Any]",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_func_execution_context",
            "type": [
                "dict[str, typing.Any]",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MergedArray": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "'ConvolutionalEmbeddingConfig'",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "arrays",
            "type": [
                "pineboolib.core.utils.utils_base.StructMyDict"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "'ConvolutionalEmbeddingConfig'",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "arrays",
            "type": [
                "pineboolib.core.utils.utils_base.StructMyDict"
            ]
        },
        {
            "category": "local",
            "name": "array_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_arrays",
            "type": [
                "pineboolib.core.utils.utils_base.StructMyDict"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SequenceLiteralValue": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "typing.Callable",
                "dict[str, list[bool]]"
            ]
        },
        {
            "category": "arg",
            "name": "defining_context",
            "type": [
                "bool",
                "dict[int, int]"
            ]
        },
        {
            "category": "arg",
            "name": "atom",
            "type": [
                "float",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "typing.Callable",
                "dict[str, list[bool]]"
            ]
        },
        {
            "category": "local",
            "name": "atom",
            "type": [
                "float",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "defining_context",
            "type": [
                "bool",
                "dict[int, int]"
            ]
        },
        {
            "category": "local",
            "name": "_defining_context",
            "type": [
                "bool",
                "dict[int, int]"
            ]
        },
        {
            "category": "local",
            "name": "array_type",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Slice": [
        {
            "category": "arg",
            "name": "python_context",
            "type": [
                "dict",
                "None",
                "bool",
                "dict[str, keanu.vertex.base.Vertex]"
            ]
        },
        {
            "category": "arg",
            "name": "start",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "stop",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "step",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "python_context",
            "type": [
                "dict",
                "None",
                "bool",
                "dict[str, keanu.vertex.base.Vertex]"
            ]
        },
        {
            "category": "local",
            "name": "_context",
            "type": [
                "dict",
                "None",
                "bool",
                "dict[str, keanu.vertex.base.Vertex]"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_start",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "stop",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_stop",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "step",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_step",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_BaseComprehension": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "bool",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "defining_context",
            "type": [
                "str",
                "dict[int, int]"
            ]
        },
        {
            "category": "arg",
            "name": "sync_comp_for_node",
            "type": [
                "dict[int, int]"
            ]
        },
        {
            "category": "arg",
            "name": "entry_node",
            "type": [
                "dict",
                "dict[int, int]",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "bool",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "defining_context",
            "type": [
                "str",
                "dict[int, int]"
            ]
        },
        {
            "category": "local",
            "name": "_defining_context",
            "type": [
                "str",
                "dict[int, int]"
            ]
        },
        {
            "category": "local",
            "name": "sync_comp_for_node",
            "type": [
                "dict[int, int]"
            ]
        },
        {
            "category": "local",
            "name": "_sync_comp_for_node",
            "type": [
                "dict[int, int]"
            ]
        },
        {
            "category": "local",
            "name": "entry_node",
            "type": [
                "dict",
                "dict[int, int]",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "_entry_node",
            "type": [
                "dict",
                "dict[int, int]",
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_FakeSequence": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "bytes",
                "None",
                "dict[str, list[bool]]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "lazy_value_list",
            "type": [
                "list",
                "list[T]",
                "list[list[T]]"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "bytes",
                "None",
                "dict[str, list[bool]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "lazy_value_list",
            "type": [
                "list",
                "list[T]",
                "list[list[T]]"
            ]
        },
        {
            "category": "local",
            "name": "_lazy_value_list",
            "type": [
                "list",
                "list[T]",
                "list[list[T]]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__repr__@ComprehensionMixin": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@FakeDict": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@Generator": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@SequenceLiteralValue": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@_FakeSequence": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_cached_generics@Sequence": [
        {
            "category": "return",
            "name": "_cached_generics",
            "type": [
                "str"
            ]
        }
    ],
    "_dict_keys@DictComprehension": [
        {
            "category": "return",
            "name": "_dict_keys",
            "type": []
        }
    ],
    "_dict_keys@DictLiteralValue": [
        {
            "category": "return",
            "name": "_dict_keys",
            "type": []
        }
    ],
    "_dict_keys@FakeDict": [
        {
            "category": "return",
            "name": "_dict_keys",
            "type": []
        }
    ],
    "_dict_values@DictComprehension": [
        {
            "category": "return",
            "name": "_dict_values",
            "type": []
        }
    ],
    "_dict_values@DictLiteralValue": [
        {
            "category": "return",
            "name": "_dict_values",
            "type": []
        }
    ],
    "_dict_values@FakeDict": [
        {
            "category": "return",
            "name": "_dict_values",
            "type": []
        }
    ],
    "_get_cls@GeneratorBase": [
        {
            "category": "local",
            "name": "generator",
            "type": [
                "typing.Iterator",
                "typing.Generator[typing.Optional[int]]"
            ]
        },
        {
            "category": "return",
            "name": "_get_cls",
            "type": [
                "typing.Iterator",
                "typing.Generator[typing.Optional[int]]"
            ]
        }
    ],
    "_get_comp_for_context@ComprehensionMixin": [
        {
            "category": "arg",
            "name": "parent_context",
            "type": [
                "bool",
                "str",
                "list[str]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "arg",
            "name": "comp_for",
            "type": [
                "bool",
                "str",
                "list[str]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "bool",
                "str",
                "list[str]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "comp_for",
            "type": [
                "bool",
                "str",
                "list[str]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "_get_comp_for_context",
            "type": [
                "CompForContext"
            ]
        }
    ],
    "_get_generics@Sequence": [
        {
            "category": "return",
            "name": "_get_generics",
            "type": [
                "tuple"
            ]
        }
    ],
    "_get_generics@SequenceLiteralValue": [
        {
            "category": "return",
            "name": "_get_generics",
            "type": [
                "tuple",
                "typing.Type",
                "bool"
            ]
        }
    ],
    "_get_generics@_DictMixin": [
        {
            "category": "return",
            "name": "_get_generics",
            "type": [
                "tuple"
            ]
        }
    ],
    "_get_wrapped_value@GeneratorBase": [
        {
            "category": "local",
            "name": "instance",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_get_wrapped_value",
            "type": [
                "list"
            ]
        }
    ],
    "_get_wrapped_value@Sequence": [
        {
            "category": "local",
            "name": "c",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_get_wrapped_value",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "_get_wrapped_value@Slice": [
        {
            "category": "return",
            "name": "_get_wrapped_value",
            "type": []
        }
    ],
    "_imitate_items@DictComprehension": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "list[dict]",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "lazy_values",
            "type": [
                "list[LazyKnownValue]"
            ]
        },
        {
            "category": "return",
            "name": "_imitate_items",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "_imitate_items@DictLiteralValue": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "list[dict]",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "lazy_values",
            "type": [
                "list[LazyKnownValue]"
            ]
        },
        {
            "category": "return",
            "name": "_imitate_items",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "_imitate_values@DictComprehension": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "lazy_value",
            "type": [
                "LazyKnownValues"
            ]
        },
        {
            "category": "return",
            "name": "_imitate_values",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "_imitate_values@DictLiteralValue": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "lazy_value",
            "type": [
                "LazyKnownValues"
            ]
        },
        {
            "category": "return",
            "name": "_imitate_values",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "_iter@GeneratorBase": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "T",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_iter",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "_iterate@ComprehensionMixin": [
        {
            "category": "local",
            "name": "comp_fors",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "_iterate",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "_nested@ComprehensionMixin": [
        {
            "category": "arg",
            "name": "comp_fors",
            "type": [
                "dict[str, set[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "parent_context",
            "type": [
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "comp_fors",
            "type": [
                "dict[str, set[str]]"
            ]
        },
        {
            "category": "local",
            "name": "comp_for",
            "type": [
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "is_async",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "cn",
            "type": [
                "ContextualizedNode"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "str",
                "typing.Generator[typing.Optional[typing.Type]]"
            ]
        },
        {
            "category": "return",
            "name": "_nested",
            "type": [
                "typing.Generator",
                "typing.Generator[tuple]"
            ]
        }
    ],
    "_next@GeneratorBase": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "dict",
                "list[dict[str, typing.Any]]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_next",
            "type": []
        }
    ],
    "_values@FakeDict": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "dict[str, typing.Any]",
                "list[dict]"
            ]
        },
        {
            "category": "return",
            "name": "_values",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "comprehension_from_atom@global": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "str",
                "typing.Callable[T, bool]",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "str",
                "typing.Callable[T, bool]",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "atom",
            "type": [
                "T"
            ]
        },
        {
            "category": "local",
            "name": "atom",
            "type": [
                "T"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "str",
                "typing.Callable[T, bool]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str",
                "typing.Callable[T, bool]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "comprehension_from_atom",
            "type": [
                "DictComprehension"
            ]
        }
    ],
    "exact_key_items@DictComprehension": [
        {
            "category": "return",
            "name": "exact_key_items",
            "type": [
                "list"
            ]
        }
    ],
    "exact_key_items@DictLiteralValue": [
        {
            "category": "return",
            "name": "exact_key_items",
            "type": [
                "typing.Generator[tuple[LazyTreeValue]]"
            ]
        }
    ],
    "exact_key_items@FakeDict": [
        {
            "category": "return",
            "name": "exact_key_items",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        }
    ],
    "get@Slice": [
        {
            "category": "arg",
            "name": "element",
            "type": []
        },
        {
            "category": "local",
            "name": "element",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get",
            "type": [
                "None"
            ]
        }
    ],
    "get_annotated_class_object@GeneratorBase": [
        {
            "category": "local",
            "name": "gen_values",
            "type": [
                "str",
                "tuple",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "gm",
            "type": [
                "TupleGenericManager"
            ]
        },
        {
            "category": "return",
            "name": "get_annotated_class_object",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "get_key_values@_DictKeyMixin": [
        {
            "category": "return",
            "name": "get_key_values",
            "type": [
                "dict",
                "str"
            ]
        }
    ],
    "get_mapping_item_values@_DictKeyMixin": [
        {
            "category": "return",
            "name": "get_mapping_item_values",
            "type": [
                "tuple"
            ]
        }
    ],
    "get_safe_value@Slice": [
        {
            "category": "arg",
            "name": "default",
            "type": []
        },
        {
            "category": "return",
            "name": "get_safe_value",
            "type": [
                "range"
            ]
        }
    ],
    "get_tree_entries@SequenceLiteralValue": [
        {
            "category": "return",
            "name": "get_tree_entries",
            "type": [
                "list",
                "list[tuple]"
            ]
        },
        {
            "category": "local",
            "name": "kv",
            "type": [
                "list",
                "list[tuple]"
            ]
        }
    ],
    "global@global": [],
    "name@GeneratorBase": [
        {
            "category": "return",
            "name": "name",
            "type": []
        }
    ],
    "name@Sequence": [
        {
            "category": "return",
            "name": "name",
            "type": []
        }
    ],
    "parent@Sequence": [
        {
            "category": "return",
            "name": "parent",
            "type": []
        }
    ],
    "py__bool__@GeneratorBase": [
        {
            "category": "return",
            "name": "py__bool__",
            "type": [
                "bool"
            ]
        }
    ],
    "py__bool__@Sequence": [
        {
            "category": "return",
            "name": "py__bool__",
            "type": [
                "None"
            ]
        }
    ],
    "py__bool__@_FakeSequence": [
        {
            "category": "return",
            "name": "py__bool__",
            "type": [
                "bool"
            ]
        }
    ],
    "py__getitem__@Sequence": [
        {
            "category": "arg",
            "name": "index_value_set",
            "type": [
                "int",
                "typing.Type",
                "typing.Iterable[float]"
            ]
        },
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "int",
                "typing.Type",
                "typing.Iterable[float]"
            ]
        },
        {
            "category": "return",
            "name": "py__getitem__",
            "type": [
                "dict[str, str]",
                "dict",
                "str"
            ]
        }
    ],
    "py__iter__@ComprehensionMixin": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "py__iter__",
            "type": [
                "typing.Generator[LazyKnownValues]"
            ]
        }
    ],
    "py__iter__@DictComprehension": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "py__iter__",
            "type": [
                "typing.Generator[LazyKnownValues]"
            ]
        }
    ],
    "py__iter__@DictLiteralValue": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "types",
            "type": [
                "str",
                "set",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "py__iter__",
            "type": [
                "typing.Generator[LazyKnownValues]"
            ]
        }
    ],
    "py__iter__@FakeDict": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "py__iter__",
            "type": [
                "typing.Generator[LazyKnownValue]"
            ]
        }
    ],
    "py__iter__@Generator": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "iterators",
            "type": [
                "list",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "py__iter__",
            "type": [
                "str",
                "int",
                "dict"
            ]
        }
    ],
    "py__iter__@MergedArray": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "py__iter__",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "py__iter__@SequenceLiteralValue": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "py__iter__",
            "type": [
                "typing.Generator[LazyKnownValue]",
                "typing.Generator[LazyTreeValue]",
                "typing.Generator"
            ]
        }
    ],
    "py__iter__@_FakeSequence": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "py__iter__",
            "type": []
        }
    ],
    "py__len__@SequenceLiteralValue": [
        {
            "category": "return",
            "name": "py__len__",
            "type": [
                "int"
            ]
        }
    ],
    "py__next__@IterableMixin": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "set[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "None",
                "set[str]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__next__",
            "type": [
                "str",
                "list",
                "list[str]"
            ]
        }
    ],
    "py__simple_getitem__@DictComprehension": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "typing.Iterable[typing.Optional[typing.Any]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "typing.Iterable[typing.Optional[typing.Any]]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__simple_getitem__",
            "type": []
        }
    ],
    "py__simple_getitem__@DictLiteralValue": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "str",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "str",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "py__simple_getitem__",
            "type": [
                "bool"
            ]
        }
    ],
    "py__simple_getitem__@FakeDict": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "utils.Node"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "utils.Node"
            ]
        },
        {
            "category": "return",
            "name": "py__simple_getitem__",
            "type": []
        }
    ],
    "py__simple_getitem__@ListComprehension": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "py__simple_getitem__",
            "type": [
                "ValueSet",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "all_types",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "lazy_value",
            "type": [
                "list",
                "typing.Iterator",
                "typing.Callable[None, typing.Any]"
            ]
        }
    ],
    "py__simple_getitem__@MergedArray": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "slice",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__simple_getitem__",
            "type": []
        }
    ],
    "py__simple_getitem__@SequenceLiteralValue": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "py__simple_getitem__",
            "type": [
                "ValueSet",
                "str",
                "tuple[bool]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "list",
                "str",
                "int"
            ]
        }
    ],
    "py__simple_getitem__@_FakeSequence": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "py__simple_getitem__",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "py__stop_iteration_returns@Generator": [
        {
            "category": "return",
            "name": "py__stop_iteration_returns",
            "type": [
                "str",
                "typing.Type",
                "int"
            ]
        }
    ],
    "py__stop_iteration_returns@GeneratorBase": [
        {
            "category": "return",
            "name": "py__stop_iteration_returns",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "py__stop_iteration_returns@IterableMixin": [
        {
            "category": "return",
            "name": "py__stop_iteration_returns",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "unpack_tuple_to_dict@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "types",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "exprlist",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "exprlist",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "types",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "unpack_tuple_to_dict",
            "type": [
                "dict[, typing.Type]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "dct",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        }
    ]
}