{
    "global@global": [],
    "mock_increment_concurrency_slots@global": [
        {
            "category": "arg",
            "name": "monkeypatch",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "monkeypatch",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "mock_increment_concurrency_slots",
            "type": [
                "None"
            ]
        }
    ],
    "mocked_increment_concurrency_slots@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "response",
            "type": [
                "Response"
            ]
        },
        {
            "category": "return",
            "name": "mocked_increment_concurrency_slots",
            "type": [
                "None"
            ]
        }
    ],
    "my_flow@global": [
        {
            "category": "return",
            "name": "my_flow",
            "type": [
                "None"
            ]
        }
    ],
    "resource_heavy@global": [
        {
            "category": "local",
            "name": "executed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "resource_heavy",
            "type": [
                "None"
            ]
        }
    ],
    "test_concurrency_can_be_used_while_event_loop_is_running@global": [
        {
            "category": "arg",
            "name": "concurrency_limit",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "executed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_concurrency_can_be_used_while_event_loop_is_running",
            "type": [
                "None"
            ]
        }
    ],
    "test_concurrency_can_be_used_within_a_flow@global": [
        {
            "category": "arg",
            "name": "concurrency_limit",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "executed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_concurrency_can_be_used_within_a_flow",
            "type": [
                "None"
            ]
        }
    ],
    "test_concurrency_emits_events@global": [
        {
            "category": "arg",
            "name": "concurrency_limit",
            "type": [
                "core_lib.core.processing_chain.Chain",
                "collections.abc.Awaitable[None]",
                "None",
                "dict[int, list[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "other_concurrency_limit",
            "type": [
                "collections.abc.Awaitable[None]",
                "None",
                "typing.Callable",
                "asyncio.Queue"
            ]
        },
        {
            "category": "arg",
            "name": "asserting_events_worker",
            "type": [
                "asyncio.Task",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "arg",
            "name": "mock_should_emit_events",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "reset_worker_events",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "asserting_events_worker",
            "type": [
                "asyncio.Task",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "phase",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_concurrency_emits_events",
            "type": [
                "None"
            ]
        }
    ],
    "test_concurrency_orchestrates_api@global": [
        {
            "category": "arg",
            "name": "concurrency_limit",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "executed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_concurrency_orchestrates_api",
            "type": [
                "None"
            ]
        }
    ],
    "test_concurrency_respects_timeout@global": [
        {
            "category": "return",
            "name": "test_concurrency_respects_timeout",
            "type": [
                "None"
            ]
        }
    ],
    "test_concurrency_strict_within_a_flow@global": [
        {
            "category": "return",
            "name": "test_concurrency_strict_within_a_flow",
            "type": [
                "None"
            ]
        }
    ],
    "test_concurrency_without_limit_names_sync@global": [
        {
            "category": "arg",
            "name": "names",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "executed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_concurrency_without_limit_names_sync",
            "type": [
                "None"
            ]
        }
    ],
    "test_rate_limit_can_be_used_within_a_flow@global": [
        {
            "category": "arg",
            "name": "concurrency_limit_with_decay",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "executed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_rate_limit_can_be_used_within_a_flow",
            "type": [
                "None"
            ]
        }
    ],
    "test_rate_limit_can_be_used_within_a_flow_with_strict@global": [
        {
            "category": "return",
            "name": "test_rate_limit_can_be_used_within_a_flow_with_strict",
            "type": [
                "None"
            ]
        }
    ],
    "test_rate_limit_emits_events@global": [
        {
            "category": "arg",
            "name": "concurrency_limit_with_decay",
            "type": [
                "dict[str, typing.Any]",
                "asyncio.AbstractEventLoop",
                "asyncio.Task"
            ]
        },
        {
            "category": "arg",
            "name": "other_concurrency_limit_with_decay",
            "type": [
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "asserting_events_worker",
            "type": [
                "int",
                "request_response.Response",
                "None",
                "asyncio.Queue"
            ]
        },
        {
            "category": "arg",
            "name": "mock_should_emit_events",
            "type": [
                "bool",
                "typing.Iterable[bytes]"
            ]
        },
        {
            "category": "arg",
            "name": "reset_worker_events",
            "type": [
                "bool",
                "typing.Iterable[bytes]"
            ]
        },
        {
            "category": "local",
            "name": "asserting_events_worker",
            "type": [
                "int",
                "request_response.Response",
                "None",
                "asyncio.Queue"
            ]
        },
        {
            "category": "return",
            "name": "test_rate_limit_emits_events",
            "type": [
                "None"
            ]
        }
    ],
    "test_rate_limit_mixed_sync_async@global": [
        {
            "category": "arg",
            "name": "concurrency_limit_with_decay",
            "type": [
                "int",
                "typing.Callable",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "executed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_rate_limit_mixed_sync_async",
            "type": [
                "None"
            ]
        }
    ],
    "test_rate_limit_orchestrates_api@global": [
        {
            "category": "arg",
            "name": "concurrency_limit_with_decay",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "executed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_rate_limit_orchestrates_api",
            "type": [
                "None"
            ]
        }
    ],
    "test_rate_limit_without_limit_names_sync@global": [
        {
            "category": "arg",
            "name": "names",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "executed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_rate_limit_without_limit_names_sync",
            "type": [
                "None"
            ]
        }
    ]
}