{
    "__init__@RandomSearchMaker": [
        {
            "category": "arg",
            "name": "middle_point",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "stupid",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "opposition_mode",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "sampler",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "scale",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "recommendation_rule",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SamplingSearch": [
        {
            "category": "arg",
            "name": "sampler",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "scrambled",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "middle_point",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "opposition_mode",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "cauchy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "autorescale",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "scale",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "rescaled",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "recommendation_rule",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_RandomSearch": [
        {
            "category": "arg",
            "name": "parametrization",
            "type": [
                "int",
                "None",
                "base.IntOrParameter"
            ]
        },
        {
            "category": "arg",
            "name": "budget",
            "type": [
                "None",
                "int",
                "base.IntOrParameter"
            ]
        },
        {
            "category": "arg",
            "name": "num_workers",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "middle_point",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "stupid",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "opposition_mode",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "sampler",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "scale",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "recommendation_rule",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "parametrization",
            "type": [
                "int",
                "None",
                "base.IntOrParameter"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "None",
                "int",
                "base.IntOrParameter"
            ]
        },
        {
            "category": "local",
            "name": "num_workers",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "middle_point",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "opposition_mode",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "stupid",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "recommendation_rule",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "scale",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "sampler",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_opposable_data",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_no_hypervolume",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_SamplingSearch": [
        {
            "category": "arg",
            "name": "parametrization",
            "type": [
                "int",
                "None",
                "base.IntOrParameter"
            ]
        },
        {
            "category": "arg",
            "name": "budget",
            "type": [
                "None",
                "int",
                "base.IntOrParameter"
            ]
        },
        {
            "category": "arg",
            "name": "num_workers",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "sampler",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "scrambled",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "middle_point",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "opposition_mode",
            "type": [
                "None",
                "bool",
                "str",
                "typing.Sequence[tuple[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "cauchy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "autorescale",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "scale",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "rescaled",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "recommendation_rule",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "parametrization",
            "type": [
                "int",
                "None",
                "base.IntOrParameter"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "None",
                "int",
                "base.IntOrParameter"
            ]
        },
        {
            "category": "local",
            "name": "num_workers",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_sampler_instance",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_rescaler",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_opposable_data",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "sampler",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_sampler",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "opposition_mode",
            "type": [
                "None",
                "bool",
                "str",
                "typing.Sequence[tuple[str]]"
            ]
        },
        {
            "category": "local",
            "name": "middle_point",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "scrambled",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "cauchy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "autorescale",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "scale",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "rescaled",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "recommendation_rule",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_no_hypervolume",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_normalizer",
            "type": [
                "nevergrad.functions.pyomo.core.Pyomo",
                "dict[str, typing.Any]",
                "dict[str, dataworkspaces.utils.param_utils.ParamDef]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_internal_ask@_RandomSearch": [
        {
            "category": "local",
            "name": "_opposable_data",
            "type": [
                "None",
                "float",
                "list",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_internal_ask",
            "type": [
                "float",
                "list",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "scale",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "point",
            "type": [
                "list",
                "list[dict[str, typing.Any]]"
            ]
        }
    ],
    "_internal_ask@_SamplingSearch": [
        {
            "category": "return",
            "name": "_internal_ask",
            "type": [
                "float",
                "list",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_opposable_data",
            "type": [
                "int",
                "None",
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "sample",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_rescaler",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "scale",
            "type": [
                "float",
                "int",
                "list[float]"
            ]
        }
    ],
    "_internal_ask_candidate@OneShotOptimizer": [
        {
            "category": "local",
            "name": "out",
            "type": [
                "list",
                "dict[typing.Any, int]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_internal_ask_candidate",
            "type": [
                "list",
                "dict[typing.Any, int]",
                "int"
            ]
        }
    ],
    "_internal_provide_recommendation@_RandomSearch": [
        {
            "category": "return",
            "name": "_internal_provide_recommendation",
            "type": [
                "int",
                "str",
                "numpy.ndarray",
                "None"
            ]
        }
    ],
    "_internal_provide_recommendation@_SamplingSearch": [
        {
            "category": "return",
            "name": "_internal_provide_recommendation",
            "type": [
                "None"
            ]
        }
    ],
    "avg_of_k_best@global": [
        {
            "category": "arg",
            "name": "archive",
            "type": [
                "str",
                "list[str]",
                "list[float]"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "archive",
            "type": [
                "str",
                "list[str]",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "items",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "dimension",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "k",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "first_k_individuals",
            "type": [
                "list",
                "list[tuple[typing.Union[int,typing.Any]]]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "local",
            "name": "p",
            "type": [
                "tuple[typing.Union[int,typing.Any]]",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "avg_of_k_best",
            "type": []
        }
    ],
    "convex_limit@global": [
        {
            "category": "arg",
            "name": "struct_points",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "points",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "struct_points",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "d",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "convex_limit",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hull",
            "type": [
                "ConvexHull"
            ]
        },
        {
            "category": "local",
            "name": "num_points",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "k",
            "type": [
                "int"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "RandomSearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "QORandomSearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "typing.Callable[None,None,None, typing.Any]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "ORandomSearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "RandomSearchPlusMiddlePoint",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "MetaRecentering",
            "type": [
                "int",
                "dict[str, str]",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "MetaTuneRecentering",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "int",
                "dict[int, int]"
            ]
        },
        {
            "category": "local",
            "name": "HullAvgMetaTuneRecentering",
            "type": [
                "float",
                "list[float]",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "HullAvgMetaRecentering",
            "type": [
                "list[typing.Union[str,int]]",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "AvgMetaRecenteringNoHull",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "myia.operations.utils.BackendPrimitive",
                "myia.operations.utils.Operation"
            ]
        },
        {
            "category": "local",
            "name": "HaltonSearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "HaltonSearchPlusMiddlePoint",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "LargeHaltonSearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ScrHaltonSearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "str",
                "typing.Match",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ScrHaltonSearchPlusMiddlePoint",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "HammersleySearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "bool",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "HammersleySearchPlusMiddlePoint",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ScrHammersleySearchPlusMiddlePoint",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "ScrHammersleySearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "QOScrHammersleySearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "bool",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "OScrHammersleySearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "CauchyScrHammersleySearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "str",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "LHSSearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "CauchyLHSSearch",
            "type": [
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "dict[int, str]",
                "str"
            ]
        }
    ],
    "hull_center@global": [
        {
            "category": "arg",
            "name": "points",
            "type": [
                "numpy.ndarray",
                "list[float]"
            ]
        },
        {
            "category": "arg",
            "name": "k",
            "type": [
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "points",
            "type": [
                "numpy.ndarray",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "k",
            "type": [
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hull",
            "type": [
                "ConvexHull"
            ]
        },
        {
            "category": "return",
            "name": "hull_center",
            "type": [
                "float"
            ]
        }
    ],
    "sampler@_SamplingSearch": [
        {
            "category": "local",
            "name": "_sampler_instance",
            "type": [
                "bool",
                "dict",
                "list[collections.abc.Coroutine]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "samplers",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "internal_budget",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "sampler",
            "type": [
                "bool",
                "dict",
                "list[collections.abc.Coroutine]"
            ]
        }
    ]
}