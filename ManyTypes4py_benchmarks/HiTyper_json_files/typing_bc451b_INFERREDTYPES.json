{
    "Model@ModelNode": [
        {
            "category": "return",
            "name": "Model",
            "type": []
        }
    ],
    "_TypeInfo_from_type@global": [
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "bool",
                "typing.Type",
                "mypy.types.Instance"
            ]
        },
        {
            "category": "arg",
            "name": "optional",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "bool",
                "typing.Type",
                "mypy.types.Instance"
            ]
        },
        {
            "category": "local",
            "name": "optional",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_TypeInfo_from_type",
            "type": [
                "TypeInfo"
            ]
        }
    ],
    "__getitem__@Variable": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "__getitem__",
            "type": [
                "str",
                "typing.Callable"
            ]
        }
    ],
    "__init__@Node": [
        {
            "category": "arg",
            "name": "expr",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "root",
            "type": [
                "None",
                "\"Node\""
            ]
        },
        {
            "category": "local",
            "name": "expr",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "None",
                "\"Node\""
            ]
        },
        {
            "category": "local",
            "name": "DEBUG",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@RootNode": [
        {
            "category": "arg",
            "name": "expr",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "root",
            "type": [
                "None",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "user_types",
            "type": [
                "None",
                "str",
                "list[str]",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "date_parser",
            "type": [
                "None",
                "str",
                "typing.Callable",
                "types.CommandCoroutine"
            ]
        },
        {
            "category": "local",
            "name": "type_stats",
            "type": [
                "Counter"
            ]
        },
        {
            "category": "local",
            "name": "user_types",
            "type": [
                "None",
                "str",
                "list[str]",
                "typing.Type",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "globals",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "closures",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "date_parser",
            "type": [
                "None",
                "str",
                "typing.Callable",
                "types.CommandCoroutine"
            ]
        },
        {
            "category": "local",
            "name": "found_types",
            "type": [
                "set[str]",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "expr",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@UserNode": [
        {
            "category": "arg",
            "name": "expr",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "root",
            "type": [
                "None",
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "user_types",
            "type": [
                "None",
                "faustypes.models.CoercionMapping",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "handler",
            "type": []
        },
        {
            "category": "local",
            "name": "expr",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "None",
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Variable": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "getitem",
            "type": [
                "None",
                "str",
                "typing.Sequence[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "getitem",
            "type": [
                "None",
                "str",
                "typing.Sequence[str]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init_subclass__@Node": [
        {
            "category": "return",
            "name": "__init_subclass__",
            "type": [
                "None"
            ]
        }
    ],
    "__post_init__@DatetimeNode": [
        {
            "category": "return",
            "name": "__post_init__",
            "type": [
                "None"
            ]
        }
    ],
    "__post_init__@DecimalNode": [
        {
            "category": "return",
            "name": "__post_init__",
            "type": [
                "None"
            ]
        }
    ],
    "__post_init__@ModelNode": [
        {
            "category": "return",
            "name": "__post_init__",
            "type": [
                "None"
            ]
        }
    ],
    "__post_init__@Node": [
        {
            "category": "return",
            "name": "__post_init__",
            "type": [
                "None"
            ]
        }
    ],
    "__post_init__@UserNode": [
        {
            "category": "return",
            "name": "__post_init__",
            "type": [
                "None"
            ]
        }
    ],
    "__repr__@Node": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@Variable": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__str__@Variable": [
        {
            "category": "local",
            "name": "getitem",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__str__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_all_types_match@UnionNode": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "faustypes.models.IsInstanceArgT",
                "tuple",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "faustypes.models.IsInstanceArgT",
                "tuple",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "union_args",
            "type": [
                "faustypes.models.IsInstanceArgT",
                "tuple",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "faustypes.models.IsInstanceArgT",
                "tuple",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "local",
            "name": "union_args",
            "type": [
                "faustypes.models.IsInstanceArgT",
                "tuple",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "faustypes.models.IsInstanceArgT",
                "tuple",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "_all_types_match",
            "type": [
                "bool"
            ]
        }
    ],
    "_build_dict_expression@DictNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "typing.Container",
                "T",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "key_type",
            "type": [
                "typing.Type",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "value_type",
            "type": [
                "typing.Type",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "typing.Container",
                "T",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "key_var",
            "type": [
                "str",
                "tuple[tuple[typing.Union[typing.Literal,typing.Any]]]",
                "dict[typing.Type, str]"
            ]
        },
        {
            "category": "local",
            "name": "value_var",
            "type": [
                "OSError",
                "str",
                "types.CodeType"
            ]
        },
        {
            "category": "local",
            "name": "key_type",
            "type": [
                "typing.Type",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "key_handler",
            "type": [
                "list[str]",
                "set[int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "value_type",
            "type": [
                "typing.Type",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "value_handler",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_build_dict_expression",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_build_expression@TypeExpression": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "mypy.types.Instance",
                "mypy.types.Type"
            ]
        },
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "mypy.types.Type",
                "mypy.types.Type.VarType",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "mypy.types.Type",
                "mypy.types.Type.VarType",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "type_info",
            "type": [
                "dict",
                "enum.Enum",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "mypy.types.Instance",
                "mypy.types.Type"
            ]
        },
        {
            "category": "return",
            "name": "_build_expression",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_build_list_expression@ListNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "mypy.types.Type",
                "mypy.types.Instance"
            ]
        },
        {
            "category": "arg",
            "name": "item_type",
            "type": [
                "mypy.types.Instance",
                "list[mypy.types.Type]",
                "mypy.types.Type"
            ]
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "mypy.types.Type",
                "mypy.types.Instance"
            ]
        },
        {
            "category": "local",
            "name": "item_var",
            "type": [
                "dict[str, str]",
                "str",
                "dict[str, tuple[typing.Union[typing.Any,str]]]"
            ]
        },
        {
            "category": "local",
            "name": "item_type",
            "type": [
                "mypy.types.Instance",
                "list[mypy.types.Type]",
                "mypy.types.Type"
            ]
        },
        {
            "category": "local",
            "name": "handler",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "_build_list_expression",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_build_set_expression@SetNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "mypy.types.Type.VarType",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "member_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "mypy.types.Type.VarType",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "member_var",
            "type": [
                "dict[str, typing.Any]",
                "typing.Type",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "member_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "handler",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_build_set_expression",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_build_tuple_literal@TupleNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "tuple",
                "set",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "member_args",
            "type": [
                "tuple",
                "set",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "member_args",
            "type": [
                "tuple",
                "set",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "tuple",
                "set",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_build_tuple_literal",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_build_untyped_tuple@TupleNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "set",
                "list[typing.Union[None,mypy.types.Type,typing.Any]]",
                "types.ExistentialTyVar"
            ]
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "set",
                "list[typing.Union[None,mypy.types.Type,typing.Any]]",
                "types.ExistentialTyVar"
            ]
        },
        {
            "category": "return",
            "name": "_build_untyped_tuple",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_build_vararg_tuple@TupleNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "mypy.types.Type.VarType",
                "mypy.types.Type"
            ]
        },
        {
            "category": "arg",
            "name": "member_type",
            "type": [
                "typing.Type",
                "mypy.types.CallableType",
                "typing.Callable[mypy.types.Type, mypy.types.Type]"
            ]
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "mypy.types.Type.VarType",
                "mypy.types.Type"
            ]
        },
        {
            "category": "local",
            "name": "item_var",
            "type": [
                "dict[str, str]",
                "str",
                "dict[str, tuple[typing.Union[typing.Any,str]]]"
            ]
        },
        {
            "category": "local",
            "name": "member_type",
            "type": [
                "typing.Type",
                "mypy.types.CallableType",
                "typing.Callable[mypy.types.Type, mypy.types.Type]"
            ]
        },
        {
            "category": "local",
            "name": "handler",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "_build_vararg_tuple",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_ensure_model_name@ModelNode": [
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "typing.Type",
                "typing.Callable[str, mypy.types.Instance]"
            ]
        },
        {
            "category": "local",
            "name": "model_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "model_global_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_ensure_model_name",
            "type": []
        }
    ],
    "_filter_NoneType@UnionNode": [
        {
            "category": "arg",
            "name": "union_args",
            "type": [
                "tuple",
                "mypy.types.Type"
            ]
        },
        {
            "category": "local",
            "name": "union_args",
            "type": [
                "tuple",
                "mypy.types.Type"
            ]
        },
        {
            "category": "return",
            "name": "_filter_NoneType",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "_is_NoneType@global": [
        {
            "category": "arg",
            "name": "t",
            "type": [
                "mypy.types.Type",
                "None",
                "mypy.types.CallableType"
            ]
        },
        {
            "category": "local",
            "name": "t",
            "type": [
                "mypy.types.Type",
                "None",
                "mypy.types.CallableType"
            ]
        },
        {
            "category": "return",
            "name": "_is_NoneType",
            "type": [
                "bool"
            ]
        }
    ],
    "_is_model@ModelNode": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Type",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "typing.Type",
                "faustypes.models.IsInstanceArgT",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "typing.Type",
                "faustypes.models.IsInstanceArgT",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_is_model",
            "type": [
                "bool"
            ]
        }
    ],
    "_issubclass@Node": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Type",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "typing.Type",
                "faustypes.models.IsInstanceArgT"
            ]
        },
        {
            "category": "arg",
            "name": "types",
            "type": [
                "typing.Type",
                "faustypes.models.IsInstanceArgT"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "typing.Type",
                "faustypes.models.IsInstanceArgT"
            ]
        },
        {
            "category": "local",
            "name": "types",
            "type": [
                "typing.Type",
                "faustypes.models.IsInstanceArgT"
            ]
        },
        {
            "category": "return",
            "name": "_issubclass",
            "type": [
                "bool"
            ]
        }
    ],
    "_maybe_coerce@DatetimeNode": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "None",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "None",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_coerce",
            "type": [
                "str",
                "None",
                "bool",
                "datetime.datetime",
                "dict"
            ]
        }
    ],
    "_maybe_coerce@DecimalNode": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "None",
                "datetime.datetime.datetime",
                "bool",
                "utils.CWLOutputType"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "None",
                "datetime.datetime.datetime",
                "bool",
                "utils.CWLOutputType"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_coerce",
            "type": [
                "str",
                "decimal.Decimal",
                "None",
                "datetime.datetime.datetime",
                "bool",
                "utils.CWLOutputType"
            ]
        }
    ],
    "_maybe_coerce@UserNode": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "T",
                "str",
                "None",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "T",
                "str",
                "None",
                "typing.Any",
                "JSON_TYPES"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_coerce",
            "type": [
                "None",
                "str",
                "T",
                "typing.Any",
                "JSON_TYPES"
            ]
        }
    ],
    "_maybe_unroll_union@UnionNode": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "mypy.types.Instance"
            ]
        },
        {
            "category": "arg",
            "name": "info",
            "type": []
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "mypy.types.Instance"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_unroll_union",
            "type": []
        },
        {
            "category": "local",
            "name": "LITERAL_TYPES",
            "type": [
                "typing.Type",
                "tuple",
                "tuple[typing.Type]"
            ]
        }
    ],
    "_register@Node": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type",
                "aule.codegen.usClassDeclaration"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type",
                "aule.codegen.usClassDeclaration"
            ]
        },
        {
            "category": "return",
            "name": "_register",
            "type": [
                "None"
            ]
        }
    ],
    "_register@RootNode": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_register",
            "type": [
                "None"
            ]
        }
    ],
    "add_closure@RootNode": [
        {
            "category": "arg",
            "name": "local_name",
            "type": [
                "str",
                "dict[str, 'LabwareDefinition']",
                "cmk.utils.type_defs.SectionName",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "global_name",
            "type": [
                "str",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "global_name",
            "type": [
                "str",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "local_name",
            "type": [
                "str",
                "dict[str, 'LabwareDefinition']",
                "cmk.utils.type_defs.SectionName",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "add_closure",
            "type": [
                "None"
            ]
        }
    ],
    "as_comprehension@TypeExpression": [
        {
            "category": "arg",
            "name": "argument_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "argument_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "as_comprehension",
            "type": []
        }
    ],
    "as_function@TypeExpression": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "argument_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "stacklevel",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "locals",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "str",
                "typing.Any"
            ]
        },
        {
            "category": "arg",
            "name": "globals",
            "type": [
                "None",
                "types.Resolver",
                "\"ValidatorTypes\"",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "argument_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "sourcecode",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "locals",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "str",
                "typing.Any",
                "dict",
                "list[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "globals",
            "type": [
                "None",
                "types.Resolver",
                "\"ValidatorTypes\"",
                "typing.Any",
                "dict[str, typing.Any]",
                "dict",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "stacklevel",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "frame",
            "type": [
                "types.FrameType",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "new_globals",
            "type": [
                "dict",
                "dict[str, typing.Union[typing.Any,int]]"
            ]
        },
        {
            "category": "local",
            "name": "DEBUG",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "as_function",
            "type": []
        }
    ],
    "as_string@TypeExpression": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "argument_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "argument_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "expression",
            "type": [
                "str",
                "dict[str, tuple[str]]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "as_string",
            "type": []
        }
    ],
    "build@AnyNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "int",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "int",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "build@DatetimeNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "int",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "int",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "build@DecimalNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "int",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "int",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "build@DictNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "build@ListNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "build@LiteralNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "int",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "int",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "build@ModelNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "build@NamedTupleNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "fields",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "build@Node": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "int",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "None"
            ]
        }
    ],
    "build@SetNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "build@TupleNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "arg",
            "type": [
                "Ellipsis"
            ]
        }
    ],
    "build@TypeExpression": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": []
        }
    ],
    "build@UnionNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "int",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "None"
            ]
        }
    ],
    "build@UserNode": [
        {
            "category": "arg",
            "name": "var",
            "type": [
                "str",
                "typing.Type",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "str",
                "typing.Type",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "return",
            "name": "build",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "clone@Variable": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "None",
                "str",
                "typing.Any",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "getitem",
            "type": [
                "typing.Final",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "MISSING",
            "type": [
                "typing.Final",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "clone",
            "type": [
                "str"
            ]
        }
    ],
    "create_if_compatible@AnyNode": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "root",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "create_if_compatible",
            "type": [
                "None"
            ]
        }
    ],
    "create_if_compatible@ModelNode": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "root",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "create_if_compatible",
            "type": [
                "str",
                "None",
                "typing.Type"
            ]
        }
    ],
    "create_if_compatible@NamedTupleNode": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "root",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "create_if_compatible",
            "type": [
                "str",
                "None",
                "typing.Type"
            ]
        }
    ],
    "create_if_compatible@Node": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "root",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "target_type",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "create_if_compatible",
            "type": [
                "str",
                "None",
                "typing.Type"
            ]
        }
    ],
    "create_if_compatible@UnionNode": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "root",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "create_if_compatible",
            "type": [
                "str",
                "None",
                "typing.Type"
            ]
        }
    ],
    "find_compatible_node@RootNode": [
        {
            "category": "arg",
            "name": "info",
            "type": []
        },
        {
            "category": "return",
            "name": "find_compatible_node",
            "type": [
                "UserNode",
                "dict",
                "typing.ChainMap",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "dict",
                "typing.ChainMap",
                "None"
            ]
        }
    ],
    "find_compatible_node_or_default@RootNode": [
        {
            "category": "arg",
            "name": "info",
            "type": []
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "None",
                "list",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "find_compatible_node_or_default",
            "type": [
                "list",
                "str",
                "int"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "Final",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "__all__",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "T",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "MISSING",
            "type": [
                "typing.Final",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "TUPLE_NAME_COUNTER",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "JSON_TYPES",
            "type": [
                "tuple[typing.Union[str,list,dict,int,float]]"
            ]
        },
        {
            "category": "local",
            "name": "LITERAL_TYPES",
            "type": [
                "tuple[typing.Union[str,bytes,float,int]]",
                "typing.Type",
                "tuple",
                "tuple[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "DEBUG",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "QUALNAME_TRANSLATION_TABLE",
            "type": [
                "dict[typing.Text, typing.Text]",
                "dict[str, str]",
                "dict",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "_getframe",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "USER_TYPES",
            "type": [
                "set",
                "dict[str, str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "GENERIC_TYPES",
            "type": [
                "set",
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "NONFIELD_TYPES",
            "type": [
                "set",
                "dict[str, str]",
                "list[str]",
                "str"
            ]
        }
    ],
    "global_name@NamedTupleNode": [
        {
            "category": "return",
            "name": "global_name",
            "type": []
        }
    ],
    "has_custom_types@TypeExpression": [
        {
            "category": "local",
            "name": "USER_TYPES",
            "type": [
                "dict[str, str]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "has_custom_types",
            "type": [
                "bool"
            ]
        }
    ],
    "has_generic_types@TypeExpression": [
        {
            "category": "local",
            "name": "GENERIC_TYPES",
            "type": [
                "dict",
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "has_generic_types",
            "type": [
                "bool"
            ]
        }
    ],
    "has_models@TypeExpression": [
        {
            "category": "return",
            "name": "has_models",
            "type": [
                "bool"
            ]
        }
    ],
    "has_nonfield_types@TypeExpression": [
        {
            "category": "local",
            "name": "NONFIELD_TYPES",
            "type": [
                "dict[str, str]",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "has_nonfield_types",
            "type": [
                "bool"
            ]
        }
    ],
    "inspect_type@Node": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "mypy.types.Type",
                "faustypes.models.IsInstanceArgT"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "mypy.types.Type",
                "faustypes.models.IsInstanceArgT"
            ]
        },
        {
            "category": "local",
            "name": "optional",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[str]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "union_args",
            "type": [
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "found_none",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "arg",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "inspect_type",
            "type": []
        }
    ],
    "local_name@NamedTupleNode": [
        {
            "category": "return",
            "name": "local_name",
            "type": []
        }
    ],
    "new_default_node@RootNode": [
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "typing.Type",
                "mypy.types.Instance",
                "mypy.types.CallableType",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "DEFAULT_NODE",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "typing.Type",
                "mypy.types.Instance",
                "mypy.types.CallableType",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "new_default_node",
            "type": []
        }
    ],
    "next_identifier@Variable": [
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "next_ord",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "next_identifier",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        }
    ],
    "next_namedtuple_name@NamedTupleNode": [
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "mypy.types.Type",
                "mypy.types.TupleType"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "mypy.types.Type",
                "mypy.types.TupleType"
            ]
        },
        {
            "category": "return",
            "name": "next_namedtuple_name",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "qualname_to_identifier@global": [
        {
            "category": "arg",
            "name": "s",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "QUALNAME_TRANSLATION_TABLE",
            "type": [
                "dict[str, str]",
                "dict",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "qualname_to_identifier",
            "type": [
                "str",
                "list[str]"
            ]
        }
    ],
    "random_identifier@Node": [
        {
            "category": "arg",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "random_identifier",
            "type": [
                "str"
            ]
        }
    ]
}