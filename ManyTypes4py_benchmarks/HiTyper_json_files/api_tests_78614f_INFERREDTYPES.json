{
    "admin_id@global": [
        {
            "category": "local",
            "name": "admin",
            "type": [
                "tests.test_documenUser",
                "tests.test_documenUserWithOptionalTypes",
                "app.models.User"
            ]
        },
        {
            "category": "return",
            "name": "admin_id",
            "type": []
        }
    ],
    "cache@global": [
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "admin_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "admin_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "INITIAL_FORM_DATA",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]",
                "dict[int, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "dict[typing.Text, typing.Union[str,dict[str, typing.Any],dict[str, typing.Type],dict[int, dict[str, typing.Any]]]]"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "cache",
            "type": [
                "None"
            ]
        }
    ],
    "chart_id@global": [
        {
            "category": "arg",
            "name": "load_world_bank_dashboard_with_slices",
            "type": [
                "bool",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "chart",
            "type": [
                "list",
                "app.models.dto.CoordinateDTO",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "chart_id",
            "type": []
        }
    ],
    "datasource@global": [
        {
            "category": "local",
            "name": "dataset",
            "type": [
                "str",
                "crux.models.dataseDataset",
                "supersemodels.slice.Slice"
            ]
        },
        {
            "category": "return",
            "name": "datasource",
            "type": [
                "str",
                "crux.models.dataseDataset",
                "supersemodels.slice.Slice"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "typing.Text",
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "INITIAL_FORM_DATA",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]",
                "dict[int, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "UPDATED_FORM_DATA",
            "type": [
                "dict",
                "dict[str, dict]",
                "dict[str, str]"
            ]
        }
    ],
    "test_delete@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "User"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "User"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_delete",
            "type": [
                "None"
            ]
        }
    ],
    "test_delete_access_denied@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "login_as",
            "type": []
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_delete_access_denied",
            "type": [
                "None"
            ]
        }
    ],
    "test_delete_not_owner@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "str",
                "None",
                "models.user.User"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "typing.Callable[..., None]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "sqlalchemy.orm.session.Session",
                "app.models.farm.Farm"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "sqlalchemy.orm.session.Session",
                "app.models.farm.Farm"
            ]
        },
        {
            "category": "arg",
            "name": "admin_id",
            "type": [
                "int",
                "sqlalchemy.orm.Session",
                "core.Pipeline"
            ]
        },
        {
            "category": "local",
            "name": "another_key",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "admin_id",
            "type": [
                "int",
                "sqlalchemy.orm.Session",
                "core.Pipeline"
            ]
        },
        {
            "category": "local",
            "name": "another_owner",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "sqlalchemy.orm.session.Session",
                "app.models.farm.Farm"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "sqlalchemy.orm.session.Session",
                "app.models.farm.Farm"
            ]
        },
        {
            "category": "local",
            "name": "INITIAL_FORM_DATA",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]",
                "dict[int, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "dict[typing.Text, typing.Union[int,DatasourceType,sqlalchemy.orm.session.Session,app.models.farm.Farm,dict[str, typing.Any],dict[str, typing.Type],dict[int, dict[str, typing.Any]]]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "str",
                "None",
                "models.user.User"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_delete_not_owner",
            "type": [
                "None"
            ]
        }
    ],
    "test_get@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[str, dict[str, typing.Any]]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_access_denied@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "login_as",
            "type": []
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_get_access_denied",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_dataset_access_denied@global": [
        {
            "category": "arg",
            "name": "mock_can_access_datasource",
            "type": []
        },
        {
            "category": "arg",
            "name": "test_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": []
        },
        {
            "category": "local",
            "name": "mock_can_access_datasource_",
            "type": [
                "DatasetAccessDeniedError"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_get_dataset_access_denied",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_key_not_found@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_get_key_not_found",
            "type": [
                "None"
            ]
        }
    ],
    "test_post@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "core.models.Recipe"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "str",
                "typing.Callable[..., None]",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "local",
            "name": "INITIAL_FORM_DATA",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]",
                "dict[int, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[recidiviz.persistence.database.session.Session,list[recidiviz.persistence.database.schema.state.schema.StatePerson],sqlalchemy.Table,dict[str, typing.Any],dict[str, typing.Type],dict[int, dict[str, typing.Any]]]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "core.models.Recipe"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "requests.models.Response",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.infra.assert_mixin.DSSAssertResponse"
            ]
        },
        {
            "category": "return",
            "name": "test_post",
            "type": [
                "None"
            ]
        }
    ],
    "test_post_access_denied@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "login_as",
            "type": [
                "str",
                "list[tuple[typing.Union[int,str]]]",
                "typing.Callable[..., None]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session"
            ]
        },
        {
            "category": "local",
            "name": "INITIAL_FORM_DATA",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]",
                "dict[int, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[str,sqlalchemy.orm.session.Session,dict[str, typing.Any],dict[str, typing.Type],dict[int, dict[str, typing.Any]]]]"
            ]
        },
        {
            "category": "return",
            "name": "test_post_access_denied",
            "type": [
                "None"
            ]
        }
    ],
    "test_post_bad_request_non_json_string@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "requests.Session",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "list[int]",
                "list[tuple[typing.Union[int,str]]]",
                "typing.Callable[..., None]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[str,sqlalchemy.orm.Session]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "requests.Session",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "requests.models.Response",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.infra.assert_mixin.DSSAssertResponse"
            ]
        },
        {
            "category": "return",
            "name": "test_post_bad_request_non_json_string",
            "type": [
                "None"
            ]
        }
    ],
    "test_post_bad_request_non_string@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "requests.Session"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "typing.Callable[..., None]",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[str,sqlalchemy.orm.Session,int]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "requests.Session"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "requests.models.Response",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.infra.assert_mixin.DSSAssertResponse"
            ]
        },
        {
            "category": "return",
            "name": "test_post_bad_request_non_string",
            "type": [
                "None"
            ]
        }
    ],
    "test_post_different_key_for_different_context@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "requests.Session",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "list[int]",
                "sqlalchemy.orm.session.Session.Transaction",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "sqlalchemy.orm.Session",
                "fal.models.Season",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "sqlalchemy.orm.Session",
                "models.Dashboard",
                "fal.models.Season"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "sqlalchemy.orm.Session",
                "models.Dashboard",
                "fal.models.Season"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "sqlalchemy.orm.Session",
                "fal.models.Season",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "local",
            "name": "UPDATED_FORM_DATA",
            "type": [
                "dict",
                "dict[str, dict]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[sqlalchemy.orm.Session,fal.models.Season,sqlalchemy.Table,dict,dict[str, dict],dict[str, str]]]",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "requests.Session",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "requests.models.Response"
            ]
        },
        {
            "category": "return",
            "name": "test_post_different_key_for_different_context",
            "type": [
                "None"
            ]
        }
    ],
    "test_post_different_key_for_different_tab_id@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "str",
                "requests.Session",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "int",
                "list[int]",
                "list[tuple[typing.Union[int,str]]]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "fal.models.Season",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "fal.models.Season",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "fal.models.Season",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "fal.models.Season",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[recidiviz.persistence.database.session.Session,fal.models.Season,list[recidiviz.persistence.database.schema.state.schema.StatePerson]]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "str",
                "requests.Session",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "requests.models.Response"
            ]
        },
        {
            "category": "return",
            "name": "test_post_different_key_for_different_tab_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_post_different_key_for_no_tab_id@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "requests.Session",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "list[tuple[typing.Union[int,str]]]",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "local",
            "name": "INITIAL_FORM_DATA",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Type]",
                "dict[int, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[recidiviz.persistence.database.session.Session,list[recidiviz.persistence.database.schema.state.schema.StatePerson],fal.models.Season,dict[str, typing.Any],dict[str, typing.Type],dict[int, dict[str, typing.Any]]]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "requests.Session",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "requests.models.Response"
            ]
        },
        {
            "category": "return",
            "name": "test_post_different_key_for_no_tab_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_post_same_key_for_same_context@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "requests.Session"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "str",
                "typing.Callable[..., None]",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "local",
            "name": "UPDATED_FORM_DATA",
            "type": [
                "dict",
                "dict[str, dict]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[recidiviz.persistence.database.session.Session,list[recidiviz.persistence.database.schema.state.schema.StatePerson],sqlalchemy.Table,dict,dict[str, dict],dict[str, str]]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "requests.Session"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "requests.models.Response"
            ]
        },
        {
            "category": "return",
            "name": "test_post_same_key_for_same_context",
            "type": [
                "None"
            ]
        }
    ],
    "test_post_same_key_for_same_tab_id@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "requests.Session",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "int",
                "list[tuple[typing.Union[int,str]]]",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "models.Course"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "models.Course"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "models.Course"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "models.Course"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[recidiviz.persistence.database.session.Session,list[recidiviz.persistence.database.schema.state.schema.StatePerson],models.Course]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "requests.Session",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "requests.models.Response"
            ]
        },
        {
            "category": "return",
            "name": "test_post_same_key_for_same_tab_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_put@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "str",
                "list[int]",
                "list[tuple[typing.Union[int,str]]]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "sqlalchemy.orm.Session",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "sqlalchemy.orm.Session",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "sqlalchemy.orm.Session",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "sqlalchemy.orm.Session",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "UPDATED_FORM_DATA",
            "type": [
                "dict",
                "dict[str, dict]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[sqlalchemy.orm.Session,str,dict,dict[str, dict],dict[str, str]]]"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_put",
            "type": [
                "None"
            ]
        }
    ],
    "test_put_access_denied@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "login_as",
            "type": [
                "str",
                "list[tuple[typing.Union[int,str]]]",
                "typing.Callable[..., None]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "local",
            "name": "UPDATED_FORM_DATA",
            "type": [
                "dict",
                "dict[str, dict]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[str,sqlalchemy.orm.session.Session,sqlalchemy.Table,dict,dict[str, dict],dict[str, str]]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "requests.models.Response",
                "tests.infra.assert_mixin.DSSAssertResponse"
            ]
        },
        {
            "category": "return",
            "name": "test_put_access_denied",
            "type": [
                "None"
            ]
        }
    ],
    "test_put_bad_request@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "typing.Callable[..., None]",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[str,sqlalchemy.orm.Session,int]]"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_put_bad_request",
            "type": [
                "None"
            ]
        }
    ],
    "test_put_bad_request_non_json_string@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "list[tuple[typing.Union[int,str]]]",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[str,sqlalchemy.orm.Session]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "requests.models.Response",
                "tests.infra.assert_mixin.DSSAssertResponse"
            ]
        },
        {
            "category": "return",
            "name": "test_put_bad_request_non_json_string",
            "type": [
                "None"
            ]
        }
    ],
    "test_put_bad_request_non_string@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "str",
                "list[tuple[typing.Union[int,str]]]",
                "typing.Callable[..., None]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.Session"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[str,sqlalchemy.orm.Session,int]]"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_put_bad_request_non_string",
            "type": [
                "None"
            ]
        }
    ],
    "test_put_different_key_for_different_tab_id@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "requests.Session"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "int",
                "list[int]",
                "list[tuple[typing.Union[int,str]]]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "local",
            "name": "UPDATED_FORM_DATA",
            "type": [
                "dict",
                "dict[str, dict]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[recidiviz.persistence.database.session.Session,list[recidiviz.persistence.database.schema.state.schema.StatePerson],fal.models.Season,dict,dict[str, dict],dict[str, str]]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "requests.Session"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.infra.assert_mixin.DSSAssertResponse",
                "requests.models.Response"
            ]
        },
        {
            "category": "return",
            "name": "test_put_different_key_for_different_tab_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_put_different_key_for_no_tab_id@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "requests.Session",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "list[tuple[typing.Union[int,str]]]",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]",
                "fal.models.Season"
            ]
        },
        {
            "category": "local",
            "name": "UPDATED_FORM_DATA",
            "type": [
                "dict",
                "dict[str, dict]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[recidiviz.persistence.database.session.Session,list[recidiviz.persistence.database.schema.state.schema.StatePerson],fal.models.Season,dict,dict[str, dict],dict[str, str]]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "requests.Session",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.infra.assert_mixin.DSSAssertResponse",
                "requests.models.Response"
            ]
        },
        {
            "category": "return",
            "name": "test_put_different_key_for_no_tab_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_put_not_owner@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "login_as",
            "type": [
                "str",
                "list[tuple[typing.Union[int,str]]]",
                "typing.Callable[..., None]"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session",
                "sqlalchemy.engine.Engine"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session",
                "sqlalchemy.engine.Engine"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session",
                "sqlalchemy.engine.Engine"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "str",
                "sqlalchemy.orm.session.Session",
                "sqlalchemy.engine.Engine"
            ]
        },
        {
            "category": "local",
            "name": "UPDATED_FORM_DATA",
            "type": [
                "dict",
                "dict[str, dict]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[str,sqlalchemy.orm.session.Session,sqlalchemy.engine.Engine,dict,dict[str, dict],dict[str, str]]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "requests.models.Response",
                "tests.infra.assert_mixin.DSSAssertResponse"
            ]
        },
        {
            "category": "return",
            "name": "test_put_not_owner",
            "type": [
                "None"
            ]
        }
    ],
    "test_put_same_key_for_same_tab_id@global": [
        {
            "category": "arg",
            "name": "test_client",
            "type": [
                "requests.Session",
                "tests.clienMDMClient",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "login_as_admin",
            "type": [
                "list[tuple[typing.Union[int,str]]]",
                "list[int]",
                "grouper.models.service_accounServiceAccount"
            ]
        },
        {
            "category": "arg",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]"
            ]
        },
        {
            "category": "arg",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]"
            ]
        },
        {
            "category": "local",
            "name": "datasource",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]"
            ]
        },
        {
            "category": "local",
            "name": "chart_id",
            "type": [
                "recidiviz.persistence.database.session.Session",
                "list[recidiviz.persistence.database.schema.state.schema.StatePerson]"
            ]
        },
        {
            "category": "local",
            "name": "UPDATED_FORM_DATA",
            "type": [
                "dict",
                "dict[str, dict]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[recidiviz.persistence.database.session.Session,list[recidiviz.persistence.database.schema.state.schema.StatePerson],dict,dict[str, dict],dict[str, str]]]"
            ]
        },
        {
            "category": "local",
            "name": "test_client",
            "type": [
                "requests.Session",
                "tests.clienMDMClient",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "KEY",
            "type": [
                "str",
                "set[str]",
                "dict",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.infra.assert_mixin.DSSAssertResponse",
                "requests.models.Response"
            ]
        },
        {
            "category": "return",
            "name": "test_put_same_key_for_same_tab_id",
            "type": [
                "None"
            ]
        }
    ]
}