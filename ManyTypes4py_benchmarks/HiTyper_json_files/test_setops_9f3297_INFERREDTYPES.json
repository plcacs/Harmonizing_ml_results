{
    "global@global": [],
    "test_difference@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": []
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "int",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "int",
                "set",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "vals",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "chunklet_",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_difference",
            "type": [
                "None"
            ]
        }
    ],
    "test_difference_base@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": [
                "slice"
            ]
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "set[int]",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "second",
            "type": [
                "list",
                "int",
                "dict[int, float]"
            ]
        },
        {
            "category": "local",
            "name": "answer",
            "type": [
                "list",
                "str",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "set[int]",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[tuple[int]]",
                "list[list[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "klass",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "cases",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_difference_base",
            "type": [
                "None"
            ]
        }
    ],
    "test_difference_keep_ea_dtypes@global": [
        {
            "category": "arg",
            "name": "any_numeric_ea_dtype",
            "type": [
                "numpy.dtype",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "val",
            "type": [
                "numpy.ndarray",
                "bool",
                "numpy.dtype",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "any_numeric_ea_dtype",
            "type": [
                "numpy.dtype",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "numpy.ndarray",
                "bool",
                "numpy.dtype",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_difference_keep_ea_dtypes",
            "type": [
                "None"
            ]
        }
    ],
    "test_difference_sort_incomparable@global": [
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_difference_sort_incomparable",
            "type": [
                "None"
            ]
        }
    ],
    "test_difference_sort_incomparable_true@global": [
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_difference_sort_incomparable_true",
            "type": [
                "None"
            ]
        }
    ],
    "test_difference_sort_special@global": [
        {
            "category": "return",
            "name": "test_difference_sort_special",
            "type": [
                "None"
            ]
        }
    ],
    "test_difference_sort_special_true@global": [
        {
            "category": "return",
            "name": "test_difference_sort_special_true",
            "type": [
                "None"
            ]
        }
    ],
    "test_empty@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_empty",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersect_equal_sort@global": [
        {
            "category": "return",
            "name": "test_intersect_equal_sort",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersect_equal_sort_true@global": [
        {
            "category": "return",
            "name": "test_intersect_equal_sort_true",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersect_with_duplicates@global": [
        {
            "category": "arg",
            "name": "tuples",
            "type": [
                "typing.Callable[str, object]"
            ]
        },
        {
            "category": "arg",
            "name": "exp_tuples",
            "type": [
                "list[str]",
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "tuples",
            "type": [
                "typing.Callable[str, object]"
            ]
        },
        {
            "category": "local",
            "name": "exp_tuples",
            "type": [
                "list[str]",
                "int",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "test_intersect_with_duplicates",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersection@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": []
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "bool",
                "list[int]",
                "tuple[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "bool",
                "list[int]",
                "tuple[list[int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_intersection",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersection_base@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": []
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "bool",
                "set[int]",
                "frozenset"
            ]
        },
        {
            "category": "arg",
            "name": "klass",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "klass",
            "type": [
                "bool",
                "str",
                "MultiIndex"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "bool",
                "set[int]",
                "frozenset",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_intersection_base",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersection_different_names@global": [
        {
            "category": "return",
            "name": "test_intersection_different_names",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersection_equal_different_names@global": [
        {
            "category": "return",
            "name": "test_intersection_equal_different_names",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersection_keep_ea_dtypes@global": [
        {
            "category": "arg",
            "name": "val",
            "type": [
                "bool",
                "numpy.dtype",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "any_numeric_ea_dtype",
            "type": [
                "bool",
                "numpy.dtype",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "any_numeric_ea_dtype",
            "type": [
                "bool",
                "numpy.dtype",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "bool",
                "numpy.dtype",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_intersection_keep_ea_dtypes",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersection_lexsort_depth@global": [
        {
            "category": "arg",
            "name": "levels1",
            "type": [
                "str",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "levels2",
            "type": [
                "str",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "codes1",
            "type": [
                "str",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "codes2",
            "type": [
                "str",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "names",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "levels1",
            "type": [
                "str",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "codes1",
            "type": [
                "str",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mi1",
            "type": [
                "MultiIndex"
            ]
        },
        {
            "category": "local",
            "name": "levels2",
            "type": [
                "str",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "codes2",
            "type": [
                "str",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "mi2",
            "type": [
                "MultiIndex"
            ]
        },
        {
            "category": "local",
            "name": "mi_int",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_intersection_lexsort_depth",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersection_non_object@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": [
                "slice"
            ]
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "int",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "Index"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "int",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "MultiIndex"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_intersection_non_object",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersection_with_missing_values_on_both_sides@global": [
        {
            "category": "arg",
            "name": "nulls_fixture",
            "type": [
                "str",
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "nulls_fixture",
            "type": [
                "str",
                "typing.IO"
            ]
        },
        {
            "category": "return",
            "name": "test_intersection_with_missing_values_on_both_sides",
            "type": [
                "None"
            ]
        }
    ],
    "test_intersection_with_non_lex_sorted_categories@global": [
        {
            "category": "arg",
            "name": "a",
            "type": [
                "list[str]",
                "int",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "arg",
            "name": "b_ordered",
            "type": [
                "set[str]",
                "list[tuple[typing.Union[str,typing.Any]]]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "b_ordered",
            "type": [
                "set[str]",
                "list[tuple[typing.Union[str,typing.Any]]]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "a",
            "type": [
                "list[str]",
                "int",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "df1",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df2",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "res1",
            "type": [
                "dict",
                "list[list[api.src.opentrons.protocol_api.labware.Well]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "res2",
            "type": [
                "dict",
                "list[list[api.src.opentrons.protocol_api.labware.Well]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "res3",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "res4",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_intersection_with_non_lex_sorted_categories",
            "type": [
                "None"
            ]
        }
    ],
    "test_maybe_match_names@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "list[str]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "names",
            "type": [
                "numpy.ndarray",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "list[str]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "numpy.ndarray",
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_maybe_match_names",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiindex_symmetric_difference@global": [
        {
            "category": "local",
            "name": "idx2",
            "type": [
                "int",
                "dict",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_multiindex_symmetric_difference",
            "type": [
                "None"
            ]
        }
    ],
    "test_set_ops_error_cases@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": [
                "str",
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "case",
            "type": [
                "str",
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "str",
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_set_ops_error_cases",
            "type": [
                "None"
            ]
        }
    ],
    "test_setop_with_categorical@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": [
                "numpy.ndarray",
                "int",
                "typing.Sequence[numpy.ndarray]"
            ]
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "str",
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "list",
                "databricks.koalas.indexes.Index",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "numpy.ndarray",
                "int",
                "typing.Sequence[numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[tuple[typing.Any]]",
                "frozenset",
                "typing.Generator[typing.Optional[tuple[typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[str]",
                "list",
                "dict[str, typing.Union[int,None]]"
            ]
        },
        {
            "category": "return",
            "name": "test_setop_with_categorical",
            "type": [
                "None"
            ]
        }
    ],
    "test_setops_sort_validation@global": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_setops_sort_validation",
            "type": [
                "None"
            ]
        }
    ],
    "test_symmetric_difference@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": [
                "numpy.ma.MaskedArray"
            ]
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "bool",
                "frozenset"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "numpy.ma.MaskedArray"
            ]
        },
        {
            "category": "local",
            "name": "second",
            "type": [
                "list",
                "int",
                "range"
            ]
        },
        {
            "category": "local",
            "name": "answer",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "bool",
                "frozenset",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "klass",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "cases",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_symmetric_difference",
            "type": [
                "None"
            ]
        }
    ],
    "test_symmetric_difference_keeping_ea_dtype@global": [
        {
            "category": "arg",
            "name": "any_numeric_ea_dtype",
            "type": [
                "bool",
                "numpy.ndarray",
                "typing.Iterable[T]"
            ]
        },
        {
            "category": "arg",
            "name": "val",
            "type": [
                "numpy.dtype",
                "typing.Type",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "any_numeric_ea_dtype",
            "type": [
                "bool",
                "numpy.ndarray",
                "typing.Iterable[T]"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "numpy.dtype",
                "typing.Type",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_symmetric_difference_keeping_ea_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_union@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": []
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "int",
                "typing.Iterable[typing.Any]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "int",
                "typing.Iterable[typing.Any]",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_union",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_base@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": []
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "klass",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "klass",
            "type": [
                "int",
                "MultiIndex"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_union_base",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_duplicates@global": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "request",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list[float]",
                "property"
            ]
        },
        {
            "category": "return",
            "name": "test_union_duplicates",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_empty_self_different_names@global": [
        {
            "category": "return",
            "name": "test_union_empty_self_different_names",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_keep_dtype_precision@global": [
        {
            "category": "arg",
            "name": "any_real_numeric_dtype",
            "type": [
                "bool",
                "numpy.ndarray",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "any_real_numeric_dtype",
            "type": [
                "bool",
                "numpy.ndarray",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "arr1",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "arr2",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_union_keep_dtype_precision",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_keep_ea_dtype@global": [
        {
            "category": "arg",
            "name": "any_numeric_ea_dtype",
            "type": [
                "typing.Callable",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "val",
            "type": [
                "tuple[typing.Any]",
                "None",
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "tuple[typing.Any]",
                "None",
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "any_numeric_ea_dtype",
            "type": [
                "typing.Callable",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "arr1",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "arr2",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_union_keep_ea_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_keep_ea_dtype_with_na@global": [
        {
            "category": "arg",
            "name": "any_numeric_ea_dtype",
            "type": [
                "str",
                "typing.Any",
                "None",
                "typing.Iterable[typing.Any]",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "any_numeric_ea_dtype",
            "type": [
                "str",
                "typing.Any",
                "None",
                "typing.Iterable[typing.Any]",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "arr1",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "arr2",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_union_keep_ea_dtype_with_na",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_multiindex_empty_rangeindex@global": [
        {
            "category": "return",
            "name": "test_union_multiindex_empty_rangeindex",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_nan_got_duplicated@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_union_nan_got_duplicated",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_non_object_dtype_raises@global": [
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_union_non_object_dtype_raises",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_sort_other_empty@global": [
        {
            "category": "arg",
            "name": "slice_",
            "type": [
                "int",
                "numpy.ndarray",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "slice_",
            "type": [
                "int",
                "numpy.ndarray",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "test_union_sort_other_empty",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_sort_other_empty_sort@global": [
        {
            "category": "return",
            "name": "test_union_sort_other_empty_sort",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_sort_other_incomparable@global": [
        {
            "category": "return",
            "name": "test_union_sort_other_incomparable",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_sort_other_incomparable_sort@global": [
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_union_sort_other_incomparable_sort",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_with_duplicates_keep_ea_dtype@global": [
        {
            "category": "arg",
            "name": "dupe_val",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "any_numeric_ea_dtype",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "dupe_val",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "any_numeric_ea_dtype",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_union_with_duplicates_keep_ea_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_with_missing_values_on_both_sides@global": [
        {
            "category": "arg",
            "name": "nulls_fixture",
            "type": [
                "list[tuple[typing.Union[str,int]]]"
            ]
        },
        {
            "category": "local",
            "name": "nulls_fixture",
            "type": [
                "list[tuple[typing.Union[str,int]]]"
            ]
        },
        {
            "category": "return",
            "name": "test_union_with_missing_values_on_both_sides",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_with_na_when_constructing_dataframe@global": [
        {
            "category": "local",
            "name": "series1",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "series2",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_union_with_na_when_constructing_dataframe",
            "type": [
                "None"
            ]
        }
    ],
    "test_union_with_regular_index@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": []
        },
        {
            "category": "arg",
            "name": "using_infer_string",
            "type": [
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "Index"
            ]
        },
        {
            "category": "local",
            "name": "using_infer_string",
            "type": [
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_union_with_regular_index",
            "type": [
                "None"
            ]
        }
    ]
}