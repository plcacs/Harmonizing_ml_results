{
    "__init__@OAuthFixture": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client_no_auth",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.MagicMock",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "aioclient_mock",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "hass_client_no_auth",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "hass_client",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "aioclient_mock",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "async_app_creds_flow@OAuthFixture": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "str",
                "dict",
                "None",
                "aiohttp.ClientSession"
            ]
        },
        {
            "category": "arg",
            "name": "cloud_project_id",
            "type": []
        },
        {
            "category": "arg",
            "name": "project_id",
            "type": []
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "dict",
                "None",
                "aiohttp.ClientSession",
                "typing.Generator[typing.Optional[typing.Any]]",
                "typing.OrderedDict"
            ]
        },
        {
            "category": "return",
            "name": "async_app_creds_flow",
            "type": [
                "None"
            ]
        }
    ],
    "async_complete_pubsub_flow@OAuthFixture": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "selected_topic",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "selected_subscription",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "user_input",
            "type": [
                "None",
                "bool",
                "typing.Iterable[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "existing_errors",
            "type": [
                "None",
                "bool",
                "typing.Iterable[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "list[str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "selected_topic",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "selected_subscription",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "async_complete_pubsub_flow",
            "type": [
                "collections.abc.Awaitable",
                "bool",
                "str"
            ]
        }
    ],
    "async_configure@OAuthFixture": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "user_input",
            "type": [
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "user_input",
            "type": [
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "async_configure",
            "type": [
                "typing.Collection",
                "bool",
                "annotations.MappingStrStr"
            ]
        }
    ],
    "async_finish_setup@OAuthFixture": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "user_input",
            "type": [
                "None",
                "dict",
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "user_input",
            "type": [
                "None",
                "dict",
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "async_finish_setup",
            "type": [
                "dict[str, str]",
                "str",
                "typing.Type"
            ]
        }
    ],
    "async_mock_refresh@OAuthFixture": [
        {
            "category": "return",
            "name": "async_mock_refresh",
            "type": [
                "None"
            ]
        }
    ],
    "async_oauth_web_flow@OAuthFixture": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "dict[str, typing.Any]",
                "slowbro.core.user_message.UserMessage",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "project_id",
            "type": []
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict[str, typing.Any]",
                "slowbro.core.user_message.UserMessage",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "WEB_REDIRECT_URL",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "dict[str, typing.Union[None,typing.Any,int]]"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict",
                "asgard.http.clienHttpClient"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "aiohttp.web_response.Response"
            ]
        },
        {
            "category": "return",
            "name": "async_oauth_web_flow",
            "type": [
                "None"
            ]
        }
    ],
    "async_progress@OAuthFixture": [
        {
            "category": "local",
            "name": "flows",
            "type": [
                "list",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "async_progress",
            "type": [
                "str"
            ]
        }
    ],
    "async_reauth@OAuthFixture": [
        {
            "category": "arg",
            "name": "config_entry",
            "type": [
                "dict",
                "homeassistanconfig_entries.ConfigEntry",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config_entry",
            "type": [
                "dict",
                "homeassistanconfig_entries.ConfigEntry",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "async_reauth",
            "type": [
                "bool",
                "annotations.MappingStrStr",
                "aiohttp.web.Application"
            ]
        }
    ],
    "authorize_url@OAuthFixture": [
        {
            "category": "arg",
            "name": "state",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "redirect_url",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "client_id",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "project_id",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "project_id",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "client_id",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "redirect_url",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "authorize_url",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "create_state@OAuthFixture": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "redirect_url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "redirect_url",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "create_state",
            "type": []
        }
    ],
    "get_config_entry@OAuthFixture": [
        {
            "category": "local",
            "name": "entries",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "get_config_entry",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "WEB_REDIRECT_URL",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "APP_REDIRECT_URL",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "RAND_SUFFIX",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "FAKE_DHCP_DATA",
            "type": [
                "DhcpServiceInfo",
                "str",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "mock_cloud_project_id@global": [
        {
            "category": "return",
            "name": "mock_cloud_project_id",
            "type": []
        }
    ],
    "mock_create_subscription_status@global": [
        {
            "category": "return",
            "name": "mock_create_subscription_status",
            "type": []
        }
    ],
    "mock_create_topic_status@global": [
        {
            "category": "return",
            "name": "mock_create_topic_status",
            "type": []
        }
    ],
    "mock_list_subscriptions_status@global": [
        {
            "category": "return",
            "name": "mock_list_subscriptions_status",
            "type": []
        }
    ],
    "mock_list_topics_status@global": [
        {
            "category": "return",
            "name": "mock_list_topics_status",
            "type": []
        }
    ],
    "mock_pubsub_api_responses@global": [
        {
            "category": "arg",
            "name": "aioclient_mock",
            "type": [
                "dict",
                "boucanpy.core.api_token.ApiTokenRepo"
            ]
        },
        {
            "category": "arg",
            "name": "sdm_managed_topic",
            "type": [
                "str",
                "homeassistancomponents.withings.common.ConfigEntryWithingsApi"
            ]
        },
        {
            "category": "arg",
            "name": "user_managed_topics",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "subscriptions",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "device_access_project_id",
            "type": [
                "str",
                "homeassistancomponents.withings.common.ConfigEntryWithingsApi"
            ]
        },
        {
            "category": "arg",
            "name": "cloud_project_id",
            "type": [
                "str",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "create_topic_status",
            "type": [
                "str",
                "typing.Callable[..., None]",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "create_subscription_status",
            "type": [
                "str",
                "typing.Callable[..., None]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "list_topics_status",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "list_subscriptions_status",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "aioclient_mock",
            "type": [
                "dict",
                "boucanpy.core.api_token.ApiTokenRepo"
            ]
        },
        {
            "category": "local",
            "name": "device_access_project_id",
            "type": [
                "str",
                "homeassistancomponents.withings.common.ConfigEntryWithingsApi"
            ]
        },
        {
            "category": "local",
            "name": "sdm_managed_topic",
            "type": [
                "str",
                "homeassistancomponents.withings.common.ConfigEntryWithingsApi"
            ]
        },
        {
            "category": "local",
            "name": "cloud_project_id",
            "type": [
                "str",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "user_managed_topics",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "topic_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "list_topics_status",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "subscriptions",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "list_subscriptions_status",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "create_topic_status",
            "type": [
                "str",
                "typing.Callable[..., None]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "create_subscription_status",
            "type": [
                "str",
                "typing.Callable[..., None]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "mock_pubsub_api_responses",
            "type": [
                "None"
            ]
        }
    ],
    "mock_rand_topic_name_fixture@global": [
        {
            "category": "local",
            "name": "RAND_SUFFIX",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "mock_rand_topic_name_fixture",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "mock_request_setup@global": [
        {
            "category": "arg",
            "name": "auth",
            "type": [
                "typing.Callable[str,str, bool]",
                "django.http.HttpResponse",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "mock_request_setup",
            "type": [
                "None"
            ]
        }
    ],
    "mock_sdm_managed_topic@global": [
        {
            "category": "return",
            "name": "mock_sdm_managed_topic",
            "type": [
                "bool"
            ]
        }
    ],
    "mock_subscriptions@global": [
        {
            "category": "return",
            "name": "mock_subscriptions",
            "type": [
                "list"
            ]
        }
    ],
    "mock_user_managed_topics@global": [
        {
            "category": "return",
            "name": "mock_user_managed_topics",
            "type": [
                "list"
            ]
        }
    ],
    "nest_test_config@global": [
        {
            "category": "return",
            "name": "nest_test_config",
            "type": []
        }
    ],
    "oauth@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client_no_auth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "aioclient_mock",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "current_request_with_host",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass_client_no_auth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "aioclient_mock",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "oauth",
            "type": [
                "OAuthFixture"
            ]
        }
    ],
    "setup_mock_create_subscription_responses@global": [
        {
            "category": "arg",
            "name": "aioclient_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "cloud_project_id",
            "type": []
        },
        {
            "category": "arg",
            "name": "create_subscription_status",
            "type": []
        },
        {
            "category": "local",
            "name": "RAND_SUFFIX",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "setup_mock_create_subscription_responses",
            "type": [
                "None"
            ]
        }
    ],
    "setup_mock_create_topic_responses@global": [
        {
            "category": "arg",
            "name": "aioclient_mock",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.helpers.MockedFetcher"
            ]
        },
        {
            "category": "arg",
            "name": "cloud_project_id",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.helpers.MockedFetcher"
            ]
        },
        {
            "category": "arg",
            "name": "create_topic_status",
            "type": []
        },
        {
            "category": "local",
            "name": "aioclient_mock",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.helpers.MockedFetcher"
            ]
        },
        {
            "category": "local",
            "name": "cloud_project_id",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.helpers.MockedFetcher"
            ]
        },
        {
            "category": "local",
            "name": "RAND_SUFFIX",
            "type": [
                "str",
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "setup_mock_create_topic_responses",
            "type": [
                "None"
            ]
        }
    ],
    "setup_mock_list_subscriptions_responses@global": [
        {
            "category": "arg",
            "name": "aioclient_mock",
            "type": [
                "dict[str, int]",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "arg",
            "name": "cloud_project_id",
            "type": [
                "dict[str, int]",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "arg",
            "name": "subscriptions",
            "type": [
                "dict[str, int]",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "arg",
            "name": "list_subscriptions_status",
            "type": []
        },
        {
            "category": "local",
            "name": "aioclient_mock",
            "type": [
                "dict[str, int]",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "local",
            "name": "cloud_project_id",
            "type": [
                "dict[str, int]",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "local",
            "name": "subscriptions",
            "type": [
                "dict[str, int]",
                "str",
                "tests.clienMDMClient"
            ]
        },
        {
            "category": "return",
            "name": "setup_mock_list_subscriptions_responses",
            "type": [
                "None"
            ]
        }
    ],
    "test_app_credentials@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "list",
                "dict[str, typing.Union[bool,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_app_credentials",
            "type": [
                "None"
            ]
        }
    ],
    "test_config_entry_title_from_home@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "arg",
            "name": "auth",
            "type": [
                "homeassistanconfig_entries.ConfigEntry",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "dict[str, typing.Union[bool,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_config_entry_title_from_home",
            "type": [
                "None"
            ]
        }
    ],
    "test_config_entry_title_multiple_homes@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistanconfig_entries.ConfigEntry",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "arg",
            "name": "auth",
            "type": [
                "str",
                "homeassistanconfig_entries.ConfigEntry",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "dict[str, typing.Union[bool,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_config_entry_title_multiple_homes",
            "type": [
                "None"
            ]
        }
    ],
    "test_config_flow_pubsub_configuration_error@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "return",
            "name": "test_config_flow_pubsub_configuration_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_config_flow_pubsub_subscriber_error@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "return",
            "name": "test_config_flow_pubsub_subscriber_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_config_flow_restart@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "list",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_config_flow_restart",
            "type": [
                "None"
            ]
        }
    ],
    "test_config_flow_wrong_project_id@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict[str, None]"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "list",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_config_flow_wrong_project_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_topic_failed@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "aioclient_mock",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "cloud_project_id",
            "type": []
        },
        {
            "category": "arg",
            "name": "subscriptions",
            "type": []
        },
        {
            "category": "arg",
            "name": "auth",
            "type": [
                "mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "aioclient_mock",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "auth",
            "type": [
                "mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_create_topic_failed",
            "type": [
                "None"
            ]
        }
    ],
    "test_dhcp_discovery@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "nest_test_config",
            "type": [
                "homeassistanconfig_entries.ConfigEntry",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "FAKE_DHCP_DATA",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict[str, None]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_dhcp_discovery",
            "type": [
                "None"
            ]
        }
    ],
    "test_dhcp_discovery_with_creds@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "FAKE_DHCP_DATA",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "list",
                "dict[str, typing.Union[bool,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_dhcp_discovery_with_creds",
            "type": [
                "None"
            ]
        }
    ],
    "test_duplicate_config_entries@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.MagicMock",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "arg",
            "name": "setup_platform",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict[str, None]"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.MagicMock",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "return",
            "name": "test_duplicate_config_entries",
            "type": [
                "None"
            ]
        }
    ],
    "test_existing_topic_and_subscription@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_existing_topic_and_subscription",
            "type": [
                "None"
            ]
        }
    ],
    "test_list_subscriptions_failure@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_list_subscriptions_failure",
            "type": [
                "None"
            ]
        }
    ],
    "test_list_topics_failure@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "return",
            "name": "test_list_topics_failure",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_config_entries@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "setup_platform",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "entries",
            "type": [
                "list[tuple[typing.Any]]",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "dict[str, typing.Union[bool,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_multiple_config_entries",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_eligible_topics@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "list",
                "dict",
                "dict[str, list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_no_eligible_topics",
            "type": [
                "None"
            ]
        }
    ],
    "test_pubsub_subscriber_config_entry_reauth@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistanconfig_entries.ConfigEntry",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "arg",
            "name": "setup_platform",
            "type": [
                "homeassistanconfig_entries.ConfigEntry",
                "typing.Generator[typing.Optional[typing.Any]]",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "config_entry",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "config_entry",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "list",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pubsub_subscriber_config_entry_reauth",
            "type": [
                "None"
            ]
        }
    ],
    "test_pubsub_subscription_auth_failure@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "mock_subscriber",
            "type": [
                "tests.async_mock.MagicMock",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_pubsub_subscription_auth_failure",
            "type": [
                "None"
            ]
        }
    ],
    "test_reauth_multiple_config_entries@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.common.MockConfigEntry"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "arg",
            "name": "setup_platform",
            "type": [
                "homeassistanconfig_entries.ConfigEntry",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "config_entry",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "config_entry",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "old_entry",
            "type": [
                "MockConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.common.MockConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "entries",
            "type": [
                "list",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "orig_subscriber_id",
            "type": [
                "str",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "homeassistanconfig_entries.ConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_reauth_multiple_config_entries",
            "type": [
                "None"
            ]
        }
    ],
    "test_structure_missing_trait@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "auth",
            "type": [
                "homeassistancore.HomeAssistant",
                "typing.Callable[List,bool, None]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "dict[str, typing.Union[bool,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_structure_missing_trait",
            "type": [
                "None"
            ]
        }
    ],
    "test_title_failure_fallback@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.components.withings.common.ComponentFactory"
            ]
        },
        {
            "category": "arg",
            "name": "mock_subscriber",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.components.withings.common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "mock_subscriber_",
            "type": [
                "AuthException"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "dict[str, typing.Union[bool,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_title_failure_fallback",
            "type": [
                "None"
            ]
        }
    ],
    "test_token_error@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "status_code",
            "type": []
        },
        {
            "category": "arg",
            "name": "error_reason",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "oauth",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_token_error",
            "type": [
                "None"
            ]
        }
    ]
}