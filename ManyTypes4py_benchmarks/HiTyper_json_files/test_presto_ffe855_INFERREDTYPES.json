{
    "global@global": [],
    "test_adjust_engine_params_catalog_only@global": [
        {
            "category": "local",
            "name": "url",
            "type": [
                "caches.core.CacheURL",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_adjust_engine_params_catalog_only",
            "type": [
                "None"
            ]
        }
    ],
    "test_adjust_engine_params_fully_qualified@global": [
        {
            "category": "local",
            "name": "url",
            "type": [
                "caches.core.CacheURL",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_adjust_engine_params_fully_qualified",
            "type": [
                "None"
            ]
        }
    ],
    "test_convert_dttm@global": [
        {
            "category": "arg",
            "name": "target_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "dttm",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "expected_result",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "target_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expected_result",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "dttm",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_convert_dttm",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_column_spec@global": [
        {
            "category": "arg",
            "name": "native_type",
            "type": [
                "bool",
                "mypy.types.Type"
            ]
        },
        {
            "category": "arg",
            "name": "sqla_type",
            "type": [
                "bool",
                "mypy.types.Type"
            ]
        },
        {
            "category": "arg",
            "name": "attrs",
            "type": [
                "bool",
                "mypy.types.Type"
            ]
        },
        {
            "category": "arg",
            "name": "generic_type",
            "type": [
                "bool",
                "mypy.types.Type"
            ]
        },
        {
            "category": "arg",
            "name": "is_dttm",
            "type": [
                "bool",
                "mypy.types.Type"
            ]
        },
        {
            "category": "local",
            "name": "native_type",
            "type": [
                "bool",
                "mypy.types.Type"
            ]
        },
        {
            "category": "local",
            "name": "sqla_type",
            "type": [
                "bool",
                "mypy.types.Type"
            ]
        },
        {
            "category": "local",
            "name": "attrs",
            "type": [
                "bool",
                "mypy.types.Type"
            ]
        },
        {
            "category": "local",
            "name": "generic_type",
            "type": [
                "bool",
                "mypy.types.Type"
            ]
        },
        {
            "category": "local",
            "name": "is_dttm",
            "type": [
                "bool",
                "mypy.types.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_get_column_spec",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_default_catalog@global": [
        {
            "category": "local",
            "name": "database",
            "type": [
                "Database"
            ]
        },
        {
            "category": "return",
            "name": "test_get_default_catalog",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_schema_from_engine_params@global": [
        {
            "category": "return",
            "name": "test_get_schema_from_engine_params",
            "type": [
                "None"
            ]
        }
    ],
    "test_timegrain_expressions@global": [
        {
            "category": "arg",
            "name": "time_grain",
            "type": [
                "int",
                "None",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "arg",
            "name": "expected_result",
            "type": [
                "str",
                "float",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "time_grain",
            "type": [
                "int",
                "None",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "actual",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_timegrain_expressions",
            "type": [
                "None"
            ]
        }
    ],
    "test_where_latest_partition@global": [
        {
            "category": "arg",
            "name": "mock_latest_partition",
            "type": []
        },
        {
            "category": "arg",
            "name": "column_type",
            "type": [
                "tests.helpers.MockedFetcher",
                "bytes",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "column_value",
            "type": []
        },
        {
            "category": "arg",
            "name": "expected_value",
            "type": [
                "tests.helpers.MockedFetcher",
                "bytes",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_latest_partition_",
            "type": [
                "tuple[list[typing.Text]]"
            ]
        },
        {
            "category": "return",
            "name": "test_where_latest_partition",
            "type": [
                "None"
            ]
        }
    ]
}