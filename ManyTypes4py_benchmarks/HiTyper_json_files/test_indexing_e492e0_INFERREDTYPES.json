{
    "global@global": [
        {
            "category": "local",
            "name": "START",
            "type": [
                "str",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "END",
            "type": [
                "str",
                "datetime.datetime.datetime",
                "int"
            ]
        }
    ],
    "test_contains_nonunique@TestContains": [
        {
            "category": "arg",
            "name": "vals",
            "type": [
                "int",
                "typing.Iterable[typing.Any]",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "vals",
            "type": [
                "int",
                "typing.Iterable[typing.Any]",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "return",
            "name": "test_contains_nonunique",
            "type": [
                "None"
            ]
        }
    ],
    "test_dti_business_getitem@TestGetItem": [
        {
            "category": "arg",
            "name": "freq",
            "type": [
                "str",
                "pandas.DataFrame",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "START",
            "type": [
                "str",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "END",
            "type": [
                "str",
                "datetime.datetime.datetime",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "freq",
            "type": [
                "str",
                "pandas.DataFrame",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "exp",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "return",
            "name": "test_dti_business_getitem",
            "type": [
                "None"
            ]
        }
    ],
    "test_dti_business_getitem_matplotlib_hackaround@TestGetItem": [
        {
            "category": "arg",
            "name": "freq",
            "type": [
                "str",
                "int",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "START",
            "type": [
                "str",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "END",
            "type": [
                "str",
                "datetime.datetime.datetime",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "freq",
            "type": [
                "str",
                "int",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "rng",
            "type": [
                "str",
                "datetime.timedelta"
            ]
        },
        {
            "category": "return",
            "name": "test_dti_business_getitem_matplotlib_hackaround",
            "type": [
                "None"
            ]
        }
    ],
    "test_dti_contains_with_duplicates@TestContains": [
        {
            "category": "local",
            "name": "d",
            "type": [
                "datetime.datetime",
                "datetime.date.time.date"
            ]
        },
        {
            "category": "local",
            "name": "ix",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "return",
            "name": "test_dti_contains_with_duplicates",
            "type": [
                "None"
            ]
        }
    ],
    "test_dti_take_dont_lose_meta@TestTake": [
        {
            "category": "arg",
            "name": "tzstr",
            "type": []
        },
        {
            "category": "return",
            "name": "test_dti_take_dont_lose_meta",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_indexer@TestGetIndexer": [
        {
            "category": "local",
            "name": "tol_raw",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "tol_bad",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_get_indexer",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_indexer_date_objs@TestGetIndexer": [
        {
            "category": "local",
            "name": "rng",
            "type": [
                "list",
                "list[int]",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "slice",
                "dict",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_get_indexer_date_objs",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_indexer_mixed_dtypes@TestGetIndexer": [
        {
            "category": "arg",
            "name": "target",
            "type": [
                "typing.Callable",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "typing.Callable",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "test_get_indexer_mixed_dtypes",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_indexer_out_of_bounds_date@TestGetIndexer": [
        {
            "category": "arg",
            "name": "target",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "positions",
            "type": [
                "list[tuple[float]]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "positions",
            "type": [
                "list[tuple[float]]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_get_indexer_out_of_bounds_date",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_indexer_pad_requires_monotonicity@TestGetIndexer": [
        {
            "category": "local",
            "name": "rng",
            "type": [
                "list[int]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "rng2",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_get_indexer_pad_requires_monotonicity",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_loc_key_unit_mismatch@TestGetLoc": [
        {
            "category": "local",
            "name": "idx",
            "type": [
                "list[int]",
                "legistar.models.Index"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "list[str]",
                "dict[str, bool]"
            ]
        },
        {
            "category": "local",
            "name": "loc",
            "type": [
                "tuple[str]",
                "typing.Callable[None, typing.Any]",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_get_loc_key_unit_mismatch",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_loc_key_unit_mismatch_not_castable@TestGetLoc": [
        {
            "category": "local",
            "name": "dta",
            "type": [
                "datetime.datetime.datetime",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "dti",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "None",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_get_loc_key_unit_mismatch_not_castable",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_loc_nat@TestGetLoc": [
        {
            "category": "local",
            "name": "index",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "return",
            "name": "test_get_loc_nat",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_loc_reasonable_key_error@TestGetLoc": [
        {
            "category": "local",
            "name": "index",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "return",
            "name": "test_get_loc_reasonable_key_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_loc_time_nat@TestGetLoc": [
        {
            "category": "local",
            "name": "tic",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "dti",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "loc",
            "type": [
                "list[int]",
                "dict",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_loc_time_nat",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_loc_time_obj2@TestGetLoc": [
        {
            "category": "arg",
            "name": "monkeypatch",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "offset",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "size_cutoff",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "offset",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "step",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "monkeypatch",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "ts",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[list[int]]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "left",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "right",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_get_loc_time_obj2",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_loc_time_obj@TestGetLoc": [
        {
            "category": "local",
            "name": "idx",
            "type": [
                "int",
                "list[int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[tuple[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_get_loc_time_obj",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_loc_timedelta_invalid_key@TestGetLoc": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "str",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "dti",
            "type": [
                "int",
                "str",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test_get_loc_timedelta_invalid_key",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_loc_year_str@TestGetLoc": [
        {
            "category": "local",
            "name": "rng",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "float",
                "list[list[None]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "range"
            ]
        },
        {
            "category": "return",
            "name": "test_get_loc_year_str",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_slice_bounds_datetime_outside@TestGetSliceBounds": [
        {
            "category": "arg",
            "name": "box",
            "type": [
                "int",
                "tuple[int]",
                "datetime.date"
            ]
        },
        {
            "category": "arg",
            "name": "side",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "year",
            "type": [
                "int",
                "tuple[int]",
                "datetime.date"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "float",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "tz_aware_fixture",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "tz_aware_fixture",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "str",
                "int",
                "datetime.tzinfo",
                "datetime.timezone",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "legistar.models.Index",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "year",
            "type": [
                "int",
                "tuple[int]",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "list",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "side",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "test_get_slice_bounds_datetime_outside",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_slice_bounds_datetime_within@TestGetSliceBounds": [
        {
            "category": "arg",
            "name": "box",
            "type": [
                "int",
                "str",
                "typing.NamedTuple"
            ]
        },
        {
            "category": "arg",
            "name": "side",
            "type": [
                "str",
                "int",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "str",
                "int",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "tz_aware_fixture",
            "type": [
                "str",
                "list[str]",
                "datetime.tzinfo"
            ]
        },
        {
            "category": "local",
            "name": "tz_aware_fixture",
            "type": [
                "str",
                "list[str]",
                "datetime.tzinfo"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "str",
                "list[str]",
                "datetime.tzinfo",
                "datetime.timezone",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "legistar.models.Index",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "side",
            "type": [
                "str",
                "int",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "test_get_slice_bounds_datetime_within",
            "type": [
                "None"
            ]
        }
    ],
    "test_getitem@TestGetItem": [
        {
            "category": "arg",
            "name": "tz",
            "type": [
                "datetime.datetime",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "datetime.datetime",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "return",
            "name": "test_getitem",
            "type": [
                "None"
            ]
        }
    ],
    "test_getitem_int_list@TestGetItem": [
        {
            "category": "local",
            "name": "dti",
            "type": [
                "datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "test_getitem_int_list",
            "type": [
                "None"
            ]
        }
    ],
    "test_getitem_slice_keeps_name@TestGetItem": [
        {
            "category": "local",
            "name": "st",
            "type": [
                "Timestamp"
            ]
        },
        {
            "category": "local",
            "name": "et",
            "type": [
                "Timestamp"
            ]
        },
        {
            "category": "local",
            "name": "dr",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_getitem_slice_keeps_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_indexer_between_time@TestIndexerBetweenTime": [
        {
            "category": "local",
            "name": "rng",
            "type": [
                "list[tuple[typing.Any]]",
                "int",
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_indexer_between_time",
            "type": [
                "None"
            ]
        }
    ],
    "test_indexer_between_time_non_nano@TestIndexerBetweenTime": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "int",
                "float",
                "pandas.Series",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "rng",
            "type": [
                "str",
                "int",
                "list[typing.Callable[None, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "int",
                "float",
                "pandas.Series",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "dti",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "tic",
            "type": [
                "float",
                "int",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "toc",
            "type": [
                "float",
                "str",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "float",
                "tuple[typing.Any]",
                "tuple[typing.Union[bool,float]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[float]",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_indexer_between_time_non_nano",
            "type": [
                "None"
            ]
        }
    ],
    "test_maybe_cast_slice_bounds_empty@TestMaybeCastSliceBound": [
        {
            "category": "local",
            "name": "empty_idx",
            "type": [
                "int",
                "list[str]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "right",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "exp",
            "type": [
                "Timestamp"
            ]
        },
        {
            "category": "local",
            "name": "left",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_maybe_cast_slice_bounds_empty",
            "type": [
                "None"
            ]
        }
    ],
    "test_maybe_cast_slice_duplicate_monotonic@TestMaybeCastSliceBound": [
        {
            "category": "local",
            "name": "idx",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "float",
                "dict[typing.Any, list[typing.Any]]",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Timestamp"
            ]
        },
        {
            "category": "return",
            "name": "test_maybe_cast_slice_duplicate_monotonic",
            "type": [
                "None"
            ]
        }
    ],
    "test_slice_datetime_locs@TestGetSliceBounds": [
        {
            "category": "arg",
            "name": "box",
            "type": [
                "int",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "tz_aware_fixture",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tz_aware_fixture",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "str",
                "datetime.tzinfo",
                "datetime.timezone",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "list[int]",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "float",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_slice_datetime_locs",
            "type": [
                "None"
            ]
        }
    ],
    "test_take2@TestTake": [
        {
            "category": "arg",
            "name": "tz",
            "type": [
                "datetime.datetime",
                "int",
                "django.utils.timezone.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "dates",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "datetime.datetime",
                "int",
                "django.utils.timezone.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "taken1",
            "type": [
                "int",
                "float",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "taken2",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "taken",
            "type": [
                "int",
                "float",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_take2",
            "type": [
                "None"
            ]
        }
    ],
    "test_take@TestTake": [
        {
            "category": "arg",
            "name": "tz",
            "type": [
                "datetime.datetime",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "datetime.datetime",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "int",
                "list[int]",
                "legistar.models.Index"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "return",
            "name": "test_take",
            "type": [
                "None"
            ]
        }
    ],
    "test_take_fill_value@TestTake": [
        {
            "category": "local",
            "name": "idx",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_take_fill_value",
            "type": [
                "None"
            ]
        }
    ],
    "test_take_fill_value_with_timezone@TestTake": [
        {
            "category": "local",
            "name": "idx",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_take_fill_value_with_timezone",
            "type": [
                "None"
            ]
        }
    ],
    "test_take_invalid_kwargs@TestTake": [
        {
            "category": "local",
            "name": "idx",
            "type": [
                "int",
                "list[int]",
                "legistar.models.Index"
            ]
        },
        {
            "category": "local",
            "name": "indices",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_take_invalid_kwargs",
            "type": [
                "None"
            ]
        }
    ],
    "test_take_nan_first_datetime@TestTake": [
        {
            "category": "local",
            "name": "index",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "return",
            "name": "test_take_nan_first_datetime",
            "type": [
                "None"
            ]
        }
    ],
    "test_where_doesnt_retain_freq@TestWhere": [
        {
            "category": "local",
            "name": "dti",
            "type": [
                "str",
                "tuple",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "cond",
            "type": [
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_where_doesnt_retain_freq",
            "type": [
                "None"
            ]
        }
    ],
    "test_where_invalid_dtypes@TestWhere": [
        {
            "category": "local",
            "name": "dti",
            "type": [
                "tuple",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "i2",
            "type": [
                "Index"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "int",
                "dict[typing.Any, int]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[typing.Any, list[typing.Any]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Index"
            ]
        },
        {
            "category": "local",
            "name": "naive",
            "type": [
                "list[typing.Any]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "pi",
            "type": [
                "time.struct_time"
            ]
        },
        {
            "category": "local",
            "name": "tda",
            "type": [
                "list[int]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_where_invalid_dtypes",
            "type": [
                "None"
            ]
        }
    ],
    "test_where_mismatched_nat@TestWhere": [
        {
            "category": "arg",
            "name": "tz_aware_fixture",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "tz_aware_fixture",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "dti",
            "type": [
                "tuple",
                "list[str]",
                "list[typing.Optional[str]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Index"
            ]
        },
        {
            "category": "return",
            "name": "test_where_mismatched_nat",
            "type": [
                "None"
            ]
        }
    ],
    "test_where_other@TestWhere": [
        {
            "category": "local",
            "name": "i",
            "type": [
                "list[int]",
                "datetime.datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[object]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[int]",
                "datetime.datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "i2",
            "type": [
                "list[int]",
                "Index"
            ]
        },
        {
            "category": "return",
            "name": "test_where_other",
            "type": [
                "None"
            ]
        }
    ],
    "test_where_tz@TestWhere": [
        {
            "category": "local",
            "name": "i",
            "type": [
                "datetime.datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "datetime.datetime.timedelta",
                "Index"
            ]
        },
        {
            "category": "local",
            "name": "i2",
            "type": [
                "int",
                "list[int]",
                "float",
                "Index"
            ]
        },
        {
            "category": "return",
            "name": "test_where_tz",
            "type": [
                "None"
            ]
        }
    ]
}