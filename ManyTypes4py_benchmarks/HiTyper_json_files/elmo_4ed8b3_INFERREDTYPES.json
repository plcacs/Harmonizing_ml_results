{
    "__init__@Elmo": [
        {
            "category": "arg",
            "name": "options_file",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "weight_file",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "num_output_representations",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "requires_grad",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "do_layer_norm",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "dropout",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "vocab_to_cache",
            "type": [
                "None",
                "bool",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "keep_sentence_boundaries",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "scalar_mix_parameters",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "module",
            "type": [
                "None",
                "torch.nn.Module",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "module",
            "type": [
                "None",
                "torch.nn.Module",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "options_file",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "weight_file",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_elmo_lstm",
            "type": [
                "torch.nn.Module",
                "str",
                "bool",
                "_ElmoBiLm"
            ]
        },
        {
            "category": "local",
            "name": "requires_grad",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "vocab_to_cache",
            "type": [
                "None",
                "bool",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "_has_cached_vocab",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "keep_sentence_boundaries",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_keep_sentence_boundaries",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dropout",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_dropout",
            "type": [
                "Dropout"
            ]
        },
        {
            "category": "local",
            "name": "_scalar_mixes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "num_output_representations",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "do_layer_norm",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "scalar_mix_parameters",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "scalar_mix",
            "type": [
                "ScalarMix"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_ElmoBiLm": [
        {
            "category": "arg",
            "name": "options_file",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "weight_file",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "requires_grad",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "vocab_to_cache",
            "type": [
                "None",
                "list[str]",
                "bool",
                "allennlp.predictors.predictor.Predictor"
            ]
        },
        {
            "category": "local",
            "name": "options_file",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "weight_file",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "requires_grad",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_token_embedder",
            "type": [
                "_ElmoCharacterEncoder"
            ]
        },
        {
            "category": "local",
            "name": "_requires_grad",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "vocab_to_cache",
            "type": [
                "None",
                "list[str]",
                "bool",
                "allennlp.predictors.predictor.Predictor"
            ]
        },
        {
            "category": "local",
            "name": "_word_embedding",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_bos_embedding",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_eos_embedding",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "fin",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "_elmo_lstm",
            "type": [
                "ElmoLstm"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_ElmoCharacterEncoder": [
        {
            "category": "arg",
            "name": "options_file",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "weight_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "requires_grad",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "options_file",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "fin",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "weight_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_weight_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "requires_grad",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_load_char_embedding@_ElmoCharacterEncoder": [
        {
            "category": "local",
            "name": "_char_embedding_weights",
            "type": [
                "float",
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_load_char_embedding",
            "type": [
                "None"
            ]
        }
    ],
    "_load_cnn_weights@_ElmoCharacterEncoder": [
        {
            "category": "local",
            "name": "convolutions",
            "type": [
                "list",
                "list[typing.Union[float,int,list]]"
            ]
        },
        {
            "category": "local",
            "name": "conv",
            "type": [
                "float",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_convolutions",
            "type": [
                "list[typing.Union[float,int,list]]"
            ]
        },
        {
            "category": "return",
            "name": "_load_cnn_weights",
            "type": [
                "None"
            ]
        }
    ],
    "_load_highway@_ElmoCharacterEncoder": [
        {
            "category": "local",
            "name": "n_filters",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_highways",
            "type": [
                "Highway"
            ]
        },
        {
            "category": "local",
            "name": "w_carry",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "b_carry",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_load_highway",
            "type": [
                "None"
            ]
        }
    ],
    "_load_projection@_ElmoCharacterEncoder": [
        {
            "category": "local",
            "name": "n_filters",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_projection",
            "type": [
                "int",
                "tuple",
                "typing.DefaultDict"
            ]
        },
        {
            "category": "return",
            "name": "_load_projection",
            "type": [
                "None"
            ]
        }
    ],
    "_load_weights@_ElmoCharacterEncoder": [
        {
            "category": "return",
            "name": "_load_weights",
            "type": [
                "None"
            ]
        }
    ],
    "batch_to_ids@global": [
        {
            "category": "arg",
            "name": "batch",
            "type": [
                "list[list[str]]",
                "list[data.GAPExample]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "instances",
            "type": [
                "list",
                "list[Instance]"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "ELMoTokenCharactersIndexer"
            ]
        },
        {
            "category": "local",
            "name": "sentence",
            "type": [
                "list[str]",
                "data.GAPExample"
            ]
        },
        {
            "category": "local",
            "name": "batch",
            "type": [
                "list[list[str]]",
                "list[data.GAPExample]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "token",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tokens",
            "type": [
                "list[Token]"
            ]
        },
        {
            "category": "local",
            "name": "field",
            "type": [
                "TextField"
            ]
        },
        {
            "category": "local",
            "name": "instance",
            "type": [
                "Instance"
            ]
        },
        {
            "category": "local",
            "name": "dataset",
            "type": [
                "Batch"
            ]
        },
        {
            "category": "local",
            "name": "vocab",
            "type": [
                "Vocabulary"
            ]
        },
        {
            "category": "return",
            "name": "batch_to_ids",
            "type": [
                "str",
                "typing.IO",
                "list[int]",
                "dict"
            ]
        }
    ],
    "create_cached_cnn_embeddings@_ElmoBiLm": [
        {
            "category": "arg",
            "name": "tokens",
            "type": []
        },
        {
            "category": "local",
            "name": "timesteps",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "batch_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "all_embeddings",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "vocab_size",
            "type": [
                "int",
                "range",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "embedding_dim",
            "type": [
                "int",
                "range",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_word_embedding",
            "type": [
                "Embedding"
            ]
        },
        {
            "category": "return",
            "name": "create_cached_cnn_embeddings",
            "type": [
                "None"
            ]
        }
    ],
    "forward@Elmo": [
        {
            "category": "arg",
            "name": "inputs",
            "type": [
                "torch.Tensor",
                "dict[str, torch.Tensor]"
            ]
        },
        {
            "category": "arg",
            "name": "word_inputs",
            "type": [
                "None",
                "torch.IntTensor",
                "torch.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "inputs",
            "type": [
                "torch.Tensor",
                "dict[str, torch.Tensor]"
            ]
        },
        {
            "category": "local",
            "name": "original_shape",
            "type": [
                "tuple",
                "dict[str, str]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "timesteps",
            "type": [
                "float",
                "int",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "num_characters",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "reshaped_inputs",
            "type": [
                "list",
                "dict[str, typing.Any]",
                "typing.Callable[None,None, typing.Any]",
                "torch.Tensor",
                "dict[str, torch.Tensor]"
            ]
        },
        {
            "category": "local",
            "name": "word_inputs",
            "type": [
                "None",
                "torch.IntTensor",
                "torch.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "original_word_size",
            "type": [
                "list[int]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "reshaped_word_inputs",
            "type": [
                "list",
                "list[int]",
                "None",
                "torch.IntTensor",
                "torch.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "bilm_output",
            "type": [
                "list",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "layer_activations",
            "type": [
                "list[tuple[typing.Union[typing.Any,float]]]",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mask_with_bos_eos",
            "type": [
                "bool",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "representations",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "scalar_mix",
            "type": [
                "typing.Callable[None, typing.Any]",
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "representation_with_bos_eos",
            "type": [
                "list",
                "typing.DefaultDict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "processed_representation",
            "type": [
                "list",
                "typing.DefaultDict",
                "str",
                "typing.Callable[None,None, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "processed_mask",
            "type": [
                "bool",
                "numpy.array",
                "int",
                "typing.Callable[None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "representation_without_bos_eos",
            "type": [
                "typing.Callable[None,None, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "mask_without_bos_eos",
            "type": [
                "int",
                "typing.Callable[None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "int",
                "dict[typing.Any, int]",
                "typing.Callable[None, typing.Any]",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "elmo_representations",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "dict[typing.Text, typing.Union[list,int,typing.Callable[None, typing.Any],numpy.array,dict[typing.Any, int]]]"
            ]
        }
    ],
    "forward@_ElmoBiLm": [
        {
            "category": "arg",
            "name": "inputs",
            "type": [
                "torch.Tensor",
                "dict[str, torch.LongTensor]",
                "dict[str, torch.Tensor]"
            ]
        },
        {
            "category": "arg",
            "name": "word_inputs",
            "type": [
                "torch.Tensor",
                "torch.LongTensor",
                "torch.IntTensor"
            ]
        },
        {
            "category": "local",
            "name": "word_inputs",
            "type": [
                "torch.Tensor",
                "torch.LongTensor",
                "torch.IntTensor"
            ]
        },
        {
            "category": "local",
            "name": "mask_without_bos_eos",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "embedded_inputs",
            "type": [
                "allennlp.common.util.JsonDict",
                "numpy.ndarray",
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "type_representation",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "inputs",
            "type": [
                "torch.Tensor",
                "dict[str, torch.LongTensor]",
                "dict[str, torch.Tensor]"
            ]
        },
        {
            "category": "local",
            "name": "token_embedding",
            "type": [
                "list[int]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "lstm_outputs",
            "type": [
                "dict[str, typing.Any]",
                "torch.Tensor",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "output_tensors",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "dict[typing.Text, typing.Union[list,int]]"
            ]
        }
    ],
    "forward@_ElmoCharacterEncoder": [
        {
            "category": "arg",
            "name": "inputs",
            "type": [
                "torch.Tensor",
                "torch.nn.utils.rnn.PackedSequence"
            ]
        },
        {
            "category": "local",
            "name": "inputs",
            "type": [
                "torch.Tensor",
                "torch.nn.utils.rnn.PackedSequence"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "character_embedding",
            "type": [
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "convs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "conv",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "get_output_dim@Elmo": [
        {
            "category": "return",
            "name": "get_output_dim",
            "type": [
                "int",
                "None",
                "tuple[int]"
            ]
        }
    ],
    "get_output_dim@_ElmoBiLm": [
        {
            "category": "return",
            "name": "get_output_dim",
            "type": [
                "str",
                "int",
                "list[list[int]]"
            ]
        }
    ],
    "get_output_dim@_ElmoCharacterEncoder": [
        {
            "category": "return",
            "name": "get_output_dim",
            "type": []
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        }
    ]
}