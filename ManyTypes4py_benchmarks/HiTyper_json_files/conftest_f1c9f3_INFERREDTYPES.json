{
    "__init__@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "entry",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "client",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "core.base.setup.Settings"
            ]
        },
        {
            "category": "arg",
            "name": "device_info",
            "type": [
                "str",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "core.base.setup.Settings"
            ]
        },
        {
            "category": "local",
            "name": "device_info",
            "type": [
                "str",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MockReconnectLogic": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_mock_bluetooth_entry@global": [
        {
            "category": "arg",
            "name": "bluetooth_proxy_feature_flags",
            "type": []
        },
        {
            "category": "return",
            "name": "_mock_bluetooth_entry",
            "type": []
        }
    ],
    "_mock_device@global": [
        {
            "category": "arg",
            "name": "mock_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "entity_info",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "user_service",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "states",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "entry",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "device_info",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "mock_storage",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "device_info",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "entity_info",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user_service",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "states",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "mock_storage",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_mock_device",
            "type": []
        }
    ],
    "_mock_device_entry@global": [
        {
            "category": "arg",
            "name": "mock_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "entity_info",
            "type": []
        },
        {
            "category": "arg",
            "name": "user_service",
            "type": []
        },
        {
            "category": "arg",
            "name": "states",
            "type": []
        },
        {
            "category": "arg",
            "name": "mock_storage",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mock_storage",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_mock_device_entry",
            "type": []
        }
    ],
    "_mock_generic_device_entry@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory",
                "tests.common.MockConfigEntry"
            ]
        },
        {
            "category": "arg",
            "name": "mock_client",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "mock_device_info",
            "type": []
        },
        {
            "category": "arg",
            "name": "mock_list_entities_services",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "states",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "entry",
            "type": [
                "None",
                "homeassistancore.HomeAssistant",
                "tests.common.MockConfigEntry",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "hass_storage",
            "type": []
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "None",
                "homeassistancore.HomeAssistant",
                "tests.common.MockConfigEntry",
                "str",
                "MockConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory",
                "tests.common.MockConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "default_device_info",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "device_info",
            "type": [
                "DeviceInfo"
            ]
        },
        {
            "category": "local",
            "name": "storage_key",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "mock_client",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "mock_device",
            "type": [
                "MockESPHomeDevice"
            ]
        },
        {
            "category": "local",
            "name": "mock_client_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_list_entities_services",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "try_connect_done",
            "type": [
                "Event"
            ]
        },
        {
            "category": "return",
            "name": "_mock_generic_device_entry",
            "type": [
                "MockESPHomeDevice"
            ]
        }
    ],
    "_mock_voice_assistant_entry@global": [
        {
            "category": "arg",
            "name": "voice_assistant_feature_flags",
            "type": []
        },
        {
            "category": "return",
            "name": "_mock_voice_assistant_entry",
            "type": []
        }
    ],
    "_subscribe_home_assistant_states@global": [
        {
            "category": "arg",
            "name": "on_state_sub",
            "type": []
        },
        {
            "category": "arg",
            "name": "on_state_request",
            "type": []
        },
        {
            "category": "return",
            "name": "_subscribe_home_assistant_states",
            "type": [
                "None"
            ]
        }
    ],
    "_subscribe_service_calls@global": [
        {
            "category": "arg",
            "name": "callback",
            "type": []
        },
        {
            "category": "return",
            "name": "_subscribe_service_calls",
            "type": [
                "None"
            ]
        }
    ],
    "_subscribe_states@global": [
        {
            "category": "arg",
            "name": "callback",
            "type": []
        },
        {
            "category": "return",
            "name": "_subscribe_states",
            "type": [
                "None"
            ]
        }
    ],
    "_subscribe_voice_assistant@global": [
        {
            "category": "arg",
            "name": "handle_start",
            "type": []
        },
        {
            "category": "arg",
            "name": "handle_stop",
            "type": []
        },
        {
            "category": "arg",
            "name": "handle_audio",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "handle_announcement_finished",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "handle_audio",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "handle_announcement_finished",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_subscribe_voice_assistant",
            "type": []
        }
    ],
    "esphome_mock_async_zeroconf@global": [
        {
            "category": "arg",
            "name": "mock_async_zeroconf",
            "type": [
                "unittesmock.MagicMock",
                "mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "esphome_mock_async_zeroconf",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_ONE_SECOND",
            "type": [
                "int"
            ]
        }
    ],
    "init_integration@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "mock_config_entry",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "mock_config_entry",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "init_integration",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        }
    ],
    "load_homeassistant@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "typing.Callable",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "return",
            "name": "load_homeassistant",
            "type": [
                "None"
            ]
        }
    ],
    "mock_bluetooth@global": [
        {
            "category": "arg",
            "name": "enable_bluetooth",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "mock_bluetooth",
            "type": [
                "None"
            ]
        }
    ],
    "mock_bluetooth_entry@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "mock_bluetooth_entry",
            "type": []
        }
    ],
    "mock_bluetooth_entry_with_legacy_adv@global": [
        {
            "category": "arg",
            "name": "mock_bluetooth_entry",
            "type": [
                "list[str]",
                "dict[typing.Any, dict[str, str]]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "mock_bluetooth_entry_with_legacy_adv",
            "type": []
        }
    ],
    "mock_bluetooth_entry_with_raw_adv@global": [
        {
            "category": "arg",
            "name": "mock_bluetooth_entry",
            "type": [
                "dict[str, typing.Any]",
                "tornado.locks.Event"
            ]
        },
        {
            "category": "return",
            "name": "mock_bluetooth_entry_with_raw_adv",
            "type": []
        }
    ],
    "mock_client@global": [
        {
            "category": "arg",
            "name": "mock_device_info",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "mock_client",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "mock_client_",
            "type": [
                "AsyncMock",
                "typing.Text",
                "APIVersion"
            ]
        },
        {
            "category": "local",
            "name": "mock_device_info",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "mock_client",
            "type": [
                "typing.Generator[Mock]"
            ]
        }
    ],
    "mock_config_entry@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "config_entry",
            "type": [
                "MockConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "return",
            "name": "mock_config_entry",
            "type": [
                "MockConfigEntry"
            ]
        }
    ],
    "mock_connect@MockESPHomeDevice": [
        {
            "category": "return",
            "name": "mock_connect",
            "type": [
                "None"
            ]
        }
    ],
    "mock_connect_error@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "exc",
            "type": [
                "BaseException",
                "Exception",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "BaseException",
                "Exception",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "mock_connect_error",
            "type": [
                "None"
            ]
        }
    ],
    "mock_constructor@global": [
        {
            "category": "arg",
            "name": "address",
            "type": []
        },
        {
            "category": "arg",
            "name": "port",
            "type": []
        },
        {
            "category": "arg",
            "name": "password",
            "type": []
        },
        {
            "category": "arg",
            "name": "client_info",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "keepalive",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "zeroconf_instance",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "noise_psk",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "expected_name",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "mock_client_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "zeroconf_instance",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "noise_psk",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "mock_constructor",
            "type": []
        }
    ],
    "mock_dashboard@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[typing.Text, list]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "mock_dashboard",
            "type": [
                "typing.Generator[dict[typing.Text, list]]"
            ]
        }
    ],
    "mock_device_info@global": [
        {
            "category": "return",
            "name": "mock_device_info",
            "type": [
                "DeviceInfo"
            ]
        }
    ],
    "mock_disconnect@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "expected_disconnect",
            "type": [
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "expected_disconnect",
            "type": [
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "mock_disconnect",
            "type": [
                "None"
            ]
        }
    ],
    "mock_esphome_device@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "hass_storage",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "return",
            "name": "mock_esphome_device",
            "type": []
        }
    ],
    "mock_generic_device_entry@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "hass_storage",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "return",
            "name": "mock_generic_device_entry",
            "type": []
        }
    ],
    "mock_home_assistant_state_request@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "entity_id",
            "type": [
                "str",
                "dict",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "attribute",
            "type": [
                "str",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "str",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "attribute",
            "type": [
                "str",
                "dict",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "mock_home_assistant_state_request",
            "type": [
                "None"
            ]
        }
    ],
    "mock_home_assistant_state_subscription@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "entity_id",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "attribute",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "attribute",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "mock_home_assistant_state_subscription",
            "type": [
                "None"
            ]
        }
    ],
    "mock_service_call@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "service_call",
            "type": [
                "typing.Callable",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "service_call",
            "type": [
                "typing.Callable",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "mock_service_call",
            "type": [
                "None"
            ]
        }
    ],
    "mock_try_connect@MockReconnectLogic": [
        {
            "category": "return",
            "name": "mock_try_connect",
            "type": []
        }
    ],
    "mock_tts@global": [
        {
            "category": "arg",
            "name": "mock_tts_cache_dir",
            "type": [
                "pathlib.Path",
                "dict",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "mock_tts",
            "type": [
                "None"
            ]
        }
    ],
    "mock_voice_assistant_api_entry@global": [
        {
            "category": "arg",
            "name": "mock_voice_assistant_entry",
            "type": [
                "dict[str, typing.Union[typing.Any,str]]"
            ]
        },
        {
            "category": "return",
            "name": "mock_voice_assistant_api_entry",
            "type": []
        }
    ],
    "mock_voice_assistant_entry@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "mock_voice_assistant_entry",
            "type": []
        }
    ],
    "mock_voice_assistant_handle_announcement_finished@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "finished",
            "type": [
                "bool",
                "collections.abc.Awaitable",
                "typing.Iterable[bool]"
            ]
        },
        {
            "category": "local",
            "name": "finished",
            "type": [
                "bool",
                "collections.abc.Awaitable",
                "typing.Iterable[bool]"
            ]
        },
        {
            "category": "return",
            "name": "mock_voice_assistant_handle_announcement_finished",
            "type": [
                "None"
            ]
        }
    ],
    "mock_voice_assistant_handle_audio@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "audio",
            "type": [
                "bool",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "audio",
            "type": [
                "bool",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "mock_voice_assistant_handle_audio",
            "type": [
                "None"
            ]
        }
    ],
    "mock_voice_assistant_handle_start@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "conversation_id",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "flags",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "settings",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "wake_word_phrase",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "conversation_id",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "flags",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "settings",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "wake_word_phrase",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "mock_voice_assistant_handle_start",
            "type": [
                "bool",
                "dict",
                "str"
            ]
        }
    ],
    "mock_voice_assistant_handle_stop@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "abort",
            "type": [
                "bool",
                "typing.Callable[typing.Callable, None]",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "abort",
            "type": [
                "bool",
                "typing.Callable[typing.Callable, None]",
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "mock_voice_assistant_handle_stop",
            "type": [
                "None"
            ]
        }
    ],
    "mock_voice_assistant_v1_entry@global": [
        {
            "category": "arg",
            "name": "mock_voice_assistant_entry",
            "type": [
                "unittesmock.MagicMock",
                "dict[str, typing.Union[typing.Any,str]]"
            ]
        },
        {
            "category": "return",
            "name": "mock_voice_assistant_v1_entry",
            "type": []
        }
    ],
    "mock_voice_assistant_v2_entry@global": [
        {
            "category": "arg",
            "name": "mock_voice_assistant_entry",
            "type": [
                "unittesmock.MagicMock",
                "dict[str, typing.Union[typing.Any,str]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "mock_voice_assistant_v2_entry",
            "type": []
        }
    ],
    "set_home_assistant_state_subscription_callback@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "on_state_sub",
            "type": [
                "dict",
                "common.TestingContext",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "on_state_request",
            "type": [
                "typing.Callable",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "on_state_sub",
            "type": [
                "dict",
                "common.TestingContext",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "home_assistant_state_subscription_callback",
            "type": [
                "dict",
                "common.TestingContext",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "on_state_request",
            "type": [
                "typing.Callable",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "home_assistant_state_request_callback",
            "type": [
                "typing.Callable",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "set_home_assistant_state_subscription_callback",
            "type": [
                "None"
            ]
        }
    ],
    "set_on_connect@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "on_connect",
            "type": [
                "bool",
                "asyncio.Lock",
                "collections.abc.Awaitable"
            ]
        },
        {
            "category": "local",
            "name": "on_connect",
            "type": [
                "bool",
                "asyncio.Lock",
                "collections.abc.Awaitable"
            ]
        },
        {
            "category": "return",
            "name": "set_on_connect",
            "type": [
                "None"
            ]
        }
    ],
    "set_on_connect_error@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "on_connect_error",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "on_connect_error",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "set_on_connect_error",
            "type": [
                "None"
            ]
        }
    ],
    "set_on_disconnect@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "on_disconnect",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "on_disconnect",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "set_on_disconnect",
            "type": [
                "None"
            ]
        }
    ],
    "set_service_call_callback@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "callback",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "callback",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "service_call_callback",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "set_service_call_callback",
            "type": [
                "None"
            ]
        }
    ],
    "set_state@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "set_state",
            "type": [
                "None"
            ]
        }
    ],
    "set_state_callback@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "state_callback",
            "type": [
                "asyncio.AbstractEventLoop",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "state_callback",
            "type": [
                "asyncio.AbstractEventLoop",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "set_state_callback",
            "type": [
                "None"
            ]
        }
    ],
    "set_subscribe_voice_assistant_callbacks@MockESPHomeDevice": [
        {
            "category": "arg",
            "name": "handle_start",
            "type": [
                "bool",
                "asyncio.Event"
            ]
        },
        {
            "category": "arg",
            "name": "handle_stop",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "handle_audio",
            "type": [
                "None",
                "bool",
                "list[str]",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "arg",
            "name": "handle_announcement_finished",
            "type": [
                "None",
                "bool",
                "collections.abc.AsyncGenerator"
            ]
        },
        {
            "category": "local",
            "name": "handle_start",
            "type": [
                "bool",
                "asyncio.Event"
            ]
        },
        {
            "category": "local",
            "name": "voice_assistant_handle_start_callback",
            "type": [
                "bool",
                "asyncio.Event"
            ]
        },
        {
            "category": "local",
            "name": "handle_stop",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "voice_assistant_handle_stop_callback",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "handle_audio",
            "type": [
                "None",
                "bool",
                "list[str]",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "voice_assistant_handle_audio_callback",
            "type": [
                "None",
                "bool",
                "list[str]",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "handle_announcement_finished",
            "type": [
                "None",
                "bool",
                "collections.abc.AsyncGenerator"
            ]
        },
        {
            "category": "local",
            "name": "voice_assistant_handle_announcement_finished_callback",
            "type": [
                "None",
                "bool",
                "collections.abc.AsyncGenerator"
            ]
        },
        {
            "category": "return",
            "name": "set_subscribe_voice_assistant_callbacks",
            "type": [
                "None"
            ]
        }
    ],
    "stop@BaseMockReconnectLogic": [
        {
            "category": "return",
            "name": "stop",
            "type": [
                "None"
            ]
        }
    ],
    "stop_callback@BaseMockReconnectLogic": [
        {
            "category": "local",
            "name": "_is_stopped",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "stop_callback",
            "type": [
                "None"
            ]
        }
    ],
    "stop_callback@MockReconnectLogic": [
        {
            "category": "local",
            "name": "_is_stopped",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "stop_callback",
            "type": [
                "None"
            ]
        }
    ],
    "unsub@global": [
        {
            "category": "return",
            "name": "unsub",
            "type": [
                "None"
            ]
        }
    ]
}