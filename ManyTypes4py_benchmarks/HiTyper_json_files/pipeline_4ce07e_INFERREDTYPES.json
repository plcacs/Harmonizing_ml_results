{
    "__get_pydantic_core_schema__@_Pipeline": [
        {
            "category": "arg",
            "name": "source_type",
            "type": [
                "str",
                "typing.Callable[..., collections.abc.Coroutine]"
            ]
        },
        {
            "category": "arg",
            "name": "handler",
            "type": [
                "str",
                "typing.Callable[..., collections.abc.Coroutine]"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "handler",
            "type": [
                "str",
                "typing.Callable[..., collections.abc.Coroutine]"
            ]
        },
        {
            "category": "local",
            "name": "source_type",
            "type": [
                "str",
                "typing.Callable[..., collections.abc.Coroutine]"
            ]
        },
        {
            "category": "return",
            "name": "__get_pydantic_core_schema__",
            "type": [
                "None"
            ]
        }
    ],
    "__len__@_SupportsLen": [
        {
            "category": "return",
            "name": "__len__",
            "type": [
                "None"
            ]
        }
    ],
    "__supports_type__@_Pipeline": [
        {
            "category": "arg",
            "name": "_",
            "type": [
                "mypy.types.TupleType",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "__supports_type__",
            "type": [
                "None"
            ]
        }
    ],
    "_apply_constraint@global": [
        {
            "category": "arg",
            "name": "s",
            "type": [
                "mypy.types.Type"
            ]
        },
        {
            "category": "arg",
            "name": "constraint",
            "type": [
                "mypy.types.Type",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "constraint",
            "type": [
                "mypy.types.Type",
                "str",
                "None",
                "annotated_types_@_Gt"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "mypy.types.Type",
                "str",
                "BaseException",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "max_len",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "str",
                "datetime.tzinfo",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "lambda_source_code",
            "type": [
                "str",
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_apply_constraint",
            "type": []
        }
    ],
    "_apply_parse@global": [
        {
            "category": "arg",
            "name": "s",
            "type": [
                "mypy.types.Type"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "mypy.types.TypeVarDef",
                "mypy.types.Instance",
                "mypy.types.Type"
            ]
        },
        {
            "category": "arg",
            "name": "strict",
            "type": [
                "bool",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "handler",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "source_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "mypy.types.TypeVarDef",
                "mypy.types.Instance",
                "mypy.types.Type",
                "_FieldTypeMarker",
                "str",
                "types.MethodType",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "source_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_apply_parse",
            "type": [
                "bool",
                "typing.Callable[..., T]"
            ]
        },
        {
            "category": "local",
            "name": "strict",
            "type": [
                "bool",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "mypy.types.Type"
            ]
        }
    ],
    "_apply_step@global": [
        {
            "category": "arg",
            "name": "step",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "s",
            "type": [
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "handler",
            "type": [
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "source_type",
            "type": [
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "step",
            "type": [
                "dict",
                "_ValidateAs",
                "_ValidateAsDefer",
                "_Transform",
                "_Constraint",
                "_PipelineOr"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "handler",
            "type": [
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "source_type",
            "type": [
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_apply_step",
            "type": []
        }
    ],
    "_apply_transform@global": [
        {
            "category": "arg",
            "name": "s",
            "type": [
                "typing.Callable",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "handler",
            "type": [
                "typing.Callable",
                "bool",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "typing.Callable",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "typing.Callable",
                "str_@_strip",
                "str_@_lower",
                "str_@_upper"
            ]
        },
        {
            "category": "return",
            "name": "_apply_transform",
            "type": []
        }
    ],
    "_check_func@global": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "bool",
                "Exception"
            ]
        },
        {
            "category": "arg",
            "name": "predicate_err",
            "type": [
                "bool",
                "Exception"
            ]
        },
        {
            "category": "arg",
            "name": "s",
            "type": [
                "types.Resolver",
                "mypy.types.Type",
                "T",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "types.Resolver",
                "mypy.types.Type",
                "T",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_check_func",
            "type": []
        }
    ],
    "check_eq@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_eq",
            "type": []
        }
    ],
    "check_ge@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_ge",
            "type": [
                "bool"
            ]
        }
    ],
    "check_gt@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_gt",
            "type": [
                "bool"
            ]
        }
    ],
    "check_in@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_in",
            "type": []
        }
    ],
    "check_le@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_le",
            "type": [
                "bool"
            ]
        }
    ],
    "check_len@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "local",
            "name": "max_len",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "check_len",
            "type": [
                "bool"
            ]
        }
    ],
    "check_lt@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_lt",
            "type": [
                "bool"
            ]
        }
    ],
    "check_multiple_of@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_multiple_of",
            "type": [
                "bool"
            ]
        }
    ],
    "check_not_eq@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_not_eq",
            "type": []
        }
    ],
    "check_not_in@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_not_in",
            "type": []
        }
    ],
    "check_pattern@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_pattern",
            "type": [
                "bool"
            ]
        }
    ],
    "check_tz_aware@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_tz_aware",
            "type": [
                "bool"
            ]
        }
    ],
    "check_tz_naive@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "check_tz_naive",
            "type": [
                "bool"
            ]
        }
    ],
    "constrain@_Pipeline": [
        {
            "category": "arg",
            "name": "constraint",
            "type": [
                "list[str]",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "constrain",
            "type": [
                "None"
            ]
        }
    ],
    "datetime_tz@_Pipeline": [
        {
            "category": "arg",
            "name": "tz",
            "type": [
                "str",
                "datetime.datetime",
                "datetime.tzinfo"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "str",
                "datetime.datetime",
                "datetime.tzinfo"
            ]
        },
        {
            "category": "return",
            "name": "datetime_tz",
            "type": []
        }
    ],
    "datetime_tz_aware@_Pipeline": [
        {
            "category": "return",
            "name": "datetime_tz_aware",
            "type": []
        }
    ],
    "datetime_tz_naive@_Pipeline": [
        {
            "category": "return",
            "name": "datetime_tz_naive",
            "type": []
        }
    ],
    "datetime_with_tz@_Pipeline": [
        {
            "category": "arg",
            "name": "tz",
            "type": [
                "datetime.datetime",
                "None",
                "datetime.timezone"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "datetime.datetime",
                "None",
                "datetime.timezone"
            ]
        },
        {
            "category": "return",
            "name": "datetime_with_tz",
            "type": []
        }
    ],
    "eq@_Pipeline": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "str",
                "T",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str",
                "T",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "eq",
            "type": [
                "str",
                "typing.Sequence[str]",
                "None"
            ]
        }
    ],
    "ge@_Pipeline": [
        {
            "category": "arg",
            "name": "ge",
            "type": [
                "T",
                "complex",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "local",
            "name": "ge",
            "type": [
                "T",
                "complex",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "return",
            "name": "ge",
            "type": []
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "EllipsisType",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "__all__",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "_slots_frozen",
            "type": [
                "dict[typing.Text, bool]"
            ]
        },
        {
            "category": "local",
            "name": "_ConstraintAnnotation",
            "type": [
                "str",
                "typing.Type",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_Step",
            "type": [
                "list[str]",
                "int",
                "list[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "_InT",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_OutT",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_NewOutT",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "validate_as",
            "type": [
                "str",
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "validate_as_deferred",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "transform",
            "type": [
                "str",
                "dict[str, list[typing.Any]]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "_NewOutGt",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_NewOutGe",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_NewOutLt",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_NewOutLe",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_NewOutLen",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_NewOutDiv",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_NewOutMod",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_NewOutDatetime",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_NewOutInterval",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_OtherIn",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_OtherOut",
            "type": [
                "TypeVar"
            ]
        }
    ],
    "gt@_Pipeline": [
        {
            "category": "arg",
            "name": "gt",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "gt",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "gt",
            "type": []
        }
    ],
    "handler@global": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "handler",
            "type": []
        },
        {
            "category": "local",
            "name": "predicate_err",
            "type": [
                "str"
            ]
        }
    ],
    "in_@_Pipeline": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "in_",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "le@_Pipeline": [
        {
            "category": "arg",
            "name": "le",
            "type": [
                "typing.AbstractSet",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "le",
            "type": [
                "typing.AbstractSet",
                "set[int]"
            ]
        },
        {
            "category": "return",
            "name": "le",
            "type": []
        }
    ],
    "len@_Pipeline": [
        {
            "category": "arg",
            "name": "min_len",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "max_len",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_len",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "max_len",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "len",
            "type": []
        }
    ],
    "lt@_Pipeline": [
        {
            "category": "arg",
            "name": "lt",
            "type": [
                "str",
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "lt",
            "type": [
                "str",
                "int",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "lt",
            "type": []
        }
    ],
    "multiple_of@_Pipeline": [
        {
            "category": "arg",
            "name": "multiple_of",
            "type": [
                "bool",
                "typing.Callable[T,T, T]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "multiple_of",
            "type": [
                "None"
            ]
        }
    ],
    "not_eq@_Pipeline": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "bool",
                "typing.Hashable",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "bool",
                "typing.Hashable",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "not_eq",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "not_in@_Pipeline": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "float",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "float",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "not_in",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "otherwise@_Pipeline": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "typing.Iterable[T]",
                "typing.AbstractSet",
                "int",
                "\"BitVec\""
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "typing.Iterable[T]",
                "typing.AbstractSet",
                "int",
                "\"BitVec\""
            ]
        },
        {
            "category": "return",
            "name": "otherwise",
            "type": [
                "_Pipeline"
            ]
        }
    ],
    "predicate@_Pipeline": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable",
                "wemake_python_styleguide.types.AnyFunctionDef"
            ]
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "typing.Callable",
                "wemake_python_styleguide.types.AnyFunctionDef"
            ]
        },
        {
            "category": "return",
            "name": "predicate",
            "type": []
        }
    ],
    "str_contains@_Pipeline": [
        {
            "category": "arg",
            "name": "substring",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "str_contains",
            "type": [
                "bool"
            ]
        }
    ],
    "str_ends_with@_Pipeline": [
        {
            "category": "arg",
            "name": "suffix",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "str_ends_with",
            "type": [
                "str",
                "bool",
                "typing.Type",
                "None"
            ]
        }
    ],
    "str_lower@_Pipeline": [
        {
            "category": "return",
            "name": "str_lower",
            "type": []
        }
    ],
    "str_pattern@_Pipeline": [
        {
            "category": "arg",
            "name": "pattern",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "return",
            "name": "str_pattern",
            "type": []
        }
    ],
    "str_starts_with@_Pipeline": [
        {
            "category": "arg",
            "name": "prefix",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "str_starts_with",
            "type": [
                "bool",
                "str",
                "None"
            ]
        }
    ],
    "str_strip@_Pipeline": [
        {
            "category": "return",
            "name": "str_strip",
            "type": []
        }
    ],
    "str_title@_Pipeline": [
        {
            "category": "return",
            "name": "str_title",
            "type": []
        }
    ],
    "str_upper@_Pipeline": [
        {
            "category": "return",
            "name": "str_upper",
            "type": []
        }
    ],
    "then@_Pipeline": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "int",
                "\"BitVec\"",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "int",
                "\"BitVec\"",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "return",
            "name": "then",
            "type": [
                "_Pipeline"
            ]
        }
    ],
    "tp@_ValidateAsDefer": [
        {
            "category": "return",
            "name": "tp",
            "type": [
                "str",
                "typing.Callable",
                "typing.Type"
            ]
        }
    ],
    "transform@_Pipeline": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "transform",
            "type": [
                "bool",
                "list[list[bool]]"
            ]
        }
    ],
    "validate_as@_Pipeline": [
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "mypy.types.Type",
                "types.Ty",
                "pyspark.sql.types.DataType"
            ]
        },
        {
            "category": "arg",
            "name": "strict",
            "type": [
                "bool",
                "dict",
                "list[bool]"
            ]
        },
        {
            "category": "return",
            "name": "validate_as",
            "type": [
                "None"
            ]
        }
    ],
    "validate_as_deferred@_Pipeline": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "validate_as_deferred",
            "type": [
                "bool"
            ]
        }
    ]
}