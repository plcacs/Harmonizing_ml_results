{
    "__init__@TreeArguments": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "str",
                "typing.Hashable",
                "rl_algorithms.utils.config.ConfigDict"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "typing.Sequence[typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "argument_node",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "trailer",
            "type": [
                "None",
                "dict",
                "list[tuple[int]]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "argument_node",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "typing.Sequence[typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "str",
                "typing.Hashable",
                "rl_algorithms.utils.config.ConfigDict"
            ]
        },
        {
            "category": "local",
            "name": "_inference_state",
            "type": [
                "str",
                "typing.Hashable",
                "rl_algorithms.utils.config.ConfigDict"
            ]
        },
        {
            "category": "local",
            "name": "trailer",
            "type": [
                "None",
                "dict",
                "list[tuple[int]]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@TreeArgumentsWrapper": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "str",
                "bytes",
                "None",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "str",
                "bytes",
                "None",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "_wrapped_arguments",
            "type": [
                "str",
                "bytes",
                "None",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ValuesArguments": [
        {
            "category": "arg",
            "name": "values_list",
            "type": [
                "list[dict[str, typing.Any]]",
                "dict[str, int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "values_list",
            "type": [
                "list[dict[str, typing.Any]]",
                "dict[str, int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_values_list",
            "type": [
                "list[dict[str, typing.Any]]",
                "dict[str, int]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__repr__@TreeArguments": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@TreeArgumentsWrapper": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@ValuesArguments": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_as_tree_tuple_objects@TreeArguments": [
        {
            "category": "local",
            "name": "default",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_as_tree_tuple_objects",
            "type": [
                "typing.Generator[tuple[None]]"
            ]
        }
    ],
    "_iterate_star_args@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dict[str, set[str]]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "array",
            "type": [
                "dict",
                "typing.Sequence[typing.Sequence[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "input_node",
            "type": [
                "dict[str, set[str]]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "funcdef",
            "type": [
                "None",
                "dict[str, str]",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "array",
            "type": [
                "dict",
                "typing.Sequence[typing.Sequence[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "funcdef",
            "type": [
                "None",
                "dict[str, str]",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dict[str, set[str]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "input_node",
            "type": [
                "dict[str, set[str]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_iterate_star_args",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "_parse_argument_clinic@global": [
        {
            "category": "arg",
            "name": "string",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "allow_kwargs",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "optional",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "string",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_parse_argument_clinic",
            "type": [
                "typing.Generator[tuple[bool]]"
            ]
        }
    ],
    "_star_star_dict@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "list[list[int]]",
                "dict[str, set[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "array",
            "type": [
                "list[tuple[str]]",
                "typing.Type",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "input_node",
            "type": [
                "dict[str, typing.Any]",
                "list[list[int]]",
                "dict[str, set[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "funcdef",
            "type": [
                "dict[str, str]",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "array",
            "type": [
                "list[tuple[str]]",
                "typing.Type",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_star_star_dict",
            "type": [
                "dict",
                "str",
                "bool",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "funcdef",
            "type": [
                "dict[str, str]",
                "dict",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "list[list[int]]",
                "dict[str, set[str]]"
            ]
        },
        {
            "category": "local",
            "name": "input_node",
            "type": [
                "dict[str, typing.Any]",
                "list[list[int]]",
                "dict[str, set[str]]"
            ]
        }
    ],
    "argument_node@TreeArgumentsWrapper": [
        {
            "category": "return",
            "name": "argument_node",
            "type": []
        }
    ],
    "context@TreeArgumentsWrapper": [
        {
            "category": "return",
            "name": "context",
            "type": []
        }
    ],
    "create_cached@TreeArguments": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "create_cached",
            "type": []
        }
    ],
    "decorator@global": [
        {
            "category": "arg",
            "name": "func",
            "type": []
        },
        {
            "category": "return",
            "name": "decorator",
            "type": []
        }
    ],
    "get_calling_nodes@TreeArguments": [
        {
            "category": "local",
            "name": "old_arguments_list",
            "type": [
                "list",
                "list[TreeArguments]"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "TreeArguments"
            ]
        },
        {
            "category": "return",
            "name": "get_calling_nodes",
            "type": [
                "list",
                "list[ContextualizedNode]"
            ]
        },
        {
            "category": "local",
            "name": "arguments_",
            "type": [
                "None"
            ]
        }
    ],
    "get_calling_nodes@TreeArgumentsWrapper": [
        {
            "category": "return",
            "name": "get_calling_nodes",
            "type": []
        }
    ],
    "get_calling_nodes@_AbstractArgumentsMixin": [
        {
            "category": "return",
            "name": "get_calling_nodes",
            "type": [
                "list"
            ]
        }
    ],
    "global@global": [],
    "iter_calling_names_with_star@TreeArguments": [
        {
            "category": "return",
            "name": "iter_calling_names_with_star",
            "type": [
                "typing.Generator[TreeNameDefinition]"
            ]
        }
    ],
    "iterate_argument_clinic@global": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "int",
                "list",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "clinic_string",
            "type": [
                "list[str]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "clinic_string",
            "type": [
                "list[str]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "clinic_args",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "iterator",
            "type": [
                "PushBackIterator"
            ]
        },
        {
            "category": "local",
            "name": "lazy_values",
            "type": [
                "list",
                "list[typing.Union[typing.Iterator,list,str]]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "list",
                "list[None]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "argument",
            "type": [
                "typing.Iterator",
                "list",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "int",
                "list",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "iterate_argument_clinic",
            "type": [
                "typing.Generator[ValueSet]",
                "typing.Generator[typing.Union[str,tuple,typing.Final]]"
            ]
        },
        {
            "category": "local",
            "name": "value_set",
            "type": [
                "str",
                "tuple",
                "typing.Final"
            ]
        }
    ],
    "repack_with_argument_clinic@global": [
        {
            "category": "arg",
            "name": "clinic_string",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "repack_with_argument_clinic",
            "type": []
        }
    ],
    "trailer@TreeArgumentsWrapper": [
        {
            "category": "return",
            "name": "trailer",
            "type": []
        }
    ],
    "try_iter_content@global": [
        {
            "category": "arg",
            "name": "types",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "depth",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "depth",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "try_iter_content",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "types",
            "type": [
                "str"
            ]
        }
    ],
    "unpack@TreeArguments": [
        {
            "category": "arg",
            "name": "funcdef",
            "type": [
                "None",
                "dict[str, set[str]]",
                "dict[str, bool]",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "named_args",
            "type": [
                "list",
                "list[tuple[LazyTreeValue]]"
            ]
        },
        {
            "category": "local",
            "name": "arrays",
            "type": [
                "list",
                "list[int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "a",
            "type": [
                "int",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "funcdef",
            "type": [
                "None",
                "dict[str, set[str]]",
                "dict[str, bool]",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "iterators",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "unpack",
            "type": [
                "typing.Generator[tuple[None]]",
                "typing.Generator",
                "typing.Generator[tuple[typing.Optional[LazyKnownValue]]]",
                "typing.Generator[tuple[typing.Optional[LazyTreeValue]]]",
                "typing.Generator[list[tuple[LazyTreeValue]]]"
            ]
        },
        {
            "category": "local",
            "name": "dct",
            "type": [
                "int",
                "typing.Text"
            ]
        }
    ],
    "unpack@TreeArgumentsWrapper": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "unpack",
            "type": [
                "None"
            ]
        }
    ],
    "unpack@ValuesArguments": [
        {
            "category": "arg",
            "name": "funcdef",
            "type": [
                "None",
                "bool",
                "typing.Iterable[int]",
                "qutebrowser.utils.usertypes.ClickTarget"
            ]
        },
        {
            "category": "return",
            "name": "unpack",
            "type": [
                "typing.Generator[tuple[typing.Optional[LazyKnownValues]]]"
            ]
        }
    ],
    "unpack@_AbstractArgumentsMixin": [
        {
            "category": "arg",
            "name": "funcdef",
            "type": [
                "None",
                "bool",
                "typing.Iterable[int]",
                "qutebrowser.utils.usertypes.ClickTarget"
            ]
        },
        {
            "category": "return",
            "name": "unpack",
            "type": [
                "None"
            ]
        }
    ],
    "unpack_arglist@global": [
        {
            "category": "arg",
            "name": "arglist",
            "type": [
                "typing.IO",
                "list",
                "typing.Deque"
            ]
        },
        {
            "category": "local",
            "name": "arglist",
            "type": [
                "typing.IO",
                "list",
                "typing.Deque",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "unpack_arglist",
            "type": [
                "None",
                "typing.Generator[tuple[typing.Union[int,typing.IO,list,typing.Deque,None]]]",
                "typing.Generator[tuple[int]]"
            ]
        }
    ],
    "wrapper@global": [
        {
            "category": "arg",
            "name": "value",
            "type": []
        },
        {
            "category": "arg",
            "name": "arguments",
            "type": []
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "wrapper",
            "type": []
        }
    ]
}