{
    "__eq__@MacroCandidate": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "T"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "T"
            ]
        },
        {
            "category": "return",
            "name": "__eq__",
            "type": [
                "bool"
            ]
        }
    ],
    "__eq__@MaterializationCandidate": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "typing.Type",
                "Group"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "typing.Type",
                "Group"
            ]
        },
        {
            "category": "return",
            "name": "__eq__",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "equal",
            "type": [
                "bool"
            ]
        }
    ],
    "__init__@DisabledLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "storage",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@DocLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "storage",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MacroManifest": [
        {
            "category": "arg",
            "name": "macros",
            "type": [
                "dict[str, str]",
                "set[str]",
                "dbcontracts.graph.parsed.ParsedMacro"
            ]
        },
        {
            "category": "local",
            "name": "macros",
            "type": [
                "dict[str, str]",
                "set[str]",
                "dbcontracts.graph.parsed.ParsedMacro"
            ]
        },
        {
            "category": "local",
            "name": "metadata",
            "type": [
                "ManifestMetadata"
            ]
        },
        {
            "category": "local",
            "name": "flat_graph",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_macros_by_name",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_macros_by_package",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MacroMethods": [
        {
            "category": "local",
            "name": "macros",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "metadata",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_macros_by_name",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_macros_by_package",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MetricLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "storage",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@RefableLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "storage",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SavedQueryLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "storage",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SemanticModelByMeasureLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "storage",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SingularTestLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "storage",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SourceLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "storage",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__lt__@MacroCandidate": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "Group"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "Group"
            ]
        },
        {
            "category": "return",
            "name": "__lt__",
            "type": [
                "bool"
            ]
        }
    ],
    "__lt__@MaterializationCandidate": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "Group",
                "typing.Type",
                "set[int]",
                "list[int]",
                "dict[int, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "Group",
                "typing.Type",
                "set[int]",
                "list[int]",
                "dict[int, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__lt__",
            "type": [
                "bool"
            ]
        }
    ],
    "__post_deserialize__@Manifest": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "dict[str, str]",
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "obj_",
            "type": [
                "Lock"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "__post_deserialize__",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "T"
            ]
        }
    ],
    "__pre_serialize__@Manifest": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "None",
                "dict",
                "mypy.nodes.Context",
                "dict[str, bool]"
            ]
        },
        {
            "category": "local",
            "name": "source_patches",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__pre_serialize__",
            "type": [
                "Manifest"
            ]
        }
    ],
    "__reduce_ex__@Manifest": [
        {
            "category": "arg",
            "name": "protocol",
            "type": [
                "str",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "__reduce_ex__",
            "type": [
                "tuple[tuple]"
            ]
        }
    ],
    "_build_macros_by_name@MacroMethods": [
        {
            "category": "arg",
            "name": "macros",
            "type": [
                "dict[str, set[str]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "macros_by_name",
            "type": [
                "dict",
                "dict[, list]"
            ]
        },
        {
            "category": "local",
            "name": "macro",
            "type": [
                "list[set[str]]"
            ]
        },
        {
            "category": "local",
            "name": "macros",
            "type": [
                "dict[str, set[str]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_build_macros_by_name",
            "type": [
                "dict[, list]"
            ]
        }
    ],
    "_build_macros_by_package@MacroMethods": [
        {
            "category": "arg",
            "name": "macros",
            "type": [
                "dict[str, str]",
                "dict",
                "dict[str, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "macros_by_package",
            "type": [
                "dict",
                "dict[, dict]"
            ]
        },
        {
            "category": "local",
            "name": "macro",
            "type": [
                "list[str]",
                "list[list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "macros",
            "type": [
                "dict[str, str]",
                "dict",
                "dict[str, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "macros_by_name",
            "type": [
                "dict",
                "dict[, typing.Union[list[str],list[list[str]]]]"
            ]
        },
        {
            "category": "return",
            "name": "_build_macros_by_package",
            "type": [
                "dict[, dict]"
            ]
        }
    ],
    "_check_duplicates@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "src",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "src",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_check_duplicates",
            "type": [
                "None"
            ]
        }
    ],
    "_deepcopy@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_deepcopy",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "str"
            ]
        }
    ],
    "_expect_value@global": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "dbcontracts.files.SourceFile"
            ]
        },
        {
            "category": "arg",
            "name": "src",
            "type": [
                "str",
                "wgraph.parsing.types.Ref",
                "markdown.util.etree.Element"
            ]
        },
        {
            "category": "arg",
            "name": "old_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "dbcontracts.files.SourceFile"
            ]
        },
        {
            "category": "local",
            "name": "src",
            "type": [
                "str",
                "wgraph.parsing.types.Ref",
                "markdown.util.etree.Element"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "old_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_expect_value",
            "type": [
                "str"
            ]
        }
    ],
    "_find_macros_by_name@MacroMethods": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "typing.Mapping",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "root_project_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "filter",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "candidates",
            "type": [
                "CandidateList"
            ]
        },
        {
            "category": "local",
            "name": "macros_by_name",
            "type": [
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Mapping",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "_find_macros_by_name",
            "type": [
                "CandidateList"
            ]
        },
        {
            "category": "local",
            "name": "packages",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "macro",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "root_project_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "candidate",
            "type": [
                "MacroCandidate"
            ]
        },
        {
            "category": "local",
            "name": "filter",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        }
    ],
    "_find_unique_ids_for_package@RefableLookup": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_find_unique_ids_for_package",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "_get_locality@global": [
        {
            "category": "arg",
            "name": "macro",
            "type": [
                "dbcontracts.graph.parsed.ParsedMacro",
                "str",
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "root_project_name",
            "type": [
                "str",
                "set[str]",
                "dbcontracts.graph.parsed.ParsedMacro"
            ]
        },
        {
            "category": "arg",
            "name": "internal_packages",
            "type": [
                "set[str]",
                "str",
                "dbcontracts.graph.parsed.ParsedMacro"
            ]
        },
        {
            "category": "local",
            "name": "macro",
            "type": [
                "dbcontracts.graph.parsed.ParsedMacro",
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "root_project_name",
            "type": [
                "str",
                "set[str]",
                "dbcontracts.graph.parsed.ParsedMacro"
            ]
        },
        {
            "category": "return",
            "name": "_get_locality",
            "type": []
        },
        {
            "category": "local",
            "name": "internal_packages",
            "type": [
                "set[str]",
                "str",
                "dbcontracts.graph.parsed.ParsedMacro"
            ]
        }
    ],
    "_get_parent_adapter_types@Manifest": [
        {
            "category": "arg",
            "name": "adapter_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "adapter_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_get_parent_adapter_types",
            "type": [
                "typing.Callable[MethodContext, mypy.types.Type]",
                "None"
            ]
        }
    ],
    "_map_list_nodes_to_map_list_resources@Manifest": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "dict[str, list[str]]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "nodes_map",
            "type": [
                "dict",
                "boto3.resources.base.ServiceResource",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "nodes_map",
            "type": [
                "dict",
                "boto3.resources.base.ServiceResource",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "node_id",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "node_list",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "typing.Any"
            ]
        },
        {
            "category": "return",
            "name": "_map_list_nodes_to_map_list_resources",
            "type": [
                "dict[tuple[typing.Union[str,typing.Any]], list]"
            ]
        }
    ],
    "_map_list_resources_to_map_list_nodes@Manifest": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typesystem.schemas.SchemaDefinitions",
                "dict[str, str]",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "resources_map",
            "type": [
                "dict",
                "typing.Callable[str, str]",
                "dict[str, typing.Union[str,bool]]"
            ]
        },
        {
            "category": "local",
            "name": "resources_map",
            "type": [
                "dict",
                "typing.Callable[str, str]",
                "dict[str, typing.Union[str,bool]]"
            ]
        },
        {
            "category": "return",
            "name": "_map_list_resources_to_map_list_nodes",
            "type": [
                "dict",
                "dict[tuple[typing.Union[str,bool]], list]"
            ]
        },
        {
            "category": "local",
            "name": "node_id",
            "type": [
                "tuple[typing.Union[str,bool]]"
            ]
        },
        {
            "category": "local",
            "name": "resource_list",
            "type": [
                "tuple[typing.Union[str,bool]]"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "_map_nodes_to_map_resources@Manifest": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "nodes_map",
            "type": [
                "boto3.resources.base.ServiceResource",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "nodes_map",
            "type": [
                "boto3.resources.base.ServiceResource",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_map_nodes_to_map_resources",
            "type": [
                "dict"
            ]
        }
    ],
    "_map_resources_to_map_nodes@Manifest": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "dict",
                "typesystem.schemas.SchemaDefinitions",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "resources_map",
            "type": [
                "dict[str, typing.Any]",
                "dict[int, list[str]]",
                "dict[str, list[typing.Callable]]"
            ]
        },
        {
            "category": "local",
            "name": "resources_map",
            "type": [
                "dict[str, typing.Any]",
                "dict[int, list[str]]",
                "dict[str, list[typing.Callable]]"
            ]
        },
        {
            "category": "local",
            "name": "node_id",
            "type": [
                "tuple[typing.Union[str,typing.Any]]",
                "tuple[typing.Union[int,list[str]]]",
                "tuple[typing.Union[str,list[typing.Callable]]]"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "tuple[typing.Union[str,typing.Any]]",
                "tuple[typing.Union[int,list[str]]]",
                "tuple[typing.Union[str,list[typing.Callable]]]"
            ]
        },
        {
            "category": "return",
            "name": "_map_resources_to_map_nodes",
            "type": [
                "dict[typing.Union[tuple[typing.Union[str,typing.Any]],tuple[typing.Union[int,list[str]]],tuple[typing.Union[str,list[typing.Callable]]]], ]"
            ]
        }
    ],
    "_materialization_candidates_for@Manifest": [
        {
            "category": "arg",
            "name": "project_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "materialization_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "adapter_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "specificity",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "materialization_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "adapter_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "full_name",
            "type": [
                "str",
                "dict[str, str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "project_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "specificity",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_materialization_candidates_for",
            "type": [
                "CandidateList"
            ]
        }
    ],
    "_microbatch_macro_is_core@Manifest": [
        {
            "category": "arg",
            "name": "project_name",
            "type": [
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "microbatch_is_core",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "project_name",
            "type": [
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "candidate",
            "type": [
                "list[str]",
                "dict",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_microbatch_macro_is_core",
            "type": [
                "bool"
            ]
        }
    ],
    "_packages_to_search@global": [
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "dbcontracts.graph.compiled.ManifestNode",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "node_package",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "target_package",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "target_package",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "_packages_to_search",
            "type": [
                "list[typing.Union[str,list[str]]]",
                "list[typing.Union[str,dbcontracts.graph.compiled.ManifestNode,dict,None]]"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "dbcontracts.graph.compiled.ManifestNode",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "node_package",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        }
    ],
    "_sort_values@global": [
        {
            "category": "arg",
            "name": "dct",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "dct",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "k",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "_sort_values",
            "type": [
                "dict[tuple[typing.Union[str,typing.Any]], list[typing.Union[str,typing.Any]]]"
            ]
        }
    ],
    "add@SemanticModelByMeasureLookup": [
        {
            "category": "arg",
            "name": "semantic_model",
            "type": [
                "typing.Iterable[\"Amendement\"]",
                "util.XYZ"
            ]
        },
        {
            "category": "local",
            "name": "semantic_model",
            "type": [
                "typing.Iterable[\"Amendement\"]",
                "util.XYZ"
            ]
        },
        {
            "category": "return",
            "name": "add",
            "type": [
                "None"
            ]
        }
    ],
    "add_disabled@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "str",
                "bytes",
                "typing.IO"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str",
                "types.Path",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "test_from",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "types.Path",
                "dict[str, str]",
                "GenericTestNode",
                "Metric",
                "SavedQuery",
                "SemanticModel",
                "Exposure",
                "UnitTestDefinition"
            ]
        },
        {
            "category": "local",
            "name": "source_file",
            "type": [
                "str",
                "bytes",
                "typing.IO",
                "SchemaSourceFile",
                "FixtureSourceFile"
            ]
        },
        {
            "category": "local",
            "name": "test_from",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "add_disabled",
            "type": [
                "None"
            ]
        }
    ],
    "add_disabled_nofile@Manifest": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "dbcontracts.graph.compiled.CompileResultNode",
                "docutils.nodes.Element",
                "types.trees.NodeT"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "dbcontracts.graph.compiled.CompileResultNode",
                "docutils.nodes.Element",
                "types.trees.NodeT"
            ]
        },
        {
            "category": "return",
            "name": "add_disabled_nofile",
            "type": [
                "None"
            ]
        }
    ],
    "add_doc@DocLookup": [
        {
            "category": "arg",
            "name": "doc",
            "type": [
                "dbcontracts.graph.parsed.ParsedDocumentation",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "doc",
            "type": [
                "dbcontracts.graph.parsed.ParsedDocumentation",
                "dict",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "add_doc",
            "type": [
                "None"
            ]
        }
    ],
    "add_doc@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "doc",
            "type": [
                "dbcontracts.graph.parsed.ParsedDocumentation",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "doc",
            "type": [
                "dbcontracts.graph.parsed.ParsedDocumentation",
                "dict",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "add_doc",
            "type": [
                "None"
            ]
        }
    ],
    "add_exposure@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "exposure",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "exposure",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "add_exposure",
            "type": [
                "None"
            ]
        }
    ],
    "add_fixture@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fixture",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fixture",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "add_fixture",
            "type": [
                "None"
            ]
        }
    ],
    "add_group@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "str",
                "filter",
                "typing.Match"
            ]
        },
        {
            "category": "arg",
            "name": "group",
            "type": [
                "str",
                "set[T]",
                "typing.Match"
            ]
        },
        {
            "category": "local",
            "name": "group",
            "type": [
                "str",
                "set[T]",
                "typing.Match"
            ]
        },
        {
            "category": "return",
            "name": "add_group",
            "type": [
                "None"
            ]
        }
    ],
    "add_macro@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "dbcontracts.graph.parsed.ParsedMacro",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "macro",
            "type": [
                "str",
                "list[str]",
                "dbcontracts.graph.parsed.ParsedMacro"
            ]
        },
        {
            "category": "local",
            "name": "macro",
            "type": [
                "str",
                "list[str]",
                "dbcontracts.graph.parsed.ParsedMacro"
            ]
        },
        {
            "category": "local",
            "name": "_macros_by_name",
            "type": [
                "dict[str, str]",
                "list[str]",
                "dict[str, typing.Union[bool,str]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_macros_by_package",
            "type": [
                "bool",
                "typing.Type",
                "dict[str, typing.Union[str,None]]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "add_macro",
            "type": [
                "None"
            ]
        }
    ],
    "add_metric@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "metric",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "generated_from",
            "type": [
                "None",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "metric",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "generated_from",
            "type": [
                "None",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "source_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "add_metric",
            "type": [
                "None"
            ]
        }
    ],
    "add_metric@MetricLookup": [
        {
            "category": "arg",
            "name": "metric",
            "type": [
                "metric.Metric",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "metric",
            "type": [
                "metric.Metric",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "add_metric",
            "type": [
                "None"
            ]
        }
    ],
    "add_node@DisabledLookup": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "typing.Any",
                "None",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "return",
            "name": "add_node",
            "type": [
                "None"
            ]
        }
    ],
    "add_node@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "str",
                "bytes",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "test_from",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "int",
                "None",
                "GenericTestNode",
                "Metric",
                "Exposure",
                "Group",
                "SnapshotNode"
            ]
        },
        {
            "category": "local",
            "name": "source_file",
            "type": [
                "str",
                "bytes",
                "None",
                "SchemaSourceFile",
                "FixtureSourceFile"
            ]
        },
        {
            "category": "local",
            "name": "test_from",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "add_node",
            "type": [
                "None"
            ]
        }
    ],
    "add_node@RefableLookup": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "dbcontracts.graph.compiled.ManifestNode",
                "wemake_python_styleguide.types.AnyImport"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "dbcontracts.graph.compiled.ManifestNode",
                "wemake_python_styleguide.types.AnyImport"
            ]
        },
        {
            "category": "return",
            "name": "add_node",
            "type": [
                "None"
            ]
        }
    ],
    "add_node_nofile@Manifest": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str",
                "docutils.nodes.Node",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "docutils.nodes.Node",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "add_node_nofile",
            "type": [
                "None"
            ]
        }
    ],
    "add_saved_query@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "str",
                "bool",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "saved_query",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "saved_query",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "add_saved_query",
            "type": [
                "None"
            ]
        }
    ],
    "add_saved_query@SavedQueryLookup": [
        {
            "category": "arg",
            "name": "saved_query",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "saved_query",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "add_saved_query",
            "type": [
                "None"
            ]
        }
    ],
    "add_semantic_model@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "list[list[str]]",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "semantic_model",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "semantic_model",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "add_semantic_model",
            "type": [
                "None"
            ]
        }
    ],
    "add_singular_test@SingularTestLookup": [
        {
            "category": "arg",
            "name": "source",
            "type": [
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "str",
                "set"
            ]
        },
        {
            "category": "return",
            "name": "add_singular_test",
            "type": [
                "None"
            ]
        }
    ],
    "add_source@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "dbcontracts.files.SourceFile",
                "str",
                "dbcontracts.graph.parsed.UnpatchedSourceDefinition"
            ]
        },
        {
            "category": "arg",
            "name": "source",
            "type": [
                "str",
                "dbcontracts.graph.parsed.UnpatchedSourceDefinition",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "str",
                "dbcontracts.graph.parsed.UnpatchedSourceDefinition",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "add_source",
            "type": [
                "None"
            ]
        }
    ],
    "add_source@SourceLookup": [
        {
            "category": "arg",
            "name": "source",
            "type": [
                "str",
                "dbcontracts.graph.parsed.ParsedSourceDefinition",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "str",
                "dbcontracts.graph.parsed.ParsedSourceDefinition",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "add_source",
            "type": [
                "None"
            ]
        }
    ],
    "add_unit_test@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "unit_test",
            "type": [
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "unit_test",
            "type": [
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "add_unit_test",
            "type": [
                "None"
            ]
        }
    ],
    "analysis_lookup@Manifest": [
        {
            "category": "local",
            "name": "_analysis_lookup",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Union[None,bool,str]]",
                "dict[str, typing.Union[dict,typing.Any]]",
                "None",
                "AnalysisLookup"
            ]
        },
        {
            "category": "return",
            "name": "analysis_lookup",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Union[None,bool,str]]",
                "dict[str, typing.Union[dict,typing.Any]]",
                "AnalysisLookup"
            ]
        }
    ],
    "build_disabled_by_file_id@Manifest": [
        {
            "category": "local",
            "name": "disabled_by_file_id",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "build_disabled_by_file_id",
            "type": [
                "dict"
            ]
        }
    ],
    "build_flat_graph@Manifest": [
        {
            "category": "local",
            "name": "flat_graph",
            "type": [
                "dict[typing.Text, dict]"
            ]
        },
        {
            "category": "return",
            "name": "build_flat_graph",
            "type": [
                "None"
            ]
        }
    ],
    "build_group_map@Manifest": [
        {
            "category": "local",
            "name": "groupable_nodes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "group_map",
            "type": [
                "dict[, list]"
            ]
        },
        {
            "category": "local",
            "name": "node_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "build_group_map",
            "type": [
                "None"
            ]
        }
    ],
    "build_macro_child_map@Manifest": [
        {
            "category": "local",
            "name": "edge_members",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "forward_edges",
            "type": [
                "str",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "build_macro_child_map",
            "type": [
                "str",
                "list",
                "list[int]"
            ]
        }
    ],
    "build_macro_edges@global": [
        {
            "category": "arg",
            "name": "nodes",
            "type": [
                "types.trees.NodeT",
                "str",
                "docutils.nodes.Node"
            ]
        },
        {
            "category": "local",
            "name": "nodes",
            "type": [
                "types.trees.NodeT",
                "str",
                "docutils.nodes.Node"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "forward_edges",
            "type": [
                "dict[, list]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "build_macro_edges",
            "type": [
                "tuple[int]",
                "str",
                "list[typing.Any]"
            ]
        }
    ],
    "build_node_edges@global": [
        {
            "category": "arg",
            "name": "nodes",
            "type": [
                "types.trees.NodeT"
            ]
        },
        {
            "category": "local",
            "name": "backward_edges",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "nodes",
            "type": [
                "types.trees.NodeT"
            ]
        },
        {
            "category": "local",
            "name": "forward_edges",
            "type": [
                "dict[, list]"
            ]
        },
        {
            "category": "return",
            "name": "build_node_edges",
            "type": [
                "tuple"
            ]
        }
    ],
    "build_parent_and_child_maps@Manifest": [
        {
            "category": "local",
            "name": "edge_members",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "forward_edges",
            "type": [
                "dict[int, int]",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "backward_edges",
            "type": [
                "dict[int, int]",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "child_map",
            "type": [
                "dict[int, int]",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "parent_map",
            "type": [
                "dict[int, int]",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "build_parent_and_child_maps",
            "type": [
                "None"
            ]
        }
    ],
    "deepcopy@Manifest": [
        {
            "category": "local",
            "name": "copy",
            "type": [
                "Manifest"
            ]
        },
        {
            "category": "return",
            "name": "deepcopy",
            "type": [
                "Manifest"
            ]
        }
    ],
    "disabled_lookup@Manifest": [
        {
            "category": "local",
            "name": "_disabled_lookup",
            "type": [
                "str",
                "dict[str, tuple[str]]",
                "set[tuple[str]]",
                "None",
                "DisabledLookup"
            ]
        },
        {
            "category": "return",
            "name": "disabled_lookup",
            "type": [
                "str",
                "dict[str, tuple[str]]",
                "set[tuple[str]]",
                "DisabledLookup"
            ]
        }
    ],
    "doc_lookup@Manifest": [
        {
            "category": "local",
            "name": "_doc_lookup",
            "type": [
                "dict[str, str]",
                "dict",
                "str",
                "None",
                "DocLookup"
            ]
        },
        {
            "category": "return",
            "name": "doc_lookup",
            "type": [
                "dict[str, str]",
                "dict",
                "str",
                "DocLookup"
            ]
        }
    ],
    "expect@Manifest": [
        {
            "category": "arg",
            "name": "unique_id",
            "type": [
                "str",
                "int",
                "static_frame.core.util.KeyOrKeys"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "int",
                "static_frame.core.util.KeyOrKeys"
            ]
        },
        {
            "category": "return",
            "name": "expect",
            "type": []
        }
    ],
    "external_node_unique_ids@Manifest": [
        {
            "category": "return",
            "name": "external_node_unique_ids",
            "type": [
                "list"
            ]
        }
    ],
    "fill_tracking_metadata@Manifest": [
        {
            "category": "local",
            "name": "self_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "fill_tracking_metadata",
            "type": [
                "None"
            ]
        }
    ],
    "filter@MacroMethods": [
        {
            "category": "arg",
            "name": "candidate",
            "type": []
        },
        {
            "category": "return",
            "name": "filter",
            "type": [
                "bool"
            ]
        }
    ],
    "find@DisabledLookup": [
        {
            "category": "arg",
            "name": "search_name",
            "type": [
                "str",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "version",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "resource_types",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "version",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "str",
                "typing.Any",
                "None",
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "find",
            "type": [
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "nodes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "resource_types",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "new_nodes",
            "type": [
                "list"
            ]
        }
    ],
    "find@DocLookup": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "str",
                "int",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "int",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "int",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "int",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "dict",
                "typing.Type",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "find",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "find@MetricLookup": [
        {
            "category": "arg",
            "name": "search_name",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "return",
            "name": "find",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "find@RefableLookup": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "str",
                "None",
                "dict[str, 'LabwareDefinition']"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "None",
                "dict[str, 'LabwareDefinition']"
            ]
        },
        {
            "category": "arg",
            "name": "version",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "source_node",
            "type": [
                "None",
                "str",
                "dict[str, 'LabwareDefinition']"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "None",
                "dict[str, 'LabwareDefinition']"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "None",
                "dict[str, 'LabwareDefinition']"
            ]
        },
        {
            "category": "local",
            "name": "version",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "source_node",
            "type": [
                "None",
                "str",
                "dict[str, 'LabwareDefinition']"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "max_version",
            "type": [
                "UnparsedVersion"
            ]
        },
        {
            "category": "return",
            "name": "find",
            "type": [
                "dict",
                "None"
            ]
        }
    ],
    "find@SavedQueryLookup": [
        {
            "category": "arg",
            "name": "search_name",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "return",
            "name": "find",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "find@SemanticModelByMeasureLookup": [
        {
            "category": "arg",
            "name": "search_name",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "return",
            "name": "find",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "find@SingularTestLookup": [
        {
            "category": "arg",
            "name": "search_name",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "return",
            "name": "find",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "find@SourceLookup": [
        {
            "category": "arg",
            "name": "search_name",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "list[str]",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "return",
            "name": "find",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "find_generate_macro_by_name@MacroMethods": [
        {
            "category": "arg",
            "name": "component",
            "type": [
                "set[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "root_project_name",
            "type": [
                "set[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "imported_package",
            "type": [
                "None",
                "str",
                "typing.Iterable[str]",
                "types.ModuleType"
            ]
        },
        {
            "category": "local",
            "name": "component",
            "type": [
                "set[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "root_project_name",
            "type": [
                "set[str]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "find_generate_macro_by_name",
            "type": []
        }
    ],
    "find_macro_by_name@MacroMethods": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "root_project_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "root_project_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "macro_candidate",
            "type": [
                "dict",
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "find_macro_by_name",
            "type": [
                "None"
            ]
        }
    ],
    "find_macro_candidate_by_name@MacroMethods": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "root_project_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "None",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "filter",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "None",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "root_project_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "candidates",
            "type": [
                "list[str]",
                "list",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "find_macro_candidate_by_name",
            "type": [
                "str",
                "set[str]",
                "list[dict[str, typing.Any]]"
            ]
        }
    ],
    "find_materialization_macro_by_name@Manifest": [
        {
            "category": "arg",
            "name": "project_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "materialization_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "adapter_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "adapter_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "project_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "materialization_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "candidates",
            "type": [
                "CandidateList"
            ]
        },
        {
            "category": "local",
            "name": "core_candidates",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "materialization_candidate",
            "type": [
                "list",
                "dict",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "get_flags()_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "find_materialization_macro_by_name",
            "type": [
                "None"
            ]
        }
    ],
    "find_node_from_ref_or_source@Manifest": [
        {
            "category": "arg",
            "name": "expression",
            "type": [
                "str",
                "typing.Iterable[str]",
                "hashdecoder.lib.types.hint_type"
            ]
        },
        {
            "category": "local",
            "name": "expression",
            "type": [
                "str",
                "typing.Iterable[str]",
                "hashdecoder.lib.types.hint_type"
            ]
        },
        {
            "category": "local",
            "name": "ref_or_source",
            "type": [
                "str",
                "list[str]",
                "rads.config.asSource",
                "RefArgs"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "None",
                "jinja2.nodes.FromImport"
            ]
        },
        {
            "category": "local",
            "name": "source_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "source_table_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "find_node_from_ref_or_source",
            "type": [
                "jinja2.nodes.FromImport"
            ]
        }
    ],
    "find_unique_id_for_package@global": [
        {
            "category": "arg",
            "name": "storage",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "key",
            "type": []
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "storage",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "find_unique_id_for_package",
            "type": [
                "None",
                "str",
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "pkg_dct",
            "type": [
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "from_macro@MaterializationCandidate": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Container"
            ]
        },
        {
            "category": "arg",
            "name": "candidate",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Container"
            ]
        },
        {
            "category": "arg",
            "name": "specificity",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Container"
            ]
        },
        {
            "category": "local",
            "name": "candidate",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Container"
            ]
        },
        {
            "category": "local",
            "name": "specificity",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Container"
            ]
        },
        {
            "category": "return",
            "name": "from_macro",
            "type": []
        }
    ],
    "from_writable_manifest@Manifest": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "writable_manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "writable_manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "Manifest"
            ]
        },
        {
            "category": "return",
            "name": "from_writable_manifest",
            "type": [
                "Manifest"
            ]
        }
    ],
    "get_macros_by_name@MacroMethods": [
        {
            "category": "local",
            "name": "_macros_by_name",
            "type": [
                "dict[str, str]",
                "dict[str, typing.Union[str,None]]",
                "typing.Literal",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_macros_by_name",
            "type": [
                "dict[str, str]",
                "dict[str, typing.Union[str,None]]",
                "typing.Literal",
                "None"
            ]
        }
    ],
    "get_macros_by_package@MacroMethods": [
        {
            "category": "local",
            "name": "_macros_by_package",
            "type": [
                "bool",
                "dict[str, typing.Union[str,None]]",
                "dict[str, tuple[typing.Union[int,str]]]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_macros_by_package",
            "type": [
                "bool",
                "dict[str, typing.Union[str,None]]",
                "dict[str, tuple[typing.Union[int,str]]]"
            ]
        }
    ],
    "get_resource_fqns@Manifest": [
        {
            "category": "local",
            "name": "resource_fqns",
            "type": [
                "dict",
                "dict[typing.Union[str,None], set]"
            ]
        },
        {
            "category": "local",
            "name": "all_resources",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "resource_type_plural",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_resource_fqns",
            "type": [
                "dict[typing.Union[str,None], set]"
            ]
        }
    ],
    "get_unique_id@DocLookup": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "str",
                "bytes",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "bytes",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "bytes",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "bytes",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_unique_id",
            "type": []
        }
    ],
    "get_unique_id@MetricLookup": [
        {
            "category": "arg",
            "name": "search_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "get_unique_id",
            "type": []
        }
    ],
    "get_unique_id@RefableLookup": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "str",
                "mypy.nodes.MypyFile",
                "types.ModuleType"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "mypy.nodes.SymbolTable",
                "str",
                "mypy.nodes.MypyFile"
            ]
        },
        {
            "category": "arg",
            "name": "version",
            "type": [
                "str",
                "types.ModuleType",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": [
                "None",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "version",
            "type": [
                "str",
                "types.ModuleType",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "mypy.nodes.MypyFile",
                "types.ModuleType",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "mypy.nodes.SymbolTable",
                "str",
                "mypy.nodes.MypyFile"
            ]
        },
        {
            "category": "local",
            "name": "unique_ids",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "None",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "get_unique_id",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "get_unique_id@SavedQueryLookup": [
        {
            "category": "arg",
            "name": "search_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "get_unique_id",
            "type": []
        }
    ],
    "get_unique_id@SemanticModelByMeasureLookup": [
        {
            "category": "arg",
            "name": "search_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "get_unique_id",
            "type": []
        }
    ],
    "get_unique_id@SingularTestLookup": [
        {
            "category": "arg",
            "name": "search_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "get_unique_id",
            "type": []
        }
    ],
    "get_unique_id@SourceLookup": [
        {
            "category": "arg",
            "name": "search_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "get_unique_id",
            "type": []
        }
    ],
    "get_used_databases@Manifest": [
        {
            "category": "return",
            "name": "get_used_databases",
            "type": [
                "set"
            ]
        }
    ],
    "get_used_schemas@Manifest": [
        {
            "category": "arg",
            "name": "resource_types",
            "type": [
                "None",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "resource_types",
            "type": [
                "None",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "get_used_schemas",
            "type": [
                "set[tuple]"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "PackageName",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "DocName",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "RefName",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "M",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "D",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "MaybeMetricNode",
            "type": [
                "list",
                "bool",
                "list[typing.Callable[None, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "MaybeSavedQueryNode",
            "type": [
                "set",
                "set[str]",
                "None",
                "frozenset"
            ]
        },
        {
            "category": "local",
            "name": "MaybeDocumentation",
            "type": [
                "str",
                "list[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "MaybeParsedSource",
            "type": [
                "str",
                "list[tuple[typing.Union[str,typing.Any]]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "MaybeNonSource",
            "type": [
                "str",
                "set",
                "set[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "T",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "NodeClassT",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "ResourceClassT",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "AnyManifest",
            "type": [
                "str",
                "typing.Callable[str, tuple[str]]",
                "list[typing.Callable[None, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "K_T",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "V_T",
            "type": [
                "TypeVar"
            ]
        }
    ],
    "has_file@Manifest": [
        {
            "category": "arg",
            "name": "source_file",
            "type": [
                "dbcontracts.files.SourceFile",
                "typing.BinaryIO",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "source_file",
            "type": [
                "dbcontracts.files.SourceFile",
                "typing.BinaryIO",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "None",
                "str",
                "tuple[typing.Any]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "has_file",
            "type": [
                "bool"
            ]
        }
    ],
    "is_invalid_private_ref@Manifest": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "typing.Type",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "target_model",
            "type": [
                "mypy.nodes.TypeInfo",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "dependencies",
            "type": [
                "dict[str, set[str]]",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dependencies",
            "type": [
                "dict[str, set[str]]",
                "str",
                "bool",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "target_model",
            "type": [
                "mypy.nodes.TypeInfo",
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "is_invalid_private_ref",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "typing.Type",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "is_private_ref",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "target_dependency",
            "type": [
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "restrict_package_access",
            "type": [
                "bool"
            ]
        }
    ],
    "is_invalid_protected_ref@Manifest": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "typing.Type",
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "target_model",
            "type": [
                "typing.Hashable",
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "dependencies",
            "type": [
                "dict[str, set[str]]",
                "str",
                "dbcontracts.graph.parsed.ParsedMacro"
            ]
        },
        {
            "category": "local",
            "name": "dependencies",
            "type": [
                "dict[str, set[str]]",
                "str",
                "dbcontracts.graph.parsed.ParsedMacro",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "target_model",
            "type": [
                "typing.Hashable",
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "is_invalid_protected_ref",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "typing.Type",
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "is_protected_ref",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "target_dependency",
            "type": [
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "restrict_package_access",
            "type": [
                "bool"
            ]
        }
    ],
    "last@CandidateList": [
        {
            "category": "local",
            "name": "last_candidate",
            "type": [
                "str",
                "int",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "last",
            "type": [
                "None"
            ]
        }
    ],
    "last_candidate@CandidateList": [
        {
            "category": "arg",
            "name": "valid_localities",
            "type": [
                "None",
                "list",
                "dict",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "last_candidate",
            "type": [
                "None",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "valid_localities",
            "type": [
                "None",
                "list",
                "dict",
                "str"
            ]
        }
    ],
    "merge_from_artifact@Manifest": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "mypy.types.Type",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "refables",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "current",
            "type": [
                "str",
                "typing.Callable[Type,BaseException,types.TracebackType, typing.Any]",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "defer_relation",
            "type": [
                "DeferRelation"
            ]
        },
        {
            "category": "return",
            "name": "merge_from_artifact",
            "type": [
                "None"
            ]
        }
    ],
    "metric_lookup@Manifest": [
        {
            "category": "local",
            "name": "_metric_lookup",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Type",
                "None",
                "MetricLookup"
            ]
        },
        {
            "category": "return",
            "name": "metric_lookup",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Type",
                "MetricLookup"
            ]
        }
    ],
    "perform_lookup@DocLookup": [
        {
            "category": "arg",
            "name": "unique_id",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "perform_lookup",
            "type": []
        }
    ],
    "perform_lookup@MetricLookup": [
        {
            "category": "arg",
            "name": "unique_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "perform_lookup",
            "type": []
        }
    ],
    "perform_lookup@RefableLookup": [
        {
            "category": "arg",
            "name": "unique_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "perform_lookup",
            "type": []
        }
    ],
    "perform_lookup@SavedQueryLookup": [
        {
            "category": "arg",
            "name": "unique_id",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "perform_lookup",
            "type": []
        }
    ],
    "perform_lookup@SemanticModelByMeasureLookup": [
        {
            "category": "arg",
            "name": "unique_id",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "enabled_semantic_model",
            "type": [
                "bool",
                "dict[str, str]",
                "str",
                "SemanticModel"
            ]
        },
        {
            "category": "local",
            "name": "disabled_semantic_model",
            "type": [
                "list[dict[str, typing.Any]]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "perform_lookup",
            "type": [
                "SemanticModel",
                "dict[str, typing.Any]",
                "str"
            ]
        }
    ],
    "perform_lookup@SingularTestLookup": [
        {
            "category": "arg",
            "name": "unique_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "perform_lookup",
            "type": []
        }
    ],
    "perform_lookup@SourceLookup": [
        {
            "category": "arg",
            "name": "unique_id",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict",
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict",
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "return",
            "name": "perform_lookup",
            "type": []
        }
    ],
    "populate@DisabledLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict",
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "populate",
            "type": [
                "None"
            ]
        }
    ],
    "populate@DocLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "return",
            "name": "populate",
            "type": [
                "None"
            ]
        }
    ],
    "populate@MetricLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "populate",
            "type": [
                "None"
            ]
        }
    ],
    "populate@RefableLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "populate",
            "type": [
                "None"
            ]
        }
    ],
    "populate@SavedQueryLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "populate",
            "type": [
                "None"
            ]
        }
    ],
    "populate@SemanticModelByMeasureLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "SemanticModel"
            ]
        },
        {
            "category": "return",
            "name": "populate",
            "type": [
                "None"
            ]
        }
    ],
    "populate@SingularTestLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "SingularTestNode"
            ]
        },
        {
            "category": "return",
            "name": "populate",
            "type": [
                "None"
            ]
        }
    ],
    "populate@SourceLookup": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "populate",
            "type": [
                "None"
            ]
        }
    ],
    "rebuild_disabled_lookup@Manifest": [
        {
            "category": "local",
            "name": "_disabled_lookup",
            "type": [
                "DisabledLookup"
            ]
        },
        {
            "category": "return",
            "name": "rebuild_disabled_lookup",
            "type": [
                "None"
            ]
        }
    ],
    "rebuild_doc_lookup@Manifest": [
        {
            "category": "local",
            "name": "_doc_lookup",
            "type": [
                "DocLookup"
            ]
        },
        {
            "category": "return",
            "name": "rebuild_doc_lookup",
            "type": [
                "None"
            ]
        }
    ],
    "rebuild_ref_lookup@Manifest": [
        {
            "category": "local",
            "name": "_ref_lookup",
            "type": [
                "RefableLookup"
            ]
        },
        {
            "category": "return",
            "name": "rebuild_ref_lookup",
            "type": [
                "None"
            ]
        }
    ],
    "rebuild_source_lookup@Manifest": [
        {
            "category": "local",
            "name": "_source_lookup",
            "type": [
                "SourceLookup"
            ]
        },
        {
            "category": "return",
            "name": "rebuild_source_lookup",
            "type": [
                "None"
            ]
        }
    ],
    "ref_lookup@Manifest": [
        {
            "category": "local",
            "name": "_ref_lookup",
            "type": [
                "dict[str, str]",
                "None",
                "RefableLookup"
            ]
        },
        {
            "category": "return",
            "name": "ref_lookup",
            "type": [
                "dict[str, str]",
                "RefableLookup"
            ]
        }
    ],
    "resolve_doc@Manifest": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "types.ModuleType"
            ]
        },
        {
            "category": "arg",
            "name": "package",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "node_package",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "node_package",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "candidates",
            "type": [
                "list",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pkg",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "types.ModuleType"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "str",
                "list[list[int]]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "resolve_doc",
            "type": [
                "dict",
                "str",
                "list[list[int]]",
                "None"
            ]
        }
    ],
    "resolve_metric@Manifest": [
        {
            "category": "arg",
            "name": "target_metric_name",
            "type": [
                "str",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "arg",
            "name": "target_metric_package",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "node_package",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "metric",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "disabled",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "node_package",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "target_metric_package",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "candidates",
            "type": [
                "str",
                "list[str]",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "pkg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "target_metric_name",
            "type": [
                "str",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "return",
            "name": "resolve_metric",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "list",
                "Disabled",
                "None"
            ]
        }
    ],
    "resolve_ref@Manifest": [
        {
            "category": "arg",
            "name": "source_node",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "target_model_name",
            "type": [
                "str",
                "dict",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "target_model_package",
            "type": [
                "str",
                "set[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "target_model_version",
            "type": [
                "str",
                "dict",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "set[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "node_package",
            "type": [
                "str",
                "set[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "None",
                "jinja2.nodes.FromImport"
            ]
        },
        {
            "category": "local",
            "name": "disabled",
            "type": [
                "str",
                "list",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "set[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "node_package",
            "type": [
                "str",
                "set[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "target_model_package",
            "type": [
                "str",
                "set[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "candidates",
            "type": [
                "list[str]",
                "set",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pkg",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "target_model_name",
            "type": [
                "str",
                "dict",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "target_model_version",
            "type": [
                "str",
                "dict",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "source_node",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "resolve_ref",
            "type": [
                "jinja2.nodes.FromImport",
                "Disabled",
                "None"
            ]
        }
    ],
    "resolve_saved_query@Manifest": [
        {
            "category": "arg",
            "name": "target_saved_query_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "target_saved_query_package",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "node_package",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "disabled",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "node_package",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "target_saved_query_package",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "candidates",
            "type": [
                "str",
                "list[str]",
                "dict[str, tuple]"
            ]
        },
        {
            "category": "local",
            "name": "pkg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "target_saved_query_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "saved_query",
            "type": [
                "str",
                "set[str]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "resolve_saved_query",
            "type": [
                "str",
                "set[str]",
                "dict[str, str]",
                "Disabled",
                "None"
            ]
        }
    ],
    "resolve_semantic_model_for_measure@Manifest": [
        {
            "category": "arg",
            "name": "target_measure_name",
            "type": [
                "str",
                "types.LocatorType",
                "deoplete.util.Candidates"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "node_package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "target_package",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "node_package",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "target_package",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "candidates",
            "type": [
                "str",
                "set",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "pkg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "target_measure_name",
            "type": [
                "str",
                "types.LocatorType",
                "deoplete.util.Candidates"
            ]
        },
        {
            "category": "local",
            "name": "semantic_model",
            "type": [
                "typing.Type",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "resolve_semantic_model_for_measure",
            "type": [
                "typing.Type",
                "None"
            ]
        }
    ],
    "resolve_source@Manifest": [
        {
            "category": "arg",
            "name": "target_source_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "target_table_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "node_package",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "target_source_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "target_table_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "search_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "node_package",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "candidates",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "None",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "disabled",
            "type": [
                "str",
                "list",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "pkg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "resolve_source",
            "type": [
                "str",
                "None",
                "list",
                "Disabled"
            ]
        }
    ],
    "saved_query_lookup@Manifest": [
        {
            "category": "local",
            "name": "_saved_query_lookup",
            "type": [
                "str",
                "typing.Type",
                "dict[int, set[str]]",
                "None",
                "SavedQueryLookup"
            ]
        },
        {
            "category": "return",
            "name": "saved_query_lookup",
            "type": [
                "str",
                "typing.Type",
                "dict[int, set[str]]",
                "SavedQueryLookup"
            ]
        }
    ],
    "search_name@Searchable": [
        {
            "category": "return",
            "name": "search_name",
            "type": [
                "None"
            ]
        }
    ],
    "semantic_model_by_measure_lookup@Manifest": [
        {
            "category": "local",
            "name": "_semantic_model_by_measure_lookup",
            "type": [
                "bool",
                "tuple[bool]",
                "dict[str, object]",
                "None",
                "SemanticModelByMeasureLookup"
            ]
        },
        {
            "category": "return",
            "name": "semantic_model_by_measure_lookup",
            "type": [
                "bool",
                "tuple[bool]",
                "dict[str, object]",
                "SemanticModelByMeasureLookup"
            ]
        }
    ],
    "singular_test_lookup@Manifest": [
        {
            "category": "local",
            "name": "_singular_test_lookup",
            "type": [
                "list[typing.MutableMapping]",
                "dict",
                "dict[str, dict[str, typing.Any]]",
                "None",
                "SingularTestLookup"
            ]
        },
        {
            "category": "return",
            "name": "singular_test_lookup",
            "type": [
                "list[typing.MutableMapping]",
                "dict",
                "dict[str, dict[str, typing.Any]]",
                "SingularTestLookup"
            ]
        }
    ],
    "source_lookup@Manifest": [
        {
            "category": "local",
            "name": "_source_lookup",
            "type": [
                "typing.MutableMapping",
                "typing.MutableSequence",
                "bool",
                "float",
                "str",
                "dict[str, typing.Any]",
                "list[typing.Any]",
                "None",
                "SourceLookup"
            ]
        },
        {
            "category": "return",
            "name": "source_lookup",
            "type": [
                "typing.MutableMapping",
                "typing.MutableSequence",
                "bool",
                "float",
                "str",
                "dict[str, typing.Any]",
                "list[typing.Any]",
                "SourceLookup"
            ]
        }
    ],
    "use_microbatch_batches@Manifest": [
        {
            "category": "arg",
            "name": "project_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "project_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "use_microbatch_batches",
            "type": [
                "bool",
                "str",
                "None"
            ]
        }
    ],
    "writable_manifest@Manifest": [
        {
            "category": "return",
            "name": "writable_manifest",
            "type": [
                "WritableManifest"
            ]
        }
    ],
    "write@Manifest": [
        {
            "category": "arg",
            "name": "path",
            "type": [
                "str",
                "dbcontracts.files.SourceFile",
                "object"
            ]
        },
        {
            "category": "local",
            "name": "writable",
            "type": [
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "str",
                "dbcontracts.files.SourceFile",
                "object"
            ]
        },
        {
            "category": "return",
            "name": "write",
            "type": [
                "None"
            ]
        }
    ]
}