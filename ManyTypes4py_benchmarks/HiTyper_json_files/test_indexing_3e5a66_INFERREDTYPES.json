{
    "global@global": [],
    "test_get_indexer_non_unique_dtype_mismatch@TestGetIndexerNonUnique": [
        {
            "category": "local",
            "name": "indexes",
            "type": [
                "static_frame.core.index.Index",
                "list",
                "static_frame.core.index.IndexGO"
            ]
        },
        {
            "category": "local",
            "name": "missing",
            "type": [
                "list",
                "list[tuple]",
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_get_indexer_non_unique_dtype_mismatch",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_indexer_non_unique_int_index@TestGetIndexerNonUnique": [
        {
            "category": "arg",
            "name": "idx_values",
            "type": [
                "list",
                "int",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "idx_non_unique",
            "type": [
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "idx_values",
            "type": [
                "list",
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "indexes",
            "type": [
                "slice",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "missing",
            "type": [
                "list",
                "property",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "idx_non_unique",
            "type": [
                "int",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "test_get_indexer_non_unique_int_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_loc_nan_object_dtype_nonmonotonic_nonunique@TestGetLoc": [
        {
            "category": "local",
            "name": "idx",
            "type": [
                "Index"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "int",
                "list[int]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_get_loc_nan_object_dtype_nonmonotonic_nonunique",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_loc_tuple_monotonic_above_size_cutoff@TestGetLoc": [
        {
            "category": "arg",
            "name": "monkeypatch",
            "type": []
        },
        {
            "category": "local",
            "name": "lev",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "mi",
            "type": [
                "list[int]",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "oidx",
            "type": [
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "loc",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "tup",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "frozenset",
                "list",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_get_loc_tuple_monotonic_above_size_cutoff",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_slice_bounds_invalid_side@TestGetSliceBounds": [
        {
            "category": "return",
            "name": "test_get_slice_bounds_invalid_side",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_slice_bounds_outside@TestGetSliceBounds": [
        {
            "category": "arg",
            "name": "side",
            "type": [
                "numpy.ndarray",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "dict[tuple[int], str]",
                "typing.OrderedDict"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "numpy.ndarray",
                "dict[tuple[int], str]"
            ]
        },
        {
            "category": "arg",
            "name": "bound",
            "type": [
                "numpy.ndarray",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "numpy.ndarray",
                "dict[tuple[int], str]"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "Index"
            ]
        },
        {
            "category": "local",
            "name": "bound",
            "type": [
                "numpy.ndarray",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "side",
            "type": [
                "numpy.ndarray",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "typing.NoReturn"
            ]
        },
        {
            "category": "return",
            "name": "test_get_slice_bounds_outside",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_slice_bounds_within@TestGetSliceBounds": [
        {
            "category": "arg",
            "name": "side",
            "type": [
                "int",
                "str",
                "tuple[int]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "Index"
            ]
        },
        {
            "category": "local",
            "name": "side",
            "type": [
                "int",
                "str",
                "tuple[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "int",
                "dict[str, int]"
            ]
        },
        {
            "category": "return",
            "name": "test_get_slice_bounds_within",
            "type": [
                "None"
            ]
        }
    ],
    "test_getitem_boolean_ea_indexer@global": [
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Index"
            ]
        },
        {
            "category": "return",
            "name": "test_getitem_boolean_ea_indexer",
            "type": [
                "None"
            ]
        }
    ]
}