{
    "alice_nominates_bob_and_ron_then_they_kick_her@global": [
        {
            "category": "arg",
            "name": "chain",
            "type": [
                "eth.rlp.headers.BlockHeader",
                "eth.abc.BlockHeaderAPI",
                "list[transaction.Transaction]"
            ]
        },
        {
            "category": "local",
            "name": "PARAGON_GENESIS_HEADER",
            "type": [
                "eth.rlp.headers.BlockHeader",
                "bytes",
                "dict[str, bytes]"
            ]
        },
        {
            "category": "local",
            "name": "header",
            "type": [
                "eth.rlp.headers.BlockHeader",
                "bytes",
                "dict[str, bytes]",
                "dict[bytes, bytes]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "chain",
            "type": [
                "eth.rlp.headers.BlockHeader",
                "eth.abc.BlockHeaderAPI",
                "list[transaction.Transaction]"
            ]
        },
        {
            "category": "local",
            "name": "ALICE_PK",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "alice_nominates_bob_and_ron_then_they_kick_her",
            "type": [
                "typing.Generator[typing.Union[dict[bytes, bytes],dict,dict[str, bytes]]]",
                "typing.Generator"
            ]
        },
        {
            "category": "local",
            "name": "BOB",
            "type": [
                "list[bytes]",
                "tuple[typing.Union[str,int]]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "BOB_PK",
            "type": [
                "bytes",
                "tuple[int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "RON",
            "type": [
                "dict[str, str]",
                "bytes",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "ALICE",
            "type": [
                "list[bytes]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "RON_PK",
            "type": [
                "int",
                "str",
                "None",
                "list"
            ]
        }
    ],
    "get_clique@global": [
        {
            "category": "arg",
            "name": "chain",
            "type": [
                "eth.abc.BlockHeaderAPI",
                "tuple[tuple[typing.Union[eth.abc.BlockHeaderAPI,...]]]",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "header",
            "type": [
                "None",
                "eth.abc.BlockHeaderAPI",
                "bytes",
                "eth.rlp.headers.BlockHeader"
            ]
        },
        {
            "category": "local",
            "name": "header",
            "type": [
                "None",
                "eth.abc.BlockHeaderAPI",
                "bytes",
                "eth.rlp.headers.BlockHeader"
            ]
        },
        {
            "category": "local",
            "name": "chain",
            "type": [
                "eth.abc.BlockHeaderAPI",
                "tuple[tuple[typing.Union[eth.abc.BlockHeaderAPI,...]]]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "vm",
            "type": [
                "eth.chains.base.MiningChain",
                "eth.abc.ChainAPI",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "return",
            "name": "get_clique",
            "type": []
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "ALICE_PK",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "ALICE",
            "type": [
                "list[bytes]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "ALICE_INITIAL_BALANCE",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "BOB_PK",
            "type": [
                "bytes",
                "tuple[int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "BOB",
            "type": [
                "list[bytes]",
                "tuple[typing.Union[str,int]]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "BOB_INITIAL_BALANCE",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "RON_PK",
            "type": [
                "int",
                "str",
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "RON",
            "type": [
                "dict[str, str]",
                "bytes",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "PARAGON_GENESIS_HEADER",
            "type": [
                "eth.rlp.headers.BlockHeader",
                "bytes",
                "dict[str, bytes]"
            ]
        },
        {
            "category": "local",
            "name": "PARAGON_GENESIS_PARAMS",
            "type": [
                "dict[typing.Text, ]",
                "dict[str, typing.Any]",
                "tuple",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "PARAGON_GENESIS_STATE",
            "type": [
                "dict[typing.Union[list[bytes],bytes,tuple[typing.Union[str,int]]], dict[typing.Text, typing.Union[int,bytes,dict]]]",
                "aiocometd.constants.TransportState",
                "typing.Optional",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "GOERLI_GENESIS_HASH",
            "type": [
                "str",
                "staticmethod",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "GOERLI_GENESIS_ALLOWED_SIGNER",
            "type": [
                "bool",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "DAPOWERPLAY_SIGNER",
            "type": [
                "list[int]",
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "GOERLI_HEADER_ONE",
            "type": [
                "BlockHeader"
            ]
        }
    ],
    "has_vote_from@global": [
        {
            "category": "arg",
            "name": "signer",
            "type": [
                "int",
                "models.transaction.EndorsedTX"
            ]
        },
        {
            "category": "arg",
            "name": "votes",
            "type": [
                "models.transaction.EndorsedTX"
            ]
        },
        {
            "category": "local",
            "name": "votes",
            "type": [
                "models.transaction.EndorsedTX"
            ]
        },
        {
            "category": "local",
            "name": "signer",
            "type": [
                "int",
                "models.transaction.EndorsedTX"
            ]
        },
        {
            "category": "return",
            "name": "has_vote_from",
            "type": [
                "bool"
            ]
        }
    ],
    "has_vote_to@global": [
        {
            "category": "arg",
            "name": "subject",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "votes",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "votes",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "vote",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "subject",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "has_vote_to",
            "type": [
                "bool"
            ]
        }
    ],
    "make_next_header@global": [
        {
            "category": "arg",
            "name": "chain",
            "type": [
                "bytes",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "previous_header",
            "type": [
                "bytes",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "signer_private_key",
            "type": [
                "bytes",
                "typing.Callable[bytes, bytes]"
            ]
        },
        {
            "category": "arg",
            "name": "coinbase",
            "type": []
        },
        {
            "category": "arg",
            "name": "nonce",
            "type": []
        },
        {
            "category": "arg",
            "name": "difficulty",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "chain",
            "type": [
                "bytes",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "previous_header",
            "type": [
                "bytes",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "difficulty",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "signer_private_key",
            "type": [
                "bytes",
                "typing.Callable[bytes, bytes]"
            ]
        },
        {
            "category": "return",
            "name": "make_next_header",
            "type": []
        }
    ],
    "paragon_chain@global": [
        {
            "category": "arg",
            "name": "base_db",
            "type": [
                "eth.abc.DatabaseAPI",
                "tuple[eth.abc.BlockHeaderAPI]",
                "eth.ChainGaps"
            ]
        },
        {
            "category": "local",
            "name": "vms",
            "type": [
                "tuple[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "clique_vms",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "base_db",
            "type": [
                "eth.abc.DatabaseAPI",
                "tuple[eth.abc.BlockHeaderAPI]",
                "eth.ChainGaps"
            ]
        },
        {
            "category": "local",
            "name": "PARAGON_GENESIS_PARAMS",
            "type": [
                "dict[str, typing.Any]",
                "tuple",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "PARAGON_GENESIS_STATE",
            "type": [
                "aiocometd.constants.TransportState",
                "typing.Optional",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "chain",
            "type": [
                "eth.chains.base.BaseChain"
            ]
        },
        {
            "category": "return",
            "name": "paragon_chain",
            "type": [
                "eth.chains.base.BaseChain"
            ]
        }
    ],
    "test_alice_votes_in_bob_and_ron_then_gets_kicked@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "paragon_chain",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "clique",
            "type": [
                "dict[int, typing.Any]",
                "tuple[typing.Literal]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "voting_chain",
            "type": [
                "nucypher.blockchain.eth.agents.MinerAgent"
            ]
        },
        {
            "category": "local",
            "name": "snapshot",
            "type": [
                "set[bytes]"
            ]
        },
        {
            "category": "return",
            "name": "test_alice_votes_in_bob_and_ron_then_gets_kicked",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_persist_and_restore_snapshot_from_db@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": [
                "eth.abc.ChainDatabaseAPI",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "paragon_chain",
            "type": [
                "eth.abc.ChainDatabaseAPI",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "clique",
            "type": [
                "dict[int, typing.Any]",
                "tuple[typing.Literal]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "PARAGON_GENESIS_HEADER",
            "type": [
                "eth.rlp.headers.BlockHeader",
                "bytes",
                "dict[str, bytes]"
            ]
        },
        {
            "category": "local",
            "name": "snapshot",
            "type": [
                "dict",
                "dict[bytes, typing.Any]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "revived",
            "type": [
                "str",
                "dict[str, str]",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test_can_persist_and_restore_snapshot_from_db",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_retrieve_root_snapshot@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": []
        },
        {
            "category": "return",
            "name": "test_can_retrieve_root_snapshot",
            "type": [
                "None"
            ]
        }
    ],
    "test_does_not_count_multiple_kicks@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": []
        },
        {
            "category": "local",
            "name": "ALICE_PK",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "BOB",
            "type": [
                "list[bytes]",
                "tuple[typing.Union[str,int]]",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test_does_not_count_multiple_kicks",
            "type": [
                "None"
            ]
        }
    ],
    "test_does_not_count_multiple_nominates@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": []
        },
        {
            "category": "local",
            "name": "ALICE_PK",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "BOB",
            "type": [
                "list[bytes]",
                "tuple[typing.Union[str,int]]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "RON",
            "type": [
                "dict[str, str]",
                "bytes",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_does_not_count_multiple_nominates",
            "type": [
                "None"
            ]
        }
    ],
    "test_import_block@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": [
                "str",
                "bytes",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "paragon_chain",
            "type": [
                "str",
                "bytes",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "vm",
            "type": [
                "eth.abc.ChainAPI",
                "eth.abc.VirtualMachineAPI",
                "eth.chains.base.MiningChain"
            ]
        },
        {
            "category": "local",
            "name": "ALICE",
            "type": [
                "list[bytes]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "BOB",
            "type": [
                "list[bytes]",
                "tuple[typing.Union[str,int]]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "ALICE_PK",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "tx",
            "type": [
                "list[bytes]",
                "bytes",
                "blockchain.transaction.CoinStakeTransaction"
            ]
        },
        {
            "category": "local",
            "name": "signed_header",
            "type": [
                "bytes",
                "eth.abc.BlockHeaderAPI",
                "dict[bytes, bytes]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "eth.rlp.headers.BlockHeader",
                "eth.rlp.blocks.BaseBlock",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test_import_block",
            "type": [
                "None"
            ]
        }
    ],
    "test_raises_unknown_ancestor_error@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": [
                "eth.abc.ChainDatabaseAPI",
                "bytes",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "paragon_chain",
            "type": [
                "eth.abc.ChainDatabaseAPI",
                "bytes",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "head",
            "type": [
                "str",
                "duniterpy.documents.transaction.Transaction",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "ALICE_PK",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "RON",
            "type": [
                "dict[str, str]",
                "bytes",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "clique",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_raises_unknown_ancestor_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_reapplies_headers_without_snapshots@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": []
        },
        {
            "category": "return",
            "name": "test_reapplies_headers_without_snapshots",
            "type": [
                "None"
            ]
        }
    ],
    "test_removes_all_pending_votes_after_kick@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": []
        },
        {
            "category": "local",
            "name": "ALICE_FRIEND",
            "type": [
                "bytes",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "snapshot",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ALICE_PK",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "BOB_PK",
            "type": [
                "bytes",
                "tuple[int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ALICE",
            "type": [
                "list[bytes]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "RON_PK",
            "type": [
                "int",
                "str",
                "None",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_removes_all_pending_votes_after_kick",
            "type": [
                "None"
            ]
        }
    ],
    "test_removes_all_pending_votes_after_nomination@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": [
                "bytes",
                "eth.abc.ChainDatabaseAPI",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "paragon_chain",
            "type": [
                "bytes",
                "eth.abc.ChainDatabaseAPI",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "clique",
            "type": [
                "dict[int, typing.Any]",
                "float",
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "voting_chain",
            "type": [
                "raiden.constants.EthClient",
                "nucypher.blockchain.eth.agents.MinerAgent",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "snapshot",
            "type": [
                "None",
                "bytes",
                "set[bytes]"
            ]
        },
        {
            "category": "return",
            "name": "test_removes_all_pending_votes_after_nomination",
            "type": [
                "None"
            ]
        }
    ],
    "test_revert_previous_kick@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "paragon_chain",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "head",
            "type": [
                "str",
                "duniterpy.documents.transaction.Transaction",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "clique",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "snapshot",
            "type": [
                "eth.consensus.clique.datatypes.Snapshot",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "ALICE_PK",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "BOB",
            "type": [
                "list[bytes]",
                "tuple[typing.Union[str,int]]",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test_revert_previous_kick",
            "type": [
                "None"
            ]
        }
    ],
    "test_revert_previous_nominate@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "paragon_chain",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "head",
            "type": [
                "str",
                "duniterpy.documents.transaction.Transaction",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "clique",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "snapshot",
            "type": [
                "eth.consensus.clique.datatypes.Snapshot",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "ALICE_PK",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "BOB",
            "type": [
                "list[bytes]",
                "tuple[typing.Union[str,int]]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "RON",
            "type": [
                "dict[str, str]",
                "bytes",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_revert_previous_nominate",
            "type": [
                "None"
            ]
        }
    ],
    "test_validate_chain_works_across_forks@global": [
        {
            "category": "arg",
            "name": "paragon_chain",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "paragon_chain",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "voting_chain",
            "type": [
                "nucypher.blockchain.eth.agents.MinerAgent"
            ]
        },
        {
            "category": "local",
            "name": "PARAGON_GENESIS_HEADER",
            "type": [
                "eth.rlp.headers.BlockHeader",
                "bytes",
                "dict[str, bytes]"
            ]
        },
        {
            "category": "return",
            "name": "test_validate_chain_works_across_forks",
            "type": [
                "None"
            ]
        }
    ],
    "validate_seal_and_get_snapshot@global": [
        {
            "category": "arg",
            "name": "clique",
            "type": [
                "eth.abc.BlockHeaderAPI",
                "bytes",
                "eth.rlp.headers.BlockHeader"
            ]
        },
        {
            "category": "arg",
            "name": "header",
            "type": [
                "eth.abc.BlockHeaderAPI",
                "bytes",
                "eth.rlp.headers.BlockHeader"
            ]
        },
        {
            "category": "local",
            "name": "clique",
            "type": [
                "eth.abc.BlockHeaderAPI",
                "bytes",
                "eth.rlp.headers.BlockHeader"
            ]
        },
        {
            "category": "local",
            "name": "header",
            "type": [
                "eth.abc.BlockHeaderAPI",
                "bytes",
                "eth.rlp.headers.BlockHeader"
            ]
        },
        {
            "category": "return",
            "name": "validate_seal_and_get_snapshot",
            "type": [
                "str",
                "typing.Mapping",
                "dict[str, typing.Any]",
                "list[typing.Any]"
            ]
        }
    ]
}