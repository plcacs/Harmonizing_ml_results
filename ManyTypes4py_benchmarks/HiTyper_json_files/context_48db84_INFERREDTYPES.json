{
    "__init__@AbstractContext": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "tuple",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "tuple",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "predefined_names",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@CompForContext": [
        {
            "category": "arg",
            "name": "parent_context",
            "type": [
                "bool",
                "typing.Callable[Any,Any, bool]",
                "typing.Iterable"
            ]
        },
        {
            "category": "arg",
            "name": "comp_for",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "bool",
                "typing.Callable[Any,Any, bool]",
                "typing.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "comp_for",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "tree_node",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ValueContext": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "int",
                "str",
                "complex"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "int",
                "str",
                "complex"
            ]
        },
        {
            "category": "local",
            "name": "_value",
            "type": [
                "int",
                "str",
                "complex"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__repr__@CompForContext": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@ValueContext": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_check_for_additional_knowledge@AbstractContext": [
        {
            "category": "arg",
            "name": "name_or_str",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "name_context",
            "type": [
                "typing.Type",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "position",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "name_context",
            "type": [
                "typing.Type",
                "str",
                "int",
                "AbstractContext"
            ]
        },
        {
            "category": "local",
            "name": "name_or_str",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "flow_scope",
            "type": [
                "str",
                "typing.Type",
                "list[str]",
                "dict[typing.Any, str]"
            ]
        },
        {
            "category": "local",
            "name": "base_nodes",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_check_for_additional_knowledge",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "position",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int",
                "None"
            ]
        }
    ],
    "_get_global_filters_for_name@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "bool",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "name_or_none",
            "type": [
                "bool",
                "object",
                "None",
                "typing.Iterable[typing.Hashable]"
            ]
        },
        {
            "category": "arg",
            "name": "position",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "name_or_none",
            "type": [
                "bool",
                "object",
                "None",
                "typing.Iterable[typing.Hashable]"
            ]
        },
        {
            "category": "local",
            "name": "ancestor",
            "type": [
                "list",
                "frozenset",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "lambdef",
            "type": [
                "None",
                "list",
                "frozenset",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "position",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "bool",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_get_global_filters_for_name",
            "type": [
                "bool",
                "str",
                "list[str]",
                "None"
            ]
        }
    ],
    "code_lines@ModuleContext": [
        {
            "category": "return",
            "name": "code_lines",
            "type": []
        }
    ],
    "create_context@TreeContextMixin": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "scope_node",
            "type": [
                "list",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "colon",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "create_context",
            "type": [
                "bool",
                "typing.Sized"
            ]
        }
    ],
    "create_name@TreeContextMixin": [
        {
            "category": "arg",
            "name": "tree_name",
            "type": [
                "str",
                "None",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "tree_name",
            "type": [
                "str",
                "None",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "definition",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "funcdef",
            "type": [
                "bool",
                "dict[str, bool]",
                "list[None]"
            ]
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "typing.Callable[None, None]"
            ]
        },
        {
            "category": "return",
            "name": "create_name",
            "type": [
                "AnonymousParamName",
                "TreeNameDefinition"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dict[str, dict]"
            ]
        }
    ],
    "create_value@TreeContextMixin": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "return",
            "name": "create_value",
            "type": [
                "str",
                "int",
                "float",
                "typing.Callable",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "typing.Callable",
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "class_value",
            "type": [
                "int",
                "list",
                "None",
                "float"
            ]
        }
    ],
    "from_scope_node@TreeContextMixin": [
        {
            "category": "arg",
            "name": "scope_node",
            "type": []
        },
        {
            "category": "arg",
            "name": "is_nested",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "from_scope_node",
            "type": [
                "TreeContextMixin",
                "CompForContext"
            ]
        }
    ],
    "get_filters@AbstractContext": [
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "None",
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "bool",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "None"
            ]
        }
    ],
    "get_filters@ClassContext": [
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "until_position",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "origin_scope",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "get_filters@CompForContext": [
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "None",
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "bool",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "typing.Generator[ParserTreeFilter]"
            ]
        }
    ],
    "get_filters@CompiledContext": [
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "None",
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "bool",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "get_filters@FunctionContext": [
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "None",
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "until_position",
            "type": [
                "None",
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "origin_scope",
            "type": [
                "None",
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "typing.Generator[ParserTreeFilter]"
            ]
        }
    ],
    "get_filters@ModuleContext": [
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "origin_scope",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "filters",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "until_position",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "typing.Generator[MergedFilter]",
                "typing.Generator[typing.Union[list,str]]"
            ]
        }
    ],
    "get_filters@NamespaceContext": [
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "None",
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "bool",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "get_global_filter@ClassContext": [
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "None",
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "None",
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "until_position",
            "type": [
                "None",
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "origin_scope",
            "type": [
                "None",
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "get_global_filter",
            "type": [
                "ParserTreeFilter"
            ]
        }
    ],
    "get_global_filter@ModuleContext": [
        {
            "category": "return",
            "name": "get_global_filter",
            "type": [
                "GlobalNameFilter"
            ]
        }
    ],
    "get_global_filters@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dict[str, str]",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "until_position",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "origin_scope",
            "type": [
                "int",
                "str",
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dict[str, str]",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "base_context",
            "type": [
                "dict[str, str]",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "until_position",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "origin_scope",
            "type": [
                "int",
                "str",
                "None",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "get_global_filters",
            "type": [
                "typing.Generator",
                "typing.Generator[typing.Union[str,int,dict]]"
            ]
        },
        {
            "category": "local",
            "name": "b",
            "type": [
                "str",
                "int",
                "dict"
            ]
        }
    ],
    "get_qualified_names@AbstractContext": [
        {
            "category": "return",
            "name": "get_qualified_names",
            "type": [
                "tuple"
            ]
        }
    ],
    "get_qualified_names@ValueContext": [
        {
            "category": "return",
            "name": "get_qualified_names",
            "type": [
                "str"
            ]
        }
    ],
    "get_root_context@AbstractContext": [
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "dict[str, typing.Union[bool,None]]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_root_context",
            "type": [
                "AbstractContext",
                "str",
                "None",
                "dict"
            ]
        }
    ],
    "get_value@AbstractContext": [
        {
            "category": "return",
            "name": "get_value",
            "type": [
                "None"
            ]
        }
    ],
    "get_value@CompForContext": [
        {
            "category": "return",
            "name": "get_value",
            "type": [
                "None"
            ]
        }
    ],
    "get_value@CompiledModuleContext": [
        {
            "category": "return",
            "name": "get_value",
            "type": []
        }
    ],
    "get_value@ModuleContext": [
        {
            "category": "return",
            "name": "get_value",
            "type": []
        }
    ],
    "get_value@NamespaceContext": [
        {
            "category": "return",
            "name": "get_value",
            "type": []
        }
    ],
    "get_value@ValueContext": [
        {
            "category": "return",
            "name": "get_value",
            "type": []
        }
    ],
    "global@global": [],
    "goto@AbstractContext": [
        {
            "category": "arg",
            "name": "name_or_str",
            "type": [
                "str",
                "None",
                "Name"
            ]
        },
        {
            "category": "arg",
            "name": "position",
            "type": [
                "str",
                "None",
                "Name"
            ]
        },
        {
            "category": "local",
            "name": "name_or_str",
            "type": [
                "str",
                "None",
                "Name"
            ]
        },
        {
            "category": "local",
            "name": "position",
            "type": [
                "str",
                "None",
                "Name"
            ]
        },
        {
            "category": "local",
            "name": "filters",
            "type": [
                "str",
                "list[tuple[typing.Any]]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "goto",
            "type": []
        }
    ],
    "infer_node@TreeContextMixin": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "return",
            "name": "infer_node",
            "type": []
        }
    ],
    "is_bound_method@AbstractContext": [
        {
            "category": "return",
            "name": "is_bound_method",
            "type": [
                "bool"
            ]
        }
    ],
    "is_bound_method@ValueContext": [
        {
            "category": "return",
            "name": "is_bound_method",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "is_builtins_module@AbstractContext": [
        {
            "category": "return",
            "name": "is_builtins_module",
            "type": [
                "bool"
            ]
        }
    ],
    "is_builtins_module@ValueContext": [
        {
            "category": "return",
            "name": "is_builtins_module",
            "type": [
                "bool"
            ]
        }
    ],
    "is_class@AbstractContext": [
        {
            "category": "return",
            "name": "is_class",
            "type": [
                "bool"
            ]
        }
    ],
    "is_class@ValueContext": [
        {
            "category": "return",
            "name": "is_class",
            "type": [
                "bool"
            ]
        }
    ],
    "is_compiled@AbstractContext": [
        {
            "category": "return",
            "name": "is_compiled",
            "type": [
                "bool"
            ]
        }
    ],
    "is_compiled@ValueContext": [
        {
            "category": "return",
            "name": "is_compiled",
            "type": [
                "bool"
            ]
        }
    ],
    "is_instance@AbstractContext": [
        {
            "category": "return",
            "name": "is_instance",
            "type": [
                "bool"
            ]
        }
    ],
    "is_instance@ValueContext": [
        {
            "category": "return",
            "name": "is_instance",
            "type": [
                "bool"
            ]
        }
    ],
    "is_module@AbstractContext": [
        {
            "category": "return",
            "name": "is_module",
            "type": [
                "bool"
            ]
        }
    ],
    "is_module@ValueContext": [
        {
            "category": "return",
            "name": "is_module",
            "type": [
                "bool"
            ]
        }
    ],
    "is_stub@AbstractContext": [
        {
            "category": "return",
            "name": "is_stub",
            "type": [
                "bool"
            ]
        }
    ],
    "is_stub@ValueContext": [
        {
            "category": "return",
            "name": "is_stub",
            "type": [
                "bool"
            ]
        }
    ],
    "name@AbstractContext": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "None"
            ]
        }
    ],
    "name@ValueContext": [
        {
            "category": "return",
            "name": "name",
            "type": []
        }
    ],
    "parent_context@ValueContext": [
        {
            "category": "return",
            "name": "parent_context",
            "type": []
        }
    ],
    "parent_scope@TreeContextMixin": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "return",
            "name": "parent_scope",
            "type": []
        }
    ],
    "predefine_names@AbstractContext": [
        {
            "category": "arg",
            "name": "flow_scope",
            "type": [
                "str",
                "list[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "dct",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "dct",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "flow_scope",
            "type": [
                "str",
                "list[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "predefine_names",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "py__doc__@AbstractContext": [
        {
            "category": "return",
            "name": "py__doc__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "py__doc__@ValueContext": [
        {
            "category": "return",
            "name": "py__doc__",
            "type": [
                "str",
                "typing.IO"
            ]
        }
    ],
    "py__file__@CompiledModuleContext": [
        {
            "category": "return",
            "name": "py__file__",
            "type": [
                "pathlib.Path"
            ]
        }
    ],
    "py__file__@ModuleContext": [
        {
            "category": "return",
            "name": "py__file__",
            "type": [
                "pathlib.Path"
            ]
        }
    ],
    "py__file__@NamespaceContext": [
        {
            "category": "return",
            "name": "py__file__",
            "type": [
                "pathlib.Path"
            ]
        }
    ],
    "py__getattribute__@AbstractContext": [
        {
            "category": "arg",
            "name": "name_or_str",
            "type": [
                "bool",
                "typing.Type",
                "typing.Sequence[typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "name_context",
            "type": [
                "None",
                "str",
                "typing.Type",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "position",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "analysis_errors",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "name_context",
            "type": [
                "None",
                "str",
                "typing.Type",
                "int",
                "AbstractContext",
                "typing.Generator[typing.Optional[typing.Type]]"
            ]
        },
        {
            "category": "local",
            "name": "name_or_str",
            "type": [
                "bool",
                "typing.Type",
                "typing.Sequence[typing.Any]",
                "None",
                "Name"
            ]
        },
        {
            "category": "local",
            "name": "position",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "string_name",
            "type": [
                "bool",
                "typing.Type",
                "typing.Sequence[typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "found_predefined_types",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "bool",
                "typing.Type",
                "typing.Sequence[typing.Any]",
                "None",
                "Name"
            ]
        },
        {
            "category": "local",
            "name": "check",
            "type": [
                "flow_analysis_@_UNREACHABLE",
                "str",
                "dict[str, dict]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "analysis_errors",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "py__getattribute__",
            "type": [
                "None",
                "str"
            ]
        }
    ],
    "py__name__@AbstractContext": [
        {
            "category": "return",
            "name": "py__name__",
            "type": [
                "None"
            ]
        }
    ],
    "py__name__@CompForContext": [
        {
            "category": "return",
            "name": "py__name__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "py__name__@ValueContext": [
        {
            "category": "return",
            "name": "py__name__",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "string_names@CompiledModuleContext": [
        {
            "category": "return",
            "name": "string_names",
            "type": []
        }
    ],
    "string_names@ModuleContext": [
        {
            "category": "return",
            "name": "string_names",
            "type": []
        }
    ],
    "string_names@NamespaceContext": [
        {
            "category": "return",
            "name": "string_names",
            "type": []
        }
    ],
    "tree_node@ValueContext": [
        {
            "category": "return",
            "name": "tree_node",
            "type": []
        }
    ]
}