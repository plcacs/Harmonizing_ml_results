{
    "catalog_path@TestCatalogCreateCommand": [
        {
            "category": "arg",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_repo_path",
            "type": []
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "catalog_path",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "fake_catalog_config@global": [
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "return",
            "name": "fake_catalog_config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        }
    ],
    "fake_catalog_config_resolved@global": [
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Text]]]]"
            ]
        },
        {
            "category": "return",
            "name": "fake_catalog_config_resolved",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Text]]]]"
            ]
        }
    ],
    "fake_catalog_config_with_factories@global": [
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "bool",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]]]]]"
            ]
        },
        {
            "category": "return",
            "name": "fake_catalog_config_with_factories",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]]]]]"
            ]
        }
    ],
    "fake_catalog_config_with_factories_resolved@global": [
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]]]]]"
            ]
        },
        {
            "category": "return",
            "name": "fake_catalog_config_with_factories_resolved",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]]]]]"
            ]
        }
    ],
    "fake_catalog_with_overlapping_factories@global": [
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "return",
            "name": "fake_catalog_with_overlapping_factories",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        }
    ],
    "fake_credentials_config@global": [
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "str",
                "bytes",
                "int",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "fake_credentials_config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        }
    ],
    "fake_load_context@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "return",
            "name": "fake_load_context",
            "type": []
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "typing.Text",
                "str"
            ]
        }
    ],
    "identity@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "list[int]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "list[int]",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "identity",
            "type": [
                "list[int]",
                "bytes"
            ]
        }
    ],
    "mock_pipelines@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "dummy_pipelines",
            "type": [
                "dict[str, ]"
            ]
        },
        {
            "category": "return",
            "name": "mock_pipelines",
            "type": []
        }
    ],
    "test_bad_env@TestCatalogCreateCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cmd",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "test_bad_env",
            "type": [
                "None"
            ]
        }
    ],
    "test_catalog_is_created_in_base_by_default@TestCatalogCreateCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli_parametrized",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_repo_path",
            "type": []
        },
        {
            "category": "arg",
            "name": "catalog_path",
            "type": []
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli_parametrized",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "expected_catalog_config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "return",
            "name": "test_catalog_is_created_in_base_by_default",
            "type": [
                "None"
            ]
        }
    ],
    "test_catalog_is_created_in_correct_env@TestCatalogCreateCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli_parametrized",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "catalog_path",
            "type": []
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli_parametrized",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_catalog_is_created_in_correct_env",
            "type": [
                "None"
            ]
        }
    ],
    "test_catalog_resolve@TestCatalogFactoryCommands": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_load_context",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "mock_pipelines",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_catalog_config",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "arg",
            "name": "fake_catalog_config_resolved",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_credentials_config",
            "type": []
        },
        {
            "category": "arg",
            "name": "catalog_type",
            "type": []
        },
        {
            "category": "local",
            "name": "fake_catalog_config",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "mocked_context_",
            "type": [
                "dict[typing.Text, kata.data.io.network.GithubApi]"
            ]
        },
        {
            "category": "local",
            "name": "placeholder_ds",
            "type": [
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "pipeline_datasets",
            "type": [
                "set[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_catalog_resolve",
            "type": [
                "None"
            ]
        }
    ],
    "test_catalog_resolve_nested_config@TestCatalogFactoryCommands": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_load_context",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "mock_pipelines",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_catalog_config_with_factories",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_catalog_config_with_factories_resolved",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "arg",
            "name": "catalog_type",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "mocked_context_",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "catalog_type",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_catalog_resolve_nested_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_default_dataset@TestCatalogListCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli_parametrized",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "fake_load_context",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "mock_pipelines",
            "type": []
        },
        {
            "category": "arg",
            "name": "catalog_type",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "catalog_datasets",
            "type": [
                "dict[typing.Text, CSVDataset]"
            ]
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli_parametrized",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "expected_dict",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, list[typing.Text]]]]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_default_dataset",
            "type": [
                "None"
            ]
        }
    ],
    "test_list_all_pipelines@TestCatalogListCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli_parametrized",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "expected_dict",
            "type": [
                "dict[typing.Text, dict]"
            ]
        },
        {
            "category": "return",
            "name": "test_list_all_pipelines",
            "type": [
                "None"
            ]
        }
    ],
    "test_list_factory_generated_datasets@TestCatalogListCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli_parametrized",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "fake_load_context",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "mock_pipelines",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_catalog_config",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_credentials_config",
            "type": []
        },
        {
            "category": "arg",
            "name": "catalog_type",
            "type": []
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli_parametrized",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "expected_dict",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, list[typing.Text]]]]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_list_factory_generated_datasets",
            "type": [
                "None"
            ]
        }
    ],
    "test_list_specific_pipelines@TestCatalogListCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli_parametrized",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "expected_dict",
            "type": [
                "dict[typing.Text, dict]"
            ]
        },
        {
            "category": "return",
            "name": "test_list_specific_pipelines",
            "type": [
                "None"
            ]
        }
    ],
    "test_missing_datasets_appended@TestCatalogCreateCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "catalog_path",
            "type": []
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "catalog_config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "expected_catalog_config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "return",
            "name": "test_missing_datasets_appended",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_missing_datasets@TestCatalogCreateCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli_parametrized",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_load_context",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_repo_path",
            "type": []
        },
        {
            "category": "arg",
            "name": "mock_pipelines",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "arg",
            "name": "catalog_type",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "catalog_datasets",
            "type": [
                "dict[typing.Text, CSVDataset]"
            ]
        },
        {
            "category": "local",
            "name": "mock_pipelines",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_no_missing_datasets",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_param_datasets_in_resolve@TestCatalogFactoryCommands": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_load_context",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "mock_pipelines",
            "type": []
        },
        {
            "category": "arg",
            "name": "catalog_type",
            "type": []
        },
        {
            "category": "local",
            "name": "catalog_config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "catalog_datasets",
            "type": [
                "dict[typing.Text, typing.Union[CSVDataset,MemoryDataset]]"
            ]
        },
        {
            "category": "local",
            "name": "mocked_context_",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_no_param_datasets_in_resolve",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_param_datasets_in_respose@TestCatalogListCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli_parametrized",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "fake_load_context",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "mock_pipelines",
            "type": []
        },
        {
            "category": "arg",
            "name": "catalog_type",
            "type": []
        },
        {
            "category": "local",
            "name": "catalog_datasets",
            "type": [
                "dict[typing.Text, typing.Union[CSVDataset,MemoryDataset]]"
            ]
        },
        {
            "category": "local",
            "name": "PIPELINE_NAME",
            "type": [
                "str",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli_parametrized",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "expected_dict",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, list[typing.Text]]]]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_no_param_datasets_in_respose",
            "type": [
                "None"
            ]
        }
    ],
    "test_not_found_pipeline@TestCatalogCreateCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli_parametrized",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "mock_pipelines",
            "type": []
        },
        {
            "category": "local",
            "name": "existing_pipelines",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expected_output",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_not_found_pipeline",
            "type": [
                "None"
            ]
        }
    ],
    "test_not_found_pipeline@TestCatalogListCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli_parametrized",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "local",
            "name": "expected_output",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_not_found_pipeline",
            "type": [
                "None"
            ]
        }
    ],
    "test_pipeline_argument_is_required@TestCatalogCreateCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli_parametrized",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli_parametrized",
            "type": [
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "expected_output",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_pipeline_argument_is_required",
            "type": [
                "None"
            ]
        }
    ],
    "test_rank_catalog_factories@TestCatalogFactoryCommands": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_load_context",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_catalog_with_overlapping_factories",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "arg",
            "name": "catalog_type",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "catalog_type",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "fake_catalog_with_overlapping_factories",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "expected_patterns_sorted",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "test_rank_catalog_factories",
            "type": [
                "None"
            ]
        }
    ],
    "test_rank_catalog_factories_with_no_factories@TestCatalogFactoryCommands": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_load_context",
            "type": []
        },
        {
            "category": "arg",
            "name": "catalog_type",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "catalog_datasets",
            "type": [
                "dict[typing.Text, typing.Union[CSVDataset,MemoryDataset]]"
            ]
        },
        {
            "category": "local",
            "name": "expected_output",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_rank_catalog_factories_with_no_factories",
            "type": [
                "None"
            ]
        }
    ]
}