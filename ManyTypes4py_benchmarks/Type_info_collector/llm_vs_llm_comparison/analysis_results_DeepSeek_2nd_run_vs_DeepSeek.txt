SEMANTIC TYPE COMPARISON ANALYSIS - DEEPSEEK_2ND_RUN_VS_DEEPSEEK
Generated from: llm_vs_llm_comparison_DeepSeek_2nd_run_vs_DeepSeek.json
================================================================================

============================================================
LLM PERFORMANCE ASSESSMENT - DEEPSEEK_2ND_RUN_VS_DEEPSEEK
============================================================
Total type comparisons: 51818
String matches: 48252 (93.12%)
Semantic matches: 49983 (96.46%)
Semantic-only matches: 1735 (3.35%)
Improvement with semantic matching: 1731 (3.34%)

============================================================
FILE-LEVEL ANALYSIS (Top 20 files by improvement)
============================================================
Filename                                           Total  String%  Semantic%  Improvement%
-------------------------------------------------- ------ -------- ---------- ------------
masked_reductions_91c9b6.py                        20     0.00     95.00      95.00       
missing_a60b28.py                                  40     20.00    95.00      75.00       
media_player_4a0667.py                             28     35.71    100.00     64.29       
test_init_75a7d5.py                                19     36.84    100.00     63.16       
cover_1e7e0c.py                                    28     39.29    100.00     60.71       
base_7f1c49.py                                     47     36.17    91.49      55.32       
cover_860401.py                                    22     50.00    100.00     50.00       
mi_fgsm_09ba33.py                                  20     50.00    100.00     50.00       
test_incremental_schema_fd049d.py                  12     50.00    100.00     50.00       
test_on_attestation_3db217.py                      29     51.72    100.00     48.28       
test_project_1f989e.py                             21     52.38    100.00     47.62       
test_network_2464cc.py                             72     52.78    100.00     47.22       
executor_d0527f.py                                 34     50.00    97.06      47.06       
numba__13f34f.py                                   52     50.00    96.15      46.15       
test_stat_reductions_69f5b2.py                     18     44.44    88.89      44.44       
test_process_participation_flag_updates_24798c.py  34     52.94    97.06      44.12       
__init___93171f.py                                 33     57.58    100.00     42.42       
rewards_039ecf.py                                  38     42.11    84.21      42.11       
metrics_edd6bd.py                                  49     59.18    100.00     40.82       
__init___4c124d.py                                 15     60.00    100.00     40.00       

============================================================
FILE-LEVEL ANALYSIS (Bottom 20 files by improvement)
============================================================
Filename                                           Total  String%  Semantic%  Improvement%
-------------------------------------------------- ------ -------- ---------- ------------
nlp_fe0862.py                                      57     100.00   100.00     0.00        
freqai_test_strat_0dc220.py                        44     100.00   100.00     0.00        
conftest_81d476.py                                 20     100.00   100.00     0.00        
sorting_5bda3c.py                                  24     100.00   100.00     0.00        
image_processing_dff0c0.py                         26     100.00   100.00     0.00        
create_user_36a545.py                              41     100.00   100.00     0.00        
__init___81f696.py                                 34     100.00   100.00     0.00        
_mass_scanner_653188.py                            19     100.00   100.00     0.00        
cover_cd851c.py                                    16     100.00   100.00     0.00        
html_branches_9ad2ad.py                            16     100.00   100.00     0.00        
numbers_5dcc4a.py                                  23     82.61    82.61      0.00        
auth_0ecea0.py                                     6      100.00   100.00     0.00        
utils_9c5ea6.py                                    43     100.00   100.00     0.00        
predict_test_f04e35.py                             26     100.00   100.00     0.00        
appengine_d9dc66.py                                45     100.00   100.00     0.00        
__init___caf114.py                                 18     100.00   100.00     0.00        
alarm_control_panel_397cee.py                      24     100.00   100.00     0.00        
freshness_735399.py                                92     95.65    95.65      0.00        
debias_0a65ea.py                                   38     100.00   100.00     0.00        
events_5936f7.py                                   21     85.71    80.95      -4.76       

============================================================
CATEGORY-WISE ANALYSIS
============================================================
ARG            : 37316 total | String:  93.74% | Semantic:  96.98% | Improvement:   3.23%
RETURN         : 14502 total | String:  91.51% | Semantic:  95.12% | Improvement:   3.61%

============================================================
TYPE COMPLEXITY ANALYSIS
============================================================
UNION          :  2031 total | String:  71.49% | Semantic:  91.19% | Improvement:  19.69%
SIMPLE         : 34681 total | String:  96.37% | Semantic:  98.03% | Improvement:   1.67%
SUBSCRIPT      :  2183 total | String:  76.36% | Semantic:  84.56% | Improvement:   8.20%
GENERIC        :  6187 total | String:  88.31% | Semantic:  93.02% | Improvement:   4.70%
OPTIONAL       :  6736 total | String:  92.76% | Semantic:  96.96% | Improvement:   4.20%

============================================================
TOP 10 STRING MATCH ERRORS
============================================================
  60: String mismatch: str vs StrPath
  39: String mismatch: Optional[str] vs str
  39: String mismatch: str | None vs Optional[str]
  38: String mismatch: Dict[str, str] vs Dict[str, Any]
  36: String mismatch: Generator[None, None, None] vs Iterator[None]
  35: String mismatch: Key vs bytes
  30: String mismatch: str vs Optional[str]
  30: String mismatch: pd.api.extensions.ExtensionArray vs pd.Series
  28: String mismatch: Dict vs Dict[str, Any]
  26: String mismatch: Dict[SensorT, Dict[str, Any]] vs StateT

============================================================
TOP 10 SEMANTIC MATCH ERRORS
============================================================
  60: Semantic mismatch: str vs StrPath
  36: Semantic mismatch: Generator[None, None, None] vs Iterator[None]
  35: Semantic mismatch: Key vs bytes
  26: Semantic mismatch: Dict[SensorT, Dict[str, Any]] vs StateT
  22: Semantic mismatch: List[Dict[str, Any]] vs List[ZerverFieldsT]
  21: Semantic mismatch: str vs Path
  21: Semantic mismatch: Value vs bytes
  18: Semantic mismatch: Optional[Position] vs Optional[Tuple[int, int]]
  18: Semantic mismatch: _Deco vs Callable[[T], T]
  16: Semantic mismatch: List[float] vs npt.NDArray[Any]
