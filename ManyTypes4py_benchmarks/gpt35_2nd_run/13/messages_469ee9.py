def result_message(iden: int, result: Any = None) -> dict:
    ...

def construct_result_message(iden: int, payload: bytes) -> bytes:
    ...

def error_message(iden: int, code: str, message: str, translation_key: str = None, translation_domain: str = None, translation_placeholders: dict = None) -> dict:
    ...

def event_message(iden: int, event: Event) -> dict:
    ...

def cached_event_message(message_id_as_bytes: bytes, event: Event) -> bytes:
    ...

def _partial_cached_event_message(event: Event) -> bytes:
    ...

def cached_state_diff_message(message_id_as_bytes: bytes, event: Event) -> bytes:
    ...

def _partial_cached_state_diff_message(event: Event) -> bytes:
    ...

def _state_diff_event(event: Event) -> dict:
    ...

def _message_to_json_bytes_or_none(message: dict) -> bytes:
    ...

def message_to_json_bytes(message: dict) -> bytes:
    ...
