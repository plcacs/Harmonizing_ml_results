def get_latest_optimize_filename(directory: str, variant: Literal['backtest', 'hyperopt']) -> str:
    ...

def get_latest_backtest_filename(directory: str) -> str:
    ...

def get_latest_hyperopt_filename(directory: str) -> str:
    ...

def get_latest_hyperopt_file(directory: str, predef_filename: str = None) -> str:
    ...

def load_backtest_metadata(filename: Path) -> dict:
    ...

def load_backtest_stats(filename: Path) -> dict:
    ...

def load_and_merge_backtest_result(strategy_name: str, filename: Path, results: dict) -> None:
    ...

def get_backtest_result(filename: Path) -> list:
    ...

def get_backtest_resultlist(dirname: Path) -> list:
    ...

def delete_backtest_result(file_abs: Path) -> None:
    ...

def update_backtest_metadata(filename: Path, strategy: str, content: dict) -> None:
    ...

def get_backtest_market_change(filename: Path, include_ts: bool = True) -> pd.DataFrame:
    ...

def find_existing_backtest_stats(dirname: Path, run_ids: dict, min_backtest_date: datetime = None) -> dict:
    ...

def load_backtest_data(filename: Path, strategy: str = None) -> pd.DataFrame:
    ...

def load_file_from_zip(zip_path: Path, filename: str) -> bytes:
    ...

def load_backtest_analysis_data(backtest_dir: Path, name: str) -> Any:
    ...

def load_rejected_signals(backtest_dir: Path) -> Any:
    ...

def load_signal_candles(backtest_dir: Path) -> Any:
    ...

def load_exit_signal_candles(backtest_dir: Path) -> Any:
    ...

def analyze_trade_parallelism(results: pd.DataFrame, timeframe: str) -> pd.DataFrame:
    ...

def evaluate_result_multi(results: pd.DataFrame, timeframe: str, max_open_trades: int) -> pd.DataFrame:
    ...

def trade_list_to_dataframe(trades: list) -> pd.DataFrame:
    ...

def load_trades_from_db(db_url: str, strategy: str = None) -> pd.DataFrame:
    ...

def load_trades(source: str, db_url: str, exportfilename: str, no_trades: bool = False, strategy: str = None) -> pd.DataFrame:
    ...

def extract_trades_of_period(dataframe: pd.DataFrame, trades: pd.DataFrame, date_index: bool = False) -> pd.DataFrame:
    ...
