def _trim_traceback(tb: Optional[TracebackType], remove_modules: Iterable[ModuleType]) -> Optional[TracebackType]:
    ...

def exception_traceback(exc: Exception) -> str:
    ...

class PrefectException(Exception):
    ...

class CrashedRun(PrefectException):
    ...

class FailedRun(PrefectException):
    ...

class CancelledRun(PrefectException):
    ...

class PausedRun(PrefectException):
    ...

    def __init__(self, *args, state: Optional['State'] = None, **kwargs):
        ...

class UnfinishedRun(PrefectException):
    ...

class MissingFlowError(PrefectException):
    ...

class UnspecifiedFlowError(PrefectException):
    ...

class MissingResult(PrefectException):
    ...

class ScriptError(PrefectException):
    ...

    def __init__(self, user_exc: Exception, path: str):
        ...

class ParameterTypeError(PrefectException):
    ...

    @classmethod
    def from_validation_error(cls, exc: ValidationError) -> 'ParameterTypeError':
        ...

class ParameterBindError(TypeError, PrefectException):
    ...

    @classmethod
    def from_bind_failure(cls, fn: Callable, exc: Exception, call_args: Any, call_kwargs: Any) -> 'ParameterBindError':
        ...

class SignatureMismatchError(PrefectException, TypeError):
    ...

    @classmethod
    def from_bad_params(cls, expected_params: Any, provided_params: Any) -> 'SignatureMismatchError':
        ...

class ObjectNotFound(PrefectException):
    ...

    def __init__(self, http_exc: HTTPStatusError, help_message: Optional[str] = None, *args, **kwargs):
        ...

class ObjectAlreadyExists(PrefectException):
    ...

    def __init__(self, http_exc: HTTPStatusError, *args, **kwargs):
        ...

class UpstreamTaskError(PrefectException):
    ...

class MissingContextError(PrefectException, RuntimeError):
    ...

class MissingProfileError(PrefectException, ValueError):
    ...

class ReservedArgumentError(PrefectException, TypeError):
    ...

class InvalidNameError(PrefectException, ValueError):
    ...

class PrefectSignal(BaseException):
    ...

class Abort(PrefectSignal):
    ...

class Pause(PrefectSignal):
    ...

    def __init__(self, *args, state: Optional['State'] = None, **kwargs):
        ...

class ExternalSignal(BaseException):
    ...

class TerminationSignal(ExternalSignal):
    ...

    def __init__(self, signal: Any):
        ...

class PrefectHTTPStatusError(HTTPStatusError):
    ...

    @classmethod
    def from_httpx_error(cls, httpx_error: HTTPStatusError) -> 'PrefectHTTPStatusError':
        ...

class MappingLengthMismatch(PrefectException):
    ...

class MappingMissingIterable(PrefectException):
    ...

class BlockMissingCapabilities(PrefectException):
    ...

class ProtectedBlockError(PrefectException):
    ...

class InvalidRepositoryURLError(PrefectException):
    ...

class InfrastructureError(PrefectException):
    ...

class InfrastructureNotFound(PrefectException):
    ...

class InfrastructureNotAvailable(PrefectException):
    ...

class NotPausedError(PrefectException):
    ...

class FlowPauseTimeout(PrefectException):
    ...

class FlowRunWaitTimeout(PrefectException):
    ...

class PrefectImportError(ImportError):
    ...

    def __init__(self, message: str):
        ...

class SerializationError(PrefectException):
    ...

class ConfigurationError(PrefectException):
    ...

class ProfileSettingsValidationError(PrefectException):
    ...

    def __init__(self, errors: Any):
        ...

class HashError(PrefectException):
    ...
