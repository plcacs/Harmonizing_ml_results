from typing import Set

def get_class_fields_only(model: Any) -> Set[str]:
    ...

class PrefectDescriptorBase(ABC):
    ...

    @abstractmethod
    def __get__(self, __instance: Any, __owner: Any = None) -> Any:
        ...

class PrefectBaseModel(BaseModel):
    ...

    def __eq__(self, other: Any) -> bool:
        ...

    def __rich_repr__(self) -> RichReprResult:
        ...

    def reset_fields(self) -> PrefectBaseModel:
        ...

    def model_dump_for_orm(self, *, include=None, exclude=None, by_alias: bool = False, exclude_unset: bool = False, exclude_defaults: bool = False, exclude_none: bool = False) -> JsonDict:
        ...

def _ensure_fields_required(field_names: List[str], schema: JsonDict) -> None:
    ...

class IDBaseModel(PrefectBaseModel):
    ...

class ORMBaseModel(IDBaseModel):
    ...

class ActionBaseModel(PrefectBaseModel):
    ...
