from typing import Any, Dict, List, Set, Tuple, Union

class test_SetWindowSet:
    def __init__(self) -> None:
        ...

    def test_add(self, *, wset: SetWindowSet) -> None:
        ...

    def test_discard(self, *, wset: SetWindowSet) -> None:
        ...

    def test__apply_set_operation(self, *, wset: SetWindowSet, key: Any, table: Any, wrapper: Any) -> None:
        ...

class test_ChangeloggedSet:
    def __init__(self) -> None:
        ...

    def test_constructor(self, *, cset: ChangeloggedSet) -> None:
        ...

    def test_on_add(self, *, cset: ChangeloggedSet, manager: Any, key: Any) -> None:
        ...

    def test_on_discard(self, *, cset: ChangeloggedSet, manager: Any, key: Any) -> None:
        ...

    def test_on_change__diff(self, *, cset: ChangeloggedSet, manager: Any, key: Any) -> None:
        ...

    def test_on_change__update(self, *, cset: ChangeloggedSet, manager: Any, key: Any) -> None:
        ...

    def test_sync_from_storage(self, *, cset: ChangeloggedSet) -> None:
        ...

    def test_as_stored_value(self, *, cset: ChangeloggedSet) -> None:
        ...

    def test_apply_changelog_event__ADD(self, *, cset: ChangeloggedSet) -> None:
        ...

    def test_apply_changelog_event__DISCARD(self, *, cset: ChangeloggedSet) -> None:
        ...

    def test_apply_changelog_event__UPDATE(self, *, cset: ChangeloggedSet) -> None:
        ...

    def test_apply_changelog_event__not_implemented(self, *, cset: ChangeloggedSet) -> None:
        ...

class test_SetTableManager:
    def __init__(self) -> None:
        ...

    def test_constructor_enabled(self, *, app: Any, stable: Any) -> None:
        ...

    def test_constructor_disabled(self, *, app: Any, stable: Any) -> None:
        ...

    async def test_add(self, *, man: SetTableManager) -> None:
        ...

    async def test_discard(self, *, man: SetTableManager) -> None:
        ...

    async def test_clear(self, *, man: SetTableManager) -> None:
        ...

    async def test_difference_update(self, *, man: SetTableManager) -> None:
        ...

    async def test_intersection_update(self, *, man: SetTableManager) -> None:
        ...

    async def test_symmetric_difference_update(self, *, man: SetTableManager) -> None:
        ...

    def test__update(self, *, man: SetTableManager) -> None:
        ...

    def test__difference_update(self, *, man: SetTableManager) -> None:
        ...

    def test__clear(self, *, man: SetTableManager) -> None:
        ...

    def test__intersection_update(self, *, man: SetTableManager) -> None:
        ...

    def test__symmetric_difference_update(self, *, man: SetTableManager) -> None:
        ...

    async def test__send_operation__disabled(self, *, man: SetTableManager) -> None:
        ...

    async def test__send_operation__enabled(self, *, man: SetTableManager) -> None:
        ...

    async def test__send_operation__enabled__iterator(self, *, man: SetTableManager) -> None:
        ...

    async def test__modify_set(self, *, man: SetTableManager) -> None:
        ...

class test_SetTable:
    def __init__(self) -> None:
        ...

    def test_constructor__with_suffix(self, *, app: Any) -> None:
        ...

    def test_constructor__with_specific_name(self, *, app: Any) -> None:
        ...

    async def test_on_start(self, *, stable: Any) -> None:
        ...

    def test__new_store(self, *, stable: Any) -> None:
        ...

    def test__getitem__(self, *, stable: Any) -> None:
        ...
