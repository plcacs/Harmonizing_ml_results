def multi_device(test_method: Any) -> Any:
    ...

def requires_gpu(test_method: Any) -> Any:
    ...

def requires_multi_gpu(test_method: Any) -> Any:
    ...

def cpu_or_gpu(test_method: Any) -> Any:
    ...

def assert_metrics_values(metrics: Dict[str, Any], desired_values: Dict[str, Any], rtol: float = 0.0001, atol: float = 1e-05) -> None:
    ...

def global_distributed_metric(global_rank: int, world_size: int, gpu_id: int, metric: Metric, metric_kwargs: Dict[str, List[Any]], desired_values: Union[Dict[str, Any], Any], exact: Union[bool, Tuple[float, float]], number_of_runs: int = 1) -> None:
    ...

def assert_equal_parameters(old_module: torch.nn.Module, new_module: torch.nn.Module, ignore_missing: bool = False, mapping: Optional[Dict[str, str]] = None) -> Set[str]:
    ...
