from typing import Dict

def process_device(device_desc: str, aliases: Dict[str, str]) -> str:
    ...

def create_server_thread(filename: str, address: str, port: int, content_type: str, single_req: bool = False) -> Thread:
    ...

def process_url(ctx, param, value: str) -> str:
    ...

def process_path(ctx, param, value: str) -> Path:
    ...

def process_subtitles(ctx, param, value: str) -> str:
    ...

def fail_if_no_ip(ipaddr: str) -> None:
    ...

def cli(ctx, device: str) -> None:
    ...

def cast(settings, video_url: str, subtitles: str, force_default: bool, random_play: bool, no_subs: bool, no_playlist: bool, ytdl_option: str, seek_to: int, block: bool = False) -> None:
    ...

def cast_site(settings, url: str) -> None:
    ...

def add(settings, video_url: str, play_next: bool) -> None:
    ...

def remove(settings, video_url: str) -> None:
    ...

def clear(settings) -> None:
    ...

def pause(settings) -> None:
    ...

def play(settings) -> None:
    ...

def play_toggle(settings) -> None:
    ...

def stop(settings, force: bool) -> None:
    ...

def rewind(settings, timedesc: int) -> None:
    ...

def ffwd(settings, timedesc: int) -> None:
    ...

def seek(settings, timedesc: int) -> None:
    ...

def skip(settings) -> None:
    ...

def volume(settings, level: int) -> None:
    ...

def volumeup(settings, delta: int) -> None:
    ...

def volumedown(settings, delta: int) -> None:
    ...

def volumemute(settings, muted: bool) -> None:
    ...

def status(settings) -> None:
    ...

def info(settings, json_output: bool) -> None:
    ...

def scan(json_output: bool) -> None:
    ...

def save(settings, path: Path) -> None:
    ...

def restore(settings, path: Path) -> None:
    ...

def write_config() -> None:
    ...

def set_default(settings) -> None:
    ...

def del_default(settings) -> None:
    ...

def set_alias(settings, name: str) -> None:
    ...

def del_alias(settings) -> None:
    ...

def get_alias_from_config(config, device) -> str:
    ...

def get_device_from_settings(settings) -> str:
    ...

def writeconfig(config) -> None:
    ...

def readconfig() -> configparser.ConfigParser:
    ...

def get_config_as_dict() -> Dict[str, Dict[str, str]]:
    ...

def main() -> None:
    ...
