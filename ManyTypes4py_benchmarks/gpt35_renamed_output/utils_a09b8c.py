def get_sub_dependant(*, depends, dependency, path, name, security_scopes=None) -> Dependant:
    ...

def get_dependant(path, call, name, security_scopes, use_cache) -> Dependant:
    ...

def analyze_param(param_name, annotation, value, is_path_param) -> ParamDetails:
    ...

def add_non_field_param_to_dependency(param_name, type_annotation, dependant) -> bool:
    ...

def add_param_to_fields(field, dependant) -> None:
    ...

def get_typed_annotation(annotation, globalns) -> Any:
    ...

def request_params_to_args(fields, received_params) -> Tuple[Dict[str, Any], List[str]]:
    ...

def request_body_to_args(body_fields, received_body, embed_body_fields) -> Tuple[Dict[str, Any], List[str]]:
    ...

def create_body_model(fields, model_name) -> Type[BaseModel]:
    ...

def get_path_param_names(path) -> List[str]:
    ...
