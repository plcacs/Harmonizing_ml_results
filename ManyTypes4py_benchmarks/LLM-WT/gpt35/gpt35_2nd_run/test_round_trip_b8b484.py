from pathlib import Path
from typing import Any

def test_conv_read_write() -> None:
    ...

def test_long_strings(setup_path: Path) -> None:
    ...

def test_api(tmp_path: Path, setup_path: Path) -> None:
    ...

def test_api_append(tmp_path: Path, setup_path: Path) -> None:
    ...

def test_api_2(tmp_path: Path, setup_path: Path) -> None:
    ...

def test_api_invalid(tmp_path: Path, setup_path: Path) -> None:
    ...

def test_get(setup_path: Path) -> None:
    ...

def test_put_integer(setup_path: Path) -> None:
    ...

def test_table_values_dtypes_roundtrip(setup_path: Path, using_infer_string: Any) -> None:
    ...

def test_series(setup_path: Path) -> None:
    ...

def test_float_index(setup_path: Path) -> None:
    ...

def test_tuple_index(setup_path: Path, performance_warning: Any) -> None:
    ...

def test_index_types(setup_path: Path) -> None:
    ...

def test_timeseries_preepoch(setup_path: Path, request: Any) -> None:
    ...

def test_frame(compression: Any, setup_path: Path) -> None:
    ...

def test_empty_series_frame(setup_path: Path) -> None:
    ...

def test_empty_series(dtype: Any, setup_path: Path) -> None:
    ...

def test_can_serialize_dates(setup_path: Path) -> None:
    ...

def test_store_hierarchical(setup_path: Path, using_infer_string: Any, multiindex_dataframe_random_data: Any) -> None:
    ...

def test_store_mixed(compression: Any, setup_path: Path) -> None:
    ...

def _check_roundtrip(obj: Any, comparator: Any, path: Path, compression: Any = False, **kwargs: Any) -> None:
    ...

def _check_roundtrip_table(obj: Any, comparator: Any, path: Path, compression: Any = False) -> None:
    ...

def test_unicode_index(setup_path: Path) -> None:
    ...

def test_unicode_longer_encoded(setup_path: Path) -> None:
    ...

def test_store_datetime_mixed(setup_path: Path) -> None:
    ...

def test_round_trip_equals(tmp_path: Path, setup_path: Path) -> None:
    ...

def test_infer_string_columns(tmp_path: Path, setup_path: Path) -> None:
    ...
