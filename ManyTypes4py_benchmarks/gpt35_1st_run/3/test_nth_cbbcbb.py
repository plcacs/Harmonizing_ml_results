from typing import Any, Tuple, Union

def test_first_last_nth(df: DataFrame) -> None:
    ...

def test_first_last_with_na_object(method: str, nulls_fixture: Any) -> None:
    ...

def test_nth_with_na_object(index: int, nulls_fixture: Any) -> None:
    ...

def test_first_last_with_None(method: str) -> None:
    ...

def test_first_last_with_None_expanded(method: str, df: DataFrame, expected: DataFrame) -> None:
    ...

def test_first_last_nth_dtypes() -> None:
    ...

def test_first_last_nth_dtypes2() -> None:
    ...

def test_first_last_nth_nan_dtype() -> None:
    ...

def test_first_strings_timestamps() -> None:
    ...

def test_nth() -> None:
    ...

def test_nth2() -> None:
    ...

def test_nth3() -> None:
    ...

def test_nth4() -> None:
    ...

def test_nth5() -> None:
    ...

def test_nth_bdays(unit: str) -> None:
    ...

def test_nth_multi_grouper(three_group: DataFrame) -> None:
    ...

def test_first_last_tz(method: str, ts: Timestamp, alpha: str) -> None:
    ...

def test_first_last_tz_multi_column(method: str, ts: Timestamp, alpha: str, unit: str) -> None:
    ...

def test_first_last_extension_array_keeps_dtype(values: Any, function: str) -> None:
    ...

def test_nth_multi_index_as_expected() -> None:
    ...

def test_groupby_head_tail(op: str, n: int, expected_rows: List[int], columns: Union[None, List[str]], as_index: bool) -> None:
    ...

def test_group_selection_cache() -> None:
    ...

def test_nth_empty() -> None:
    ...

def test_nth_column_order() -> None:
    ...

def test_np_ints(slice_test_df: DataFrame, slice_test_grouped: DataFrame) -> None:
    ...

def test_groupby_nth_interval() -> None:
    ...

def test_head_tail_dropna_true() -> None:
    ...

def test_head_tail_dropna_false() -> None:
    ...

def test_nth_after_selection(selection: Union[str, List[str]], dropna: Union[str, None]) -> None:
    ...

def test_groupby_nth_int_like_precision(data: Tuple[Union[Timestamp, int], Union[Timestamp, int]]) -> None:
    ...
