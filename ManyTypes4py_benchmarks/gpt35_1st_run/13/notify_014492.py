def _load_config(filename: str) -> dict:
    ...

async def async_get_service(hass: HomeAssistant, config: ConfigType, discovery_info: DiscoveryInfoType = None) -> HTML5NotificationService:
    ...

class HTML5PushRegistrationView(HomeAssistantView):
    def __init__(self, registrations: dict, json_path: str) -> None:
        ...

    async def post(self, request: Request) -> Response:
        ...

    def find_registration_name(self, data: dict, suggested: str = None) -> str:
        ...

    async def delete(self, request: Request) -> Response:
        ...

class HTML5PushCallbackView(HomeAssistantView):
    def __init__(self, registrations: dict) -> None:
        ...

    def decode_jwt(self, token: str) -> Union[dict, Response]:
        ...

    def check_authorization_header(self, request: Request) -> Union[dict, Response]:
        ...

    async def post(self, request: Request) -> Response:
        ...

class HTML5NotificationService(BaseNotificationService):
    def __init__(self, hass: HomeAssistant, vapid_prv: str, vapid_email: str, registrations: dict, json_path: str) -> None:
        ...

    @property
    def targets(self) -> dict:
        ...

    def dismiss(self, **kwargs: Any) -> None:
        ...

    async def async_dismiss(self, **kwargs: Any) -> None:
        ...

    def send_message(self, message: str = '', **kwargs: Any) -> None:
        ...

    def _push_message(self, payload: dict, **kwargs: Any) -> None:
        ...

def add_jwt(timestamp: int, target: str, tag: str, jwt_secret: str) -> str:
    ...
