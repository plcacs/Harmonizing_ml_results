    def __call__(self, value: np.ndarray) -> bool:
        ...
    def __init__(self, deterministic: bool = True, proxy: bool = False, metrizable: bool = True):
        ...
    def set_clean_copy_environment_variable(cls, directory: str):
        ...
    def __init__(self, source: str, dir: str = None):
        ...
    def __call__(self, *args, **kwargs) -> str:
        ...
    def __init__(self, command: List[str], verbose: bool = False, cwd: Union[Path, str] = None, env: Dict[str, str] = None):
        ...
    def __call__(self, *args, **kwargs) -> str:
        ...
    def new(self, obj: Any) -> 'Subobjects':
        ...
    def items(self) -> Generator[Tuple[str, X], None, None]:
        ...
    def _get_subobject(self, obj: Any, key: str) -> Any:
        ...
    def apply(self, method: str, *args, **kwargs) -> Dict[str, Any]:
        ...
    def __call__(self, x: Union[bool, float, np.bool_, np.float64]) -> float:
        ...
    def __call__(self, *args, **kwargs) -> Any:
        ...
