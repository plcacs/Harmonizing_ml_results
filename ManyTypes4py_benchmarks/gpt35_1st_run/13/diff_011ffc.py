from typing import List, Tuple

def _is_indentation_error_leaf(node) -> bool:
    ...

def _get_previous_leaf_if_indentation(leaf) -> Leaf:
    ...

def _get_next_leaf_if_indentation(leaf) -> Leaf:
    ...

def _get_suite_indentation(tree_node) -> int:
    ...

def _get_indentation(tree_node) -> int:
    ...

def _assert_valid_graph(node) -> None:
    ...

def _assert_nodes_are_equal(node1, node2) -> None:
    ...

def _get_debug_error_message(module, old_lines, new_lines) -> str:
    ...

def _get_last_line(node_or_leaf) -> int:
    ...

def _skip_dedent_error_leaves(leaf) -> Leaf:
    ...

def _ends_with_newline(leaf, suffix='') -> bool:
    ...

def _flows_finished(pgen_grammar, stack) -> bool:
    ...

def _func_or_class_has_suite(node) -> bool:
    ...

def _suite_or_file_input_is_valid(pgen_grammar, stack) -> bool:
    ...

def _is_flow_node(node) -> bool:
    ...

def _update_positions(nodes, line_offset, last_leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int, last_leaf: Leaf) -> None:
    ...

def _update_positions(nodes: List[Node], line_offset: int