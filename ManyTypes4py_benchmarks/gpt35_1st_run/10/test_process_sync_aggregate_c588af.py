from typing import Iterator

def test_invalid_signature_bad_domain(spec, state) -> Iterator[None]:
    ...

def test_invalid_signature_missing_participant(spec, state) -> Iterator[None]:
    ...

def test_invalid_signature_no_participants(spec, state) -> Iterator[None]:
    ...

def test_invalid_signature_infinite_signature_with_all_participants(spec, state) -> Iterator[None]:
    ...

def test_invalid_signature_infinite_signature_with_single_participant(spec, state) -> Iterator[None]:
    ...

def test_invalid_signature_extra_participant(spec, state) -> Iterator[None]:
    ...

def is_duplicate_sync_committee(committee_indices) -> bool:
    ...

def test_sync_committee_rewards_nonduplicate_committee(spec, state) -> Iterator[None]:
    ...

def test_sync_committee_rewards_duplicate_committee_no_participation(spec, state) -> Iterator[None]:
    ...

def test_sync_committee_rewards_duplicate_committee_half_participation(spec, state) -> Iterator[None]:
    ...

def test_sync_committee_rewards_duplicate_committee_full_participation(spec, state) -> Iterator[None]:
    ...

def _run_sync_committee_selected_twice(spec, state, pre_balance, participate_first_position, participate_second_position, skip_reward_validation=False) -> int:
    ...

def test_sync_committee_rewards_duplicate_committee_zero_balance_only_participate_first_one(spec, state) -> Iterator[None]:
    ...

def test_sync_committee_rewards_duplicate_committee_zero_balance_only_participate_second_one(spec, state) -> Iterator[None]:
    ...

def test_sync_committee_rewards_duplicate_committee_max_effective_balance_only_participate_first_one(spec, state) -> Iterator[None]:
    ...

def test_sync_committee_rewards_duplicate_committee_max_effective_balance_only_participate_second_one(spec, state) -> Iterator[None]:
    ...

def test_sync_committee_rewards_not_full_participants(spec, state) -> Iterator[None]:
    ...

def test_sync_committee_rewards_empty_participants(spec, state) -> Iterator[None]:
    ...

def test_invalid_signature_past_block(spec, state) -> Iterator[None]:
    ...

def test_invalid_signature_previous_committee(spec, state) -> Iterator[None]:
    ...

def test_valid_signature_future_committee(spec, state) -> Iterator[None]:
    ...

def test_proposer_in_committee_without_participation(spec, state) -> Iterator[None]:
    ...

def test_proposer_in_committee_with_participation(spec, state) -> Iterator[None]:
    ...

def _exit_validator_from_committee_and_transition_state(spec, state, committee_indices, rng, target_epoch_provider, withdrawable_offset=1) -> int:
    ...

def test_sync_committee_with_participating_exited_member(spec, state) -> Iterator[None]:
    ...

def test_sync_committee_with_nonparticipating_exited_member(spec, state) -> Iterator[None]:
    ...

def test_sync_committee_with_participating_withdrawable_member(spec, state) -> Iterator[None]:
    ...

def test_sync_committee_with_nonparticipating_withdrawable_member(spec, state) -> Iterator[None]:
    ...
