from typing import Dict, Any, Union, List

def _generate_catalog(start_range: int, end_range: int, is_local: bool = False, is_versioned: bool = False, add_interpolation: bool = False) -> Dict[str, Dict[str, Union[str, bool]]]:
    ...

def _generate_params(start_range: int, end_range: int, is_local: bool = False, add_globals: bool = False) -> Dict[str, str]:
    ...

def _generate_globals(start_range: int, end_range: int, is_local: bool = False) -> Dict[str, str]:
    ...

def _create_config_file(conf_source: Path, env: str, file_name: str, data: Dict[str, Any]) -> None:
    ...

class TimeOmegaConfigLoader:
    def setup(self) -> None:
        ...

    def teardown(self) -> None:
        ...

    def time_loading_catalog(self) -> None:
        ...

    def time_loading_parameters(self) -> None:
        ...

    def time_loading_globals(self) -> None:
        ...

    def time_loading_parameters_runtime(self) -> None:
        ...

    def time_merge_soft_strategy(self) -> None:
        ...

class TimeOmegaConfigLoaderAdvanced:
    def setup(self) -> None:
        ...

    def teardown(self) -> None:
        ...

    def time_loading_catalog(self) -> None:
        ...

    def time_loading_parameters(self) -> None:
        ...
