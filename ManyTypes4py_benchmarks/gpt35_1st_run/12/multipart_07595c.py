from typing import Any, Dict, Tuple, Union

class MultipartResponseWrapper:
    def __init__(self, resp: 'ClientResponse', stream: 'MultipartReader') -> None: ...

class BodyPartReader:
    def __init__(self, boundary: str, headers: Dict[str, str], content: 'StreamReader', *,
                 subtype: str = 'mixed', default_charset: str = None) -> None: ...

def parse_content_disposition(header: str) -> Tuple[Union[str, None], Dict[str, str]]: ...

def content_disposition_filename(params: Dict[str, str], name: str = 'filename') -> Union[str, None]: ...

class MultipartReader:
    def __init__(self, headers: Dict[str, str], content: 'StreamReader') -> None: ...

class MultipartWriter:
    def __init__(self, subtype: str = 'mixed', boundary: str = None) -> None: ...
