def deep_update(*dicts: Mapping[str, Any]) -> Dict[str, Any]:
    ...

def lenient_issubclass(cls: Type, classinfo: Union[Type, Tuple[Type, ...]]) -> bool:
    ...

def path_type(path: Path) -> str:
    ...

def sequence_like(obj: Any) -> bool:
    ...

def read_env_file(file_path: Union[str, os.PathLike], *, encoding: Optional[str] = None, case_sensitive: bool = False) -> Dict[str, str]:
    ...

def find_case_path(dir_path: Path, file_name: str, case_sensitive: bool) -> Optional[Path]:
    ...
