from typing import List, Dict, Any, Union
import pandas as pd

def test_edge_results(edge_conf: Dict[str, Any], mocker: Any, caplog: Any, data: Any) -> None:
    ...

def test_adjust(mocker: Any, edge_conf: Dict[str, Any]) -> None:
    ...

def test_edge_get_stoploss(mocker: Any, edge_conf: Dict[str, Any]) -> None:
    ...

def test_nonexisting_get_stoploss(mocker: Any, edge_conf: Dict[str, Any]) -> None:
    ...

def test_edge_stake_amount(mocker: Any, edge_conf: Dict[str, Any]) -> None:
    ...

def test_nonexisting_stake_amount(mocker: Any, edge_conf: Dict[str, Any]) -> None:
    ...

def test_edge_heartbeat_calculate(mocker: Any, edge_conf: Dict[str, Any]) -> None:
    ...

def mocked_load_data(datadir: Any, pairs: Union[List[str], None] = None, timeframe: str = '0m', timerange: Union[str, None] = None, *args: Any, **kwargs: Any) -> Dict[str, pd.DataFrame]:
    ...

def test_edge_process_downloaded_data(mocker: Any, edge_conf: Dict[str, Any]) -> None:
    ...

def test_edge_process_no_data(mocker: Any, edge_conf: Dict[str, Any], caplog: Any) -> None:
    ...

def test_edge_process_no_trades(mocker: Any, edge_conf: Dict[str, Any], caplog: Any) -> None:
    ...

def test_edge_process_no_pairs(mocker: Any, edge_conf: Dict[str, Any], caplog: Any) -> None:
    ...

def test_edge_init_error(mocker: Any, edge_conf: Dict[str, Any]) -> None:
    ...

def test_process_expectancy(mocker: Any, edge_conf: Dict[str, Any], fee: float, risk_reward_ratio: float, expectancy: float) -> None:
    ...

def test_process_expectancy_remove_pumps(mocker: Any, edge_conf: Dict[str, Any], fee: float) -> None:
    ...

def test_process_expectancy_only_wins(mocker: Any, edge_conf: Dict[str, Any], fee: float) -> None:
    ...
