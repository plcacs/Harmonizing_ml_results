from typing import Awaitable, Callable, Dict, Iterator, Optional, TypedDict, Union

class _ResponseArgs(TypedDict):
    pass

async def get_request(method='GET', *, url, trust_env=False, **kwargs) -> Union[ClientResponse, Unpack]:
    ...

async def test_proxy_http_absolute_path(proxy_test_server):
    ...

async def test_proxy_http_raw_path(proxy_test_server):
    ...

async def test_proxy_http_idna_support(proxy_test_server):
    ...

async def test_proxy_http_connection_error():
    ...

async def test_proxy_http_bad_response(proxy_test_server):
    ...

async def test_proxy_http_auth(proxy_test_server):
    ...

async def test_proxy_http_auth_utf8(proxy_test_server):
    ...

async def test_proxy_http_auth_from_url(proxy_test_server):
    ...

async def test_proxy_http_acquired_cleanup(proxy_test_server, loop):
    ...

async def test_proxy_http_acquired_cleanup_force(proxy_test_server, loop):
    ...

async def test_proxy_http_multi_conn_limit(proxy_test_server, loop):
    ...

async def test_proxy_https_connect(proxy_test_server):
    ...

async def test_proxy_https_connect_with_port(proxy_test_server):
    ...

async def test_proxy_https_send_body(proxy_test_server, loop):
    ...

async def test_proxy_https_idna_support(proxy_test_server):
    ...

async def test_proxy_https_connection_error():
    ...

async def test_proxy_https_bad_response(proxy_test_server):
    ...

async def test_proxy_https_auth(proxy_test_server):
    ...

async def test_proxy_https_acquired_cleanup(proxy_test_server, loop):
    ...

async def test_proxy_https_acquired_cleanup_force(proxy_test_server, loop):
    ...

async def test_proxy_https_multi_conn_limit(proxy_test_server, loop):
    ...

async def test_proxy_from_env_http(proxy_test_server, mocker):
    ...

async def test_proxy_from_env_http_with_auth(proxy_test_server, mocker):
    ...

async def test_proxy_from_env_http_with_auth_from_netrc(proxy_test_server, tmp_path, mocker):
    ...

async def test_proxy_from_env_http_without_auth_from_netrc(proxy_test_server, tmp_path, mocker):
    ...

async def test_proxy_from_env_http_without_auth_from_wrong_netrc(proxy_test_server, tmp_path, mocker):
    ...

async def test_proxy_from_env_https(proxy_test_server, mocker):
    ...

async def test_proxy_from_env_https_with_auth(proxy_test_server, mocker):
    ...

async def test_proxy_auth():
    ...
