from typing import List, Dict, Any

def delete_imports() -> None:
    ...

def create_slice(self, name: str, ds_id: int = None, id: int = None, db_name: str = 'examples', table_name: str = 'wb_health_population', schema: str = None) -> Slice:
    ...

def create_dashboard(self, title: str, id: int = 0, slcs: List[Slice] = []) -> Dashboard:
    ...

def create_table(self, name: str, schema: str = None, id: int = 0, cols_names: List[str] = [], metric_names: List[str] = []) -> SqlaTable:
    ...

def get_slice(self, slc_id: int) -> Slice:
    ...

def get_slice_by_name(self, name: str) -> Slice:
    ...

def get_dash(self, dash_id: int) -> Dashboard:
    ...

def assert_dash_equals(self, expected_dash: Dashboard, actual_dash: Dashboard, check_position: bool = True, check_slugs: bool = True) -> None:
    ...

def assert_table_equals(self, expected_ds: SqlaTable, actual_ds: SqlaTable) -> None:
    ...

def assert_datasource_equals(self, expected_ds: SqlaTable, actual_ds: SqlaTable) -> None:
    ...

def assert_slice_equals(self, expected_slc: Slice, actual_slc: Slice) -> None:
    ...

def assert_only_exported_slc_fields(self, expected_dash: Dashboard, actual_dash: Dashboard) -> None:
    ...

def test_export_1_dashboard(self) -> None:
    ...

def test_export_2_dashboards(self) -> None:
    ...

def test_import_1_slice(self) -> None:
    ...

def test_import_2_slices_for_same_table(self) -> None:
    ...

def test_import_slices_override(self) -> None:
    ...

def test_import_empty_dashboard(self) -> None:
    ...

def test_import_dashboard_1_slice(self) -> None:
    ...

def test_import_dashboard_2_slices(self) -> None:
    ...

def test_import_override_dashboard_2_slices(self) -> None:
    ...

def test_import_new_dashboard_slice_reset_ownership(self) -> None:
    ...

def test_import_table_no_metadata(self) -> None:
    ...

def test_import_table_1_col_1_met(self) -> None:
    ...

def test_import_table_2_col_2_met(self) -> None:
    ...

def test_import_table_override(self) -> None:
    ...

def test_import_table_override_identical(self) -> None:
    ...
