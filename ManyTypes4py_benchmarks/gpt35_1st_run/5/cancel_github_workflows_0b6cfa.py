from typing import Any, Literal, Optional, Union

def request(method: str, endpoint: str, **kwargs: Any) -> Any:
    ...

def list_runs(repo: str, params: Optional[dict] = None) -> Iterator:
    ...

def cancel_run(repo: str, run_id: Union[int, str]) -> Any:
    ...

def get_pull_request(repo: str, pull_number: Union[int, str]) -> Any:
    ...

def get_runs(repo: str, branch: Optional[str] = None, user: Optional[str] = None, statuses: Tuple[str, str] = ('queued', 'in_progress'), events: Tuple[str, str] = ('pull_request', 'push')) -> List:
    ...

def print_commit(commit: dict, branch: str) -> None:
    ...

def cancel_github_workflows(branch_or_pull: Optional[str], repo: str, event: Tuple[str, str], include_last: bool, include_running: bool) -> None:
    ...
