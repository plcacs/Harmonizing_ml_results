def _get_default_job_body_template() -> Dict[str, Any]:
    ...

def _get_base_job_body() -> Dict[str, Any]:
    ...

def prepare_for_flow_run(self, flow_run: 'FlowRun', deployment: Optional['DeploymentResponse'] = None, flow: Optional['Flow'] = None) -> None:
    ...

def _populate_timeout(self) -> None:
    ...

def _populate_env(self) -> None:
    ...

def _configure_cloudsql_volumes(self) -> None:
    ...

def _populate_image_if_not_present(self) -> None:
    ...

def _populate_or_format_command(self) -> None:
    ...

def _format_args_if_present(self) -> None:
    ...

def _remove_vpc_access_if_unset(self) -> None:
    ...

@classmethod
def _ensure_job_includes_all_required_components(cls, value: Dict[str, Any]) -> Dict[str, Any]:
    ...

@classmethod
def _ensure_job_has_compatible_values(cls, value: Dict[str, Any]) -> Dict[str, Any]:
    ...

def _get_client(configuration: 'CloudRunWorkerJobV2Configuration') -> Resource:
    ...

def _create_job_and_wait_for_registration(self, configuration: 'CloudRunWorkerJobV2Configuration', cr_client: Resource, logger: PrefectLogAdapter) -> None:
    ...

def _wait_for_job_creation(cr_client: Resource, configuration: 'CloudRunWorkerJobV2Configuration', logger: PrefectLogAdapter, poll_interval: int = 5) -> None:
    ...

def _create_job_error(exc: HttpError, configuration: 'CloudRunWorkerJobV2Configuration') -> None:
    ...

def _begin_job_execution(self, cr_client: Resource, configuration: 'CloudRunWorkerJobV2Configuration', logger: PrefectLogAdapter) -> ExecutionV2:
    ...

def _watch_job_execution_and_get_result(self, cr_client: Resource, configuration: 'CloudRunWorkerJobV2Configuration', execution: ExecutionV2, logger: PrefectLogAdapter, poll_interval: int = 5) -> CloudRunWorkerV2Result:
    ...

def _watch_job_execution(cr_client: Resource, configuration: 'CloudRunWorkerJobV2Configuration', execution: ExecutionV2, poll_interval: int) -> ExecutionV2:
    ...

def _job_run_submission_error(exc: Exception, configuration: 'CloudRunWorkerJobV2Configuration') -> None:
    ...
