def extract_include_exclude_filter_conf(conf: ConfigType) -> dict[str, dict[str, set[str]]]:
    ...

def merge_include_exclude_filters(base_filter: dict[str, dict[str, set[str]], add_filter: dict[str, dict[str, set[str]]]) -> dict[str, dict[str, set[str]]]:
    ...

def sqlalchemy_filter_from_include_exclude_conf(conf: ConfigType) -> Filters:
    ...

def _globs_to_like(glob_strs: Collection[str], columns: Iterable[ColumnElement], encoder: Callable[[str], Any]) -> ColumnElement:
    ...

def _entity_matcher(entity_ids: Collection[str], columns: Iterable[ColumnElement], encoder: Callable[[str], Any]) -> ColumnElement:
    ...

def _domain_matcher(domains: Collection[str], columns: Iterable[ColumnElement], encoder: Callable[[str], Any]) -> ColumnElement:
    ...

def like_domain_matchers(domains: Collection[str]) -> list[str]:
    ...
