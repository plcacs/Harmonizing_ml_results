def cut(x: np.ndarray, bins: Any, right: bool = True, labels: Any = None, retbins: bool = False, precision: int = 3, include_lowest: bool = False, duplicates: Literal['raise', 'drop'] = 'raise', ordered: bool = True) -> Any:
    ...

def qcut(x: np.ndarray, q: Any, labels: Any = None, retbins: bool = False, precision: int = 3, duplicates: Literal['raise', 'drop'] = 'raise') -> Any:
    ...

def _nbins_to_bins(x_idx: Any, nbins: Any, right: bool) -> Any:
    ...

def _bins_to_cuts(x_idx: Any, bins: Any, right: bool = True, labels: Any = None, precision: int = 3, include_lowest: bool = False, duplicates: Literal['raise', 'drop'] = 'raise', ordered: bool = True) -> Any:
    ...

def _coerce_to_type(x: Any) -> Any:
    ...

def _is_dt_or_td(dtype: Any) -> bool:
    ...

def _format_labels(bins: Any, precision: int, right: bool = True, include_lowest: bool = False) -> Any:
    ...

def _preprocess_for_cut(x: Any) -> Any:
    ...

def _postprocess_for_cut(fac: Any, bins: Any, retbins: bool, original: Any) -> Any:
    ...

def _round_frac(x: float, precision: int) -> float:
    ...

def _infer_precision(base_precision: int, bins: Any) -> int:
    ...
