from typing import List, Optional, TypeVar, Tuple

def is_spectator_compatible(narrow: List[NarrowParameter]) -> bool:
    ...

def is_web_public_narrow(narrow: Optional[List[NarrowParameter]]) -> bool:
    ...

def find_first_unread_anchor(sa_conn, user_profile, narrow) -> int:
    ...

def parse_anchor_value(anchor_val: Optional[str], use_first_unread_anchor: bool) -> Optional[int]:
    ...

def limit_query_to_range(query, num_before, num_after, anchor, include_anchor, anchored_to_left, anchored_to_right, id_col, first_visible_message_id) -> Any:
    ...

def post_process_limited_query(rows, num_before, num_after, anchor, anchored_to_left, anchored_to_right, first_visible_message_id) -> LimitedMessages:
    ...

def clean_narrow_for_message_fetch(narrow: List[NarrowParameter], realm, maybe_user_profile) -> List[NarrowParameter]:
    ...

def fetch_messages(*, narrow: List[NarrowParameter], user_profile, realm, is_web_public_query, anchor: Optional[int], include_anchor: bool, num_before: int, num_after: int, client_requested_message_ids: Optional[List[int]]) -> FetchedMessages:
    ...
