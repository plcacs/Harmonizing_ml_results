def attach(logger_module: Union[str, ModuleType]) -> None:
    ...

def _wrap_function(class_name: str, function_name: str, func, logger) -> callable:
    ...

def _wrap_property(class_name: str, property_name: str, prop, logger) -> property:
    ...

def _wrap_missing_function(class_name: str, function_name: str, func, original, logger) -> callable:
    ...

def _wrap_missing_property(class_name: str, property_name: str, prop, logger) -> property:
    ...
