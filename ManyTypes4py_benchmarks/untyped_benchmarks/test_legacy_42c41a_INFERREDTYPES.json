{
    "__init__@MockNotifyPlatform": [
        {
            "category": "arg",
            "name": "async_get_service",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "get_service",
            "type": [
                "None",
                "list[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "get_service",
            "type": [
                "None",
                "list[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "async_get_service",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@NotificationService": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "target_list",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "target_list",
            "type": [
                "None",
                "str",
                "list[str]",
                "dict[typing.Text, int]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_TestNotifyService": [
        {
            "category": "arg",
            "name": "targets",
            "type": []
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_async_make_reloadable@NotificationService": [
        {
            "category": "arg",
            "name": "hass",
            "type": []
        },
        {
            "category": "return",
            "name": "_async_make_reloadable",
            "type": [
                "None"
            ]
        }
    ],
    "async_get_service2@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": []
        },
        {
            "category": "arg",
            "name": "config",
            "type": []
        },
        {
            "category": "arg",
            "name": "discovery_info",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "discovery_info",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "targetlist",
            "type": [
                "dict[typing.Text, int]"
            ]
        },
        {
            "category": "return",
            "name": "async_get_service2",
            "type": [
                "NotificationService"
            ]
        }
    ],
    "async_get_service@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": []
        },
        {
            "category": "arg",
            "name": "config",
            "type": []
        },
        {
            "category": "arg",
            "name": "discovery_info",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "async_get_service",
            "type": [
                "_TestNotifyService"
            ]
        }
    ],
    "get_service@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": []
        },
        {
            "category": "arg",
            "name": "config",
            "type": []
        },
        {
            "category": "arg",
            "name": "discovery_info",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_service",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [],
    "help_setup_notify@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "typing.Iterable"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "typing.Iterable"
            ]
        },
        {
            "category": "arg",
            "name": "targets",
            "type": [
                "None",
                "str",
                "pathlib.Path",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "send_message_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "typing.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "typing.Iterable"
            ]
        },
        {
            "category": "return",
            "name": "help_setup_notify",
            "type": [
                "MagicMock"
            ]
        }
    ],
    "mock_notify_platform@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "str",
                "config.Config",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "arg",
            "name": "integration",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "async_get_service",
            "type": [
                "None",
                "homeassistancore.HomeAssistant",
                "str",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "get_service",
            "type": [
                "None",
                "homeassistancore.HomeAssistant",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "async_get_service",
            "type": [
                "None",
                "homeassistancore.HomeAssistant",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "get_service",
            "type": [
                "None",
                "homeassistancore.HomeAssistant",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "loaded_platform",
            "type": [
                "MockNotifyPlatform"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "integration",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "mock_notify_platform",
            "type": [
                "MockNotifyPlatform"
            ]
        }
    ],
    "send_message@_TestNotifyService": [
        {
            "category": "arg",
            "name": "message",
            "type": []
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "send_message",
            "type": [
                "None"
            ]
        }
    ],
    "targets@NotificationService": [
        {
            "category": "return",
            "name": "targets",
            "type": []
        }
    ],
    "targets@_TestNotifyService": [
        {
            "category": "return",
            "name": "targets",
            "type": []
        }
    ],
    "test_add_targets@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "test",
            "type": [
                "NotificationService"
            ]
        },
        {
            "category": "local",
            "name": "test_",
            "type": [
                "dict[typing.Text, int]"
            ]
        },
        {
            "category": "return",
            "name": "test_add_targets",
            "type": [
                "None"
            ]
        }
    ],
    "test_calling_notify_from_script_loaded_from_yaml_with_title@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "dict[str, dict[str, typing.Any]]",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "backup.config.Config",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "dict[str, dict[str, typing.Any]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "backup.config.Config",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "send_message_mock",
            "type": [
                "unittesmock.Mock",
                "str",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "step",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Text]]],dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "return",
            "name": "test_calling_notify_from_script_loaded_from_yaml_with_title",
            "type": [
                "None"
            ]
        }
    ],
    "test_calling_notify_from_script_loaded_from_yaml_without_title@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "dict[str, dict[str, typing.Any]]",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "backup.config.Config",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "dict[str, dict[str, typing.Any]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "backup.config.Config",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "send_message_mock",
            "type": [
                "unittesmock.Mock",
                "str",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "step",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Text]]],dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "return",
            "name": "test_calling_notify_from_script_loaded_from_yaml_without_title",
            "type": [
                "None"
            ]
        }
    ],
    "test_change_targets@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "test",
            "type": [
                "NotificationService"
            ]
        },
        {
            "category": "local",
            "name": "test_",
            "type": [
                "dict[typing.Text, int]"
            ]
        },
        {
            "category": "return",
            "name": "test_change_targets",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_platform@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "dss.config.Replica"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dss.config.Replica"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dss.config.Replica"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "dss.config.Replica"
            ]
        },
        {
            "category": "return",
            "name": "test_invalid_platform",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_service@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": []
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_invalid_service",
            "type": [
                "None"
            ]
        }
    ],
    "test_messages_to_targets_route@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "backup.config.Config",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "backup.config.Config",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "send_message_mock",
            "type": [
                "unittesmock.Mock",
                "str",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_messages_to_targets_route",
            "type": [
                "None"
            ]
        }
    ],
    "test_method_forwards_correct_data@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "backup.config.Config",
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "backup.config.Config",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "send_message_mock",
            "type": [
                "unittesmock.Mock",
                "str",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[, typing.Union[typing.Text,dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "return",
            "name": "test_method_forwards_correct_data",
            "type": [
                "None"
            ]
        }
    ],
    "test_platform_setup_with_error@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.setup.SetupTest",
                "backup.config.Config"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "str",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.setup.SetupTest",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "str",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "return",
            "name": "test_platform_setup_with_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_reload_with_notify_builtin_platform_reload@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.MagicMock",
                "homeassistancore.HomeAssistant",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "tests.setup.SetupTest",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.MagicMock",
                "homeassistancore.HomeAssistant",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "tests.setup.SetupTest",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_reload_with_notify_builtin_platform_reload",
            "type": [
                "None"
            ]
        }
    ],
    "test_remove_targets@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "test",
            "type": [
                "NotificationService"
            ]
        },
        {
            "category": "local",
            "name": "test_",
            "type": [
                "dict[typing.Text, int]"
            ]
        },
        {
            "category": "return",
            "name": "test_remove_targets",
            "type": [
                "None"
            ]
        }
    ],
    "test_same_targets@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "test",
            "type": [
                "NotificationService"
            ]
        },
        {
            "category": "return",
            "name": "test_same_targets",
            "type": [
                "None"
            ]
        }
    ],
    "test_sending_none_message@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "backup.config.Config"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": []
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "backup.config.Config"
            ]
        },
        {
            "category": "return",
            "name": "test_sending_none_message",
            "type": [
                "None"
            ]
        }
    ],
    "test_setup_platform_after_notify_setup@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "get_service_called",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "hass_config",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "setup_coro",
            "type": [
                "rotkehlchen.tests.utils.history.TradesTestSetup",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_setup_platform_after_notify_setup",
            "type": [
                "None"
            ]
        }
    ],
    "test_setup_platform_and_reload@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": []
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": []
        },
        {
            "category": "local",
            "name": "get_service_called",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_setup_platform_and_reload",
            "type": [
                "None"
            ]
        }
    ],
    "test_setup_platform_before_notify_setup@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "get_service_called",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "hass_config",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "setup_coro",
            "type": [
                "rotkehlchen.tests.utils.history.TradesTestSetup",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_setup_platform_before_notify_setup",
            "type": [
                "None"
            ]
        }
    ],
    "test_targets_are_services@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "helpers.HelperTestSource",
                "instark.application.domain.common.Tenant"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "helpers.HelperTestSource",
                "instark.application.domain.common.Tenant"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_targets_are_services",
            "type": [
                "None"
            ]
        }
    ]
}