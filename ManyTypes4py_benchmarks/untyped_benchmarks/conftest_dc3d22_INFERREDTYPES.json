{
    "_mock_dev@global": [
        {
            "category": "arg",
            "name": "endpoints",
            "type": []
        },
        {
            "category": "arg",
            "name": "ieee",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "manufacturer",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "model",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "node_descriptor",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "nwk",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "patch_cluster",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "quirk",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "attributes",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ieee",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "nwk",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "manufacturer",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "device_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "model",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "node_descriptor",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "endpoint_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "quirk",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "patch_cluster",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "attributes",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_mock_dev",
            "type": []
        }
    ],
    "_persist_coordinator_model_strings_in_db@_FakeApp": [
        {
            "category": "return",
            "name": "_persist_coordinator_model_strings_in_db",
            "type": [
                "None"
            ]
        }
    ],
    "_setup@global": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "None",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_setup",
            "type": [
                "None"
            ]
        }
    ],
    "_wrap_mock_instance@global": [
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "mock",
            "type": [
                "str",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "attr_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "real_attr",
            "type": [
                "str",
                "dict[str, typing.Union[bool,str]]",
                "dict[str, dict[str, typing.Literal]]"
            ]
        },
        {
            "category": "local",
            "name": "mock_attr",
            "type": [
                "dict[str, dict[str, typing.Any]]",
                "dict[str, list[typing.Any]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_attr_",
            "type": [
                "str",
                "dict[str, typing.Union[bool,str]]",
                "dict[str, dict[str, typing.Literal]]"
            ]
        },
        {
            "category": "return",
            "name": "_wrap_mock_instance",
            "type": [
                "str",
                "unittesmock.MagicMock"
            ]
        }
    ],
    "add_endpoint@_FakeApp": [
        {
            "category": "arg",
            "name": "descriptor",
            "type": [
                "typing.Type",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "add_endpoint",
            "type": [
                "None"
            ]
        }
    ],
    "cluster_handler@global": [
        {
            "category": "return",
            "name": "cluster_handler",
            "type": []
        }
    ],
    "config_entry_fixture@global": [
        {
            "category": "return",
            "name": "config_entry_fixture",
            "type": [
                "MockConfigEntry"
            ]
        }
    ],
    "connect@_FakeApp": [
        {
            "category": "return",
            "name": "connect",
            "type": [
                "None"
            ]
        }
    ],
    "disconnect@_FakeApp": [
        {
            "category": "return",
            "name": "disconnect",
            "type": [
                "None"
            ]
        }
    ],
    "force_remove@_FakeApp": [
        {
            "category": "arg",
            "name": "dev",
            "type": [
                "bool",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "force_remove",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "FIXTURE_GRP_ID",
            "type": [
                "int",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "FIXTURE_GRP_NAME",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "COUNTER_NAMES",
            "type": [
                "list[typing.Text]",
                "list[str]",
                "list",
                "str"
            ]
        }
    ],
    "globally_load_quirks@global": [
        {
            "category": "return",
            "name": "globally_load_quirks",
            "type": [
                "None"
            ]
        }
    ],
    "load_network_info@_FakeApp": [
        {
            "category": "arg",
            "name": "load_devices",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "load_network_info",
            "type": [
                "None"
            ]
        }
    ],
    "mock_zigpy_connect@global": [
        {
            "category": "arg",
            "name": "zigpy_app_controller",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "zigpy_app_controller",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "mock_zigpy_connect",
            "type": [
                "typing.Generator[typing.Optional[bool]]"
            ]
        }
    ],
    "move_network_to_channel@_FakeApp": [
        {
            "category": "arg",
            "name": "new_channel",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "num_broadcasts",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "move_network_to_channel",
            "type": [
                "None"
            ]
        }
    ],
    "network_backup@global": [
        {
            "category": "return",
            "name": "network_backup",
            "type": [
                "str",
                "bytes",
                "tuple[str]"
            ]
        }
    ],
    "permit_ncp@_FakeApp": [
        {
            "category": "arg",
            "name": "time_s",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "permit_ncp",
            "type": [
                "None"
            ]
        }
    ],
    "permit_with_link_key@_FakeApp": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "link_key",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "time_s",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "permit_with_link_key",
            "type": [
                "None"
            ]
        }
    ],
    "request@_FakeApp": [
        {
            "category": "arg",
            "name": "device",
            "type": [
                "int",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "profile",
            "type": [
                "int",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "cluster",
            "type": [
                "int",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "src_ep",
            "type": [
                "int",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "dst_ep",
            "type": [
                "int",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "sequence",
            "type": [
                "int",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "expect_reply",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "use_ieee",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "extended_timeout",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "request",
            "type": [
                "None"
            ]
        }
    ],
    "reset_network_info@_FakeApp": [
        {
            "category": "return",
            "name": "reset_network_info",
            "type": [
                "None"
            ]
        }
    ],
    "send_packet@_FakeApp": [
        {
            "category": "arg",
            "name": "packet",
            "type": [
                "bytes",
                "bytearray",
                "typing.IO"
            ]
        },
        {
            "category": "return",
            "name": "send_packet",
            "type": [
                "None"
            ]
        }
    ],
    "setup_zha@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "config_entry",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "mock_zigpy_connect",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "zha_config",
            "type": [
                "dict[, bool]"
            ]
        },
        {
            "category": "return",
            "name": "setup_zha",
            "type": []
        }
    ],
    "speed_up_radio_mgr@global": [
        {
            "category": "return",
            "name": "speed_up_radio_mgr",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "start_network@_FakeApp": [
        {
            "category": "return",
            "name": "start_network",
            "type": [
                "None"
            ]
        }
    ],
    "write_network_info@_FakeApp": [
        {
            "category": "arg",
            "name": "network_info",
            "type": [
                "list[dict]",
                "dict[str, typing.Any]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "node_info",
            "type": [
                "list[dict]",
                "dict[str, typing.Any]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "write_network_info",
            "type": [
                "None"
            ]
        }
    ],
    "zigpy_app_controller@global": [
        {
            "category": "local",
            "name": "app",
            "type": [
                "_FakeApp"
            ]
        },
        {
            "category": "local",
            "name": "FIXTURE_GRP_ID",
            "type": [
                "int",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "FIXTURE_GRP_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "int",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "COUNTER_NAMES",
            "type": [
                "list[str]",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "dev_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "mock_app",
            "type": [
                "mock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "zigpy_app_controller",
            "type": [
                "typing.Generator[typing.Union[mock.Mock,unittesmock.MagicMock]]"
            ]
        }
    ],
    "zigpy_device_mock@global": [
        {
            "category": "arg",
            "name": "zigpy_app_controller",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "zigpy_device_mock",
            "type": []
        }
    ]
}