{
    "get_fee@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "get_fee",
            "type": []
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "tests_start_time",
            "type": [
                "datetime.timedelta",
                "int",
                "dict[str, datetime.timedelta]"
            ]
        },
        {
            "category": "local",
            "name": "timeframe_in_minute",
            "type": [
                "int",
                "datetime.timedelta",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "tc0",
            "type": [
                "BTContainer"
            ]
        },
        {
            "category": "local",
            "name": "tc1",
            "type": [
                "BTContainer"
            ]
        },
        {
            "category": "local",
            "name": "tc2",
            "type": [
                "BTContainer"
            ]
        },
        {
            "category": "local",
            "name": "tc3",
            "type": [
                "BTContainer"
            ]
        },
        {
            "category": "local",
            "name": "tc4",
            "type": [
                "BTContainer"
            ]
        },
        {
            "category": "local",
            "name": "TESTS",
            "type": [
                "list[BTContainer]"
            ]
        }
    ],
    "mocked_load_data@global": [
        {
            "category": "arg",
            "name": "datadir",
            "type": [
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "pairs",
            "type": [
                "None",
                "str",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "timeframe",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "timerange",
            "type": [
                "None",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "pairs",
            "type": [
                "None",
                "str",
                "list",
                "set",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "hz",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "base",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "tests_start_time",
            "type": [
                "datetime.timedelta",
                "int",
                "dict[str, datetime.timedelta]"
            ]
        },
        {
            "category": "local",
            "name": "timeframe_in_minute",
            "type": [
                "datetime.timedelta",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "NEOBTC",
            "type": [
                "list[list[typing.Union[int,float]]]"
            ]
        },
        {
            "category": "local",
            "name": "LTCBTC",
            "type": [
                "list[list[typing.Union[int,float]]]"
            ]
        },
        {
            "category": "local",
            "name": "pairdata",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "return",
            "name": "mocked_load_data",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "test_adjust@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "dict",
                "bool",
                "None",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "dict",
                "bool",
                "None",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, typing.Any]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "local",
            "name": "pairs",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "test_adjust",
            "type": [
                "None"
            ]
        }
    ],
    "test_edge_get_stoploss@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "typing.Callable[List,bool, None]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "typing.Callable[List,bool, None]"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, typing.Any]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "return",
            "name": "test_edge_get_stoploss",
            "type": [
                "None"
            ]
        }
    ],
    "test_edge_heartbeat_calculate@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, typing.Any]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "local",
            "name": "heartbeat",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "edge_",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_edge_heartbeat_calculate",
            "type": [
                "None"
            ]
        }
    ],
    "test_edge_init_error@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "return",
            "name": "test_edge_init_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_edge_process_downloaded_data@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "dict",
                "bool",
                "None",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "dict",
                "bool",
                "None",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, typing.Any]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "return",
            "name": "test_edge_process_downloaded_data",
            "type": [
                "None"
            ]
        }
    ],
    "test_edge_process_no_data@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "typing.Callable[List,bool, None]",
                "dict",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "typing.Callable[List,bool, None]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "typing.Callable[List,bool, None]",
                "dict",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, typing.Any]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "return",
            "name": "test_edge_process_no_data",
            "type": [
                "None"
            ]
        }
    ],
    "test_edge_process_no_pairs@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "tests.async_mock.MagicMock",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "fee_mock",
            "type": [
                "unittesmock.MagicMock",
                "tests.conftesConfluentAvroConsumerMock"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "return",
            "name": "test_edge_process_no_pairs",
            "type": [
                "None"
            ]
        }
    ],
    "test_edge_process_no_trades@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "dict",
                "bool",
                "None",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "bool",
                "None",
                "typing.Callable[List,bool, None]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "dict",
                "bool",
                "None",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, typing.Any]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "return",
            "name": "test_edge_process_no_trades",
            "type": [
                "None"
            ]
        }
    ],
    "test_edge_results@global": [
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "typing.Callable[list, None]"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str",
                "list[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "dict",
                "int",
                "logging.Logger"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict[str, typing.Any]",
                "list[dict[str, typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str",
                "list[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "typing.Callable[list, None]"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, typing.Any]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[str, typing.Any]",
                "list[dict[str, typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "dict",
                "int",
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "edge_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "results",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_edge_results",
            "type": [
                "None"
            ]
        }
    ],
    "test_edge_stake_amount@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "dict",
                "bool",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "dict",
                "bool",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, typing.Any]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "local",
            "name": "edge_",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_edge_stake_amount",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonexisting_get_stoploss@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "bool",
                "None",
                "str",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "bool",
                "None",
                "str",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, typing.Any]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "return",
            "name": "test_nonexisting_get_stoploss",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonexisting_stake_amount@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "str",
                "typing.Callable[None,None,None,None,None,None, typing.Any]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "return",
            "name": "test_nonexisting_stake_amount",
            "type": [
                "None"
            ]
        }
    ],
    "test_process_expectancy@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "list",
                "typing.Callable[List,bool, None]",
                "datetime.datetime.timedelta"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "list",
                "typing.Callable[List,bool, None]",
                "datetime.datetime.timedelta"
            ]
        },
        {
            "category": "arg",
            "name": "risk_reward_ratio",
            "type": [
                "float",
                "datetime.timedelta",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "expectancy",
            "type": [
                "float",
                "int",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "list",
                "typing.Callable[List,bool, None]",
                "datetime.datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "list[dict[typing.Text, typing.Union[typing.Text,float,int]]]"
            ]
        },
        {
            "category": "local",
            "name": "trades_df",
            "type": [
                "DataFrame",
                "list[str]",
                "str",
                "dict[datetime.date, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "final",
            "type": [
                "list[str]",
                "typing.Callable[None,None, typing.Any]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_process_expectancy",
            "type": [
                "None"
            ]
        }
    ],
    "test_process_expectancy_only_wins@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": []
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "list",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "list[dict[typing.Text, typing.Union[typing.Text,float,int]]]"
            ]
        },
        {
            "category": "local",
            "name": "trades_df",
            "type": [
                "DataFrame",
                "list",
                "typing.Type",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "final",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_process_expectancy_only_wins",
            "type": [
                "None"
            ]
        }
    ],
    "test_process_expectancy_remove_pumps@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "arg",
            "name": "edge_conf",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": []
        },
        {
            "category": "local",
            "name": "edge_conf",
            "type": [
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade",
            "type": [
                "list",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "edge",
            "type": [
                "Edge"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "list[dict[typing.Text, typing.Union[typing.Text,float,int]]]"
            ]
        },
        {
            "category": "local",
            "name": "trades_df",
            "type": [
                "DataFrame",
                "list",
                "typing.Type",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "final",
            "type": [
                "float",
                "list[bool]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_process_expectancy_remove_pumps",
            "type": [
                "None"
            ]
        }
    ]
}