{
    "asof@TestAsOfMerge": [
        {
            "category": "return",
            "name": "asof",
            "type": []
        }
    ],
    "global@global": [],
    "prep_data@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "dedupe",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dedupe",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "pandas.Series",
                "list[tuple[pandas.Series]]"
            ]
        },
        {
            "category": "return",
            "name": "prep_data",
            "type": [
                "pandas.DataFrame",
                "pandas.Series",
                "list[tuple[pandas.Series]]"
            ]
        }
    ],
    "quotes@TestAsOfMerge": [
        {
            "category": "return",
            "name": "quotes",
            "type": []
        }
    ],
    "test_allow_exact_matches@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "core_lib.core.models.Venue",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "core_lib.core.models.Venue",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "core_lib.core.models.Venue",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "core_lib.core.models.Venue",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "None",
                "dict",
                "bool",
                "float",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_allow_exact_matches",
            "type": [
                "None"
            ]
        }
    ],
    "test_allow_exact_matches_and_tolerance2@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_allow_exact_matches_and_tolerance2",
            "type": [
                "None"
            ]
        }
    ],
    "test_allow_exact_matches_and_tolerance3@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_allow_exact_matches_and_tolerance3",
            "type": [
                "None"
            ]
        }
    ],
    "test_allow_exact_matches_and_tolerance@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "dict",
                "tuple[dict]",
                "dict[tuple[typing.Union[typing.Any,str]], int]"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "dict",
                "tuple[dict]",
                "dict[tuple[typing.Union[typing.Any,str]], int]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "dict",
                "tuple[dict]",
                "dict[tuple[typing.Union[typing.Any,str]], int]"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "dict",
                "tuple[dict]",
                "dict[tuple[typing.Union[typing.Any,str]], int]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_allow_exact_matches_and_tolerance",
            "type": [
                "None"
            ]
        }
    ],
    "test_allow_exact_matches_and_tolerance_forward@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_allow_exact_matches_and_tolerance_forward",
            "type": [
                "None"
            ]
        }
    ],
    "test_allow_exact_matches_and_tolerance_nearest@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_allow_exact_matches_and_tolerance_nearest",
            "type": [
                "None"
            ]
        }
    ],
    "test_allow_exact_matches_forward@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_allow_exact_matches_forward",
            "type": [
                "None"
            ]
        }
    ],
    "test_allow_exact_matches_nearest@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_allow_exact_matches_nearest",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic2@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "datapath",
            "type": []
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "slice",
                "list",
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "list[list]",
                "typing.Type",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "list",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "dict",
                "None",
                "list[typing.Any]",
                "bool",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_basic2",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "asof",
            "type": [
                "list[str]",
                "dict",
                "list[\"LoadableRelation\"]"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "asof",
            "type": [
                "list[str]",
                "dict",
                "list[\"LoadableRelation\"]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[str]",
                "dict",
                "list[\"LoadableRelation\"]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "dict",
                "None",
                "list[typing.Any]",
                "bool",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_basic",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_categorical@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "dict[str, str]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "asof",
            "type": [
                "list[list[str]]",
                "list[\"models.Name\"]",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "asof",
            "type": [
                "list[list[str]]",
                "list[\"models.Name\"]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[list[str]]",
                "list[\"models.Name\"]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "dict[str, str]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "dict",
                "None",
                "list[typing.Any]",
                "bool",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_basic_categorical",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_left_by_right_by@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "core_lib.core.models.Venue",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "asof",
            "type": [
                "list[str]",
                "dict",
                "typing.Sequence[typing.Mapping]"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "core_lib.core.models.Venue",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "asof",
            "type": [
                "list[str]",
                "dict",
                "typing.Sequence[typing.Mapping]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[str]",
                "dict",
                "typing.Sequence[typing.Mapping]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "core_lib.core.models.Venue",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "core_lib.core.models.Venue",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "list[object]"
            ]
        },
        {
            "category": "return",
            "name": "test_basic_left_by_right_by",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_left_index@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": []
        },
        {
            "category": "arg",
            "name": "asof",
            "type": [
                "list[str]",
                "dict",
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "asof",
            "type": [
                "list[str]",
                "dict",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[str]",
                "dict",
                "set[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_basic_left_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_left_index_right_index@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "dict",
                "tuple",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "asof",
            "type": [
                "list[\"LoadableRelation\"]",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "asof",
            "type": [
                "list[\"LoadableRelation\"]",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[list[str]]",
                "list[str]",
                "dict[int, list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "dict",
                "tuple",
                "dict[str, typing.Any]",
                "list[dict[str, int]]",
                "str",
                "None",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "dict",
                "list",
                "str",
                "bool",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_basic_left_index_right_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_no_by@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "tuple",
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "asof",
            "type": [
                "pandas.DataFrame",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "str",
                "dict",
                "core_lib.core.models.Venue"
            ]
        },
        {
            "category": "local",
            "name": "f",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "asof",
            "type": [
                "pandas.DataFrame",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list",
                "list[typing.Union[int,str]]",
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "tuple",
                "str",
                "dict",
                "list[tuple[typing.Any]]",
                "list[dict[str, int]]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "str",
                "dict",
                "core_lib.core.models.Venue",
                "typing.Pattern",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_basic_no_by",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_right_index@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "nornir.core.inventory.Inventory",
                "core.track.Track",
                "core_lib.core.models.Venue"
            ]
        },
        {
            "category": "arg",
            "name": "asof",
            "type": [
                "list[\"models.Name\"]",
                "bool",
                "tuple[tuple[typing.Union[str,...]]]"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "dict",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "asof",
            "type": [
                "list[\"models.Name\"]",
                "bool",
                "tuple[tuple[typing.Union[str,...]]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[\"models.Name\"]",
                "bool",
                "tuple[tuple[typing.Union[str,...]]]"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "dict",
                "list",
                "str",
                "bool",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "nornir.core.inventory.Inventory",
                "core.track.Track",
                "core_lib.core.models.Venue"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_basic_right_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_by_dtype@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "typing.Callable",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "typing.Callable",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_by_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_by_int@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_by_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_by_mixed_tz_aware@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "using_infer_string",
            "type": [
                "bool",
                "typing.Callable[object, bool]"
            ]
        },
        {
            "category": "local",
            "name": "using_infer_string",
            "type": [
                "bool",
                "typing.Callable[object, bool]"
            ]
        },
        {
            "category": "return",
            "name": "test_by_mixed_tz_aware",
            "type": [
                "None"
            ]
        }
    ],
    "test_by_nullable@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "any_numeric_ea_dtype",
            "type": [
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "arg",
            "name": "using_infer_string",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "any_numeric_ea_dtype",
            "type": [
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "using_infer_string",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_by_nullable",
            "type": [
                "None"
            ]
        }
    ],
    "test_examples1@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_examples1",
            "type": [
                "None"
            ]
        }
    ],
    "test_examples2@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "pandas.DataFrame",
                "str",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "pandas.DataFrame",
                "str",
                "datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "test_examples2",
            "type": [
                "None"
            ]
        }
    ],
    "test_examples3@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_examples3",
            "type": [
                "None"
            ]
        }
    ],
    "test_examples4@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_examples4",
            "type": [
                "None"
            ]
        }
    ],
    "test_forward_by@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_forward_by",
            "type": [
                "None"
            ]
        }
    ],
    "test_index_tolerance@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "pandas.DataFrame",
                "typing.Callable[frame.Frame, numpy.ndarray]",
                "list[float]"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "str",
                "pandas.DataFrame",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "tolerance",
            "type": [
                "float",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "tolerance",
            "type": [
                "float",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "float",
                "list[typing.Union[int,str]]",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "pandas.DataFrame",
                "typing.Callable[frame.Frame, numpy.ndarray]",
                "list[float]",
                "list[dict[str, int]]",
                "typing.Type",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "str",
                "pandas.DataFrame",
                "dict",
                "list[str]",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_index_tolerance",
            "type": [
                "None"
            ]
        }
    ],
    "test_int_type_tolerance@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "any_int_dtype",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "any_int_dtype",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_int_type_tolerance",
            "type": [
                "None"
            ]
        }
    ],
    "test_left_index_right_index_tolerance@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "int",
                "float",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "int",
                "float",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "dr1",
            "type": [
                "list[str]",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_left_index_right_index_tolerance",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_array_as_on@global": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "pandas.Series",
                "float",
                "datetime.date",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "pandas.Series",
                "float",
                "datetime.date",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_merge_asof_array_as_on",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_extension_dtype@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "static_frame.core.util.UFunc",
                "bool",
                "typing.Callable[typing.Mapping, T]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "static_frame.core.util.UFunc",
                "bool",
                "typing.Callable[typing.Mapping, T]"
            ]
        },
        {
            "category": "return",
            "name": "test_merge_asof_extension_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_index_behavior@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "Index"
            ]
        },
        {
            "category": "return",
            "name": "test_merge_asof_index_behavior",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_multiby_with_categorical@global": [
        {
            "category": "return",
            "name": "test_merge_asof_multiby_with_categorical",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_non_numerical_dtype@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "infer_string",
            "type": [
                "list[str]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "infer_string",
            "type": [
                "list[str]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_merge_asof_non_numerical_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_non_numerical_dtype_object@global": [
        {
            "category": "return",
            "name": "test_merge_asof_non_numerical_dtype_object",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_numeri_column_in_index_object_dtype@global": [
        {
            "category": "local",
            "name": "left",
            "type": [
                "list",
                "set",
                "list[list[float]]"
            ]
        },
        {
            "category": "local",
            "name": "right",
            "type": [
                "int",
                "pandas.io.pytables.Selection",
                "list[bool]"
            ]
        },
        {
            "category": "return",
            "name": "test_merge_asof_numeri_column_in_index_object_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_numeric_column_in_index@global": [
        {
            "category": "return",
            "name": "test_merge_asof_numeric_column_in_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_numeric_column_in_multiindex@global": [
        {
            "category": "local",
            "name": "left",
            "type": [
                "pandas.io.pytables.Selection",
                "starfish.core.morphology.binary_mask.binary_mask.BinaryMaskCollection",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "right",
            "type": [
                "pandas.io.pytables.Selection",
                "int",
                "Packages.numpy.st3_osx_x64.numpy.oldnumeric.ma.domained_binary_operation"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[object]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_merge_asof_numeric_column_in_multiindex",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_pyarrow_td_tolerance@global": [
        {
            "category": "return",
            "name": "test_merge_asof_pyarrow_td_tolerance",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_raise_for_duplicate_columns@global": [
        {
            "category": "return",
            "name": "test_merge_asof_raise_for_duplicate_columns",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_asof_read_only_ndarray@global": [
        {
            "category": "local",
            "name": "left_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "right_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_merge_asof_read_only_ndarray",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_by_col_tz_aware@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_merge_by_col_tz_aware",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_datatype_categorical_error_raises@TestAsOfMerge": [
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_merge_datatype_categorical_error_raises",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_datatype_error_raises@TestAsOfMerge": [
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_merge_datatype_error_raises",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_groupby_multiple_column_with_categorical_column@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_merge_groupby_multiple_column_with_categorical_column",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_index_column_tz@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_merge_index_column_tz",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge_on_nans@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "side",
            "type": [
                "typing.Callable",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "side",
            "type": [
                "typing.Callable",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "nulls",
            "type": [
                "str",
                "bool",
                "typing.Callable[None,None, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "non_nulls",
            "type": [
                "str",
                "list[str]",
                "dict[int, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_merge_on_nans",
            "type": [
                "None"
            ]
        }
    ],
    "test_mismatched_index_dtype@TestAsOfMerge": [
        {
            "category": "local",
            "name": "left",
            "type": [
                "pandas.DataFrame",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "right",
            "type": [
                "str",
                "float",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_mismatched_index_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_missing_right_by@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "typing.Callable[pandas.DataFrame, pandas.DataFrame]",
                "list[dict[str, typing.Any]]",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "asof",
            "type": [
                "list[list[str]]",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "core_lib.core.models.Venue",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "asof",
            "type": [
                "list[list[str]]",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[list[str]]",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "core_lib.core.models.Venue",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "q",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "typing.Callable[pandas.DataFrame, pandas.DataFrame]",
                "list[dict[str, typing.Any]]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_missing_right_by",
            "type": [
                "None"
            ]
        }
    ],
    "test_multi_index_left@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "dict[str, str]",
                "dict",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "str",
                "core_lib.core.models.Venue",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "dict[str, str]",
                "dict",
                "tuple",
                "list[dict[str, int]]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "str",
                "core_lib.core.models.Venue",
                "list[dict[str, typing.Any]]",
                "tuple[str]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_multi_index_left",
            "type": [
                "None"
            ]
        }
    ],
    "test_multi_index_right@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "dict[str, str]",
                "dict",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "str",
                "core_lib.core.models.Venue",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "dict[str, str]",
                "dict",
                "tuple",
                "list[dict[str, int]]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "str",
                "core_lib.core.models.Venue",
                "list[dict[str, typing.Any]]",
                "tuple[str]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_multi_index_right",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiby@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_multiby",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiby_heterogeneous_types@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "static_frame.core.util.DtypeSpecifier",
                "numpy.dtype"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "static_frame.core.util.DtypeSpecifier",
                "numpy.dtype"
            ]
        },
        {
            "category": "return",
            "name": "test_multiby_heterogeneous_types",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiby_indexed@TestAsOfMerge": [
        {
            "category": "local",
            "name": "left",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "right",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "datetime.datetime.datetime",
                "datetime.date.time.time"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "set"
            ]
        },
        {
            "category": "return",
            "name": "test_multiby_indexed",
            "type": [
                "None"
            ]
        }
    ],
    "test_nearest_by@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_nearest_by",
            "type": [
                "None"
            ]
        }
    ],
    "test_non_sorted@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "pandas.DataFrame",
                "dict[str, pandas.DataFrame]"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "pandas.Series",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "pandas.DataFrame",
                "dict[str, pandas.DataFrame]",
                "list[dict[str, int]]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "pandas.Series",
                "dict",
                "str",
                "set",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_non_sorted",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_and_index_left_on@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "str",
                "dict",
                "list[typing.Mapping]"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "dict",
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "str",
                "dict",
                "list[typing.Mapping]",
                "list[dict[str, int]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "dict",
                "pandas.DataFrame",
                "str",
                "tuple[str]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_on_and_index_left_on",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_and_index_right_on@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "str",
                "dict",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "dict",
                "src.main.core.repositories.window_repository.WindowRepository"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "str",
                "dict",
                "tuple",
                "list[dict[str, int]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "dict",
                "src.main.core.repositories.window_repository.WindowRepository",
                "tuple[str]",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_on_and_index_right_on",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_float@TestAsOfMerge": [
        {
            "category": "local",
            "name": "df1",
            "type": [
                "list",
                "pandas.DataFrame",
                "list[pandas.DataFrame]"
            ]
        },
        {
            "category": "return",
            "name": "test_on_float",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_float_by_int@TestAsOfMerge": [
        {
            "category": "local",
            "name": "df1",
            "type": [
                "list",
                "pandas.DataFrame",
                "list[pandas.DataFrame]"
            ]
        },
        {
            "category": "local",
            "name": "df2",
            "type": [
                "pandas.DataFrame",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[tuple[typing.Union[typing.Any,int]]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_on_float_by_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_specialized_type@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "any_real_numpy_dtype",
            "type": [
                "static_frame.core.util.DtypeSpecifier",
                "typing.Type",
                "numpy.dtype"
            ]
        },
        {
            "category": "local",
            "name": "df1",
            "type": [
                "list",
                "pandas.DataFrame",
                "typing.Callable[None,None,None,None,None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_on_specialized_type",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_specialized_type_by_int@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "any_real_numpy_dtype",
            "type": [
                "static_frame.core.util.DtypeSpecifier",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "df1",
            "type": [
                "list",
                "pandas.DataFrame",
                "typing.Callable[None,None,None,None,None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_on_specialized_type_by_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_timedelta_tolerance_nearest@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "pandas.Series",
                "datetime.date",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "pandas.Series",
                "datetime.date",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "left",
            "type": [
                "list",
                "str",
                "starfish.core.experimenexperimenExperiment"
            ]
        },
        {
            "category": "local",
            "name": "right",
            "type": [
                "str",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list",
                "list[float]",
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[object]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_timedelta_tolerance_nearest",
            "type": [
                "None"
            ]
        }
    ],
    "test_tolerance@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "tolerance_ts",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "tolerance",
            "type": [
                "float",
                "datetime.datetime.datetime",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "tolerance_ts",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "tolerance",
            "type": [
                "float",
                "datetime.datetime.datetime",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "float",
                "datetime.datetime.datetime",
                "tuple[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_tolerance",
            "type": [
                "None"
            ]
        }
    ],
    "test_tolerance_float@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_tolerance_float",
            "type": [
                "None"
            ]
        }
    ],
    "test_tolerance_forward@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_tolerance_forward",
            "type": [
                "None"
            ]
        }
    ],
    "test_tolerance_nearest@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_tolerance_nearest",
            "type": [
                "None"
            ]
        }
    ],
    "test_tolerance_tz@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "pandas.Series",
                "datetime.date",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "pandas.Series",
                "datetime.date",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_tolerance_tz",
            "type": [
                "None"
            ]
        }
    ],
    "test_valid_allow_exact_matches@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "str",
                "list[dict]",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "str",
                "list[dict]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "str",
                "list[dict]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "str",
                "list[dict]",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_valid_allow_exact_matches",
            "type": [
                "None"
            ]
        }
    ],
    "test_valid_join_keys@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_valid_join_keys",
            "type": [
                "None"
            ]
        }
    ],
    "test_valid_tolerance@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "tartare.core.models.ValidityPeriod",
                "dict[tuple[typing.Union[typing.Any,str]], int]",
                "dict[str, dict[int, str]]"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "tartare.core.models.ValidityPeriod",
                "dict[tuple[typing.Union[typing.Any,str]], int]",
                "dict[str, dict[int, str]]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "tartare.core.models.ValidityPeriod",
                "dict[tuple[typing.Union[typing.Any,str]], int]",
                "dict[str, dict[int, str]]"
            ]
        },
        {
            "category": "local",
            "name": "quotes",
            "type": [
                "tartare.core.models.ValidityPeriod",
                "dict[tuple[typing.Union[typing.Any,str]], int]",
                "dict[str, dict[int, str]]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_valid_tolerance",
            "type": [
                "None"
            ]
        }
    ],
    "test_with_duplicates@TestAsOfMerge": [
        {
            "category": "arg",
            "name": "datapath",
            "type": [
                "bool",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "trades",
            "type": [
                "int",
                "dict[str, int]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "quotes",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "asof",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "q",
            "type": [
                "tuple",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "int",
                "dict[str, int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "asof",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[typing.Any]",
                "list[typing.Union[int,str]]",
                "tuple[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_with_duplicates",
            "type": [
                "None"
            ]
        }
    ],
    "test_with_duplicates_no_on@TestAsOfMerge": [
        {
            "category": "return",
            "name": "test_with_duplicates_no_on",
            "type": [
                "None"
            ]
        }
    ],
    "tolerance@TestAsOfMerge": [
        {
            "category": "return",
            "name": "tolerance",
            "type": []
        }
    ],
    "trades@TestAsOfMerge": [
        {
            "category": "return",
            "name": "trades",
            "type": []
        }
    ]
}