{
    "__call__@GroupByPlot": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "f_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "__call__",
            "type": [
                "int",
                "dict"
            ]
        }
    ],
    "__getattr__@GroupBy": [
        {
            "category": "arg",
            "name": "attr",
            "type": [
                "str",
                "None",
                "core.D.VersionedIdentifier"
            ]
        },
        {
            "category": "local",
            "name": "attr",
            "type": [
                "str",
                "None",
                "core.D.VersionedIdentifier"
            ]
        },
        {
            "category": "return",
            "name": "__getattr__",
            "type": [
                "str",
                "blurr.core.schema_loader.SchemaLoader"
            ]
        }
    ],
    "__getattr__@GroupByPlot": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__getattr__",
            "type": []
        }
    ],
    "__init__@GroupBy": [
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "typing.Any",
                "None",
                "bool",
                "pandas.core.generic.NDFrame"
            ]
        },
        {
            "category": "arg",
            "name": "keys",
            "type": [
                "None",
                "bool",
                "\"Reference\"",
                "\"AbstractPurpose\""
            ]
        },
        {
            "category": "arg",
            "name": "level",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "grouper",
            "type": [
                "None",
                "str",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "exclusions",
            "type": [
                "list[list]"
            ]
        },
        {
            "category": "arg",
            "name": "selection",
            "type": [
                "None",
                "bool",
                "str",
                "list[list]"
            ]
        },
        {
            "category": "arg",
            "name": "as_index",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "group_keys",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "observed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "dropna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "selection",
            "type": [
                "None",
                "bool",
                "str",
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "_selection",
            "type": [
                "None",
                "bool",
                "str",
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "level",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "as_index",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "keys",
            "type": [
                "None",
                "bool",
                "\"Reference\"",
                "\"AbstractPurpose\""
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "group_keys",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dropna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "grouper",
            "type": [
                "None",
                "str",
                "bool",
                "list[str]",
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "typing.NamedTuple",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "observed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "exclusions",
            "type": [
                "set[str]",
                "list",
                "list[str]",
                "list[list]",
                "frozenset"
            ]
        },
        {
            "category": "local",
            "name": "_grouper",
            "type": [
                "list[str]",
                "None",
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@GroupByPlot": [
        {
            "category": "arg",
            "name": "groupby",
            "type": [
                "list[Series]",
                "databricks.koalas.frame.DataFrame",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "groupby",
            "type": [
                "list[Series]",
                "databricks.koalas.frame.DataFrame",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_groupby",
            "type": [
                "list[Series]",
                "databricks.koalas.frame.DataFrame",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__iter__@BaseGroupBy": [
        {
            "category": "local",
            "name": "keys",
            "type": [
                "tuple",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "level",
            "type": [
                "int",
                "list[int]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "dict[str, list[typing.Any]]",
                "list",
                "typing.Generator[tuple[tuple]]"
            ]
        },
        {
            "category": "return",
            "name": "__iter__",
            "type": [
                "dict",
                "dict[str, list[typing.Any]]",
                "list",
                "typing.Generator[tuple[tuple]]"
            ]
        }
    ],
    "__len__@BaseGroupBy": [
        {
            "category": "return",
            "name": "__len__",
            "type": []
        }
    ],
    "__repr__@BaseGroupBy": [
        {
            "category": "return",
            "name": "__repr__",
            "type": []
        }
    ],
    "_agg_general@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "alias",
            "type": [
                "bool",
                "typing.Sequence[str]",
                "pandas.core.series.Series"
            ]
        },
        {
            "category": "arg",
            "name": "npfunc",
            "type": [
                "None",
                "bool",
                "typing.Sequence[str]",
                "pandas.core.series.Series"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "alias",
            "type": [
                "bool",
                "typing.Sequence[str]",
                "pandas.core.series.Series"
            ]
        },
        {
            "category": "local",
            "name": "npfunc",
            "type": [
                "None",
                "bool",
                "typing.Sequence[str]",
                "pandas.core.series.Series"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_agg_general",
            "type": []
        }
    ],
    "_agg_py_fallback@GroupBy": [
        {
            "category": "arg",
            "name": "how",
            "type": [
                "str",
                "numpy.dtype",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "str",
                "pandas._AnyArrayLike",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "ndim",
            "type": [
                "numpy.ndarray",
                "typing.Sequence[int]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "alt",
            "type": [
                "str",
                "pandas.DataFrame",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str",
                "pandas._AnyArrayLike",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "alt",
            "type": [
                "str",
                "pandas.DataFrame",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "res_values",
            "type": [
                "str",
                "list",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "str",
                "numpy.dtype",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "ndim",
            "type": [
                "numpy.ndarray",
                "typing.Sequence[int]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_agg_py_fallback",
            "type": [
                "str",
                "list[str]",
                "typing.Callable[str, None]"
            ]
        }
    ],
    "_aggregate_with_numba@GroupBy": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "engine_kwargs",
            "type": [
                "None",
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "engine_kwargs",
            "type": [
                "None",
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "numba_agg_func",
            "type": [
                "typing.Type",
                "list",
                "typing.Callable[..., typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "result_kwargs",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "return",
            "name": "_aggregate_with_numba",
            "type": []
        }
    ],
    "_apply_filter@GroupBy": [
        {
            "category": "arg",
            "name": "indices",
            "type": [
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "dropna",
            "type": [
                "int",
                "pandas.DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "indices",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "dropna",
            "type": [
                "int",
                "pandas.DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "filtered",
            "type": [
                "int",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_apply_filter",
            "type": [
                "int",
                "dict[str, typing.Any]",
                "str"
            ]
        }
    ],
    "_concat_objects@GroupBy": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "bool",
                "typing.AbstractSet",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "not_indexed_same",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "is_transform",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "group_keys",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "is_transform",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "bool",
                "typing.AbstractSet",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "not_indexed_same",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "list",
                "list[int]",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "str",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_concat_objects",
            "type": [
                "list",
                "str",
                "typing.Mapping"
            ]
        }
    ],
    "_cumcount_array@GroupBy": [
        {
            "category": "arg",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ids",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "count",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_cumcount_array",
            "type": []
        },
        {
            "category": "local",
            "name": "out",
            "type": [
                "list",
                "int",
                "typing.Callable[None, float]"
            ]
        },
        {
            "category": "local",
            "name": "ascending",
            "type": [
                "bool"
            ]
        }
    ],
    "_cython_agg_general@GroupBy": [
        {
            "category": "arg",
            "name": "how",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "alt",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[str, str]",
                "list[int]",
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "_cython_agg_general",
            "type": []
        }
    ],
    "_cython_transform@GroupBy": [
        {
            "category": "arg",
            "name": "how",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "_cython_transform",
            "type": [
                "None"
            ]
        }
    ],
    "_dir_additions@BaseGroupBy": [
        {
            "category": "return",
            "name": "_dir_additions",
            "type": []
        }
    ],
    "_fill@GroupBy": [
        {
            "category": "arg",
            "name": "direction",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "None",
                "str",
                "int",
                "tuple[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "direction",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mgr",
            "type": [
                "list",
                "typing.Type",
                "dict",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_fill",
            "type": []
        }
    ],
    "_get_index@BaseGroupBy": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "return",
            "name": "_get_index",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        }
    ],
    "_get_indices@BaseGroupBy": [
        {
            "category": "arg",
            "name": "names",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "str",
                "list[str]",
                "typing.Generator[tuple]",
                "typing.Generator"
            ]
        },
        {
            "category": "return",
            "name": "_get_indices",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "index_sample",
            "type": [
                "None",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "name_sample",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "converters",
            "type": [
                "typing.Generator"
            ]
        },
        {
            "category": "local",
            "name": "converter",
            "type": [
                "dict[typing.Type, typing.Any]",
                "dict[str, str]"
            ]
        }
    ],
    "_idxmax_idxmin@GroupBy": [
        {
            "category": "arg",
            "name": "how",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "ignore_unobserved",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "expected_len",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "has_unobserved",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ignore_unobserved",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "raise_err",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "tuple[typing.Union[bool,str]]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_idxmax_idxmin",
            "type": [
                "tuple[typing.Union[bool,str]]",
                "bool"
            ]
        }
    ],
    "_insert_inaxis_grouper@GroupBy": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "qs",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "None",
                "cirq.api.google.v1.params_pb2.SingleSweep"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "None",
                "Series",
                "list",
                "list[object]",
                "list[list[object]]",
                "list[typing.Union[object,list[object],int,typing.Text]]",
                "list[typing.Union[object,list[object],int,typing.Text,None]]",
                "list[typing.Union[object,list[object],int,typing.Text,None,Index]]"
            ]
        },
        {
            "category": "local",
            "name": "n_groupings",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "qs",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "None",
                "cirq.api.google.v1.params_pb2.SingleSweep"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "list[tuple]",
                "list[str]",
                "str",
                "None",
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_insert_inaxis_grouper",
            "type": [
                "list",
                "list[object]",
                "list[list[object]]",
                "list[typing.Union[object,list[object],int,typing.Text,None,Index]]"
            ]
        }
    ],
    "_insert_quantile_level@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": [
                "list",
                "slice"
            ]
        },
        {
            "category": "arg",
            "name": "qs",
            "type": [
                "slice",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "qs",
            "type": [
                "slice",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "nqs",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "lev_codes",
            "type": [
                "str",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "lev",
            "type": [
                "int",
                "starfish.core.spots.AssignTargets.label.Label",
                "dict[starfish.core.types._constants.Axes, int]"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "list",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "levels",
            "type": [
                "list[typing.Union[int,starfish.core.spots.AssignTargets.label.Label,dict[starfish.core.types._constants.Axes, int]]]",
                "list[typing.Union[list,int,slice,starfish.core.spots.AssignTargets.label.Label,dict[starfish.core.types._constants.Axes, int]]]"
            ]
        },
        {
            "category": "local",
            "name": "codes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "mi",
            "type": [
                "MultiIndex"
            ]
        },
        {
            "category": "local",
            "name": "nidx",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_insert_quantile_level",
            "type": [
                "MultiIndex"
            ]
        }
    ],
    "_mask_selected_obj@GroupBy": [
        {
            "category": "arg",
            "name": "mask",
            "type": [
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_mask_selected_obj",
            "type": []
        }
    ],
    "_nth@GroupBy": [
        {
            "category": "arg",
            "name": "n",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "dropna",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "dropna",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int",
                "None",
                "float",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "out",
            "type": [
                "typing.Callable[None, typing.Any]",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_nth",
            "type": [
                "typing.Callable[None, typing.Any]",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "dropped",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "grouper",
            "type": [
                "Index"
            ]
        },
        {
            "category": "local",
            "name": "nulls",
            "type": [
                "bool"
            ]
        }
    ],
    "_numba_agg_general@GroupBy": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable",
                "typing.Sequence[object]",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "dtype_mapping",
            "type": [
                "typing.Callable",
                "typing.Sequence[object]",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "engine_kwargs",
            "type": [
                "typing.Callable",
                "typing.Sequence[object]",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "aggregator_kwargs",
            "type": [
                "bool",
                "T",
                "None",
                "typing.Callable[T, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "typing.Callable",
                "typing.Sequence[object]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "dtype_mapping",
            "type": [
                "typing.Callable",
                "typing.Sequence[object]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "engine_kwargs",
            "type": [
                "typing.Callable",
                "typing.Sequence[object]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "aggregator",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "aggregator_kwargs",
            "type": [
                "bool",
                "T",
                "None",
                "typing.Callable[T, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "res_mgr",
            "type": [
                "list[tuple[typing.Any]]",
                "dict",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "_numba_agg_general",
            "type": []
        }
    ],
    "_numba_prep@GroupBy": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "sorted_data",
            "type": [
                "list",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "index_data",
            "type": [
                "MultiIndex",
                "dict",
                "list",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "sorted_index_data",
            "type": [
                "list[dict[str, typing.Any]]",
                "list[list[typing.Any]]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_numba_prep",
            "type": [
                "tuple[typing.Union[list[dict[str, typing.Any]],list[list[typing.Any]],list,dict,dict[str, typing.Any]]]"
            ]
        }
    ],
    "_obj_1d_constructor@GroupBy": [
        {
            "category": "local",
            "name": "obj",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "_obj_1d_constructor",
            "type": []
        }
    ],
    "_op_via_apply@GroupBy": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "f",
            "type": [
                "int",
                "str",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "curried_",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_op_via_apply",
            "type": []
        },
        {
            "category": "local",
            "name": "is_transform",
            "type": [
                "bool"
            ]
        }
    ],
    "_python_apply_general@GroupBy": [
        {
            "category": "arg",
            "name": "f",
            "type": [
                "bool",
                "static_frame.core.util.UFunc",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "not_indexed_same",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "is_transform",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "is_agg",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "f",
            "type": [
                "bool",
                "static_frame.core.util.UFunc",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str",
                "dict[str, int]",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "mutated",
            "type": [
                "list",
                "str",
                "Packages.numpy.st3_osx_x64.numpy.oldnumeric.ma.masked_binary_operation"
            ]
        },
        {
            "category": "local",
            "name": "not_indexed_same",
            "type": [
                "None",
                "bool",
                "list",
                "str",
                "Packages.numpy.st3_osx_x64.numpy.oldnumeric.ma.masked_binary_operation"
            ]
        },
        {
            "category": "local",
            "name": "is_transform",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_python_apply_general",
            "type": [
                "str",
                "bool",
                "typing.IO"
            ]
        }
    ],
    "_reduction_kernel_transform@GroupBy": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "engine",
            "type": [
                "None",
                "typing.Callable",
                "list[str]",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "list[str]",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "engine",
            "type": [
                "None",
                "typing.Callable",
                "list[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "list[str]",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "_reduction_kernel_transform",
            "type": [
                "T"
            ]
        }
    ],
    "_selected_obj@BaseGroupBy": [
        {
            "category": "local",
            "name": "obj",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "_selected_obj",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "_selection",
            "type": [
                "None"
            ]
        }
    ],
    "_set_result_index_ordered@GroupBy": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "pandas.DataFrame",
                "bool",
                "dict[str, set[str]]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "pandas.DataFrame",
                "bool",
                "dict[str, set[str]]",
                "float",
                "list",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_set_result_index_ordered",
            "type": []
        },
        {
            "category": "local",
            "name": "original_positions",
            "type": [
                "Index"
            ]
        }
    ],
    "_transform@GroupBy": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable",
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "engine",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "typing.Callable",
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "engine",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "_transform",
            "type": [
                "typing.Callable",
                "list[str]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_transform_with_numba@GroupBy": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "numba_transform_func",
            "type": [
                "typing.Type",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result_kwargs",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "return",
            "name": "_transform_with_numba",
            "type": []
        }
    ],
    "_value_counts@GroupBy": [
        {
            "category": "arg",
            "name": "subset",
            "type": [
                "tuple[typing.Union[bool,...]]",
                "None",
                "set[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "normalize",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "dropna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "normalize",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "list",
                "typing.Type",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "dict",
                "list",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "in_axis_names",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "_name",
            "type": [
                "list",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "keys",
            "type": [
                "list[Series]"
            ]
        },
        {
            "category": "local",
            "name": "subset",
            "type": [
                "tuple[typing.Union[bool,...]]",
                "None",
                "set[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "subsetted",
            "type": [
                "str",
                "list[tuple[str]]",
                "typing.Callable[typing.Iterable, typing.Iterator]"
            ]
        },
        {
            "category": "local",
            "name": "clashing",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "groupings",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "dropna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result_series_",
            "type": [
                "typing.Text",
                "range"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "index_level",
            "type": [
                "range"
            ]
        },
        {
            "category": "local",
            "name": "levels",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "indexed_group_size",
            "type": [
                "int",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "_value_counts",
            "type": []
        }
    ],
    "_wrap_aggregated_output@GroupBy": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "list[typing.Union[int,float]]",
                "pandas.DataFrame",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "qs",
            "type": [
                "None",
                "list[str]",
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[typing.Union[int,float]]",
                "pandas.DataFrame",
                "list[str]",
                "list",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "qs",
            "type": [
                "None",
                "list[str]",
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "return",
            "name": "_wrap_aggregated_output",
            "type": [
                "list[typing.Union[int,float]]",
                "pandas.DataFrame",
                "list[str]",
                "list",
                "set"
            ]
        }
    ],
    "_wrap_applied_output@GroupBy": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bool",
                "typing.Type",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "bool",
                "typing.Type",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "not_indexed_same",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "is_transform",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_wrap_applied_output",
            "type": [
                "None"
            ]
        }
    ],
    "_wrap_idxmax_idxmin@GroupBy": [
        {
            "category": "arg",
            "name": "res",
            "type": [
                "bytes",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "MultiIndex",
                "list[str]",
                "list[int]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "bytes",
                "dict",
                "int",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_wrap_idxmax_idxmin",
            "type": [
                "list",
                "dict",
                "float"
            ]
        }
    ],
    "_wrap_transform_fast_result@GroupBy": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "src.core.model.action_resulActionResult",
                "pandas.DataFrame",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "src.core.model.action_resulActionResult",
                "pandas.DataFrame",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "new_ax",
            "type": [
                "list[int]",
                "list",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_wrap_transform_fast_result",
            "type": []
        }
    ],
    "all@GroupBy": [
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "all",
            "type": [
                "\"Wheel\"",
                "tuple[typing.Union[str,typing.Any]]",
                "None"
            ]
        }
    ],
    "any@GroupBy": [
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "any",
            "type": [
                "str",
                "set[str]",
                "int",
                "None"
            ]
        }
    ],
    "apply@GroupBy": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "bool",
                "dict",
                "typing.Sequence[typing.Callable]"
            ]
        },
        {
            "category": "arg",
            "name": "include_groups",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "include_groups",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "bool",
                "dict",
                "typing.Sequence[typing.Callable]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "str",
                "int",
                "typing.IO"
            ]
        },
        {
            "category": "return",
            "name": "apply",
            "type": [
                "str",
                "int",
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "f",
            "type": [
                "bool",
                "dict",
                "typing.Sequence[typing.Callable]"
            ]
        }
    ],
    "array_func@GroupBy": [
        {
            "category": "arg",
            "name": "values",
            "type": []
        },
        {
            "category": "return",
            "name": "array_func",
            "type": []
        }
    ],
    "attr@GroupByPlot": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "attr",
            "type": []
        }
    ],
    "bfill@GroupBy": [
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "bfill",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "blk_func@GroupBy": [
        {
            "category": "arg",
            "name": "values",
            "type": []
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "np_@_ndarray"
            ]
        },
        {
            "category": "return",
            "name": "blk_func",
            "type": []
        }
    ],
    "count@GroupBy": [
        {
            "category": "local",
            "name": "data",
            "type": [
                "T",
                "tuple[int]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "is_series",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "count",
            "type": []
        }
    ],
    "cumcount@GroupBy": [
        {
            "category": "arg",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "cumcounts",
            "type": [
                "float",
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "cumcount",
            "type": []
        }
    ],
    "cummax@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "cummax",
            "type": []
        }
    ],
    "cummin@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "cummin",
            "type": []
        }
    ],
    "cumprod@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "cumprod",
            "type": []
        }
    ],
    "cumsum@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "cumsum",
            "type": []
        }
    ],
    "curried@GroupBy": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "curried",
            "type": []
        }
    ],
    "describe@GroupBy": [
        {
            "category": "arg",
            "name": "percentiles",
            "type": [
                "None",
                "typing.Sequence[typing.Union[str,pymatgen.core.periodic_table.Element,pymatgen.core.periodic_table.Specie,pymatgen.core.periodic_table.DummySpecie,pymatgen.core.composition.Composition]]",
                "list",
                "typing.Sequence[typing.Sequence[float]]"
            ]
        },
        {
            "category": "arg",
            "name": "include",
            "type": [
                "None",
                "typing.Sequence[typing.Union[str,pymatgen.core.periodic_table.Element,pymatgen.core.periodic_table.Specie,pymatgen.core.periodic_table.DummySpecie,pymatgen.core.composition.Composition]]",
                "list",
                "typing.Sequence[typing.Sequence[float]]"
            ]
        },
        {
            "category": "arg",
            "name": "exclude",
            "type": [
                "None",
                "typing.Sequence[typing.Union[str,pymatgen.core.periodic_table.Element,pymatgen.core.periodic_table.Specie,pymatgen.core.periodic_table.DummySpecie,pymatgen.core.composition.Composition]]",
                "list",
                "typing.Sequence[typing.Sequence[float]]"
            ]
        },
        {
            "category": "local",
            "name": "percentiles",
            "type": [
                "None",
                "typing.Sequence[typing.Union[str,pymatgen.core.periodic_table.Element,pymatgen.core.periodic_table.Specie,pymatgen.core.periodic_table.DummySpecie,pymatgen.core.composition.Composition]]",
                "list",
                "typing.Sequence[typing.Sequence[float]]"
            ]
        },
        {
            "category": "local",
            "name": "include",
            "type": [
                "None",
                "typing.Sequence[typing.Union[str,pymatgen.core.periodic_table.Element,pymatgen.core.periodic_table.Specie,pymatgen.core.periodic_table.DummySpecie,pymatgen.core.composition.Composition]]",
                "list",
                "typing.Sequence[typing.Sequence[float]]"
            ]
        },
        {
            "category": "local",
            "name": "exclude",
            "type": [
                "None",
                "typing.Sequence[typing.Union[str,pymatgen.core.periodic_table.Element,pymatgen.core.periodic_table.Specie,pymatgen.core.periodic_table.DummySpecie,pymatgen.core.composition.Composition]]",
                "list",
                "typing.Sequence[typing.Sequence[float]]"
            ]
        },
        {
            "category": "return",
            "name": "describe",
            "type": []
        }
    ],
    "diff@GroupBy": [
        {
            "category": "arg",
            "name": "periods",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "periods",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "shifted",
            "type": [
                "int",
                "float",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "dtypes_to_f32",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "to_coerce",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "diff",
            "type": [
                "float"
            ]
        }
    ],
    "ewm@GroupBy": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "ewm",
            "type": [
                "ExponentialMovingWindowGroupby"
            ]
        }
    ],
    "expanding@GroupBy": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "expanding",
            "type": [
                "ExpandingGroupby"
            ]
        }
    ],
    "f@GroupBy": [
        {
            "category": "arg",
            "name": "g",
            "type": []
        },
        {
            "category": "return",
            "name": "f",
            "type": []
        }
    ],
    "f@GroupByPlot": [
        {
            "category": "return",
            "name": "f",
            "type": []
        }
    ],
    "ffill@GroupBy": [
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "ffill",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "first@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "first",
            "type": []
        }
    ],
    "first_compat@GroupBy": [
        {
            "category": "arg",
            "name": "obj",
            "type": []
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "DataFrame",
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "first_compat",
            "type": []
        }
    ],
    "get_converter@BaseGroupBy": [
        {
            "category": "arg",
            "name": "s",
            "type": []
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "datetime_@_datetime",
                "np_@_datetime64"
            ]
        },
        {
            "category": "return",
            "name": "get_converter",
            "type": [
                "typing.Callable"
            ]
        }
    ],
    "get_group@BaseGroupBy": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "tuple[object]"
            ]
        },
        {
            "category": "local",
            "name": "keys",
            "type": [
                "list[int]",
                "str",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "level",
            "type": [
                "int",
                "list[int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "tuple[object]",
                "object"
            ]
        },
        {
            "category": "local",
            "name": "inds",
            "type": [
                "list[list[typing.Any]]",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "get_group",
            "type": []
        }
    ],
    "get_groupby@global": [
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bytes",
                "None",
                "list[typing.Any]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "by",
            "type": [
                "None",
                "typing.Iterable[typing.Union[typing.Mapping,int,None]]",
                "core.models.Groups",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "grouper",
            "type": [
                "None",
                "typing.Iterable[typing.Union[typing.Mapping,int,None]]",
                "core.models.Groups",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "group_keys",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "bytes",
                "None",
                "list[typing.Any]",
                "str",
                "Series",
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "by",
            "type": [
                "None",
                "typing.Iterable[typing.Union[typing.Mapping,int,None]]",
                "core.models.Groups",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "grouper",
            "type": [
                "None",
                "typing.Iterable[typing.Union[typing.Mapping,int,None]]",
                "core.models.Groups",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "group_keys",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_groupby",
            "type": [
                "str"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_common_see_also",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_groupby_agg_method_engine_template",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_groupby_agg_method_skipna_engine_template",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_pipe_template",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_transform_template",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_KeysArgType",
            "type": [
                "str",
                "bytes",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "OutputFrameOrSeries",
            "type": [
                "TypeVar"
            ]
        }
    ],
    "groups@BaseGroupBy": [
        {
            "category": "return",
            "name": "groups",
            "type": []
        }
    ],
    "head@GroupBy": [
        {
            "category": "arg",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "int",
                "dict[int, tuple[typing.Any]]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "head",
            "type": [
                "str",
                "typing.IO",
                "numpy.ndarray"
            ]
        }
    ],
    "hfunc@GroupBy": [
        {
            "category": "arg",
            "name": "bvalues",
            "type": []
        },
        {
            "category": "local",
            "name": "bvalues",
            "type": [
                "BaseMaskedArray"
            ]
        },
        {
            "category": "return",
            "name": "hfunc",
            "type": [
                "IntegerArray"
            ]
        }
    ],
    "indices@BaseGroupBy": [
        {
            "category": "return",
            "name": "indices",
            "type": []
        }
    ],
    "last@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "last",
            "type": []
        }
    ],
    "last_compat@GroupBy": [
        {
            "category": "arg",
            "name": "obj",
            "type": []
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "DataFrame",
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "last_compat",
            "type": []
        }
    ],
    "max@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "engine",
            "type": [
                "None",
                "bool",
                "starfish.core.imagestack.imagestack.ImageStack"
            ]
        },
        {
            "category": "arg",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "engine",
            "type": [
                "None",
                "bool",
                "starfish.core.imagestack.imagestack.ImageStack"
            ]
        },
        {
            "category": "local",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "max",
            "type": []
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        }
    ],
    "mean@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "engine",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "engine",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "mean",
            "type": []
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[object]",
                "list",
                "typing.Mapping"
            ]
        }
    ],
    "median@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[object]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "median",
            "type": []
        }
    ],
    "min@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "engine",
            "type": [
                "None",
                "bool",
                "starfish.core.imagestack.imagestack.ImageStack"
            ]
        },
        {
            "category": "arg",
            "name": "engine_kwargs",
            "type": [
                "None",
                "float",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "engine",
            "type": [
                "None",
                "bool",
                "starfish.core.imagestack.imagestack.ImageStack"
            ]
        },
        {
            "category": "local",
            "name": "engine_kwargs",
            "type": [
                "None",
                "float",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "min",
            "type": []
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        }
    ],
    "ngroup@GroupBy": [
        {
            "category": "arg",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "comp_ids",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "ngroup",
            "type": [
                "int"
            ]
        }
    ],
    "ngroups@BaseGroupBy": [
        {
            "category": "return",
            "name": "ngroups",
            "type": []
        }
    ],
    "nth@GroupBy": [
        {
            "category": "return",
            "name": "nth",
            "type": [
                "GroupByNthSelector"
            ]
        }
    ],
    "ohlc@GroupBy": [
        {
            "category": "local",
            "name": "res_values",
            "type": [
                "typing.Pattern",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "agg_names",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[list[int]]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "ohlc",
            "type": [
                "list",
                "list[list[int]]",
                "list[str]"
            ]
        }
    ],
    "pct_change@GroupBy": [
        {
            "category": "arg",
            "name": "periods",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "fill_method",
            "type": [
                "None",
                "str",
                "typing.Hashable",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "freq",
            "type": [
                "None",
                "str",
                "datetime.datetime",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "fill_method",
            "type": [
                "None",
                "str",
                "typing.Hashable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "freq",
            "type": [
                "None",
                "str",
                "datetime.datetime",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "f",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "pct_change",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "op",
            "type": [
                "typing.Text",
                "str",
                "typing.Hashable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "filled",
            "type": [
                "str",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "periods",
            "type": [
                "int"
            ]
        }
    ],
    "pipe@BaseGroupBy": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "pipe",
            "type": [
                "None"
            ]
        }
    ],
    "post_processor@GroupBy": [
        {
            "category": "arg",
            "name": "vals",
            "type": []
        },
        {
            "category": "arg",
            "name": "inference",
            "type": []
        },
        {
            "category": "arg",
            "name": "result_mask",
            "type": []
        },
        {
            "category": "arg",
            "name": "orig_vals",
            "type": []
        },
        {
            "category": "local",
            "name": "orig_vals",
            "type": [
                "BaseMaskedArray"
            ]
        },
        {
            "category": "return",
            "name": "post_processor",
            "type": [
                "FloatingArray"
            ]
        }
    ],
    "pre_processor@GroupBy": [
        {
            "category": "arg",
            "name": "vals",
            "type": []
        },
        {
            "category": "local",
            "name": "vals",
            "type": [
                "ExtensionArray"
            ]
        },
        {
            "category": "local",
            "name": "inference",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "pre_processor",
            "type": [
                "tuple",
                "tuple[None]"
            ]
        }
    ],
    "prod@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "prod",
            "type": []
        }
    ],
    "quantile@GroupBy": [
        {
            "category": "arg",
            "name": "q",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "interpolation",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mgr",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "str",
                "property",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "splitter",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "q",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "pass_qs",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "nqs",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "interpolation",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "res_mgr",
            "type": [
                "int",
                "dict",
                "list[typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "list",
                "str",
                "tuple[typing.Union[tuple[float],tuple[bool]]]"
            ]
        },
        {
            "category": "return",
            "name": "quantile",
            "type": [
                "typing.IO",
                "str"
            ]
        }
    ],
    "rank@GroupBy": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "na_option",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "pct",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "na_option",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "pct",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "kwargs",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,bool]]"
            ]
        },
        {
            "category": "return",
            "name": "rank",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "resample@GroupBy": [
        {
            "category": "arg",
            "name": "rule",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "include_groups",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "include_groups",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "rule",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "resample",
            "type": []
        }
    ],
    "rolling@GroupBy": [
        {
            "category": "arg",
            "name": "window",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "min_periods",
            "type": [
                "None",
                "float",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "center",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "win_type",
            "type": [
                "None",
                "float",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "on",
            "type": [
                "None",
                "float",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "None",
                "float",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "window",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "min_periods",
            "type": [
                "None",
                "float",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "center",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "win_type",
            "type": [
                "None",
                "float",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "on",
            "type": [
                "None",
                "float",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "closed",
            "type": [
                "None",
                "float",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "rolling",
            "type": [
                "RollingGroupby"
            ]
        }
    ],
    "sample@GroupBy": [
        {
            "category": "arg",
            "name": "n",
            "type": [
                "None",
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "frac",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "replace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "weights",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "random_state",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "sample",
            "type": [
                "bool",
                "list[typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "None",
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "frac",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "replace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "size",
            "type": [
                "int",
                "tuple[typing.Literal]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "weights",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "random_state",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "group_iterator",
            "type": [
                "snorkel.map.core.Mapper",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "sampled_indices",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "group_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "sample_size",
            "type": [
                "int",
                "tuple[typing.Literal]"
            ]
        }
    ],
    "sem@GroupBy": [
        {
            "category": "arg",
            "name": "ddof",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ddof",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "sem",
            "type": [
                "set[str]",
                "str"
            ]
        }
    ],
    "shift@GroupBy": [
        {
            "category": "arg",
            "name": "periods",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "freq",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "fill_value",
            "type": []
        },
        {
            "category": "arg",
            "name": "suffix",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "periods",
            "type": [
                "int",
                "list[list[typing.Any]]",
                "datetime.datetime.datetime",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "add_suffix",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "suffix",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "shifted_dataframes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "period",
            "type": [
                "int",
                "None",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "freq",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "f",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "shifted",
            "type": [
                "Series",
                "float",
                "int",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "fill_value",
            "type": [
                "lib_@_no_default",
                "None",
                "float",
                "dict[tuple[str], float]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "shift",
            "type": [
                "str",
                "int",
                "float"
            ]
        }
    ],
    "size@GroupBy": [
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "pandas.core.arrays.numpy_.PandasArray",
                "list[typing.Optional[bool]]"
            ]
        },
        {
            "category": "local",
            "name": "dtype_backend",
            "type": [
                "None",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "ArrowExtensionArray",
                "ArrowStringArrayNumpySemantics",
                "ArrowStringArray",
                "BaseMaskedArray"
            ]
        },
        {
            "category": "return",
            "name": "size",
            "type": [
                "list",
                "pandas.core.arrays.numpy_.PandasArray",
                "list[typing.Optional[bool]]"
            ]
        }
    ],
    "std@GroupBy": [
        {
            "category": "arg",
            "name": "ddof",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "engine",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "engine",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "ddof",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "std",
            "type": [
                "numpy.ndarray",
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        }
    ],
    "sum@GroupBy": [
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "engine",
            "type": [
                "None",
                "bool",
                "starfish.core.imagestack.imagestack.ImageStack"
            ]
        },
        {
            "category": "arg",
            "name": "engine_kwargs",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "engine",
            "type": [
                "None",
                "bool",
                "starfish.core.imagestack.imagestack.ImageStack"
            ]
        },
        {
            "category": "local",
            "name": "engine_kwargs",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "sum",
            "type": []
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        }
    ],
    "tail@GroupBy": [
        {
            "category": "arg",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "int",
                "property"
            ]
        },
        {
            "category": "return",
            "name": "tail",
            "type": [
                "str",
                "typing.IO",
                "numpy.ndarray"
            ]
        }
    ],
    "var@GroupBy": [
        {
            "category": "arg",
            "name": "ddof",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "engine",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "engine",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "engine_kwargs",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ddof",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "var",
            "type": [
                "str",
                "typing.Type",
                "object"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        }
    ]
}