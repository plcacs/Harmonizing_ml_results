{
    "__init__@BadPrecondition": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@BadRuleWithGoodInvariants": [
        {
            "category": "local",
            "name": "num",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Class": [
        {
            "category": "arg",
            "name": "value",
            "type": []
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@CountSteps": [
        {
            "category": "local",
            "name": "count",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@FailsEventually": [
        {
            "category": "local",
            "name": "counter",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@IncorrectDeletion": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Invariant": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MachineUsingMultiple": [
        {
            "category": "local",
            "name": "expected_bundle_length",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MachineWithConsumingRule": [
        {
            "category": "local",
            "name": "created_counter",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "consumed_counter",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@RequiresInit": [
        {
            "category": "arg",
            "name": "threshold",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "threshold",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "action@FlakyDrawLessMachine": [
        {
            "category": "arg",
            "name": "d",
            "type": [
                "typing.AbstractSet",
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "d",
            "type": [
                "typing.AbstractSet",
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "buffer",
            "type": [
                "int",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "action",
            "type": [
                "None"
            ]
        }
    ],
    "action@FlakyRatchettingMachine": [
        {
            "category": "arg",
            "name": "d",
            "type": [
                "typing.AbstractSet",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "d",
            "type": [
                "typing.AbstractSet",
                "float",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "action",
            "type": [
                "None"
            ]
        }
    ],
    "action@FlakyStateMachine": [
        {
            "category": "return",
            "name": "action",
            "type": [
                "None"
            ]
        }
    ],
    "action@RequiresInit": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "bytes",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "bytes",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "action",
            "type": [
                "None"
            ]
        }
    ],
    "add_one@PreconditionMachine": [
        {
            "category": "return",
            "name": "add_one",
            "type": [
                "None"
            ]
        }
    ],
    "an_invariant@Invariant": [
        {
            "category": "return",
            "name": "an_invariant",
            "type": [
                "None"
            ]
        }
    ],
    "another_invariant@Invariant": [
        {
            "category": "return",
            "name": "another_invariant",
            "type": [
                "None"
            ]
        }
    ],
    "bunch@TargetStateMachine": [
        {
            "category": "arg",
            "name": "source",
            "type": []
        },
        {
            "category": "return",
            "name": "bunch",
            "type": []
        }
    ],
    "bundle_length@MachineUsingMultiple": [
        {
            "category": "return",
            "name": "bundle_length",
            "type": [
                "None"
            ]
        }
    ],
    "bundle_length@MachineWithConsumingRule": [
        {
            "category": "return",
            "name": "bundle_length",
            "type": [
                "None"
            ]
        }
    ],
    "bye@NonTerminalMachine": [
        {
            "category": "arg",
            "name": "hi",
            "type": []
        },
        {
            "category": "return",
            "name": "bye",
            "type": [
                "None"
            ]
        }
    ],
    "check@Machine": [
        {
            "category": "arg",
            "name": "instance",
            "type": []
        },
        {
            "category": "return",
            "name": "check",
            "type": [
                "None"
            ]
        }
    ],
    "check@MachineWithConsumingRule": [
        {
            "category": "arg",
            "name": "value1",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "value2",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "check",
            "type": [
                "None"
            ]
        }
    ],
    "check_a_defined@UndefinedMachine": [
        {
            "category": "return",
            "name": "check_a_defined",
            "type": [
                "None"
            ]
        }
    ],
    "check_a_positive@TrickyInitMachine": [
        {
            "category": "return",
            "name": "check_a_positive",
            "type": [
                "None"
            ]
        }
    ],
    "create@MovesBetweenBundles": [
        {
            "category": "return",
            "name": "create",
            "type": [
                "list"
            ]
        }
    ],
    "create_bun@Machine": [
        {
            "category": "return",
            "name": "create_bun",
            "type": [
                "int"
            ]
        }
    ],
    "delete@IncorrectDeletion": [
        {
            "category": "arg",
            "name": "k",
            "type": []
        },
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "delete",
            "type": [
                "None"
            ]
        }
    ],
    "depopulate_b1@MachineWithConsumingRule": [
        {
            "category": "arg",
            "name": "consumed",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "consumed",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "depopulate_b1",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "depopulate_b1_multiple@MachineWithConsumingRule": [
        {
            "category": "arg",
            "name": "consumed",
            "type": [
                "list[int]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "consumed",
            "type": [
                "list[int]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "depopulate_b1_multiple",
            "type": [
                "None"
            ]
        }
    ],
    "div_by_precondition_after@PreconditionMachine": [
        {
            "category": "arg",
            "name": "num",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "num",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "div_by_precondition_after",
            "type": [
                "None"
            ]
        }
    ],
    "div_by_precondition_before@PreconditionMachine": [
        {
            "category": "arg",
            "name": "num",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "num",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "div_by_precondition_before",
            "type": [
                "None"
            ]
        }
    ],
    "do_not_populate@MachineUsingMultiple": [
        {
            "category": "return",
            "name": "do_not_populate",
            "type": [
                "str",
                "int",
                "typing.Iterable[str]"
            ]
        }
    ],
    "do_something@CountSteps": [
        {
            "category": "return",
            "name": "do_something",
            "type": [
                "None"
            ]
        }
    ],
    "do_stuff@InvalidRuleMachine": [
        {
            "category": "return",
            "name": "do_stuff",
            "type": [
                "None"
            ]
        }
    ],
    "do_stuff@Invariant": [
        {
            "category": "return",
            "name": "do_stuff",
            "type": [
                "None"
            ]
        }
    ],
    "fail@MovesBetweenBundles": [
        {
            "category": "arg",
            "name": "source",
            "type": []
        },
        {
            "category": "return",
            "name": "fail",
            "type": [
                "None"
            ]
        }
    ],
    "fail_eventually@StateMachine": [
        {
            "category": "return",
            "name": "fail_eventually",
            "type": [
                "None"
            ]
        }
    ],
    "fail_fast@ChildStateMachine": [
        {
            "category": "return",
            "name": "fail_fast",
            "type": [
                "None"
            ]
        }
    ],
    "fail_fast@Machine": [
        {
            "category": "arg",
            "name": "param",
            "type": []
        },
        {
            "category": "return",
            "name": "fail_fast",
            "type": [
                "None"
            ]
        }
    ],
    "fail_fast@ProducesMultiple": [
        {
            "category": "return",
            "name": "fail_fast",
            "type": [
                "None"
            ]
        }
    ],
    "fail_fast@ProducesNoVariables": [
        {
            "category": "return",
            "name": "fail_fast",
            "type": [
                "None"
            ]
        }
    ],
    "fail_fast@WithInitializeBundleRules": [
        {
            "category": "arg",
            "name": "param",
            "type": []
        },
        {
            "category": "return",
            "name": "fail_fast",
            "type": [
                "None"
            ]
        }
    ],
    "fail_fast@WithInitializeRules": [
        {
            "category": "return",
            "name": "fail_fast",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "NO_BLOB_SETTINGS",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "TestPrecondition",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "TestMachineWithConsumingRule",
            "type": [
                "str",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "TestMachineUsingMultiple",
            "type": [
                "str",
                "bool",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "local",
            "name": "TestLotsOfEntropyPerStepMachine",
            "type": [
                "str",
                "int",
                "list[list[int]]"
            ]
        }
    ],
    "inc@MinStepsMachine": [
        {
            "category": "return",
            "name": "inc",
            "type": [
                "None"
            ]
        }
    ],
    "inc@TrickyInitMachine": [
        {
            "category": "return",
            "name": "inc",
            "type": [
                "None"
            ]
        }
    ],
    "increment@FailsEventually": [
        {
            "category": "return",
            "name": "increment",
            "type": [
                "None"
            ]
        }
    ],
    "increment@Foo": [
        {
            "category": "return",
            "name": "increment",
            "type": [
                "None"
            ]
        }
    ],
    "init@Foo": [
        {
            "category": "local",
            "name": "counter",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "init",
            "type": [
                "None"
            ]
        }
    ],
    "init_a@MinStepsMachine": [
        {
            "category": "local",
            "name": "a",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "init_a",
            "type": [
                "None"
            ]
        }
    ],
    "init_a@TrickyInitMachine": [
        {
            "category": "local",
            "name": "a",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "init_a",
            "type": [
                "None"
            ]
        }
    ],
    "init_data@TrickyPrintingMachine": [
        {
            "category": "arg",
            "name": "value",
            "type": []
        },
        {
            "category": "return",
            "name": "init_data",
            "type": []
        }
    ],
    "initialize@BadStateMachine": [
        {
            "category": "return",
            "name": "initialize",
            "type": [
                "None"
            ]
        }
    ],
    "initialize@BadStateMachineReverseOrder": [
        {
            "category": "return",
            "name": "initialize",
            "type": [
                "None"
            ]
        }
    ],
    "initialize@InvalidInitialize": [
        {
            "category": "return",
            "name": "initialize",
            "type": [
                "None"
            ]
        }
    ],
    "initialize@Machine": [
        {
            "category": "return",
            "name": "initialize",
            "type": []
        }
    ],
    "initialize@StateMachine": [
        {
            "category": "return",
            "name": "initialize",
            "type": [
                "None"
            ]
        }
    ],
    "initialize_1@BadInvariant": [
        {
            "category": "return",
            "name": "initialize_1",
            "type": [
                "None"
            ]
        }
    ],
    "initialize_1@BadRuleWithGoodInvariants": [
        {
            "category": "return",
            "name": "initialize_1",
            "type": [
                "None"
            ]
        }
    ],
    "initialize_a@ParentStateMachine": [
        {
            "category": "return",
            "name": "initialize_a",
            "type": [
                "None"
            ]
        }
    ],
    "initialize_a@WithInitializeBundleRules": [
        {
            "category": "arg",
            "name": "dep",
            "type": []
        },
        {
            "category": "return",
            "name": "initialize_a",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "initialize_a@WithInitializeRules": [
        {
            "category": "return",
            "name": "initialize_a",
            "type": [
                "None"
            ]
        }
    ],
    "initialize_b@ChildStateMachine": [
        {
            "category": "return",
            "name": "initialize_b",
            "type": [
                "None"
            ]
        }
    ],
    "initialize_b@WithInitializeRules": [
        {
            "category": "return",
            "name": "initialize_b",
            "type": [
                "None"
            ]
        }
    ],
    "initialize_c@WithInitializeRules": [
        {
            "category": "return",
            "name": "initialize_c",
            "type": [
                "None"
            ]
        }
    ],
    "invariant_1@BadInvariant": [
        {
            "category": "return",
            "name": "invariant_1",
            "type": [
                "None"
            ]
        }
    ],
    "invariant_1@BadRuleWithGoodInvariants": [
        {
            "category": "return",
            "name": "invariant_1",
            "type": [
                "None"
            ]
        }
    ],
    "invariant_1@Invariant": [
        {
            "category": "local",
            "name": "first_invariant_ran",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "invariant_1",
            "type": [
                "None"
            ]
        }
    ],
    "invariant_2@BadRuleWithGoodInvariants": [
        {
            "category": "return",
            "name": "invariant_2",
            "type": [
                "None"
            ]
        }
    ],
    "invariant_2@Invariant": [
        {
            "category": "return",
            "name": "invariant_2",
            "type": [
                "None"
            ]
        }
    ],
    "invariant_3@BadRuleWithGoodInvariants": [
        {
            "category": "return",
            "name": "invariant_3",
            "type": [
                "None"
            ]
        }
    ],
    "k@IncorrectDeletion": [
        {
            "category": "arg",
            "name": "k",
            "type": []
        },
        {
            "category": "return",
            "name": "k",
            "type": []
        }
    ],
    "method@global": [
        {
            "category": "return",
            "name": "method",
            "type": [
                "None"
            ]
        }
    ],
    "mostly_fails@TrickyPrintingMachine": [
        {
            "category": "arg",
            "name": "d",
            "type": []
        },
        {
            "category": "return",
            "name": "mostly_fails",
            "type": [
                "None"
            ]
        }
    ],
    "myfunc@MultipleRulesSameFuncMachine": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "bytes",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "myfunc",
            "type": [
                "None"
            ]
        }
    ],
    "not_too_many_steps@MinStepsMachine": [
        {
            "category": "return",
            "name": "not_too_many_steps",
            "type": [
                "None"
            ]
        }
    ],
    "ok@TrivialMachine": [
        {
            "category": "return",
            "name": "ok",
            "type": [
                "None"
            ]
        }
    ],
    "oops@RaisesProblem": [
        {
            "category": "return",
            "name": "oops",
            "type": [
                "None"
            ]
        }
    ],
    "oops@TrivialMachine": [
        {
            "category": "return",
            "name": "oops",
            "type": [
                "None"
            ]
        }
    ],
    "populate_b1@MachineWithConsumingRule": [
        {
            "category": "return",
            "name": "populate_b1",
            "type": []
        }
    ],
    "populate_bundle@MachineUsingMultiple": [
        {
            "category": "arg",
            "name": "items",
            "type": [
                "list",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "items",
            "type": [
                "list",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "populate_bundle",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        }
    ],
    "populate_bundle@ProducesMultiple": [
        {
            "category": "return",
            "name": "populate_bundle",
            "type": []
        }
    ],
    "populate_bundle@ProducesNoVariables": [
        {
            "category": "return",
            "name": "populate_bundle",
            "type": []
        }
    ],
    "rule1@LotsOfEntropyPerStepMachine": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "list[str]",
                "list[list[typing.Any]]",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "rule1",
            "type": [
                "None"
            ]
        }
    ],
    "rule_1@BadInvariant": [
        {
            "category": "return",
            "name": "rule_1",
            "type": [
                "None"
            ]
        }
    ],
    "rule_1@BadRuleWithGoodInvariants": [
        {
            "category": "return",
            "name": "rule_1",
            "type": [
                "None"
            ]
        }
    ],
    "save@IncorrectDeletion": [
        {
            "category": "arg",
            "name": "k",
            "type": []
        },
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "save",
            "type": [
                "None"
            ]
        }
    ],
    "set_initial@Machine": [
        {
            "category": "return",
            "name": "set_initial",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "set_to_zero@PreconditionMachine": [
        {
            "category": "local",
            "name": "num",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "set_to_zero",
            "type": [
                "None"
            ]
        }
    ],
    "skip_whole_test@RaisesProblem": [
        {
            "category": "return",
            "name": "skip_whole_test",
            "type": [
                "None"
            ]
        }
    ],
    "step@ErrorsOnClassAttributeSettings": [
        {
            "category": "return",
            "name": "step",
            "type": [
                "None"
            ]
        }
    ],
    "teardown@CountSteps": [
        {
            "category": "return",
            "name": "teardown",
            "type": [
                "None"
            ]
        }
    ],
    "teardown@Foo": [
        {
            "category": "return",
            "name": "teardown",
            "type": [
                "None"
            ]
        }
    ],
    "teardown@MinStepsMachine": [
        {
            "category": "return",
            "name": "teardown",
            "type": [
                "None"
            ]
        }
    ],
    "test_always_runs_at_least_one_step@global": [
        {
            "category": "return",
            "name": "test_always_runs_at_least_one_step",
            "type": [
                "None"
            ]
        }
    ],
    "test_arguments_do_not_use_names_of_return_values@global": [
        {
            "category": "local",
            "name": "data",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "return",
            "name": "test_arguments_do_not_use_names_of_return_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_blah@BadPrecondition": [
        {
            "category": "return",
            "name": "test_blah",
            "type": [
                "None"
            ]
        }
    ],
    "test_blah@Invariant": [
        {
            "category": "return",
            "name": "test_blah",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_explicitly_call_functions_when_precondition_not_satisfied@global": [
        {
            "category": "return",
            "name": "test_can_explicitly_call_functions_when_precondition_not_satisfied",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_explicitly_pass_settings@global": [
        {
            "category": "return",
            "name": "test_can_explicitly_pass_settings",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_get_test_case_off_machine_instance@global": [
        {
            "category": "return",
            "name": "test_can_get_test_case_off_machine_instance",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_manually_call_initialize_rule@global": [
        {
            "category": "local",
            "name": "initialize_called_counter",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "NO_BLOB_SETTINGS",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "StateMachine_",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_can_manually_call_initialize_rule",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_run_with_no_db@global": [
        {
            "category": "return",
            "name": "test_can_run_with_no_db",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_use_factory_for_tests@global": [
        {
            "category": "return",
            "name": "test_can_use_factory_for_tests",
            "type": [
                "None"
            ]
        }
    ],
    "test_cannot_have_zero_steps@global": [
        {
            "category": "return",
            "name": "test_cannot_have_zero_steps",
            "type": [
                "None"
            ]
        }
    ],
    "test_check_during_init_must_be_boolean@global": [
        {
            "category": "return",
            "name": "test_check_during_init_must_be_boolean",
            "type": [
                "None"
            ]
        }
    ],
    "test_consumes_typecheck@global": [
        {
            "category": "return",
            "name": "test_consumes_typecheck",
            "type": [
                "None"
            ]
        }
    ],
    "test_deprecated_target_consumes_bundle@global": [
        {
            "category": "return",
            "name": "test_deprecated_target_consumes_bundle",
            "type": [
                "None"
            ]
        }
    ],
    "test_empty_machine_is_invalid@global": [
        {
            "category": "return",
            "name": "test_empty_machine_is_invalid",
            "type": [
                "None"
            ]
        }
    ],
    "test_explicit_invariant_call_with_precondition@global": [
        {
            "category": "return",
            "name": "test_explicit_invariant_call_with_precondition",
            "type": [
                "None"
            ]
        }
    ],
    "test_fails_on_settings_class_attribute@global": [
        {
            "category": "return",
            "name": "test_fails_on_settings_class_attribute",
            "type": [
                "None"
            ]
        }
    ],
    "test_flaky_draw_less_raises_flaky@global": [
        {
            "category": "return",
            "name": "test_flaky_draw_less_raises_flaky",
            "type": [
                "None"
            ]
        }
    ],
    "test_flaky_raises_flaky@global": [
        {
            "category": "return",
            "name": "test_flaky_raises_flaky",
            "type": [
                "None"
            ]
        }
    ],
    "test_flatmap@global": [
        {
            "category": "local",
            "name": "buns",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "return",
            "name": "test_flatmap",
            "type": [
                "None"
            ]
        }
    ],
    "test_foo@BadPrecondition": [
        {
            "category": "return",
            "name": "test_foo",
            "type": [
                "None"
            ]
        }
    ],
    "test_initialize_rule@global": [
        {
            "category": "local",
            "name": "initialized",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_initialize_rule",
            "type": [
                "None"
            ]
        }
    ],
    "test_initialize_rule_cannot_be_double_applied@global": [
        {
            "category": "return",
            "name": "test_initialize_rule_cannot_be_double_applied",
            "type": [
                "None"
            ]
        }
    ],
    "test_initialize_rule_dont_mix_with_precondition@global": [
        {
            "category": "return",
            "name": "test_initialize_rule_dont_mix_with_precondition",
            "type": [
                "None"
            ]
        }
    ],
    "test_initialize_rule_dont_mix_with_regular_rule@global": [
        {
            "category": "return",
            "name": "test_initialize_rule_dont_mix_with_regular_rule",
            "type": [
                "None"
            ]
        }
    ],
    "test_initialize_rule_in_state_machine_with_inheritance@global": [
        {
            "category": "local",
            "name": "initialized",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_initialize_rule_in_state_machine_with_inheritance",
            "type": [
                "None"
            ]
        }
    ],
    "test_initialize_rule_populate_bundle@global": [
        {
            "category": "local",
            "name": "a",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "NO_BLOB_SETTINGS",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "WithInitializeBundleRules_",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_initialize_rule_populate_bundle",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_initialize_argument@global": [
        {
            "category": "return",
            "name": "test_invalid_initialize_argument",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_rule_argument@global": [
        {
            "category": "return",
            "name": "test_invalid_rule_argument",
            "type": [
                "None"
            ]
        }
    ],
    "test_invariant@global": [
        {
            "category": "return",
            "name": "test_invariant",
            "type": [
                "None"
            ]
        }
    ],
    "test_invariant_and_rule_are_incompatible@global": [
        {
            "category": "arg",
            "name": "decorators",
            "type": [
                "tests.basilisp.helpers.CompileFn",
                "tests.hints.CleavageCall"
            ]
        },
        {
            "category": "local",
            "name": "decorators",
            "type": [
                "tests.basilisp.helpers.CompileFn",
                "tests.hints.CleavageCall"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "str",
                "tuple[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_invariant_and_rule_are_incompatible",
            "type": [
                "None"
            ]
        }
    ],
    "test_invariant_checks_initial_state_if_no_initialize_rules@global": [
        {
            "category": "return",
            "name": "test_invariant_checks_initial_state_if_no_initialize_rules",
            "type": [
                "None"
            ]
        }
    ],
    "test_invariant_failling_present_in_falsifying_example@global": [
        {
            "category": "local",
            "name": "result",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_invariant_failling_present_in_falsifying_example",
            "type": [
                "None"
            ]
        }
    ],
    "test_invariant_precondition@global": [
        {
            "category": "return",
            "name": "test_invariant_precondition",
            "type": [
                "None"
            ]
        }
    ],
    "test_invariant_present_in_falsifying_example@global": [
        {
            "category": "local",
            "name": "expected",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "typing.Match",
                "None",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_invariant_present_in_falsifying_example",
            "type": [
                "None"
            ]
        }
    ],
    "test_invariants_are_checked_after_init_steps@global": [
        {
            "category": "return",
            "name": "test_invariants_are_checked_after_init_steps",
            "type": [
                "None"
            ]
        }
    ],
    "test_invariants_can_be_checked_during_init_steps@global": [
        {
            "category": "return",
            "name": "test_invariants_can_be_checked_during_init_steps",
            "type": [
                "None"
            ]
        }
    ],
    "test_machine_with_no_terminals_is_invalid@global": [
        {
            "category": "return",
            "name": "test_machine_with_no_terminals_is_invalid",
            "type": [
                "None"
            ]
        }
    ],
    "test_min_steps_argument@global": [
        {
            "category": "local",
            "name": "n_steps",
            "type": [
                "int",
                "typing.Text",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_min_steps_argument",
            "type": [
                "None"
            ]
        }
    ],
    "test_minimizes_errors_in_teardown@global": [
        {
            "category": "local",
            "name": "counter",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_minimizes_errors_in_teardown",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple@global": [
        {
            "category": "local",
            "name": "none",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "some",
            "type": [
                "set",
                "int",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_multiple",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_common_targets@global": [
        {
            "category": "local",
            "name": "a",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "b",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "NO_BLOB_SETTINGS",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "Machine_",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_multiple_common_targets",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_invariants@global": [
        {
            "category": "return",
            "name": "test_multiple_invariants",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_rules_same_func@global": [
        {
            "category": "return",
            "name": "test_multiple_rules_same_func",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_targets@global": [
        {
            "category": "local",
            "name": "a",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "b",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "NO_BLOB_SETTINGS",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "Machine_",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_multiple_targets",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_variables_printed@global": [
        {
            "category": "local",
            "name": "b",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "ProducesMultiple"
            ]
        },
        {
            "category": "local",
            "name": "b_0",
            "type": [
                "float",
                "list[list[int]]",
                "\"Point\""
            ]
        },
        {
            "category": "local",
            "name": "b_1",
            "type": [
                "float",
                "list[list[int]]",
                "\"Point\""
            ]
        },
        {
            "category": "return",
            "name": "test_multiple_variables_printed",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_variables_printed_single_element@global": [
        {
            "category": "local",
            "name": "b",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "ProducesMultiple"
            ]
        },
        {
            "category": "local",
            "name": "v1",
            "type": [
                "float",
                "int",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_multiple_variables_printed_single_element",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_double_invariant@global": [
        {
            "category": "return",
            "name": "test_no_double_invariant",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_variables_printed@global": [
        {
            "category": "local",
            "name": "b",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "return",
            "name": "test_no_variables_printed",
            "type": [
                "None"
            ]
        }
    ],
    "test_picks_up_settings_at_first_use_of_testcase@global": [
        {
            "category": "return",
            "name": "test_picks_up_settings_at_first_use_of_testcase",
            "type": [
                "None"
            ]
        }
    ],
    "test_prints_equal_values_with_correct_variable_name@global": [
        {
            "category": "local",
            "name": "b1",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "b2",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_prints_equal_values_with_correct_variable_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_ratchetting_raises_flaky@global": [
        {
            "category": "return",
            "name": "test_ratchetting_raises_flaky",
            "type": [
                "None"
            ]
        }
    ],
    "test_removes_needless_steps@global": [
        {
            "category": "local",
            "name": "keys",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_removes_needless_steps",
            "type": [
                "None"
            ]
        }
    ],
    "test_reproduce_failure_fails_if_no_error@global": [
        {
            "category": "return",
            "name": "test_reproduce_failure_fails_if_no_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_reproduce_failure_works@global": [
        {
            "category": "return",
            "name": "test_reproduce_failure_works",
            "type": [
                "None"
            ]
        }
    ],
    "test_result_is_added_to_target@global": [
        {
            "category": "local",
            "name": "nodes",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "regularized_notes",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_result_is_added_to_target",
            "type": [
                "None"
            ]
        }
    ],
    "test_rule_deprecation_bundle_by_name@global": [
        {
            "category": "return",
            "name": "test_rule_deprecation_bundle_by_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_rule_deprecation_targets_and_target@global": [
        {
            "category": "local",
            "name": "k",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "return",
            "name": "test_rule_deprecation_targets_and_target",
            "type": [
                "None"
            ]
        }
    ],
    "test_rule_non_bundle_target@global": [
        {
            "category": "return",
            "name": "test_rule_non_bundle_target",
            "type": [
                "None"
            ]
        }
    ],
    "test_rule_non_bundle_target_oneof@global": [
        {
            "category": "local",
            "name": "k",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_rule_non_bundle_target_oneof",
            "type": [
                "None"
            ]
        }
    ],
    "test_runner_that_checks_factory_produced_a_machine@global": [
        {
            "category": "return",
            "name": "test_runner_that_checks_factory_produced_a_machine",
            "type": [
                "None"
            ]
        }
    ],
    "test_saves_failing_example_in_database@global": [
        {
            "category": "local",
            "name": "db",
            "type": [
                "ExampleDatabase"
            ]
        },
        {
            "category": "local",
            "name": "ss",
            "type": [
                "int",
                "slice",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_saves_failing_example_in_database",
            "type": [
                "None"
            ]
        }
    ],
    "test_settings_argument_is_validated@global": [
        {
            "category": "return",
            "name": "test_settings_argument_is_validated",
            "type": [
                "None"
            ]
        }
    ],
    "test_settings_attribute_is_validated@global": [
        {
            "category": "return",
            "name": "test_settings_attribute_is_validated",
            "type": [
                "None"
            ]
        }
    ],
    "test_single_target_multiple@global": [
        {
            "category": "local",
            "name": "a",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "local",
            "name": "NO_BLOB_SETTINGS",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "Machine_",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_single_target_multiple",
            "type": [
                "None"
            ]
        }
    ],
    "test_stateful_double_rule_is_forbidden@global": [
        {
            "category": "arg",
            "name": "recwarn",
            "type": [
                "tests.basilisp.helpers.CompileFn"
            ]
        },
        {
            "category": "return",
            "name": "test_stateful_double_rule_is_forbidden",
            "type": [
                "None"
            ]
        }
    ],
    "test_steps_not_printed_with_pytest_skip@global": [
        {
            "category": "arg",
            "name": "capsys",
            "type": [
                "tests.basilisp.helpers.CompileFn",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "capsys",
            "type": [
                "tests.basilisp.helpers.CompileFn",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "out",
            "type": [
                "str",
                "typing.Callable[None, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "str",
                "list[str]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_steps_not_printed_with_pytest_skip",
            "type": [
                "None"
            ]
        }
    ],
    "test_steps_printed_despite_pytest_fail@global": [
        {
            "category": "return",
            "name": "test_steps_printed_despite_pytest_fail",
            "type": [
                "None"
            ]
        }
    ],
    "test_use_bundle_within_other_strategies@global": [
        {
            "category": "local",
            "name": "my_bundle",
            "type": [
                "Bundle"
            ]
        },
        {
            "category": "return",
            "name": "test_use_bundle_within_other_strategies",
            "type": [
                "None"
            ]
        }
    ],
    "test_uses_seed@global": [
        {
            "category": "arg",
            "name": "capsys",
            "type": [
                "str",
                "tests.e2e.Helper"
            ]
        },
        {
            "category": "local",
            "name": "capsys",
            "type": [
                "str",
                "tests.e2e.Helper"
            ]
        },
        {
            "category": "local",
            "name": "out",
            "type": [
                "str",
                "typing.Callable[None, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "str",
                "list[str]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_uses_seed",
            "type": [
                "None"
            ]
        }
    ],
    "transfer@MovesBetweenBundles": [
        {
            "category": "arg",
            "name": "source",
            "type": []
        },
        {
            "category": "return",
            "name": "transfer",
            "type": []
        }
    ],
    "use_directly@Machine": [
        {
            "category": "arg",
            "name": "bun",
            "type": []
        },
        {
            "category": "return",
            "name": "use_directly",
            "type": [
                "None"
            ]
        }
    ],
    "use_flatmap@Machine": [
        {
            "category": "arg",
            "name": "bun",
            "type": []
        },
        {
            "category": "return",
            "name": "use_flatmap",
            "type": []
        }
    ],
    "v@IncorrectDeletion": [
        {
            "category": "arg",
            "name": "v",
            "type": []
        },
        {
            "category": "return",
            "name": "v",
            "type": []
        }
    ],
    "values_agree@IncorrectDeletion": [
        {
            "category": "arg",
            "name": "k",
            "type": []
        },
        {
            "category": "return",
            "name": "values_agree",
            "type": [
                "None"
            ]
        }
    ],
    "whatevs@DoubleRuleMachine": [
        {
            "category": "arg",
            "name": "num",
            "type": []
        },
        {
            "category": "return",
            "name": "whatevs",
            "type": [
                "None"
            ]
        }
    ]
}