{
    "__init__@Agent007": [
        {
            "category": "arg",
            "name": "env",
            "type": [
                "gym.Env",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "gym.Env",
                "dict",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@DenseNet": [
        {
            "category": "arg",
            "name": "input_shape",
            "type": [
                "tuple[int]",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "output_size",
            "type": [
                "tuple[int]",
                "int",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "local",
            "name": "input_shape",
            "type": [
                "tuple[int]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "output_size",
            "type": [
                "tuple[int]",
                "int",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Perceptron": [
        {
            "category": "arg",
            "name": "input_shape",
            "type": [
                "tuple[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "output_size",
            "type": [
                "tuple[int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "input_shape",
            "type": [
                "tuple[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "output_size",
            "type": [
                "tuple[int]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@RandomAgent": [
        {
            "category": "arg",
            "name": "env",
            "type": [
                "gym.Env",
                "typing.Mapping",
                "purplship.core.utils.xml.Element"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "gym.Env",
                "typing.Mapping",
                "purplship.core.utils.xml.Element"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@TorchAgent": [
        {
            "category": "arg",
            "name": "module",
            "type": [
                "bool",
                "torch.utils.data.DataLoader",
                "torch.Tensor"
            ]
        },
        {
            "category": "arg",
            "name": "deterministic",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "instrumentation_std",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "deterministic",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "module",
            "type": [
                "bool",
                "torch.utils.data.DataLoader",
                "torch.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "kwargs",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@TorchAgentFunction": [
        {
            "category": "arg",
            "name": "agent",
            "type": []
        },
        {
            "category": "arg",
            "name": "env_runner",
            "type": [
                "rl_algorithms.utils.config.ConfigDict",
                "golem.envs.Environment"
            ]
        },
        {
            "category": "arg",
            "name": "reward_postprocessing",
            "type": []
        },
        {
            "category": "local",
            "name": "env_runner",
            "type": [
                "rl_algorithms.utils.config.ConfigDict",
                "golem.envs.Environment"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "act@Agent007": [
        {
            "category": "arg",
            "name": "observation",
            "type": [
                "bool",
                "gluonts.model.common.Tensor"
            ]
        },
        {
            "category": "arg",
            "name": "reward",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "done",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "info",
            "type": [
                "None",
                "bool",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "observation",
            "type": [
                "bool",
                "gluonts.model.common.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "my_amm",
            "type": [
                "float",
                "int",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "my_prot",
            "type": [
                "int",
                "list",
                "nevergrad.optimization.base.ConfiguredOptimizer"
            ]
        },
        {
            "category": "local",
            "name": "their_amm",
            "type": [
                "int",
                "str",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "their_prot",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "action",
            "type": [
                "typing.Text",
                "list",
                "dict[int, typing.Callable]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "act",
            "type": [
                "str",
                "list[str]",
                "int"
            ]
        }
    ],
    "act@RandomAgent": [
        {
            "category": "arg",
            "name": "observation",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "reward",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "done",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "info",
            "type": [
                "None",
                "bool",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "act",
            "type": [
                "int",
                "float"
            ]
        }
    ],
    "act@TorchAgent": [
        {
            "category": "arg",
            "name": "observation",
            "type": [
                "torch.Tensor",
                "tuple[float]",
                "numpy.array",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "reward",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "done",
            "type": [
                "bool",
                "dict",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "info",
            "type": [
                "None",
                "bool",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "observation",
            "type": [
                "torch.Tensor",
                "tuple[float]",
                "numpy.array",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "forward",
            "type": [
                "int",
                "numpy.ndarray",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "act",
            "type": [
                "bool",
                "dict[str, list[str]]",
                "T"
            ]
        }
    ],
    "compute@TorchAgentFunction": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "reward",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "return",
            "name": "compute",
            "type": [
                "int",
                "float",
                "list[list[int]]"
            ]
        }
    ],
    "copy@Agent007": [
        {
            "category": "return",
            "name": "copy",
            "type": []
        }
    ],
    "copy@RandomAgent": [
        {
            "category": "return",
            "name": "copy",
            "type": []
        }
    ],
    "copy@TorchAgent": [
        {
            "category": "return",
            "name": "copy",
            "type": [
                "TorchAgent"
            ]
        }
    ],
    "evaluation_function@TorchAgentFunction": [
        {
            "category": "arg",
            "name": "recommendations",
            "type": [
                "list",
                "list[int]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "num_tests",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "recommendations",
            "type": [
                "list",
                "list[int]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "return",
            "name": "evaluation_function",
            "type": [
                "float"
            ]
        }
    ],
    "forward@DenseNet": [
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "forward",
            "type": []
        }
    ],
    "forward@Perceptron": [
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "forward",
            "type": []
        }
    ],
    "from_module_maker@TorchAgent": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "bool",
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "env",
            "type": [
                "gym.Env",
                "T",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "module_maker",
            "type": [
                "dict[str, typing.Any]",
                "\"Parameters\"",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "deterministic",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "deterministic",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "from_module_maker",
            "type": []
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "AnyEnv",
            "type": [
                "str",
                "dict",
                "typing.Type"
            ]
        }
    ],
    "load_state_dict@TorchAgent": [
        {
            "category": "arg",
            "name": "state_dict",
            "type": [
                "dict[str, numpy.ndarray]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "state_dict",
            "type": [
                "dict[str, numpy.ndarray]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "tuple[typing.Union[str,numpy.ndarray]]"
            ]
        },
        {
            "category": "local",
            "name": "y",
            "type": [
                "tuple[typing.Union[str,numpy.ndarray]]"
            ]
        },
        {
            "category": "return",
            "name": "load_state_dict",
            "type": [
                "None"
            ]
        }
    ]
}