{
    "__call__@_RequestMaker": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "bool",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "path",
            "type": [
                "str",
                "bool",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "headers",
            "type": [
                "None",
                "str",
                "bool",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "protocols",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__call__",
            "type": [
                "None"
            ]
        }
    ],
    "app@global": [
        {
            "category": "arg",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "app",
            "type": []
        }
    ],
    "global@global": [],
    "make_request@global": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "protocol",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "make_request",
            "type": []
        }
    ],
    "maker@global": [
        {
            "category": "arg",
            "name": "method",
            "type": []
        },
        {
            "category": "arg",
            "name": "path",
            "type": []
        },
        {
            "category": "arg",
            "name": "headers",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "protocols",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "headers",
            "type": [
                "None",
                "CIMultiDict"
            ]
        },
        {
            "category": "local",
            "name": "protocols",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "maker",
            "type": []
        }
    ],
    "protocol@global": [
        {
            "category": "return",
            "name": "protocol",
            "type": []
        }
    ],
    "test_bool_websocket_not_ready@global": [
        {
            "category": "local",
            "name": "websocket_ready",
            "type": [
                "WebSocketReady"
            ]
        },
        {
            "category": "return",
            "name": "test_bool_websocket_not_ready",
            "type": [
                "None"
            ]
        }
    ],
    "test_bool_websocket_ready@global": [
        {
            "category": "local",
            "name": "websocket_ready",
            "type": [
                "WebSocketReady"
            ]
        },
        {
            "category": "return",
            "name": "test_bool_websocket_ready",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_prepare_ok@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "str",
                "bool",
                "mock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_can_prepare_ok",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_prepare_started@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "aiohttp.web.Request",
                "typing.Callable",
                "pytest_mock.MockFixture"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "list[dict[str, str]]",
                "list[bool]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_prepare_started",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_prepare_unknown_protocol@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "pytest_mock.MockFixture",
                "mock.MagicMock",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_can_prepare_unknown_protocol",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_prepare_without_upgrade@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "bool",
                "aiohttp.web_requesRequest"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_prepare_without_upgrade",
            "type": [
                "None"
            ]
        }
    ],
    "test_close_after_closing@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": []
        },
        {
            "category": "arg",
            "name": "loop",
            "type": [
                "pytest_mock.MockFixture",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "pytest_mock.MockFixture",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_close_after_closing",
            "type": [
                "None"
            ]
        }
    ],
    "test_close_exc@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "aiohttp.web.Request",
                "typing.Callable",
                "aiohttp.web_requesRequest"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "KeyError",
                "ValueError",
                "RuntimeError"
            ]
        },
        {
            "category": "local",
            "name": "ws_",
            "type": [
                "KeyError",
                "ValueError",
                "RuntimeError",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_close_exc",
            "type": [
                "None"
            ]
        }
    ],
    "test_close_idempotent@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "typing.Callable",
                "aiohttp.web.Request",
                "aiohttp.web_requesRequest"
            ]
        },
        {
            "category": "return",
            "name": "test_close_idempotent",
            "type": [
                "None"
            ]
        }
    ],
    "test_closed_after_ctor@global": [
        {
            "category": "return",
            "name": "test_closed_after_ctor",
            "type": [
                "None"
            ]
        }
    ],
    "test_concurrent_receive@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "typing.Callable",
                "mock.MagicMock",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "ws_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_concurrent_receive",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_extra_info@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "asyncio.AbstractEventLoop",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "ws_transport",
            "type": [
                "asyncio.StreamWriter",
                "asyncio.AbstractEventLoop",
                "list[bytes]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_result",
            "type": [
                "typing.Callable",
                "typing.OrderedDict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "valid_key",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "default_value",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "ws_transport",
            "type": [
                "asyncio.StreamWriter",
                "asyncio.AbstractEventLoop",
                "list[bytes]"
            ]
        },
        {
            "category": "local",
            "name": "ws_",
            "type": [
                "asyncio.StreamWriter",
                "asyncio.AbstractEventLoop",
                "list[bytes]"
            ]
        },
        {
            "category": "return",
            "name": "test_get_extra_info",
            "type": [
                "None"
            ]
        }
    ],
    "test_heartbeat_timeout@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "mock.MagicMock",
                "bool",
                "pytest_mock.MockFixture"
            ]
        },
        {
            "category": "local",
            "name": "req_",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_heartbeat_timeout",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_receive_on_close_connection@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "mock.MagicMock",
                "str",
                "pytest_mock.MockFixture"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_multiple_receive_on_close_connection",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_transfer_encoding_header@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "pytest_mock.MockFixture"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "typing.Mapping",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_no_transfer_encoding_header",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonstarted_close@global": [
        {
            "category": "return",
            "name": "test_nonstarted_close",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonstarted_ping@global": [
        {
            "category": "return",
            "name": "test_nonstarted_ping",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonstarted_pong@global": [
        {
            "category": "return",
            "name": "test_nonstarted_pong",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonstarted_receive_bytes@global": [
        {
            "category": "return",
            "name": "test_nonstarted_receive_bytes",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonstarted_receive_json@global": [
        {
            "category": "return",
            "name": "test_nonstarted_receive_json",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonstarted_receive_str@global": [
        {
            "category": "return",
            "name": "test_nonstarted_receive_str",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonstarted_send_bytes@global": [
        {
            "category": "return",
            "name": "test_nonstarted_send_bytes",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonstarted_send_frame@global": [
        {
            "category": "return",
            "name": "test_nonstarted_send_frame",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonstarted_send_json@global": [
        {
            "category": "return",
            "name": "test_nonstarted_send_json",
            "type": [
                "None"
            ]
        }
    ],
    "test_nonstarted_send_str@global": [
        {
            "category": "return",
            "name": "test_nonstarted_send_str",
            "type": [
                "None"
            ]
        }
    ],
    "test_ping_closed@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "aiohttp.web.Request",
                "typing.Callable",
                "pytest_mock.MockFixture"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_ping_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test_pong_closed@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "pytest_mock.MockFixture"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_pong_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_post_method_ok@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "mock.MagicMock",
                "str",
                "pytest_mock.MockFixture"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_prepare_post_method_ok",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_twice_idempotent@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "bool",
                "mock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_prepare_twice_idempotent",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_without_upgrade@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "bool",
                "aiohttp.web.Request"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict[str, str]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_prepare_without_upgrade",
            "type": [
                "None"
            ]
        }
    ],
    "test_raise_writer_limit@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "mock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_raise_writer_limit",
            "type": [
                "None"
            ]
        }
    ],
    "test_receive_close_but_left_open@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": []
        },
        {
            "category": "arg",
            "name": "loop",
            "type": [
                "pytest_mock.MockFixture",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "close_message",
            "type": [
                "WSMessageClose"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "pytest_mock.MockFixture",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_receive_close_but_left_open",
            "type": [
                "None"
            ]
        }
    ],
    "test_receive_closing@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": []
        },
        {
            "category": "arg",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_receive_closing",
            "type": [
                "None"
            ]
        }
    ],
    "test_receive_eofstream_in_reader@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": []
        },
        {
            "category": "arg",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "EofStream"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "dict[str, typing.Any]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_receive_eofstream_in_reader",
            "type": [
                "None"
            ]
        }
    ],
    "test_receive_exception_in_reader@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "pytest_mock.MockFixture"
            ]
        },
        {
            "category": "arg",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None",
                "collections.abc.Awaitable"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "Exception",
                "KeyError",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None",
                "collections.abc.Awaitable"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "dict[str, typing.Any]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_receive_exception_in_reader",
            "type": [
                "None"
            ]
        }
    ],
    "test_receive_timeouterror@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": []
        },
        {
            "category": "arg",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "dict[str, typing.Any]",
                "asyncio.events.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_receive_timeouterror",
            "type": [
                "None"
            ]
        }
    ],
    "test_recv_bytes_closed@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "pytest_mock.MockFixture",
                "mock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_recv_bytes_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test_recv_str_closed@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "mock.MagicMock",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_recv_str_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test_send_bytes_closed@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "mock.MagicMock",
                "bool",
                "abilian.web.views.registry.Registry"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_send_bytes_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test_send_bytes_nonbytes@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "mock.MagicMock",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_send_bytes_nonbytes",
            "type": [
                "None"
            ]
        }
    ],
    "test_send_frame_closed@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "aiohttp.web_requesRequest",
                "pytest_mock.MockFixture",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_send_frame_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test_send_json_closed@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "typing.Callable",
                "aiohttp.web.Request",
                "aiohttp.web_requesRequest"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_send_json_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test_send_json_nonjson@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "mock.MagicMock",
                "bool",
                "abilian.web.views.registry.Registry"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_send_json_nonjson",
            "type": [
                "None"
            ]
        }
    ],
    "test_send_str_closed@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "abilian.web.views.registry.Registry",
                "typing.Callable",
                "mock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_send_str_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test_send_str_nonstring@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "bool",
                "mock.MagicMock",
                "abilian.web.views.registry.Registry"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_send_str_nonstring",
            "type": [
                "None"
            ]
        }
    ],
    "test_send_with_per_message_deflate@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "pytest_mock.MockFixture"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "dict[str, str]",
                "typing.Generator[typing.Optional[typing.Any]]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_send_with_per_message_deflate",
            "type": [
                "None"
            ]
        }
    ],
    "test_wait_closed_before_start@global": [
        {
            "category": "return",
            "name": "test_wait_closed_before_start",
            "type": [
                "None"
            ]
        }
    ],
    "test_websocket_not_ready@global": [
        {
            "category": "local",
            "name": "websocket_ready",
            "type": [
                "WebSocketReady"
            ]
        },
        {
            "category": "return",
            "name": "test_websocket_not_ready",
            "type": [
                "None"
            ]
        }
    ],
    "test_websocket_ready@global": [
        {
            "category": "local",
            "name": "websocket_ready",
            "type": [
                "WebSocketReady"
            ]
        },
        {
            "category": "return",
            "name": "test_websocket_ready",
            "type": [
                "None"
            ]
        }
    ],
    "test_websocket_ready_unknown_protocol@global": [
        {
            "category": "local",
            "name": "websocket_ready",
            "type": [
                "WebSocketReady"
            ]
        },
        {
            "category": "return",
            "name": "test_websocket_ready_unknown_protocol",
            "type": [
                "None"
            ]
        }
    ],
    "test_write_eof_idempotent@global": [
        {
            "category": "arg",
            "name": "make_request",
            "type": [
                "abilian.web.views.registry.Registry",
                "mock.MagicMock",
                "aiohttp.web_requesRequest"
            ]
        },
        {
            "category": "local",
            "name": "req",
            "type": [
                "list[bool]"
            ]
        },
        {
            "category": "return",
            "name": "test_write_eof_idempotent",
            "type": [
                "None"
            ]
        }
    ],
    "test_write_eof_not_started@global": [
        {
            "category": "return",
            "name": "test_write_eof_not_started",
            "type": [
                "None"
            ]
        }
    ],
    "test_write_non_prepared@global": [
        {
            "category": "return",
            "name": "test_write_non_prepared",
            "type": [
                "None"
            ]
        }
    ]
}