{
    "__init__@BeamSearch": [
        {
            "category": "arg",
            "name": "beam_size",
            "type": [
                "int",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "bos_id",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "eos_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "device",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "output_vocab_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "scorer",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "num_source_factors",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "num_target_factors",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "inference",
            "type": [
                "numpy.ndarray",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "beam_search_stop",
            "type": []
        },
        {
            "category": "arg",
            "name": "sample",
            "type": [
                "None",
                "int",
                "numpy.ndarray",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "prevent_unk",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "skip_nvs",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "nvs_thresh",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "bos_id",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "eos_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "device",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "num_source_factors",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "num_target_factors",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "skip_nvs",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "nvs_thresh",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "beam_size",
            "type": [
                "int",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "output_vocab_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "inference",
            "type": [
                "numpy.ndarray",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_inference",
            "type": [
                "numpy.ndarray",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "prevent_unk",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_repeat_states",
            "type": [
                "RepeatStates"
            ]
        },
        {
            "category": "local",
            "name": "_traced_repeat_states",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_sort_states",
            "type": [
                "SortStates"
            ]
        },
        {
            "category": "local",
            "name": "_traced_sort_states",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_update_scores",
            "type": [
                "UpdateScores"
            ]
        },
        {
            "category": "local",
            "name": "scorer",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_sort_norm_and_update_finished",
            "type": [
                "SortNormalizeAndUpdateFinished"
            ]
        },
        {
            "category": "local",
            "name": "_traced_sort_norm_and_update_finished",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_sample",
            "type": [
                "None",
                "SampleK"
            ]
        },
        {
            "category": "local",
            "name": "_top",
            "type": [
                "None",
                "TopK"
            ]
        },
        {
            "category": "local",
            "name": "sample",
            "type": [
                "None",
                "int",
                "numpy.ndarray",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "_traced_top",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@BrevityPenalty": [
        {
            "category": "arg",
            "name": "weight",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "weight",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@CandidateScorer": [
        {
            "category": "arg",
            "name": "length_penalty_alpha",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "length_penalty_beta",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "brevity_penalty_weight",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "length_penalty_alpha",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "length_penalty_beta",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_lp",
            "type": [
                "LengthPenalty"
            ]
        },
        {
            "category": "local",
            "name": "_bp",
            "type": [
                "None",
                "BrevityPenalty"
            ]
        },
        {
            "category": "local",
            "name": "brevity_penalty_weight",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@GreedySearch": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "bos_id",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "eos_id",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "device",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "num_source_factors",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "num_target_factors",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "inference",
            "type": [
                "int",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "skip_nvs",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "nvs_thresh",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "bos_id",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "eos_id",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "device",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "num_source_factors",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "num_target_factors",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "skip_nvs",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "nvs_thresh",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "inference",
            "type": [
                "int",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_inference",
            "type": [
                "int",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "work_block",
            "type": [
                "GreedyTop1"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@LengthPenalty": [
        {
            "category": "arg",
            "name": "alpha",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "beta",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "alpha",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "beta",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "denominator",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@RepeatStates": [
        {
            "category": "arg",
            "name": "beam_size",
            "type": [
                "int",
                "list[int]",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "state_structure",
            "type": [
                "int",
                "float",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "beam_size",
            "type": [
                "int",
                "list[int]",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "state_structure",
            "type": [
                "int",
                "float",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SampleK": [
        {
            "category": "arg",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Search": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "bos_id",
            "type": [
                "int",
                "set[int]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "eos_id",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "device",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "num_source_factors",
            "type": [
                "int",
                "typing.Callable",
                "list[tuple[typing.Union[numpy.ndarray,float,bool]]]"
            ]
        },
        {
            "category": "arg",
            "name": "num_target_factors",
            "type": [
                "int",
                "None",
                "list[tuple[typing.Union[numpy.ndarray,float,bool]]]"
            ]
        },
        {
            "category": "arg",
            "name": "skip_nvs",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "nvs_thresh",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "bos_id",
            "type": [
                "int",
                "set[int]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "eos_id",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "device",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "num_source_factors",
            "type": [
                "int",
                "typing.Callable",
                "list[tuple[typing.Union[numpy.ndarray,float,bool]]]"
            ]
        },
        {
            "category": "local",
            "name": "num_target_factors",
            "type": [
                "int",
                "None",
                "list[tuple[typing.Union[numpy.ndarray,float,bool]]]"
            ]
        },
        {
            "category": "local",
            "name": "skip_nvs",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "nvs_thresh",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SortNormalizeAndUpdateFinished": [
        {
            "category": "arg",
            "name": "pad_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "eos_id",
            "type": [
                "dict[str, int]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "scorer",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "expect_factors",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "pad_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "eos_id",
            "type": [
                "dict[str, int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "scorer",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_scorer",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "expect_factors",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SortStates": [
        {
            "category": "arg",
            "name": "state_structure",
            "type": [
                "torch.nn.Module",
                "dict[str, list[bool]]",
                "dict[str, numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "state_structure",
            "type": [
                "torch.nn.Module",
                "dict[str, list[bool]]",
                "dict[str, numpy.ndarray]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@TopK": [
        {
            "category": "arg",
            "name": "k",
            "type": [
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "k",
            "type": [
                "int",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@UpdateScores": [
        {
            "category": "arg",
            "name": "prevent_unk",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "prevent_unk",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_EnsembleInference": [
        {
            "category": "arg",
            "name": "models",
            "type": [
                "torch.optim.Optimizer",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "ensemble_mode",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "constant_length_ratio",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "knn_lambda",
            "type": []
        },
        {
            "category": "local",
            "name": "models",
            "type": [
                "torch.optim.Optimizer",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_models",
            "type": [
                "torch.optim.Optimizer",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ensemble_mode",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "constant_length_ratio",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_const_lr",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_SingleModelInference": [
        {
            "category": "arg",
            "name": "model",
            "type": [
                "list[str]",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "skip_softmax",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "constant_length_ratio",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "knn_lambda",
            "type": []
        },
        {
            "category": "local",
            "name": "model",
            "type": [
                "list[str]",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_model",
            "type": [
                "list[str]",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "skip_softmax",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_skip_softmax",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "constant_length_ratio",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_const_lr",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_get_nvs_vocab_slice_ids@global": [
        {
            "category": "arg",
            "name": "nvs_thresh",
            "type": [
                "float",
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "nvs_prediction",
            "type": [
                "float",
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "restrict_lexicon",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "target_prefix",
            "type": [
                "None",
                "bool",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "nvs_prediction",
            "type": [
                "float",
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "nvs_thresh",
            "type": [
                "float",
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "restrict_lexicon",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "blocked_tokens",
            "type": [
                "list",
                "tuple[typing.Union[typing.Literal,list[int]]]",
                "list[tuple[typing.Union[int,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix",
            "type": [
                "None",
                "bool",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "bow",
            "type": [
                "list[list[int]]",
                "dict[str, typing.Any]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "return",
            "name": "_get_nvs_vocab_slice_ids",
            "type": [
                "tuple[typing.Union[list[list[int]],dict[str, typing.Any],list]]"
            ]
        }
    ],
    "_get_vocab_slice_ids@global": [
        {
            "category": "arg",
            "name": "restrict_lexicon",
            "type": [
                "int",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "source_words",
            "type": [
                "list[int]",
                "dict[str, int]"
            ]
        },
        {
            "category": "arg",
            "name": "eos_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "beam_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "target_prefix",
            "type": [
                "None",
                "int",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "output_vocab_size",
            "type": [
                "None",
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "source_words",
            "type": [
                "list[int]",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "restrict_lexicon",
            "type": [
                "int",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "vocab_slice_ids_np",
            "type": [
                "list[int]",
                "list",
                "list[set[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "output_vocab_size",
            "type": [
                "None",
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "source_ids",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "vocab_slice_ids",
            "type": [
                "list[int]",
                "list[list[str]]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix",
            "type": [
                "None",
                "int",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "eos_id",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "vocab_slice_ids_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "beam_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_get_vocab_slice_ids",
            "type": [
                "tuple[typing.Union[list[int],list[list[str]],list[str],int]]"
            ]
        }
    ],
    "_should_stop@BeamSearch": [
        {
            "category": "arg",
            "name": "finished",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "batch_size",
            "type": [
                "int",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "at_least_one_finished",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "batch_size",
            "type": [
                "int",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "_should_stop",
            "type": [
                "bool"
            ]
        }
    ],
    "decode_step@_EnsembleInference": [
        {
            "category": "arg",
            "name": "step_input",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "states",
            "type": [
                "torch.Tensor",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "arg",
            "name": "vocab_slice_ids",
            "type": [
                "None",
                "torch.Tensor",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "target_prefix_factor_mask",
            "type": [
                "None",
                "torch.Tensor",
                "numpy.ndarray",
                "list[list[int]]"
            ]
        },
        {
            "category": "arg",
            "name": "factor_vocab_size",
            "type": [
                "None",
                "torch.Tensor",
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "outputs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "new_states",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "factor_outputs",
            "type": [
                "list",
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "state_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "states",
            "type": [
                "torch.Tensor",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "model_states",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "step_input",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "vocab_slice_ids",
            "type": [
                "None",
                "torch.Tensor",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "knn_probs",
            "type": [
                "None",
                "list[float]",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "target_factor_probs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix_factor_mask",
            "type": [
                "None",
                "torch.Tensor",
                "numpy.ndarray",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "factor_vocab_size",
            "type": [
                "None",
                "torch.Tensor",
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "scores",
            "type": [
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "target_factors",
            "type": [
                "None",
                "float",
                "int",
                "dict[tuple[str], typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "predictions",
            "type": [
                "list",
                "list[typing.Union[list,dict[str, typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "tf_prediction",
            "type": [
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "decode_step",
            "type": [
                "tuple[typing.Union[int,float,str,list,None,dict[tuple[str], typing.Any]]]"
            ]
        }
    ],
    "decode_step@_Inference": [
        {
            "category": "arg",
            "name": "step_input",
            "type": [
                "bool",
                "torch.Tensor"
            ]
        },
        {
            "category": "arg",
            "name": "states",
            "type": [
                "bool",
                "torch.Tensor"
            ]
        },
        {
            "category": "arg",
            "name": "vocab_slice_ids",
            "type": [
                "None",
                "bool",
                "torch.Tensor"
            ]
        },
        {
            "category": "arg",
            "name": "target_prefix_factor_mask",
            "type": [
                "None",
                "bool",
                "torch.Tensor"
            ]
        },
        {
            "category": "arg",
            "name": "factor_vocab_size",
            "type": [
                "None",
                "bool",
                "torch.Tensor"
            ]
        },
        {
            "category": "return",
            "name": "decode_step",
            "type": [
                "None"
            ]
        }
    ],
    "decode_step@_SingleModelInference": [
        {
            "category": "arg",
            "name": "step_input",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "list[list[int]]"
            ]
        },
        {
            "category": "arg",
            "name": "states",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "list[list[int]]"
            ]
        },
        {
            "category": "arg",
            "name": "vocab_slice_ids",
            "type": [
                "None",
                "torch.Tensor",
                "numpy.ndarray",
                "list[list[int]]"
            ]
        },
        {
            "category": "arg",
            "name": "target_prefix_factor_mask",
            "type": [
                "None",
                "torch.Tensor",
                "list[list[int]]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "factor_vocab_size",
            "type": [
                "None",
                "torch.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "step_input",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "states",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "list[list[int]]",
                "list",
                "tuple",
                "dict[str, tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "vocab_slice_ids",
            "type": [
                "None",
                "torch.Tensor",
                "numpy.ndarray",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "logits",
            "type": [
                "float",
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "knn_probs",
            "type": [
                "float",
                "dict[tuple[typing.Any], typing.Any]",
                "torch.Tensor",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "probs",
            "type": [
                "float",
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "scores",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "target_factors",
            "type": [
                "None",
                "float",
                "int",
                "dict[tuple[str], typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "predictions",
            "type": [
                "list",
                "list[typing.Union[list,dict[str, typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "tf_scores",
            "type": [
                "torch.Tensor",
                "list",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix_factor_mask",
            "type": [
                "None",
                "torch.Tensor",
                "list[list[int]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "factor_vocab_size",
            "type": [
                "None",
                "torch.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "tf_prediction",
            "type": [
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "decode_step",
            "type": [
                "tuple[typing.Union[float,bool,list,tuple,dict[str, tuple[int]],None,dict[tuple[str], typing.Any]]]"
            ]
        }
    ],
    "encode_and_initialize@_EnsembleInference": [
        {
            "category": "arg",
            "name": "inputs",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "valid_length",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "model_states",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "predicted_output_lengths",
            "type": [
                "list",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "nvs_predictions",
            "type": [
                "list",
                "list[typing.Union[int,list]]"
            ]
        },
        {
            "category": "local",
            "name": "inputs",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "valid_length",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "nvs_prediction",
            "type": [
                "int",
                "list",
                "list[set[typing.Any]]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "encode_and_initialize",
            "type": [
                "tuple[typing.Union[list,int,list[int],None]]"
            ]
        }
    ],
    "encode_and_initialize@_Inference": [
        {
            "category": "arg",
            "name": "inputs",
            "type": [
                "list[numpy.ndarray]",
                "torch.Tensor",
                "typing.Iterator"
            ]
        },
        {
            "category": "arg",
            "name": "valid_length",
            "type": [
                "list[numpy.ndarray]",
                "torch.Tensor",
                "typing.Iterator"
            ]
        },
        {
            "category": "return",
            "name": "encode_and_initialize",
            "type": [
                "None"
            ]
        }
    ],
    "encode_and_initialize@_SingleModelInference": [
        {
            "category": "arg",
            "name": "inputs",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "valid_length",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "inputs",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "valid_length",
            "type": [
                "list[int]",
                "numpy.ndarray",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "states",
            "type": [
                "list",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "predicted_output_length",
            "type": [
                "int",
                "dict[str, int]",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "nvs_prediction",
            "type": [
                "int",
                "list",
                "list[set[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "encode_and_initialize",
            "type": [
                "tuple[typing.Union[list,int,dict,dict[str, int],list[list[int]],list[set[typing.Any]]]]"
            ]
        }
    ],
    "forward@BeamSearch": [
        {
            "category": "arg",
            "name": "source",
            "type": [
                "torch.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "source_length",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "restrict_lexicon",
            "type": [
                "torch.Tensor",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "arg",
            "name": "max_output_lengths",
            "type": [
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "target_prefix",
            "type": [
                "None",
                "torch.LongTensor",
                "list[int]",
                "torch.Tensor"
            ]
        },
        {
            "category": "arg",
            "name": "target_prefix_factors",
            "type": [
                "None",
                "bool",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "torch.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "batch_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "max_iterations",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "offset",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "first_step_mask",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix",
            "type": [
                "None",
                "torch.LongTensor",
                "list[int]",
                "torch.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "best_hyp_indices_list",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "best_word_indices_list",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "max_output_lengths",
            "type": [
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "source_length",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "model_states",
            "type": [
                "list",
                "typing.Sized",
                "dict[str, tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "estimated_reference_lengths",
            "type": [
                "int",
                "None",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "nvs_prediction",
            "type": [
                "list",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_traced_repeat_states",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "output_vocab_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "vocab_slice_ids",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "restrict_lexicon",
            "type": [
                "torch.Tensor",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "local",
            "name": "source_words",
            "type": [
                "int",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "_sample",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "prefix_masks",
            "type": [
                "None",
                "int",
                "list",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "prefix_masks_length",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix_factor_masks",
            "type": [
                "None",
                "int",
                "float",
                "dict[int, tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix_factor_length",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix_factors",
            "type": [
                "None",
                "bool",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "t",
            "type": [
                "int",
                "float",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix_factor_mask",
            "type": [
                "torch.Tensor",
                "int",
                "dict[int, tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "target_dists",
            "type": [
                "int",
                "list[int]",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "target_factors",
            "type": [
                "float",
                "int",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "scores",
            "type": [
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "best_hyp_indices",
            "type": [
                "list",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "_traced_top",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_traced_sort_norm_and_update_finished",
            "type": [
                "int",
                "set",
                "dict[str, bool]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_traced_sort_states",
            "type": [
                "list",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "indices",
            "type": [
                "int",
                "list",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": []
        }
    ],
    "forward@BrevityPenalty": [
        {
            "category": "arg",
            "name": "hyp_lengths",
            "type": [
                "torch.Tensor",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "reference_lengths",
            "type": [
                "torch.Tensor",
                "torch.FloatTensor",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "hyp_lengths",
            "type": [
                "torch.Tensor",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "reference_lengths",
            "type": [
                "torch.Tensor",
                "torch.FloatTensor",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "log_bp",
            "type": [
                "int",
                "float"
            ]
        }
    ],
    "forward@CandidateScorer": [
        {
            "category": "arg",
            "name": "scores",
            "type": [
                "torch.LongTensor",
                "torch.Tensor"
            ]
        },
        {
            "category": "arg",
            "name": "lengths",
            "type": [
                "torch.Tensor",
                "torch.LongTensor"
            ]
        },
        {
            "category": "arg",
            "name": "reference_lengths",
            "type": [
                "torch.Tensor",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "lengths",
            "type": [
                "torch.Tensor",
                "torch.LongTensor"
            ]
        },
        {
            "category": "local",
            "name": "lp",
            "type": [
                "int",
                "float",
                "pt_@_Tensor",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_bp",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "reference_lengths",
            "type": [
                "torch.Tensor",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "bp",
            "type": [
                "int",
                "float",
                "pt_@_Tensor"
            ]
        },
        {
            "category": "local",
            "name": "scores",
            "type": [
                "torch.LongTensor",
                "torch.Tensor"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "float",
                "torch.Tensor",
                "numpy.ndarray"
            ]
        }
    ],
    "forward@GreedySearch": [
        {
            "category": "arg",
            "name": "source",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "arg",
            "name": "source_length",
            "type": [
                "numpy.ndarray",
                "torch.Tensor",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "restrict_lexicon",
            "type": [
                "None",
                "torch.Tensor",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "arg",
            "name": "max_output_lengths",
            "type": [
                "None",
                "int",
                "torch.Tensor"
            ]
        },
        {
            "category": "arg",
            "name": "target_prefix",
            "type": [
                "None",
                "torch.Tensor",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "arg",
            "name": "target_prefix_factors",
            "type": [
                "None",
                "bool",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "local",
            "name": "batch_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "max_iterations",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "best_word_index",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "outputs",
            "type": [
                "list",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "source_length",
            "type": [
                "numpy.ndarray",
                "torch.Tensor",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "model_states",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "int",
                "list[tuple[typing.Any]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "nvs_prediction",
            "type": [
                "list[int]",
                "list",
                "tuple[typing.Union[int,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "vocab_slice_ids",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "output_vocab_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "restrict_lexicon",
            "type": [
                "None",
                "torch.Tensor",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix",
            "type": [
                "None",
                "torch.Tensor",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "local",
            "name": "source_words",
            "type": [
                "int",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "prefix_masks",
            "type": [
                "list",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "prefix_masks_length",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix_factor_masks",
            "type": [
                "dict[int, tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix_factor_length",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix_factors",
            "type": [
                "None",
                "bool",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "t",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "target_prefix_factor_mask",
            "type": [
                "tuple[typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "scores",
            "type": [
                "list[float]",
                "list[typing.Union[float,int]]",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "target_factors",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_best_word_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "SearchResult"
            ]
        }
    ],
    "forward@GreedyTop1": [
        {
            "category": "arg",
            "name": "scores",
            "type": [
                "torch.Tensor",
                "torch.FloatTensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "vocab_slice_ids",
            "type": [
                "None",
                "torch.Tensor",
                "tuple[torch.Tensor]",
                "tuple[float]"
            ]
        },
        {
            "category": "arg",
            "name": "target_factors",
            "type": [
                "None",
                "torch.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "scores",
            "type": [
                "torch.Tensor",
                "torch.FloatTensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "best_word_index",
            "type": [
                "int",
                "set[int]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "vocab_slice_ids",
            "type": [
                "None",
                "torch.Tensor",
                "tuple[torch.Tensor]",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "target_factors",
            "type": [
                "None",
                "torch.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "factor_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "int",
                "set[int]",
                "list[int]"
            ]
        }
    ],
    "forward@LengthPenalty": [
        {
            "category": "arg",
            "name": "lengths",
            "type": [
                "numpy.ndarray",
                "gluonts.model.common.Tensor",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "lengths",
            "type": [
                "numpy.ndarray",
                "gluonts.model.common.Tensor",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "numerator",
            "type": [
                "numpy.ndarray",
                "gluonts.model.common.Tensor",
                "int"
            ]
        }
    ],
    "forward@RepeatStates": [
        {
            "category": "arg",
            "name": "states",
            "type": [
                "typing.OrderedDict",
                "list",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "repeated_states",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "states",
            "type": [
                "typing.OrderedDict",
                "list",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "repeat_axis",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "list"
            ]
        }
    ],
    "forward@SampleK": [
        {
            "category": "arg",
            "name": "scores",
            "type": [
                "torch.Tensor",
                "tuple",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "arg",
            "name": "target_dists",
            "type": [
                "torch.Tensor",
                "torch.LongTensor"
            ]
        },
        {
            "category": "arg",
            "name": "finished",
            "type": [
                "torch.Tensor",
                "dict[str, torch.Tensor]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "target_dists",
            "type": [
                "torch.Tensor",
                "torch.LongTensor",
                "list",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list",
                "list[list[int]]",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "best_word_indices",
            "type": [
                "int",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "finished",
            "type": [
                "torch.Tensor",
                "dict[str, torch.Tensor]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "scores",
            "type": [
                "torch.Tensor",
                "tuple",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "local",
            "name": "best_hyp_indices",
            "type": [
                "range",
                "int",
                "set[int]"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "tuple[typing.Union[range,int,set[int],dict,list,list[list[int]],list[float]]]"
            ]
        }
    ],
    "forward@SortNormalizeAndUpdateFinished": [
        {
            "category": "arg",
            "name": "best_hyp_indices",
            "type": [
                "torch.Tensor",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "best_word_indices",
            "type": [
                "torch.Tensor",
                "list[int]",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "arg",
            "name": "finished",
            "type": [
                "torch.Tensor",
                "list[bool]"
            ]
        },
        {
            "category": "arg",
            "name": "scores_accumulated",
            "type": [
                "numpy.ndarray",
                "torch.FloatTensor",
                "tuple[numpy.ndarray]"
            ]
        },
        {
            "category": "arg",
            "name": "lengths",
            "type": [
                "torch.Tensor",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "reference_lengths",
            "type": [
                "torch.LongTensor",
                "torch.Tensor",
                "torch.BoolTensor"
            ]
        },
        {
            "category": "arg",
            "name": "factor_args",
            "type": [
                "torch.Tensor",
                "list[int]",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "local",
            "name": "finished",
            "type": [
                "torch.Tensor",
                "list[bool]",
                "int",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "best_hyp_indices",
            "type": [
                "torch.Tensor",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "lengths",
            "type": [
                "torch.Tensor",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "reference_lengths",
            "type": [
                "torch.LongTensor",
                "torch.Tensor",
                "torch.BoolTensor",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "best_word_indices",
            "type": [
                "torch.Tensor",
                "list[int]",
                "torch.FloatTensor",
                "int",
                "set[int]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "newly_finished",
            "type": [
                "str",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "scores_accumulated",
            "type": [
                "numpy.ndarray",
                "torch.FloatTensor",
                "tuple[numpy.ndarray]",
                "int",
                "str",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "scores",
            "type": [
                "list[typing.Union[int,str,list[float]]]",
                "list[typing.Union[int,str,list[float],float]]"
            ]
        },
        {
            "category": "local",
            "name": "factor_args",
            "type": [
                "torch.Tensor",
                "list[int]",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "local",
            "name": "factors",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "factor_scores_accumulated",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "f_sorted",
            "type": [
                "list[int]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "factor_scores",
            "type": [
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "factor_indices",
            "type": [
                "int",
                "list",
                "range"
            ]
        },
        {
            "category": "local",
            "name": "updated_factor_scores",
            "type": [
                "float",
                "int",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "tuple[typing.Union[int,set[int],dict,list[typing.Union[int,str,list[float],float]]]]"
            ]
        }
    ],
    "forward@SortStates": [
        {
            "category": "arg",
            "name": "best_hyp_indices",
            "type": [
                "torch.Tensor",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "states",
            "type": [
                "torch.Tensor",
                "list",
                "list[list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "sorted_states",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "states",
            "type": [
                "torch.Tensor",
                "list",
                "list[list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "best_hyp_indices",
            "type": [
                "torch.Tensor",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "list"
            ]
        }
    ],
    "forward@TopK": [
        {
            "category": "arg",
            "name": "scores",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "scores",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "batch_times_beam",
            "type": [
                "int",
                "list[set[typing.Any]]",
                "tuple[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "vocab_size",
            "type": [
                "int",
                "list[typing.Callable[None, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list",
                "float",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "indices",
            "type": [
                "str",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "best_hyp_indices",
            "type": [
                "int",
                "list[int]",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "best_word_indices",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "tuple[typing.Union[int,list[int],set[int],list,float,dict[str, int]]]"
            ]
        }
    ],
    "forward@UpdateScores": [
        {
            "category": "arg",
            "name": "target_dists",
            "type": [
                "torch.Tensor",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "finished",
            "type": [
                "torch.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "scores_accumulated",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "lengths",
            "type": [
                "float",
                "int",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "arg",
            "name": "max_lengths",
            "type": [
                "int",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "arg",
            "name": "pad_dist",
            "type": [
                "torch.Tensor",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "eos_dist",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "target_dists",
            "type": [
                "torch.Tensor",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "scores_accumulated",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "scores",
            "type": [
                "float",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pad_dist",
            "type": [
                "torch.Tensor",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "finished",
            "type": [
                "torch.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "lengths",
            "type": [
                "float",
                "int",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "local",
            "name": "max_lengths",
            "type": [
                "int",
                "torch.FloatTensor"
            ]
        },
        {
            "category": "local",
            "name": "below_max_length",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "eos_dist",
            "type": [
                "torch.Tensor",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "forward",
            "type": [
                "tuple[typing.Union[int,float,str]]"
            ]
        }
    ],
    "get_search_algorithm@global": [
        {
            "category": "arg",
            "name": "models",
            "type": []
        },
        {
            "category": "arg",
            "name": "beam_size",
            "type": [
                "int",
                "None",
                "numpy.ndarray",
                "numpy.void"
            ]
        },
        {
            "category": "arg",
            "name": "device",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "output_scores",
            "type": [
                "int",
                "tuple[int]",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "scorer",
            "type": [
                "int",
                "numpy.array"
            ]
        },
        {
            "category": "arg",
            "name": "ensemble_mode",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "beam_search_stop",
            "type": []
        },
        {
            "category": "arg",
            "name": "constant_length_ratio",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "knn_lambda",
            "type": []
        },
        {
            "category": "arg",
            "name": "sample",
            "type": [
                "None",
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "prevent_unk",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "greedy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "skip_nvs",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "nvs_thresh",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "search",
            "type": [
                "None",
                "GreedySearch",
                "BeamSearch"
            ]
        },
        {
            "category": "local",
            "name": "greedy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "output_scores",
            "type": [
                "int",
                "tuple[int]",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "device",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skip_nvs",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "nvs_thresh",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "inference",
            "type": [
                "None",
                "_SingleModelInference",
                "_EnsembleInference"
            ]
        },
        {
            "category": "local",
            "name": "beam_size",
            "type": [
                "int",
                "None",
                "numpy.ndarray",
                "numpy.void"
            ]
        },
        {
            "category": "local",
            "name": "sample",
            "type": [
                "None",
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "skip_softmax",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "constant_length_ratio",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "ensemble_mode",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "scorer",
            "type": [
                "int",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "prevent_unk",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_search_algorithm",
            "type": [
                "BeamSearch",
                "GreedySearch"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        }
    ],
    "linear_interpolation@_EnsembleInference": [
        {
            "category": "arg",
            "name": "predictions",
            "type": [
                "numpy.ndarray",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "linear_interpolation",
            "type": [
                "torch.Tensor",
                "torch.FloatTensor",
                "str"
            ]
        }
    ],
    "log_linear_interpolation@_EnsembleInference": [
        {
            "category": "arg",
            "name": "predictions",
            "type": [
                "tuple[torch.Tensor]",
                "numpy.ndarray",
                "torch.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "predictions",
            "type": [
                "tuple[torch.Tensor]",
                "numpy.ndarray",
                "torch.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "p",
            "type": [
                "torch.Tensor"
            ]
        },
        {
            "category": "return",
            "name": "log_linear_interpolation",
            "type": []
        }
    ],
    "log_search_stats@Search": [
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "return",
            "name": "log_search_stats",
            "type": [
                "None"
            ]
        }
    ],
    "model_output_factor_vocab_size@_EnsembleInference": [
        {
            "category": "return",
            "name": "model_output_factor_vocab_size",
            "type": []
        }
    ],
    "model_output_factor_vocab_size@_Inference": [
        {
            "category": "return",
            "name": "model_output_factor_vocab_size",
            "type": [
                "None"
            ]
        }
    ],
    "model_output_factor_vocab_size@_SingleModelInference": [
        {
            "category": "return",
            "name": "model_output_factor_vocab_size",
            "type": []
        }
    ],
    "model_output_vocab_size@_EnsembleInference": [
        {
            "category": "return",
            "name": "model_output_vocab_size",
            "type": []
        }
    ],
    "model_output_vocab_size@_Inference": [
        {
            "category": "return",
            "name": "model_output_vocab_size",
            "type": [
                "None"
            ]
        }
    ],
    "model_output_vocab_size@_SingleModelInference": [
        {
            "category": "return",
            "name": "model_output_vocab_size",
            "type": []
        }
    ],
    "state_structure@_EnsembleInference": [
        {
            "category": "return",
            "name": "state_structure",
            "type": [
                "list"
            ]
        }
    ],
    "state_structure@_Inference": [
        {
            "category": "return",
            "name": "state_structure",
            "type": [
                "None"
            ]
        }
    ],
    "state_structure@_SingleModelInference": [
        {
            "category": "return",
            "name": "state_structure",
            "type": [
                "list"
            ]
        }
    ],
    "unnormalize@CandidateScorer": [
        {
            "category": "arg",
            "name": "scores",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "lengths",
            "type": [
                "numpy.array",
                "typing.Collection",
                "None",
                "int",
                "slice"
            ]
        },
        {
            "category": "arg",
            "name": "reference_lengths",
            "type": [
                "typing.Collection",
                "None",
                "int",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "_bp",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "lengths",
            "type": [
                "numpy.array",
                "typing.Collection",
                "None",
                "int",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "reference_lengths",
            "type": [
                "typing.Collection",
                "None",
                "int",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "bp",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "scores",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "unnormalize",
            "type": [
                "float",
                "int",
                "tuple[float]"
            ]
        }
    ],
    "update_output_vocab_size@Search": [
        {
            "category": "arg",
            "name": "size",
            "type": [
                "int",
                "typing.DefaultDict"
            ]
        },
        {
            "category": "local",
            "name": "size",
            "type": [
                "int",
                "typing.DefaultDict"
            ]
        },
        {
            "category": "return",
            "name": "update_output_vocab_size",
            "type": [
                "None"
            ]
        }
    ]
}