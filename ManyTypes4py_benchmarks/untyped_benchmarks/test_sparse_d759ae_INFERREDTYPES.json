{
    "_check_unsupported@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "bytes",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "bytes",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_check_unsupported",
            "type": [
                "None"
            ]
        }
    ],
    "_compare_other@TestSparseArray": [
        {
            "category": "arg",
            "name": "ser",
            "type": [
                "bool",
                "typing.Iterator",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "data_for_compare",
            "type": [
                "dict[str, list[int]]",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "comparison_op",
            "type": [
                "tuple",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "other",
            "type": [
                "pandas.DataFrame",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "comparison_op",
            "type": [
                "tuple",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "op",
            "type": [
                "tuple",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "data_for_compare",
            "type": [
                "dict[str, list[int]]",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "pandas.DataFrame",
                "list[str]",
                "None",
                "pd_@_Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[typing.Optional[bool]]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "SparseArray"
            ]
        },
        {
            "category": "return",
            "name": "_compare_other",
            "type": [
                "None"
            ]
        }
    ],
    "_skip_if_different_combine@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "list",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "list",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_skip_if_different_combine",
            "type": [
                "None"
            ]
        }
    ],
    "_supports_reduction@TestSparseArray": [
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "str",
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "op_name",
            "type": [
                "str",
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_supports_reduction",
            "type": [
                "bool"
            ]
        }
    ],
    "data@global": [
        {
            "category": "arg",
            "name": "request",
            "type": []
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "SparseArray"
            ]
        },
        {
            "category": "return",
            "name": "data",
            "type": [
                "SparseArray"
            ]
        }
    ],
    "data_for_compare@global": [
        {
            "category": "arg",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "data_for_compare",
            "type": [
                "SparseArray"
            ]
        }
    ],
    "data_for_grouping@global": [
        {
            "category": "arg",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "data_for_grouping",
            "type": [
                "SparseArray"
            ]
        }
    ],
    "data_for_sorting@global": [
        {
            "category": "arg",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "data_for_sorting",
            "type": [
                "SparseArray"
            ]
        }
    ],
    "data_for_twos@global": [
        {
            "category": "return",
            "name": "data_for_twos",
            "type": [
                "SparseArray"
            ]
        }
    ],
    "data_missing@global": [
        {
            "category": "arg",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "data_missing",
            "type": [
                "SparseArray"
            ]
        }
    ],
    "data_missing_for_sorting@global": [
        {
            "category": "arg",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "data_missing_for_sorting",
            "type": [
                "SparseArray"
            ]
        }
    ],
    "data_repeated@global": [
        {
            "category": "arg",
            "name": "request",
            "type": []
        },
        {
            "category": "return",
            "name": "data_repeated",
            "type": []
        }
    ],
    "dtype@global": [
        {
            "category": "return",
            "name": "dtype",
            "type": [
                "SparseDtype"
            ]
        }
    ],
    "gen@global": [
        {
            "category": "arg",
            "name": "count",
            "type": []
        },
        {
            "category": "return",
            "name": "gen",
            "type": [
                "typing.Generator[SparseArray]"
            ]
        }
    ],
    "global@global": [],
    "make_data@global": [
        {
            "category": "arg",
            "name": "fill_value",
            "type": [
                "float",
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "rng",
            "type": [
                "int",
                "list[int]",
                "list[tuple[typing.Union[int,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "fill_value",
            "type": [
                "float",
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "make_data",
            "type": []
        }
    ],
    "na_cmp@global": [
        {
            "category": "return",
            "name": "na_cmp",
            "type": [
                "typing.Callable"
            ]
        }
    ],
    "test_align@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "list[numpy.ndarray]"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "str",
                "float",
                "\"ks.Series\""
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "list[numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "str",
                "float",
                "\"ks.Series\""
            ]
        },
        {
            "category": "return",
            "name": "test_align",
            "type": [
                "None"
            ]
        }
    ],
    "test_align_frame@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "dict",
                "pandas.core.groupby.DataFrameGroupBy"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "geostream.base.Feature",
                "dict[str, list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "dict",
                "pandas.core.groupby.DataFrameGroupBy"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "geostream.base.Feature",
                "dict[str, list[int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_align_frame",
            "type": [
                "None"
            ]
        }
    ],
    "test_align_series_frame@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "typing.Mapping",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "typing.Mapping",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_align_series_frame",
            "type": [
                "None"
            ]
        }
    ],
    "test_argmin_argmax_all_na@TestSparseArray": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "typing.MutableMapping",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "dict",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "str",
                "typing.MutableMapping",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "dict",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "str",
                "typing.MutableMapping",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "str",
                "typing.MutableMapping",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_argmin_argmax_all_na",
            "type": [
                "None"
            ]
        }
    ],
    "test_arith_frame_with_scalar@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "typing.Callable[Any,Any, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "all_arithmetic_operators",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "request",
            "type": [
                "typing.Callable",
                "typing.Iterable[object]"
            ]
        },
        {
            "category": "local",
            "name": "all_arithmetic_operators",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mark",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "typing.Callable",
                "typing.Iterable[object]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "typing.Callable[Any,Any, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_arith_frame_with_scalar",
            "type": [
                "None"
            ]
        }
    ],
    "test_arith_series_with_array@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bool",
                "pandas.DataFrame",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "all_arithmetic_operators",
            "type": [
                "int",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bool",
                "pandas.DataFrame",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "all_arithmetic_operators",
            "type": [
                "int",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_arith_series_with_array",
            "type": [
                "None"
            ]
        }
    ],
    "test_arith_series_with_scalar@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "all_arithmetic_operators",
            "type": [
                "numpy.ndarray",
                "typing.Callable[T, bool]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "all_arithmetic_operators",
            "type": [
                "numpy.ndarray",
                "typing.Callable[T, bool]"
            ]
        },
        {
            "category": "return",
            "name": "test_arith_series_with_scalar",
            "type": [
                "None"
            ]
        }
    ],
    "test_array@TestSparseArray": [
        {
            "category": "arg",
            "name": "data_for_compare",
            "type": [
                "list[str]",
                "pandas.DataFrame",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "comparison_op",
            "type": [
                "list[str]",
                "int",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "request",
            "type": [
                "typing.Callable",
                "dict",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "comparison_op",
            "type": [
                "list[str]",
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "mark",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "typing.Callable",
                "dict",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "data_for_compare",
            "type": [
                "list[str]",
                "pandas.DataFrame",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "test_array",
            "type": [
                "None"
            ]
        }
    ],
    "test_array_repr@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "size",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "size",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_array_repr",
            "type": [
                "None"
            ]
        }
    ],
    "test_array_type_with_arg@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_array_type_with_arg",
            "type": [
                "None"
            ]
        }
    ],
    "test_astype_string@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "nullable_string_dtype",
            "type": [
                "bool",
                "tuple",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_astype_string",
            "type": [
                "None"
            ]
        }
    ],
    "test_concat_columns@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "pandas.core.series.Series"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "None",
                "typing.IO",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "pandas.core.series.Series"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "None",
                "typing.IO",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_concat_columns",
            "type": [
                "None"
            ]
        }
    ],
    "test_concat_extension_arrays_copy_false@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict[str, list[int]]",
                "bytearray",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[str, list[int]]",
                "bytearray",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_concat_extension_arrays_copy_false",
            "type": [
                "None"
            ]
        }
    ],
    "test_concat_mixed_dtypes@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df3",
            "type": [
                "pandas.DataFrame",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "dfs",
            "type": [
                "list[typing.Union[pandas.DataFrame,list,list[str]]]"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "pandas.DataFrame",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_concat_mixed_dtypes",
            "type": [
                "None"
            ]
        }
    ],
    "test_equals@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "bool",
                "pandas.DataFrame",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "as_series",
            "type": [
                "bool",
                "pandas.DataFrame",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "box",
            "type": [
                "bool",
                "pandas.DataFrame",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "bool",
                "pandas.DataFrame",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "as_series",
            "type": [
                "bool",
                "pandas.DataFrame",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "box",
            "type": [
                "bool",
                "pandas.DataFrame",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_equals",
            "type": [
                "None"
            ]
        }
    ],
    "test_equals_same_data_different_object@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_equals_same_data_different_object",
            "type": [
                "None"
            ]
        }
    ],
    "test_fillna_copy_frame@TestSparseArray": [
        {
            "category": "arg",
            "name": "data_missing",
            "type": [
                "bool",
                "pandas.DataFrame",
                "numpy.ndarray",
                "numpy.void"
            ]
        },
        {
            "category": "local",
            "name": "data_missing",
            "type": [
                "bool",
                "pandas.DataFrame",
                "numpy.ndarray",
                "numpy.void"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list[int]",
                "list",
                "list[list[float]]"
            ]
        },
        {
            "category": "return",
            "name": "test_fillna_copy_frame",
            "type": [
                "None"
            ]
        }
    ],
    "test_fillna_copy_series@TestSparseArray": [
        {
            "category": "arg",
            "name": "data_missing",
            "type": [
                "bool",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "data_missing",
            "type": [
                "bool",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list",
                "list[int]",
                "list[tuple[typing.Union[float,int]]]"
            ]
        },
        {
            "category": "return",
            "name": "test_fillna_copy_series",
            "type": [
                "None"
            ]
        }
    ],
    "test_fillna_frame@TestSparseArray": [
        {
            "category": "arg",
            "name": "data_missing",
            "type": [
                "dict[str, pandas.DataFrame]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "data_missing",
            "type": [
                "dict[str, pandas.DataFrame]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "fill_value",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list[tuple[typing.Any]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "SparseDtype"
            ]
        },
        {
            "category": "return",
            "name": "test_fillna_frame",
            "type": [
                "None"
            ]
        }
    ],
    "test_fillna_length_mismatch@TestSparseArray": [
        {
            "category": "arg",
            "name": "data_missing",
            "type": [
                "typing.Callable[typing.Any, None]",
                "list[typing.Any]",
                "None",
                "dict[str, bool]"
            ]
        },
        {
            "category": "local",
            "name": "data_missing",
            "type": [
                "typing.Callable[typing.Any, None]",
                "list[typing.Any]",
                "None",
                "dict[str, bool]"
            ]
        },
        {
            "category": "return",
            "name": "test_fillna_length_mismatch",
            "type": [
                "None"
            ]
        }
    ],
    "test_fillna_limit_frame@TestSparseArray": [
        {
            "category": "arg",
            "name": "data_missing",
            "type": [
                "pandas.DataFrame",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "data_missing",
            "type": [
                "pandas.DataFrame",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_fillna_limit_frame",
            "type": [
                "None"
            ]
        }
    ],
    "test_fillna_limit_series@TestSparseArray": [
        {
            "category": "arg",
            "name": "data_missing",
            "type": [
                "pandas.DataFrame",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data_missing",
            "type": [
                "pandas.DataFrame",
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_fillna_limit_series",
            "type": [
                "None"
            ]
        }
    ],
    "test_fillna_no_op_returns_copy@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "request",
            "type": []
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_fillna_no_op_returns_copy",
            "type": [
                "None"
            ]
        }
    ],
    "test_fillna_series@TestSparseArray": [
        {
            "category": "arg",
            "name": "data_missing",
            "type": [
                "bool",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_fillna_series",
            "type": [
                "None"
            ]
        }
    ],
    "test_get@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_get",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_extension_agg@TestSparseArray": [
        {
            "category": "arg",
            "name": "as_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "data_for_grouping",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "as_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "data_for_grouping",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_extension_agg",
            "type": [
                "None"
            ]
        }
    ],
    "test_isna@TestSparseArray": [
        {
            "category": "arg",
            "name": "data_missing",
            "type": [
                "bool",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "data_missing",
            "type": [
                "bool",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "sarr",
            "type": [
                "SparseArray",
                "list",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected_dtype",
            "type": [
                "SparseDtype"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "SparseArray"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "typing.Iterator"
            ]
        },
        {
            "category": "return",
            "name": "test_isna",
            "type": [
                "None"
            ]
        }
    ],
    "test_map@TestSparseArray": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "na_action",
            "type": [
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "int",
                "set",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "SparseArray"
            ]
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "na_action",
            "type": [
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[object]",
                "dict",
                "typing.NoReturn"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "int",
                "set",
                "numpy.array"
            ]
        },
        {
            "category": "return",
            "name": "test_map",
            "type": [
                "None"
            ]
        }
    ],
    "test_map_raises@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "pandas.DataFrame",
                "pandas.Series"
            ]
        },
        {
            "category": "arg",
            "name": "na_action",
            "type": [
                "dict",
                "pandas.DataFrame",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "pandas.DataFrame",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "na_action",
            "type": [
                "dict",
                "pandas.DataFrame",
                "pandas.Series"
            ]
        },
        {
            "category": "return",
            "name": "test_map_raises",
            "type": [
                "None"
            ]
        }
    ],
    "test_merge@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "dict[str, int]"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_merge",
            "type": [
                "None"
            ]
        }
    ],
    "test_reduce_frame@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "all_numeric_reductions",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "request",
            "type": [
                "bool",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "all_numeric_reductions",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "mark",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_reduce_frame",
            "type": [
                "None"
            ]
        }
    ],
    "test_reduce_series_numeric@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "all_numeric_reductions",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "request",
            "type": [
                "bool",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "all_numeric_reductions",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "mark",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_reduce_series_numeric",
            "type": [
                "None"
            ]
        }
    ],
    "test_reindex@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "list",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "tuple[bytes]",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "list",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "tuple[bytes]",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_reindex",
            "type": [
                "None"
            ]
        }
    ],
    "test_scalar@TestSparseArray": [
        {
            "category": "arg",
            "name": "data_for_compare",
            "type": [
                "numpy.ndarray",
                "typing.Iterable"
            ]
        },
        {
            "category": "arg",
            "name": "comparison_op",
            "type": [
                "typing.Callable[str, bool]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "data_for_compare",
            "type": [
                "numpy.ndarray",
                "typing.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "comparison_op",
            "type": [
                "typing.Callable[str, bool]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_scalar",
            "type": [
                "None"
            ]
        }
    ],
    "test_searchsorted@TestSparseArray": [
        {
            "category": "arg",
            "name": "performance_warning",
            "type": [
                "bool",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "data_for_sorting",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "as_series",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "performance_warning",
            "type": [
                "bool",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data_for_sorting",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "as_series",
            "type": [
                "bool",
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_searchsorted",
            "type": [
                "None"
            ]
        }
    ],
    "test_shift_0_periods@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "int",
                "dict",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_shift_0_periods",
            "type": [
                "None"
            ]
        }
    ],
    "test_sparse_array@TestSparseArray": [
        {
            "category": "arg",
            "name": "data_for_compare",
            "type": [
                "list[str]",
                "numpy.ndarray",
                "tuple[typing.Union[numpy.ndarray,float]]"
            ]
        },
        {
            "category": "arg",
            "name": "comparison_op",
            "type": [
                "list[str]",
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "request",
            "type": [
                "dict",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "comparison_op",
            "type": [
                "list[str]",
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mark",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "dict",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "data_for_compare",
            "type": [
                "list[str]",
                "numpy.ndarray",
                "tuple[typing.Union[numpy.ndarray,float]]"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list",
                "list[int]",
                "list[str]",
                "numpy.ndarray",
                "tuple[typing.Union[numpy.ndarray,float]]"
            ]
        },
        {
            "category": "return",
            "name": "test_sparse_array",
            "type": [
                "None"
            ]
        }
    ],
    "test_stack@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "list[int]",
                "tuple[numpy.array]",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "columns",
            "type": [
                "list[int]",
                "tuple[numpy.array]",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "future_stack",
            "type": [
                "list[int]",
                "tuple[numpy.array]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "list[int]",
                "tuple[numpy.array]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "columns",
            "type": [
                "list[int]",
                "tuple[numpy.array]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "future_stack",
            "type": [
                "list[int]",
                "tuple[numpy.array]",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "test_stack",
            "type": [
                "None"
            ]
        }
    ],
    "test_where_series@TestSparseArray": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "list[list[float]]",
                "numpy.ndarray",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "pandas.DataFrame",
                "list",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "list[list[float]]",
                "numpy.ndarray",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "a",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "b",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "new_dtype",
            "type": [
                "SparseDtype"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "pandas.DataFrame",
                "list",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[bool]",
                "int",
                "tuple[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_where_series",
            "type": [
                "None"
            ]
        }
    ]
}