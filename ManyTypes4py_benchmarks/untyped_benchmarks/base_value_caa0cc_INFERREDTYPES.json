{
    "__and__@ValueSet": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "set[VT]",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "set[VT]",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "return",
            "name": "__and__",
            "type": []
        }
    ],
    "__bool__@ValueSet": [
        {
            "category": "return",
            "name": "__bool__",
            "type": [
                "bool"
            ]
        }
    ],
    "__eq__@ValueSet": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "set[VT]",
                "list[T]",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "set[VT]",
                "list[T]",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "return",
            "name": "__eq__",
            "type": [
                "bool"
            ]
        }
    ],
    "__getattr__@ValueSet": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__getattr__",
            "type": []
        }
    ],
    "__getattr__@_ValueWrapperBase": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__getattr__",
            "type": []
        }
    ],
    "__hash__@ValueSet": [
        {
            "category": "return",
            "name": "__hash__",
            "type": [
                "int"
            ]
        }
    ],
    "__init__@ContextualizedNode": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "typing.Mapping",
                "dict[str, typing.Any]",
                "None",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": [
                "typing.Any",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "typing.Mapping",
                "dict[str, typing.Any]",
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@TreeValue": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "dict",
                "typing.OrderedDict"
            ]
        },
        {
            "category": "arg",
            "name": "parent_context",
            "type": [
                "dict",
                "typing.OrderedDict"
            ]
        },
        {
            "category": "arg",
            "name": "tree_node",
            "type": [
                "dict",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "dict",
                "typing.OrderedDict"
            ]
        },
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "dict",
                "typing.OrderedDict"
            ]
        },
        {
            "category": "local",
            "name": "tree_node",
            "type": [
                "dict",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Value": [
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "bool",
                "typing.Hashable"
            ]
        },
        {
            "category": "arg",
            "name": "parent_context",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "inference_state",
            "type": [
                "bool",
                "typing.Hashable"
            ]
        },
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ValueSet": [
        {
            "category": "arg",
            "name": "iterable",
            "type": [
                "tuple[int]",
                "KT"
            ]
        },
        {
            "category": "local",
            "name": "iterable",
            "type": [
                "tuple[int]",
                "KT"
            ]
        },
        {
            "category": "local",
            "name": "_set",
            "type": [
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ValueWrapper": [
        {
            "category": "arg",
            "name": "wrapped_value",
            "type": [
                "typing.Callable[T, None]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "wrapped_value",
            "type": [
                "typing.Callable[T, None]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_wrapped_value",
            "type": [
                "typing.Callable[T, None]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__iter__@ValueSet": [
        {
            "category": "return",
            "name": "__iter__",
            "type": []
        }
    ],
    "__len__@ValueSet": [
        {
            "category": "return",
            "name": "__len__",
            "type": [
                "int"
            ]
        }
    ],
    "__ne__@ValueSet": [
        {
            "category": "arg",
            "name": "other",
            "type": []
        },
        {
            "category": "return",
            "name": "__ne__",
            "type": [
                "bool"
            ]
        }
    ],
    "__or__@ValueSet": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "set[VT]",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "set[VT]",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "return",
            "name": "__or__",
            "type": []
        }
    ],
    "__repr__@ContextualizedNode": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@LazyValueWrapper": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@TreeValue": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@ValueSet": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@ValueWrapper": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_as_context@Value": [
        {
            "category": "return",
            "name": "_as_context",
            "type": [
                "None"
            ]
        }
    ],
    "_from_frozen_set@ValueSet": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "frozenset_",
            "type": [
                "list[str]",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "self",
            "type": [
                "typing.Final",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "frozenset_",
            "type": [
                "list[str]",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "_set",
            "type": [
                "list[str]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_from_frozen_set",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "_get_value_filters@HelperValueMixin": [
        {
            "category": "arg",
            "name": "name_or_str",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "name_or_str",
            "type": [
                "str",
                "bool",
                "Name"
            ]
        },
        {
            "category": "local",
            "name": "origin_scope",
            "type": [
                "Name",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_get_value_filters",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "_get_wrapped_value@LazyValueWrapper": [
        {
            "category": "return",
            "name": "_get_wrapped_value",
            "type": [
                "None"
            ]
        }
    ],
    "_getitem@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "index_values",
            "type": [
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "unused_values",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "index_values",
            "type": [
                "T"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "int",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_getitem",
            "type": [
                "list",
                "str",
                "dict"
            ]
        }
    ],
    "_wrapped_value@LazyValueWrapper": [
        {
            "category": "return",
            "name": "_wrapped_value",
            "type": [
                "str",
                "typing.Sequence[str]",
                "bool"
            ]
        }
    ],
    "as_context@HelperValueMixin": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "as_context",
            "type": []
        }
    ],
    "create_cached@_ValueWrapperBase": [
        {
            "category": "arg",
            "name": "cls",
            "type": []
        },
        {
            "category": "arg",
            "name": "inference_state",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "create_cached",
            "type": []
        }
    ],
    "execute@HelperValueMixin": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "str",
                "typing.Iterable[typing.Any]",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "str",
                "typing.Iterable[typing.Any]",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "return",
            "name": "execute",
            "type": [
                "typing.Callable",
                "typing.Type",
                "bool"
            ]
        }
    ],
    "execute@ValueSet": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "execute",
            "type": [
                "str",
                "typing.Type",
                "dict"
            ]
        }
    ],
    "execute_annotation@HelperValueMixin": [
        {
            "category": "return",
            "name": "execute_annotation",
            "type": [
                "bytes",
                "dbcontracts.graph.compiled.ManifestNode",
                "dbcontracts.graph.compiled.NonSourceCompiledNode"
            ]
        }
    ],
    "execute_operation@Value": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "T",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "operator",
            "type": [
                "T",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "operator",
            "type": [
                "T",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "T",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "execute_operation",
            "type": []
        }
    ],
    "execute_with_values@HelperValueMixin": [
        {
            "category": "arg",
            "name": "value_list",
            "type": [
                "list",
                "arguments.MutableArgument"
            ]
        },
        {
            "category": "local",
            "name": "value_list",
            "type": [
                "list",
                "arguments.MutableArgument"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "ValuesArguments"
            ]
        },
        {
            "category": "return",
            "name": "execute_with_values",
            "type": [
                "typing.Type",
                "bool"
            ]
        }
    ],
    "execute_with_values@ValueSet": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "execute_with_values",
            "type": [
                "str"
            ]
        }
    ],
    "filter@ValueSet": [
        {
            "category": "arg",
            "name": "filter_func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "filter_func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "filter",
            "type": []
        }
    ],
    "from_sets@ValueSet": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "set[typing.Type]",
                "set[int]",
                "\"AbstractExpandSet\""
            ]
        },
        {
            "category": "arg",
            "name": "sets",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "aggregated",
            "type": [
                "set",
                "list[list[typing.Any]]",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "set_",
            "type": [
                "str",
                "ValueSet"
            ]
        },
        {
            "category": "local",
            "name": "sets",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "set[typing.Type]",
                "set[int]",
                "\"AbstractExpandSet\""
            ]
        },
        {
            "category": "return",
            "name": "from_sets",
            "type": [
                "str"
            ]
        }
    ],
    "gather_annotation_classes@HelperValueMixin": [
        {
            "category": "return",
            "name": "gather_annotation_classes",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "gather_annotation_classes@ValueSet": [
        {
            "category": "return",
            "name": "gather_annotation_classes",
            "type": [
                "typing.Type",
                "T"
            ]
        }
    ],
    "get_item@ValueSet": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "get_item",
            "type": [
                "str",
                "typing.Callable",
                "None"
            ]
        }
    ],
    "get_qualified_names@Value": [
        {
            "category": "return",
            "name": "get_qualified_names",
            "type": [
                "None"
            ]
        }
    ],
    "get_root_context@ContextualizedNode": [
        {
            "category": "return",
            "name": "get_root_context",
            "type": [
                "dict",
                "list[dict]",
                "str"
            ]
        }
    ],
    "get_root_context@HelperValueMixin": [
        {
            "category": "local",
            "name": "value",
            "type": [
                "HelperValueMixin",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "value_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_root_context",
            "type": [
                "str",
                "bool",
                "typing.Sequence[str]",
                "HelperValueMixin"
            ]
        }
    ],
    "get_safe_value@Value": [
        {
            "category": "arg",
            "name": "default",
            "type": [
                "bool",
                "tuple[typing.Any]",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "sentinel",
            "type": [
                "bool",
                "tuple[typing.Any]",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "default",
            "type": [
                "bool",
                "tuple[typing.Any]",
                "tuple[typing.Union[str,int]]",
                "sentinel"
            ]
        },
        {
            "category": "return",
            "name": "get_safe_value",
            "type": [
                "bool",
                "tuple[typing.Any]",
                "tuple[typing.Union[str,int]]",
                "sentinel"
            ]
        }
    ],
    "get_signatures@Value": [
        {
            "category": "return",
            "name": "get_signatures",
            "type": [
                "list"
            ]
        }
    ],
    "get_signatures@ValueSet": [
        {
            "category": "return",
            "name": "get_signatures",
            "type": [
                "list"
            ]
        }
    ],
    "get_type_hint@Value": [
        {
            "category": "arg",
            "name": "add_class_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_type_hint",
            "type": [
                "None"
            ]
        }
    ],
    "get_type_hint@ValueSet": [
        {
            "category": "arg",
            "name": "add_class_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "add_class_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "t",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "type_hints",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "get_type_hint",
            "type": [
                "None",
                "typing.Text",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "optional",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str",
                "list",
                "typing.Text"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "sentinel",
            "type": [
                "bool",
                "tuple[typing.Any]",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "NO_VALUES",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "goto@HelperValueMixin": [
        {
            "category": "arg",
            "name": "name_or_str",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "name_context",
            "type": [
                "None",
                "dict",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "analysis_errors",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "name_or_str",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "filters",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "goto",
            "type": []
        }
    ],
    "goto@ValueSet": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "goto",
            "type": []
        }
    ],
    "infer@ContextualizedNode": [
        {
            "category": "return",
            "name": "infer",
            "type": []
        }
    ],
    "infer_type_vars@Value": [
        {
            "category": "arg",
            "name": "value_set",
            "type": [
                "str",
                "bool",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "infer_type_vars",
            "type": [
                "dict"
            ]
        }
    ],
    "infer_type_vars@ValueSet": [
        {
            "category": "arg",
            "name": "value_set",
            "type": []
        },
        {
            "category": "local",
            "name": "type_var_dict",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "infer_type_vars",
            "type": [
                "dict"
            ]
        }
    ],
    "is_bound_method@Value": [
        {
            "category": "return",
            "name": "is_bound_method",
            "type": [
                "bool"
            ]
        }
    ],
    "is_builtins_module@Value": [
        {
            "category": "return",
            "name": "is_builtins_module",
            "type": [
                "bool"
            ]
        }
    ],
    "is_class@Value": [
        {
            "category": "return",
            "name": "is_class",
            "type": [
                "bool"
            ]
        }
    ],
    "is_class_mixin@Value": [
        {
            "category": "return",
            "name": "is_class_mixin",
            "type": [
                "bool"
            ]
        }
    ],
    "is_compiled@Value": [
        {
            "category": "return",
            "name": "is_compiled",
            "type": [
                "bool"
            ]
        }
    ],
    "is_function@Value": [
        {
            "category": "return",
            "name": "is_function",
            "type": [
                "bool"
            ]
        }
    ],
    "is_instance@Value": [
        {
            "category": "return",
            "name": "is_instance",
            "type": [
                "bool"
            ]
        }
    ],
    "is_module@Value": [
        {
            "category": "return",
            "name": "is_module",
            "type": [
                "bool"
            ]
        }
    ],
    "is_namespace@Value": [
        {
            "category": "return",
            "name": "is_namespace",
            "type": [
                "bool"
            ]
        }
    ],
    "is_same_class@HelperValueMixin": [
        {
            "category": "arg",
            "name": "class2",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "class2",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "is_same_class",
            "type": [
                "bool"
            ]
        }
    ],
    "is_stub@Value": [
        {
            "category": "return",
            "name": "is_stub",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "is_sub_class_of@HelperValueMixin": [
        {
            "category": "arg",
            "name": "class_value",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "class_value",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "is_sub_class_of",
            "type": [
                "bool"
            ]
        }
    ],
    "iterate@HelperValueMixin": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "bool",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "is_async",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "is_async",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "iterate",
            "type": [
                "str",
                "list",
                "typing.Deque"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "None",
                "bool",
                "list[tuple[str]]"
            ]
        }
    ],
    "iterate@ValueSet": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "bool",
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "is_async",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "None",
                "bool",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "is_async",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "type_iters",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "iterate",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "iterate_values@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "bool",
                "typing.Hashable",
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "bool",
                "typing.Hashable",
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "is_async",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "bool",
                "typing.Hashable",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "None",
                "bool",
                "typing.Hashable",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "is_async",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "iterate_values",
            "type": []
        }
    ],
    "iterator_to_value_set@global": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "iterator_to_value_set",
            "type": []
        }
    ],
    "mapper@ValueSet": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "mapper",
            "type": []
        }
    ],
    "merge_types_of_iterate@HelperValueMixin": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "set[str]",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "is_async",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "None",
                "set[str]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "is_async",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "merge_types_of_iterate",
            "type": []
        }
    ],
    "name@Value": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "None"
            ]
        }
    ],
    "name@_ValueWrapperBase": [
        {
            "category": "local",
            "name": "wrapped_name_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "name",
            "type": [
                "ValueName",
                "CompiledValueName"
            ]
        }
    ],
    "py__await__@HelperValueMixin": [
        {
            "category": "local",
            "name": "await_value_set",
            "type": [
                "tuple[tuple[typing.Union[int,str]]]",
                "int",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "py__await__",
            "type": [
                "str",
                "typing.Callable"
            ]
        }
    ],
    "py__bool__@Value": [
        {
            "category": "return",
            "name": "py__bool__",
            "type": [
                "bool"
            ]
        }
    ],
    "py__call__@Value": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "typing.Type",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "py__call__",
            "type": []
        }
    ],
    "py__class__@ValueSet": [
        {
            "category": "return",
            "name": "py__class__",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "py__doc__@Value": [
        {
            "category": "return",
            "name": "py__doc__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "py__get__@Value": [
        {
            "category": "arg",
            "name": "instance",
            "type": [
                "typing.Callable",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "class_value",
            "type": [
                "typing.Callable",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "py__get__",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "py__get__on_class@Value": [
        {
            "category": "arg",
            "name": "calling_instance",
            "type": [
                "bool",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "instance",
            "type": [
                "bool",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "class_value",
            "type": [
                "bool",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__get__on_class",
            "type": []
        }
    ],
    "py__getattribute__@HelperValueMixin": [
        {
            "category": "arg",
            "name": "name_or_str",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "name_context",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "position",
            "type": [
                "None",
                "str",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "analysis_errors",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "name_context",
            "type": [
                "None",
                "str",
                "int",
                "HelperValueMixin",
                "typing.Generator[typing.Optional[typing.Type]]"
            ]
        },
        {
            "category": "local",
            "name": "name_or_str",
            "type": [
                "str",
                "Name"
            ]
        },
        {
            "category": "local",
            "name": "analysis_errors",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "str",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "dict",
                "list[None]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__getattribute__",
            "type": [
                "dict",
                "list[None]",
                "list"
            ]
        }
    ],
    "py__getattribute__@ValueSet": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "py__getattribute__",
            "type": [
                "str",
                "dbcontracts.graph.compiled.ManifestNode",
                "set"
            ]
        }
    ],
    "py__getattribute__alternatives@Value": [
        {
            "category": "arg",
            "name": "name_or_str",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__getattribute__alternatives",
            "type": []
        }
    ],
    "py__getitem__@Value": [
        {
            "category": "arg",
            "name": "index_value_set",
            "type": [
                "int",
                "typing.Type",
                "typing.Iterable[float]"
            ]
        },
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "typing.Iterable[int]",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "typing.Iterable[int]",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "py__getitem__",
            "type": []
        }
    ],
    "py__iter__@Value": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "py__iter__",
            "type": [
                "int",
                "dict"
            ]
        }
    ],
    "py__name__@HelperValueMixin": [
        {
            "category": "return",
            "name": "py__name__",
            "type": []
        }
    ],
    "py__next__@Value": [
        {
            "category": "arg",
            "name": "contextualized_node",
            "type": [
                "None",
                "set[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "contextualized_node",
            "type": [
                "None",
                "set[str]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__next__",
            "type": [
                "str",
                "list",
                "list[str]"
            ]
        }
    ],
    "py__simple_getitem__@Value": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "slice",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "py__simple_getitem__",
            "type": [
                "None"
            ]
        }
    ],
    "py__stop_iteration_returns@Value": [
        {
            "category": "return",
            "name": "py__stop_iteration_returns",
            "type": []
        }
    ],
    "try_merge@ValueSet": [
        {
            "category": "arg",
            "name": "function_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "value_set",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "function_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "try_merge",
            "type": [
                "str"
            ]
        }
    ],
    "wrapper@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "wrapper",
            "type": [
                "ValueSet"
            ]
        }
    ]
}