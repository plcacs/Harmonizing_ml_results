{
    "global@global": [],
    "test_check_if_model_expired@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "arg",
            "name": "freqai_conf",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "freqai_conf",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "dk",
            "type": [
                "str",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "test_check_if_model_expired",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_fulltimerange@global": [
        {
            "category": "arg",
            "name": "timerange",
            "type": [
                "list[typing.AnyStr]",
                "int",
                "None",
                "time_range.TimeRange"
            ]
        },
        {
            "category": "arg",
            "name": "train_period_days",
            "type": [
                "list[typing.AnyStr]",
                "int",
                "None",
                "time_range.TimeRange"
            ]
        },
        {
            "category": "arg",
            "name": "expected_result",
            "type": [
                "list[typing.AnyStr]",
                "int",
                "None",
                "time_range.TimeRange"
            ]
        },
        {
            "category": "arg",
            "name": "freqai_conf",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "bool",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "freqai_conf",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dk",
            "type": [
                "str",
                "int",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_create_fulltimerange",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_fulltimerange_incorrect_backtest_period@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "arg",
            "name": "freqai_conf",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "freqai_conf",
            "type": [
                "kata.data.io.network.GithubApi"
            ]
        },
        {
            "category": "local",
            "name": "dk",
            "type": [
                "str",
                "unittesmock.MagicMock",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_create_fulltimerange_incorrect_backtest_period",
            "type": [
                "None"
            ]
        }
    ],
    "test_filter_features@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "freqai_conf",
            "type": []
        },
        {
            "category": "local",
            "name": "filtered_df",
            "type": [
                "list",
                "list[str]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "_labels",
            "type": [
                "list[str]",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_filter_features",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_full_model_path@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "freqai_conf",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "model",
            "type": []
        },
        {
            "category": "local",
            "name": "freqai_conf",
            "type": [
                "dict",
                "dict[typing.Text, ]",
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "DataProvider",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "freqai_",
            "type": [
                "bool",
                "FreqaiDataKitchen",
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "model_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_full_model_path",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_pair_data_for_features_with_prealoaded_data@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "freqai_conf",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "freqai_conf",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "strategy",
            "type": [
                "dict",
                "dict[str, list[typing.Any]]",
                "dict[str, typing.Callable]"
            ]
        },
        {
            "category": "local",
            "name": "exchange",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "DataProvider"
            ]
        },
        {
            "category": "local",
            "name": "freqai_",
            "type": [
                "FreqaiDataKitchen"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "str",
                "pandas-master.pandas.tests.io.test_common.CustomFSPath",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "base_df",
            "type": [
                "pandas.DataFrame",
                "float",
                "typing.Iterable[int]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_get_pair_data_for_features_with_prealoaded_data",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_pair_data_for_features_without_preloaded_data@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "freqai_conf",
            "type": []
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "DataProvider"
            ]
        },
        {
            "category": "local",
            "name": "freqai_",
            "type": [
                "FreqaiDataKitchen"
            ]
        },
        {
            "category": "local",
            "name": "base_df",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_get_pair_data_for_features_without_preloaded_data",
            "type": [
                "None"
            ]
        }
    ],
    "test_make_train_test_datasets@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "freqai_conf",
            "type": []
        },
        {
            "category": "local",
            "name": "features_filtered",
            "type": [
                "list[int]",
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "labels_filtered",
            "type": [
                "list[str]",
                "list[tuple[typing.Union[str,...]]]",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "data_dictionary",
            "type": [
                "list[str]",
                "list",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_make_train_test_datasets",
            "type": [
                "None"
            ]
        }
    ],
    "test_populate_features@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests._TestServerFactory"
            ]
        },
        {
            "category": "arg",
            "name": "freqai_conf",
            "type": []
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests._TestServerFactory"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "DataProvider"
            ]
        },
        {
            "category": "local",
            "name": "freqai_",
            "type": [
                "FreqaiDataKitchen"
            ]
        },
        {
            "category": "local",
            "name": "corr_df",
            "type": [
                "pandas.DataFrame",
                "list[dict[str, typing.Any]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "base_df",
            "type": [
                "pandas.DataFrame",
                "pandas.Series",
                "list[datetime.date]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list",
                "list[datetime.date]"
            ]
        },
        {
            "category": "return",
            "name": "test_populate_features",
            "type": [
                "None"
            ]
        }
    ],
    "test_split_timerange@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "freqai_conf",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "timerange",
            "type": [
                "datetime.datetime",
                "tuple[int]",
                "tuple[list[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "train_period_days",
            "type": [
                "datetime.datetime",
                "tuple[int]",
                "tuple[list[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "backtest_period_days",
            "type": [
                "datetime.datetime",
                "tuple[int]",
                "tuple[list[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_result",
            "type": [
                "int",
                "float",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "freqai_conf",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "dict[str, typing.Union[typing.Any,typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dk",
            "type": [
                "str",
                "bool",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "timerange",
            "type": [
                "datetime.datetime",
                "tuple[int]",
                "tuple[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "train_period_days",
            "type": [
                "datetime.datetime",
                "tuple[int]",
                "tuple[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "backtest_period_days",
            "type": [
                "datetime.datetime",
                "tuple[int]",
                "tuple[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "tr_list",
            "type": [
                "list",
                "list[int]",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "bt_list",
            "type": [
                "list",
                "list[list[typing.Any]]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_split_timerange",
            "type": [
                "None"
            ]
        }
    ]
}