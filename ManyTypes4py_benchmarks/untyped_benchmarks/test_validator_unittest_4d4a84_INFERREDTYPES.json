{
    "get_min_new_period_epochs@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "get_min_new_period_epochs",
            "type": []
        }
    ],
    "get_mock_aggregate@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "get_mock_aggregate",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "list[typing.Any]"
            ]
        }
    ],
    "global@global": [],
    "run_compute_subscribed_subnets_arguments@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "str",
                "dict[str, int]",
                "dict[str, float]"
            ]
        },
        {
            "category": "arg",
            "name": "rng",
            "type": []
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "str",
                "dict[str, int]",
                "dict[str, float]"
            ]
        },
        {
            "category": "return",
            "name": "run_compute_subscribed_subnets_arguments",
            "type": [
                "None"
            ]
        }
    ],
    "run_get_committee_assignment@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "epoch",
            "type": [
                "int",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "validator_index",
            "type": [
                "dict",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "valid",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "epoch",
            "type": [
                "int",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "validator_index",
            "type": [
                "dict",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "assignment",
            "type": [
                "dict",
                "staticmethod",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "committee",
            "type": [
                "int",
                "list",
                "typing.Sized"
            ]
        },
        {
            "category": "local",
            "name": "committee_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "slot",
            "type": [
                "tuple",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "run_get_committee_assignment",
            "type": [
                "None"
            ]
        }
    ],
    "run_get_signature_test@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "str",
                "typing.Callable[str, None]",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "str",
                "eth.rlp.transactions.BaseTransaction",
                "eth.utils.spoof.SpoofTransaction"
            ]
        },
        {
            "category": "arg",
            "name": "domain",
            "type": [
                "str",
                "typing.Callable[str, None]",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "get_signature_fn",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "privkey",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "pubkey",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "signing_ssz_object",
            "type": [
                "None",
                "dict",
                "typing.Sequence[tuple[typing.Any]]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "signing_ssz_object",
            "type": [
                "None",
                "dict",
                "typing.Sequence[tuple[typing.Any]]",
                "typing.Mapping",
                "str",
                "eth.rlp.transactions.BaseTransaction",
                "eth.utils.spoof.SpoofTransaction"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "str",
                "eth.rlp.transactions.BaseTransaction",
                "eth.utils.spoof.SpoofTransaction"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "privkey",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "signature",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "str",
                "typing.Callable[str, None]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "domain",
            "type": [
                "str",
                "typing.Callable[str, None]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "signing_root",
            "type": [
                "str",
                "umbral.keys.UmbralPublicKey"
            ]
        },
        {
            "category": "return",
            "name": "run_get_signature_test",
            "type": [
                "None"
            ]
        }
    ],
    "run_is_candidate_block@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "str",
                "bool",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "eth1_block",
            "type": [
                "str",
                "bool",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "period_start",
            "type": [
                "str",
                "bool",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "success",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "run_is_candidate_block",
            "type": [
                "None"
            ]
        }
    ],
    "test_check_if_validator_active@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "active_validator_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "new_validator_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_check_if_validator_active",
            "type": [
                "None"
            ]
        }
    ],
    "test_compute_fork_digest@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_compute_fork_digest",
            "type": [
                "None"
            ]
        }
    ],
    "test_compute_new_state_root@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "prefecengine.state.State",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "pre_state",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "post_state",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "prefecengine.state.State",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "return",
            "name": "test_compute_new_state_root",
            "type": [
                "None"
            ]
        }
    ],
    "test_compute_subnet_for_attestation@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_compute_subnet_for_attestation",
            "type": [
                "None"
            ]
        }
    ],
    "test_compute_subscribed_subnets_random_1@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_compute_subscribed_subnets_random_1",
            "type": [
                "None"
            ]
        }
    ],
    "test_compute_subscribed_subnets_random_2@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_compute_subscribed_subnets_random_2",
            "type": [
                "None"
            ]
        }
    ],
    "test_compute_subscribed_subnets_random_3@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_compute_subscribed_subnets_random_3",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_aggregate_and_proof@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict",
                "hackathon.utils.utils.DataMessage"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "aggregator_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "aggregate",
            "type": [
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "hackathon.utils.utils.DataMessage"
            ]
        },
        {
            "category": "return",
            "name": "test_get_aggregate_and_proof",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_aggregate_and_proof_signature@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "str",
                "dict",
                "dict[str, dict]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "raiden.transfer.state.ChainState",
                "list[dict[str, str]]",
                "raiden.utils.Address"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "str",
                "dict",
                "dict[str, dict]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "aggregate",
            "type": [
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "raiden.transfer.state.ChainState",
                "list[dict[str, str]]",
                "raiden.utils.Address"
            ]
        },
        {
            "category": "local",
            "name": "aggregate_and_proof",
            "type": [
                "bytes",
                "raiden.utils.Address",
                "raiden.utils.Secret"
            ]
        },
        {
            "category": "return",
            "name": "test_get_aggregate_and_proof_signature",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_aggregate_signature@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "pyshgp.push.state.PushState",
                "dict[str, typing.Any]",
                "mythril.laser.ethereum.state.global_state.GlobalState"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "attestations",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "attesting_pubkeys",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "committee_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "pyshgp.push.state.PushState",
                "dict[str, typing.Any]",
                "mythril.laser.ethereum.state.global_state.GlobalState"
            ]
        },
        {
            "category": "local",
            "name": "committee_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "aggregation_bits",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "bits",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "signature",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_aggregate_signature",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_attestation_signature_phase0@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "prefecengine.state.State",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "prefecengine.state.State",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "attestation",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_attestation_signature_phase0",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_block_signature@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "tuple",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_get_block_signature",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_committee_assignment_current_epoch@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "apps.monero.signing.state.State",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "apps.monero.signing.state.State",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "epoch",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "validator_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_get_committee_assignment_current_epoch",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_committee_assignment_next_epoch@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "local",
            "name": "epoch",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "validator_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_get_committee_assignment_next_epoch",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_committee_assignment_out_bound_epoch@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "local",
            "name": "epoch",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "validator_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_get_committee_assignment_out_bound_epoch",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_epoch_signature@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict",
                "list[str]",
                "None",
                "list[mythril.laser.ethereum.state.global_state.GlobalState]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "str",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict",
                "list[str]",
                "None",
                "list[mythril.laser.ethereum.state.global_state.GlobalState]"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "tuple",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "prefecengine.state.State",
                "str",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "return",
            "name": "test_get_epoch_signature",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_eth1_vote_chain_in_past@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "hackathon.utils.utils.DataMessage",
                "list",
                "dict[str, \"Outcome\"]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict",
                "utils.types.JSON",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "hackathon.utils.utils.DataMessage",
                "list",
                "dict[str, \"Outcome\"]"
            ]
        },
        {
            "category": "local",
            "name": "min_new_period_epochs",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "utils.types.JSON",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "period_start",
            "type": [
                "dict",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "votes_length",
            "type": [
                "int",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "state_",
            "type": [
                "tuple",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "block_1",
            "type": [
                "str",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "eth1_chain",
            "type": [
                "list[typing.Union[str,int,dict]]"
            ]
        },
        {
            "category": "local",
            "name": "eth1_data_votes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "eth1_data",
            "type": [
                "dict[str, typing.Any]",
                "tuple",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_eth1_vote_chain_in_past",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_eth1_vote_consensus_vote@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "str",
                "raiden.transfer.state.RouteState"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "min_new_period_epochs",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "str",
                "raiden.transfer.state.RouteState"
            ]
        },
        {
            "category": "local",
            "name": "period_start",
            "type": [
                "dict",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "votes_length",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "state_",
            "type": [
                "tuple",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "eth1_chain",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "eth1_data_votes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "eth1_data",
            "type": [
                "dict[str, typing.Any]",
                "tuple",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_eth1_vote_consensus_vote",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_eth1_vote_default_vote@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "str",
                "hackathon.utils.utils.DataMessage",
                "tuple[dict]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "raiden.transfer.state.ChainState",
                "str",
                "raiden.transfer.state.NettingChannelState"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "str",
                "hackathon.utils.utils.DataMessage",
                "tuple[dict]"
            ]
        },
        {
            "category": "local",
            "name": "min_new_period_epochs",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "raiden.transfer.state.ChainState",
                "str",
                "raiden.transfer.state.NettingChannelState"
            ]
        },
        {
            "category": "local",
            "name": "state_",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "eth1_chain",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "eth1_data",
            "type": [
                "bytes",
                "list[dict]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_get_eth1_vote_default_vote",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_eth1_vote_tie@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "list",
                "float",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "dict[str, \"Outcome\"]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "list",
                "float",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "min_new_period_epochs",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "dict[str, \"Outcome\"]"
            ]
        },
        {
            "category": "local",
            "name": "period_start",
            "type": [
                "dict",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "votes_length",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "state_",
            "type": [
                "tuple",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "eth1_chain",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "eth1_data_votes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "eth1_data",
            "type": [
                "dict[str, typing.Any]",
                "tuple",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_eth1_vote_tie",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_slot_signature@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict[str, typing.Any]",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict[\"core.Edge\", \"state.State\"]",
                "prefecengine.state.State"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict[str, typing.Any]",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "local",
            "name": "slot",
            "type": [
                "list[str]",
                "tuple",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict[\"core.Edge\", \"state.State\"]",
                "prefecengine.state.State"
            ]
        },
        {
            "category": "local",
            "name": "domain",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_get_slot_signature",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_aggregator@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "raiden.transfer.state.ChainState",
                "int",
                "state.State"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "committee_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "has_aggregator",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "raiden.transfer.state.ChainState",
                "int",
                "state.State"
            ]
        },
        {
            "category": "return",
            "name": "test_is_aggregator",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_candidate_block@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "raiden.transfer.state.ChainState",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "dict[str, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "raiden.transfer.state.ChainState",
                "dict[\"core.Edge\", \"state.State\"]"
            ]
        },
        {
            "category": "return",
            "name": "test_is_candidate_block",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_proposer@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "prefecengine.state.State",
                "raiden.transfer.state.ChainState"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "prefecengine.state.State",
                "raiden.transfer.state.ChainState"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "mythril.laser.ethereum.state.global_state.GlobalState",
                "apps.monero.signing.state.State"
            ]
        },
        {
            "category": "local",
            "name": "proposer_index",
            "type": [
                "int",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "test_is_proposer",
            "type": [
                "None"
            ]
        }
    ]
}