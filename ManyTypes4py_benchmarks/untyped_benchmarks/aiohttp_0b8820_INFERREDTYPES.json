{
    "__init__@MockRequest": [
        {
            "category": "arg",
            "name": "content",
            "type": [
                "str",
                "typing.Sequence[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "mock_source",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "status",
            "type": []
        },
        {
            "category": "arg",
            "name": "headers",
            "type": [
                "None",
                "dict",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "query_string",
            "type": [
                "None",
                "str",
                "\"LocalizedString\""
            ]
        },
        {
            "category": "arg",
            "name": "url",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "headers",
            "type": [
                "None",
                "dict",
                "str",
                "dict[str, str]",
                "CIMultiDict"
            ]
        },
        {
            "category": "local",
            "name": "query_string",
            "type": [
                "None",
                "str",
                "\"LocalizedString\""
            ]
        },
        {
            "category": "local",
            "name": "keep_alive",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "version",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "str",
                "typing.Sequence[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_content",
            "type": [
                "str",
                "typing.Sequence[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "mock_source",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_MOCK_PAYLOAD_WRITER",
            "type": [
                "typing.Callable[bytes, None]",
                "list[bytes]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_payload_writer",
            "type": [
                "typing.Callable[bytes, None]",
                "list[bytes]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MockStreamReader": [
        {
            "category": "arg",
            "name": "content",
            "type": [
                "bytes",
                "typing.IO",
                "io.BytesIO"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "bytes",
                "typing.IO",
                "io.BytesIO"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_prepare_hook@MockRequest": [
        {
            "category": "arg",
            "name": "response",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_prepare_hook",
            "type": [
                "None"
            ]
        }
    ],
    "_text@MockRequest": [
        {
            "category": "return",
            "name": "_text",
            "type": [
                "str"
            ]
        }
    ],
    "body_exists@MockRequest": [
        {
            "category": "return",
            "name": "body_exists",
            "type": [
                "bool"
            ]
        }
    ],
    "content@MockRequest": [
        {
            "category": "return",
            "name": "content",
            "type": [
                "MockStreamReader"
            ]
        }
    ],
    "enable_chunking@MockPayloadWriter": [
        {
            "category": "return",
            "name": "enable_chunking",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_MOCK_PAYLOAD_WRITER",
            "type": [
                "MockPayloadWriter",
                "typing.Callable[bytes, None]",
                "list[bytes]",
                "str"
            ]
        }
    ],
    "json@MockRequest": [
        {
            "category": "arg",
            "name": "loads",
            "type": []
        },
        {
            "category": "return",
            "name": "json",
            "type": []
        }
    ],
    "post@MockRequest": [
        {
            "category": "return",
            "name": "post",
            "type": [
                "MultiDict"
            ]
        }
    ],
    "query@MockRequest": [
        {
            "category": "return",
            "name": "query",
            "type": [
                "MultiDict"
            ]
        }
    ],
    "read@MockStreamReader": [
        {
            "category": "arg",
            "name": "byte_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "byte_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "read",
            "type": [
                "bytes",
                "str",
                "io.BytesIO"
            ]
        }
    ],
    "serialize_response@global": [
        {
            "category": "arg",
            "name": "response",
            "type": [
                "aiohttp.web.StreamResponse",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "bool",
                "payload_@_StringPayload",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "response",
            "type": [
                "aiohttp.web.StreamResponse",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "body_decoded",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "str",
                "typing.Callable[None,None,None,None,None,None,None,None,None,None,None, str]"
            ]
        },
        {
            "category": "return",
            "name": "serialize_response",
            "type": [
                "dict[typing.Text, typing.Union[str,dict[str, typing.Any],typing.Callable[None,None,None,None,None,None,None,None,None,None,None, str],None]]"
            ]
        }
    ],
    "text@MockRequest": [
        {
            "category": "return",
            "name": "text",
            "type": []
        }
    ],
    "write_headers@MockPayloadWriter": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "write_headers",
            "type": [
                "None"
            ]
        }
    ]
}