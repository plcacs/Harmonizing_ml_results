{
    "_function_is_x_method@global": [
        {
            "category": "arg",
            "name": "method_names",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_function_is_x_method",
            "type": []
        }
    ],
    "_get_parent_scope_cache@global": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "cache",
            "type": [
                "WeakKeyDictionary"
            ]
        },
        {
            "category": "return",
            "name": "_get_parent_scope_cache",
            "type": []
        }
    ],
    "clean_scope_docstring@global": [
        {
            "category": "arg",
            "name": "scope_node",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "scope_node",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "clean_scope_docstring",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "cut_value_at_position@global": [
        {
            "category": "arg",
            "name": "leaf",
            "type": [
                "int",
                "typing.Callable[Any,Any, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "position",
            "type": []
        },
        {
            "category": "local",
            "name": "leaf",
            "type": [
                "int",
                "typing.Callable[Any,Any, typing.Any]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "cut_value_at_position",
            "type": [
                "typing.Text",
                "str"
            ]
        }
    ],
    "expr_is_dotted@global": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "return",
            "name": "expr_is_dotted",
            "type": [
                "bool"
            ]
        }
    ],
    "find_statement_documentation@global": [
        {
            "category": "arg",
            "name": "tree_node",
            "type": [
                "\"TreeNode\"",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "tree_node",
            "type": [
                "\"TreeNode\"",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "maybe_string",
            "type": [
                "str",
                "bytes",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "find_statement_documentation",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "for_stmt_defines_one_name@global": [
        {
            "category": "arg",
            "name": "for_stmt",
            "type": [
                "str",
                "bool",
                "typing.Callable[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "for_stmt",
            "type": [
                "str",
                "bool",
                "typing.Callable[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "for_stmt_defines_one_name",
            "type": [
                "bool"
            ]
        }
    ],
    "get_cached_code_lines@global": [
        {
            "category": "arg",
            "name": "grammar",
            "type": [
                "str",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "arg",
            "name": "path",
            "type": [
                "str",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "grammar",
            "type": [
                "str",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "str",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "return",
            "name": "get_cached_code_lines",
            "type": []
        }
    ],
    "get_executable_nodes@global": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "set",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "last_added",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[typing.Union[set,str]]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "set",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "next_leaf",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "last_added",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_EXECUTE_NODES",
            "type": [
                "set[str]"
            ]
        },
        {
            "category": "return",
            "name": "get_executable_nodes",
            "type": [
                "list[typing.Union[set,str]]"
            ]
        }
    ],
    "get_flow_branch_keyword@global": [
        {
            "category": "arg",
            "name": "flow_node",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "local",
            "name": "flow_node",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "keyword",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_flow_branch_keyword",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_FLOW_KEYWORDS",
            "type": [
                "tuple[typing.Literal]"
            ]
        }
    ],
    "get_following_comment_same_line@global": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "local",
            "name": "whitespace",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_following_comment_same_line",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "comment",
            "type": [
                "str"
            ]
        }
    ],
    "get_parent_scope@global": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "arg",
            "name": "include_flows",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "scope",
            "type": [
                "None",
                "tuple",
                "list",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "get_parent_scope",
            "type": [
                "None",
                "tuple",
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "slice",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "include_flows",
            "type": [
                "bool"
            ]
        }
    ],
    "get_parso_cache_node@global": [
        {
            "category": "arg",
            "name": "grammar",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "grammar",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_parso_cache_node",
            "type": []
        }
    ],
    "get_signature@global": [
        {
            "category": "arg",
            "name": "funcdef",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "width",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "call_string",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "omit_first_param",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "omit_return_annotation",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "call_string",
            "type": [
                "None",
                "bool",
                "str",
                "typing.Text",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "funcdef",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "omit_first_param",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "p",
            "type": [
                "str",
                "typing.Pattern",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "omit_return_annotation",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "rtype",
            "type": [
                "str",
                "list[str]",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "width",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "get_signature",
            "type": [
                "str"
            ]
        }
    ],
    "get_sync_comp_fors@global": [
        {
            "category": "arg",
            "name": "comp_for",
            "type": [
                "str",
                "int",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "comp_for",
            "type": [
                "str",
                "int",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_sync_comp_fors",
            "type": [
                "typing.Generator[typing.Union[str,int,typing.Any,None]]",
                "typing.Generator"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_EXECUTE_NODES",
            "type": [
                "set[typing.Text]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "_FLOW_KEYWORDS",
            "type": [
                "tuple[typing.Text]",
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "get_cached_parent_scope",
            "type": [
                "typing.Callable[None, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "function_is_staticmethod",
            "type": [
                "str",
                "set[str]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "function_is_classmethod",
            "type": [
                "str",
                "bool",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "function_is_property",
            "type": [
                "bool",
                "dict[str, typing.Union[bool,str]]"
            ]
        }
    ],
    "is_scope@global": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "return",
            "name": "is_scope",
            "type": [
                "bool"
            ]
        }
    ],
    "move@global": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "int",
                "None",
                "typing.Iterator"
            ]
        },
        {
            "category": "arg",
            "name": "line_offset",
            "type": [
                "int",
                "list[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "int",
                "None",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "line_offset",
            "type": [
                "int",
                "list[int]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "move",
            "type": [
                "None"
            ]
        }
    ],
    "safe_literal_eval@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "first_two",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "safe_literal_eval",
            "type": [
                "typing.Text",
                "str",
                "list[str]"
            ]
        }
    ],
    "wrapper@global": [
        {
            "category": "arg",
            "name": "parso_cache_node",
            "type": []
        },
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "arg",
            "name": "include_flows",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "parso_cache_node",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "include_flows",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "wrapper",
            "type": []
        },
        {
            "category": "local",
            "name": "for_module",
            "type": [
                "dict"
            ]
        }
    ]
}