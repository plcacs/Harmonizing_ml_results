{
    "__call__@SpanBasedF1Measure": [
        {
            "category": "arg",
            "name": "predictions",
            "type": [
                "torch.Tensor",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "gold_labels",
            "type": [
                "torch.Tensor"
            ]
        },
        {
            "category": "arg",
            "name": "mask",
            "type": [
                "None",
                "torch.Tensor"
            ]
        },
        {
            "category": "arg",
            "name": "prediction_map",
            "type": [
                "None",
                "torch.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "None",
                "torch.Tensor",
                "list[int]",
                "slice",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "predictions",
            "type": [
                "torch.Tensor",
                "None",
                "list",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "gold_labels",
            "type": [
                "torch.Tensor",
                "torch.FloatTensor",
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "prediction_map",
            "type": [
                "None",
                "torch.Tensor",
                "dict[str, typing.Any]",
                "list[tuple[typing.Union[typing.Any,float]]]",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "sequence_lengths",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "argmax_predictions",
            "type": [
                "list",
                "int",
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "batch_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "sequence_prediction",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "sequence_gold_label",
            "type": [
                "list",
                "list[list[str]]"
            ]
        },
        {
            "category": "return",
            "name": "__call__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SpanBasedF1Measure": [
        {
            "category": "arg",
            "name": "vocabulary",
            "type": [
                "allennlp.data.vocabulary.Vocabulary",
                "str",
                "dict[str, int]"
            ]
        },
        {
            "category": "arg",
            "name": "tag_namespace",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "ignore_classes",
            "type": [
                "None",
                "typing.Sequence[str]",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "label_encoding",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "tags_to_spans_function",
            "type": [
                "None",
                "list",
                "str",
                "list[str]",
                "tuple[typing.Union[str,...]]"
            ]
        },
        {
            "category": "local",
            "name": "label_encoding",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "tags_to_spans_function",
            "type": [
                "None",
                "list",
                "str",
                "list[str]",
                "tuple[typing.Union[str,...]]"
            ]
        },
        {
            "category": "local",
            "name": "_label_encoding",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_tags_to_spans_function",
            "type": [
                "list",
                "None",
                "str",
                "list[str]",
                "tuple[typing.Union[str,...]]"
            ]
        },
        {
            "category": "local",
            "name": "vocabulary",
            "type": [
                "allennlp.data.vocabulary.Vocabulary",
                "str",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "tag_namespace",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_label_vocabulary",
            "type": [
                "allennlp.data.vocabulary.Vocabulary",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ignore_classes",
            "type": [
                "None",
                "typing.Sequence[str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "_ignore_classes",
            "type": [
                "None",
                "typing.Sequence[str]",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_true_positives",
            "type": [
                "int",
                "dict[str, int]",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "_false_positives",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_false_negatives",
            "type": [
                "dict[str, str]",
                "dict[int, str]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_compute_metrics@SpanBasedF1Measure": [
        {
            "category": "arg",
            "name": "true_positives",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "false_positives",
            "type": [
                "int",
                "SupportsFloat"
            ]
        },
        {
            "category": "arg",
            "name": "false_negatives",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "true_positives",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "false_positives",
            "type": [
                "int",
                "SupportsFloat"
            ]
        },
        {
            "category": "local",
            "name": "precision",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "false_negatives",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "recall",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "f1_measure",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_compute_metrics",
            "type": [
                "tuple[float]"
            ]
        }
    ],
    "_handle_continued_spans@SpanBasedF1Measure": [
        {
            "category": "arg",
            "name": "spans",
            "type": [
                "dict[str, typing.Any]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "spans",
            "type": [
                "dict[str, typing.Any]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "span_set",
            "type": [
                "set[int]",
                "set[typing.Union[int,tuple[tuple[typing.Union[int,dict,typing.Type]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "span",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "continued_labels",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "continued_spans",
            "type": [
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "span_start",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "span_end",
            "type": [
                "int",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "replacement_span",
            "type": [
                "tuple[tuple[typing.Union[int,dict,typing.Type]]]"
            ]
        },
        {
            "category": "return",
            "name": "_handle_continued_spans",
            "type": [
                "list[int]"
            ]
        }
    ],
    "get_metric@SpanBasedF1Measure": [
        {
            "category": "arg",
            "name": "reset",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "all_tags",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "all_metrics",
            "type": [
                "dict",
                "dict[typing.Text, typing.Union[float,int]]",
                "dict[typing.Text, typing.Union[float,int,None,tuple[typing.Any]]]",
                "dict[typing.Text, typing.Union[float,int,None,tuple[typing.Any],list]]"
            ]
        },
        {
            "category": "local",
            "name": "precision",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "recall",
            "type": [
                "float",
                "None",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "f1_measure",
            "type": [
                "float",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "reset",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_metric",
            "type": [
                "dict[typing.Text, typing.Union[float,int,None,tuple[typing.Any],list]]"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "TAGS_TO_SPANS_FUNCTION_TYPE",
            "type": [
                "typing.Type",
                "dict[typing.Any, str]",
                "dict[str, str]"
            ]
        }
    ],
    "reset@SpanBasedF1Measure": [
        {
            "category": "local",
            "name": "_true_positives",
            "type": [
                "int",
                "dict[str, int]",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "_false_positives",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_false_negatives",
            "type": [
                "dict[str, str]",
                "dict[int, str]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "reset",
            "type": [
                "None"
            ]
        }
    ]
}