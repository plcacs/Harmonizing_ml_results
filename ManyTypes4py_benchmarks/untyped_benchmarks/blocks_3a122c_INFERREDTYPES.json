{
    "__len__@Block": [
        {
            "category": "return",
            "name": "__len__",
            "type": [
                "int"
            ]
        }
    ],
    "__repr__@Block": [
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "dict[str, str]",
                "tuple[typing.Union[int,typing.Any]]",
                "list[typing.Union[tuple,typing.Any]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str",
                "int",
                "typing.Any",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_can_consolidate@Block": [
        {
            "category": "return",
            "name": "_can_consolidate",
            "type": [
                "bool"
            ]
        }
    ],
    "_can_hold_element@Block": [
        {
            "category": "arg",
            "name": "element",
            "type": [
                "dict[str, typing.Any]",
                "T",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "element",
            "type": [
                "dict[str, typing.Any]",
                "T",
                "typing.Sequence[typing.Any]",
                "int",
                "set[str]",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "return",
            "name": "_can_hold_element",
            "type": []
        }
    ],
    "_can_hold_na@Block": [
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "str",
                "set[str]",
                "dict[int, str]",
                "np_@_dtype"
            ]
        },
        {
            "category": "return",
            "name": "_can_hold_na",
            "type": [
                "bool"
            ]
        }
    ],
    "_consolidate_key@Block": [
        {
            "category": "return",
            "name": "_consolidate_key",
            "type": [
                "tuple"
            ]
        }
    ],
    "_get_refs_and_copy@Block": [
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_get_refs_and_copy",
            "type": [
                "tuple[typing.Union[bool,None,str]]"
            ]
        }
    ],
    "_maybe_copy@Block": [
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "inplace",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "deep",
            "type": [
                "bool",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_copy",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "\"Node\""
            ]
        }
    ],
    "_maybe_squeeze_arg@Block": [
        {
            "category": "arg",
            "name": "arg",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "arg",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_squeeze_arg",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "_maybe_squeeze_arg@ExtensionBlock": [
        {
            "category": "arg",
            "name": "arg",
            "type": [
                "tuple[typing.Union[int,slice]]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "arg",
            "type": [
                "tuple[typing.Union[int,slice]]",
                "tuple",
                "int",
                "slice",
                "ABCDataFrame",
                "list",
                "dict[str, object]"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_squeeze_arg",
            "type": [
                "int",
                "list",
                "dict[str, object]",
                "slice"
            ]
        }
    ],
    "_replace_coerce@Block": [
        {
            "category": "arg",
            "name": "to_replace",
            "type": [
                "bool",
                "list[typing.Any]",
                "None",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "bool",
                "tuple",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mask",
            "type": [
                "bool",
                "tuple",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "regex",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "regex",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "to_replace",
            "type": [
                "bool",
                "list[typing.Any]",
                "None",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "bool",
                "tuple",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "bool",
                "tuple",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_replace_coerce",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "has_ref",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "_replace_regex@Block": [
        {
            "category": "arg",
            "name": "to_replace",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "mask",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "to_replace",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "_replace_regex",
            "type": [
                "list",
                "list[typing.Union[list,str,pandas.tests.extension.test_external_block.CustomBlock]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list",
                "str",
                "pandas.tests.extension.test_external_block.CustomBlock"
            ]
        },
        {
            "category": "local",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "None",
                "bool",
                "str"
            ]
        }
    ],
    "_slice@Block": [
        {
            "category": "arg",
            "name": "slicer",
            "type": [
                "int",
                "typing.Sequence[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "slicer",
            "type": [
                "int",
                "typing.Sequence[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "_slice",
            "type": []
        }
    ],
    "_slice@ExtensionBlock": [
        {
            "category": "arg",
            "name": "slicer",
            "type": [
                "bool",
                "static_frame.core.index_base.IndexBase"
            ]
        },
        {
            "category": "local",
            "name": "slicer",
            "type": [
                "bool",
                "static_frame.core.index_base.IndexBase",
                "range"
            ]
        },
        {
            "category": "local",
            "name": "new_locs",
            "type": [
                "list",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "_slice",
            "type": []
        }
    ],
    "_split@Block": [
        {
            "category": "local",
            "name": "bp",
            "type": [
                "BlockPlacement"
            ]
        },
        {
            "category": "local",
            "name": "nb",
            "type": [
                "int",
                "numpy.array",
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_split",
            "type": [
                "typing.Generator[typing.Union[int,numpy.array,None,str]]"
            ]
        }
    ],
    "_split_op_result@Block": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "numpy.ndarray",
                "list[typing.Union[\"PipeChain\",str]]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "numpy.ndarray",
                "list[typing.Union[\"PipeChain\",str]]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "nbs",
            "type": [
                "list",
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "vals",
            "type": [
                "\"PipeChain\"",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "bp",
            "type": [
                "BlockPlacement"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_split_op_result",
            "type": [
                "list[list]",
                "list[typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "nb",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "_standardize_fill_value@Block": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "float",
                "T",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "str",
                "tuple[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "float",
                "T",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "_standardize_fill_value",
            "type": [
                "float",
                "T",
                "list[float]"
            ]
        }
    ],
    "_unstack@Block": [
        {
            "category": "arg",
            "name": "unstacker",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "fill_value",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "new_placement",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "needs_masking",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "unstacker",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "fill_value",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "new_placement",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "bp",
            "type": [
                "BlockPlacement"
            ]
        },
        {
            "category": "local",
            "name": "blocks",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_unstack",
            "type": [
                "tuple[list]"
            ]
        }
    ],
    "_unstack@ExtensionBlock": [
        {
            "category": "arg",
            "name": "unstacker",
            "type": [
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "fill_value",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "new_placement",
            "type": [
                "bool",
                "typing.Callable[int, bool]"
            ]
        },
        {
            "category": "arg",
            "name": "needs_masking",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "unstacker",
            "type": [
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "new_placement",
            "type": [
                "bool",
                "typing.Callable[int, bool]"
            ]
        },
        {
            "category": "local",
            "name": "blocks",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_unstack",
            "type": [
                "tuple[list]"
            ]
        }
    ],
    "_unwrap_setitem_indexer@Block": [
        {
            "category": "arg",
            "name": "indexer",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "return",
            "name": "_unwrap_setitem_indexer",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        }
    ],
    "_unwrap_setitem_indexer@ExtensionBlock": [
        {
            "category": "arg",
            "name": "indexer",
            "type": [
                "list",
                "Shape",
                "'IndexHierarchy'",
                "tuple[typing.Hashable]"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "list",
                "Shape",
                "'IndexHierarchy'",
                "tuple[typing.Hashable]",
                "tuple",
                "dict[str, typing.Any]",
                "typing.Hashable"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "typing.Hashable"
            ]
        },
        {
            "category": "local",
            "name": "first",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "second",
            "type": [
                "typing.Hashable"
            ]
        },
        {
            "category": "return",
            "name": "_unwrap_setitem_indexer",
            "type": [
                "list",
                "Shape",
                "'IndexHierarchy'",
                "tuple[typing.Hashable]",
                "typing.Hashable",
                "tuple",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "_validate_ndim@Block": [
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "set",
                "str",
                "pandas.core.dtypes.dtypes.CategoricalDtype"
            ]
        },
        {
            "category": "return",
            "name": "_validate_ndim",
            "type": [
                "bool"
            ]
        }
    ],
    "apply@Block": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "apply",
            "type": []
        }
    ],
    "array_values@Block": [
        {
            "category": "return",
            "name": "array_values",
            "type": [
                "None"
            ]
        }
    ],
    "array_values@EABackedBlock": [
        {
            "category": "return",
            "name": "array_values",
            "type": []
        }
    ],
    "array_values@NumpyBlock": [
        {
            "category": "return",
            "name": "array_values",
            "type": [
                "NumpyExtensionArray"
            ]
        }
    ],
    "astype@Block": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "errors",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "squeeze",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "slice",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "squeeze",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "new_values",
            "type": [
                "str",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "newb",
            "type": [
                "int",
                "list",
                "pytropos.libs_checking.numpy.NdArray"
            ]
        },
        {
            "category": "return",
            "name": "astype",
            "type": [
                "int",
                "list",
                "pytropos.libs_checking.numpy.NdArray"
            ]
        }
    ],
    "check_ndim@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "placement",
            "type": [
                "list[tuple[int]]"
            ]
        },
        {
            "category": "arg",
            "name": "ndim",
            "type": [
                "float",
                "int",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "ndim",
            "type": [
                "float",
                "int",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "placement",
            "type": [
                "list[tuple[int]]"
            ]
        },
        {
            "category": "return",
            "name": "check_ndim",
            "type": [
                "None"
            ]
        }
    ],
    "coerce_to_target_dtype@Block": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "raise_on_upcast",
            "type": [
                "bool",
                "collections.abc.Awaitable",
                "typing.Callable[dict, None]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "raise_on_upcast",
            "type": [
                "bool",
                "collections.abc.Awaitable",
                "typing.Callable[dict, None]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "coerce_to_target_dtype",
            "type": []
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        }
    ],
    "convert@Block": [
        {
            "category": "return",
            "name": "convert",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "None",
                "str"
            ]
        }
    ],
    "convert_dtypes@Block": [
        {
            "category": "arg",
            "name": "infer_objects",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "convert_string",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "convert_integer",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "convert_boolean",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "convert_floating",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "dtype_backend",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "infer_objects",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "blks",
            "type": [
                "list",
                "dict[str, typing.Any]",
                "list[Block]"
            ]
        },
        {
            "category": "local",
            "name": "convert_floating",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "convert_integer",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "convert_boolean",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "convert_string",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "b",
            "type": [
                "Block",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "convert_dtypes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "rbs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "blk",
            "type": [
                "Block"
            ]
        },
        {
            "category": "local",
            "name": "sub_blks",
            "type": [
                "list[typing.Union[Block,str]]"
            ]
        },
        {
            "category": "local",
            "name": "dtype_backend",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "dtypes",
            "type": [
                "list"
            ]
        }
    ],
    "copy@Block": [
        {
            "category": "arg",
            "name": "deep",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "deep",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "None",
                "list",
                "static_frame.core.array_go.ArrayGO"
            ]
        },
        {
            "category": "return",
            "name": "copy",
            "type": [
                "str",
                "None",
                "int"
            ]
        }
    ],
    "delete@Block": [
        {
            "category": "arg",
            "name": "loc",
            "type": [
                "numpy.ndarray",
                "tuple",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "loc",
            "type": [
                "numpy.ndarray",
                "tuple",
                "None",
                "list[typing.Union[numpy.ndarray,tuple,None]]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "tuple[int]",
                "property",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mgr_locs",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "delete",
            "type": [
                "list",
                "list[typing.Union[int,numpy.array,None,float]]"
            ]
        },
        {
            "category": "local",
            "name": "new_blocks",
            "type": [
                "list",
                "list[typing.Union[int,numpy.array,None,float]]"
            ]
        },
        {
            "category": "local",
            "name": "previous_loc",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "int",
                "list",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "nb",
            "type": [
                "int",
                "numpy.array",
                "None",
                "float"
            ]
        }
    ],
    "delete@EABackedBlock": [
        {
            "category": "arg",
            "name": "loc",
            "type": [
                "tuple[int]",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "loc",
            "type": [
                "tuple[int]",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list",
                "float",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "mgr_locs",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "delete",
            "type": [
                "list",
                "bool",
                "bytes",
                "typing.Callable"
            ]
        }
    ],
    "diff@Block": [
        {
            "category": "arg",
            "name": "n",
            "type": [
                "int",
                "pandas.DatetimeIndex"
            ]
        },
        {
            "category": "return",
            "name": "diff",
            "type": [
                "list"
            ]
        }
    ],
    "dtype@Block": [
        {
            "category": "return",
            "name": "dtype",
            "type": []
        }
    ],
    "ensure_block_shape@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "float",
                "numpy.ndarray",
                "util.ArrayLike"
            ]
        },
        {
            "category": "arg",
            "name": "ndim",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "float",
                "numpy.ndarray",
                "util.ArrayLike",
                "list[float]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "ndim",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "ensure_block_shape",
            "type": [
                "float",
                "numpy.ndarray",
                "util.ArrayLike",
                "list[float]",
                "list"
            ]
        }
    ],
    "extend_blocks@global": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "typing.Sized",
                "typing.Iterable[typing.Iterable[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "blocks",
            "type": [
                "None",
                "typing.Iterable[typing.Sequence[typing.Any]]",
                "typing.Iterable[T]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "blocks",
            "type": [
                "None",
                "typing.Iterable[typing.Sequence[typing.Any]]",
                "typing.Iterable[T]",
                "int",
                "list",
                "list[typing.Sized]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Sized",
                "typing.Iterable[typing.Iterable[typing.Any]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "extend_blocks",
            "type": [
                "list[typing.Sized]"
            ]
        }
    ],
    "external_values@Block": [
        {
            "category": "return",
            "name": "external_values",
            "type": []
        }
    ],
    "external_values@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "T",
                "typing.Sequence[T]",
                "None",
                "typing.Hashable"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "T",
                "typing.Sequence[T]",
                "None",
                "typing.Hashable",
                "np_@_ndarray",
                "list[list[int]]",
                "list",
                "property"
            ]
        },
        {
            "category": "return",
            "name": "external_values",
            "type": [
                "list[list[int]]",
                "list",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "values_",
            "type": [
                "bool"
            ]
        }
    ],
    "extract_pandas_array@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "numpy.ndarray",
                "tuple",
                "None",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "numpy.number",
                "numpy.dtype"
            ]
        },
        {
            "category": "arg",
            "name": "ndim",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "numpy.ndarray",
                "tuple",
                "None",
                "tuple[int]",
                "ABCNumpyExtensionArray",
                "list",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "ndim",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "numpy.number",
                "numpy.dtype",
                "NumpyEADtype",
                "str",
                "dict[typing.Union[str,None], typing.Any]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "extract_pandas_array",
            "type": [
                "tuple[typing.Union[list,property,tuple,str,dict[typing.Union[str,None], typing.Any]]]"
            ]
        }
    ],
    "fill_value@Block": [
        {
            "category": "return",
            "name": "fill_value",
            "type": []
        }
    ],
    "fillna@Block": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "inplace",
            "type": [
                "bool",
                "frozenset",
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "noop",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "fillna",
            "type": [
                "list",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "nbs",
            "type": [
                "int",
                "float"
            ]
        }
    ],
    "fillna@ExtensionBlock": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "int",
                "None",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "None",
                "float",
                "gluonts.model.common.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "None",
                "float",
                "gluonts.model.common.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "int",
                "None",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "fillna",
            "type": [
                "bool",
                "tuple",
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "typing.Iterable[dict[str, typing.Any]]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "new_values",
            "type": [
                "str",
                "dict[str, None]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "str",
                "dict",
                "list"
            ]
        }
    ],
    "get_block_type@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "static_frame.core.util.DtypeSpecifier",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "static_frame.core.util.DtypeSpecifier",
                "typing.Type",
                "DatetimeTZDtype",
                "PeriodDtype",
                "ExtensionDtype"
            ]
        },
        {
            "category": "return",
            "name": "get_block_type",
            "type": [
                "DatetimeLikeBlock",
                "NDArrayBackedExtensionBlock",
                "ExtensionBlock",
                "NumpyBlock"
            ]
        }
    ],
    "get_values@Block": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_values",
            "type": [
                "None"
            ]
        }
    ],
    "get_values@EABackedBlock": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list",
                "list[float]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "str",
                "tuple[str]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_values",
            "type": [
                "int",
                "str",
                "float"
            ]
        }
    ],
    "get_values@NumpyBlock": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "None",
                "bool",
                "typing.Callable",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "str",
                "tuple[str]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_values",
            "type": [
                "int",
                "str",
                "numpy.ndarray"
            ]
        }
    ],
    "get_values_for_csv@Block": [
        {
            "category": "arg",
            "name": "float_format",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "date_format",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "decimal",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "na_rep",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "quoting",
            "type": [
                "None",
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "na_rep",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "quoting",
            "type": [
                "None",
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "float_format",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "date_format",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "decimal",
            "type": [
                "str",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "get_values_for_csv",
            "type": []
        }
    ],
    "getitem_block_columns@Block": [
        {
            "category": "arg",
            "name": "slicer",
            "type": [
                "bool",
                "None",
                "static_frame.core.util.GetItemKeyType"
            ]
        },
        {
            "category": "arg",
            "name": "new_mgr_locs",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "ref_inplace_op",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "slicer",
            "type": [
                "bool",
                "None",
                "static_frame.core.util.GetItemKeyType"
            ]
        },
        {
            "category": "local",
            "name": "new_values",
            "type": [
                "list",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "ref_inplace_op",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "list",
                "str",
                "typing.DefaultDict",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "getitem_block_columns",
            "type": [
                "str",
                "int",
                "float"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "str",
                "tuple[str]",
                "bool"
            ]
        }
    ],
    "iget@Block": [
        {
            "category": "arg",
            "name": "i",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "i",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "iget",
            "type": []
        }
    ],
    "iget@ExtensionBlock": [
        {
            "category": "arg",
            "name": "i",
            "type": [
                "int",
                "typing.Mapping",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "i",
            "type": [
                "int",
                "typing.Mapping",
                "list[int]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "col",
            "type": [
                "list[str]",
                "int",
                "list",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "loc",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "iget",
            "type": []
        }
    ],
    "interpolate@Block": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "index",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "None",
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "limit_direction",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "limit_area",
            "type": [
                "None",
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "inplace",
            "type": [
                "bool",
                "str",
                "typing.Callable[None,None,None,None, None]"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "interpolate",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "str",
                "tuple[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "str",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "None",
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "limit_direction",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "limit_area",
            "type": [
                "None",
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "new_values",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "T",
                "tuple[int]",
                "dict[str, typing.Callable[..., typing.Any]]"
            ]
        }
    ],
    "is_bool@Block": [
        {
            "category": "return",
            "name": "is_bool",
            "type": [
                "bool"
            ]
        }
    ],
    "is_extension@Block": [
        {
            "category": "return",
            "name": "is_extension",
            "type": [
                "bool"
            ]
        }
    ],
    "is_numeric@ExtensionBlock": [
        {
            "category": "return",
            "name": "is_numeric",
            "type": []
        }
    ],
    "is_numeric@NumpyBlock": [
        {
            "category": "return",
            "name": "is_numeric",
            "type": [
                "bool"
            ]
        }
    ],
    "is_object@Block": [
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "str",
                "tuple[str]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "is_object",
            "type": [
                "bool"
            ]
        }
    ],
    "is_view@Block": [
        {
            "category": "return",
            "name": "is_view",
            "type": [
                "None"
            ]
        }
    ],
    "is_view@ExtensionBlock": [
        {
            "category": "return",
            "name": "is_view",
            "type": [
                "bool"
            ]
        }
    ],
    "is_view@NDArrayBackedExtensionBlock": [
        {
            "category": "return",
            "name": "is_view",
            "type": [
                "bool"
            ]
        }
    ],
    "is_view@NumpyBlock": [
        {
            "category": "return",
            "name": "is_view",
            "type": [
                "bool"
            ]
        }
    ],
    "make_block@Block": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "int",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "placement",
            "type": [
                "None",
                "int",
                "tuple[numpy.ndarray]",
                "pandas.Index"
            ]
        },
        {
            "category": "arg",
            "name": "refs",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "placement",
            "type": [
                "None",
                "int",
                "tuple[numpy.ndarray]",
                "pandas.Index",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "make_block",
            "type": []
        }
    ],
    "make_block_same_class@Block": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "str",
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "placement",
            "type": [
                "None",
                "tuple[int]",
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "refs",
            "type": [
                "None",
                "str",
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "placement",
            "type": [
                "None",
                "tuple[int]",
                "numpy.ndarray",
                "bool",
                "int",
                "frozenset",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "make_block_same_class",
            "type": [
                "typing.Type",
                "None",
                "str"
            ]
        }
    ],
    "maybe_coerce_values@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "numpy.ndarray",
                "list[float]",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "numpy.ndarray",
                "list[float]",
                "T",
                "np_@_ndarray",
                "list",
                "dict",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "maybe_coerce_values",
            "type": [
                "list",
                "dict",
                "str"
            ]
        }
    ],
    "mgr_locs@Block": [
        {
            "category": "local",
            "name": "_mgr_locs",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "mgr_locs",
            "type": [
                "int",
                "str",
                "None"
            ]
        }
    ],
    "new_block@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "float",
                "typing.Iterable[T]"
            ]
        },
        {
            "category": "arg",
            "name": "placement",
            "type": [
                "numpy.ndarray",
                "str",
                "typing.Sequence[int]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "ndim",
            "type": [
                "numpy.ndarray",
                "str",
                "typing.Sequence[int]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "refs",
            "type": [
                "None",
                "numpy.ndarray",
                "str",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "float",
                "typing.Iterable[T]"
            ]
        },
        {
            "category": "local",
            "name": "ndim",
            "type": [
                "numpy.ndarray",
                "str",
                "typing.Sequence[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "placement",
            "type": [
                "numpy.ndarray",
                "str",
                "typing.Sequence[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "None",
                "numpy.ndarray",
                "str",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "return",
            "name": "new_block",
            "type": [
                "int",
                "list[str]"
            ]
        }
    ],
    "new_block_2d@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "T",
                "str",
                "abc.graph.EdgeKeyType"
            ]
        },
        {
            "category": "arg",
            "name": "placement",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "refs",
            "type": [
                "None",
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "T",
                "str",
                "abc.graph.EdgeKeyType",
                "list[list[int]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "placement",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "None",
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "new_block_2d",
            "type": [
                "numpy.ndarray",
                "bool",
                "tuple[numpy.ndarray]"
            ]
        }
    ],
    "pad_or_backfill@Block": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "None",
                "str",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "limit_area",
            "type": [
                "None",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "pad_or_backfill",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "str",
                "dict[str, dict[str, str]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "str",
                "list"
            ]
        }
    ],
    "pad_or_backfill@EABackedBlock": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "limit_area",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str",
                "list",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "kwargs",
            "type": [
                "dict[typing.Text, typing.Union[str,None,int]]"
            ]
        },
        {
            "category": "local",
            "name": "limit_area",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "new_values",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "pad_or_backfill",
            "type": [
                "list"
            ]
        }
    ],
    "putmask@Block": [
        {
            "category": "arg",
            "name": "mask",
            "type": [
                "list[numpy.ndarray]",
                "numpy.ndarray",
                "PIL.Image.Image"
            ]
        },
        {
            "category": "arg",
            "name": "new",
            "type": [
                "typing.Sequence[typing.Any]",
                "None",
                "typing.Callable[..., static_frame.core.index_base.IndexBase]",
                "static_frame.core.util.NameType"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "list[numpy.ndarray]",
                "numpy.ndarray",
                "PIL.Image.Image"
            ]
        },
        {
            "category": "local",
            "name": "orig_mask",
            "type": [
                "list[numpy.ndarray]",
                "numpy.ndarray",
                "PIL.Image.Image"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list[float]",
                "list",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "new",
            "type": [
                "typing.Sequence[typing.Any]",
                "None",
                "typing.Callable[..., static_frame.core.index_base.IndexBase]",
                "static_frame.core.util.NameType",
                "lib_@_no_default",
                "dict[typing.Any, typing.Any]",
                "dict[str, typing.Any]",
                "typing.Iterator"
            ]
        },
        {
            "category": "return",
            "name": "putmask",
            "type": [
                "list",
                "list[Block]",
                "str",
                "bool",
                "list[typing.Optional[str]]"
            ]
        },
        {
            "category": "local",
            "name": "self",
            "type": [
                "int",
                "None",
                "T",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "nb",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "is_array",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "res_blocks",
            "type": [
                "list",
                "list[typing.Optional[str]]"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "dict[typing.Any, typing.Any]",
                "dict[str, typing.Any]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "submask",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "rbs",
            "type": [
                "str",
                "list[str]",
                "list[None]"
            ]
        }
    ],
    "putmask@EABackedBlock": [
        {
            "category": "arg",
            "name": "mask",
            "type": [
                "list[numpy.ndarray]",
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "new",
            "type": [
                "internals.values.python_values.builtin_mutvalues.Tuple",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "list[numpy.ndarray]",
                "numpy.ndarray",
                "int",
                "property",
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "new",
            "type": [
                "internals.values.python_values.builtin_mutvalues.Tuple",
                "int",
                "lib_@_no_default",
                "pytropos.internals.values.python_values.wrappers.BuiltinModule",
                "staticmethod"
            ]
        },
        {
            "category": "local",
            "name": "orig_new",
            "type": [
                "pytropos.internals.values.python_values.wrappers.BuiltinModule",
                "staticmethod"
            ]
        },
        {
            "category": "local",
            "name": "orig_mask",
            "type": [
                "property",
                "list[bool]"
            ]
        },
        {
            "category": "return",
            "name": "putmask",
            "type": [
                "list",
                "str",
                "typing.Callable[str, str]",
                "list[EABackedBlock]"
            ]
        },
        {
            "category": "local",
            "name": "self",
            "type": [
                "T",
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "float",
                "complex"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "IntervalDtype"
            ]
        },
        {
            "category": "local",
            "name": "blk",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "is_array",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "res_blocks",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "pytropos.internals.values.python_values.wrappers.BuiltinModule",
                "staticmethod",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "submask",
            "type": [
                "bool"
            ]
        }
    ],
    "quantile@Block": [
        {
            "category": "arg",
            "name": "qs",
            "type": [
                "numpy.ndarray",
                "float",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "interpolation",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "qs",
            "type": [
                "numpy.ndarray",
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "interpolation",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "quantile",
            "type": []
        }
    ],
    "reduce@Block": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "reduce",
            "type": [
                "list"
            ]
        }
    ],
    "replace@Block": [
        {
            "category": "arg",
            "name": "to_replace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "mask",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "to_replace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "replace",
            "type": [
                "list",
                "list[typing.Union[int,list,tuple[typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "None",
                "bool",
                "int",
                "tuple[typing.Any]",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "blk",
            "type": [
                "int",
                "list",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "blocks",
            "type": [
                "list"
            ]
        }
    ],
    "replace_list@Block": [
        {
            "category": "arg",
            "name": "src_list",
            "type": [
                "list[str]",
                "str",
                "None",
                "list[object]"
            ]
        },
        {
            "category": "arg",
            "name": "dest_list",
            "type": [
                "list[str]",
                "str",
                "None",
                "list[object]"
            ]
        },
        {
            "category": "arg",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "regex",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "property",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "src_list",
            "type": [
                "list[str]",
                "str",
                "None",
                "list[object]"
            ]
        },
        {
            "category": "local",
            "name": "dest_list",
            "type": [
                "list[str]",
                "str",
                "None",
                "list[object]"
            ]
        },
        {
            "category": "local",
            "name": "pairs",
            "type": [
                "list[tuple]"
            ]
        },
        {
            "category": "return",
            "name": "replace_list",
            "type": [
                "list",
                "list[Block]"
            ]
        },
        {
            "category": "local",
            "name": "src_len",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "na_mask",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "regex",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "masks",
            "type": [
                "typing.Generator",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "inplace",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "rb",
            "type": [
                "list[Block]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "new_rb",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "blk_num",
            "type": [
                "int",
                "Block"
            ]
        },
        {
            "category": "local",
            "name": "blk",
            "type": [
                "int",
                "Block"
            ]
        }
    ],
    "round@Block": [
        {
            "category": "arg",
            "name": "decimals",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "round",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "decimals",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "float",
                "int",
                "property",
                "self_@_values"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "None",
                "str"
            ]
        }
    ],
    "set_inplace@Block": [
        {
            "category": "arg",
            "name": "locs",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "property",
                "T",
                "bool",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "locs",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "set_inplace",
            "type": [
                "None"
            ]
        }
    ],
    "set_inplace@ExtensionBlock": [
        {
            "category": "arg",
            "name": "locs",
            "type": [
                "bool",
                "typing.Iterable[numpy.ndarray]"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "T",
                "float",
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "set_inplace",
            "type": [
                "None"
            ]
        }
    ],
    "setitem@Block": [
        {
            "category": "arg",
            "name": "indexer",
            "type": [
                "slice",
                "tuple[typing.Union[int,slice]]",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "typing.Iterable[T]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "typing.Iterable[T]",
                "int",
                "list",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list[float]",
                "property",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "slice",
                "tuple[typing.Union[int,slice]]",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "str",
                "tuple[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "nb",
            "type": [
                "int",
                "set",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "setitem",
            "type": [
                "int",
                "numpy.ndarray",
                "Block"
            ]
        },
        {
            "category": "local",
            "name": "self",
            "type": [
                "int",
                "T",
                "typing.Callable[None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        }
    ],
    "setitem@EABackedBlock": [
        {
            "category": "arg",
            "name": "indexer",
            "type": [
                "int",
                "slice",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "int",
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "int",
                "slice",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "orig_indexer",
            "type": [
                "int",
                "slice",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "int",
                "numpy.ndarray",
                "str",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "orig_value",
            "type": [
                "int",
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list",
                "float",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "IntervalDtype"
            ]
        },
        {
            "category": "local",
            "name": "nb",
            "type": [
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "setitem",
            "type": [
                "numpy.ndarray",
                "int",
                "list[int]",
                "EABackedBlock"
            ]
        }
    ],
    "shape@Block": [
        {
            "category": "return",
            "name": "shape",
            "type": []
        }
    ],
    "shape@ExtensionBlock": [
        {
            "category": "return",
            "name": "shape",
            "type": [
                "tuple[int]"
            ]
        }
    ],
    "shift@Block": [
        {
            "category": "arg",
            "name": "periods",
            "type": [
                "int",
                "float",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "fill_value",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "axis",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "fill_value",
            "type": [
                "None",
                "int",
                "float",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "str",
                "tuple[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "nb",
            "type": [
                "int",
                "str",
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "periods",
            "type": [
                "int",
                "float",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "shift",
            "type": [
                "int",
                "tuple[float]",
                "float",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "slice",
                "tuple[int]",
                "pandas.Series"
            ]
        }
    ],
    "shift@EABackedBlock": [
        {
            "category": "arg",
            "name": "periods",
            "type": [
                "float",
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "fill_value",
            "type": [
                "None",
                "float",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "shift",
            "type": [
                "list"
            ]
        }
    ],
    "should_store@Block": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "numpy.ndarray",
                "float",
                "typing.Sequence[numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "numpy.ndarray",
                "float",
                "typing.Sequence[numpy.ndarray]"
            ]
        },
        {
            "category": "return",
            "name": "should_store",
            "type": [
                "bool"
            ]
        }
    ],
    "slice_block_columns@Block": [
        {
            "category": "arg",
            "name": "slc",
            "type": [
                "abc.row.RowKeyType",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "slc",
            "type": [
                "abc.row.RowKeyType",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "new_values",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "refs",
            "type": [
                "int",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "slice_block_columns",
            "type": [
                "str",
                "int",
                "acres.util.acronym.Acronym"
            ]
        }
    ],
    "slice_block_rows@ExtensionBlock": [
        {
            "category": "arg",
            "name": "slicer",
            "type": [
                "typing.IO",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "slicer",
            "type": [
                "typing.IO",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "slice_block_rows",
            "type": [
                "str",
                "list[tuple[float]]"
            ]
        }
    ],
    "split_and_operate@Block": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "res_blocks",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "split_and_operate",
            "type": [
                "list"
            ]
        }
    ],
    "take_block_columns@Block": [
        {
            "category": "arg",
            "name": "indices",
            "type": [
                "int",
                "pandas.DatetimeIndex",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "local",
            "name": "indices",
            "type": [
                "int",
                "pandas.DatetimeIndex",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "local",
            "name": "new_values",
            "type": [
                "list",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "take_block_columns",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "take_nd@Block": [
        {
            "category": "arg",
            "name": "indexer",
            "type": [
                "bool",
                "static_frame.core.util.UFunc"
            ]
        },
        {
            "category": "arg",
            "name": "axis",
            "type": [
                "bool",
                "tuple[bool]"
            ]
        },
        {
            "category": "arg",
            "name": "new_mgr_locs",
            "type": [
                "None",
                "int",
                "tuple[bool]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "fill_value",
            "type": []
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list",
                "float",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "fill_value",
            "type": [
                "lib_@_no_default",
                "preacher.core.value.RelativeDatetime",
                "pytropos.internals.values.builtin_values.Bool",
                "pytropos.internals.values.python_values.wrappers.BuiltinClass"
            ]
        },
        {
            "category": "local",
            "name": "allow_fill",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "bool",
                "static_frame.core.util.UFunc"
            ]
        },
        {
            "category": "local",
            "name": "axis",
            "type": [
                "bool",
                "tuple[bool]"
            ]
        },
        {
            "category": "local",
            "name": "new_mgr_locs",
            "type": [
                "None",
                "int",
                "tuple[bool]",
                "numpy.ndarray",
                "list",
                "tuple[typing.Any]",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "take_nd",
            "type": []
        }
    ],
    "where@Block": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "T",
                "None",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "cond",
            "type": [
                "float",
                "list['cirq.Qid']"
            ]
        },
        {
            "category": "local",
            "name": "transpose",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "cond",
            "type": [
                "float",
                "list['cirq.Qid']"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list[float]",
                "list",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "T",
                "None",
                "typing.Iterable[typing.Any]",
                "lib_@_no_default",
                "abc.Hashable",
                "typing.Type",
                "pandas.core.arrays.datetimes.DatetimeArray"
            ]
        },
        {
            "category": "local",
            "name": "orig_other",
            "type": [
                "T",
                "None",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "where",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "str",
                "int",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "is_array",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "res_blocks",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "oth",
            "type": [
                "abc.Hashable",
                "pandas.core.arrays.datetimes.DatetimeArray",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "alt",
            "type": [
                "int",
                "list",
                "list[tuple[typing.Any]]",
                "other"
            ]
        }
    ],
    "where@EABackedBlock": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "cond",
            "type": [
                "str",
                "typing.Callable",
                "None",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "cond",
            "type": [
                "str",
                "typing.Callable",
                "None",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "str",
                "\"VersionNumber\"",
                "numpy.st3_linux_x64.numpy.lib.polynomial.poly1d",
                "lib_@_no_default"
            ]
        },
        {
            "category": "local",
            "name": "orig_other",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "where",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "blk",
            "type": [
                "int",
                "list",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "is_array",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "res_blocks",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "nb",
            "type": [
                "int",
                "set",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "str"
            ]
        }
    ]
}