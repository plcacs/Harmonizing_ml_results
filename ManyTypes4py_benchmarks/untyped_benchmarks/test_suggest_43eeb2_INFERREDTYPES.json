{
    "global@global": [
        {
            "category": "local",
            "name": "skip_win_perf",
            "type": [
                "int",
                "frozenset"
            ]
        }
    ],
    "good_at_suggest@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "keywords",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "k",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "good_at_suggest",
            "type": [
                "bool"
            ]
        }
    ],
    "long_name@global": [
        {
            "category": "arg",
            "name": "s",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "long_name",
            "type": [
                "bool"
            ]
        }
    ],
    "suggestable@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "keywords",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "suggestable",
            "type": [
                "bool"
            ]
        }
    ],
    "suggestion_testing@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "instrumentation",
            "type": [
                "str",
                "list[str]",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "suggestion",
            "type": [
                "str",
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]"
            ]
        },
        {
            "category": "arg",
            "name": "budget",
            "type": [
                "str",
                "list[str]",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "objective_function",
            "type": [
                "float",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "optimum",
            "type": [
                "None",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "threshold",
            "type": [
                "None",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "instrumentation",
            "type": [
                "str",
                "list[str]",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "str",
                "list[str]",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "optim",
            "type": [
                "nevergrad.optimization.test_base.LoggingOptimizer"
            ]
        },
        {
            "category": "local",
            "name": "optimum",
            "type": [
                "None",
                "float",
                "numpy.ndarray",
                "str",
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "suggestion",
            "type": [
                "str",
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "objective_function",
            "type": [
                "float",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "threshold",
            "type": [
                "None",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "suggestion_testing",
            "type": [
                "None"
            ]
        }
    ],
    "test_harder_continuous_suggest_optimizers@global": [
        {
            "category": "local",
            "name": "instrum",
            "type": [
                "float",
                "nevergrad.parametrization.choice.TransitionChoice",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_harder_continuous_suggest_optimizers",
            "type": [
                "None"
            ]
        }
    ],
    "test_harder_suggest_optimizers@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_harder_suggest_optimizers",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "instrum",
            "type": [
                "float",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "typing.Callable"
            ]
        }
    ],
    "test_optimizers_suggest@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_optimizers_suggest",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "tuple[tuple[typing.Literal]]"
            ]
        },
        {
            "category": "local",
            "name": "candidate",
            "type": [
                "list",
                "set[int]",
                "list[bytes]"
            ]
        }
    ],
    "test_suggest_optimizers@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_suggest_optimizers",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "c",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "instrum",
            "type": [
                "float",
                "int",
                "nevergrad.parametrization.choice.TransitionChoice"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "typing.Callable"
            ]
        }
    ]
}