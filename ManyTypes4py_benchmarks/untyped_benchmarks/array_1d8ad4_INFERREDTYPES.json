{
    "__abs__@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "__abs__",
            "type": [
                "str",
                "typing.Type"
            ]
        }
    ],
    "__array__@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "None",
                "bool",
                "numpy.dtype",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "None",
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "None",
                "bool",
                "numpy.ndarray",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "None",
                "bool",
                "numpy.dtype",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__array__",
            "type": [
                "tuple[int]",
                "numpy.ndarray",
                "numpy.array"
            ]
        }
    ],
    "__arrow_array__@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "type",
            "type": [
                "None",
                "typing.Sequence[str]",
                "set",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "__arrow_array__",
            "type": []
        }
    ],
    "__contains__@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "__contains__",
            "type": [
                "bool"
            ]
        }
    ],
    "__getitem__@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "item",
            "type": [
                "list",
                "typing.Mapping",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "item",
            "type": [
                "list",
                "typing.Mapping",
                "numpy.ndarray",
                "tuple",
                "dict",
                "np_@_ndarray",
                "Ellipsis",
                "range",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "__getitem__",
            "type": [
                "typing.Type",
                "int",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "pa_@_ChunkedArray",
                "int",
                "str",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "scalar",
            "type": [
                "int",
                "tuple[str]",
                "None"
            ]
        }
    ],
    "__getstate__@ArrowExtensionArray": [
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict[str, typing.Any]",
                "list",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__getstate__",
            "type": [
                "dict[str, typing.Any]",
                "list",
                "str"
            ]
        }
    ],
    "__init__@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "nevergrad.common.Any",
                "numpy.ndarray",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "nevergrad.common.Any",
                "numpy.ndarray",
                "list[float]",
                "pa_@_Array",
                "pa_@_ChunkedArray"
            ]
        },
        {
            "category": "local",
            "name": "_pa_array",
            "type": [
                "pa_@_ChunkedArray"
            ]
        },
        {
            "category": "local",
            "name": "_dtype",
            "type": [
                "ArrowDtype"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__invert__@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "__invert__",
            "type": [
                "str",
                "bool",
                "None"
            ]
        }
    ],
    "__iter__@ArrowExtensionArray": [
        {
            "category": "local",
            "name": "box_timestamp",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "box_timedelta",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "__iter__",
            "type": [
                "typing.Generator",
                "typing.Generator[typing.Union[int,float]]"
            ]
        }
    ],
    "__len__@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "__len__",
            "type": [
                "int"
            ]
        }
    ],
    "__neg__@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "__neg__",
            "type": [
                "backup.util.GlobalInfo",
                "typing.Callable",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        }
    ],
    "__pos__@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "__pos__",
            "type": [
                "str",
                "bytes",
                "dict"
            ]
        }
    ],
    "__setitem__@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "static_frame.core.util.GetItemKeyType",
                "static_frame.core.util.GetItemKeyTypeCompound",
                "abc.graph.NodeKeyType"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "str",
                "int",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "static_frame.core.util.GetItemKeyType",
                "static_frame.core.util.GetItemKeyTypeCompound",
                "abc.graph.NodeKeyType",
                "list",
                "str",
                "list[None]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str",
                "int",
                "slice",
                "pa_@_Scalar",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_pa_array",
            "type": [
                "int",
                "dict",
                "list[int]",
                "list",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "list",
                "dict",
                "tuple[typing.Any]",
                "pa_@_Array"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "chunks",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "__setitem__",
            "type": [
                "None"
            ]
        }
    ],
    "__setstate__@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "state",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "T",
                "list[int]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "__setstate__",
            "type": [
                "None"
            ]
        }
    ],
    "_accumulate@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "Scalar"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "Scalar"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_accumulate",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "pyarrow_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "pyarrow_meth",
            "type": [
                "None",
                "str",
                "list[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "convert_to_int",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_apply_elementwise@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable[None, bool]"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_apply_elementwise",
            "type": [
                "list[list[None]]"
            ]
        }
    ],
    "_argmin_max@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "float",
                "str",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "float",
                "str",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "_argmin_max",
            "type": [
                "str",
                "typing.Sequence[str]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str",
                "list",
                "typing.Type"
            ]
        }
    ],
    "_arith_method@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "cirq.ops.Operation",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "op",
            "type": [
                "cirq.ops.Operation",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "cirq.ops.Operation",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "op",
            "type": [
                "cirq.ops.Operation",
                "typing.Type",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "ARROW_ARITHMETIC_FUNCS",
            "type": [
                "frozenset",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_arith_method",
            "type": [
                "bool"
            ]
        }
    ],
    "_box_pa@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "T",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "complex"
            ]
        },
        {
            "category": "arg",
            "name": "pa_type",
            "type": [
                "None",
                "T",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "complex"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "T",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "pa_type",
            "type": [
                "None",
                "T",
                "float",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_box_pa",
            "type": [
                "typing.Callable"
            ]
        }
    ],
    "_box_pa_array@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "cls",
            "type": []
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "dict[str, typing.Any]",
                "list[numpy.ndarray]",
                "cirq.ops.GateOperation"
            ]
        },
        {
            "category": "arg",
            "name": "pa_type",
            "type": [
                "None",
                "typing.Type",
                "numpy.dtype"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "dict[str, typing.Any]",
                "list[numpy.ndarray]",
                "cirq.ops.GateOperation",
                "cls",
                "bytearray",
                "bytes",
                "typing.ByteString",
                "BaseMaskedArray"
            ]
        },
        {
            "category": "local",
            "name": "pa_array",
            "type": [
                "bytearray",
                "bytes",
                "typing.ByteString",
                "int",
                "dict[str, list[int]]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "pa_type",
            "type": [
                "None",
                "typing.Type",
                "numpy.dtype"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "ArrowDtype"
            ]
        },
        {
            "category": "return",
            "name": "_box_pa_array",
            "type": []
        }
    ],
    "_box_pa_scalar@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "int",
                "typing.Type",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "Timestamp",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "pa_type",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "Timestamp",
                "int",
                "float",
                "pa_@_Scalar",
                "Timedelta"
            ]
        },
        {
            "category": "local",
            "name": "pa_scalar",
            "type": [
                "pa_@_Scalar",
                "dict[typing.Any, int]",
                "dict",
                "dict[int, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "pa_type",
            "type": [
                "None",
                "int",
                "tuple[typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "_box_pa_scalar",
            "type": [
                "pa_@_Scalar",
                "dict[typing.Any, int]",
                "dict",
                "dict[int, typing.Any]"
            ]
        }
    ],
    "_cmp_method@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "cirq.ops.Operation",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "op",
            "type": [
                "typing.Iterable[typing.Hashable]",
                "T",
                "typing.Callable[T, bool]"
            ]
        },
        {
            "category": "local",
            "name": "ARROW_CMP_FUNCS",
            "type": [
                "dict[str, str]",
                "list[str]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "op",
            "type": [
                "typing.Iterable[typing.Hashable]",
                "T",
                "typing.Callable[T, bool]"
            ]
        },
        {
            "category": "local",
            "name": "pc_func",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "cirq.ops.Operation",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "float",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "valid",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_cmp_method",
            "type": [
                "ArrowExtensionArray"
            ]
        }
    ],
    "_concat_same_type@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "float",
                "numpy.dtype",
                "typing.Callable[T,T, T]"
            ]
        },
        {
            "category": "arg",
            "name": "to_concat",
            "type": [
                "numpy.ndarray",
                "list[int]",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "to_concat",
            "type": [
                "numpy.ndarray",
                "list[int]",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "ea",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "chunks",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "pa_dtype",
            "type": [
                "dict[str, int]",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_concat_same_type",
            "type": []
        }
    ],
    "_convert_bool_result@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "str",
                "typing.Iterable[typing.Pattern]",
                "typing.Pattern"
            ]
        },
        {
            "category": "arg",
            "name": "na",
            "type": []
        },
        {
            "category": "arg",
            "name": "method_name",
            "type": [
                "None",
                "str",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "typing.Iterable[typing.Pattern]",
                "typing.Pattern"
            ]
        },
        {
            "category": "return",
            "name": "_convert_bool_result",
            "type": [
                "list[str]",
                "dict[str, typing.Any]",
                "str"
            ]
        }
    ],
    "_convert_int_result@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "_convert_int_result",
            "type": [
                "str",
                "dict",
                "list[str]"
            ]
        }
    ],
    "_convert_rank_result@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "int",
                "str",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "_convert_rank_result",
            "type": [
                "list[str]",
                "str",
                "set[str]"
            ]
        }
    ],
    "_dt_as_unit@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "pandas.DataFrame",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "pd_array",
            "type": [
                "dict[str, typing.Any]",
                "list",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_dt_as_unit",
            "type": [
                "str"
            ]
        }
    ],
    "_dt_ceil@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "freq",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "ambiguous",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "nonexistent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "freq",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ambiguous",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "nonexistent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_dt_ceil",
            "type": [
                "float",
                "int"
            ]
        }
    ],
    "_dt_date@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_date",
            "type": [
                "str",
                "bool",
                "\"Quantile\""
            ]
        }
    ],
    "_dt_day@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_day",
            "type": [
                "str",
                "bool",
                "None"
            ]
        }
    ],
    "_dt_day_name@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "locale",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "locale",
            "type": [
                "None",
                "str",
                "int",
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_dt_day_name",
            "type": [
                "str"
            ]
        }
    ],
    "_dt_day_of_week@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_day_of_week",
            "type": [
                "str",
                "bool",
                "tartare.core.models.ValidityPeriod",
                "None"
            ]
        }
    ],
    "_dt_day_of_year@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_day_of_year",
            "type": [
                "bool",
                "str",
                "tartare.core.models.ValidityPeriod",
                "None"
            ]
        }
    ],
    "_dt_days@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_days",
            "type": [
                "str",
                "typing.Callable"
            ]
        }
    ],
    "_dt_days_in_month@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_days_in_month",
            "type": [
                "str",
                "None",
                "set[str]"
            ]
        }
    ],
    "_dt_floor@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "freq",
            "type": [
                "str",
                "pandas.DataFrame",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "ambiguous",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "nonexistent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "freq",
            "type": [
                "str",
                "pandas.DataFrame",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ambiguous",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "nonexistent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_dt_floor",
            "type": [
                "float",
                "tuple[float]",
                "tuple[int]"
            ]
        }
    ],
    "_dt_hour@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_hour",
            "type": [
                "str",
                "(str,str)",
                "typing.Callable"
            ]
        }
    ],
    "_dt_hours@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_hours",
            "type": [
                "str",
                "bool",
                "tuple[str]"
            ]
        }
    ],
    "_dt_is_leap_year@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_is_leap_year",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "_dt_is_month_end@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_is_month_end",
            "type": [
                "str",
                "typing.Mapping"
            ]
        }
    ],
    "_dt_is_month_start@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_is_month_start",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "_dt_is_quarter_end@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_is_quarter_end",
            "type": [
                "str",
                "typing.Mapping",
                "bool"
            ]
        }
    ],
    "_dt_is_quarter_start@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_is_quarter_start",
            "type": [
                "typing.Mapping",
                "bool",
                "str",
                "list[str]"
            ]
        }
    ],
    "_dt_is_year_end@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_is_year_end",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "_dt_is_year_start@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_is_year_start",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "_dt_isocalendar@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_isocalendar",
            "type": [
                "str"
            ]
        }
    ],
    "_dt_microsecond@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_microsecond",
            "type": [
                "str",
                "typing.Type"
            ]
        }
    ],
    "_dt_microseconds@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_microseconds",
            "type": [
                "str",
                "typing.Callable",
                "None"
            ]
        }
    ],
    "_dt_milliseconds@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_milliseconds",
            "type": [
                "str",
                "set[str]",
                "static_frame.Series"
            ]
        }
    ],
    "_dt_minute@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_minute",
            "type": [
                "str",
                "None",
                "float"
            ]
        }
    ],
    "_dt_minutes@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_minutes",
            "type": [
                "str",
                "set[str]",
                "typing.Sequence[str]"
            ]
        }
    ],
    "_dt_month@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_month",
            "type": [
                "str",
                "list",
                "dict[str, int]"
            ]
        }
    ],
    "_dt_month_name@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "locale",
            "type": [
                "None",
                "str",
                "int",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "locale",
            "type": [
                "None",
                "str",
                "int",
                "tuple[str]",
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_dt_month_name",
            "type": [
                "str",
                "typing.Type"
            ]
        }
    ],
    "_dt_nanosecond@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_nanosecond",
            "type": [
                "str",
                "typing.Type"
            ]
        }
    ],
    "_dt_nanoseconds@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_nanoseconds",
            "type": [
                "str",
                "int",
                "typing.Type"
            ]
        }
    ],
    "_dt_normalize@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_normalize",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "_dt_quarter@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_quarter",
            "type": [
                "str",
                "bool",
                "None"
            ]
        }
    ],
    "_dt_round@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "freq",
            "type": [
                "str",
                "pandas.DataFrame",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "ambiguous",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "nonexistent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "freq",
            "type": [
                "str",
                "pandas.DataFrame",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ambiguous",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "nonexistent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_dt_round",
            "type": [
                "float",
                "tuple[float]",
                "tuple[int]"
            ]
        }
    ],
    "_dt_second@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_second",
            "type": [
                "str",
                "bool",
                "T"
            ]
        }
    ],
    "_dt_seconds@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_seconds",
            "type": [
                "str",
                "bytes",
                "r2c.lib.manifesAnalyzerManifest"
            ]
        }
    ],
    "_dt_strftime@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "format",
            "type": [
                "str",
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_dt_strftime",
            "type": [
                "str"
            ]
        }
    ],
    "_dt_time@ArrowExtensionArray": [
        {
            "category": "local",
            "name": "unit",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_dt_time",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "_dt_to_pydatetime@ArrowExtensionArray": [
        {
            "category": "local",
            "name": "data",
            "type": [
                "property",
                "str",
                "list[None]"
            ]
        },
        {
            "category": "local",
            "name": "ts",
            "type": [
                "typing.Text",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_dt_to_pydatetime",
            "type": [
                "Series"
            ]
        }
    ],
    "_dt_to_pytimedelta@ArrowExtensionArray": [
        {
            "category": "local",
            "name": "data",
            "type": [
                "property",
                "str",
                "list[None]"
            ]
        },
        {
            "category": "local",
            "name": "ts",
            "type": [
                "typing.Text",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_dt_to_pytimedelta",
            "type": []
        }
    ],
    "_dt_total_seconds@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_total_seconds",
            "type": [
                "str",
                "typing.Callable[str, str]"
            ]
        }
    ],
    "_dt_tz@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_tz",
            "type": []
        }
    ],
    "_dt_tz_convert@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "tz",
            "type": [
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_dt_tz_convert",
            "type": [
                "str",
                "typing.Callable",
                "Exception"
            ]
        }
    ],
    "_dt_tz_localize@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "tz",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "ambiguous",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "nonexistent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "ambiguous",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "nonexistent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "nonexistent_pa",
            "type": [
                "typing.Text",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_dt_tz_localize",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        }
    ],
    "_dt_unit@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_unit",
            "type": []
        }
    ],
    "_dt_year@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_dt_year",
            "type": [
                "str",
                "dict[str, float]",
                "float"
            ]
        }
    ],
    "_evaluate_op_method@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "cirq.ops.Operation",
                "cirq.ops.Moment",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "op",
            "type": [
                "typing.Callable",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "arrow_funcs",
            "type": [
                "static_frame.core.util.IndexConstructor",
                "None",
                "base.FieldFactory",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "cirq.ops.Operation",
                "cirq.ops.Moment",
                "typing.Callable",
                "int",
                "list[int]",
                "typing.ClassVar"
            ]
        },
        {
            "category": "local",
            "name": "other_original",
            "type": [
                "cirq.ops.Operation",
                "cirq.ops.Moment",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "op",
            "type": [
                "typing.Callable",
                "typing.Type",
                "operator_@_add",
                "roperator_@_radd"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "return",
            "name": "_evaluate_op_method",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "binary",
            "type": [
                "int",
                "list[int]",
                "typing.ClassVar"
            ]
        },
        {
            "category": "local",
            "name": "integral",
            "type": [
                "int",
                "list[int]",
                "typing.ClassVar"
            ]
        },
        {
            "category": "local",
            "name": "ARROW_LOGICAL_FUNCS",
            "type": [
                "str",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "arrow_funcs",
            "type": [
                "static_frame.core.util.IndexConstructor",
                "None",
                "base.FieldFactory",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "pc_func",
            "type": [
                "NotImplemented",
                "nevergrad.functions.pyomo.core.Pyomo",
                "typing.Callable[None,None, typing.Any]"
            ]
        }
    ],
    "_explode@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_explode",
            "type": [
                "bool",
                "None",
                "tuple[typing.Union[str,list[float],range]]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "ArrowExtensionArray",
                "str",
                "list[float]",
                "range"
            ]
        },
        {
            "category": "local",
            "name": "counts",
            "type": [
                "int",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "bool"
            ]
        }
    ],
    "_from_sequence@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "bool",
                "numpy.dtype",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "scalars",
            "type": [
                "bool",
                "numpy.dtype",
                "static_frame.core.util.DtypeSpecifier"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "pa_type",
            "type": [
                "int",
                "tuple[str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "bool",
                "numpy.dtype",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "scalars",
            "type": [
                "bool",
                "numpy.dtype",
                "static_frame.core.util.DtypeSpecifier"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "pa_array",
            "type": [
                "str",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list",
                "list[str]",
                "typing.Iterator"
            ]
        },
        {
            "category": "return",
            "name": "_from_sequence",
            "type": [
                "list",
                "list[str]",
                "typing.Iterator"
            ]
        }
    ],
    "_from_sequence_of_strings@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "bool",
                "str",
                "typing.Callable[numpy.ndarray, numpy.ndarray]"
            ]
        },
        {
            "category": "arg",
            "name": "strings",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "pa_type",
            "type": [
                "dict[str, typing.Any]",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "strings",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "scalars",
            "type": [
                "str",
                "None",
                "bool",
                "typing.Callable[object, int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "int",
                "str",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "bool",
                "str",
                "typing.Callable[numpy.ndarray, numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_from_sequence_of_strings",
            "type": [
                "str",
                "T",
                "bool"
            ]
        }
    ],
    "_groupby_op@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "how",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "has_dropped_na",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "ngroups",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "ids",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "StringDtype"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "has_dropped_na",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ngroups",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ids",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_groupby_op",
            "type": [
                "bool",
                "np_@_ndarray"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "np_@_ndarray",
                "list",
                "list[list[int]]",
                "T",
                "BaseMaskedArray"
            ]
        },
        {
            "category": "local",
            "name": "pa_result",
            "type": [
                "float",
                "list",
                "list[list[typing.Any]]"
            ]
        }
    ],
    "_hasna@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_hasna",
            "type": [
                "bool"
            ]
        }
    ],
    "_if_else@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "cond",
            "type": [
                "pandas._ArrayLike",
                "int",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "left",
            "type": [
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "right",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "cond",
            "type": [
                "pandas._ArrayLike",
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "left",
            "type": [
                "set",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "right",
            "type": [
                "set",
                "str",
                "int",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_if_else",
            "type": []
        },
        {
            "category": "local",
            "name": "left_type",
            "type": [
                "int",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "right_type",
            "type": [
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "pa_type",
            "type": [
                "int",
                "set",
                "dict",
                "dict[str, str]"
            ]
        }
    ],
    "_logical_method@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "cirq.ops.Operation",
                "cirq.ops.GateOperation",
                "static_frame.core.util.UFunc"
            ]
        },
        {
            "category": "arg",
            "name": "op",
            "type": [
                "cirq.ops.Operation",
                "cirq.ops.GateOperation",
                "static_frame.core.util.UFunc"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "cirq.ops.Operation",
                "cirq.ops.GateOperation",
                "static_frame.core.util.UFunc"
            ]
        },
        {
            "category": "local",
            "name": "op",
            "type": [
                "cirq.ops.Operation",
                "cirq.ops.GateOperation",
                "static_frame.core.util.UFunc"
            ]
        },
        {
            "category": "local",
            "name": "ARROW_BIT_WISE_FUNCS",
            "type": [
                "frozenset",
                "tuple[typing.Literal]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_logical_method",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ARROW_LOGICAL_FUNCS",
            "type": [
                "str",
                "list[int]",
                "float"
            ]
        }
    ],
    "_maybe_convert_datelike_array@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_maybe_convert_datelike_array",
            "type": [
                "str",
                "list",
                "float",
                "ArrowExtensionArray"
            ]
        }
    ],
    "_maybe_convert_setitem_value@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "int",
                "float",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "int",
                "float",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_convert_setitem_value",
            "type": []
        }
    ],
    "_mode@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "dropna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bytearray",
                "bytes",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "dropna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "most_common",
            "type": [
                "list",
                "int",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_mode",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "_op_method_error_message@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "op",
            "type": [
                "typing.Type",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "other_type",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "op",
            "type": [
                "typing.Type",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "_op_method_error_message",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_pad_or_backfill@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "int",
                "str",
                "typing.Mapping",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "limit_area",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_pad_or_backfill",
            "type": [
                "ArrowExtensionArray",
                "str",
                "None",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "limit_area",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "int",
                "str",
                "typing.Mapping",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool"
            ]
        }
    ],
    "_quantile@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "qs",
            "type": [
                "float",
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "interpolation",
            "type": [
                "float",
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "qs",
            "type": [
                "float",
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "interpolation",
            "type": [
                "float",
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "_quantile",
            "type": [
                "T",
                "str",
                "bytes"
            ]
        }
    ],
    "_rank@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "axis",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "na_option",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "pct",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "axis",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "na_option",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "pct",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_rank",
            "type": [
                "int",
                "float",
                "tuple[float]"
            ]
        }
    ],
    "_rank_calc@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "axis",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "na_option",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "pct",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "axis",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "na_option",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "pct",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ranked",
            "type": [
                "str",
                "int",
                "typing.Callable[None,None,None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_rank_calc",
            "type": []
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "sort_keys",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "null_placement",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "tiebreaker",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_reduce@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "keepdims",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "keepdims",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "pa_@_Array",
                "bool",
                "dict",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_reduce",
            "type": [
                "list",
                "dict",
                "list[dict[str, str]]",
                "bool"
            ]
        }
    ],
    "_reduce_calc@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "bool",
                "object",
                "slp.util.types.NdTensor"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "keepdims",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "bool",
                "object",
                "slp.util.types.NdTensor"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "pa_result",
            "type": [
                "pa_@_Scalar",
                "dict",
                "list",
                "cmk.base.api.agent_based.checking_classes.Result"
            ]
        },
        {
            "category": "local",
            "name": "keepdims",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_reduce_calc",
            "type": [
                "dict",
                "str",
                "dict[str, typing.Any]",
                "None",
                "list[str]",
                "list",
                "cmk.base.api.agent_based.checking_classes.Result"
            ]
        }
    ],
    "_reduce_pyarrow@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "bool",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "data_to_reduce",
            "type": [
                "typing.Callable[None, bool]",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cast_kwargs",
            "type": [
                "dict[typing.Text, bool]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "bool",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "data_to_cmp",
            "type": [
                "list",
                "typing.Type",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "pyarrow_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "pyarrow_meth",
            "type": [
                "None",
                "list[str]",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_reduce_pyarrow",
            "type": [
                "bool",
                "float",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_replace_with_mask@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Sequence[typing.Sequence[int]]",
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "Series",
                "numpy.dtype",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "mask",
            "type": [
                "str",
                "tuple[int]",
                "tuple[float]"
            ]
        },
        {
            "category": "arg",
            "name": "replacements",
            "type": [
                "numpy.ndarray",
                "numpy.ma.MaskedArray",
                "static_frame.core.util.GetItemKeyType"
            ]
        },
        {
            "category": "local",
            "name": "replacements",
            "type": [
                "numpy.ndarray",
                "numpy.ma.MaskedArray",
                "static_frame.core.util.GetItemKeyType",
                "pa_@_ChunkedArray",
                "list",
                "list[tuple[typing.Any]]",
                "list[list[str]]",
                "pa_@_Array",
                "pa_@_Scalar"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "Series",
                "numpy.dtype",
                "numpy.ndarray",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "str",
                "tuple[int]",
                "tuple[float]"
            ]
        },
        {
            "category": "return",
            "name": "_replace_with_mask",
            "type": []
        }
    ],
    "_round_temporally@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "freq",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "ambiguous",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "nonexistent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "ambiguous",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "nonexistent",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "freq",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "offset",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "pa_supported_unit",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "typing.Text",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_round_temporally",
            "type": [
                "dict",
                "str",
                "bool"
            ]
        }
    ],
    "_str_accumulate@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "tuple[int]",
                "list[str]",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "tuple[int]",
                "list[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "tail",
            "type": [
                "None",
                "list",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "na_mask",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "np_func",
            "type": [
                "list",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_str_accumulate",
            "type": [
                "str",
                "T",
                "dict[str, typing.Any]",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "int",
                "str",
                "float"
            ]
        }
    ],
    "_str_casefold@ArrowExtensionArray": [
        {
            "category": "local",
            "name": "predicate",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_str_casefold",
            "type": [
                "str",
                "int",
                "typing.Iterable[T]"
            ]
        }
    ],
    "_str_count@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "pat",
            "type": [
                "set",
                "float",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "flags",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "flags",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_str_count",
            "type": [
                "str",
                "dict",
                "bool"
            ]
        }
    ],
    "_str_encode@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "encoding",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "errors",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "predicate",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_str_encode",
            "type": [
                "str",
                "typing.Iterable[T]",
                "typing.Mapping"
            ]
        }
    ],
    "_str_extract@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "pat",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "flags",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "expand",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "flags",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "groups",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "pat",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "expand",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_str_extract",
            "type": [
                "dict",
                "bool",
                "typing.Mapping",
                "static_frame.Series"
            ]
        }
    ],
    "_str_findall@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "pat",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "flags",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "pat",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "flags",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "predicate",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_str_findall",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "_str_get_dummies@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "sep",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "None",
                "numpy.ndarray",
                "str",
                "typing.Collection"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "None",
                "numpy.ndarray",
                "str",
                "typing.Collection",
                "set[str]",
                "dict[int, str]"
            ]
        },
        {
            "category": "local",
            "name": "sep",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "uniques_sorted",
            "type": [
                "list[int]",
                "list",
                "list[set[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "lengths",
            "type": [
                "int",
                "float",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "n_rows",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n_cols",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "indices",
            "type": [
                "int",
                "list",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "_dtype",
            "type": [
                "str",
                "dict[typing.Union[str,None], typing.Any]",
                "set[str]",
                "np_@_dtype"
            ]
        },
        {
            "category": "local",
            "name": "dummies_dtype",
            "type": [
                "np_@_dtype"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "typing.NoReturn",
                "pandas.core.arrays.numpy_.PandasArray"
            ]
        },
        {
            "category": "return",
            "name": "_str_get_dummies",
            "type": [
                "tuple[typing.Union[list,typing.NoReturn,pandas.core.arrays.numpy_.PandasArray]]"
            ]
        }
    ],
    "_str_index@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "sub",
            "type": [
                "int",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "start",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "end",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "predicate",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_str_index",
            "type": [
                "str",
                "int",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "_str_join@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "sep",
            "type": [
                "str",
                "int",
                "hex"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[object]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_str_join",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "_str_normalize@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "form",
            "type": [
                "str",
                "typing.Type",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "predicate",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_str_normalize",
            "type": [
                "str",
                "dict",
                "bytes"
            ]
        }
    ],
    "_str_partition@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "sep",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "expand",
            "type": [
                "bool",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "predicate",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_str_partition",
            "type": [
                "str",
                "bytes",
                "T"
            ]
        }
    ],
    "_str_repeat@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "repeats",
            "type": [
                "int",
                "typing.Iterable[cirq.ops.QubitId]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "repeats",
            "type": [
                "int",
                "typing.Iterable[cirq.ops.QubitId]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_str_repeat",
            "type": [
                "str",
                "list[str]",
                "dict"
            ]
        }
    ],
    "_str_rfind@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "sub",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "start",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "end",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "predicate",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_str_rfind",
            "type": [
                "str",
                "int",
                "typing.Iterable[T]"
            ]
        }
    ],
    "_str_rindex@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "sub",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "start",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "end",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "predicate",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_str_rindex",
            "type": [
                "str",
                "int",
                "typing.Type"
            ]
        }
    ],
    "_str_rpartition@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "sep",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "expand",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "predicate",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_str_rpartition",
            "type": [
                "typing.Iterable[T]",
                "bool"
            ]
        }
    ],
    "_str_rsplit@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "pat",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "pat",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_str_rsplit",
            "type": [
                "str",
                "tuple[str]"
            ]
        }
    ],
    "_str_split@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "pat",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "expand",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "regex",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "pat",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "regex",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_str_split",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        }
    ],
    "_str_translate@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "table",
            "type": [
                "list[tuple]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "predicate",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_str_translate",
            "type": [
                "str",
                "bytes"
            ]
        }
    ],
    "_str_wrap@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "width",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "width",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "predicate",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_str_wrap",
            "type": [
                "str",
                "T",
                "int"
            ]
        }
    ],
    "_to_datetimearray@ArrowExtensionArray": [
        {
            "category": "local",
            "name": "np_array",
            "type": [
                "list",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "_to_datetimearray",
            "type": []
        }
    ],
    "_to_masked@ArrowExtensionArray": [
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "int",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "str",
                "None",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "int",
                "list[int]",
                "typing.Callable[None, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_to_masked",
            "type": [
                "bool",
                "typing.Sequence[int]",
                "static_frame.core.util.GetItemKeyType"
            ]
        }
    ],
    "_to_numpy_and_type@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "value",
            "type": []
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "pa_@_Scalar"
            ]
        },
        {
            "category": "local",
            "name": "pa_type",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_to_numpy_and_type",
            "type": [
                "tuple[None]"
            ]
        }
    ],
    "_to_timedeltaarray@ArrowExtensionArray": [
        {
            "category": "local",
            "name": "np_array",
            "type": [
                "list",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "_to_timedeltaarray",
            "type": []
        }
    ],
    "_values_for_factorize@ArrowExtensionArray": [
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "slice",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_values_for_factorize",
            "type": [
                "tuple[typing.Union[int,slice,float]]"
            ]
        }
    ],
    "_values_for_json@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "_values_for_json",
            "type": [
                "str",
                "typing.IO",
                "numpy.ndarray"
            ]
        }
    ],
    "all@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "all",
            "type": [
                "None"
            ]
        }
    ],
    "any@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "any",
            "type": [
                "None"
            ]
        }
    ],
    "argmax@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "argmax",
            "type": [
                "float",
                "int",
                "tuple[float]"
            ]
        }
    ],
    "argmin@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "skipna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "argmin",
            "type": [
                "float",
                "int",
                "tuple[int]"
            ]
        }
    ],
    "argsort@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kind",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "na_position",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "ascending",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "order",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "na_position",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "null_placement",
            "type": [
                "typing.Text",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "argsort",
            "type": []
        }
    ],
    "cast_for_truediv@global": [
        {
            "category": "arg",
            "name": "arrow_array",
            "type": [
                "bool",
                "typing.Sequence[int]",
                "Series"
            ]
        },
        {
            "category": "arg",
            "name": "pa_object",
            "type": [
                "bool",
                "typing.Sequence[int]",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "arrow_array",
            "type": [
                "bool",
                "typing.Sequence[int]",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "pa_object",
            "type": [
                "bool",
                "typing.Sequence[int]",
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "cast_for_truediv",
            "type": [
                "tuple",
                "tuple[typing.Union[bool,typing.Sequence[int],Series]]"
            ]
        }
    ],
    "copy@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "copy",
            "type": [
                "str",
                "typing.Callable[..., None]",
                "bytes"
            ]
        }
    ],
    "dropna@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "dropna",
            "type": [
                "T",
                "tuple[str]",
                "str"
            ]
        }
    ],
    "dtype@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "dtype",
            "type": []
        }
    ],
    "duplicated@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "keep",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list",
                "property",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list",
                "list[int]",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "keep",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "duplicated",
            "type": []
        }
    ],
    "equals@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "complex",
                "float",
                "int",
                "cirq.ops.raw_types.Gate",
                "'LinearCombinationOfGates'",
                "Scalar"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "complex",
                "float",
                "int",
                "cirq.ops.raw_types.Gate",
                "'LinearCombinationOfGates'",
                "Scalar"
            ]
        },
        {
            "category": "return",
            "name": "equals",
            "type": [
                "bool"
            ]
        }
    ],
    "factorize@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "use_na_sentinel",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "use_na_sentinel",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "null_encoding",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "indices",
            "type": [
                "list",
                "int",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "uniques",
            "type": [
                "list",
                "str",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "factorize",
            "type": [
                "tuple[typing.Union[list,int,tuple[typing.Any],str,list[list[typing.Any]]]]"
            ]
        }
    ],
    "fillna@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "fillna",
            "type": [
                "str",
                "T",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "floordiv_compat@global": [
        {
            "category": "arg",
            "name": "left",
            "type": []
        },
        {
            "category": "arg",
            "name": "right",
            "type": []
        },
        {
            "category": "return",
            "name": "floordiv_compat",
            "type": []
        }
    ],
    "get_unit_from_pa_dtype@global": [
        {
            "category": "arg",
            "name": "pa_dtype",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pa_dtype",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_unit_from_pa_dtype",
            "type": [
                "str"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "ARROW_CMP_FUNCS",
            "type": [
                "dict[typing.Text, ]",
                "dict[str, str]",
                "list[str]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "ARROW_LOGICAL_FUNCS",
            "type": [
                "dict[typing.Text, typing.Callable]",
                "str",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "ARROW_BIT_WISE_FUNCS",
            "type": [
                "dict[typing.Text, typing.Callable]",
                "frozenset",
                "tuple[typing.Literal]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ARROW_ARITHMETIC_FUNCS",
            "type": [
                "dict[typing.Text, typing.Callable]",
                "frozenset",
                "typing.Type"
            ]
        }
    ],
    "interpolate@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "axis",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "index",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "limit_direction",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "limit_area",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "limit_area",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "limit_direction",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "interpolate",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "int",
                "list",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "list[list[int]]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "str",
                "int",
                "float"
            ]
        }
    ],
    "isin@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "numpy.ndarray",
                "list[typing.Union[int,float]]",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "numpy.ndarray",
                "list[typing.Union[int,float]]",
                "list[list[int]]"
            ]
        },
        {
            "category": "return",
            "name": "isin",
            "type": []
        }
    ],
    "isna@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "isna",
            "type": [
                "int",
                "str",
                "None"
            ]
        }
    ],
    "map@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "mapper",
            "type": [
                "dict",
                "Series",
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "na_action",
            "type": [
                "None",
                "dict",
                "Series",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mapper",
            "type": [
                "dict",
                "Series",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "na_action",
            "type": [
                "None",
                "dict",
                "Series",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "map",
            "type": [
                "str",
                "dict",
                "dict[str, list[typing.Any]]"
            ]
        }
    ],
    "nbytes@ArrowExtensionArray": [
        {
            "category": "return",
            "name": "nbytes",
            "type": []
        }
    ],
    "pyarrow_meth@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "data",
            "type": []
        },
        {
            "category": "arg",
            "name": "skip_nulls",
            "type": []
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "pyarrow_meth",
            "type": []
        }
    ],
    "reshape@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "reshape",
            "type": [
                "None"
            ]
        }
    ],
    "round@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "decimals",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "round",
            "type": [
                "int",
                "str",
                "numpy.ndarray"
            ]
        }
    ],
    "searchsorted@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "bool",
                "None",
                "pandas.core.indexes.api.Index"
            ]
        },
        {
            "category": "arg",
            "name": "side",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "sorter",
            "type": [
                "None",
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "bool",
                "None",
                "pandas.core.indexes.api.Index",
                "ExtensionArray",
                "typing.AbstractSet",
                "list",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "None",
                "pandas.core.dtypes.dtypes.CategoricalDtype",
                "str",
                "typing.Type",
                "ArrowDtype"
            ]
        },
        {
            "category": "local",
            "name": "side",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "sorter",
            "type": [
                "None",
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "searchsorted",
            "type": [
                "str",
                "numpy.ndarray",
                "pandas.Series",
                "None"
            ]
        }
    ],
    "take@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "indices",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "allow_fill",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "fill_value",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "indices",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "allow_fill",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "fill_mask",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "int",
                "list[list[int]]",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "fill_value",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "take",
            "type": [
                "T",
                "bytes",
                "str"
            ]
        }
    ],
    "to_numpy@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "None",
                "bool",
                "numpy.dtype"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": []
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "None",
                "bool",
                "numpy.dtype",
                "str",
                "list",
                "pandas.core.dtypes.dtypes.CategoricalDtype"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "ArrowExtensionArray"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "float",
                "dict[typing.Any, list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "empty",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "property",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "to_numpy",
            "type": [
                "dict",
                "float",
                "dict[typing.Any, list[typing.Any]]"
            ]
        }
    ],
    "to_pyarrow_type@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "typing.Type",
                "ArrowDtype",
                "pa_@_DataType",
                "DatetimeTZDtype"
            ]
        },
        {
            "category": "return",
            "name": "to_pyarrow_type",
            "type": [
                "pa_@_DataType",
                "None"
            ]
        }
    ],
    "transpose_homogeneous_pyarrow@global": [
        {
            "category": "arg",
            "name": "arrays",
            "type": [
                "list[list]",
                "list",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "arrays",
            "type": [
                "list[list]",
                "list",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "nrows",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ncols",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "indices",
            "type": [
                "range"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list[int]",
                "list",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "transpose_homogeneous_pyarrow",
            "type": [
                "list[ArrowExtensionArray]"
            ]
        }
    ],
    "unique@ArrowExtensionArray": [
        {
            "category": "local",
            "name": "data",
            "type": [
                "list[int]",
                "T",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "unique",
            "type": [
                "str",
                "bytes",
                "typing.Callable[..., collections.abc.Awaitable]"
            ]
        }
    ],
    "value_counts@ArrowExtensionArray": [
        {
            "category": "arg",
            "name": "dropna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "T",
                "bytes",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "vc",
            "type": [
                "str",
                "dict",
                "static_frame.core.series.Series"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str",
                "int",
                "typing.ByteString"
            ]
        },
        {
            "category": "local",
            "name": "counts",
            "type": [
                "int",
                "ArrowExtensionArray"
            ]
        },
        {
            "category": "local",
            "name": "dropna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "int",
                "list[int]",
                "typing.Callable[None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "Index"
            ]
        },
        {
            "category": "return",
            "name": "value_counts",
            "type": [
                "Series"
            ]
        }
    ]
}