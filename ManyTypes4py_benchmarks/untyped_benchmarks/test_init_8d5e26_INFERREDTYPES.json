{
    "__init__@EntityMetric": [
        {
            "category": "arg",
            "name": "metric_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "metric_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@EntityMetricWithValue": [
        {
            "category": "arg",
            "name": "metric",
            "type": [
                "str",
                "dict",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "typing.Any",
                "None",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "metric",
            "type": [
                "str",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "property",
                "float",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_in_metrics@EntityMetric": [
        {
            "category": "arg",
            "name": "metrics",
            "type": [
                "str",
                "dict[str, str]",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "metrics",
            "type": [
                "str",
                "dict[str, str]",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "line",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_in_metrics",
            "type": [
                "bool"
            ]
        }
    ],
    "_metric_name_string@EntityMetric": [
        {
            "category": "local",
            "name": "labels",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_metric_name_string",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_metric_string@EntityMetricWithValue": [
        {
            "category": "local",
            "name": "value",
            "type": [
                "int",
                "property",
                "T",
                "floatToGoString"
            ]
        },
        {
            "category": "return",
            "name": "_metric_string",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_setup@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "dict",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "filter_config",
            "type": [
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "filter_config",
            "type": [
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[, dict[typing.Text, typing.Union[homeassistancore.HomeAssistant,dict[str, typing.Any],dict]]]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "dict",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "_setup",
            "type": [
                "None"
            ]
        }
    ],
    "alarm_control_panel_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "alarm_control_panel_fixture",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "assert_in_metrics@EntityMetric": [
        {
            "category": "arg",
            "name": "metrics",
            "type": [
                "dict[str, str]",
                "dict[str, float]"
            ]
        },
        {
            "category": "return",
            "name": "assert_in_metrics",
            "type": [
                "None"
            ]
        }
    ],
    "assert_in_metrics@EntityMetricWithValue": [
        {
            "category": "arg",
            "name": "metrics",
            "type": [
                "dict[str, float]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "assert_in_metrics",
            "type": [
                "None"
            ]
        }
    ],
    "assert_not_in_metrics@EntityMetric": [
        {
            "category": "arg",
            "name": "metrics",
            "type": [
                "dict[str, str]",
                "dict[str, float]"
            ]
        },
        {
            "category": "return",
            "name": "assert_not_in_metrics",
            "type": [
                "None"
            ]
        }
    ],
    "binary_sensor_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "binary_sensor_fixture",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "climate_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]",
                "dict[typing.Text, dict[, int]]",
                "dict[typing.Text, dict[, typing.Union[int,list[typing.Text],typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "climate_1_attributes",
            "type": [
                "dict[, int]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "climate_2_attributes",
            "type": [
                "dict[, typing.Union[int,list[typing.Text],typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "climate_3_attributes",
            "type": [
                "dict[, int]"
            ]
        },
        {
            "category": "return",
            "name": "climate_fixture",
            "type": [
                "dict[typing.Text, dict[, typing.Union[int,list[typing.Text],typing.Text]]]"
            ]
        }
    ],
    "counter_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "counter_fixture",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "cover_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "cover_position_attributes",
            "type": [
                "dict[, int]"
            ]
        },
        {
            "category": "local",
            "name": "cover_tilt_position_attributes",
            "type": [
                "dict[, int]"
            ]
        },
        {
            "category": "return",
            "name": "cover_fixture",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "device_tracker_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "device_tracker_fixture",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "fan_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]",
                "dict[typing.Text, dict[, typing.Union[bool,typing.Text,list[typing.Text]]]]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "fan_1_attributes",
            "type": [
                "dict[, typing.Union[bool,typing.Text,list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "fan_2_attributes",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "fan_fixture",
            "type": [
                "dict[typing.Text, dict[, typing.Union[bool,typing.Text,list[typing.Text]]]]"
            ]
        }
    ],
    "generate_latest_metrics@global": [
        {
            "category": "arg",
            "name": "client",
            "type": []
        },
        {
            "category": "return",
            "name": "generate_latest_metrics",
            "type": []
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "PROMETHEUS_PATH",
            "type": [
                "typing.Text",
                "str",
                "list[str]"
            ]
        }
    ],
    "humidifier_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]",
                "dict[typing.Text, dict[, int]]",
                "dict[typing.Text, dict[, typing.Union[int,typing.Text,list[typing.Text]]]]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "humidifier_1_attributes",
            "type": [
                "dict[, int]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "humidifier_2_attributes",
            "type": [
                "dict[, int]"
            ]
        },
        {
            "category": "local",
            "name": "humidifier_3_attributes",
            "type": [
                "dict[, typing.Union[int,typing.Text,list[typing.Text]]]"
            ]
        },
        {
            "category": "return",
            "name": "humidifier_fixture",
            "type": [
                "dict[typing.Text, dict[, typing.Union[int,typing.Text,list[typing.Text]]]]"
            ]
        }
    ],
    "input_boolean_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "input_boolean_fixture",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "input_number_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "input_number_fixture",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "light_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]",
                "dict[typing.Text, dict[, int]]",
                "dict[typing.Text, typing.Union[dict[, int],dict[, None]]]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "light_3_attributes",
            "type": [
                "dict[, int]"
            ]
        },
        {
            "category": "local",
            "name": "light_4_attributes",
            "type": [
                "dict[, int]"
            ]
        },
        {
            "category": "local",
            "name": "light_5_attributes",
            "type": [
                "dict[, None]"
            ]
        },
        {
            "category": "return",
            "name": "light_fixture",
            "type": [
                "dict[typing.Text, typing.Union[dict[, int],dict[, None]]]"
            ]
        }
    ],
    "lock_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "lock_fixture",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "mock_client_fixture@global": [
        {
            "category": "local",
            "name": "PROMETHEUS_PATH",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "mock_client_fixture",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "number_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "number_fixture",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "person_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "person_fixture",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "required_labels@EntityMetric": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "required_labels",
            "type": [
                "list[typing.Text]"
            ]
        }
    ],
    "sensor_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]",
                "dict[typing.Text, dict[, int]]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "sensor_1_attributes",
            "type": [
                "dict[, int]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "sensor_fixture",
            "type": [
                "dict[typing.Text, dict[, int]]"
            ]
        }
    ],
    "set_state_with_entry@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "dict",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "entry",
            "type": [
                "str",
                "typing.Callable",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "str",
                "dict",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "additional_attributes",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]",
                "raiden.utils.ABI"
            ]
        },
        {
            "category": "arg",
            "name": "new_entity_id",
            "type": [
                "None",
                "str",
                "dict",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "attributes",
            "type": [
                "dict",
                "dict[dict, typing.Union[None,str,dict[str, typing.Any],raiden.utils.ABI]]"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "str",
                "typing.Callable",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "additional_attributes",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]",
                "raiden.utils.ABI"
            ]
        },
        {
            "category": "local",
            "name": "new_entity_id",
            "type": [
                "None",
                "str",
                "dict",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "str",
                "dict",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "set_state_with_entry",
            "type": [
                "None"
            ]
        }
    ],
    "setup_prometheus_client@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "namespace",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "dict[, str]"
            ]
        },
        {
            "category": "local",
            "name": "namespace",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "setup_prometheus_client",
            "type": [
                "str"
            ]
        }
    ],
    "switch_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]",
                "dict[typing.Text, dict[typing.Text, bool]]",
                "dict[typing.Text, typing.Union[dict[typing.Text, bool],dict[typing.Text, float]]]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "switch_1_attributes",
            "type": [
                "dict[typing.Text, bool]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "switch_2_attributes",
            "type": [
                "dict[typing.Text, float]"
            ]
        },
        {
            "category": "return",
            "name": "switch_fixture",
            "type": [
                "dict[typing.Text, typing.Union[dict[typing.Text, bool],dict[typing.Text, float]]]"
            ]
        }
    ],
    "test_alarm_control_panel@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "alarm_control_panel_entities",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "dict[str, str]",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test_alarm_control_panel",
            "type": [
                "None"
            ]
        }
    ],
    "test_allowlist@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "mock_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "tests",
            "type": [
                "list[FilterTest]"
            ]
        },
        {
            "category": "local",
            "name": "test",
            "type": [
                "FilterTest"
            ]
        },
        {
            "category": "local",
            "name": "was_called",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_allowlist",
            "type": [
                "None"
            ]
        }
    ],
    "test_attributes@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "core.models.Grouping",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "switch_entities",
            "type": [
                "bool",
                "utils.Controller",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "core.models.Grouping",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_attributes",
            "type": [
                "None"
            ]
        }
    ],
    "test_battery@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "dict",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "sensor_entities",
            "type": []
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_battery",
            "type": [
                "None"
            ]
        }
    ],
    "test_binary_sensor@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "str",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "binary_sensor_entities",
            "type": [
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "str",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_binary_sensor",
            "type": [
                "None"
            ]
        }
    ],
    "test_climate@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "dict",
                "str",
                "utils.clienClient"
            ]
        },
        {
            "category": "arg",
            "name": "climate_entities",
            "type": [
                "str",
                "dict",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict",
                "str",
                "utils.clienClient"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_climate",
            "type": [
                "None"
            ]
        }
    ],
    "test_counter@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "counter_entities",
            "type": []
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_counter",
            "type": [
                "None"
            ]
        }
    ],
    "test_cover@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "tartare.core.models.Job"
            ]
        },
        {
            "category": "arg",
            "name": "cover_entities",
            "type": [
                "tartare.core.models.Job"
            ]
        },
        {
            "category": "local",
            "name": "cover_entities",
            "type": [
                "tartare.core.models.Job"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[, tartare.core.models.Job]"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "tartare.core.models.Job"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "open_covers",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "test_cover",
            "type": [
                "None"
            ]
        }
    ],
    "test_deleting_entity@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "client",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "sensor_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "climate_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "sensor_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "climate_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[typing.Union[str,homeassistancore.HomeAssistant,dict[str, typing.Any],None], typing.Union[str,homeassistancore.HomeAssistant,dict[str, typing.Any],None]]"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "body_line",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_deleting_entity",
            "type": [
                "None"
            ]
        }
    ],
    "test_denylist@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "mock_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "tests",
            "type": [
                "list[FilterTest]"
            ]
        },
        {
            "category": "local",
            "name": "test",
            "type": [
                "FilterTest"
            ]
        },
        {
            "category": "local",
            "name": "was_called",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_denylist",
            "type": [
                "None"
            ]
        }
    ],
    "test_device_tracker@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "device_tracker_entities",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_device_tracker",
            "type": [
                "None"
            ]
        }
    ],
    "test_disabling_entity@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "client",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "sensor_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "climate_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "sensor_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "climate_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[typing.Union[str,homeassistancore.HomeAssistant,dict[str, typing.Any],None], typing.Union[str,homeassistancore.HomeAssistant,dict[str, typing.Any],None]]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "body_line",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_disabling_entity",
            "type": [
                "None"
            ]
        }
    ],
    "test_entity_becomes_unavailable@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "client",
            "type": [
                "homeassistancore.HomeAssistant",
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "sensor_entities",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "unavailable_state",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sensor_entities",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[, str]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "homeassistancore.HomeAssistant",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "unavailable_state",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_entity_becomes_unavailable",
            "type": [
                "None"
            ]
        }
    ],
    "test_entity_metric_assert_helpers@global": [
        {
            "category": "local",
            "name": "temp_metric",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "climate_metric",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "excluded_cover_metric",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "metrics",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "temp_entity_metric",
            "type": [
                "EntityMetric"
            ]
        },
        {
            "category": "local",
            "name": "climate_entity_metric",
            "type": [
                "EntityMetric"
            ]
        },
        {
            "category": "local",
            "name": "excluded_cover_entity_metric",
            "type": [
                "EntityMetric"
            ]
        },
        {
            "category": "return",
            "name": "test_entity_metric_assert_helpers",
            "type": [
                "None"
            ]
        }
    ],
    "test_entity_metric_generates_alphabetically_ordered_labels@global": [
        {
            "category": "local",
            "name": "domain",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "object_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "static_metric_string",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "ordered_entity_metric",
            "type": [
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "unordered_entity_metric",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_entity_metric_generates_alphabetically_ordered_labels",
            "type": [
                "None"
            ]
        }
    ],
    "test_entity_metric_generates_metric_name_string_without_value@global": [
        {
            "category": "local",
            "name": "domain",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "object_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_metric",
            "type": [
                "EntityMetric"
            ]
        },
        {
            "category": "return",
            "name": "test_entity_metric_generates_metric_name_string_without_value",
            "type": [
                "None"
            ]
        }
    ],
    "test_entity_metric_generates_metric_string_with_non_required_labels@global": [
        {
            "category": "local",
            "name": "mode_entity_metric",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "action_entity_metric",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict[str, dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "state_entity_metric",
            "type": [
                "list[str]",
                "list[list[float]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "foo_entity_metric",
            "type": [
                "typing.OrderedDict",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_entity_metric_generates_metric_string_with_non_required_labels",
            "type": [
                "None"
            ]
        }
    ],
    "test_entity_metric_generates_metric_string_with_value@global": [
        {
            "category": "local",
            "name": "domain",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "object_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_metric",
            "type": [
                "dict",
                "dict[str, str]",
                "typing.DefaultDict"
            ]
        },
        {
            "category": "return",
            "name": "test_entity_metric_generates_metric_string_with_value",
            "type": [
                "None"
            ]
        }
    ],
    "test_entity_metric_raises_exception_if_required_label_is_empty_string@global": [
        {
            "category": "local",
            "name": "domain",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "object_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "test_kwargs",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "label_kwargs",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "dict[str, typing.Union[dict,typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_entity_metric_raises_exception_if_required_label_is_empty_string",
            "type": [
                "None"
            ]
        }
    ],
    "test_entity_metric_raises_exception_without_required_labels@global": [
        {
            "category": "local",
            "name": "domain",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "object_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "test_kwargs",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "label_kwargs",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "dict[str, typing.Union[dict,typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_entity_metric_raises_exception_without_required_labels",
            "type": [
                "None"
            ]
        }
    ],
    "test_entity_metric_with_value_assert_helpers@global": [
        {
            "category": "local",
            "name": "temp_metric",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "climate_metric",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "metrics",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "temp_entity_metric",
            "type": [
                "dict[str, typing.Any]",
                "list[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "climate_entity_metric",
            "type": [
                "list[str]",
                "dict[str, dict[str, str]]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_entity_metric_with_value_assert_helpers",
            "type": [
                "None"
            ]
        }
    ],
    "test_fan@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fan_entities",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_fan",
            "type": [
                "None"
            ]
        }
    ],
    "test_filtered_denylist@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "mock_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "tests",
            "type": [
                "list[FilterTest]"
            ]
        },
        {
            "category": "local",
            "name": "test",
            "type": [
                "FilterTest"
            ]
        },
        {
            "category": "local",
            "name": "was_called",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_filtered_denylist",
            "type": [
                "None"
            ]
        }
    ],
    "test_full_config@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "mock_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[, dict[typing.Text, typing.Union[typing.Text,bool,dict[typing.Text, dict[typing.Text, typing.Text]],dict[typing.Text, list[typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_full_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_humidifier@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "utils.clienClient",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "humidifier_entities",
            "type": [
                "dict",
                "None",
                "str",
                "utils.pluginmgr.Command"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "utils.clienClient",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_humidifier",
            "type": [
                "None"
            ]
        }
    ],
    "test_input_boolean@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "input_boolean_entities",
            "type": [
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_input_boolean",
            "type": [
                "None"
            ]
        }
    ],
    "test_input_number@global": [
        {
            "category": "arg",
            "name": "client",
            "type": []
        },
        {
            "category": "arg",
            "name": "input_number_entities",
            "type": [
                "str",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_input_number",
            "type": [
                "None"
            ]
        }
    ],
    "test_light@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "light_entities",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_light",
            "type": [
                "None"
            ]
        }
    ],
    "test_lock@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "lock_entities",
            "type": [
                "utils.Controller",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_lock",
            "type": [
                "None"
            ]
        }
    ],
    "test_minimal_config@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "mock_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[, dict]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_minimal_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_number@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "str",
                "slowbro.core.user_message.UserMessage"
            ]
        },
        {
            "category": "arg",
            "name": "number_entities",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "str",
                "slowbro.core.user_message.UserMessage"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_number",
            "type": [
                "None"
            ]
        }
    ],
    "test_person@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "dict",
                "slowbro.core.user_message.UserMessage",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "person_entities",
            "type": [
                "str",
                "utils.pluginmgr.Command"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict",
                "slowbro.core.user_message.UserMessage",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_person",
            "type": [
                "None"
            ]
        }
    ],
    "test_renaming_entity_id@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "client",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "sensor_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "climate_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "sensor_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "climate_entities",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[typing.Union[str,homeassistancore.HomeAssistant,dict[str, typing.Any],None], typing.Union[str,homeassistancore.HomeAssistant,dict[str, typing.Any],None]]"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "body_line",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_renaming_entity_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_renaming_entity_name@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "client",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "sensor_entities",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "climate_entities",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "sensor_entities",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "climate_entities",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[typing.Union[homeassistancore.HomeAssistant,str,dict[str, typing.Any],None], typing.Union[homeassistancore.HomeAssistant,str,dict[str, typing.Any],None]]",
                "dict[typing.Union[homeassistancore.HomeAssistant,str,dict[str, typing.Any],None], typing.Union[homeassistancore.HomeAssistant,str,dict[str, typing.Any],None,dict[, typing.Union[homeassistancore.HomeAssistant,str,dict[str, typing.Any],None]]]]"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "body_line",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_renaming_entity_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_sensor_device_class@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "tartare.core.models.Job",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "sensor_entities",
            "type": []
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "tartare.core.models.Job",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_sensor_device_class",
            "type": [
                "None"
            ]
        }
    ],
    "test_sensor_unit@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "tartare.core.models.Job",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "sensor_entities",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "tartare.core.models.Job",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_sensor_unit",
            "type": [
                "None"
            ]
        }
    ],
    "test_sensor_without_unit@global": [
        {
            "category": "arg",
            "name": "client",
            "type": []
        },
        {
            "category": "arg",
            "name": "sensor_entities",
            "type": [
                "set"
            ]
        },
        {
            "category": "return",
            "name": "test_sensor_without_unit",
            "type": [
                "None"
            ]
        }
    ],
    "test_setup_enumeration@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "namespace",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_setup_enumeration",
            "type": [
                "None"
            ]
        }
    ],
    "test_update@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "update_entities",
            "type": [
                "typing.Callable",
                "str",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_update",
            "type": [
                "None"
            ]
        }
    ],
    "test_view_default_namespace@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "sensor_entities",
            "type": [
                "set",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_view_default_namespace",
            "type": [
                "None"
            ]
        }
    ],
    "test_view_empty_namespace@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "utils.clienClient",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "sensor_entities",
            "type": [
                "str",
                "set",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "utils.clienClient",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_view_empty_namespace",
            "type": [
                "None"
            ]
        }
    ],
    "update_fixture@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "entity_registry",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "entity_registry",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "update_fixture",
            "type": [
                "dict[typing.Text, ]"
            ]
        }
    ],
    "withValue@EntityMetric": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "str",
                "list[str]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str",
                "list[str]",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "withValue",
            "type": [
                "EntityMetricWithValue"
            ]
        }
    ]
}