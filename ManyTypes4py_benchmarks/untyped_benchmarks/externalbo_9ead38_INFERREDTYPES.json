{
    "__init__@ParametrizedHyperOpt": [
        {
            "category": "arg",
            "name": "prior_weight",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "n_startup_jobs",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "n_EI_candidates",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "gamma",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "verbose",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_HyperOpt": [
        {
            "category": "arg",
            "name": "parametrization",
            "type": [
                "int",
                "base.IntOrParameter",
                "base.ConfiguredOptimizer"
            ]
        },
        {
            "category": "arg",
            "name": "budget",
            "type": [
                "None",
                "int",
                "base.ConfiguredOptimizer"
            ]
        },
        {
            "category": "arg",
            "name": "num_workers",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "prior_weight",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "n_startup_jobs",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "n_EI_candidates",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "gamma",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "verbose",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "parametrization",
            "type": [
                "int",
                "base.IntOrParameter",
                "base.ConfiguredOptimizer"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "None",
                "int",
                "base.ConfiguredOptimizer"
            ]
        },
        {
            "category": "local",
            "name": "num_workers",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "space",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "_transform",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "trials",
            "type": [
                "Trials"
            ]
        },
        {
            "category": "local",
            "name": "domain",
            "type": [
                "Domain"
            ]
        },
        {
            "category": "local",
            "name": "prior_weight",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "n_startup_jobs",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n_EI_candidates",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "gamma",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "verbose",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "tpe_args",
            "type": [
                "dict[typing.Text, typing.Union[float,int]]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_get_search_space@global": [
        {
            "category": "arg",
            "name": "param_name",
            "type": [
                "str",
                "parameter.Parameter"
            ]
        },
        {
            "category": "arg",
            "name": "param",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "param",
            "type": [
                "str",
                "int",
                "p_@_Instrumentation",
                "p_@_Log",
                "p_@_Scalar",
                "p_@_Choice",
                "p_@_Constant"
            ]
        },
        {
            "category": "local",
            "name": "space",
            "type": [
                "dict",
                "dict[typing.Text, dict[str, ]]"
            ]
        },
        {
            "category": "local",
            "name": "param_name",
            "type": [
                "str",
                "parameter.Parameter"
            ]
        },
        {
            "category": "return",
            "name": "_get_search_space",
            "type": [
                "dict[typing.Text, dict[str, ]]"
            ]
        },
        {
            "category": "local",
            "name": "list_types",
            "type": [
                "list[typing.Type]"
            ]
        }
    ],
    "_hp_dict_to_parametrization@global": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "_hp_dict_to_parametrization",
            "type": [
                "tuple"
            ]
        }
    ],
    "_hp_parametrization_to_dict@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "list",
                "dict[str, set[str]]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "list",
                "dict[str, set[str]]",
                "numpy.ndarray",
                "p_@_Instrumentation",
                "p_@_Choice"
            ]
        },
        {
            "category": "local",
            "name": "x_dict",
            "type": [
                "dict",
                "dict[str, int]",
                "dict[typing.Union[int,str], int]",
                "dict[, list]"
            ]
        },
        {
            "category": "return",
            "name": "_hp_parametrization_to_dict",
            "type": [
                "dict",
                "dict[str, int]",
                "dict[typing.Union[int,str], int]",
                "dict[, list]"
            ]
        }
    ],
    "_internal_ask_candidate@_HyperOpt": [
        {
            "category": "local",
            "name": "next_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "new_trial",
            "type": [
                "list",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "candidate",
            "type": [
                "list",
                "set[int]",
                "typing.ValuesView"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "str",
                "typing.Type",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_internal_ask_candidate",
            "type": [
                "list",
                "set[int]",
                "typing.ValuesView"
            ]
        }
    ],
    "_internal_tell_candidate@_HyperOpt": [
        {
            "category": "arg",
            "name": "candidate",
            "type": [
                "str",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "loss",
            "type": [
                "nevergrad.common.FloatLoss",
                "nevergrad.parametrization.parameter.Parameter"
            ]
        },
        {
            "category": "local",
            "name": "loss",
            "type": [
                "nevergrad.common.FloatLoss",
                "nevergrad.parametrization.parameter.Parameter"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict[typing.Text, typing.Union[nevergrad.common.FloatLoss,nevergrad.parametrization.parameter.Parameter,typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "candidate",
            "type": [
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_internal_tell_candidate",
            "type": [
                "None"
            ]
        }
    ],
    "_internal_tell_not_asked@_HyperOpt": [
        {
            "category": "arg",
            "name": "candidate",
            "type": [
                "nevergrad.parametrization.parameter.Parameter",
                "nevergrad.common.FloatLoss"
            ]
        },
        {
            "category": "arg",
            "name": "loss",
            "type": [
                "nevergrad.parametrization.parameter.Parameter",
                "nevergrad.common.FloatLoss"
            ]
        },
        {
            "category": "local",
            "name": "next_id",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "new_trial",
            "type": [
                "int",
                "list",
                "dict[str, nevergrad.parametrization.core.Parameter]"
            ]
        },
        {
            "category": "local",
            "name": "tid",
            "type": [
                "list",
                "int",
                "typing.Deque"
            ]
        },
        {
            "category": "local",
            "name": "candidate",
            "type": [
                "nevergrad.parametrization.parameter.Parameter",
                "nevergrad.common.FloatLoss"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "list",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "null_config",
            "type": [
                "dict[, list]"
            ]
        },
        {
            "category": "local",
            "name": "new_vals",
            "type": [
                "list",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "loss",
            "type": [
                "nevergrad.parametrization.parameter.Parameter",
                "nevergrad.common.FloatLoss"
            ]
        },
        {
            "category": "return",
            "name": "_internal_tell_not_asked",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "HyperOpt",
            "type": [
                "frozenset",
                "dict[str, typing.Union[typing.Any,None]]",
                "list"
            ]
        }
    ]
}