{
    "__init__@BaseTypingClassWithGenerics": [
        {
            "category": "arg",
            "name": "parent_context",
            "type": [
                "T",
                "typing.Any",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "tree_name",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "arg",
            "name": "generics_manager",
            "type": []
        },
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "T",
                "typing.Any",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tree_name",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "_tree_name",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@BaseTypingInstance": [
        {
            "category": "arg",
            "name": "parent_context",
            "type": [
                "str",
                "bool",
                "typing.Callable[typing.Any, bool]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "class_value",
            "type": [
                "typing.Any",
                "None",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "tree_name",
            "type": [
                "str",
                "list['mypy.types.TypeVarDef']",
                "None",
                "typing.Container"
            ]
        },
        {
            "category": "arg",
            "name": "generics_manager",
            "type": [
                "typing.Type",
                "typing.Callable[typing.Any, bool]",
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "str",
                "bool",
                "typing.Callable[typing.Any, bool]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "tree_name",
            "type": [
                "str",
                "list['mypy.types.TypeVarDef']",
                "None",
                "typing.Container"
            ]
        },
        {
            "category": "local",
            "name": "_tree_name",
            "type": [
                "str",
                "list['mypy.types.TypeVarDef']",
                "None",
                "typing.Container"
            ]
        },
        {
            "category": "local",
            "name": "generics_manager",
            "type": [
                "typing.Type",
                "typing.Callable[typing.Any, bool]",
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_generics_manager",
            "type": [
                "typing.Type",
                "typing.Callable[typing.Any, bool]",
                "None",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@BaseTypingValue": [
        {
            "category": "arg",
            "name": "parent_context",
            "type": [
                "T",
                "list[str]",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "tree_name",
            "type": [
                "object",
                "None",
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "parent_context",
            "type": [
                "T",
                "list[str]",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "tree_name",
            "type": [
                "object",
                "None",
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "_tree_name",
            "type": [
                "object",
                "None",
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@DefineGenericBaseClass": [
        {
            "category": "arg",
            "name": "generics_manager",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "generics_manager",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "_generics_manager",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@GenericClass": [
        {
            "category": "arg",
            "name": "class_value",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "generics_manager",
            "type": [
                "typing.Type",
                "\"GraphQLFieldResolver\"",
                "None",
                "typing.Callable[typing.Any, bool]"
            ]
        },
        {
            "category": "local",
            "name": "generics_manager",
            "type": [
                "typing.Type",
                "\"GraphQLFieldResolver\"",
                "None",
                "typing.Callable[typing.Any, bool]"
            ]
        },
        {
            "category": "local",
            "name": "class_value",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "_class_value",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_BoundTypeVarName": [
        {
            "category": "arg",
            "name": "type_var",
            "type": []
        },
        {
            "category": "arg",
            "name": "value_set",
            "type": [
                "list[typing.Any]",
                "None",
                "list[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "value_set",
            "type": [
                "list[typing.Any]",
                "None",
                "list[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "_value_set",
            "type": [
                "list[typing.Any]",
                "None",
                "list[typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_LazyGenericBaseClass": [
        {
            "category": "arg",
            "name": "class_value",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "lazy_base_class",
            "type": [
                "typing.Type",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "generics_manager",
            "type": [
                "typing.Type",
                "typing.Callable[typing.Any, bool]",
                "None",
                "\"GraphQLFieldResolver\""
            ]
        },
        {
            "category": "local",
            "name": "class_value",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "_class_value",
            "type": [
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "lazy_base_class",
            "type": [
                "typing.Type",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "_lazy_base_class",
            "type": [
                "typing.Type",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "generics_manager",
            "type": [
                "typing.Type",
                "typing.Callable[typing.Any, bool]",
                "None",
                "\"GraphQLFieldResolver\""
            ]
        },
        {
            "category": "local",
            "name": "_generics_manager",
            "type": [
                "typing.Type",
                "typing.Callable[typing.Any, bool]",
                "None",
                "\"GraphQLFieldResolver\""
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_PseudoTreeNameClass": [
        {
            "category": "arg",
            "name": "parent_context",
            "type": []
        },
        {
            "category": "arg",
            "name": "tree_name",
            "type": [
                "object",
                "None",
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "tree_name",
            "type": [
                "object",
                "None",
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "_tree_name",
            "type": [
                "object",
                "None",
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_PseudoTreeNameClass,EmptyFilter": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@_TypeVarFilter": [
        {
            "category": "arg",
            "name": "generics",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "type_vars",
            "type": []
        },
        {
            "category": "local",
            "name": "generics",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "_generics",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__repr__@BaseTypingClassWithGenerics": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@BaseTypingInstance": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@BaseTypingValue": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@DefineGenericBaseClass": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@_BoundTypeVarName": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@_LazyGenericBaseClass": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "__repr__@_PseudoTreeNameClass": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_as_context@GenericClass": [
        {
            "category": "return",
            "name": "_as_context",
            "type": [
                "_AnnotatedClassContext"
            ]
        }
    ],
    "_create_instance_with_generics@DefineGenericBaseClass": [
        {
            "category": "arg",
            "name": "generics_manager",
            "type": [
                "list[str]",
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_create_instance_with_generics",
            "type": [
                "None"
            ]
        }
    ],
    "_create_instance_with_generics@GenericClass": [
        {
            "category": "arg",
            "name": "generics_manager",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "generics_manager",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_create_instance_with_generics",
            "type": [
                "GenericClass"
            ]
        }
    ],
    "_get_wrapped_value@BaseTypingClassWithGenerics": [
        {
            "category": "return",
            "name": "_get_wrapped_value",
            "type": [
                "_PseudoTreeNameClass"
            ]
        }
    ],
    "_get_wrapped_value@BaseTypingInstance": [
        {
            "category": "return",
            "name": "_get_wrapped_value",
            "type": []
        }
    ],
    "_get_wrapped_value@BaseTypingValue": [
        {
            "category": "return",
            "name": "_get_wrapped_value",
            "type": [
                "_PseudoTreeNameClass"
            ]
        }
    ],
    "_get_wrapped_value@GenericClass": [
        {
            "category": "return",
            "name": "_get_wrapped_value",
            "type": []
        }
    ],
    "_remap_type_vars@_LazyGenericBaseClass": [
        {
            "category": "arg",
            "name": "base",
            "type": [
                "str",
                "int",
                "llvmlite.ir.Value"
            ]
        },
        {
            "category": "local",
            "name": "filter",
            "type": [
                "list[tuple[typing.Any]]",
                "dict[str, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "base",
            "type": [
                "str",
                "int",
                "llvmlite.ir.Value"
            ]
        },
        {
            "category": "local",
            "name": "type_var",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "str",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_remap_type_vars",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "define_generics@DefineGenericBaseClass": [
        {
            "category": "arg",
            "name": "type_var_dict",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "changed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "new_generics",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "type_var_dict",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "define_generics",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "get@_PseudoTreeNameClass,EmptyFilter": [
        {
            "category": "arg",
            "name": "name",
            "type": []
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "get",
            "type": [
                "list"
            ]
        }
    ],
    "get@_TypeVarFilter": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get",
            "type": [
                "list[_BoundTypeVarName]",
                "list"
            ]
        }
    ],
    "get_annotated_class_object@BaseTypingInstance": [
        {
            "category": "return",
            "name": "get_annotated_class_object",
            "type": []
        }
    ],
    "get_filters@_AnnotatedClassContext": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "filters",
            "type": [
                "dict[str, typing.Any]",
                "list[tuple[typing.Any]]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "typing.Generator[typing.Union[dict[str, typing.Any],list[tuple[typing.Any]],list[str]]]",
                "typing.Generator"
            ]
        }
    ],
    "get_filters@_PseudoTreeNameClass": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "get_filters",
            "type": [
                "typing.Generator[EmptyFilter]"
            ]
        }
    ],
    "get_generics@DefineGenericBaseClass": [
        {
            "category": "return",
            "name": "get_generics",
            "type": []
        }
    ],
    "get_qualified_names@BaseTypingInstance": [
        {
            "category": "return",
            "name": "get_qualified_names",
            "type": [
                "tuple"
            ]
        }
    ],
    "get_qualified_names@_PseudoTreeNameClass": [
        {
            "category": "return",
            "name": "get_qualified_names",
            "type": [
                "tuple"
            ]
        }
    ],
    "get_signatures@BaseTypingValue": [
        {
            "category": "return",
            "name": "get_signatures",
            "type": [
                "str",
                "bool",
                "None"
            ]
        }
    ],
    "get_signatures@DefineGenericBaseClass": [
        {
            "category": "return",
            "name": "get_signatures",
            "type": [
                "list"
            ]
        }
    ],
    "get_type_hint@GenericClass": [
        {
            "category": "arg",
            "name": "add_class_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int",
                "str",
                "typing.KeysView"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "add_class_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_type_hint",
            "type": [
                "typing.Text",
                "str",
                "int",
                "bytes"
            ]
        }
    ],
    "get_type_hint@_GenericInstanceWrapper": [
        {
            "category": "arg",
            "name": "add_class_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_type_hint",
            "type": []
        }
    ],
    "get_type_var_filter@GenericClass": [
        {
            "category": "return",
            "name": "get_type_var_filter",
            "type": [
                "_TypeVarFilter"
            ]
        }
    ],
    "global@global": [],
    "infer@_BoundTypeVarName": [
        {
            "category": "return",
            "name": "infer",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "infer@_LazyGenericBaseClass": [
        {
            "category": "local",
            "name": "base",
            "type": [
                "GenericClass"
            ]
        },
        {
            "category": "return",
            "name": "infer",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "infer_type_vars@GenericClass": [
        {
            "category": "arg",
            "name": "value_set",
            "type": []
        },
        {
            "category": "local",
            "name": "annotation_name",
            "type": [
                "str",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "type_var_dict",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "annotation_generics",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "infer_type_vars",
            "type": [
                "dict"
            ]
        }
    ],
    "is_same_class@DefineGenericBaseClass": [
        {
            "category": "arg",
            "name": "other",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "is_same_class",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "given_params1",
            "type": [
                "dict[typing.Any, str]",
                "dict",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "given_params2",
            "type": [
                "dict",
                "dict[str, list[typing.Any]]",
                "dict[str, str]"
            ]
        }
    ],
    "is_sub_class_of@GenericClass": [
        {
            "category": "arg",
            "name": "class_value",
            "type": [
                "str",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "class_value",
            "type": [
                "str",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "is_sub_class_of",
            "type": [
                "bool"
            ]
        }
    ],
    "iter_@_BoundTypeVarName": [
        {
            "category": "local",
            "name": "value",
            "type": [
                "AnyClass"
            ]
        },
        {
            "category": "return",
            "name": "iter_",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "name@BaseTypingInstance": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "ValueName"
            ]
        }
    ],
    "name@BaseTypingValue": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "ValueName"
            ]
        }
    ],
    "name@_PseudoTreeNameClass": [
        {
            "category": "return",
            "name": "name",
            "type": [
                "ValueName"
            ]
        }
    ],
    "py__bases__@GenericClass": [
        {
            "category": "return",
            "name": "py__bases__",
            "type": [
                "typing.Generator[_LazyGenericBaseClass]"
            ]
        }
    ],
    "py__call__@GenericClass": [
        {
            "category": "arg",
            "name": "arguments",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "instance",
            "type": [
                "list[tuple]",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "py__call__",
            "type": [
                "ValueSet"
            ]
        }
    ],
    "py__class__@BaseTypingInstance": [
        {
            "category": "return",
            "name": "py__class__",
            "type": []
        }
    ],
    "py__class__@_PseudoTreeNameClass": [
        {
            "category": "return",
            "name": "py__class__",
            "type": []
        }
    ],
    "py__name__@_BoundTypeVarName": [
        {
            "category": "return",
            "name": "py__name__",
            "type": [
                "str"
            ]
        }
    ],
    "py__stop_iteration_returns@_GenericInstanceWrapper": [
        {
            "category": "return",
            "name": "py__stop_iteration_returns",
            "type": [
                "ValueSet",
                "str",
                "typing.ChainMap",
                "None"
            ]
        }
    ],
    "tree_node@_PseudoTreeNameClass": [
        {
            "category": "return",
            "name": "tree_node",
            "type": []
        }
    ],
    "values@_PseudoTreeNameClass,EmptyFilter": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "values",
            "type": [
                "list"
            ]
        }
    ],
    "values@_TypeVarFilter": [
        {
            "category": "return",
            "name": "values",
            "type": [
                "list"
            ]
        }
    ],
    "with_generics@GenericClass": [
        {
            "category": "arg",
            "name": "generics_tuple",
            "type": [
                "typing.Type",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "generics_tuple",
            "type": [
                "typing.Type",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "with_generics",
            "type": [
                "typing.Type"
            ]
        }
    ]
}