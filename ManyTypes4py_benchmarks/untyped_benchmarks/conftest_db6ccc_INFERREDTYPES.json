{
    "global@global": [],
    "mock_api@global": [
        {
            "category": "arg",
            "name": "mock_version_api",
            "type": [
                "mock.Mock",
                "mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_info_api",
            "type": [
                "mock.Mock",
                "mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_get_legacy_printer",
            "type": [
                "mock.Mock",
                "mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_get_status_idle",
            "type": [
                "mock.Mock",
                "mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_job_api_idle",
            "type": [
                "mock.Mock",
                "mock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "mock_api",
            "type": [
                "None"
            ]
        }
    ],
    "mock_config_entry@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "typing.Callable[List,bool, None]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "MockConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "typing.Callable[List,bool, None]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "mock_config_entry",
            "type": [
                "MockConfigEntry"
            ]
        }
    ],
    "mock_get_legacy_printer@global": [
        {
            "category": "local",
            "name": "resp",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "return",
            "name": "mock_get_legacy_printer",
            "type": [
                "typing.Generator[dict[typing.Text, dict[typing.Text, typing.Text]]]"
            ]
        }
    ],
    "mock_get_status_idle@global": [
        {
            "category": "local",
            "name": "resp",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,float,int]]]"
            ]
        },
        {
            "category": "return",
            "name": "mock_get_status_idle",
            "type": [
                "typing.Generator[dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,float,int]]]]"
            ]
        }
    ],
    "mock_get_status_printing@global": [
        {
            "category": "local",
            "name": "resp",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,float,int]]]"
            ]
        },
        {
            "category": "return",
            "name": "mock_get_status_printing",
            "type": [
                "typing.Generator[dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,float,int]]]]"
            ]
        }
    ],
    "mock_info_api@global": [
        {
            "category": "local",
            "name": "resp",
            "type": [
                "dict[typing.Text, typing.Union[float,bool,typing.Text]]"
            ]
        },
        {
            "category": "return",
            "name": "mock_info_api",
            "type": [
                "typing.Generator[dict[typing.Text, typing.Union[float,bool,typing.Text]]]"
            ]
        }
    ],
    "mock_job_api_idle@global": [
        {
            "category": "local",
            "name": "resp",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "mock_job_api_idle",
            "type": [
                "typing.Generator[dict]"
            ]
        }
    ],
    "mock_job_api_idle_mk3@global": [
        {
            "category": "local",
            "name": "resp",
            "type": [
                "dict[typing.Text, typing.Union[int,typing.Text,float,None,dict[typing.Text, typing.Union[dict[typing.Text, typing.Text],typing.Text,int]]]]"
            ]
        },
        {
            "category": "return",
            "name": "mock_job_api_idle_mk3",
            "type": [
                "typing.Generator[dict[typing.Text, typing.Union[int,typing.Text,float,None,dict[typing.Text, typing.Union[dict[typing.Text, typing.Text],typing.Text,int]]]]]"
            ]
        }
    ],
    "mock_job_api_paused@global": [
        {
            "category": "arg",
            "name": "mock_get_status_printing",
            "type": [
                "mock.Mock",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_job_api_printing",
            "type": [
                "mock.Mock",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_job_api_printing",
            "type": [
                "mock.Mock",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_get_status_printing",
            "type": [
                "mock.Mock",
                "tests.async_mock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "mock_job_api_paused",
            "type": [
                "None"
            ]
        }
    ],
    "mock_job_api_printing@global": [
        {
            "category": "local",
            "name": "resp",
            "type": [
                "dict[typing.Text, typing.Union[int,typing.Text,float,dict[typing.Text, typing.Union[dict[typing.Text, typing.Text],typing.Text,int]]]]"
            ]
        },
        {
            "category": "return",
            "name": "mock_job_api_printing",
            "type": [
                "typing.Generator[dict[typing.Text, typing.Union[int,typing.Text,float,dict[typing.Text, typing.Union[dict[typing.Text, typing.Text],typing.Text,int]]]]]"
            ]
        }
    ],
    "mock_version_api@global": [
        {
            "category": "local",
            "name": "resp",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "mock_version_api",
            "type": [
                "typing.Generator[dict[typing.Text, typing.Text]]"
            ]
        }
    ]
}