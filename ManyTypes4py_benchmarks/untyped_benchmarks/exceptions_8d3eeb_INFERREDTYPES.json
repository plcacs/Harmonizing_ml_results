{
    "__init__@AccessDeniedError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ApiParamValidationError": [
        {
            "category": "arg",
            "name": "msg",
            "type": [
                "str",
                "Exception"
            ]
        },
        {
            "category": "arg",
            "name": "error_type",
            "type": [
                "str",
                "None",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "str",
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "error_type",
            "type": [
                "str",
                "None",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@AuthenticationFailedError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@CannotAdministerChannelError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@CannotDeactivateGroupInUseError": [
        {
            "category": "arg",
            "name": "objections",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "objections",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@CannotDeactivateLastUserError": [
        {
            "category": "arg",
            "name": "is_last_owner",
            "type": [
                "str",
                "None",
                "bool",
                "django.db.models.QuerySet"
            ]
        },
        {
            "category": "local",
            "name": "is_last_owner",
            "type": [
                "str",
                "None",
                "bool",
                "django.db.models.QuerySet"
            ]
        },
        {
            "category": "local",
            "name": "entity",
            "type": [
                "dict",
                "set",
                "typing.DefaultDict"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@CannotManageDefaultChannelError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@DirectMessageInitiationError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@DirectMessagePermissionError": [
        {
            "category": "arg",
            "name": "is_nobody_group",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "is_nobody_group",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "str",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@IncompatibleParameterValuesError": [
        {
            "category": "arg",
            "name": "first_parameter",
            "type": [
                "T",
                "tuple[typing.Union[str,typing.Any]]",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "second_parameter",
            "type": [
                "float",
                "dict[str, typing.Any]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "first_parameter",
            "type": [
                "T",
                "tuple[typing.Union[str,typing.Any]]",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "second_parameter",
            "type": [
                "float",
                "dict[str, typing.Any]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@IncompatibleParametersError": [
        {
            "category": "arg",
            "name": "parameters",
            "type": [
                "list[str]",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "parameters",
            "type": [
                "list[str]",
                "list",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@InvalidAPIKeyError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@InvalidMarkdownIncludeStatementError": [
        {
            "category": "arg",
            "name": "include_statement",
            "type": [
                "bool",
                "set[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "include_statement",
            "type": [
                "bool",
                "set[int]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@InvalidSubdomainError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@InvitationError": [
        {
            "category": "arg",
            "name": "msg",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "errors",
            "type": [
                "dict",
                "list[str]",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "sent_invitations",
            "type": [
                "int",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "license_limit_reached",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "daily_limit_reached",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_msg",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "dict",
                "list[str]",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "sent_invitations",
            "type": [
                "int",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "license_limit_reached",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "daily_limit_reached",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@JsonableError": [
        {
            "category": "arg",
            "name": "msg",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_msg",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MessageMoveError": [
        {
            "category": "arg",
            "name": "first_message_id_allowed_to_move",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "total_messages_in_topic",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "total_messages_allowed_to_move",
            "type": [
                "int",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "first_message_id_allowed_to_move",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "total_messages_in_topic",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "total_messages_allowed_to_move",
            "type": [
                "int",
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MissingAuthenticationError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MissingRemoteRealmError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@OrganizationAdministratorRequiredError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@OrganizationMemberRequiredError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@OrganizationOwnerRequiredError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@PreviousSettingValueMismatchedError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@RateLimitedError": [
        {
            "category": "arg",
            "name": "secs_to_freedom",
            "type": [
                "None",
                "int",
                "raiden.utils.BlockNumber"
            ]
        },
        {
            "category": "local",
            "name": "secs_to_freedom",
            "type": [
                "None",
                "int",
                "raiden.utils.BlockNumber"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ReactionDoesNotExistError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ReactionExistsError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@RemoteBillingAuthenticationError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@RemoteRealmServerMismatchError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@StreamDoesNotExistError": [
        {
            "category": "arg",
            "name": "stream",
            "type": [
                "typing.IO",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "stream",
            "type": [
                "typing.IO",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@StreamWildcardMentionNotAllowedError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@StreamWithIDDoesNotExistError": [
        {
            "category": "arg",
            "name": "stream_id",
            "type": [
                "int",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "stream_id",
            "type": [
                "int",
                "set[str]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@SystemGroupRequiredError": [
        {
            "category": "arg",
            "name": "setting_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "setting_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@TopicWildcardMentionNotAllowedError": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@UnauthorizedError": [
        {
            "category": "arg",
            "name": "msg",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "www_authenticate",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "None",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "www_authenticate",
            "type": [
                "None",
                "str",
                "bool",
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@UnsupportedWebhookEventTypeError": [
        {
            "category": "arg",
            "name": "event_type",
            "type": [
                "str",
                "dict[str, object]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "event_type",
            "type": [
                "str",
                "dict[str, object]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ValidationFailureError": [
        {
            "category": "arg",
            "name": "error",
            "type": [
                "str",
                "None",
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "error",
            "type": [
                "str",
                "None",
                "Exception"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@WebhookError": [
        {
            "category": "local",
            "name": "webhook_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ZephyrMessageAlreadySentError": [
        {
            "category": "arg",
            "name": "message_id",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "message_id",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__str__@JsonableError": [
        {
            "category": "return",
            "name": "__str__",
            "type": []
        }
    ],
    "data@JsonableError": [
        {
            "category": "return",
            "name": "data",
            "type": []
        }
    ],
    "data@RateLimitedError": [
        {
            "category": "return",
            "name": "data",
            "type": []
        }
    ],
    "extra_headers@JsonableError": [
        {
            "category": "return",
            "name": "extra_headers",
            "type": [
                "dict"
            ]
        }
    ],
    "extra_headers@RateLimitedError": [
        {
            "category": "local",
            "name": "secs_to_freedom",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "extra_headers",
            "type": []
        }
    ],
    "extra_headers@UnauthorizedError": [
        {
            "category": "return",
            "name": "extra_headers",
            "type": []
        }
    ],
    "global@global": [],
    "msg@JsonableError": [
        {
            "category": "local",
            "name": "format_data",
            "type": [
                "dict",
                "list[None]",
                "dict[str, typing.Union[typing.Any,int,str]]"
            ]
        },
        {
            "category": "return",
            "name": "msg",
            "type": [
                "str",
                "tartare.core.publisher.AbstractProtocol"
            ]
        }
    ],
    "msg_format@AccessDeniedError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "msg_format@AnomalousWebhookPayloadError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "tuple[str]",
                "bool"
            ]
        }
    ],
    "msg_format@AuthenticationFailedError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "bool",
                "None"
            ]
        }
    ],
    "msg_format@CannotAdministerChannelError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str"
            ]
        }
    ],
    "msg_format@CannotDeactivateGroupInUseError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "msg_format@CannotDeactivateLastUserError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "msg_format@CannotManageDefaultChannelError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "dict[str, dict[str, str]]"
            ]
        }
    ],
    "msg_format@DirectMessageInitiationError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str"
            ]
        }
    ],
    "msg_format@IncompatibleParameterValuesError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "typing.Type"
            ]
        }
    ],
    "msg_format@IncompatibleParametersError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "msg_format@InvalidAPIKeyError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "list[str]"
            ]
        }
    ],
    "msg_format@InvalidAPIKeyFormatError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "msg_format@InvalidJSONError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "list[typing.Any]",
                "str"
            ]
        }
    ],
    "msg_format@InvalidMarkdownIncludeStatementError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str"
            ]
        }
    ],
    "msg_format@InvalidSubdomainError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "list[str]",
                "typing.IO"
            ]
        }
    ],
    "msg_format@JsonableError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "msg_format@MessageMoveError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "dict[str, dict[str, str]]"
            ]
        }
    ],
    "msg_format@MissingRemoteRealmError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "msg_format@OrganizationAdministratorRequiredError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "msg_format@OrganizationMemberRequiredError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "msg_format@OrganizationOwnerRequiredError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "msg_format@PasswordAuthDisabledError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "msg_format@PasswordResetRequiredError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str"
            ]
        }
    ],
    "msg_format@PreviousSettingValueMismatchedError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "msg_format@RateLimitedError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "None",
                "int"
            ]
        }
    ],
    "msg_format@ReactionDoesNotExistError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "msg_format@ReactionExistsError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "bool",
                "list[str]",
                "str"
            ]
        }
    ],
    "msg_format@RealmDeactivatedError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str"
            ]
        }
    ],
    "msg_format@RemoteBillingAuthenticationError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "bool"
            ]
        }
    ],
    "msg_format@RemoteRealmServerMismatchError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "msg_format@RemoteServerDeactivatedError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str"
            ]
        }
    ],
    "msg_format@StreamDoesNotExistError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "bytes",
                "typing.Callable[str, None]"
            ]
        }
    ],
    "msg_format@StreamWildcardMentionNotAllowedError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str"
            ]
        }
    ],
    "msg_format@StreamWithIDDoesNotExistError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str",
                "collections.abc.Awaitable[typing.Any]",
                "typing.Iterable"
            ]
        }
    ],
    "msg_format@SystemGroupRequiredError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "set[str]",
                "list[str]",
                "set"
            ]
        }
    ],
    "msg_format@TopicWildcardMentionNotAllowedError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str"
            ]
        }
    ],
    "msg_format@UnsupportedWebhookEventTypeError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "str"
            ]
        }
    ],
    "msg_format@UserDeactivatedError": [
        {
            "category": "return",
            "name": "msg_format",
            "type": [
                "bool",
                "str"
            ]
        }
    ]
}