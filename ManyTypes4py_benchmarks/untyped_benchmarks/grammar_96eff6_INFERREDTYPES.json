{
    "__init__@Grammar": [
        {
            "category": "arg",
            "name": "text",
            "type": [
                "str",
                "typing.Callable[str, None]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "tokenizer",
            "type": [
                "typing.Callable",
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "parser",
            "type": []
        },
        {
            "category": "arg",
            "name": "diff_parser",
            "type": [
                "None",
                "typing.Callable",
                "bool",
                "shared.configuration.configuration_parser.Parser"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "str",
                "typing.Callable[str, None]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_pgen_grammar",
            "type": [
                "str",
                "typing.Callable[None,None, tuple[typing.Any]]",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "tokenizer",
            "type": [
                "typing.Callable",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_tokenizer",
            "type": [
                "typing.Callable",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "diff_parser",
            "type": [
                "None",
                "typing.Callable",
                "bool",
                "shared.configuration.configuration_parser.Parser"
            ]
        },
        {
            "category": "local",
            "name": "_diff_parser",
            "type": [
                "None",
                "typing.Callable",
                "bool",
                "shared.configuration.configuration_parser.Parser"
            ]
        },
        {
            "category": "local",
            "name": "_hashed",
            "type": [
                "hashlib._Hash",
                "bytes",
                "hashlib._BlakeHash"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@PythonGrammar": [
        {
            "category": "arg",
            "name": "version_info",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "bnf_text",
            "type": [
                "str",
                "pathlib.Path",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "bnf_text",
            "type": [
                "str",
                "pathlib.Path",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "version_info",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__repr__@Grammar": [
        {
            "category": "local",
            "name": "nonterminals",
            "type": [
                "list[str]",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "txt",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_get_normalizer@Grammar": [
        {
            "category": "arg",
            "name": "normalizer_config",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "dict",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "normalizer_config",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "dict",
                "pathlib.Path",
                "dict[str, typing.Union[str,None]]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "_get_normalizer",
            "type": [
                "str",
                "pathlib.Path"
            ]
        }
    ],
    "_get_normalizer_issues@Grammar": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "dict[str, set[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "normalizer_config",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "normalizer_config",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "normalizer",
            "type": [
                "list[tuple[typing.Union[str,typing.Any]]]",
                "dict[str, int]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "dict[str, set[str]]"
            ]
        },
        {
            "category": "return",
            "name": "_get_normalizer_issues",
            "type": []
        }
    ],
    "_get_token_namespace@Grammar": [
        {
            "category": "local",
            "name": "ns",
            "type": [
                "None",
                "int",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "_get_token_namespace",
            "type": [
                "int",
                "str",
                "list[str]",
                "None"
            ]
        }
    ],
    "_normalize@Grammar": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "normalizer_config",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "dict",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "normalizer_config",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "dict",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "normalizer",
            "type": [
                "list[str]",
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_normalize",
            "type": [
                "typing.Callable",
                "str",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "_tokenize@PythonGrammar": [
        {
            "category": "arg",
            "name": "code",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "code",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_tokenize",
            "type": []
        }
    ],
    "_tokenize_lines@PythonGrammar": [
        {
            "category": "arg",
            "name": "lines",
            "type": [
                "str",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "lines",
            "type": [
                "str",
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "_tokenize_lines",
            "type": []
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_loaded_grammars",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_NodeT",
            "type": [
                "TypeVar"
            ]
        }
    ],
    "iter_errors@Grammar": [
        {
            "category": "arg",
            "name": "node",
            "type": []
        },
        {
            "category": "local",
            "name": "_error_normalizer_config",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "iter_errors",
            "type": []
        }
    ],
    "load_grammar@global": [
        {
            "category": "arg",
            "name": "version",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "path",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "version",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "version_info",
            "type": [
                "tuple[typing.Union[typing.Literal,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "file",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_loaded_grammars",
            "type": [
                "dict",
                "PythonGrammar"
            ]
        },
        {
            "category": "return",
            "name": "load_grammar",
            "type": [
                "str",
                "bool",
                "typing.Iterable[typing.TextIO]",
                "PythonGrammar"
            ]
        },
        {
            "category": "local",
            "name": "f",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "bnf_text",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "grammar",
            "type": [
                "PythonGrammar"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "parse@Grammar": [
        {
            "category": "arg",
            "name": "code",
            "type": [
                "None",
                "bool",
                "str",
                "typing.IO"
            ]
        },
        {
            "category": "arg",
            "name": "error_recovery",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "path",
            "type": [
                "None",
                "pathlib.Path",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "start_symbol",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "cache",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "diff_cache",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "cache_path",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "file_io",
            "type": [
                "None",
                "str",
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "code",
            "type": [
                "None",
                "bool",
                "str",
                "typing.IO",
                "bytes",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "None",
                "pathlib.Path",
                "str",
                "Path"
            ]
        },
        {
            "category": "local",
            "name": "file_io",
            "type": [
                "None",
                "str",
                "typing.IO",
                "FileIO",
                "KnownContentFileIO"
            ]
        },
        {
            "category": "local",
            "name": "cache_path",
            "type": [
                "None",
                "str",
                "bool",
                "Path"
            ]
        },
        {
            "category": "local",
            "name": "start_symbol",
            "type": [
                "None",
                "bool",
                "str",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "error_recovery",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "cache",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "module_node",
            "type": [
                "list",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "parse",
            "type": [
                "list",
                "str",
                "typing.DefaultDict",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "lines",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "diff_cache",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_diff_parser",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "new_node",
            "type": [
                "list",
                "typing.DefaultDict",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "tokens",
            "type": [
                "dict[str, str]",
                "list"
            ]
        }
    ],
    "refactor@Grammar": [
        {
            "category": "arg",
            "name": "base_node",
            "type": [
                "dict",
                "T",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "node_to_str_map",
            "type": [
                "dict",
                "T",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "node_to_str_map",
            "type": [
                "dict",
                "T",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "base_node",
            "type": [
                "dict",
                "T",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "refactor",
            "type": [
                "str"
            ]
        }
    ]
}