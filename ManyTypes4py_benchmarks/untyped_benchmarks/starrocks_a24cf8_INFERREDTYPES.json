{
    "adjust_engine_params@StarRocksEngineSpec": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "bool",
                "None",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "arg",
            "name": "uri",
            "type": [
                "str",
                "sqlalchemy.engine.Engine",
                "zerver.models.Client"
            ]
        },
        {
            "category": "arg",
            "name": "connect_args",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "catalog",
            "type": [
                "None",
                "bool",
                "sqlalchemy.Table"
            ]
        },
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "None",
                "str",
                "fastapi.openapi.models.OAuthFlows",
                "pyspark.sql.SparkSession"
            ]
        },
        {
            "category": "local",
            "name": "uri",
            "type": [
                "str",
                "sqlalchemy.engine.Engine",
                "zerver.models.Client"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "None",
                "str",
                "fastapi.openapi.models.OAuthFlows",
                "pyspark.sql.SparkSession"
            ]
        },
        {
            "category": "local",
            "name": "connect_args",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "adjust_engine_params",
            "type": [
                "tuple[typing.Union[str,sqlalchemy.engine.Engine,zerver.models.Client,typing.Callable]]"
            ]
        }
    ],
    "get_prequeries@StarRocksEngineSpec": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "Database",
                "str",
                "sqlalchemy.engine.reflection.Inspector"
            ]
        },
        {
            "category": "arg",
            "name": "database",
            "type": [
                "str",
                "None",
                "Database"
            ]
        },
        {
            "category": "arg",
            "name": "catalog",
            "type": [
                "None",
                "Database",
                "str",
                "sqlalchemy.engine.reflection.Inspector"
            ]
        },
        {
            "category": "arg",
            "name": "schema",
            "type": [
                "None",
                "Database",
                "str",
                "sqlalchemy.engine.reflection.Inspector"
            ]
        },
        {
            "category": "local",
            "name": "database",
            "type": [
                "str",
                "None",
                "Database"
            ]
        },
        {
            "category": "return",
            "name": "get_prequeries",
            "type": [
                "list[typing.Text]",
                "list"
            ]
        }
    ],
    "get_schema_from_engine_params@StarRocksEngineSpec": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "sqlalchemy_uri",
            "type": [
                "str",
                "types.ModuleType"
            ]
        },
        {
            "category": "arg",
            "name": "connect_args",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "database",
            "type": [
                "supersemodels.core.Database",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_schema_from_engine_params",
            "type": [
                "None"
            ]
        }
    ],
    "get_url_for_impersonation@StarRocksEngineSpec": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "impersonate_user",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "username",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "access_token",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_url_for_impersonation",
            "type": [
                "str",
                "None",
                "bool"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "CONNECTION_ACCESS_DENIED_REGEX",
            "type": [
                "typing.Pattern",
                "dict[str, tuple[str]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "CONNECTION_UNKNOWN_DATABASE_REGEX",
            "type": [
                "str",
                "list[typing.Pattern]"
            ]
        },
        {
            "category": "local",
            "name": "logger",
            "type": [
                "logging.Logger"
            ]
        }
    ],
    "python_type@ARRAY": [
        {
            "category": "return",
            "name": "python_type",
            "type": [
                "list"
            ]
        }
    ],
    "python_type@MAP": [
        {
            "category": "return",
            "name": "python_type",
            "type": [
                "dict"
            ]
        }
    ],
    "python_type@STRUCT": [
        {
            "category": "return",
            "name": "python_type",
            "type": [
                "None"
            ]
        }
    ]
}