{
    "__init__@Compiler": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "rdflib.Graph"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "rdflib.Graph"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Linker": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "None",
                "int",
                "str",
                "bytes",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "None",
                "int",
                "str",
                "bytes",
                "dict",
                "dict[str, typing.Any]",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_add_prepended_cte@global": [
        {
            "category": "arg",
            "name": "prepended_ctes",
            "type": [
                "list",
                "list[dict]"
            ]
        },
        {
            "category": "arg",
            "name": "new_cte",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cte",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "prepended_ctes",
            "type": [
                "list",
                "list[dict]",
                "list[typing.Union[dict,str]]"
            ]
        },
        {
            "category": "local",
            "name": "new_cte",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_add_prepended_cte",
            "type": [
                "None"
            ]
        }
    ],
    "_compile_code@Compiler": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "yaml.nodes.Node",
                "typing.Type",
                "None",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "ics.types.ContextDict",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "arg",
            "name": "extra_context",
            "type": [
                "None",
                "ics.types.ContextDict",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "local",
            "name": "extra_context",
            "type": [
                "None",
                "ics.types.ContextDict",
                "dbcontracts.graph.compiled.ManifestNode",
                "dict",
                "dict[str, typing.Union[bool,None]]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "yaml.nodes.Node",
                "typing.Type",
                "None",
                "dbcontracts.graph.compiled.ManifestNode",
                "ModelNode"
            ]
        },
        {
            "category": "local",
            "name": "node_",
            "type": [
                "typing.Text",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "ics.types.ContextDict",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "local",
            "name": "relation_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_compile_code",
            "type": [
                "yaml.nodes.Node",
                "typing.Type",
                "None",
                "dbcontracts.graph.compiled.ManifestNode",
                "ModelNode"
            ]
        }
    ],
    "_compile_relation_for_foreign_key_constraint_to@Compiler": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str",
                "mypy.nodes.SymbolTable"
            ]
        },
        {
            "category": "arg",
            "name": "to_expression",
            "type": [
                "str",
                "mypy.nodes.SymbolTable"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "to_expression",
            "type": [
                "str",
                "mypy.nodes.SymbolTable"
            ]
        },
        {
            "category": "local",
            "name": "foreign_key_node",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "mypy.nodes.SymbolTable"
            ]
        },
        {
            "category": "local",
            "name": "relation_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_compile_relation_for_foreign_key_constraint_to",
            "type": [
                "str"
            ]
        }
    ],
    "_create_node_context@Compiler": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "cmk.base.events.EventContext"
            ]
        },
        {
            "category": "arg",
            "name": "extra_context",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "typing.Mapping",
                "dict",
                "UnitTestNode",
                "GenericTestNode"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "cmk.base.events.EventContext"
            ]
        },
        {
            "category": "local",
            "name": "extra_context",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_create_node_context",
            "type": []
        }
    ],
    "_extend_prepended_ctes@global": [
        {
            "category": "arg",
            "name": "prepended_ctes",
            "type": [
                "bool",
                "list[str]",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "new_prepended_ctes",
            "type": [
                "list[str]",
                "list[\"Name\"]"
            ]
        },
        {
            "category": "local",
            "name": "new_cte",
            "type": [
                "str",
                "\"Name\""
            ]
        },
        {
            "category": "local",
            "name": "new_prepended_ctes",
            "type": [
                "list[str]",
                "list[\"Name\"]"
            ]
        },
        {
            "category": "local",
            "name": "prepended_ctes",
            "type": [
                "bool",
                "list[str]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_extend_prepended_ctes",
            "type": [
                "None"
            ]
        }
    ],
    "_generate_stats@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "list[dict]"
            ]
        },
        {
            "category": "local",
            "name": "stats",
            "type": [
                "dict[int, typing.Any]",
                "dict[str, int]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "list[dict]"
            ]
        },
        {
            "category": "return",
            "name": "_generate_stats",
            "type": []
        }
    ],
    "_get_multi_test_edges@Linker": [
        {
            "category": "arg",
            "name": "graph",
            "type": [
                "graph.Graph",
                "frozenset"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "Graph"
            ]
        },
        {
            "category": "arg",
            "name": "source_nodes",
            "type": [
                "str",
                "Graph",
                "opentrons.types.Mount"
            ]
        },
        {
            "category": "arg",
            "name": "executable_nodes",
            "type": [
                "Graph",
                "mypy.nodes.MypyFile"
            ]
        },
        {
            "category": "arg",
            "name": "multi_tested_nodes",
            "type": [
                "Graph",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "new_edges",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "source_nodes",
            "type": [
                "str",
                "Graph",
                "opentrons.types.Mount"
            ]
        },
        {
            "category": "local",
            "name": "ready",
            "type": [
                "list",
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "node_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "details",
            "type": [
                "dict[typing.Text, SeenDetails]",
                "dict",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "curr_details",
            "type": [
                "SeenDetails"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "Graph"
            ]
        },
        {
            "category": "local",
            "name": "deps",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "graph",
            "type": [
                "graph.Graph",
                "frozenset"
            ]
        },
        {
            "category": "local",
            "name": "executable_nodes",
            "type": [
                "Graph",
                "mypy.nodes.MypyFile"
            ]
        },
        {
            "category": "local",
            "name": "suc_details",
            "type": [
                "SeenDetails",
                "None",
                "str",
                "dict[typing.Any, str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "multi_tested_nodes",
            "type": [
                "Graph",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "removes",
            "type": [
                "set"
            ]
        },
        {
            "category": "return",
            "name": "_get_multi_test_edges",
            "type": []
        }
    ],
    "_get_test_edges_2@Linker": [
        {
            "category": "arg",
            "name": "graph",
            "type": [
                "networkx.MultiDiGraph",
                "None",
                "list[networkx.MultiDiGraph]"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "local",
            "name": "new_edges",
            "type": [
                "list",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "source_nodes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "executable_nodes",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "multi_tested_nodes",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "single_tested_nodes",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "node_id",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "graph",
            "type": [
                "networkx.MultiDiGraph",
                "None",
                "list[networkx.MultiDiGraph]"
            ]
        },
        {
            "category": "local",
            "name": "manifest_node",
            "type": [
                "str",
                "list[list[typing.Any]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "test_ids",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "succs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "test_id",
            "type": [
                "str",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "local",
            "name": "multi_test_edges",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_get_test_edges_2",
            "type": [
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        }
    ],
    "_get_tests_for_node@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "unique_id",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "tests",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "unique_id",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_get_tests_for_node",
            "type": [
                "list"
            ]
        }
    ],
    "_node_enabled@global": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "dbcontracts.graph.compiled.ManifestNode",
                "wemake_python_styleguide.types.AnyFunctionDef",
                "wemake_python_styleguide.types.AnyFunctionDefAndLambda"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "dbcontracts.graph.compiled.ManifestNode",
                "wemake_python_styleguide.types.AnyFunctionDef",
                "wemake_python_styleguide.types.AnyFunctionDefAndLambda"
            ]
        },
        {
            "category": "return",
            "name": "_node_enabled",
            "type": [
                "bool"
            ]
        }
    ],
    "_recursively_prepend_ctes@Compiler": [
        {
            "category": "arg",
            "name": "model",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]",
                "ics.types.ContextDict"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]",
                "dbcontracts.graph.compiled.NonSourceCompiledNode"
            ]
        },
        {
            "category": "arg",
            "name": "extra_context",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "model",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]",
                "ics.types.ContextDict"
            ]
        },
        {
            "category": "local",
            "name": "model_",
            "type": [
                "None",
                "str",
                "list[str]",
                "bool",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_recursively_prepend_ctes",
            "type": [
                "tuple[typing.Union[dbcontracts.graph.manifesManifest,dict[str, typing.Any],ics.types.ContextDict,list]]",
                "tuple[typing.Union[dbcontracts.graph.manifesManifest,dict[str, typing.Any],ics.types.ContextDict]]"
            ]
        },
        {
            "category": "local",
            "name": "prepended_ctes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]",
                "dbcontracts.graph.compiled.NonSourceCompiledNode"
            ]
        },
        {
            "category": "local",
            "name": "extra_context",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "sql",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "injected_sql",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        }
    ],
    "_write_node@Compiler": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "split_suffix",
            "type": [
                "None",
                "str",
                "list[str]",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "set[str]"
            ]
        },
        {
            "category": "return",
            "name": "_write_node",
            "type": [
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "split_suffix",
            "type": [
                "None",
                "str",
                "list[str]",
                "tuple[int]"
            ]
        }
    ],
    "add_ephemeral_prefix@Compiler": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "return",
            "name": "add_ephemeral_prefix",
            "type": []
        }
    ],
    "add_node@Linker": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "types.trees.NodeT"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "types.trees.NodeT"
            ]
        },
        {
            "category": "return",
            "name": "add_node",
            "type": [
                "None"
            ]
        }
    ],
    "add_test_edges@Linker": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "Manifest",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "Manifest",
                "dict",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "add_test_edges",
            "type": [
                "None"
            ]
        }
    ],
    "add_test_edges_1@Linker": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "local",
            "name": "all_upstream_nodes",
            "type": [
                "set",
                "list[int]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "upstream_nodes",
            "type": [
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "upstream_tests",
            "type": [
                "list",
                "list[str]",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "upstream_node",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "upstream_test",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "test_depends_on",
            "type": [
                "set"
            ]
        },
        {
            "category": "return",
            "name": "add_test_edges_1",
            "type": [
                "None"
            ]
        }
    ],
    "add_test_edges_2@Linker": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "Manifest",
                "\"Flow\""
            ]
        },
        {
            "category": "local",
            "name": "graph",
            "type": [
                "list",
                "dict[str, dict[str, typing.Any]]",
                "type_aliases.Graph"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "Manifest",
                "\"Flow\""
            ]
        },
        {
            "category": "local",
            "name": "new_edges",
            "type": [
                "list",
                "list[str]",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "str",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "add_test_edges_2",
            "type": [
                "None"
            ]
        }
    ],
    "compile@Compiler": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "bool",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "write",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "add_test_edges",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "linker",
            "type": [
                "Linker"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "bool",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "summaries",
            "type": [
                "dict",
                "str",
                "set",
                "set[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "add_test_edges",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "out_stream",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "stats",
            "type": [
                "dict[str, int]",
                "dict[str, typing.Union[float,None]]"
            ]
        },
        {
            "category": "local",
            "name": "write",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "compile",
            "type": [
                "Graph"
            ]
        }
    ],
    "compile_node@Compiler": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "dict[str, mypy.nodes.MypyFile]",
                "bool",
                "mypy.nodes.MypyFile",
                "mypy.nodes.FuncDef",
                "mypy.nodes.OverloadedFuncDef"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "bool",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "extra_context",
            "type": [
                "None",
                "bool",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "write",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "split_suffix",
            "type": [
                "None",
                "str",
                "bool",
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "dict[str, mypy.nodes.MypyFile]",
                "bool",
                "mypy.nodes.MypyFile",
                "mypy.nodes.FuncDef",
                "mypy.nodes.OverloadedFuncDef",
                "UnitTestDefinition",
                "yaml.nodes.Node"
            ]
        },
        {
            "category": "return",
            "name": "compile_node",
            "type": [
                "UnitTestDefinition",
                "yaml.nodes.Node"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "bool",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "extra_context",
            "type": [
                "None",
                "bool",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "dict",
                "str",
                "tuple[typing.Optional[typing.Literal]]"
            ]
        },
        {
            "category": "local",
            "name": "write",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "split_suffix",
            "type": [
                "None",
                "str",
                "bool",
                "typing.IO"
            ]
        }
    ],
    "dependency@Linker": [
        {
            "category": "arg",
            "name": "node1",
            "type": [
                "types.trees.NodeT"
            ]
        },
        {
            "category": "arg",
            "name": "node2",
            "type": [
                "types.trees.NodeT"
            ]
        },
        {
            "category": "local",
            "name": "node1",
            "type": [
                "types.trees.NodeT"
            ]
        },
        {
            "category": "local",
            "name": "node2",
            "type": [
                "types.trees.NodeT"
            ]
        },
        {
            "category": "return",
            "name": "dependency",
            "type": [
                "None"
            ]
        }
    ],
    "edges@Linker": [
        {
            "category": "return",
            "name": "edges",
            "type": [
                "networkx.MultiDiGraph",
                "networkx.Graph",
                "bool"
            ]
        }
    ],
    "find_cycles@Linker": [
        {
            "category": "return",
            "name": "find_cycles",
            "type": [
                "None",
                "str"
            ]
        }
    ],
    "get_graph@Linker": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "Manifest",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "Manifest",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "get_graph",
            "type": [
                "Graph"
            ]
        }
    ],
    "get_graph_summary@Linker": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict",
                "Manifest"
            ]
        },
        {
            "category": "local",
            "name": "graph_nodes",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "index_dict",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "successors",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "get_graph_summary",
            "type": [
                "dict"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "graph_file_name",
            "type": [
                "typing.Text",
                "str"
            ]
        }
    ],
    "initialize@Compiler": [
        {
            "category": "return",
            "name": "initialize",
            "type": [
                "None"
            ]
        }
    ],
    "inject_ctes_into_sql@global": [
        {
            "category": "arg",
            "name": "sql",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "ctes",
            "type": [
                "str",
                "list[str]",
                "list[dbcontracts.graph.compiled.InjectedCTE]"
            ]
        },
        {
            "category": "local",
            "name": "ctes",
            "type": [
                "str",
                "list[str]",
                "list[dbcontracts.graph.compiled.InjectedCTE]"
            ]
        },
        {
            "category": "local",
            "name": "sql",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "inject_ctes_into_sql",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "with_stmt",
            "type": [
                "None",
                "tuple[int]",
                "list",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "with_token",
            "type": [
                "str",
                "typing.Callable[None, typing.Any]",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "c",
            "type": [
                "typing.Text",
                "dbcontracts.graph.compiled.InjectedCTE"
            ]
        },
        {
            "category": "local",
            "name": "injected_ctes",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "injected_ctes_token",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "comma_token",
            "type": [
                "tuple[tuple[typing.Literal]]",
                "str"
            ]
        }
    ],
    "link_graph@Linker": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "typing.OrderedDict",
                "dbcontracts.graph.manifesManifest",
                "Manifest"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "typing.OrderedDict",
                "dbcontracts.graph.manifesManifest",
                "Manifest"
            ]
        },
        {
            "category": "local",
            "name": "cycle",
            "type": [
                "int",
                "set",
                "dict[int, list[int]]"
            ]
        },
        {
            "category": "return",
            "name": "link_graph",
            "type": [
                "None"
            ]
        }
    ],
    "link_node@Linker": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "yaml.nodes.Node"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "yaml.nodes.Node",
                "dbcontracts.graph.compiled.GraphMemberNode"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "yaml.nodes.Node"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "yaml.nodes.Node",
                "dbcontracts.graph.compiled.GraphMemberNode"
            ]
        },
        {
            "category": "return",
            "name": "link_node",
            "type": [
                "None"
            ]
        }
    ],
    "nodes@Linker": [
        {
            "category": "return",
            "name": "nodes",
            "type": [
                "Graph",
                "\"Pipeline\""
            ]
        }
    ],
    "print_compile_stats@global": [
        {
            "category": "arg",
            "name": "stats",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "dbt_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "stats",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "k",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "resource_counts",
            "type": [
                "dict[, tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "t",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "ct",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "stat_line",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "print_compile_stats",
            "type": [
                "None"
            ]
        }
    ],
    "write_graph@Linker": [
        {
            "category": "arg",
            "name": "outfile",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "out_graph",
            "type": [
                "depender.graph.dependency.DependencyGraph",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "list",
                "typing.Mapping",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "outfile",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "outfh",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "return",
            "name": "write_graph",
            "type": [
                "None"
            ]
        }
    ],
    "write_graph_file@Compiler": [
        {
            "category": "arg",
            "name": "linker",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "os.PathLike",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "os.PathLike",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "graph_file_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "graph_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "flags",
            "type": [
                "int",
                "dict[int, bool]"
            ]
        },
        {
            "category": "local",
            "name": "linker",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "os.PathLike",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "os.PathLike",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "write_graph_file",
            "type": [
                "None"
            ]
        }
    ]
}