{
    "__call__@parametrized": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "__call__",
            "type": [
                "str",
                "pathlib.Path",
                "int"
            ]
        }
    ],
    "__init__@_MarkdownLink": [
        {
            "category": "arg",
            "name": "folder",
            "type": [
                "str",
                "None",
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "filepath",
            "type": [
                "str",
                "pathlib.Path",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "string",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "link",
            "type": [
                "str",
                "dict[str, dict[str, int]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "folder",
            "type": [
                "str",
                "None",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "_folder",
            "type": [
                "str",
                "None",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "filepath",
            "type": [
                "str",
                "pathlib.Path",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_filepath",
            "type": [
                "str",
                "pathlib.Path",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "string",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_string",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "link",
            "type": [
                "str",
                "dict[str, dict[str, int]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "_link",
            "type": [
                "str",
                "dict[str, dict[str, int]]",
                "pathlib.Path"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@parametrized": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "ids",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "num_params",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__repr__@_MarkdownLink": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_get_all_markdown_links@global": [
        {
            "category": "arg",
            "name": "folder",
            "type": [
                "pathlib.Path",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "folder",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "links",
            "type": [
                "list",
                "list[_MarkdownLink]"
            ]
        },
        {
            "category": "return",
            "name": "_get_all_markdown_links",
            "type": [
                "list[_MarkdownLink]"
            ]
        }
    ],
    "assert_markdown_links_not_broken@global": [
        {
            "category": "arg",
            "name": "folder",
            "type": [
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "folder",
            "type": [
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "links",
            "type": [
                "str",
                "list[str]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "l",
            "type": [
                "typing.Text",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "broken",
            "type": [
                "list[typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "assert_markdown_links_not_broken",
            "type": [
                "None"
            ]
        }
    ],
    "assert_set_equal@global": [
        {
            "category": "arg",
            "name": "estimate",
            "type": [
                "str",
                "T",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "reference",
            "type": [
                "str",
                "T",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "err_msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "estimate",
            "type": [
                "str",
                "T",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "reference",
            "type": [
                "str",
                "T",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "str",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "elements",
            "type": [
                "list[tuple[typing.Union[typing.Text,int,float]]]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "typing.Text",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "messages",
            "type": [
                "list[str]",
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "err_msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "assert_set_equal",
            "type": [
                "None"
            ]
        }
    ],
    "exists@_MarkdownLink": [
        {
            "category": "return",
            "name": "exists",
            "type": [
                "bool"
            ]
        }
    ],
    "global@global": [],
    "printed_assert_equal@global": [
        {
            "category": "arg",
            "name": "actual",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "desired",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "err_msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "actual",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "desired",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "err_msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "return",
            "name": "printed_assert_equal",
            "type": [
                "None"
            ]
        }
    ],
    "skip_error_on_systems@global": [
        {
            "category": "arg",
            "name": "error_type",
            "type": [
                "typing.Type",
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "systems",
            "type": [
                "typing.Iterable[str]",
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "skip_error_on_systems",
            "type": [
                "typing.Generator"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "systems",
            "type": [
                "typing.Iterable[str]",
                "str",
                "bool"
            ]
        }
    ],
    "suppress_nevergrad_warnings@global": [
        {
            "category": "return",
            "name": "suppress_nevergrad_warnings",
            "type": [
                "typing.Generator"
            ]
        }
    ]
}