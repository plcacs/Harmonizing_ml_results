{
    "global@global": [],
    "owners@global": [
        {
            "category": "arg",
            "name": "get_user",
            "type": [
                "zerver.models.UserProfile",
                "None",
                "list[typing.Pattern]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "owners",
            "type": [
                "list"
            ]
        }
    ],
    "test_execute_task@global": [
        {
            "category": "arg",
            "name": "update_state_mock",
            "type": [
                "mock.Mock",
                "mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "command_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "init_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "owners",
            "type": []
        },
        {
            "category": "local",
            "name": "init_mock_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "command_mock_",
            "type": [
                "ReportScheduleUnexpectedError"
            ]
        },
        {
            "category": "local",
            "name": "update_state_mock",
            "type": [
                "mock.Mock",
                "mock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_execute_task",
            "type": [
                "None"
            ]
        }
    ],
    "test_execute_task_with_command_exception@global": [
        {
            "category": "arg",
            "name": "logger_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "update_state_mock",
            "type": [
                "mock.MagicMock",
                "mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "command_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "init_mock",
            "type": [
                "mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "owners",
            "type": [
                "mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "owners",
            "type": [
                "mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "init_mock_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "command_mock_",
            "type": [
                "CommandException"
            ]
        },
        {
            "category": "local",
            "name": "update_state_mock",
            "type": [
                "mock.MagicMock",
                "mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_execute_task_with_command_exception",
            "type": [
                "None"
            ]
        }
    ],
    "test_scheduler_celery_no_timeout_ny@global": [
        {
            "category": "arg",
            "name": "execute_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "owners",
            "type": [
                "mock.Mock",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "neuromation.api.Client"
            ]
        },
        {
            "category": "local",
            "name": "owners",
            "type": [
                "mock.Mock",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "neuromation.api.Client"
            ]
        },
        {
            "category": "return",
            "name": "test_scheduler_celery_no_timeout_ny",
            "type": [
                "None"
            ]
        }
    ],
    "test_scheduler_celery_no_timeout_utc@global": [
        {
            "category": "arg",
            "name": "execute_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "owners",
            "type": [
                "mock.Mock",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "neuromation.api.Client"
            ]
        },
        {
            "category": "local",
            "name": "owners",
            "type": [
                "mock.Mock",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "neuromation.api.Client"
            ]
        },
        {
            "category": "return",
            "name": "test_scheduler_celery_no_timeout_utc",
            "type": [
                "None"
            ]
        }
    ],
    "test_scheduler_celery_timeout_ny@global": [
        {
            "category": "arg",
            "name": "execute_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "owners",
            "type": [
                "mock.Mock",
                "neuromation.api.Client"
            ]
        },
        {
            "category": "local",
            "name": "owners",
            "type": [
                "mock.Mock",
                "neuromation.api.Client"
            ]
        },
        {
            "category": "return",
            "name": "test_scheduler_celery_timeout_ny",
            "type": [
                "None"
            ]
        }
    ],
    "test_scheduler_celery_timeout_utc@global": [
        {
            "category": "arg",
            "name": "execute_mock",
            "type": []
        },
        {
            "category": "arg",
            "name": "owners",
            "type": [
                "neuromation.api.Client",
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "owners",
            "type": [
                "neuromation.api.Client",
                "mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_scheduler_celery_timeout_utc",
            "type": [
                "None"
            ]
        }
    ],
    "test_scheduler_feature_flag_off@global": [
        {
            "category": "arg",
            "name": "execute_mock",
            "type": [
                "bool",
                "Exception",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "is_feature_enabled",
            "type": [
                "bool",
                "None",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "owners",
            "type": [
                "dict",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "is_feature_enabled_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "owners",
            "type": [
                "dict",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "execute_mock",
            "type": [
                "bool",
                "Exception",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_scheduler_feature_flag_off",
            "type": [
                "None"
            ]
        }
    ]
}