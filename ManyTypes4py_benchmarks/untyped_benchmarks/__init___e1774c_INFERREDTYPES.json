{
    "__init__@AlertWordNotificationProcessor": [
        {
            "category": "arg",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@CompiledInlineProcessor": [
        {
            "category": "arg",
            "name": "compiled_re",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Iterator"
            ]
        },
        {
            "category": "arg",
            "name": "zmd",
            "type": [
                "bool",
                "\"SpeciesNameComplex\"",
                "object"
            ]
        },
        {
            "category": "local",
            "name": "compiled_re",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "zmd",
            "type": [
                "bool",
                "\"SpeciesNameComplex\"",
                "object"
            ]
        },
        {
            "category": "local",
            "name": "md",
            "type": [
                "bool",
                "\"SpeciesNameComplex\"",
                "object"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@CompiledPattern": [
        {
            "category": "arg",
            "name": "compiled_re",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Iterator"
            ]
        },
        {
            "category": "arg",
            "name": "zmd",
            "type": [
                "bool",
                "\"SpeciesNameComplex\"",
                "object"
            ]
        },
        {
            "category": "local",
            "name": "compiled_re",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "zmd",
            "type": [
                "bool",
                "\"SpeciesNameComplex\"",
                "object"
            ]
        },
        {
            "category": "local",
            "name": "md",
            "type": [
                "bool",
                "\"SpeciesNameComplex\"",
                "object"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ElementPair": [
        {
            "category": "arg",
            "name": "parent",
            "type": [
                "T",
                "typing.Callable",
                "VT"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "int",
                "str",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "parent",
            "type": [
                "T",
                "typing.Callable",
                "VT"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "int",
                "str",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@Emoji": [
        {
            "category": "arg",
            "name": "pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@EmoticonTranslation": [
        {
            "category": "arg",
            "name": "pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@InlineImageProcessor": [
        {
            "category": "arg",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@InlineVideoProcessor": [
        {
            "category": "arg",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@LinkInlineProcessor": [
        {
            "category": "arg",
            "name": "pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@LinkifierPattern": [
        {
            "category": "arg",
            "name": "source_pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "url_template",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "options_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "source_pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "compiled_re2",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "url_template",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "zmd",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ListIndentProcessor": [
        {
            "category": "arg",
            "name": "parser",
            "type": [
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "parser_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "parser",
            "type": [
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@OListProcessor": [
        {
            "category": "arg",
            "name": "parser",
            "type": [
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "parser_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "parser",
            "type": [
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@OpenGraphSession": [
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ResultWithFamily": [
        {
            "category": "arg",
            "name": "family",
            "type": [
                "typing.Sequence[str]",
                "str",
                "None",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "result",
            "type": [
                "int",
                "list[typing.Type]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "family",
            "type": [
                "typing.Sequence[str]",
                "str",
                "None",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "int",
                "list[typing.Type]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@UListProcessor": [
        {
            "category": "arg",
            "name": "parser",
            "type": [
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "parser_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "parser",
            "type": [
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@ZulipMarkdown": [
        {
            "category": "arg",
            "name": "linkifiers",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "linkifiers_key",
            "type": [
                "list[str]",
                "list[\"Taxon\"]",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "arg",
            "name": "email_gateway",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "linkifiers",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "linkifiers_key",
            "type": [
                "list[str]",
                "list[\"Taxon\"]",
                "typing.AbstractSet"
            ]
        },
        {
            "category": "local",
            "name": "email_gateway",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "add_a@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": []
        },
        {
            "category": "arg",
            "name": "image_url",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "link",
            "type": [
                "str",
                "list[str]",
                "\"LocalizedString\"",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "title",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "desc",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "class_attr",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "data_id",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "insertion_index",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "already_thumbnailed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "desc",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "class_attr",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "insertion_index",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "div",
            "type": [
                "Element",
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "list[typing.Union[int,Element]]"
            ]
        },
        {
            "category": "local",
            "name": "a",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "link",
            "type": [
                "str",
                "list[str]",
                "\"LocalizedString\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "title",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data_id",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "img",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "image_url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "path_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "summary_div",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "title_div",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "title_div_",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "desc_div",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "return",
            "name": "add_a",
            "type": [
                "None"
            ]
        }
    ],
    "add_embed@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "link",
            "type": [
                "dict[str, typing.Any]",
                "faustypes.tables.WindowWrapperT",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "extracted_data",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "dict",
                "dict[str, typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "extracted_data",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "dict",
                "dict[str, typing.Union[str,typing.Any]]",
                "UrlOEmbedData"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "link",
            "type": [
                "dict[str, typing.Any]",
                "faustypes.tables.WindowWrapperT",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "add_embed",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "extracted_data_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "container",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "img_link",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "img",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "data_container",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "title_elm",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "a",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "description_elm",
            "type": [
                "SubElement"
            ]
        }
    ],
    "add_oembed_data@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "link",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "extracted_data",
            "type": [
                "dict",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "extracted_data",
            "type": [
                "dict",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "extracted_data_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "add_oembed_data",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "link",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "list"
            ]
        }
    ],
    "add_video@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": []
        },
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "typing.Mapping",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "title",
            "type": [
                "str",
                "None",
                "topicdb.core.models.language.Language"
            ]
        },
        {
            "category": "arg",
            "name": "class_attr",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "insertion_index",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "insertion_index",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "div",
            "type": [
                "Element",
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "list[typing.Union[int,Element]]"
            ]
        },
        {
            "category": "local",
            "name": "class_attr",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "a",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "typing.Mapping",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "title",
            "type": [
                "str",
                "None",
                "topicdb.core.models.language.Language"
            ]
        },
        {
            "category": "local",
            "name": "video",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "return",
            "name": "add_video",
            "type": [
                "None"
            ]
        }
    ],
    "are_matches_overlapping@global": [
        {
            "category": "arg",
            "name": "match_a",
            "type": []
        },
        {
            "category": "arg",
            "name": "match_b",
            "type": []
        },
        {
            "category": "return",
            "name": "are_matches_overlapping",
            "type": [
                "bool"
            ]
        }
    ],
    "build_block_parser@ZulipMarkdown": [
        {
            "category": "local",
            "name": "parser",
            "type": [
                "BlockParser"
            ]
        },
        {
            "category": "return",
            "name": "build_block_parser",
            "type": [
                "BlockParser"
            ]
        }
    ],
    "build_inlinepatterns@ZulipMarkdown": [
        {
            "category": "local",
            "name": "DEL_RE",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "EMPHASIS_RE",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "STRONG_RE",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "STRONG_EM_RE",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "TEX_RE",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "TIMESTAMP_RE",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "reg",
            "type": [
                "xml.etree.ElementTree.Element"
            ]
        },
        {
            "category": "local",
            "name": "EMOJI_REGEX",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "POSSIBLE_EMOJI_RE",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "return",
            "name": "build_inlinepatterns",
            "type": [
                "xml.etree.ElementTree.Element"
            ]
        }
    ],
    "build_parser@ZulipMarkdown": [
        {
            "category": "local",
            "name": "preprocessors",
            "type": [
                "bool",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "parser",
            "type": [
                "django.core.managemenbase.CommandParser"
            ]
        },
        {
            "category": "local",
            "name": "inlinePatterns",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "treeprocessors",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "postprocessors",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "build_parser",
            "type": [
                "ZulipMarkdown"
            ]
        }
    ],
    "build_postprocessors@ZulipMarkdown": [
        {
            "category": "local",
            "name": "postprocessors",
            "type": [
                "str",
                "cmk.gui.utils.html.HTML"
            ]
        },
        {
            "category": "return",
            "name": "build_postprocessors",
            "type": [
                "str",
                "cmk.gui.utils.html.HTML"
            ]
        }
    ],
    "build_preprocessors@ZulipMarkdown": [
        {
            "category": "local",
            "name": "preprocessors",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "build_preprocessors",
            "type": [
                "str"
            ]
        }
    ],
    "build_treeprocessors@ZulipMarkdown": [
        {
            "category": "local",
            "name": "treeprocessors",
            "type": [
                "str",
                "list",
                "requests.models.Response"
            ]
        },
        {
            "category": "return",
            "name": "build_treeprocessors",
            "type": [
                "str",
                "list",
                "requests.models.Response"
            ]
        }
    ],
    "check_valid_end_position@AlertWordNotificationProcessor": [
        {
            "category": "arg",
            "name": "content",
            "type": []
        },
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "check_valid_end_position",
            "type": [
                "bool"
            ]
        }
    ],
    "check_valid_start_position@AlertWordNotificationProcessor": [
        {
            "category": "arg",
            "name": "content",
            "type": [
                "tuple[typing.Union[int,str]]",
                "apps.monero.xmr.types.Ge25519"
            ]
        },
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "apps.monero.xmr.types.Ge25519"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "apps.monero.xmr.types.Ge25519"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "tuple[typing.Union[int,str]]",
                "apps.monero.xmr.types.Ge25519"
            ]
        },
        {
            "category": "return",
            "name": "check_valid_start_position",
            "type": [
                "bool"
            ]
        }
    ],
    "clean@BlockQuoteProcessor": [
        {
            "category": "arg",
            "name": "line",
            "type": [
                "str",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "line",
            "type": [
                "str",
                "bytes",
                "list",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "clean",
            "type": [
                "str"
            ]
        }
    ],
    "clear_web_link_regex_for_testing@global": [
        {
            "category": "return",
            "name": "clear_web_link_regex_for_testing",
            "type": [
                "None"
            ]
        }
    ],
    "content_has_emoji_syntax@global": [
        {
            "category": "arg",
            "name": "content",
            "type": [
                "str",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "EMOJI_REGEX",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "str",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "content_has_emoji_syntax",
            "type": [
                "bool"
            ]
        }
    ],
    "corrected_image_source@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "parsed_url",
            "type": [
                "urllib.parse.ParseResult"
            ]
        },
        {
            "category": "local",
            "name": "newpath",
            "type": [
                "urllib.parse.ParseResult",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "corrected_image_source",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "do_convert@global": [
        {
            "category": "arg",
            "name": "content",
            "type": [
                "str",
                "None",
                "zerver.models.UserProfile",
                "models.User"
            ]
        },
        {
            "category": "arg",
            "name": "realm_alert_words_automaton",
            "type": [
                "None",
                "str",
                "bool",
                "zerver.models.Realm"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "arg",
            "name": "message_realm",
            "type": [
                "None",
                "bool",
                "str",
                "zerver.models.Realm"
            ]
        },
        {
            "category": "arg",
            "name": "sent_by_bot",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "translate_emoticons",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "url_embed_data",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "mention_data",
            "type": [
                "None",
                "bool",
                "models.Credentials",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "email_gateway",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "no_previews",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "acting_user",
            "type": [
                "None",
                "zerver.models.Realm",
                "zerver.models.UserProfile",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "local",
            "name": "message_realm",
            "type": [
                "None",
                "bool",
                "str",
                "zerver.models.Realm",
                "grouper.models.user.User"
            ]
        },
        {
            "category": "local",
            "name": "DEFAULT_MARKDOWN_KEY",
            "type": [
                "str",
                "dict[str, str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "linkifiers_key",
            "type": [
                "str",
                "dict[str, str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "logging_message_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "ZEPHYR_MIRROR_MARKDOWN_KEY",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "email_gateway",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "md_engines",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_md_engine",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "rendering_result",
            "type": [
                "MessageRenderingResult"
            ]
        },
        {
            "category": "local",
            "name": "_md_engine_",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile",
                "MessageRenderingResult",
                "grouper.models.user.User",
                "bool",
                "dict[str, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "no_previews",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "url_embed_data",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "user_upload_previews",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "message_sender",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "mention_data",
            "type": [
                "None",
                "bool",
                "models.Credentials",
                "str",
                "dict[str, typing.Union[typing.Any,None]]",
                "dict[str, typing.Union[int,None]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "mention_backend",
            "type": [
                "MentionBackend"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "str",
                "None",
                "zerver.models.UserProfile",
                "models.User"
            ]
        },
        {
            "category": "local",
            "name": "acting_user",
            "type": [
                "None",
                "zerver.models.Realm",
                "zerver.models.UserProfile",
                "dict[str, typing.Any]",
                "dict",
                "str",
                "list[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "stream_names",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "linked_stream_topic_data",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "active_realm_emoji",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "realm_alert_words_automaton",
            "type": [
                "None",
                "str",
                "bool",
                "zerver.models.Realm"
            ]
        },
        {
            "category": "local",
            "name": "sent_by_bot",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "translate_emoticons",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "rendering_result_",
            "type": [
                "str",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "content_with_thumbnails",
            "type": [
                "str",
                "T",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "do_convert",
            "type": [
                "MessageRenderingResult"
            ]
        },
        {
            "category": "local",
            "name": "cleaned",
            "type": [
                "str",
                "list",
                "src.pip_shims.models.ShimmedPathCollection"
            ]
        },
        {
            "category": "local",
            "name": "markdown_logger",
            "type": [
                "logging.Logger",
                "server.openslides.utils.logging.LoggerAdapter"
            ]
        }
    ],
    "dropbox_image@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "parsed_url",
            "type": [
                "urllib.parse.ParseResult",
                "urllib.parse.SplitResult"
            ]
        },
        {
            "category": "local",
            "name": "is_album",
            "type": [
                "str",
                "bool",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "dropbox_image",
            "type": [
                "None",
                "dict[typing.Text, bool]"
            ]
        },
        {
            "category": "local",
            "name": "image_info",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, typing.Union[str,None]]",
                "tuple[typing.Optional[tuple[None]]]",
                "None",
                "dict",
                "dict[typing.Text, bool]"
            ]
        },
        {
            "category": "local",
            "name": "is_image",
            "type": [
                "str",
                "bool",
                "list"
            ]
        }
    ],
    "fetch_open_graph_image@global": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "og",
            "type": [
                "dict[typing.Text, None]"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "res_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "fetch_open_graph_image",
            "type": [
                "None",
                "dict[typing.Text, None]"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "EmailMessage"
            ]
        },
        {
            "category": "local",
            "name": "mimetype",
            "type": [
                "str",
                "int",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "html",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "parent",
            "type": [
                "dict[int, list[int]]",
                "\"PNSqlCursor\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "parent_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "str",
                "bytes",
                "email.message.Message",
                "None"
            ]
        }
    ],
    "fetch_tweet_data@global": [
        {
            "category": "arg",
            "name": "tweet_id",
            "type": [
                "str",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "fetch_tweet_data",
            "type": [
                "None"
            ]
        }
    ],
    "find_proper_insertion_index@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "grandparent",
            "type": [
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "parent",
            "type": [
                "int",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "parent_index_in_grandparent",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "parent",
            "type": [
                "int",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "parent_links",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "parent_index_in_grandparent",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "insertion_index",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "grandparent",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "find_proper_insertion_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "uncle",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "inline_image_classes",
            "type": [
                "set[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "uncle_link",
            "type": [
                "int"
            ]
        }
    ],
    "find_stream_id@StreamTopicMessageProcessor": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "db_data",
            "type": [
                "None",
                "dict",
                "typing.Mapping",
                "dict[str, typing.Union[int,str]]"
            ]
        },
        {
            "category": "return",
            "name": "find_stream_id",
            "type": [
                "None",
                "int",
                "list[str]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "stream_id",
            "type": [
                "int",
                "list[str]",
                "dict[str, str]"
            ]
        }
    ],
    "get_actual_image_url@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "parsed_url",
            "type": [
                "urllib.parse.ParseResult"
            ]
        },
        {
            "category": "local",
            "name": "split_path",
            "type": [
                "list[str]",
                "str",
                "list[bytes]"
            ]
        },
        {
            "category": "return",
            "name": "get_actual_image_url",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "get_compiled_stream_link_regex@global": [
        {
            "category": "local",
            "name": "STREAM_LINK_REGEX",
            "type": [
                "typing.Pattern",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_compiled_stream_link_regex",
            "type": []
        }
    ],
    "get_compiled_stream_topic_link_regex@global": [
        {
            "category": "local",
            "name": "STREAM_TOPIC_LINK_REGEX",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "return",
            "name": "get_compiled_stream_topic_link_regex",
            "type": []
        }
    ],
    "get_compiled_stream_topic_message_link_regex@global": [
        {
            "category": "local",
            "name": "STREAM_TOPIC_MESSAGE_LINK_REGEX",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_compiled_stream_topic_message_link_regex",
            "type": []
        }
    ],
    "get_inlining_information@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "found_url",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "found_url",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "url_eq_text",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "title",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "info",
            "type": [
                "dict[typing.Text, typing.Union[str,None,list[str]]]"
            ]
        },
        {
            "category": "local",
            "name": "parent_index",
            "type": [
                "None",
                "int",
                "list[int]",
                "legistar.models.Index"
            ]
        },
        {
            "category": "local",
            "name": "uncle",
            "type": [
                "parent"
            ]
        },
        {
            "category": "return",
            "name": "get_inlining_information",
            "type": [
                "dict[typing.Text, typing.Union[str,None,list[str]]]"
            ]
        }
    ],
    "get_markdown_requests@global": [
        {
            "category": "local",
            "name": "markdown_total_requests",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_markdown_requests",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "get_markdown_time@global": [
        {
            "category": "local",
            "name": "markdown_total_time",
            "type": [
                "int",
                "datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "get_markdown_time",
            "type": [
                "int",
                "datetime.datetime"
            ]
        }
    ],
    "get_sub_registry@global": [
        {
            "category": "arg",
            "name": "r",
            "type": [
                "str",
                "bytes",
                "can.message.Message"
            ]
        },
        {
            "category": "arg",
            "name": "keys",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "new_r",
            "type": [
                "requests.sessions.Session",
                "dict",
                "beagle.web.api.models.Graph"
            ]
        },
        {
            "category": "local",
            "name": "keys",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "str",
                "bytes",
                "can.message.Message"
            ]
        },
        {
            "category": "return",
            "name": "get_sub_registry",
            "type": [
                "requests.sessions.Session",
                "dict",
                "beagle.web.api.models.Graph"
            ]
        }
    ],
    "get_tweet_id@global": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "parsed_url",
            "type": [
                "urllib.parse.ParseResult",
                "urllib.parse.SplitResult"
            ]
        },
        {
            "category": "return",
            "name": "get_tweet_id",
            "type": [
                "None"
            ]
        }
    ],
    "get_url_data@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "e",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "list",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_url_data",
            "type": [
                "tuple[typing.Union[str,list,None]]",
                "None"
            ]
        }
    ],
    "get_web_link_regex@global": [
        {
            "category": "local",
            "name": "tlds",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "inner_paren_contents",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "paren_group",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "nested_paren_chunk",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "file_links",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "REGEX",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "get_web_link_regex",
            "type": [
                "str"
            ]
        }
    ],
    "get_with_operand@StreamTopicPattern": [
        {
            "category": "arg",
            "name": "channel_topic",
            "type": [
                "str",
                "salon.models.ServiceCategory"
            ]
        },
        {
            "category": "local",
            "name": "db_data",
            "type": [
                "None",
                "dict",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "get_with_operand",
            "type": [
                "None",
                "int",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "channel_topic",
            "type": [
                "str",
                "salon.models.ServiceCategory"
            ]
        },
        {
            "category": "local",
            "name": "with_operand",
            "type": [
                "int",
                "str",
                "list"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "ReturnT",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "html_safelisted_schemes",
            "type": [
                "tuple[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "allowed_schemes",
            "type": [
                "tuple[typing.Union[typing.Text,tuple[typing.Text]]]",
                "list[str]",
                "set[str]",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "version",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_T",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "ElementStringNone",
            "type": [
                "str",
                "typing.Callable[None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "EMOJI_REGEX",
            "type": [
                "typing.Text",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "STREAM_LINK_REGEX",
            "type": [
                "typing.Text",
                "typing.Pattern",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "STREAM_TOPIC_LINK_REGEX",
            "type": [
                "typing.Text",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "STREAM_TOPIC_MESSAGE_LINK_REGEX",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "markdown_logger",
            "type": [
                "logging.Logger",
                "server.openslides.utils.logging.LoggerAdapter"
            ]
        },
        {
            "category": "local",
            "name": "T",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "IMAGE_EXTENSIONS",
            "type": [
                "list[typing.Text]",
                "list[str]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "POSSIBLE_EMOJI_RE",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "TEXT_PRESENTATION_RE",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "BEFORE_CAPTURE_GROUP",
            "type": [
                "typing.Text",
                "str",
                "list[tuple[typing.Union[str,typing.Any]]]",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "OUTER_CAPTURE_GROUP",
            "type": [
                "typing.Text",
                "str",
                "app.models.FileModel",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "AFTER_CAPTURE_GROUP",
            "type": [
                "typing.Text",
                "list",
                "str",
                "typing.Callable[None,None,None,None,None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "DEFAULT_MARKDOWN_KEY",
            "type": [
                "int",
                "str",
                "dict[str, str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "ZEPHYR_MIRROR_MARKDOWN_KEY",
            "type": [
                "int",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "md_engines",
            "type": [
                "dict",
                "str",
                "None",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "linkifier_data",
            "type": [
                "dict",
                "list",
                "bytes",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "basic_link_splitter",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "_privacy_re",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "markdown_time_start",
            "type": [
                "float",
                "str",
                "None",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "markdown_total_time",
            "type": [
                "float",
                "int",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "markdown_total_requests",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "handleMatch@AutoLink": [
        {
            "category": "arg",
            "name": "match",
            "type": [
                "typing.Match"
            ]
        },
        {
            "category": "local",
            "name": "match",
            "type": [
                "typing.Match"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "typing.Pattern",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": []
        }
    ],
    "handleMatch@BacktickInlineProcessor": [
        {
            "category": "arg",
            "name": "m",
            "type": [
                "dict",
                "str",
                "core.models.Model"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "typing.Pattern",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "dict",
                "str",
                "core.models.Model"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "typing.Pattern",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "el",
            "type": [
                "str",
                "list",
                "dict[str, tuple[str]]"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "str",
                "float",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "end",
            "type": [
                "str",
                "int",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "str",
                "int",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "str",
                "int",
                "list"
            ]
        }
    ],
    "handleMatch@Emoji": [
        {
            "category": "arg",
            "name": "match",
            "type": [
                "typing.Match"
            ]
        },
        {
            "category": "local",
            "name": "match",
            "type": [
                "typing.Match"
            ]
        },
        {
            "category": "local",
            "name": "orig_syntax",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "active_realm_emoji",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "db_data",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "dict[str, typing.Union[int,str]]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "str",
                "bool",
                "dict[str, str]"
            ]
        }
    ],
    "handleMatch@EmoticonTranslation": [
        {
            "category": "arg",
            "name": "match",
            "type": [
                "typing.Match"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "match",
            "type": [
                "typing.Match"
            ]
        },
        {
            "category": "local",
            "name": "emoticon",
            "type": [
                "typing.Pattern",
                "dict[int, typing.Union[int,None]]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "translated",
            "type": [
                "dict[str, tuple[typing.Union[str,typing.Any]]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "tuple[typing.Union[str,typing.Any]]",
                "str"
            ]
        }
    ],
    "handleMatch@LinkInlineProcessor": [
        {
            "category": "arg",
            "name": "m",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "el",
            "type": [
                "dict[str, list[str]]",
                "set[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "match_start",
            "type": [
                "int",
                "typing.Pattern",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "str",
                "legistar.models.Index"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "tuple[typing.Union[dict[str, list[str]],set[str],int,typing.Pattern,str,legistar.models.Index]]",
                "tuple[None]"
            ]
        }
    ],
    "handleMatch@LinkifierPattern": [
        {
            "category": "arg",
            "name": "m",
            "type": [
                "str",
                "typing.Mapping",
                "dict",
                "int",
                "bytes",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "list[tuple]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "str",
                "typing.Mapping",
                "dict",
                "int",
                "bytes",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "OUTER_CAPTURE_GROUP",
            "type": [
                "str",
                "app.models.FileModel",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "dict[str, str]",
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "tuple[None]",
                "tuple[typing.Union[str,dict[str, str],tuple[typing.Union[str,int]]]]"
            ]
        }
    ],
    "handleMatch@StreamPattern": [
        {
            "category": "arg",
            "name": "m",
            "type": [
                "core.models.Model",
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "list[tuple]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "core.models.Model",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "stream_id",
            "type": [
                "int",
                "str",
                "typing.Generator[typing.Optional[typing.Any]]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "tuple[None]",
                "tuple[Element]"
            ]
        },
        {
            "category": "local",
            "name": "el",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "stream_url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "handleMatch@StreamTopicMessagePattern": [
        {
            "category": "arg",
            "name": "m",
            "type": [
                "dict",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "list[tuple]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "dict",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "stream_name",
            "type": [
                "str",
                "None",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "topic_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "message_id",
            "type": [
                "str",
                "int",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "stream_id",
            "type": [
                "int",
                "None",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "tuple[None]",
                "tuple[Element]"
            ]
        },
        {
            "category": "local",
            "name": "el",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "stream_url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "topic_url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "link",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "topic_el",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "handleMatch@StreamTopicPattern": [
        {
            "category": "arg",
            "name": "m",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "list[tuple]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "stream_name",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "topic_name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "stream_id",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "tuple[None]",
                "tuple[Element]"
            ]
        },
        {
            "category": "local",
            "name": "el",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "stream_url",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "topic_url",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "channel_topic_object",
            "type": [
                "ChannelTopicInfo"
            ]
        },
        {
            "category": "local",
            "name": "with_operand",
            "type": [
                "str",
                "bool",
                "None",
                "typing.Callable[None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "link",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "topic_el",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "handleMatch@Tex": [
        {
            "category": "arg",
            "name": "match",
            "type": [
                "typing.Callable[typing.Callable, bool]",
                "typing.Match"
            ]
        },
        {
            "category": "local",
            "name": "match",
            "type": [
                "typing.Callable[typing.Callable, bool]",
                "typing.Match"
            ]
        },
        {
            "category": "local",
            "name": "rendered",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "str",
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "span",
            "type": [
                "Element"
            ]
        }
    ],
    "handleMatch@Timestamp": [
        {
            "category": "arg",
            "name": "match",
            "type": [
                "typing.Match"
            ]
        },
        {
            "category": "local",
            "name": "match",
            "type": [
                "typing.Match"
            ]
        },
        {
            "category": "local",
            "name": "time_input_string",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "timestamp",
            "type": [
                "datetime.datetime",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "error_element",
            "type": [
                "Element"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "time_element",
            "type": [
                "Element"
            ]
        }
    ],
    "handleMatch@UnicodeEmoji": [
        {
            "category": "arg",
            "name": "match",
            "type": [
                "str",
                "typing.Pattern",
                "typing.Match",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "match",
            "type": [
                "str",
                "typing.Pattern",
                "typing.Match",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "orig_syntax",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "TEXT_PRESENTATION_RE",
            "type": [
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "tuple[None]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "codepoint",
            "type": [
                "dict",
                "dict[str, str]",
                "str"
            ]
        }
    ],
    "handleMatch@UserGroupMentionPattern": [
        {
            "category": "arg",
            "name": "m",
            "type": [
                "str",
                "core.models.Model",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "list[tuple]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "str",
                "core.models.Model",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "silent",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "db_data",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, list[typing.Any]]",
                "dict[str, typing.Union[int,str]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user_group",
            "type": [
                "app.models.group.Group",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "user_group_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "tuple[None]",
                "tuple[Element]"
            ]
        },
        {
            "category": "local",
            "name": "el",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "handleMatch@UserMentionPattern": [
        {
            "category": "arg",
            "name": "m",
            "type": [
                "str",
                "core.models.Model",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "list[tuple]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "str",
                "core.models.Model",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "silent",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "db_data",
            "type": [
                "dict",
                "list",
                "typing.Mapping",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "id",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "user",
            "type": [
                "dict[str, str]",
                "list[dict[str, typing.Any]]",
                "models.user.UserModel",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "handleMatch",
            "type": [
                "tuple[None]",
                "tuple[Element]"
            ]
        },
        {
            "category": "local",
            "name": "user_id",
            "type": [
                "None",
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "el",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "handle_image_inlining@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "found_url",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "found_url",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "info",
            "type": [
                "str",
                "tuple[int]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "handle_image_inlining",
            "type": [
                "None"
            ]
        }
    ],
    "handle_tweet_inlining@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": []
        },
        {
            "category": "arg",
            "name": "found_url",
            "type": [
                "str",
                "None",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "twitter_data",
            "type": [
                "str",
                "list",
                "typing.Callable[str,str, None]"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "list[typing.Union[str,bytes,Element]]"
            ]
        },
        {
            "category": "local",
            "name": "found_url",
            "type": [
                "str",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "info",
            "type": [
                "str",
                "bytes",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "div",
            "type": [
                "Element",
                "SubElement",
                "list[typing.Union[int,str,list,typing.Callable[str,str, None]]]"
            ]
        },
        {
            "category": "local",
            "name": "twitter_data",
            "type": [
                "str",
                "list",
                "typing.Callable[str,str, None]"
            ]
        },
        {
            "category": "return",
            "name": "handle_tweet_inlining",
            "type": [
                "None"
            ]
        }
    ],
    "handle_video_inlining@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "found_url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "found_url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "info",
            "type": [
                "str",
                "list[dict[str, typing.Any]]",
                "qutebrowser.extensions.loader.ExtensionInfo"
            ]
        },
        {
            "category": "return",
            "name": "handle_video_inlining",
            "type": [
                "None"
            ]
        }
    ],
    "handle_youtube_url_inlining@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "found_url",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "yt_image",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "found_url",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "info",
            "type": [
                "str",
                "list[dict[str, typing.Any]]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "yt_image",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "handle_youtube_url_inlining",
            "type": [
                "None"
            ]
        }
    ],
    "handle_zephyr_mirror@ZulipMarkdown": [
        {
            "category": "local",
            "name": "ZEPHYR_MIRROR_MARKDOWN_KEY",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "inlinePatterns",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "treeprocessors",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "preprocessors",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "handle_zephyr_mirror",
            "type": [
                "None"
            ]
        }
    ],
    "has_blockquote_ancestor@global": [
        {
            "category": "arg",
            "name": "element_pair",
            "type": [
                "xml.etree.ElementTree.Element",
                "list[dict]",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "element_pair",
            "type": [
                "xml.etree.ElementTree.Element",
                "list[dict]",
                "typing.Iterator",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "has_blockquote_ancestor",
            "type": [
                "bool"
            ]
        }
    ],
    "image_preview_enabled@global": [
        {
            "category": "arg",
            "name": "message",
            "type": [
                "None",
                "zerver.models.Realm",
                "bool",
                "models.Credentials"
            ]
        },
        {
            "category": "arg",
            "name": "realm",
            "type": [
                "None",
                "zerver.models.Realm",
                "str",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "arg",
            "name": "no_previews",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "image_preview_enabled",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "no_previews",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "realm",
            "type": [
                "None",
                "zerver.models.Realm",
                "str",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "None",
                "zerver.models.Realm",
                "bool",
                "models.Credentials"
            ]
        }
    ],
    "is_image@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "is_image",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "parsed_url",
            "type": [
                "urllib.parse.ParseResult",
                "urllib.parse.SplitResult"
            ]
        },
        {
            "category": "local",
            "name": "path_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "IMAGE_EXTENSIONS",
            "type": [
                "list[str]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "ext",
            "type": [
                "str"
            ]
        }
    ],
    "is_video@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "is_video",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "supported_mimetypes",
            "type": [
                "list[typing.Text]"
            ]
        }
    ],
    "list_of_tlds@global": [
        {
            "category": "local",
            "name": "common_false_positives",
            "type": [
                "set[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "list_of_tlds",
            "type": [
                "list"
            ]
        }
    ],
    "make_emoji@global": [
        {
            "category": "arg",
            "name": "codepoint",
            "type": [
                "str",
                "tuple[str]"
            ]
        },
        {
            "category": "arg",
            "name": "display_string",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "display_string",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "title",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "span",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "codepoint",
            "type": [
                "str",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "make_emoji",
            "type": [
                "Element"
            ]
        }
    ],
    "make_md_engine@global": [
        {
            "category": "arg",
            "name": "linkifiers_key",
            "type": [
                "str",
                "core.models.UserKey",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "email_gateway",
            "type": [
                "str",
                "excars.models.profiles.Profile"
            ]
        },
        {
            "category": "local",
            "name": "linkifiers_key",
            "type": [
                "str",
                "core.models.UserKey",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "email_gateway",
            "type": [
                "str",
                "excars.models.profiles.Profile"
            ]
        },
        {
            "category": "local",
            "name": "md_engine_key",
            "type": [
                "tuple[typing.Union[str,core.models.UserKey,int,excars.models.profiles.Profile]]"
            ]
        },
        {
            "category": "local",
            "name": "md_engines",
            "type": [
                "dict",
                "dict[tuple[typing.Union[str,core.models.UserKey,int,excars.models.profiles.Profile]], ZulipMarkdown]"
            ]
        },
        {
            "category": "local",
            "name": "linkifier_data",
            "type": [
                "list",
                "bytes",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "linkifiers",
            "type": [
                "bytes",
                "typing.Any"
            ]
        },
        {
            "category": "return",
            "name": "make_md_engine",
            "type": [
                "None"
            ]
        }
    ],
    "make_realm_emoji@global": [
        {
            "category": "arg",
            "name": "src",
            "type": [
                "str",
                "bool",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "display_string",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "elt",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "src",
            "type": [
                "str",
                "bool",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "display_string",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "make_realm_emoji",
            "type": [
                "Element"
            ]
        }
    ],
    "markdown_convert@global": [
        {
            "category": "arg",
            "name": "content",
            "type": [
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "arg",
            "name": "realm_alert_words_automaton",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "arg",
            "name": "message_realm",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "arg",
            "name": "sent_by_bot",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "translate_emoticons",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "url_embed_data",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "arg",
            "name": "mention_data",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "arg",
            "name": "email_gateway",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "no_previews",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "acting_user",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "local",
            "name": "realm_alert_words_automaton",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "local",
            "name": "message_realm",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "local",
            "name": "sent_by_bot",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "translate_emoticons",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "url_embed_data",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "local",
            "name": "mention_data",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "local",
            "name": "email_gateway",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "no_previews",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "acting_user",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "str",
                "dict",
                "types.RecordMetadata"
            ]
        },
        {
            "category": "return",
            "name": "markdown_convert",
            "type": [
                "str",
                "dict",
                "types.RecordMetadata"
            ]
        }
    ],
    "markdown_stats_finish@global": [
        {
            "category": "local",
            "name": "markdown_total_requests",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "markdown_total_time",
            "type": [
                "int",
                "datetime.datetime",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "markdown_time_start",
            "type": [
                "str",
                "float",
                "None",
                "datetime.timedelta"
            ]
        },
        {
            "category": "return",
            "name": "markdown_stats_finish",
            "type": [
                "None"
            ]
        }
    ],
    "markdown_stats_start@global": [
        {
            "category": "return",
            "name": "markdown_stats_start",
            "type": [
                "None"
            ]
        }
    ],
    "maybe_update_markdown_engines@global": [
        {
            "category": "arg",
            "name": "linkifiers_key",
            "type": []
        },
        {
            "category": "arg",
            "name": "email_gateway",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "linkifiers",
            "type": [
                "str",
                "list[list[typing.Any]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "linkifier_data",
            "type": [
                "dict",
                "dict[, typing.Union[str,list[list[typing.Any]],set[str]]]"
            ]
        },
        {
            "category": "local",
            "name": "email_gateway_flag",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "md_engines",
            "type": [
                "str",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "email_gateway",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "maybe_update_markdown_engines",
            "type": [
                "None"
            ]
        }
    ],
    "percent_escape_format_string@global": [
        {
            "category": "arg",
            "name": "format_string",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "format_string",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "percent_escape_format_string",
            "type": []
        }
    ],
    "possible_linked_stream_names@global": [
        {
            "category": "arg",
            "name": "content",
            "type": [
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "STREAM_LINK_REGEX",
            "type": [
                "typing.Pattern",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "STREAM_TOPIC_LINK_REGEX",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "return",
            "name": "possible_linked_stream_names",
            "type": [
                "set[typing.Generator]"
            ]
        }
    ],
    "possible_linked_topics@global": [
        {
            "category": "arg",
            "name": "content",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "STREAM_TOPIC_LINK_REGEX",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "possible_linked_topics",
            "type": [
                "set[ChannelTopicInfo]"
            ]
        }
    ],
    "prepare_linkifier_pattern@global": [
        {
            "category": "arg",
            "name": "source",
            "type": [
                "str",
                "bytes",
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "next_line",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "BEFORE_CAPTURE_GROUP",
            "type": [
                "str",
                "list[tuple[typing.Union[str,typing.Any]]]",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "OUTER_CAPTURE_GROUP",
            "type": [
                "str",
                "app.models.FileModel",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "str",
                "bytes",
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "AFTER_CAPTURE_GROUP",
            "type": [
                "list",
                "str",
                "typing.Callable[None,None,None,None,None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "prepare_linkifier_pattern",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "privacy_clean_markdown@global": [
        {
            "category": "arg",
            "name": "content",
            "type": [
                "str",
                "tuple[typing.Literal]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_privacy_re",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "str",
                "tuple[typing.Literal]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "privacy_clean_markdown",
            "type": [
                "str"
            ]
        }
    ],
    "register_linkifiers@ZulipMarkdown": [
        {
            "category": "arg",
            "name": "registry",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "registry",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "register_linkifiers",
            "type": [
                "typing.Callable"
            ]
        }
    ],
    "render_message_markdown@global": [
        {
            "category": "arg",
            "name": "message",
            "type": [
                "zerver.models.UserProfile",
                "str",
                "zerver.models.Realm"
            ]
        },
        {
            "category": "arg",
            "name": "content",
            "type": [
                "str",
                "zerver.models.Realm",
                "django.core.files.File"
            ]
        },
        {
            "category": "arg",
            "name": "realm",
            "type": [
                "None",
                "str",
                "bool",
                "zerver.models.UserMessage"
            ]
        },
        {
            "category": "arg",
            "name": "realm_alert_words_automaton",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "django.core.files.File"
            ]
        },
        {
            "category": "arg",
            "name": "url_embed_data",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "django.core.files.File"
            ]
        },
        {
            "category": "arg",
            "name": "mention_data",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "django.core.files.File"
            ]
        },
        {
            "category": "arg",
            "name": "email_gateway",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "acting_user",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "django.core.files.File"
            ]
        },
        {
            "category": "local",
            "name": "realm",
            "type": [
                "None",
                "str",
                "bool",
                "zerver.models.UserMessage",
                "zerver.models.Realm",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "zerver.models.UserProfile",
                "str",
                "zerver.models.Realm"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "str",
                "zerver.models.Realm",
                "django.core.files.File"
            ]
        },
        {
            "category": "local",
            "name": "realm_alert_words_automaton",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "django.core.files.File"
            ]
        },
        {
            "category": "local",
            "name": "url_embed_data",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "django.core.files.File"
            ]
        },
        {
            "category": "local",
            "name": "mention_data",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "django.core.files.File"
            ]
        },
        {
            "category": "local",
            "name": "email_gateway",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "acting_user",
            "type": [
                "None",
                "str",
                "zerver.models.Realm",
                "django.core.files.File"
            ]
        },
        {
            "category": "return",
            "name": "render_message_markdown",
            "type": []
        }
    ],
    "rewrite_local_links_to_relative@global": [
        {
            "category": "arg",
            "name": "db_data",
            "type": [
                "str",
                "dict",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "link",
            "type": [
                "str",
                "zam_repondeur.models.Lecture"
            ]
        },
        {
            "category": "local",
            "name": "db_data",
            "type": [
                "str",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "link",
            "type": [
                "str",
                "zam_repondeur.models.Lecture"
            ]
        },
        {
            "category": "return",
            "name": "rewrite_local_links_to_relative",
            "type": [
                "str",
                "zam_repondeur.models.Lecture"
            ]
        }
    ],
    "run@AlertWordNotificationProcessor": [
        {
            "category": "arg",
            "name": "lines",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "db_data",
            "type": [
                "dict[str, typing.Any]",
                "list",
                "xml.etree.ElementTree.Element",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "realm_alert_words_automaton",
            "type": [
                "list[str]",
                "str",
                "list",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "str",
                "list[str]",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "lines",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "run",
            "type": [
                "str",
                "list[str]"
            ]
        }
    ],
    "run@BlockQuoteProcessor": [
        {
            "category": "arg",
            "name": "parent",
            "type": [
                "markdown.util.etree.Element"
            ]
        },
        {
            "category": "arg",
            "name": "blocks",
            "type": [
                "list[str]",
                "markdown.util.etree.Element"
            ]
        },
        {
            "category": "local",
            "name": "blocks",
            "type": [
                "list[str]",
                "markdown.util.etree.Element"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "typing.Match",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "before",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "parent",
            "type": [
                "markdown.util.etree.Element"
            ]
        },
        {
            "category": "local",
            "name": "line",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "quote",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        }
    ],
    "run@InlineImageProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": [
                "lxml.etree",
                "\"Node\"",
                "None",
                "xml.etree.ElementTree.Element"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "lxml.etree",
                "\"Node\"",
                "None",
                "xml.etree.ElementTree.Element"
            ]
        },
        {
            "category": "local",
            "name": "found_imgs",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        }
    ],
    "run@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": [
                "xml.etree.cElementTree.Element"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "xml.etree.cElementTree.Element"
            ]
        },
        {
            "category": "local",
            "name": "found_url",
            "type": [
                "list",
                "set",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "unique_urls",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "unique_previewable_urls",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "parsed_url",
            "type": [
                "urllib.parse.ParseResult"
            ]
        },
        {
            "category": "local",
            "name": "path_id",
            "type": [
                "str",
                "list",
                "list[list[str]]"
            ]
        },
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "processed_urls",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "rendered_tweet_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "dropbox_image",
            "type": [
                "str",
                "typing.Generator[typing.Optional[str]]"
            ]
        },
        {
            "category": "local",
            "name": "class_attr",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "is_image",
            "type": [
                "bool",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "image_source",
            "type": [
                "str",
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "twitter_data",
            "type": [
                "dict[str, typing.Any]",
                "list[str]",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "extracted_data",
            "type": [
                "dict[str, typing.Union[None,typing.Any,str]]",
                "list[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "title",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        }
    ],
    "run@InlineVideoProcessor": [
        {
            "category": "arg",
            "name": "root",
            "type": [
                "xml.etree.cElementTree.Element",
                "\"Node\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "xml.etree.cElementTree.Element",
                "\"Node\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "found_videos",
            "type": [
                "list",
                "Element"
            ]
        },
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        }
    ],
    "run@MarkdownListPreprocessor": [
        {
            "category": "arg",
            "name": "lines",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "inserts",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "in_code_fence",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "open_fences",
            "type": [
                "list",
                "list[Fence]"
            ]
        },
        {
            "category": "local",
            "name": "lines",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "str",
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "is_code",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "matches_last_fence",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "closes_last_fence",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "fence",
            "type": [
                "Fence"
            ]
        },
        {
            "category": "local",
            "name": "li1",
            "type": [
                "list",
                "list[int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "li2",
            "type": [
                "list",
                "list[int]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "run",
            "type": [
                "str",
                "list[typing.Text]"
            ]
        }
    ],
    "sanitize_url@global": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "parts",
            "type": [
                "urllib.parse.ParseResult",
                "urllib.parse.SplitResult"
            ]
        },
        {
            "category": "local",
            "name": "scheme",
            "type": [
                "str",
                "list[typing.OrderedDict]",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "netloc",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "query",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fragment",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "sanitize_url",
            "type": [
                "typing.Text",
                "dict",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "allowed_schemes",
            "type": [
                "list[str]",
                "set[str]",
                "tuple[str]"
            ]
        }
    ],
    "set_text@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "text",
            "type": []
        },
        {
            "category": "return",
            "name": "set_text",
            "type": [
                "None"
            ]
        }
    ],
    "topic_links@global": [
        {
            "category": "arg",
            "name": "linkifiers_key",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "topic_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "matches",
            "type": [
                "list",
                "str",
                "typing.Match",
                "None",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "linkifiers_key",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "linkifiers",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "precedence",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "options_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "linkifier",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "raw_pattern",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "pos",
            "type": [
                "int",
                "str",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "topic_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "int",
                "typing.Match",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "match_details",
            "type": [
                "str",
                "dict[str, str]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "OUTER_CAPTURE_GROUP",
            "type": [
                "str",
                "app.models.FileModel",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "match_text",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "AFTER_CAPTURE_GROUP",
            "type": [
                "list",
                "str",
                "typing.Callable[None,None,None,None,None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "basic_link_splitter",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "next_split",
            "type": [
                "str",
                "int",
                "dict[str, tuple[str]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "end",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "link_match",
            "type": [
                "frozenset",
                "typing.Match",
                "None",
                "typing.Callable[None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "actual_match_url",
            "type": [
                "str",
                "list",
                "classmethod"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "tuple",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "typing.Pattern",
                "list",
                "classmethod"
            ]
        },
        {
            "category": "local",
            "name": "applied_matches",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "topic_links",
            "type": []
        }
    ],
    "twitter_link@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "medtagger.types.TaskID"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "medtagger.types.TaskID"
            ]
        },
        {
            "category": "local",
            "name": "tweet_id",
            "type": [
                "lib.model.category.category.CategoryID",
                "str",
                "typing.Type",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "twitter_link",
            "type": [
                "None",
                "str",
                "typing.Callable",
                "typing.Type",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "user",
            "type": [
                "str",
                "dict[str, str]",
                "starlette_auth.tables.User"
            ]
        },
        {
            "category": "local",
            "name": "tweet",
            "type": [
                "Element",
                "lists.models.Todo",
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "img_a",
            "type": [
                "SubElement",
                "list",
                "str",
                "None",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "profile_img",
            "type": [
                "SubElement"
            ]
        },
        {
            "category": "local",
            "name": "image_url",
            "type": [
                "str",
                "dict[str, tuple[typing.Union[str,typing.Any]]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "urls",
            "type": [
                "str",
                "dict[str, dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "user_mentions",
            "type": [
                "str",
                "typing.Callable[None, str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "media",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "p",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "span",
            "type": [
                "str",
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "img_div",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "img",
            "type": [
                "dict[str, typing.Any]",
                "list[types.SimpleNamespace]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "markdown_logger",
            "type": [
                "logging.Logger",
                "server.openslides.utils.logging.LoggerAdapter"
            ]
        }
    ],
    "twitter_text@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "text",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "urls",
            "type": [
                "str",
                "list[str]",
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "user_mentions",
            "type": [
                "str",
                "list[str]",
                "set[str]"
            ]
        },
        {
            "category": "arg",
            "name": "media",
            "type": [
                "str",
                "list[str]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "to_process",
            "type": [
                "list",
                "list[dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "url_data",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "urls",
            "type": [
                "str",
                "list[str]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "user_mention",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "user_mentions",
            "type": [
                "str",
                "list[str]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "screen_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "mention_string",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "media_item",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "media",
            "type": [
                "str",
                "list[str]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "short_url",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "expanded_url",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "p",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "current_node",
            "type": [
                "Element",
                "xml.etree.ElementTree.Element",
                "list[list[typing.Any]]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "current_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "item",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "elem",
            "type": [
                "xml.etree.ElementTree.Element",
                "list[list[typing.Any]]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "twitter_text",
            "type": [
                "Element"
            ]
        }
    ],
    "url_embed_preview_enabled@global": [
        {
            "category": "arg",
            "name": "message",
            "type": [
                "None",
                "bool",
                "str",
                "zerver.models.Realm"
            ]
        },
        {
            "category": "arg",
            "name": "realm",
            "type": [
                "None",
                "str",
                "bool",
                "zerver.models.Realm"
            ]
        },
        {
            "category": "arg",
            "name": "no_previews",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "url_embed_preview_enabled",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "no_previews",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "realm",
            "type": [
                "None",
                "str",
                "bool",
                "zerver.models.Realm"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "None",
                "bool",
                "str",
                "zerver.models.Realm"
            ]
        }
    ],
    "url_to_a@global": [
        {
            "category": "arg",
            "name": "db_data",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "text",
            "type": [
                "None",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "a",
            "type": [
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "href",
            "type": [
                "str",
                "None",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "url_to_a",
            "type": [
                "str",
                "Element"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "None",
                "str",
                "dict",
                "Element",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "db_data",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "a_",
            "type": [
                "str",
                "Element",
                "list[str]"
            ]
        }
    ],
    "verbose_compile@global": [
        {
            "category": "arg",
            "name": "pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "verbose_compile",
            "type": []
        }
    ],
    "vimeo_id@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "vimeo_id",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "vimeo_re",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "match",
            "type": [
                "None",
                "typing.Match",
                "typing.Pattern"
            ]
        }
    ],
    "vimeo_title@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "extracted_data",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "extracted_data",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "extracted_data_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "vimeo_title",
            "type": [
                "typing.Text",
                "None"
            ]
        }
    ],
    "walk_tree@global": [
        {
            "category": "arg",
            "name": "root",
            "type": [
                "int",
                "\"PNRelationMetaData\"",
                "None",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "processor",
            "type": [
                "bool",
                "typing.AbstractSet",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "stop_after_first",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "results",
            "type": [
                "list",
                "list[typing.Union[list,set,dict]]"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "int",
                "\"PNRelationMetaData\"",
                "None",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "queue",
            "type": [
                "typing.Deque",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "currElement",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "set",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "stop_after_first",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "walk_tree",
            "type": [
                "list[typing.Union[list,set,dict]]"
            ]
        }
    ],
    "walk_tree_with_family@global": [
        {
            "category": "arg",
            "name": "root",
            "type": [
                "markdown.util.etree.ElementTree"
            ]
        },
        {
            "category": "arg",
            "name": "processor",
            "type": [
                "lxml.etree"
            ]
        },
        {
            "category": "local",
            "name": "results",
            "type": [
                "list",
                "list[ResultWithFamily]"
            ]
        },
        {
            "category": "local",
            "name": "root",
            "type": [
                "markdown.util.etree.ElementTree"
            ]
        },
        {
            "category": "local",
            "name": "queue",
            "type": [
                "typing.Any",
                "typing.Deque"
            ]
        },
        {
            "category": "local",
            "name": "currElementPair",
            "type": [
                "list",
                "list[int]",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "currElementPair_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "list[None]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "grandparent",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "family",
            "type": [
                "ElementFamily"
            ]
        },
        {
            "category": "return",
            "name": "walk_tree_with_family",
            "type": [
                "list[ResultWithFamily]"
            ]
        }
    ],
    "youtube_id@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "youtube_id",
            "type": [
                "None",
                "str",
                "typing.Callable[object, int]"
            ]
        },
        {
            "category": "local",
            "name": "id",
            "type": [
                "None",
                "str",
                "typing.Callable[object, int]"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "split_url",
            "type": [
                "typing.Pattern",
                "urllib.parse.ParseResult",
                "six.moves.urllib.parse.SplitResult"
            ]
        }
    ],
    "youtube_image@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "yt_id",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "youtube_image",
            "type": [
                "typing.Text",
                "None"
            ]
        }
    ],
    "youtube_title@InlineInterestingLinkProcessor": [
        {
            "category": "arg",
            "name": "extracted_data",
            "type": [
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "extracted_data",
            "type": [
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "extracted_data_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "youtube_title",
            "type": [
                "typing.Text",
                "None"
            ]
        }
    ],
    "zulip_specific_link_changes@LinkInlineProcessor": [
        {
            "category": "arg",
            "name": "el",
            "type": []
        },
        {
            "category": "local",
            "name": "href",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "zulip_specific_link_changes",
            "type": [
                "None"
            ]
        }
    ]
}