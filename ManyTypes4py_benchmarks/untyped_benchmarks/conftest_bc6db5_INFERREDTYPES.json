{
    "callback@global": [
        {
            "category": "return",
            "name": "callback",
            "type": []
        }
    ],
    "controller@global": [
        {
            "category": "return",
            "name": "controller",
            "type": [
                "Controller"
            ]
        }
    ],
    "controller_water_use_summary@global": [
        {
            "category": "return",
            "name": "controller_water_use_summary",
            "type": [
                "ControllerWaterUseSummary"
            ]
        }
    ],
    "global@global": [],
    "mock_add_config_entry@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "mock_config_entry",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "mock_pydrawise",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "mock_add_config_entry",
            "type": []
        }
    ],
    "mock_added_config_entry@global": [
        {
            "category": "arg",
            "name": "mock_add_config_entry",
            "type": [
                "bool",
                "mock.Mock",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "mock_added_config_entry",
            "type": [
                "dict[str, str]",
                "str"
            ]
        }
    ],
    "mock_auth@global": [
        {
            "category": "return",
            "name": "mock_auth",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "mock_config_entry@global": [
        {
            "category": "return",
            "name": "mock_config_entry",
            "type": [
                "MockConfigEntry"
            ]
        }
    ],
    "mock_config_entry_legacy@global": [
        {
            "category": "return",
            "name": "mock_config_entry_legacy",
            "type": [
                "MockConfigEntry"
            ]
        }
    ],
    "mock_legacy_pydrawise@global": [
        {
            "category": "arg",
            "name": "user",
            "type": [
                "typing.Callable",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "controller",
            "type": [
                "dict",
                "str",
                "core.models.Grouping"
            ]
        },
        {
            "category": "arg",
            "name": "zones",
            "type": []
        },
        {
            "category": "local",
            "name": "controller",
            "type": [
                "dict",
                "str",
                "core.models.Grouping"
            ]
        },
        {
            "category": "local",
            "name": "user_",
            "type": [
                "list[typing.Union[dict,str,core.models.Grouping]]"
            ]
        },
        {
            "category": "local",
            "name": "user",
            "type": [
                "typing.Callable",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "mock_pydrawise_",
            "type": [
                "typing.Callable",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "mock_legacy_pydrawise",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "mock_pydrawise@global": [
        {
            "category": "arg",
            "name": "user",
            "type": [
                "str",
                "int",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "controller",
            "type": [
                "str",
                "bool",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "zones",
            "type": [
                "dict",
                "bug_buddy.schema.Test",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "sensors",
            "type": [
                "collections.abc.Awaitable",
                "\"prefecengine.state.State\"",
                "bug_buddy.schema.Test"
            ]
        },
        {
            "category": "arg",
            "name": "controller_water_use_summary",
            "type": [
                "homeassistancore.HomeAssistant",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "controller",
            "type": [
                "str",
                "bool",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "user_",
            "type": [
                "list[typing.Union[str,bool,tests.test_util.aiohttp.AiohttpClientMocker]]"
            ]
        },
        {
            "category": "local",
            "name": "sensors",
            "type": [
                "collections.abc.Awaitable",
                "\"prefecengine.state.State\"",
                "bug_buddy.schema.Test"
            ]
        },
        {
            "category": "local",
            "name": "controller_",
            "type": [
                "collections.abc.Awaitable",
                "\"prefecengine.state.State\"",
                "bug_buddy.schema.Test"
            ]
        },
        {
            "category": "local",
            "name": "user",
            "type": [
                "str",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "mock_pydrawise_",
            "type": [
                "str",
                "int",
                "dict",
                "bug_buddy.schema.Test",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "zones",
            "type": [
                "dict",
                "bug_buddy.schema.Test",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "controller_water_use_summary",
            "type": [
                "homeassistancore.HomeAssistant",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "mock_pydrawise",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "mock_setup_entry@global": [
        {
            "category": "return",
            "name": "mock_setup_entry",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "sensors@global": [
        {
            "category": "return",
            "name": "sensors",
            "type": [
                "list[Sensor]"
            ]
        }
    ],
    "user@global": [
        {
            "category": "return",
            "name": "user",
            "type": [
                "User"
            ]
        }
    ],
    "zones@global": [
        {
            "category": "return",
            "name": "zones",
            "type": [
                "list[Zone]"
            ]
        }
    ]
}