{
    "__init__@BaseGrouper": [
        {
            "category": "arg",
            "name": "axis",
            "type": [
                "pandas.core.indexes.api.Index",
                "int",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "groupings",
            "type": [
                "bool",
                "typing.Sequence[float]"
            ]
        },
        {
            "category": "arg",
            "name": "sort",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "dropna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "axis",
            "type": [
                "pandas.core.indexes.api.Index",
                "int",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "groupings",
            "type": [
                "bool",
                "typing.Sequence[float]"
            ]
        },
        {
            "category": "local",
            "name": "_groupings",
            "type": [
                "bool",
                "typing.Sequence[float]"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_sort",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dropna",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@BinGrouper": [
        {
            "category": "arg",
            "name": "bins",
            "type": [
                "int",
                "list[int]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "binlabels",
            "type": [
                "int",
                "typing.Sequence[int]",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "indexer",
            "type": [
                "None",
                "int",
                "numpy.ndarray",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "bins",
            "type": [
                "int",
                "list[int]",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "binlabels",
            "type": [
                "int",
                "typing.Sequence[int]",
                "list[int]",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "None",
                "int",
                "numpy.ndarray",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@DataSplitter": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "typing.Callable[typing.Any, None]",
                "list[str]",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "ngroups",
            "type": [
                "list[int]",
                "dict[str, int]",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "sort_idx",
            "type": [
                "int",
                "dict[str, dict[str, typing.Any]]",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "arg",
            "name": "sorted_ids",
            "type": [
                "int",
                "None",
                "dict[str, tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "typing.Callable[typing.Any, None]",
                "list[str]",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ngroups",
            "type": [
                "list[int]",
                "dict[str, int]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "sorted_ids",
            "type": [
                "int",
                "None",
                "dict[str, tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "_slabels",
            "type": [
                "int",
                "None",
                "dict[str, tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "sort_idx",
            "type": [
                "int",
                "dict[str, dict[str, typing.Any]]",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "local",
            "name": "_sort_idx",
            "type": [
                "int",
                "dict[str, dict[str, typing.Any]]",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@WrappedCythonOp": [
        {
            "category": "arg",
            "name": "kind",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "how",
            "type": [
                "bool",
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "has_dropped_na",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "kind",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "bool",
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "has_dropped_na",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__iter__@BaseGrouper": [
        {
            "category": "return",
            "name": "__iter__",
            "type": []
        }
    ],
    "__iter__@DataSplitter": [
        {
            "category": "return",
            "name": "__iter__",
            "type": [
                "None",
                "typing.Generator"
            ]
        }
    ],
    "_aggregate_series_pure_python@BaseGrouper": [
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "typing.Callable",
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "initialized",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "typing.Callable",
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "local",
            "name": "splitter",
            "type": [
                "frozenset",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "i",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "group",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "typing.Iterator",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "_aggregate_series_pure_python",
            "type": []
        }
    ],
    "_call_cython_op@WrappedCythonOp": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "ngroups",
            "type": [
                "numpy.ndarray",
                "tuple[int]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "comp_ids",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "mask",
            "type": [
                "numpy.ndarray",
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "result_mask",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "numpy.ndarray",
                "list",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "orig_values",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "is_numeric",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "numpy.ndarray",
                "None",
                "int",
                "list[int]",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "result_mask",
            "type": [
                "int",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ngroups",
            "type": [
                "numpy.ndarray",
                "tuple[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "comp_ids",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "cutoff",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "empty_groups",
            "type": [
                "list",
                "int",
                "set"
            ]
        },
        {
            "category": "return",
            "name": "_call_cython_op",
            "type": []
        }
    ],
    "_chop@DataSplitter": [
        {
            "category": "arg",
            "name": "sdata",
            "type": [
                "slice",
                "src.autoks.core.covariance.Covariance",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "slice_obj",
            "type": [
                "slice",
                "src.autoks.core.covariance.Covariance",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "_chop",
            "type": [
                "None"
            ]
        }
    ],
    "_chop@FrameSplitter": [
        {
            "category": "arg",
            "name": "sdata",
            "type": [
                "pandas.core.frame.DataFrame",
                "slice",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "slice_obj",
            "type": [
                "int",
                "slice",
                "pandas.DataFrame",
                "numpy.ndarray",
                "numpy.void"
            ]
        },
        {
            "category": "local",
            "name": "slice_obj",
            "type": [
                "int",
                "slice",
                "pandas.DataFrame",
                "numpy.ndarray",
                "numpy.void"
            ]
        },
        {
            "category": "local",
            "name": "mgr",
            "type": [
                "list",
                "list[collections.abc.Coroutine]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "sdata",
            "type": [
                "pandas.core.frame.DataFrame",
                "slice",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "_chop",
            "type": []
        }
    ],
    "_chop@SeriesSplitter": [
        {
            "category": "arg",
            "name": "sdata",
            "type": [
                "int",
                "slice",
                "numpy.ndarray",
                "numpy.void",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "slice_obj",
            "type": [
                "int",
                "slice",
                "numpy.ndarray",
                "numpy.void"
            ]
        },
        {
            "category": "local",
            "name": "slice_obj",
            "type": [
                "int",
                "slice",
                "numpy.ndarray",
                "numpy.void"
            ]
        },
        {
            "category": "local",
            "name": "mgr",
            "type": [
                "list",
                "list[collections.abc.Coroutine]",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "local",
            "name": "sdata",
            "type": [
                "int",
                "slice",
                "numpy.ndarray",
                "numpy.void",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_chop",
            "type": []
        }
    ],
    "_cython_op_ndim_compat@WrappedCythonOp": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "ngroups",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "comp_ids",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "mask",
            "type": [
                "None",
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "result_mask",
            "type": [
                "None",
                "int",
                "static_frame.core.util.DtypesSpecifier",
                "typing.Hashable"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "values2d",
            "type": [
                "dict",
                "int",
                "dict[int, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "mask",
            "type": [
                "None",
                "int",
                "numpy.ndarray",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "result_mask",
            "type": [
                "None",
                "int",
                "static_frame.core.util.DtypesSpecifier",
                "typing.Hashable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "ngroups",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "comp_ids",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "_cython_op_ndim_compat",
            "type": []
        }
    ],
    "_cython_operation@BaseGrouper": [
        {
            "category": "arg",
            "name": "kind",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "int",
                "str",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "how",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "axis",
            "type": [
                "int",
                "str",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "kind",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cy_op",
            "type": [
                "WrappedCythonOp"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "str",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "axis",
            "type": [
                "int",
                "str",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_cython_operation",
            "type": []
        }
    ],
    "_get_cython_function@WrappedCythonOp": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "bool",
                "str",
                "None",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "kind",
            "type": [
                "bool",
                "str",
                "None",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "how",
            "type": [
                "bool",
                "numpy.ndarray",
                "typing.Iterable[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "str",
                "typing.Callable[numpy.ndarray, numpy.ndarray]"
            ]
        },
        {
            "category": "arg",
            "name": "is_numeric",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "str",
                "typing.Callable[numpy.ndarray, numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "bool",
                "str",
                "None",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "kind",
            "type": [
                "bool",
                "str",
                "None",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "bool",
                "numpy.ndarray",
                "typing.Iterable[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "is_numeric",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_get_cython_function",
            "type": []
        }
    ],
    "_get_cython_vals@WrappedCythonOp": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "float",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "float",
                "bool",
                "str",
                "int",
                "property"
            ]
        },
        {
            "category": "return",
            "name": "_get_cython_vals",
            "type": [
                "float",
                "bool",
                "str",
                "property"
            ]
        }
    ],
    "_get_out_dtype@WrappedCythonOp": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "static_frame.core.util.DtypeSpecifier",
                "bool",
                "numpy.dtype",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "int",
                "str",
                "Packages.numpy.st3_osx_x64.numpy.oldnumeric.ma.masked_unary_operation"
            ]
        },
        {
            "category": "local",
            "name": "out_dtype",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "static_frame.core.util.DtypeSpecifier",
                "bool",
                "numpy.dtype",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_get_out_dtype",
            "type": []
        }
    ],
    "_get_output_shape@WrappedCythonOp": [
        {
            "category": "arg",
            "name": "ngroups",
            "type": [
                "float",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "numpy.ndarray",
                "typing.Sequence[typing.Hashable]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "kind",
            "type": [
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "arity",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ngroups",
            "type": [
                "float",
                "bool",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "out_shape",
            "type": [
                "tuple[typing.Union[float,bool,list[str]]]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "numpy.ndarray",
                "typing.Sequence[typing.Hashable]",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_get_output_shape",
            "type": [
                "tuple[typing.Union[float,bool,list[str]]]"
            ]
        }
    ],
    "_get_result_dtype@WrappedCythonOp": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "None",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "int",
                "str",
                "Packages.numpy.st3_osx_x64.numpy.oldnumeric.ma.masked_unary_operation"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "None",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_get_result_dtype",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "None",
                "typing.Type"
            ]
        }
    ],
    "_get_splitter@BaseGrouper": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "list[dict[str, typing.Any]]",
                "pandas.DataFrame",
                "list[list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "list[dict[str, typing.Any]]",
                "pandas.DataFrame",
                "list[list[str]]",
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "_get_splitter",
            "type": []
        }
    ],
    "_is_indexed_like@global": [
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "databricks.koalas.frame.DataFrame",
                "typing.Callable[..., static_frame.core.index_base.IndexBase]",
                "None",
                "static_frame.core.util.NameType"
            ]
        },
        {
            "category": "arg",
            "name": "axes",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "databricks.koalas.frame.DataFrame",
                "typing.Callable[..., static_frame.core.index_base.IndexBase]",
                "None",
                "static_frame.core.util.NameType",
                "Series",
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "axes",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_is_indexed_like",
            "type": [
                "bool"
            ]
        }
    ],
    "_ob_index_and_ids@BaseGrouper": [
        {
            "category": "arg",
            "name": "levels",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "codes",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "names",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "sorts",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sorts",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sort",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "consistent_sorting",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "sort_in_compress",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "levels",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "level",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "codes",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "group_index",
            "type": [
                "int",
                "typing.Type",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "ob_ids",
            "type": [
                "int",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "obs_group_ids",
            "type": [
                "list",
                "set",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ob_index_codes",
            "type": [
                "int",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ob_index",
            "type": [
                "MultiIndex",
                "list",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n_levels",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "drop_levels",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "sorter",
            "type": [
                "int",
                "list",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_ob_index_and_ids",
            "type": [
                "tuple[typing.Union[MultiIndex,list,list[int],int,str]]"
            ]
        }
    ],
    "_observed_grouper@BaseGrouper": [
        {
            "category": "local",
            "name": "groupings",
            "type": [
                "dict[typing.Union[str,None], tuple[typing.Any]]",
                "topicdb.core.models.collaborationmode.CollaborationMode",
                "pandas.core.groupby.ops.BaseGrouper",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "ping",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "grouper",
            "type": [
                "BaseGrouper"
            ]
        },
        {
            "category": "return",
            "name": "_observed_grouper",
            "type": [
                "BaseGrouper"
            ]
        }
    ],
    "_sorted_data@DataSplitter": [
        {
            "category": "return",
            "name": "_sorted_data",
            "type": [
                "numpy.ndarray",
                "dict[str, bool]",
                "list[numpy.ndarray]"
            ]
        }
    ],
    "_sorted_ids@BaseGrouper": [
        {
            "category": "return",
            "name": "_sorted_ids",
            "type": []
        }
    ],
    "_unob_index_and_ids@BaseGrouper": [
        {
            "category": "arg",
            "name": "levels",
            "type": [
                "str",
                "set[str]",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "codes",
            "type": [
                "int",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "names",
            "type": [
                "int",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "levels",
            "type": [
                "str",
                "set[str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "level",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "codes",
            "type": [
                "int",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "unob_ids",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "int",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "_unob_index_and_ids",
            "type": [
                "tuple[typing.Union[int,str]]"
            ]
        }
    ],
    "_validate_axis@WrappedCythonOp": [
        {
            "category": "arg",
            "name": "axis",
            "type": [
                "int",
                "numpy.ndarray",
                "pymatgen.util.Vector3Like"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "int",
                "numpy.ndarray",
                "pymatgen.util.Vector3Like"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "numpy.ndarray",
                "pymatgen.util.Vector3Like"
            ]
        },
        {
            "category": "return",
            "name": "_validate_axis",
            "type": [
                "None"
            ]
        }
    ],
    "agg_series@BaseGrouper": [
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "static_frame.core.util.DtypeSpecifier",
                "static_frame.core.util.UFunc",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "func",
            "type": [
                "bool",
                "static_frame.core.util.IndexConstructor",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "preserve_dtype",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "static_frame.core.util.DtypeSpecifier",
                "static_frame.core.util.UFunc",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "preserve_dtype",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "bool",
                "static_frame.core.util.IndexConstructor",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "eth.abc.BlockImportResult",
                "typing.Callable[None,None, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "agg_series",
            "type": []
        }
    ],
    "apply_groupwise@BaseGrouper": [
        {
            "category": "arg",
            "name": "f",
            "type": [
                "bytes",
                "typing.IO"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bytes",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "mutated",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bytes",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "splitter",
            "type": [
                "str",
                "frozenset",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result_values",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "f",
            "type": [
                "bytes",
                "typing.IO"
            ]
        },
        {
            "category": "return",
            "name": "apply_groupwise",
            "type": [
                "tuple[typing.Union[list,bool]]"
            ]
        }
    ],
    "check_result_array@global": [
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "numpy.ndarray",
                "util.ArrayLike"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.dtype",
                "typing.Iterable",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "numpy.ndarray",
                "util.ArrayLike",
                "np_@_ndarray"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "numpy.dtype",
                "typing.Iterable",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "check_result_array",
            "type": [
                "None"
            ]
        }
    ],
    "codes@BaseGrouper": [
        {
            "category": "return",
            "name": "codes",
            "type": [
                "list"
            ]
        }
    ],
    "codes@BinGrouper": [
        {
            "category": "return",
            "name": "codes",
            "type": [
                "list"
            ]
        }
    ],
    "codes_info@BaseGrouper": [
        {
            "category": "return",
            "name": "codes_info",
            "type": []
        }
    ],
    "codes_info@BinGrouper": [
        {
            "category": "local",
            "name": "ids",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "codes_info",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "cython_operation@WrappedCythonOp": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "axis",
            "type": [
                "numpy.ndarray",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "comp_ids",
            "type": [
                "int",
                "bytes",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "ngroups",
            "type": [
                "int",
                "bytes",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "axis",
            "type": [
                "numpy.ndarray",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ngroups",
            "type": [
                "int",
                "bytes",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "comp_ids",
            "type": [
                "int",
                "bytes",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "cython_operation",
            "type": []
        }
    ],
    "extract_result@global": [
        {
            "category": "arg",
            "name": "res",
            "type": [
                "dict",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "dict",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "extract_result",
            "type": [
                "dict",
                "numpy.ndarray"
            ]
        }
    ],
    "get_group_levels@BaseGrouper": [
        {
            "category": "local",
            "name": "result_index",
            "type": [
                "int",
                "range",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "get_group_levels",
            "type": [
                "typing.Generator[typing.Union[int,range,list[int]]]",
                "typing.Generator"
            ]
        }
    ],
    "get_iterator@BaseGrouper": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "str",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "str",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "splitter",
            "type": [
                "str",
                "frozenset",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "get_iterator",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "get_iterator@BinGrouper": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "slicer",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "label",
            "type": [
                "NaT"
            ]
        },
        {
            "category": "return",
            "name": "get_iterator",
            "type": [
                "typing.Generator[tuple]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        }
    ],
    "get_kind_from_how@WrappedCythonOp": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.ClassVar"
            ]
        },
        {
            "category": "arg",
            "name": "how",
            "type": [
                "str",
                "typing.ClassVar"
            ]
        },
        {
            "category": "local",
            "name": "how",
            "type": [
                "str",
                "typing.ClassVar"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "str",
                "typing.ClassVar"
            ]
        },
        {
            "category": "return",
            "name": "get_kind_from_how",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "global@global": [],
    "groupings@BaseGrouper": [
        {
            "category": "return",
            "name": "groupings",
            "type": []
        }
    ],
    "groupings@BinGrouper": [
        {
            "category": "return",
            "name": "groupings",
            "type": [
                "list"
            ]
        }
    ],
    "groups@BaseGrouper": [
        {
            "category": "return",
            "name": "groups",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "categories",
            "type": [
                "Categorical"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict"
            ]
        }
    ],
    "groups@BinGrouper": [
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "groups",
            "type": [
                "dict"
            ]
        }
    ],
    "has_dropped_na@BaseGrouper": [
        {
            "category": "return",
            "name": "has_dropped_na",
            "type": [
                "bool"
            ]
        }
    ],
    "ids@BaseGrouper": [
        {
            "category": "return",
            "name": "ids",
            "type": []
        }
    ],
    "indices@BaseGrouper": [
        {
            "category": "return",
            "name": "indices",
            "type": []
        },
        {
            "category": "local",
            "name": "codes_list",
            "type": [
                "list"
            ]
        }
    ],
    "indices@BinGrouper": [
        {
            "category": "local",
            "name": "i",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "label",
            "type": [
                "NaT"
            ]
        },
        {
            "category": "return",
            "name": "indices",
            "type": []
        }
    ],
    "is_monotonic@BaseGrouper": [
        {
            "category": "return",
            "name": "is_monotonic",
            "type": []
        }
    ],
    "levels@BaseGrouper": [
        {
            "category": "return",
            "name": "levels",
            "type": [
                "list"
            ]
        }
    ],
    "levels@BinGrouper": [
        {
            "category": "return",
            "name": "levels",
            "type": [
                "list"
            ]
        }
    ],
    "names@BaseGrouper": [
        {
            "category": "return",
            "name": "names",
            "type": [
                "list"
            ]
        }
    ],
    "names@BinGrouper": [
        {
            "category": "return",
            "name": "names",
            "type": [
                "list"
            ]
        }
    ],
    "ngroups@BaseGrouper": [
        {
            "category": "return",
            "name": "ngroups",
            "type": [
                "int"
            ]
        }
    ],
    "nkeys@BaseGrouper": [
        {
            "category": "return",
            "name": "nkeys",
            "type": [
                "int"
            ]
        }
    ],
    "nkeys@BinGrouper": [
        {
            "category": "return",
            "name": "nkeys",
            "type": [
                "int"
            ]
        }
    ],
    "observed_grouper@BaseGrouper": [
        {
            "category": "return",
            "name": "observed_grouper",
            "type": [
                "BaseGrouper"
            ]
        }
    ],
    "observed_grouper@BinGrouper": [
        {
            "category": "return",
            "name": "observed_grouper",
            "type": [
                "BinGrouper"
            ]
        }
    ],
    "result_ilocs@BaseGrouper": [
        {
            "category": "local",
            "name": "ids",
            "type": [
                "int",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "result_ilocs",
            "type": []
        }
    ],
    "result_index@BaseGrouper": [
        {
            "category": "return",
            "name": "result_index",
            "type": []
        }
    ],
    "result_index_and_ids@BaseGrouper": [
        {
            "category": "local",
            "name": "levels",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "obs",
            "type": [
                "list[bool]",
                "list",
                "numpy.ndarray",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "sorts",
            "type": [
                "list",
                "list[str]",
                "range"
            ]
        },
        {
            "category": "local",
            "name": "names",
            "type": [
                "str",
                "list[str]",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "result_index_",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "codes",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ids",
            "type": [
                "int",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "n_levels",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "sorter",
            "type": [
                "list",
                "list[tuple[typing.Union[str,typing.Any]]]",
                "typing.Callable[None,None,None,None,None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "result_index_and_ids",
            "type": []
        }
    ],
    "result_index_and_ids@BinGrouper": [
        {
            "category": "local",
            "name": "ngroups",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "result_index_and_ids",
            "type": [
                "tuple"
            ]
        }
    ],
    "size@BaseGrouper": [
        {
            "category": "local",
            "name": "ids",
            "type": [
                "int",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "ngroups",
            "type": [
                "int",
                "float",
                "typing.Callable[None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "out",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "size",
            "type": [
                "Series"
            ]
        }
    ]
}