{
    "big_gym_multi@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "big_gym_multi",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "conformant_gp@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "conformant_gp",
            "type": [
                "str",
                "bool",
                "None"
            ]
        }
    ],
    "conformant_ng_full_gym@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "conformant_ng_full_gym",
            "type": [
                "dict",
                "str"
            ]
        }
    ],
    "conformant_planning@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "specific_problem",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "conformant_planning",
            "type": [
                "str",
                "bool",
                "typing.Type"
            ]
        }
    ],
    "deterministic_gym_multi@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "deterministic_gym_multi",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "global@global": [],
    "gp@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "gp",
            "type": [
                "str",
                "typing.IO",
                "\"Machine\""
            ]
        }
    ],
    "gym_budget_modifier@global": [
        {
            "category": "arg",
            "name": "budgets",
            "type": []
        },
        {
            "category": "local",
            "name": "budgets",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "gym_budget_modifier",
            "type": [
                "list"
            ]
        }
    ],
    "gym_multifid_anm@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "num_workers",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "xp",
            "type": [
                "Experiment"
            ]
        },
        {
            "category": "return",
            "name": "gym_multifid_anm",
            "type": [
                "typing.Generator[Experiment]"
            ]
        }
    ],
    "gym_optimizer_modifier@global": [
        {
            "category": "arg",
            "name": "optims",
            "type": [
                "str",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "optimizer_string",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "optims",
            "type": [
                "str",
                "bytes",
                "list[typing.Text]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "o",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "gym_optimizer_modifier",
            "type": [
                "str",
                "bytes",
                "list[typing.Text]"
            ]
        }
    ],
    "gym_problem@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "specific_problem",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "conformant",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "big_noise",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "multi_scale",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "greedy_bias",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "conformant",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "specific_problem",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "funcs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "multi_scale",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "scale",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "greedy_bias",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "control",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "optims",
            "type": [
                "list[typing.Text]",
                "list[int]",
                "dict[str, typing.Union[int,str]]",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "big_noise",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "budgets",
            "type": [
                "list[int]",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "num_workers",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "algo",
            "type": [
                "int",
                "str",
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "xp",
            "type": [
                "Experiment"
            ]
        },
        {
            "category": "local",
            "name": "xp_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "gym_problem",
            "type": [
                "typing.Generator[Experiment]"
            ]
        }
    ],
    "gym_problem_modifier@global": [
        {
            "category": "arg",
            "name": "specific_problem",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "specific_problem",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict[typing.Any, str]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "gym_problem_modifier",
            "type": [
                "str",
                "dict[typing.Any, str]",
                "int"
            ]
        }
    ],
    "multi_ng_full_gym@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "multi_ng_full_gym",
            "type": [
                "str"
            ]
        }
    ],
    "multi_structured_ng_full_gym@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "bool",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "bool",
                "float",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "multi_structured_ng_full_gym",
            "type": [
                "str",
                "tuple[str]"
            ]
        }
    ],
    "neuro_planning@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "specific_problem",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "neuro_planning",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "ng_full_gym@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "randomized",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "multi",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "big",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "memory",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "ng_gym",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "conformant",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "gp",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "sparse",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "multi_scale",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "small",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "tiny",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "structured",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "env_names",
            "type": [
                "str",
                "list[str]",
                "tuple[str]",
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "ng_gym",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "gp",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "optims",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "multi",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "controls",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "big",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "structured",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "memory",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "conformant",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "optimization_scales",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "multi_scale",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "budgets",
            "type": [
                "list[int]",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "control",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "tiny",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "small",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "neural_factors",
            "type": [
                "list[None]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "neural_factor",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "sparse_limits",
            "type": [
                "list[None]",
                "list[typing.Optional[int]]"
            ]
        },
        {
            "category": "local",
            "name": "sparse",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "sparse_limit",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "optimization_scale",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "randomized",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "func_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "algo",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "xp",
            "type": [
                "Experiment"
            ]
        },
        {
            "category": "local",
            "name": "xp_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "ng_full_gym",
            "type": [
                "typing.Generator[Experiment]"
            ]
        }
    ],
    "ng_gym@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "str",
                "float",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "str",
                "float",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "return",
            "name": "ng_gym",
            "type": [
                "str",
                "dict"
            ]
        }
    ],
    "ng_stacking_gym@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "ng_stacking_gym",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "small_deterministic_gym_multi@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "small_deterministic_gym_multi",
            "type": [
                "bool"
            ]
        }
    ],
    "sparse_gp@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "float",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "float",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "sparse_gp",
            "type": [
                "typing.IO",
                "list[dict[str, typing.Any]]",
                "typing.Callable"
            ]
        }
    ],
    "tiny_deterministic_gym_multi@global": [
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "tiny_deterministic_gym_multi",
            "type": [
                "bool",
                "str"
            ]
        }
    ]
}