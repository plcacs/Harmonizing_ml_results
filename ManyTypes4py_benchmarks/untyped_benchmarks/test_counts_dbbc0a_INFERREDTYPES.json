{
    "add_event@TestActiveUsersAudit": [
        {
            "category": "arg",
            "name": "event_type",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "days_offset",
            "type": [
                "int",
                "float",
                "datetime.datetime"
            ]
        },
        {
            "category": "arg",
            "name": "user",
            "type": [
                "None",
                "str",
                "int",
                "zerver.models.UserProfile"
            ]
        },
        {
            "category": "local",
            "name": "days_offset",
            "type": [
                "int",
                "float",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "hours_offset",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "user",
            "type": [
                "None",
                "str",
                "int",
                "zerver.models.UserProfile",
                "planetsclub.users.models.UserModel",
                "dict[str, str]",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "event_type",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "add_event",
            "type": [
                "None"
            ]
        }
    ],
    "assertFillStateEquals@TestProcessCountStat": [
        {
            "category": "arg",
            "name": "stat",
            "type": [
                "analytics.lib.counts.CountStat",
                "datetime.datetime",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "end_time",
            "type": [
                "int",
                "float",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": []
        },
        {
            "category": "local",
            "name": "fill_state",
            "type": [
                "dict[str, list[typing.Any]]",
                "tuple[str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "int",
                "float",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "assertFillStateEquals",
            "type": [
                "None"
            ]
        }
    ],
    "assertInviteCountEquals@TestLoggingCountStats": [
        {
            "category": "arg",
            "name": "count",
            "type": []
        },
        {
            "category": "return",
            "name": "assertInviteCountEquals",
            "type": [
                "None"
            ]
        }
    ],
    "assertTableState@AnalyticsTestCase": [
        {
            "category": "arg",
            "name": "table",
            "type": [
                "dict",
                "int",
                "T"
            ]
        },
        {
            "category": "arg",
            "name": "arg_keys",
            "type": [
                "list[str]",
                "typing.Callable[T,T, bool]"
            ]
        },
        {
            "category": "arg",
            "name": "arg_values",
            "type": [
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "defaults",
            "type": [
                "dict[typing.Text, typing.Union[None,int]]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "arg_values",
            "type": [
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "kwargs",
            "type": [
                "dict",
                "dict[str, ]",
                "dict[typing.Union[str,tuple[typing.Optional[typing.Text]],tuple[typing.Union[typing.Text,int]]], ]"
            ]
        },
        {
            "category": "local",
            "name": "arg_keys",
            "type": [
                "list[str]",
                "typing.Callable[T,T, bool]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple[typing.Optional[typing.Text]]",
                "tuple[typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Optional[typing.Text]]",
                "tuple[typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "local",
            "name": "table",
            "type": [
                "dict",
                "int",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "assertTableState",
            "type": [
                "None"
            ]
        }
    ],
    "create_attachment@AnalyticsTestCase": [
        {
            "category": "arg",
            "name": "user_profile",
            "type": [
                "int",
                "datetime.datetime",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "filename",
            "type": [
                "int",
                "datetime.datetime",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "size",
            "type": [
                "int",
                "datetime.datetime",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "create_time",
            "type": [
                "int",
                "datetime.datetime",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "content_type",
            "type": [
                "int",
                "datetime.datetime",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "filename",
            "type": [
                "int",
                "datetime.datetime",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "user_profile",
            "type": [
                "int",
                "datetime.datetime",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "size",
            "type": [
                "int",
                "datetime.datetime",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "create_time",
            "type": [
                "int",
                "datetime.datetime",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "content_type",
            "type": [
                "int",
                "datetime.datetime",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "create_attachment",
            "type": [
                "dict",
                "str",
                "bytes"
            ]
        }
    ],
    "create_direct_message_group_with_recipient@AnalyticsTestCase": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "defaults",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple[typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "local",
            "name": "direct_message_group",
            "type": [
                "dict",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "direct_message_group_",
            "type": [
                "list",
                "typing.Type",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "recipient",
            "type": [
                "list",
                "typing.Type",
                "set"
            ]
        },
        {
            "category": "return",
            "name": "create_direct_message_group_with_recipient",
            "type": [
                "tuple[typing.Union[dict,set[int],list,typing.Type,set]]"
            ]
        }
    ],
    "create_interval@TestCountStats": [
        {
            "category": "arg",
            "name": "user",
            "type": [
                "datetime.datetime.timedelta",
                "zerver.models.UserProfile",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "start_offset",
            "type": [
                "datetime.datetime.timedelta",
                "zerver.models.UserProfile",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "end_offset",
            "type": [
                "datetime.datetime.timedelta",
                "zerver.models.UserProfile",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "user",
            "type": [
                "datetime.datetime.timedelta",
                "zerver.models.UserProfile",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "start_offset",
            "type": [
                "datetime.datetime.timedelta",
                "zerver.models.UserProfile",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "end_offset",
            "type": [
                "datetime.datetime.timedelta",
                "zerver.models.UserProfile",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "create_interval",
            "type": [
                "None"
            ]
        }
    ],
    "create_message@AnalyticsTestCase": [
        {
            "category": "arg",
            "name": "sender",
            "type": [
                "\"permissions_doc\"",
                "None",
                "models.User",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "recipient",
            "type": [
                "telebotypes.Message",
                "megatron.models.PlatformUser",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "sender",
            "type": [
                "\"permissions_doc\"",
                "None",
                "models.User",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "recipient",
            "type": [
                "telebotypes.Message",
                "megatron.models.PlatformUser",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "defaults",
            "type": [
                "dict[typing.Text, typing.Union[\"permissions_doc\",None,models.User,str,telebotypes.Message,megatron.models.PlatformUser]]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple[typing.Union[typing.Text,\"permissions_doc\"]]",
                "tuple[typing.Optional[typing.Text]]",
                "tuple[typing.Union[typing.Text,models.User]]",
                "tuple[typing.Union[typing.Text,telebotypes.Message]]",
                "tuple[typing.Union[typing.Text,megatron.models.PlatformUser]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Union[typing.Text,\"permissions_doc\"]]",
                "tuple[typing.Optional[typing.Text]]",
                "tuple[typing.Union[typing.Text,models.User]]",
                "tuple[typing.Union[typing.Text,telebotypes.Message]]",
                "tuple[typing.Union[typing.Text,megatron.models.PlatformUser]]"
            ]
        },
        {
            "category": "return",
            "name": "create_message",
            "type": [
                "str",
                "trezor.messages.RecoveryDevice.RecoveryDevice",
                "bool"
            ]
        }
    ],
    "create_stream_with_recipient@AnalyticsTestCase": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "defaults",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "stream",
            "type": [
                "zerver.models.Stream",
                "typing.IO",
                "None",
                "typing.Iterable[typing.TextIO]"
            ]
        },
        {
            "category": "local",
            "name": "stream_",
            "type": [
                "raiden.utils.Address",
                "dict[str, str]",
                "app.models.UserModel"
            ]
        },
        {
            "category": "local",
            "name": "recipient",
            "type": [
                "raiden.utils.Address",
                "dict[str, str]",
                "app.models.UserModel"
            ]
        },
        {
            "category": "return",
            "name": "create_stream_with_recipient",
            "type": [
                "tuple[typing.Union[zerver.models.Stream,typing.IO,None,typing.Iterable[typing.TextIO],raiden.utils.Address,app.models.UserModel]]"
            ]
        }
    ],
    "create_user@AnalyticsTestCase": [
        {
            "category": "arg",
            "name": "skip_auditlog",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "defaults",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,bool]]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple[typing.Union[typing.Text,bool]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Union[typing.Text,bool]]"
            ]
        },
        {
            "category": "local",
            "name": "pass_kwargs",
            "type": [
                "dict",
                "dict[typing.Text, ]",
                "dict[typing.Text, None]"
            ]
        },
        {
            "category": "local",
            "name": "skip_auditlog",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "create_user",
            "type": []
        }
    ],
    "global@global": [],
    "invite_context@TestLoggingCountStats": [
        {
            "category": "arg",
            "name": "too_many_recent_realm_invites",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "failure",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "managers",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "failure",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "stack",
            "type": [
                "ExitStack"
            ]
        },
        {
            "category": "return",
            "name": "invite_context",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "make_dummy_count_stat@TestProcessCountStat": [
        {
            "category": "arg",
            "name": "property",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "query",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "property",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "make_dummy_count_stat",
            "type": [
                "CountStat"
            ]
        }
    ],
    "mark_15day_active@TestRealmActiveHumans": [
        {
            "category": "arg",
            "name": "user",
            "type": [
                "zerver.models.UserProfile",
                "authentication.session.models.current_user.CurrentUser",
                "zerver.models.Realm"
            ]
        },
        {
            "category": "arg",
            "name": "end_time",
            "type": [
                "None",
                "datetime.datetime.datetime",
                "datetime.datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "None",
                "datetime.datetime.datetime",
                "datetime.datetime.timedelta",
                "int",
                "str",
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "user",
            "type": [
                "zerver.models.UserProfile",
                "authentication.session.models.current_user.CurrentUser",
                "zerver.models.Realm"
            ]
        },
        {
            "category": "return",
            "name": "mark_15day_active",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@AnalyticsTestCase": [
        {
            "category": "local",
            "name": "name_counter",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "current_property",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@TestActiveUsersAudit": [
        {
            "category": "local",
            "name": "user",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@TestCountStats": [
        {
            "category": "local",
            "name": "minutes_ago",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "setUp@TestRealmActiveHumans": [
        {
            "category": "return",
            "name": "setUp",
            "type": [
                "None"
            ]
        }
    ],
    "test_15day_actives@TestCountStats": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "app.models.user.User",
                "users.tests.factories.UserFactory"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user3",
            "type": [
                "app.models.user.User",
                "typing.Type",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user4",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user5",
            "type": [
                "app.models.user.User",
                "models.userData"
            ]
        },
        {
            "category": "local",
            "name": "user6",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_15day_actives",
            "type": [
                "None"
            ]
        }
    ],
    "test_15day_actives_realm_constraint@TestCountStats": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "app.models.user.User",
                "models.user.UserModel"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "app.models.user.User",
                "models.user.UserModel"
            ]
        },
        {
            "category": "return",
            "name": "test_15day_actives_realm_constraint",
            "type": [
                "None"
            ]
        }
    ],
    "test_1day_actives@TestCountStats": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "app.models.user.User",
                "users.tests.factories.UserFactory"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user3",
            "type": [
                "app.models.user.User",
                "typing.Type",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user4",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user5",
            "type": [
                "app.models.user.User",
                "models.userData"
            ]
        },
        {
            "category": "local",
            "name": "user6",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_1day_actives",
            "type": [
                "None"
            ]
        }
    ],
    "test_1day_actives_realm_constraint@TestCountStats": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "app.models.user.User",
                "firebase_admin.db.Reference",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "app.models.user.User",
                "models.user.UserModel"
            ]
        },
        {
            "category": "return",
            "name": "test_1day_actives_realm_constraint",
            "type": [
                "None"
            ]
        }
    ],
    "test_aggregation@TestLoggingCountStats": [
        {
            "category": "local",
            "name": "stat",
            "type": [
                "LoggingCountStat"
            ]
        },
        {
            "category": "local",
            "name": "user",
            "type": [
                "app.models.user.User",
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "stream",
            "type": [
                "str",
                "list",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_aggregation",
            "type": [
                "None"
            ]
        }
    ],
    "test_bad_fill_to_time@TestProcessCountStat": [
        {
            "category": "local",
            "name": "stat",
            "type": [
                "int",
                "str",
                "typing.Callable[None, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_bad_fill_to_time",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_logic@TestRealmActiveHumans": [
        {
            "category": "local",
            "name": "user",
            "type": [
                "app.models.user.User",
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "i",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_basic_logic",
            "type": [
                "None"
            ]
        }
    ],
    "test_bots_not_counted@TestRealmActiveHumans": [
        {
            "category": "return",
            "name": "test_bots_not_counted",
            "type": [
                "None"
            ]
        }
    ],
    "test_do_drop_all_analytics_tables@TestDeleteStats": [
        {
            "category": "local",
            "name": "user",
            "type": [
                "app.models.UserModel",
                "app.models.User"
            ]
        },
        {
            "category": "local",
            "name": "stream",
            "type": [
                "zerver.models.Stream",
                "typing.IO",
                "None",
                "waterbutler.core.streams.http.FormDataStream"
            ]
        },
        {
            "category": "local",
            "name": "count_args",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_do_drop_all_analytics_tables",
            "type": [
                "None"
            ]
        }
    ],
    "test_do_drop_single_stat@TestDeleteStats": [
        {
            "category": "local",
            "name": "user",
            "type": [
                "app.models.UserModel",
                "app.models.User"
            ]
        },
        {
            "category": "local",
            "name": "stream",
            "type": [
                "zerver.models.Stream",
                "typing.IO",
                "None",
                "waterbutler.core.streams.http.FormDataStream"
            ]
        },
        {
            "category": "local",
            "name": "count_args_to_delete",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "local",
            "name": "count_args_to_save",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "local",
            "name": "count_args",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_do_drop_single_stat",
            "type": [
                "None"
            ]
        }
    ],
    "test_do_increment_logging_start_query_count@TestDoIncrementLoggingStat": [
        {
            "category": "local",
            "name": "stat",
            "type": [
                "LoggingCountStat"
            ]
        },
        {
            "category": "return",
            "name": "test_do_increment_logging_start_query_count",
            "type": [
                "None"
            ]
        }
    ],
    "test_empty_realm_or_user_with_no_relevant_activity@TestActiveUsersAudit": [
        {
            "category": "return",
            "name": "test_empty_realm_or_user_with_no_relevant_activity",
            "type": [
                "None"
            ]
        }
    ],
    "test_end_to_end@TestRealmActiveHumans": [
        {
            "category": "local",
            "name": "time_zero",
            "type": [
                "datetime.timedelta",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "property",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_end_to_end",
            "type": [
                "None"
            ]
        }
    ],
    "test_end_to_end_with_actions_dot_py@TestActiveUsersAudit": [
        {
            "category": "local",
            "name": "user3_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "datetime.time",
                "cirq.value.timestamp.Timestamp"
            ]
        },
        {
            "category": "return",
            "name": "test_end_to_end_with_actions_dot_py",
            "type": [
                "None"
            ]
        }
    ],
    "test_event_types@TestActiveUsersAudit": [
        {
            "category": "local",
            "name": "i",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_event_types",
            "type": [
                "None"
            ]
        }
    ],
    "test_frequency@TestDoIncrementLoggingStat": [
        {
            "category": "local",
            "name": "i",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "times",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "stat",
            "type": [
                "LoggingCountStat"
            ]
        },
        {
            "category": "return",
            "name": "test_frequency",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_last_id_from_server_ignores_null@GetLastIdFromServerTest": [
        {
            "category": "local",
            "name": "server_uuid",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "server",
            "type": [
                "str",
                "dict",
                "boucanpy.db.models.dns_server.DnsServer"
            ]
        },
        {
            "category": "local",
            "name": "first",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_last_id_from_server_ignores_null",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_or_create@TestDoIncrementLoggingStat": [
        {
            "category": "local",
            "name": "stat",
            "type": [
                "LoggingCountStat"
            ]
        },
        {
            "category": "local",
            "name": "current_property",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_get_or_create",
            "type": [
                "None"
            ]
        }
    ],
    "test_increment@TestDoIncrementLoggingStat": [
        {
            "category": "local",
            "name": "stat",
            "type": [
                "LoggingCountStat"
            ]
        },
        {
            "category": "local",
            "name": "current_property",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_increment",
            "type": [
                "None"
            ]
        }
    ],
    "test_invites_sent@TestLoggingCountStats": [
        {
            "category": "local",
            "name": "property",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "user",
            "type": [
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "stream",
            "type": [
                "zerver.models.Stream",
                "typing.BinaryIO",
                "waterbutler.core.streams.http.FormDataStream"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "invite_expires_in_minutes",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "skipped",
            "type": [
                "bool",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_invites_sent",
            "type": [
                "None"
            ]
        }
    ],
    "test_last_successful_fill@TestCountStats": [
        {
            "category": "local",
            "name": "fillstate",
            "type": [
                "list[int]",
                "datetime.datetime",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_last_successful_fill",
            "type": [
                "None"
            ]
        }
    ],
    "test_max_audit_entry_is_unrelated@TestActiveUsersAudit": [
        {
            "category": "return",
            "name": "test_max_audit_entry_is_unrelated",
            "type": [
                "None"
            ]
        }
    ],
    "test_messages_read_hour@TestLoggingCountStats": [
        {
            "category": "local",
            "name": "read_count_property",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "interactions_property",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "user1",
            "type": [
                "tracim.models.auth.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "stream",
            "type": [
                "zerver.models.Stream",
                "waterbutler.core.streams.http.FormDataStream",
                "typing.Iterable[typing.TextIO]"
            ]
        },
        {
            "category": "local",
            "name": "recipient",
            "type": [
                "list[str]",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_messages_read_hour",
            "type": [
                "None"
            ]
        }
    ],
    "test_messages_sent_by_client@TestCountStats": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "users.models.JustfixUser",
                "app.models.user.User"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "recipient_user2",
            "type": [
                "list",
                "list[models.User]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "recipient_stream",
            "type": [
                "str",
                "list",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "recipient_direct_message_group",
            "type": [
                "cards.models.Deck"
            ]
        },
        {
            "category": "local",
            "name": "client2",
            "type": [
                "Client",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "client2_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "website_client_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_messages_sent_by_client",
            "type": [
                "None"
            ]
        }
    ],
    "test_messages_sent_by_client_realm_constraint@TestCountStats": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "app.models.user.User",
                "firebase_admin.db.Reference",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "recipient_user2",
            "type": [
                "list",
                "list[models.User]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "client2",
            "type": [
                "Client",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "client2_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "website_client_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_messages_sent_by_client_realm_constraint",
            "type": [
                "None"
            ]
        }
    ],
    "test_messages_sent_by_is_bot@TestCountStats": [
        {
            "category": "local",
            "name": "human1",
            "type": [
                "list",
                "dict[str, bool]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "human2",
            "type": [
                "typing.Type",
                "dict[str, tuple[int]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "recipient_human1",
            "type": [
                "list",
                "set",
                "set[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "recipient_stream",
            "type": [
                "list",
                "list[int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "recipient_direct_message_group",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_messages_sent_by_is_bot",
            "type": [
                "None"
            ]
        }
    ],
    "test_messages_sent_by_is_bot_realm_constraint@TestCountStats": [
        {
            "category": "local",
            "name": "human1",
            "type": [
                "list",
                "dict[str, bool]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "human2",
            "type": [
                "int",
                "datetime",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "recipient_human1",
            "type": [
                "list",
                "set",
                "set[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "recipient_stream",
            "type": [
                "str",
                "trio.abc.ReceiveStream",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "recipient_direct_message_group",
            "type": [
                "cards.models.Deck"
            ]
        },
        {
            "category": "return",
            "name": "test_messages_sent_by_is_bot_realm_constraint",
            "type": [
                "None"
            ]
        }
    ],
    "test_messages_sent_by_message_type@TestCountStats": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "users.models.JustfixUser",
                "ennead.models.user.User",
                "ebl.users.domain.user.Guest"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "alerta.models.user.User",
                "set",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "user3",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "recipient_stream1",
            "type": [
                "str",
                "list[int]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "recipient_stream2",
            "type": [
                "str",
                "set",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "recipient_stream3",
            "type": [
                "str",
                "trio.abc.ReceiveStream",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "recipient_stream4",
            "type": [
                "str",
                "list",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "recipient_direct_message_group1",
            "type": [
                "cards.models.Deck"
            ]
        },
        {
            "category": "local",
            "name": "recipient_direct_message_group2",
            "type": [
                "cards.models.Deck"
            ]
        },
        {
            "category": "local",
            "name": "recipient_user1",
            "type": [
                "list",
                "list[models.User]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "recipient_user2",
            "type": [
                "list",
                "list[models.User]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "recipient_user3",
            "type": [
                "list",
                "list[models.User]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_messages_sent_by_message_type",
            "type": [
                "None"
            ]
        }
    ],
    "test_messages_sent_by_message_type_realm_constraint@TestCountStats": [
        {
            "category": "local",
            "name": "user",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user_recipient",
            "type": [
                "list",
                "list[models.User]",
                "models.User"
            ]
        },
        {
            "category": "local",
            "name": "private_stream_recipient",
            "type": [
                "str",
                "list",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "stream_recipient",
            "type": [
                "app.models.user.User",
                "str",
                "zerver.models.Recipient"
            ]
        },
        {
            "category": "local",
            "name": "direct_message_group_recipient",
            "type": [
                "byceps.services.user.transfer.models.User",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_messages_sent_by_message_type_realm_constraint",
            "type": [
                "None"
            ]
        }
    ],
    "test_messages_sent_to_recipients_with_same_id@TestCountStats": [
        {
            "category": "local",
            "name": "user",
            "type": [
                "app.models.user.User"
            ]
        },
        {
            "category": "local",
            "name": "user_recipient",
            "type": [
                "list",
                "list[models.User]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "stream_recipient",
            "type": [
                "str",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "direct_message_group_recipient",
            "type": [
                "byceps.services.user.transfer.models.User",
                "None",
                "zerver.models.Recipient"
            ]
        },
        {
            "category": "return",
            "name": "test_messages_sent_to_recipients_with_same_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_messages_sent_to_stream_by_is_bot@TestCountStats": [
        {
            "category": "local",
            "name": "human1",
            "type": [
                "list",
                "dict[str, bool]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "human2",
            "type": [
                "int",
                "datetime",
                "typing.Final"
            ]
        },
        {
            "category": "local",
            "name": "recipient_human1",
            "type": [
                "list",
                "set",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "stream1",
            "type": [
                "zerver.models.Stream",
                "typing.IO",
                "waterbutler.core.streams.http.FormDataStream"
            ]
        },
        {
            "category": "local",
            "name": "recipient_stream1",
            "type": [
                "list",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "stream2",
            "type": [
                "zerver.models.Stream",
                "typing.IO",
                "waterbutler.core.streams.http.FormDataStream"
            ]
        },
        {
            "category": "local",
            "name": "recipient_stream2",
            "type": [
                "str",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "recipient_direct_message_group",
            "type": [
                "typing.Type",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_messages_sent_to_stream_by_is_bot",
            "type": [
                "None"
            ]
        }
    ],
    "test_messages_sent_to_stream_by_is_bot_realm_constraint@TestCountStats": [
        {
            "category": "local",
            "name": "human1",
            "type": [
                "property",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "realm",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "stream1",
            "type": [
                "zerver.models.Stream",
                "typing.Iterable[typing.TextIO]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "recipient_stream1",
            "type": [
                "str",
                "list",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "stream2",
            "type": [
                "zerver.models.Stream",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "recipient_stream2",
            "type": [
                "list",
                "dict",
                "abilian.core.models.blob.Blob"
            ]
        },
        {
            "category": "return",
            "name": "test_messages_sent_to_stream_by_is_bot_realm_constraint",
            "type": [
                "None"
            ]
        }
    ],
    "test_minutes_active@TestCountStats": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "app.models.user.User",
                "models.user.UserModel"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "app.models.user.User",
                "typing.Type",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user3",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user4",
            "type": [
                "app.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user5",
            "type": [
                "app.models.user.User",
                "users.tests.factories.UserFactory"
            ]
        },
        {
            "category": "return",
            "name": "test_minutes_active",
            "type": [
                "None"
            ]
        }
    ],
    "test_minutes_active_realm_constraint@TestCountStats": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "app.models.user.User",
                "models.user.UserModel"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "app.models.user.User",
                "models.user.UserModel",
                "firebase_admin.db.Reference"
            ]
        },
        {
            "category": "return",
            "name": "test_minutes_active_realm_constraint",
            "type": [
                "None"
            ]
        }
    ],
    "test_mobile_pushes_received_count@TestLoggingCountStats": [
        {
            "category": "local",
            "name": "server_uuid",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "server",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "hamlet",
            "type": [
                "str",
                "list[tuple[typing.Union[typing.Any,str]]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "token",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "Message"
            ]
        },
        {
            "category": "local",
            "name": "gcm_payload",
            "type": [
                "str",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "gcm_options",
            "type": [
                "dict[str, typing.Any]",
                "typing.Type",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, typing.Union[str,dict,typing.Type,dict[str, typing.Any],dict[str, str]]]"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "remote_realm",
            "type": [
                "zerver.models.Realm"
            ]
        },
        {
            "category": "return",
            "name": "test_mobile_pushes_received_count",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_users_realms_and_bots@TestActiveUsersAudit": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "ebl.users.domain.user.Guest",
                "dict[str, str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "ebl.users.domain.user.Guest",
                "dict[str, str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "second_realm",
            "type": [
                "int",
                "zerver.models.UserProfile",
                "django.contrib.auth.models.User"
            ]
        },
        {
            "category": "local",
            "name": "user3",
            "type": [
                "set",
                "dict[str, str]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "user4",
            "type": [
                "app.models.user.User",
                "set",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "user",
            "type": [
                "ebl.users.domain.user.Guest",
                "dict[str, str]",
                "list",
                "set",
                "typing.Type",
                "app.models.user.User"
            ]
        },
        {
            "category": "return",
            "name": "test_multiple_users_realms_and_bots",
            "type": [
                "None"
            ]
        }
    ],
    "test_multiple_users_realms_and_times@TestRealmActiveHumans": [
        {
            "category": "local",
            "name": "second_realm",
            "type": [
                "models.confirmation.ConfirmationModel",
                "dict[str, services.user.transfer.models.User]",
                "models.DBProfile"
            ]
        },
        {
            "category": "local",
            "name": "i",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "third_realm",
            "type": [
                "str",
                "int",
                "psef.models.user.User"
            ]
        },
        {
            "category": "return",
            "name": "test_multiple_users_realms_and_times",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_aggregated_zeros@TestDoAggregateToSummaryTable": [
        {
            "category": "local",
            "name": "stat",
            "type": [
                "LoggingCountStat"
            ]
        },
        {
            "category": "return",
            "name": "test_no_aggregated_zeros",
            "type": [
                "None"
            ]
        }
    ],
    "test_process_dependent_stat@TestProcessCountStat": [
        {
            "category": "local",
            "name": "stat1",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "stat2",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "query",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "stat3",
            "type": [
                "DependentCountStat"
            ]
        },
        {
            "category": "local",
            "name": "stat4",
            "type": [
                "DependentCountStat"
            ]
        },
        {
            "category": "local",
            "name": "dummy_count_stats",
            "type": [
                "dict[typing.Text, typing.Union[int,DependentCountStat]]"
            ]
        },
        {
            "category": "local",
            "name": "hour",
            "type": [
                "list",
                "int",
                "typing.Type",
                "datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "hour24",
            "type": [
                "int",
                "datetime.timedelta",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "hour25",
            "type": [
                "int",
                "typing.Type",
                "datetime.timedelta"
            ]
        },
        {
            "category": "return",
            "name": "test_process_dependent_stat",
            "type": [
                "None"
            ]
        }
    ],
    "test_process_logging_stat@TestProcessCountStat": [
        {
            "category": "local",
            "name": "user_stat",
            "type": [
                "LoggingCountStat"
            ]
        },
        {
            "category": "local",
            "name": "stream_stat",
            "type": [
                "LoggingCountStat"
            ]
        },
        {
            "category": "local",
            "name": "realm_stat",
            "type": [
                "LoggingCountStat"
            ]
        },
        {
            "category": "local",
            "name": "user",
            "type": [
                "typing.Type",
                "app.models.User"
            ]
        },
        {
            "category": "local",
            "name": "stream",
            "type": [
                "zerver.models.Stream",
                "waterbutler.core.streams.http.FormDataStream"
            ]
        },
        {
            "category": "local",
            "name": "stat",
            "type": [
                "LoggingCountStat"
            ]
        },
        {
            "category": "return",
            "name": "test_process_logging_stat",
            "type": [
                "None"
            ]
        }
    ],
    "test_process_stat@TestProcessCountStat": [
        {
            "category": "local",
            "name": "current_time",
            "type": [
                "int",
                "datetime.datetime",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "stat",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_process_stat",
            "type": [
                "None"
            ]
        }
    ],
    "test_simultaneous_max_audit_entries_of_different_users@TestActiveUsersAudit": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "str",
                "dict[str, str]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "str",
                "dict[str, str]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "user3",
            "type": [
                "app.models.User",
                "ebl.users.domain.user.Guest",
                "users.models.JustfixUser"
            ]
        },
        {
            "category": "return",
            "name": "test_simultaneous_max_audit_entries_of_different_users",
            "type": [
                "None"
            ]
        }
    ],
    "test_simultaneous_unrelated_audit_entry@TestActiveUsersAudit": [
        {
            "category": "return",
            "name": "test_simultaneous_unrelated_audit_entry",
            "type": [
                "None"
            ]
        }
    ],
    "test_table_and_id_args@TestDoIncrementLoggingStat": [
        {
            "category": "local",
            "name": "current_property",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "second_realm",
            "type": [
                "str",
                "zerver.models.UserProfile",
                "models.confirmation.ConfirmationModel"
            ]
        },
        {
            "category": "local",
            "name": "stat",
            "type": [
                "LoggingCountStat"
            ]
        },
        {
            "category": "local",
            "name": "user1",
            "type": [
                "app.models.user.User",
                "None",
                "models.user.UserModel"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "app.models.user.User",
                "None",
                "models.user.UserModel"
            ]
        },
        {
            "category": "local",
            "name": "stream1",
            "type": [
                "typing.TextIO",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "stream2",
            "type": [
                "typing.TextIO",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_table_and_id_args",
            "type": [
                "None"
            ]
        }
    ],
    "test_update_from_two_days_ago@TestActiveUsersAudit": [
        {
            "category": "return",
            "name": "test_update_from_two_days_ago",
            "type": [
                "None"
            ]
        }
    ],
    "test_upload_quota_used_bytes@TestCountStats": [
        {
            "category": "local",
            "name": "user1",
            "type": [
                "dict[str, str]",
                "firebase_admin.db.Reference",
                "grouper.models.user.User",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "user2",
            "type": [
                "dict[str, str]",
                "firebase_admin.db.Reference",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_upload_quota_used_bytes",
            "type": [
                "None"
            ]
        }
    ],
    "test_user_active_then_deactivated_same_day@TestActiveUsersAudit": [
        {
            "category": "return",
            "name": "test_user_active_then_deactivated_same_day",
            "type": [
                "None"
            ]
        }
    ],
    "test_user_active_then_deactivated_with_day_gap@TestActiveUsersAudit": [
        {
            "category": "return",
            "name": "test_user_active_then_deactivated_with_day_gap",
            "type": [
                "None"
            ]
        }
    ],
    "test_user_deactivated_in_future@TestActiveUsersAudit": [
        {
            "category": "return",
            "name": "test_user_deactivated_in_future",
            "type": [
                "None"
            ]
        }
    ],
    "test_user_deactivated_then_reactivated_with_day_gap@TestActiveUsersAudit": [
        {
            "category": "return",
            "name": "test_user_deactivated_then_reactivated_with_day_gap",
            "type": [
                "None"
            ]
        }
    ],
    "test_user_inactive_then_activated_same_day@TestActiveUsersAudit": [
        {
            "category": "return",
            "name": "test_user_inactive_then_activated_same_day",
            "type": [
                "None"
            ]
        }
    ],
    "test_user_reactivated_in_future@TestActiveUsersAudit": [
        {
            "category": "return",
            "name": "test_user_reactivated_in_future",
            "type": [
                "None"
            ]
        }
    ]
}