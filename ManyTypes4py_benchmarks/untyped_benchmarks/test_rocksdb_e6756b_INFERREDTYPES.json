{
    "__iter__@MockIterator": [
        {
            "category": "return",
            "name": "__iter__",
            "type": []
        }
    ],
    "_setup_items@test_Store": [
        {
            "category": "arg",
            "name": "dbs",
            "type": []
        },
        {
            "category": "return",
            "name": "_setup_items",
            "type": [
                "list"
            ]
        }
    ],
    "_setup_items_db@test_Store": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "list[tuple[bytes]]",
                "str",
                "list[bytes]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "db",
            "type": [
                "str",
                "dict[str, dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list[tuple[bytes]]",
                "str",
                "list[bytes]"
            ]
        },
        {
            "category": "return",
            "name": "_setup_items_db",
            "type": [
                "str",
                "dict[str, dict[str, str]]"
            ]
        }
    ],
    "_setup_keys@test_Store": [
        {
            "category": "arg",
            "name": "dbs",
            "type": []
        },
        {
            "category": "return",
            "name": "_setup_keys",
            "type": [
                "list"
            ]
        }
    ],
    "_setup_keys_db@test_Store": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "list[bytes]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "db",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list[bytes]",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_setup_keys_db",
            "type": [
                "str"
            ]
        }
    ],
    "current_event@test_Store": [
        {
            "category": "return",
            "name": "current_event",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "db_for_partition@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "dfp",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "db_for_partition",
            "type": [
                "Mock"
            ]
        }
    ],
    "from_values@MockIterator": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Mapping",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "it",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "manager.api.types.PackageReference"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "it_",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "from_values",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "manager.api.types.PackageReference"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "TP",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "TP",
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "TP",
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP4",
            "type": [
                "TP",
                "str",
                "int",
                "typing.Callable"
            ]
        }
    ],
    "new_db@test_Store": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "exists",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "db",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "exists",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "db_",
            "type": [
                "list[bool]",
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "new_db",
            "type": [
                "Mock"
            ]
        }
    ],
    "new_event@test_Store": [
        {
            "category": "arg",
            "name": "name",
            "type": []
        },
        {
            "category": "arg",
            "name": "tp",
            "type": []
        },
        {
            "category": "arg",
            "name": "offset",
            "type": []
        },
        {
            "category": "arg",
            "name": "key",
            "type": []
        },
        {
            "category": "arg",
            "name": "value",
            "type": []
        },
        {
            "category": "return",
            "name": "new_event",
            "type": [
                "Mock"
            ]
        }
    ],
    "no_rocks@test_Store": [
        {
            "category": "return",
            "name": "no_rocks",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "on_call@test_Store": [
        {
            "category": "arg",
            "name": "partition",
            "type": []
        },
        {
            "category": "return",
            "name": "on_call",
            "type": [
                "None"
            ]
        }
    ],
    "rocks@test_Store": [
        {
            "category": "return",
            "name": "rocks",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "store@test_Store": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "rocks",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "table",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "table",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "store",
            "type": [
                "Store"
            ]
        }
    ],
    "table@test_Store": [
        {
            "category": "local",
            "name": "table",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "table_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "table",
            "type": [
                "Mock"
            ]
        }
    ],
    "test__contains@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "db2",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "dbs",
            "type": [
                "dict[bytes, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "db2_",
            "type": [
                "None",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test__contains",
            "type": [
                "None"
            ]
        }
    ],
    "test__dbs_for_actives@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "table",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "table_",
            "type": [
                "typing.Text",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock",
                "dict[int, ]"
            ]
        },
        {
            "category": "local",
            "name": "dbs",
            "type": [
                "dict[int, ]"
            ]
        },
        {
            "category": "return",
            "name": "test__dbs_for_actives",
            "type": [
                "None"
            ]
        }
    ],
    "test__dbs_for_key@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "local",
            "name": "dbs",
            "type": [
                "dict[int, ]"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "dict[int, ]"
            ]
        },
        {
            "category": "return",
            "name": "test__dbs_for_key",
            "type": [
                "None"
            ]
        }
    ],
    "test__del@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "dbs",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "return",
            "name": "test__del",
            "type": [
                "None"
            ]
        }
    ],
    "test__get@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "db",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock",
                "tuple[typing.Union[Mock,bytes]]"
            ]
        },
        {
            "category": "return",
            "name": "test__get",
            "type": [
                "None"
            ]
        }
    ],
    "test__get__dbvalue_is_None@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "db",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock",
                "tuple[typing.Optional[Mock]]"
            ]
        },
        {
            "category": "local",
            "name": "db_",
            "type": [
                "list[bool]",
                "None",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test__get__dbvalue_is_None",
            "type": [
                "None"
            ]
        }
    ],
    "test__get__missing@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test__get__missing",
            "type": [
                "None"
            ]
        }
    ],
    "test__iteritems@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "dbs",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "db",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test__iteritems",
            "type": [
                "None"
            ]
        }
    ],
    "test__iterkeys@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test__iterkeys",
            "type": [
                "None"
            ]
        }
    ],
    "test__itervalues@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "dbs",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "db",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test__itervalues",
            "type": [
                "None"
            ]
        }
    ],
    "test__set@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "arg",
            "name": "db_for_partition",
            "type": []
        },
        {
            "category": "arg",
            "name": "current_event",
            "type": []
        },
        {
            "category": "return",
            "name": "test__set",
            "type": [
                "None"
            ]
        }
    ],
    "test__size@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test__size",
            "type": [
                "None"
            ]
        }
    ],
    "test_apply_changelog_batch@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "arg",
            "name": "rocks",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "arg",
            "name": "db_for_partition",
            "type": [
                "unittesmock.Mock",
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP4",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "events",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "dbs",
            "type": [
                "dict[, Mock]"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "db",
            "type": [
                "list[Mock]"
            ]
        },
        {
            "category": "local",
            "name": "rocks",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "return",
            "name": "test_apply_changelog_batch",
            "type": [
                "None"
            ]
        }
    ],
    "test_assign_partitions@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "table",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "TP4",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "int",
                "list",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "table_",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "table",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_assign_partitions",
            "type": [
                "None"
            ]
        }
    ],
    "test_assign_partitions__empty_assignment@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "arg",
            "name": "table",
            "type": []
        },
        {
            "category": "local",
            "name": "TP4",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "int",
                "list",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "table_",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_assign_partitions__empty_assignment",
            "type": [
                "None"
            ]
        }
    ],
    "test_clear@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "return",
            "name": "test_clear",
            "type": [
                "None"
            ]
        }
    ],
    "test_db_for_partition@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "ofp",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_db_for_partition",
            "type": [
                "None"
            ]
        }
    ],
    "test_default_key_index_size@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "return",
            "name": "test_default_key_index_size",
            "type": [
                "None"
            ]
        }
    ],
    "test_defaults@test_RocksDBOptions": [
        {
            "category": "local",
            "name": "opts",
            "type": [
                "RocksDBOptions"
            ]
        },
        {
            "category": "return",
            "name": "test_defaults",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_bucket_for_key__is_in_index@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "db",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "db_",
            "type": [
                "list[bool]",
                "None",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test_get_bucket_for_key__is_in_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_bucket_for_key__no_dbs@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "return",
            "name": "test_get_bucket_for_key__no_dbs",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_bucket_for_key__not_in_index@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "dbs",
            "type": [
                "dict[int, ]"
            ]
        },
        {
            "category": "return",
            "name": "test_get_bucket_for_key__not_in_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_init@test_RocksDBOptions": [
        {
            "category": "arg",
            "name": "arg",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "arg",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "opts",
            "type": [
                "RocksDBOptions"
            ]
        },
        {
            "category": "return",
            "name": "test_init",
            "type": [
                "None"
            ]
        }
    ],
    "test_init@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "return",
            "name": "test_init",
            "type": [
                "None"
            ]
        }
    ],
    "test_need_active_standby_for@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "db_for_partition",
            "type": [
                "typing.Iterable"
            ]
        },
        {
            "category": "return",
            "name": "test_need_active_standby_for",
            "type": [
                "None"
            ]
        }
    ],
    "test_need_active_standby_for__active@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "list",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "db_for_partition",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_need_active_standby_for__active",
            "type": [
                "None"
            ]
        }
    ],
    "test_need_active_standby_for__raises@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "db_for_partition",
            "type": [
                "typing.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_need_active_standby_for__raises",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_rocksdb@test_Store": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "table",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "no_rocks",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "table",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_no_rocksdb",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_rebalance@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "arg",
            "name": "table",
            "type": []
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "assigned",
            "type": [
                "set[typing.Union[int,list,str,typing.Callable]]"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "revoked",
            "type": [
                "set[typing.Union[str,int,typing.Callable]]"
            ]
        },
        {
            "category": "local",
            "name": "newly_assigned",
            "type": [
                "set[typing.Union[str,int,typing.Callable]]"
            ]
        },
        {
            "category": "return",
            "name": "test_on_rebalance",
            "type": [
                "None"
            ]
        }
    ],
    "test_open@test_RocksDBOptions": [
        {
            "category": "local",
            "name": "opts",
            "type": [
                "RocksDBOptions"
            ]
        },
        {
            "category": "local",
            "name": "db",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_open",
            "type": [
                "None"
            ]
        }
    ],
    "test_open_db_for_partition@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "arg",
            "name": "db_for_partition",
            "type": []
        },
        {
            "category": "return",
            "name": "test_open_db_for_partition",
            "type": [
                "None"
            ]
        }
    ],
    "test_open_db_for_partition__raises_unexpected_error@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "arg",
            "name": "db_for_partition",
            "type": [
                "typing.Iterable"
            ]
        },
        {
            "category": "return",
            "name": "test_open_db_for_partition__raises_unexpected_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_open_db_for_partition_max_retries@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "db_for_partition",
            "type": [
                "typing.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_open_db_for_partition_max_retries",
            "type": [
                "None"
            ]
        }
    ],
    "test_open_db_for_partition_retries_recovers@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "arg",
            "name": "db_for_partition",
            "type": [
                "unittesmock.Mock",
                "typing.Iterable"
            ]
        },
        {
            "category": "return",
            "name": "test_open_db_for_partition_retries_recovers",
            "type": [
                "None"
            ]
        }
    ],
    "test_open_for_partition@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "local",
            "name": "open",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "store_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_open_for_partition",
            "type": [
                "None"
            ]
        }
    ],
    "test_persisted_offset@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "\"StoreResourceIdentifier\"",
                "None",
                "Store"
            ]
        },
        {
            "category": "arg",
            "name": "db_for_partition",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "db_for_partition_",
            "type": [
                "typing.Text",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "db_for_partition",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "\"StoreResourceIdentifier\"",
                "None",
                "Store"
            ]
        },
        {
            "category": "return",
            "name": "test_persisted_offset",
            "type": [
                "None"
            ]
        }
    ],
    "test_reset_state@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "aiodine.Store"
            ]
        },
        {
            "category": "return",
            "name": "test_reset_state",
            "type": [
                "None"
            ]
        }
    ],
    "test_revoke_partitions@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "table",
            "type": [
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "table_",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "table",
            "type": [
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP4",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_revoke_partitions",
            "type": [
                "None"
            ]
        }
    ],
    "test_set_key_index_size@test_Store": [
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "arg",
            "name": "rocks",
            "type": [
                "list[str]",
                "typing.Callable[..., None]"
            ]
        },
        {
            "category": "arg",
            "name": "table",
            "type": []
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "Store"
            ]
        },
        {
            "category": "return",
            "name": "test_set_key_index_size",
            "type": [
                "None"
            ]
        }
    ],
    "test_set_persisted_offset@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": []
        },
        {
            "category": "arg",
            "name": "db_for_partition",
            "type": []
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_set_persisted_offset",
            "type": [
                "None"
            ]
        }
    ],
    "test_url_having_path@test_Store": [
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "arg",
            "name": "rocks",
            "type": [
                "typing.Callable[..., None]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "table",
            "type": []
        },
        {
            "category": "local",
            "name": "store",
            "type": [
                "Store"
            ]
        },
        {
            "category": "return",
            "name": "test_url_having_path",
            "type": [
                "None"
            ]
        }
    ],
    "test_url_without_path_adds_table_name@test_Store": [
        {
            "category": "arg",
            "name": "store",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "return",
            "name": "test_url_without_path_adds_table_name",
            "type": [
                "None"
            ]
        }
    ]
}