{
    "get_window_bounds@CustomIndexer": [
        {
            "category": "arg",
            "name": "num_values",
            "type": []
        },
        {
            "category": "arg",
            "name": "min_periods",
            "type": []
        },
        {
            "category": "arg",
            "name": "center",
            "type": []
        },
        {
            "category": "arg",
            "name": "closed",
            "type": []
        },
        {
            "category": "arg",
            "name": "step",
            "type": []
        },
        {
            "category": "return",
            "name": "get_window_bounds",
            "type": [
                "tuple"
            ]
        }
    ],
    "global@global": [],
    "scaled_sum@global": [
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "scaled_sum",
            "type": []
        }
    ],
    "test_closed_empty@global": [
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "arithmetic_win_operators",
            "type": [
                "bool",
                "str",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "arithmetic_win_operators",
            "type": [
                "bool",
                "str",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "func_name",
            "type": [
                "bool",
                "str",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "closed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "roll",
            "type": [
                "dict",
                "typing.DefaultDict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_closed_empty",
            "type": [
                "None"
            ]
        }
    ],
    "test_closed_fixed@global": [
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "float",
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "arithmetic_win_operators",
            "type": [
                "bool",
                "str",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "arithmetic_win_operators",
            "type": [
                "bool",
                "str",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "func_name",
            "type": [
                "bool",
                "str",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "df_fixed",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df_time",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[typing.Any]",
                "list[float]",
                "list[list[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_closed_fixed",
            "type": [
                "None"
            ]
        }
    ],
    "test_closed_fixed_binary_col@global": [
        {
            "category": "arg",
            "name": "center",
            "type": [
                "int",
                "numpy.ndarray",
                "starfish.core.imagestack.parser.TileKey"
            ]
        },
        {
            "category": "arg",
            "name": "step",
            "type": [
                "list[str]",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "center",
            "type": [
                "int",
                "numpy.ndarray",
                "starfish.core.imagestack.parser.TileKey"
            ]
        },
        {
            "category": "local",
            "name": "expected_data",
            "type": [
                "list[float]",
                "list[typing.Union[int,float]]"
            ]
        },
        {
            "category": "local",
            "name": "step",
            "type": [
                "list[str]",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[tuple[typing.Union[str,typing.Any]]]",
                "slice",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "rolling",
            "type": [
                "typing.Callable[None,None, typing.Any]",
                "float",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "float",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_closed_fixed_binary_col",
            "type": [
                "None"
            ]
        }
    ],
    "test_closed_median_quantile@global": [
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "float",
                "int",
                "tuple[float]"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "closed",
            "type": [
                "float",
                "int",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "roll",
            "type": [
                "float",
                "list[str]",
                "typing.Callable[None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]",
                "numpy.ndarray",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "float",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_closed_median_quantile",
            "type": [
                "None"
            ]
        }
    ],
    "test_closed_min_max_datetime@global": [
        {
            "category": "arg",
            "name": "input_dtype",
            "type": [
                "typing.Sequence[int]",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "func",
            "type": [
                "bool",
                "float",
                "object"
            ]
        },
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "bool",
                "float",
                "object"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "numpy.dtype",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "input_dtype",
            "type": [
                "typing.Sequence[int]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "bool",
                "numpy.dtype",
                "typing.Iterable[typing.Any]",
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_closed_min_max_datetime",
            "type": [
                "None"
            ]
        }
    ],
    "test_closed_min_max_minp@global": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "static_frame.core.util.UFunc",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series",
                "list[str]",
                "list",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "static_frame.core.util.UFunc",
                "bool",
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_closed_min_max_minp",
            "type": [
                "None"
            ]
        }
    ],
    "test_closed_one_entry@global": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "typing.NoReturn"
            ]
        },
        {
            "category": "return",
            "name": "test_closed_one_entry",
            "type": [
                "None"
            ]
        }
    ],
    "test_closed_one_entry_groupby@global": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_closed_one_entry_groupby",
            "type": [
                "None"
            ]
        }
    ],
    "test_closed_uneven@global": [
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_closed_uneven",
            "type": [
                "None"
            ]
        }
    ],
    "test_constructor@global": [
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "int",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_constructor",
            "type": [
                "None"
            ]
        }
    ],
    "test_constructor_timedelta_window_and_minperiods@global": [
        {
            "category": "arg",
            "name": "window",
            "type": [
                "bytes",
                "pandas.DataFrame",
                "tuple[pandas.DataFrame]"
            ]
        },
        {
            "category": "arg",
            "name": "raw",
            "type": [
                "bytes",
                "list[dict[str, typing.Any]]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result_roll_sum",
            "type": [
                "float",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "raw",
            "type": [
                "bytes",
                "list[dict[str, typing.Any]]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result_roll_generic",
            "type": [
                "list[tuple[typing.Union[int,typing.Any]]]",
                "list[tuple[typing.Any]]",
                "set[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_constructor_timedelta_window_and_minperiods",
            "type": [
                "None"
            ]
        }
    ],
    "test_constructor_with_timedelta_window@global": [
        {
            "category": "arg",
            "name": "window",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "list[tuple[typing.Union[typing.Any,int]]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame",
                "slice",
                "float",
                "list[list]"
            ]
        },
        {
            "category": "return",
            "name": "test_constructor_with_timedelta_window",
            "type": [
                "None"
            ]
        }
    ],
    "test_datetimelike_centered_offset_covers_all@global": [
        {
            "category": "arg",
            "name": "window",
            "type": [
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "starfish.core.imagestack.imagestack.ImageStack",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "typing.Sequence[T]",
                "numpy.ndarray",
                "numpy.void",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "list[Timestamp]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "int",
                "list",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "bool",
                "starfish.core.imagestack.imagestack.ImageStack",
                "tuple[int]",
                "int",
                "slice",
                "tuple[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_datetimelike_centered_offset_covers_all",
            "type": [
                "None"
            ]
        }
    ],
    "test_datetimelike_centered_selections@global": [
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "str",
                "pandas.Series",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "window_selections",
            "type": [
                "numpy.ndarray",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "arithmetic_win_operators",
            "type": [
                "typing.Sequence",
                "tuple[int]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "arithmetic_win_operators",
            "type": [
                "typing.Sequence",
                "tuple[int]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "func_name",
            "type": [
                "typing.Sequence",
                "tuple[int]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "df_time",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "window_selections",
            "type": [
                "numpy.ndarray",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "kwargs",
            "type": [
                "dict[typing.Text, int]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_datetimelike_centered_selections",
            "type": [
                "None"
            ]
        }
    ],
    "test_datetimelike_nonunique_index_centering@global": [
        {
            "category": "arg",
            "name": "window",
            "type": [
                "bool",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "bool",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list",
                "typing.Callable[None,None,None,None,None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "bool",
                "float",
                "int",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_datetimelike_nonunique_index_centering",
            "type": [
                "None"
            ]
        }
    ],
    "test_doc_string@global": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_doc_string",
            "type": [
                "None"
            ]
        }
    ],
    "test_empty_window_median_quantile@global": [
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "roll",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "float",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_empty_window_median_quantile",
            "type": [
                "None"
            ]
        }
    ],
    "test_even_number_window_alignment@global": [
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_even_number_window_alignment",
            "type": [
                "None"
            ]
        }
    ],
    "test_freq_window_not_implemented@global": [
        {
            "category": "arg",
            "name": "window",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_freq_window_not_implemented",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_nan_included@global": [
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[typing.Text, typing.Union[list[typing.Text],list[int]]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, float]",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_nan_included",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_constructor@global": [
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "w",
            "type": [
                "int",
                "float",
                "typing.Callable[..., T]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "str",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "w",
            "type": [
                "int",
                "float",
                "typing.Callable[..., T]"
            ]
        },
        {
            "category": "return",
            "name": "test_invalid_constructor",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_method@global": [
        {
            "category": "return",
            "name": "test_invalid_method",
            "type": [
                "None"
            ]
        }
    ],
    "test_invalid_quantile_value@global": [
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_invalid_quantile_value",
            "type": [
                "None"
            ]
        }
    ],
    "test_iter_rolling_dataframe@global": [
        {
            "category": "arg",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "float",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray",
                "Series"
            ]
        },
        {
            "category": "arg",
            "name": "window",
            "type": [
                "numpy.ndarray",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "min_periods",
            "type": [
                "numpy.ndarray",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "float",
                "str",
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "expecteds",
            "type": [
                "list[DataFrame]"
            ]
        },
        {
            "category": "local",
            "name": "window",
            "type": [
                "numpy.ndarray",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_periods",
            "type": [
                "numpy.ndarray",
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_iter_rolling_dataframe",
            "type": [
                "None"
            ]
        }
    ],
    "test_iter_rolling_datetime@global": [
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "int",
                "Series"
            ]
        },
        {
            "category": "arg",
            "name": "expected_index",
            "type": [
                "int",
                "pandas.Series",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "window",
            "type": [
                "int",
                "list",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "int",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "expected_index",
            "type": [
                "int",
                "pandas.Series",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "expecteds",
            "type": [
                "list[Series]"
            ]
        },
        {
            "category": "local",
            "name": "window",
            "type": [
                "int",
                "list",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_iter_rolling_datetime",
            "type": [
                "None"
            ]
        }
    ],
    "test_iter_rolling_on_dataframe@global": [
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "static_frame.core.series.Series",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "window",
            "type": [
                "list[float]",
                "float",
                "list[bytes]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "static_frame.core.series.Series",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expecteds",
            "type": [
                "list[DataFrame]"
            ]
        },
        {
            "category": "local",
            "name": "window",
            "type": [
                "list[float]",
                "float",
                "list[bytes]"
            ]
        },
        {
            "category": "return",
            "name": "test_iter_rolling_on_dataframe",
            "type": [
                "None"
            ]
        }
    ],
    "test_iter_rolling_on_dataframe_unordered@global": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "results",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "expecteds",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_iter_rolling_on_dataframe_unordered",
            "type": [
                "None"
            ]
        }
    ],
    "test_iter_rolling_series@global": [
        {
            "category": "arg",
            "name": "ser",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "arg",
            "name": "window",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "min_periods",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "expecteds",
            "type": [
                "list[Series]"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "window",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "min_periods",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_iter_rolling_series",
            "type": [
                "None"
            ]
        }
    ],
    "test_min_periods1@global": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[tuple[typing.Union[typing.Any,int]]]",
                "list",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_min_periods1",
            "type": [
                "None"
            ]
        }
    ],
    "test_missing_minp_zero@global": [
        {
            "category": "local",
            "name": "x",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[object]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_missing_minp_zero",
            "type": [
                "None"
            ]
        }
    ],
    "test_missing_minp_zero_variable@global": [
        {
            "category": "local",
            "name": "x",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_missing_minp_zero_variable",
            "type": [
                "None"
            ]
        }
    ],
    "test_multi_index_names@global": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[tuple[typing.Any]]",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_multi_index_names",
            "type": [
                "None"
            ]
        }
    ],
    "test_numeric_only_corr_cov_frame@global": [
        {
            "category": "arg",
            "name": "kernel",
            "type": [
                "bool",
                "float",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "use_arg",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "use_arg",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "arg",
            "type": [
                "tuple[DataFrame]"
            ]
        },
        {
            "category": "local",
            "name": "rolling",
            "type": [
                "str",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "kernel",
            "type": [
                "bool",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "op",
            "type": [
                "list",
                "typing.Callable[None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "list[dict[str, typing.Any]]",
                "typing.NoReturn"
            ]
        },
        {
            "category": "local",
            "name": "columns",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "df2",
            "type": [
                "pandas.DataFrame",
                "pandas.Series",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "arg2",
            "type": [
                "tuple[typing.Union[pandas.DataFrame,pandas.Series,list]]"
            ]
        },
        {
            "category": "local",
            "name": "rolling2",
            "type": [
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "op2",
            "type": [
                "list",
                "typing.Callable[None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "dict[str, typing.Union[typing.Any,int,str]]",
                "dict[int, list[typing.Any]]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_numeric_only_corr_cov_frame",
            "type": [
                "None"
            ]
        }
    ],
    "test_numeric_only_corr_cov_series@global": [
        {
            "category": "arg",
            "name": "kernel",
            "type": [
                "bool",
                "str",
                "None",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "use_arg",
            "type": [
                "bool",
                "object"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool",
                "tuple[typing.Union[bool,str]]",
                "list[bool]"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "dict[str, bool]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "dict[str, bool]"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "use_arg",
            "type": [
                "bool",
                "object"
            ]
        },
        {
            "category": "local",
            "name": "arg",
            "type": [
                "tuple[Series]"
            ]
        },
        {
            "category": "local",
            "name": "rolling",
            "type": [
                "tuple[tuple[typing.Any]]",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "kernel",
            "type": [
                "bool",
                "str",
                "None",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "op",
            "type": [
                "list",
                "str",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool",
                "tuple[typing.Union[bool,str]]",
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "list",
                "typing.Match"
            ]
        },
        {
            "category": "local",
            "name": "ser2",
            "type": [
                "list[int]",
                "float",
                "Anaconda3.Lib.site-packages.astropy.time.core.TimeDelta"
            ]
        },
        {
            "category": "local",
            "name": "arg2",
            "type": [
                "tuple[typing.Union[list[int],float,Anaconda3.Lib.site-packages.astropy.time.core.TimeDelta]]"
            ]
        },
        {
            "category": "local",
            "name": "rolling2",
            "type": [
                "list",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "op2",
            "type": [
                "list",
                "typing.Callable[None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[list[str]]",
                "dict[str, typing.Union[typing.Any,int,str]]",
                "dict[int, list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_numeric_only_corr_cov_series",
            "type": [
                "None"
            ]
        }
    ],
    "test_numeric_only_frame@global": [
        {
            "category": "arg",
            "name": "arithmetic_win_operators",
            "type": [
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool",
                "typing.Sequence[str]",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "arithmetic_win_operators",
            "type": [
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "kernel",
            "type": [
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "rolling",
            "type": [
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "op",
            "type": [
                "str",
                "list[str]",
                "tuple[typing.Optional[typing.Literal]]"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool",
                "typing.Sequence[str]",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "bool",
                "typing.NoReturn",
                "pandas.core.arrays.numpy_.PandasArray"
            ]
        },
        {
            "category": "local",
            "name": "columns",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[bool]",
                "list",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "test_numeric_only_frame",
            "type": [
                "None"
            ]
        }
    ],
    "test_numeric_only_series@global": [
        {
            "category": "arg",
            "name": "arithmetic_win_operators",
            "type": [
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]",
                "static_frame.core.util.UFunc"
            ]
        },
        {
            "category": "local",
            "name": "arithmetic_win_operators",
            "type": [
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "kernel",
            "type": [
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]",
                "static_frame.core.util.UFunc"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "rolling",
            "type": [
                "list",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "op",
            "type": [
                "str",
                "tuple[typing.Optional[typing.Literal]]"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[object]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "float",
                "list",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "test_numeric_only_series",
            "type": [
                "None"
            ]
        }
    ],
    "test_rank@global": [
        {
            "category": "arg",
            "name": "window",
            "type": [
                "bool",
                "str",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "bool",
                "str",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "pct",
            "type": [
                "bool",
                "str",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "ascending",
            "type": [
                "bool",
                "str",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "test_data",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "length",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "test_data",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "float",
                "tuple[float]",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "bool",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "pct",
            "type": [
                "bool",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "ascending",
            "type": [
                "bool",
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_rank",
            "type": [
                "None"
            ]
        }
    ],
    "test_readonly_array@global": [
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "float",
                "tuple[typing.Union[bool,float]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_readonly_array",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_axis_count@global": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "dict[str, int]"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_axis_count",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_axis_sum@global": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_axis_sum",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_center_nanosecond_resolution@global": [
        {
            "category": "arg",
            "name": "window",
            "type": [
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "bool",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "alibi.api.interfaces.Explanation"
            ]
        },
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "list",
                "int",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "bool",
                "alibi.api.interfaces.Explanation",
                "float",
                "int",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_center_nanosecond_resolution",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_corr_timedelta_index@global": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "pandas.Series",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "window",
            "type": [
                "int",
                "None",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "pandas.Series",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "y",
            "type": [
                "list[float]",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_corr_timedelta_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_count_default_min_periods_with_null_values@global": [
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "DataFrame",
                "typing.Callable",
                "starfish.core.morphology.binary_mask.BinaryMaskCollection"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected_counts",
            "type": [
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[int]",
                "list",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_count_default_min_periods_with_null_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_count_with_min_periods@global": [
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "tuple[float]",
                "float",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_count_with_min_periods",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_datetime@global": [
        {
            "category": "arg",
            "name": "tz_naive_fixture",
            "type": [
                "str",
                "bool",
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "tz_naive_fixture",
            "type": [
                "str",
                "bool",
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "str",
                "bool",
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_datetime",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_decreasing_indices@global": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df_reverse",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "increasing",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "decreasing",
            "type": [
                "str",
                "float",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_decreasing_indices",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_decreasing_indices_centered@global": [
        {
            "category": "arg",
            "name": "window",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "numpy.ndarray",
                "starfish.core.imagestack.imagestack.ImageStack"
            ]
        },
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "bool",
                "numpy.ndarray",
                "starfish.core.imagestack.imagestack.ImageStack"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "df_inc",
            "type": [
                "pandas.DataFrame",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "df_dec",
            "type": [
                "list",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "bool",
                "numpy.ndarray",
                "starfish.core.imagestack.imagestack.ImageStack"
            ]
        },
        {
            "category": "local",
            "name": "expected_inc",
            "type": [
                "tuple[typing.Any]",
                "list[int]",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected_dec",
            "type": [
                "list[int]",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result_inc",
            "type": [
                "dict",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result_dec",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_decreasing_indices_centered",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_descending_date_order_with_offset@global": [
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "pandas.DataFrame",
                "list",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "list",
                "dict",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "tuple[float]",
                "float",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_descending_date_order_with_offset",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_first_last@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "int",
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "str",
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "Series",
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, typing.Any]",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "str",
                "numpy.ndarray",
                "int",
                "Series",
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_first_last",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_first_last_no_minp@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "str",
                "int",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "int",
                "tuple[dict]"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "str",
                "float",
                "pandas.Series",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str",
                "int",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "Series",
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[object]",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "str",
                "float",
                "pandas.Series",
                "None",
                "Series",
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_first_last_no_minp",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_mean_all_nan_window_floating_artifacts@global": [
        {
            "category": "arg",
            "name": "start",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "exp_values",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "exp_values",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[tuple[typing.Union[typing.Any,int]]]",
                "list",
                "dict[str, float]"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_mean_all_nan_window_floating_artifacts",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_mean_sum_floating_artifacts@global": [
        {
            "category": "local",
            "name": "sr",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_mean_sum_floating_artifacts",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_non_monotonic@global": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "str",
                "Series",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "use_expanding",
            "type": [
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "CustomIndexer"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, typing.Any]",
                "list[typing.Optional[float]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "str",
                "Series",
                "pandas.DataFrame",
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_non_monotonic",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_numerical_accuracy_jump@global": [
        {
            "category": "local",
            "name": "index",
            "type": [
                "list",
                "range"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "list",
                "list[int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "float",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_numerical_accuracy_jump",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_numerical_accuracy_kahan_mean@global": [
        {
            "category": "arg",
            "name": "add",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "numpy.ndarray",
                "int",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "numpy.ndarray",
                "int",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "dti",
            "type": [
                "datetime.datetime.datetime",
                "list[tuple[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "add",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[tuple[typing.Union[typing.Any,int]]]",
                "list",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "dates",
            "type": [
                "datetime.datetime.datetime",
                "list[str]",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_numerical_accuracy_kahan_mean",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_numerical_accuracy_kahan_sum@global": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_numerical_accuracy_kahan_sum",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_numerical_accuracy_small_values@global": [
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_numerical_accuracy_small_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_numerical_too_large_numbers@global": [
        {
            "category": "local",
            "name": "dates",
            "type": [
                "str",
                "datetime.datetime.datetime",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "ds",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_numerical_too_large_numbers",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_period_index@global": [
        {
            "category": "arg",
            "name": "index",
            "type": [
                "typing.Iterable[typing.Any]",
                "int",
                "typing.Sequence[numpy.ndarray]"
            ]
        },
        {
            "category": "arg",
            "name": "window",
            "type": [
                "static_frame.core.frame.Frame",
                "int",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "func",
            "type": [
                "static_frame.core.frame.Frame",
                "int",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "int",
                "typing.Sequence[T]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "typing.Iterable[typing.Any]",
                "int",
                "typing.Sequence[numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "ds",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "Anaconda3.Lib.site-packages.IPython.core.interactiveshell.ExecutionResult"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "typing.Sequence[T]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_period_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_positional_argument@global": [
        {
            "category": "arg",
            "name": "grouping",
            "type": []
        },
        {
            "category": "arg",
            "name": "_index",
            "type": [
                "int",
                "set[int]"
            ]
        },
        {
            "category": "arg",
            "name": "raw",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "_index",
            "type": [
                "int",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame",
                "int",
                "list[bool]",
                "list[list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "raw",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_positional_argument",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_quantile_interpolation_options@global": [
        {
            "category": "arg",
            "name": "quantile",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "interpolation",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "T",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "T",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "quantile",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "interpolation",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "q1",
            "type": [
                "float",
                "tuple[typing.Literal]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_quantile_interpolation_options",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_quantile_np_percentile@global": [
        {
            "category": "local",
            "name": "row",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "col",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "int",
                "list[int]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df_quantile",
            "type": [
                "pandas.DataFrame",
                "list",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_quantile_np_percentile",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_quantile_param@global": [
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_quantile_param",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_sem@global": [
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "DataFrame",
                "typing.Callable[T, bool]"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "dict",
                "dict[int, typing.Any]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "float",
                "DataFrame",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_sem",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_skew_kurt_floating_artifacts@global": [
        {
            "category": "local",
            "name": "sr",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "int",
                "dict",
                "dict[str, int]"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_skew_kurt_floating_artifacts",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_skew_kurt_large_value_range@global": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "tuple[int]",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": []
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[object]",
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_skew_kurt_large_value_range",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_skew_kurt_numerical_stability@global": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series",
                "list",
                "Anaconda3.Lib.site-packages.astropy.time.core.TimeDelta",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "ser_copy",
            "type": [
                "str",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "dict",
                "dict[typing.Any, float]",
                "dict[str, typing.Union[typing.Any,int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[object]",
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_skew_kurt_numerical_stability",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_std_1obs@global": [
        {
            "category": "local",
            "name": "vals",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[list[str]]",
                "tuple[typing.Union[bool,float]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_std_1obs",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_std_neg_sqrt@global": [
        {
            "category": "local",
            "name": "a",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "b",
            "type": [
                "list[int]",
                "int",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_std_neg_sqrt",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_std_small_values@global": [
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "tuple[typing.Union[bool,float]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_std_small_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_sum_all_nan_window_floating_artifacts@global": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_sum_all_nan_window_floating_artifacts",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_timedelta_window_non_nanoseconds@global": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "datetime.date",
                "pandas.Timestamp",
                "tuple[str]"
            ]
        },
        {
            "category": "arg",
            "name": "tz",
            "type": [
                "int",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "int",
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df_time",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "sum_in_nanosecs",
            "type": [
                "float",
                "int",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "datetime.date",
                "pandas.Timestamp",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "sum_in_microsecs",
            "type": [
                "int",
                "float",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "ref_dates",
            "type": [
                "datetime.datetime",
                "str",
                "list[datetime.datetime]"
            ]
        },
        {
            "category": "local",
            "name": "ref_series",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "ref_max_series",
            "type": [
                "int",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "dates",
            "type": [
                "list[datetime.date]",
                "datetime.datetime.datetime"
            ]
        },
        {
            "category": "local",
            "name": "series",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "max_series",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "ref_df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_timedelta_window_non_nanoseconds",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_var_floating_artifact_precision@global": [
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "float",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_var_floating_artifact_precision",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_var_numerical_issues@global": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable[T, bool]"
            ]
        },
        {
            "category": "arg",
            "name": "third_value",
            "type": [
                "int",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": []
        },
        {
            "category": "local",
            "name": "third_value",
            "type": [
                "int",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "ds",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[object]",
                "list",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_var_numerical_issues",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_var_same_value_count_logic@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "str",
                "int",
                "Series"
            ]
        },
        {
            "category": "arg",
            "name": "window",
            "type": [
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "min_periods",
            "type": [
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "pandas.DataFrame",
                "str",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "pandas.DataFrame",
                "str",
                "bytes",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str",
                "int",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "sr",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result_var",
            "type": [
                "str",
                "list",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "result_std",
            "type": [
                "float",
                "int",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_var_same_value_count_logic",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_window_as_string@global": [
        {
            "category": "arg",
            "name": "center",
            "type": [
                "float",
                "core.audio.audio_backend.AudioBackend",
                "bob_emploi.frontend.api.application_pb2.ResumeTips"
            ]
        },
        {
            "category": "local",
            "name": "days",
            "type": [
                "str",
                "list[typing.Optional[str]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "center",
            "type": [
                "float",
                "core.audio.audio_backend.AudioBackend",
                "bob_emploi.frontend.api.application_pb2.ResumeTips"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "list[str]",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_window_as_string",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_zero_window@global": [
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "tuple[typing.Union[bool,float]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_zero_window",
            "type": [
                "None"
            ]
        }
    ],
    "test_step_not_implemented_for_cov_corr@global": [
        {
            "category": "arg",
            "name": "agg",
            "type": [
                "bob_emploi.frontend.api.application_pb2.ResumeTips",
                "typing.Callable[pandas.DataFrame, pandas.DataFrame]",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "roll",
            "type": [
                "list",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_step_not_implemented_for_cov_corr",
            "type": [
                "None"
            ]
        }
    ],
    "test_step_not_integer_raises@global": [
        {
            "category": "return",
            "name": "test_step_not_integer_raises",
            "type": [
                "None"
            ]
        }
    ],
    "test_step_not_positive_raises@global": [
        {
            "category": "return",
            "name": "test_step_not_positive_raises",
            "type": [
                "None"
            ]
        }
    ],
    "test_timeoffset_as_window_parameter_for_corr@global": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "datetime.datetime",
                "float",
                "tuple[datetime.datetime]"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "datetime.datetime",
                "float",
                "tuple[datetime.datetime]"
            ]
        },
        {
            "category": "local",
            "name": "dti",
            "type": [
                "typing.Callable[None, typing.Any]",
                "datetime.time",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "exp",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "list[int]",
                "dict",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_timeoffset_as_window_parameter_for_corr",
            "type": [
                "None"
            ]
        }
    ],
    "test_variable_offset_window_nonunique@global": [
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "float",
                "int",
                "starfish.core.types.Number"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "int",
                "list",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "list",
                "float",
                "int",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "offset",
            "type": [
                "BusinessDay"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "VariableOffsetWindowIndexer"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "tuple[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_variable_offset_window_nonunique",
            "type": [
                "None"
            ]
        }
    ],
    "test_variable_window_nonunique@global": [
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "bool",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "frame_or_series",
            "type": [
                "numpy.ndarray",
                "bool",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list",
                "typing.Callable[None,None,None,None,None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "bool",
                "numpy.ndarray",
                "float",
                "int",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_variable_window_nonunique",
            "type": [
                "None"
            ]
        }
    ],
    "tests_empty_df_rolling@global": [
        {
            "category": "arg",
            "name": "roller",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "float",
                "dict[typing.Any, list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "tests_empty_df_rolling",
            "type": [
                "None"
            ]
        }
    ]
}