{
    "__aenter__@BaseWorker": [
        {
            "category": "return",
            "name": "__aenter__",
            "type": [
                "BaseWorker"
            ]
        }
    ],
    "__aexit__@BaseWorker": [
        {
            "category": "arg",
            "name": "exc_info",
            "type": [
                "str",
                "typing.Type",
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "exc_info",
            "type": [
                "str",
                "typing.Type",
                "Exception"
            ]
        },
        {
            "category": "return",
            "name": "__aexit__",
            "type": [
                "None"
            ]
        }
    ],
    "__bool__@BaseWorkerResult": [
        {
            "category": "return",
            "name": "__bool__",
            "type": [
                "bool"
            ]
        }
    ],
    "__dispatch_key__@BaseWorker": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "__dispatch_key__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@BaseWorker": [
        {
            "category": "arg",
            "name": "work_pool_name",
            "type": [
                "str",
                "None",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "arg",
            "name": "work_queues",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "prefetch_seconds",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "create_pool_if_not_found",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "limit",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "heartbeat_interval_seconds",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "base_job_template",
            "type": [
                "None",
                "str",
                "bool",
                "dcos_e2e.distributions.Distribution"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_started_event",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "backend_id",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_logger",
            "type": [
                "logging.Logger",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "is_setup",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "create_pool_if_not_found",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_create_pool_if_not_found",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "base_job_template",
            "type": [
                "None",
                "str",
                "bool",
                "dcos_e2e.distributions.Distribution"
            ]
        },
        {
            "category": "local",
            "name": "_base_job_template",
            "type": [
                "None",
                "str",
                "bool",
                "dcos_e2e.distributions.Distribution"
            ]
        },
        {
            "category": "local",
            "name": "work_pool_name",
            "type": [
                "str",
                "None",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "_work_pool_name",
            "type": [
                "str",
                "None",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "work_queues",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_work_queues",
            "type": [
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "prefetch_seconds",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_prefetch_seconds",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "heartbeat_interval_seconds",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_work_pool",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_exit_stack",
            "type": [
                "AsyncExitStack"
            ]
        },
        {
            "category": "local",
            "name": "_runs_task_group",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_client",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_limit",
            "type": [
                "None",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "_limiter",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_submitting_flow_run_ids",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "_cancelling_flow_run_ids",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "_scheduled_task_scopes",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "_worker_metadata_sent",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__repr__@BaseWorker": [
        {
            "category": "return",
            "name": "__repr__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_base_deployment_labels@BaseJobConfiguration": [
        {
            "category": "arg",
            "name": "deployment",
            "type": [
                "dict",
                "Flow"
            ]
        },
        {
            "category": "local",
            "name": "deployment",
            "type": [
                "dict",
                "Flow"
            ]
        },
        {
            "category": "local",
            "name": "deployment_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "labels",
            "type": [
                "dict[typing.Text, str]"
            ]
        },
        {
            "category": "return",
            "name": "_base_deployment_labels",
            "type": [
                "dict[typing.Text, str]"
            ]
        }
    ],
    "_base_environment@BaseJobConfiguration": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_base_environment",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "_base_flow_labels@BaseJobConfiguration": [
        {
            "category": "arg",
            "name": "flow",
            "type": [
                "Flow"
            ]
        },
        {
            "category": "local",
            "name": "flow",
            "type": [
                "Flow"
            ]
        },
        {
            "category": "return",
            "name": "_base_flow_labels",
            "type": [
                "dict[typing.Text, str]"
            ]
        }
    ],
    "_base_flow_run_command@BaseJobConfiguration": [
        {
            "category": "return",
            "name": "_base_flow_run_command",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_base_flow_run_environment@BaseJobConfiguration": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "registry.services.Container",
                "typing.Callable[str, hexpy.base.JSONDict]"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "registry.services.Container",
                "typing.Callable[str, hexpy.base.JSONDict]"
            ]
        },
        {
            "category": "return",
            "name": "_base_flow_run_environment",
            "type": [
                "dict[typing.Text, str]"
            ]
        }
    ],
    "_base_flow_run_labels@BaseJobConfiguration": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_base_flow_run_labels",
            "type": [
                "dict[typing.Text, str]"
            ]
        }
    ],
    "_check_flow_run@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": []
        },
        {
            "category": "local",
            "name": "deployment",
            "type": [
                "typing.Iterator"
            ]
        },
        {
            "category": "return",
            "name": "_check_flow_run",
            "type": [
                "None"
            ]
        }
    ],
    "_coerce_command@BaseJobConfiguration": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Type",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "v",
            "type": [
                "str",
                "typing.Type",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "str",
                "typing.Type",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "_coerce_command",
            "type": [
                "str",
                "None",
                "bool"
            ]
        }
    ],
    "_coerce_env@BaseJobConfiguration": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "v",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "'ModelOrDc'"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "'ModelOrDc'",
                "tuple[typing.Union[str,typing.Any]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "k",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "_coerce_env",
            "type": [
                "dict[tuple[typing.Union[str,typing.Any]], typing.Union[str,None]]"
            ]
        }
    ],
    "_emit_flow_run_executed_event@BaseWorker": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "str",
                "task_processing.plugins.mesos.task_config.MesosTaskConfig"
            ]
        },
        {
            "category": "arg",
            "name": "configuration",
            "type": [
                "dict",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "submitted_event",
            "type": [
                "dict",
                "dict[str, model.Integration]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "configuration",
            "type": [
                "dict",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "related",
            "type": [
                "dict[typing.Any, dict[str, typing.Any]]",
                "dict[str, dict[str, bool]]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "task_processing.plugins.mesos.task_config.MesosTaskConfig"
            ]
        },
        {
            "category": "local",
            "name": "submitted_event",
            "type": [
                "dict",
                "dict[str, model.Integration]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_emit_flow_run_executed_event",
            "type": [
                "None"
            ]
        }
    ],
    "_emit_flow_run_submitted_event@BaseWorker": [
        {
            "category": "arg",
            "name": "configuration",
            "type": [
                "lightbus.plugins.PluginRegistry",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "configuration",
            "type": [
                "lightbus.plugins.PluginRegistry",
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "_emit_flow_run_submitted_event",
            "type": [
                "bool"
            ]
        }
    ],
    "_emit_worker_started_event@BaseWorker": [
        {
            "category": "return",
            "name": "_emit_worker_started_event",
            "type": [
                "bytes",
                "int"
            ]
        }
    ],
    "_emit_worker_stopped_event@BaseWorker": [
        {
            "category": "arg",
            "name": "started_event",
            "type": [
                "tuple",
                "None",
                "\"TransactionModel\"",
                "core.D.Event"
            ]
        },
        {
            "category": "local",
            "name": "started_event",
            "type": [
                "tuple",
                "None",
                "\"TransactionModel\"",
                "core.D.Event"
            ]
        },
        {
            "category": "return",
            "name": "_emit_worker_stopped_event",
            "type": [
                "None"
            ]
        }
    ],
    "_event_related_resources@BaseWorker": [
        {
            "category": "arg",
            "name": "configuration",
            "type": [
                "None",
                "bool",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "include_self",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "related",
            "type": [
                "list",
                "list[tuple[typing.Union[str,int]]]",
                "dict[str, dict[str, bool]]"
            ]
        },
        {
            "category": "local",
            "name": "configuration",
            "type": [
                "None",
                "bool",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "include_self",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_event_related_resources",
            "type": [
                "list",
                "list[tuple[typing.Union[str,int]]]",
                "dict[str, dict[str, bool]]"
            ]
        }
    ],
    "_event_resource@BaseWorker": [
        {
            "category": "return",
            "name": "_event_resource",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        }
    ],
    "_get_base_config_defaults@BaseJobConfiguration": [
        {
            "category": "arg",
            "name": "variables",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "variable_name",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "attrs",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "variables",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_get_base_config_defaults",
            "type": []
        }
    ],
    "_get_configuration@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "dict",
                "lightbus.plugins.PluginRegistry"
            ]
        },
        {
            "category": "arg",
            "name": "deployment",
            "type": [
                "None",
                "lightbus.plugins.PluginRegistry",
                "inspire_mitmproxy.services.base_service.BaseService",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "deployment",
            "type": [
                "None",
                "lightbus.plugins.PluginRegistry",
                "inspire_mitmproxy.services.base_service.BaseService",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "dict",
                "lightbus.plugins.PluginRegistry"
            ]
        },
        {
            "category": "local",
            "name": "flow",
            "type": [
                "list[str]",
                "str",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "deployment_vars",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "flow_run_vars",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "job_variables",
            "type": [
                "dict[, dict]"
            ]
        },
        {
            "category": "local",
            "name": "configuration",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "predico.services.adapter.config.AdapterServiceConfig"
            ]
        },
        {
            "category": "return",
            "name": "_get_configuration",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "predico.services.adapter.config.AdapterServiceConfig"
            ]
        }
    ],
    "_get_scheduled_flow_runs@BaseWorker": [
        {
            "category": "local",
            "name": "scheduled_flow_runs",
            "type": [
                "str",
                "list[bool]"
            ]
        },
        {
            "category": "return",
            "name": "_get_scheduled_flow_runs",
            "type": [
                "str",
                "list[bool]",
                "list"
            ]
        }
    ],
    "_give_worker_labels_to_flow_run@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run_id",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "labels",
            "type": [
                "dict[typing.Text, ]",
                "dict[typing.Text, str]"
            ]
        },
        {
            "category": "local",
            "name": "flow_run_id",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "_give_worker_labels_to_flow_run",
            "type": [
                "None"
            ]
        }
    ],
    "_mark_flow_run_as_cancelled@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": []
        },
        {
            "category": "arg",
            "name": "state_updates",
            "type": [
                "None",
                "dict",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "state_updates",
            "type": [
                "None",
                "dict",
                "bool",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "objects.DocPair",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_mark_flow_run_as_cancelled",
            "type": [
                "None"
            ]
        }
    ],
    "_propose_crashed_state@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "typing.Callable",
                "asyncio.Future"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "typing.Callable",
                "asyncio.Future"
            ]
        },
        {
            "category": "local",
            "name": "run_logger",
            "type": [
                "logging.Logger",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_propose_crashed_state",
            "type": [
                "None"
            ]
        }
    ],
    "_propose_failed_state@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "exc",
            "type": [
                "typing.Callable",
                "BaseException"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "run_logger",
            "type": [
                "logging.Logger",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "typing.Callable",
                "BaseException"
            ]
        },
        {
            "category": "return",
            "name": "_propose_failed_state",
            "type": [
                "None"
            ]
        }
    ],
    "_propose_pending_state@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "Flow",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "Flow",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "run_logger",
            "type": [
                "logging.Logger",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "return",
            "name": "_propose_pending_state",
            "type": [
                "bool"
            ]
        }
    ],
    "_related_resources@BaseJobConfiguration": [
        {
            "category": "local",
            "name": "tags",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "related",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_related_resources",
            "type": [
                "str",
                "list[str]",
                "None",
                "'PartSet'",
                "list['Part']"
            ]
        }
    ],
    "_release_limit_slot@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "flow_run_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_release_limit_slot",
            "type": [
                "None"
            ]
        }
    ],
    "_schedule_task@BaseWorker": [
        {
            "category": "arg",
            "name": "__in_seconds",
            "type": [
                "typing.Callable[typing.Any, int]"
            ]
        },
        {
            "category": "arg",
            "name": "fn",
            "type": [
                "typing.Callable[typing.Any, int]"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "_schedule_task",
            "type": [
                "None"
            ]
        }
    ],
    "_send_worker_heartbeat@BaseWorker": [
        {
            "category": "return",
            "name": "_send_worker_heartbeat",
            "type": [
                "None",
                "str",
                "int",
                "uuid.UUID"
            ]
        },
        {
            "category": "local",
            "name": "should_get_worker_id",
            "type": [
                "typing.Literal"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "dict[typing.Text, typing.Literal]",
                "dict[typing.Text, typing.Union[typing.Literal,dict[str, typing.Any],dict[str, str],dict]]"
            ]
        },
        {
            "category": "local",
            "name": "_worker_metadata_sent",
            "type": [
                "int",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "worker_metadata",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "worker_id",
            "type": [
                "None",
                "str",
                "int",
                "uuid.UUID"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "Exception"
            ]
        }
    ],
    "_set_work_pool_template@BaseWorker": [
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "\"IConnection\""
            ]
        },
        {
            "category": "arg",
            "name": "job_template",
            "type": [
                "\"IConnection\""
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "\"IConnection\""
            ]
        },
        {
            "category": "local",
            "name": "job_template",
            "type": [
                "\"IConnection\""
            ]
        },
        {
            "category": "return",
            "name": "_set_work_pool_template",
            "type": [
                "None"
            ]
        }
    ],
    "_should_get_worker_id@BaseWorker": [
        {
            "category": "return",
            "name": "_should_get_worker_id",
            "type": [
                "bool"
            ]
        }
    ],
    "_submit_run@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "libcloud.common.base.BaseDriver"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "libcloud.common.base.BaseDriver"
            ]
        },
        {
            "category": "local",
            "name": "run_logger",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "return",
            "name": "_submit_run",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ready_to_submit",
            "type": [
                "list[bool]",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "readiness_result",
            "type": [
                "list",
                "bool",
                "types.R"
            ]
        }
    ],
    "_submit_run_and_capture_errors@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "typing.Callable",
                "Event"
            ]
        },
        {
            "category": "arg",
            "name": "task_status",
            "type": [
                "None",
                "list[google.cloud.tasks_v2.types.task_pb2.Task]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "typing.Callable",
                "Event"
            ]
        },
        {
            "category": "local",
            "name": "run_logger",
            "type": [
                "logging.Logger",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "configuration",
            "type": [
                "dict[str, str]",
                "dict[str, typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "submitted_event",
            "type": [
                "asyncio.locks.Event",
                "str",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "task_status",
            "type": [
                "None",
                "list[google.cloud.tasks_v2.types.task_pb2.Task]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "list",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_submit_run_and_capture_errors",
            "type": [
                "Exception",
                "str",
                "list",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        }
    ],
    "_submit_scheduled_flow_runs@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run_response",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "types.FlaskApp"
            ]
        },
        {
            "category": "local",
            "name": "flow_run_response",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "types.FlaskApp"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "submittable_flow_runs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "ve",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "return",
            "name": "_submit_scheduled_flow_runs",
            "type": [
                "list"
            ]
        }
    ],
    "_update_local_work_pool_info@BaseWorker": [
        {
            "category": "local",
            "name": "wp",
            "type": [
                "WorkPoolCreate"
            ]
        },
        {
            "category": "local",
            "name": "_base_job_template",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_update_local_work_pool_info",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_work_pool",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "work_pool_",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "job_template",
            "type": [
                "str",
                "dict"
            ]
        }
    ],
    "_worker_metadata@BaseWorker": [
        {
            "category": "local",
            "name": "installed_integrations",
            "type": [
                "list[str]",
                "set[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "integration_versions",
            "type": [
                "list[Integration]"
            ]
        },
        {
            "category": "return",
            "name": "_worker_metadata",
            "type": [
                "WorkerMetadata",
                "None"
            ]
        }
    ],
    "from_template_and_values@BaseJobConfiguration": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "dict",
                "sqlalchemy.engine.base.Engine"
            ]
        },
        {
            "category": "arg",
            "name": "base_job_template",
            "type": [
                "str",
                "sqlalchemy.engine.base.Engine"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "client",
            "type": [
                "None",
                "list[typing.Union[lightbus.utilities.features.Feature,str]]"
            ]
        },
        {
            "category": "local",
            "name": "base_job_template",
            "type": [
                "str",
                "sqlalchemy.engine.base.Engine"
            ]
        },
        {
            "category": "local",
            "name": "variables_schema",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "str",
                "dict",
                "sqlalchemy.engine.base.Engine"
            ]
        },
        {
            "category": "local",
            "name": "variables",
            "type": [
                "dict[str, str]",
                "dict[str, bool]",
                "dict[str, typing.Union[bool,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "deployment_env",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "None",
                "list[typing.Union[lightbus.utilities.features.Feature,str]]"
            ]
        },
        {
            "category": "return",
            "name": "from_template_and_values",
            "type": []
        }
    ],
    "get_all_available_worker_types@BaseWorker": [
        {
            "category": "local",
            "name": "worker_registry",
            "type": [
                "typing.DefaultDict",
                "dict[str, list[typing.Any]]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_all_available_worker_types",
            "type": [
                "list[list[str]]",
                "list"
            ]
        }
    ],
    "get_and_submit_flow_runs@BaseWorker": [
        {
            "category": "local",
            "name": "runs_response",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "get_and_submit_flow_runs",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "get_default_base_job_template@BaseWorker": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "dict[str, str]",
                "types.ModuleType"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "str",
                "dict[str, str]",
                "types.ModuleType"
            ]
        },
        {
            "category": "local",
            "name": "cls_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "schema",
            "type": [
                "dict[str, typing.Any]",
                "dot_repository.schemas.DotFlowContainerSchema",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "variables_schema",
            "type": [
                "dict[str, typing.Any]",
                "dot_repository.schemas.DotFlowContainerSchema",
                "dict[str, str]",
                "dict[str, list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "get_default_base_job_template",
            "type": [
                "dict[typing.Text, typing.Union[dict[str, typing.Any],dict[str, list[typing.Any]],dict[str, str]]]"
            ]
        }
    ],
    "get_description@BaseWorker": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_description",
            "type": []
        }
    ],
    "get_documentation_url@BaseWorker": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_documentation_url",
            "type": []
        }
    ],
    "get_flow_run_logger@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "extra",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "get_flow_run_logger",
            "type": [
                "str",
                "bool"
            ]
        }
    ],
    "get_logo_url@BaseWorker": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_logo_url",
            "type": []
        }
    ],
    "get_name_slug@BaseWorker": [
        {
            "category": "return",
            "name": "get_name_slug",
            "type": []
        }
    ],
    "get_status@BaseWorker": [
        {
            "category": "local",
            "name": "_work_pool",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_status",
            "type": [
                "dict[typing.Text, typing.Union[None,dict[typing.Text, ]]]"
            ]
        }
    ],
    "get_worker_class_from_type@BaseWorker": [
        {
            "category": "arg",
            "name": "type",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "worker_registry",
            "type": [
                "typing.DefaultDict",
                "dict[str, list]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "type",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "get_worker_class_from_type",
            "type": [
                "list"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "C",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "V",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "R",
            "type": [
                "TypeVar"
            ]
        }
    ],
    "is_using_a_runner@BaseJobConfiguration": [
        {
            "category": "return",
            "name": "is_using_a_runner",
            "type": [
                "bool"
            ]
        }
    ],
    "is_worker_still_polling@BaseWorker": [
        {
            "category": "arg",
            "name": "query_interval_seconds",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "query_interval_seconds",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "threshold_seconds",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "is_still_polling",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "is_worker_still_polling",
            "type": [
                "bool"
            ]
        }
    ],
    "json_template@BaseJobConfiguration": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Type",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "configuration",
            "type": [
                "dict",
                "dict[tuple[str], str]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "properties",
            "type": [
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "k",
            "type": [
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "template",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "json_template",
            "type": [
                "dict[tuple[str], str]"
            ]
        }
    ],
    "model_json_schema@BaseVariables": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "by_alias",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "ref_template",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "schema_generator",
            "type": []
        },
        {
            "category": "arg",
            "name": "mode",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "by_alias",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ref_template",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "mode",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "model_json_schema",
            "type": []
        }
    ],
    "prepare_for_flow_run@BaseJobConfiguration": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "lightbus.plugins.PluginRegistry",
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "deployment",
            "type": [
                "None",
                "bool",
                "Flow",
                "typing.Sequence[cmk.base.check_utils.Service]"
            ]
        },
        {
            "category": "arg",
            "name": "flow",
            "type": [
                "None",
                "bool",
                "Flow",
                "typing.Sequence[cmk.base.check_utils.Service]"
            ]
        },
        {
            "category": "local",
            "name": "deployment",
            "type": [
                "None",
                "bool",
                "Flow",
                "typing.Sequence[cmk.base.check_utils.Service]"
            ]
        },
        {
            "category": "local",
            "name": "flow",
            "type": [
                "None",
                "bool",
                "Flow",
                "typing.Sequence[cmk.base.check_utils.Service]"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "lightbus.plugins.PluginRegistry",
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_related_objects",
            "type": [
                "dict[typing.Text, typing.Union[None,bool,Flow,typing.Sequence[cmk.base.check_utils.Service],lightbus.plugins.PluginRegistry]]"
            ]
        },
        {
            "category": "local",
            "name": "deployment_labels",
            "type": [
                "str",
                "list[str]",
                "tuple[typing.Literal]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "flow_labels",
            "type": [
                "str",
                "typing.Iterable[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "dict[str, str]",
                "dict",
                "dict[, dict]"
            ]
        },
        {
            "category": "local",
            "name": "labels",
            "type": [
                "str",
                "set[str]",
                "list",
                "dict[typing.Union[dict,str,list[str],tuple[typing.Literal]], typing.Union[dict,str,set[str],list]]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "dict[typing.Any, str]"
            ]
        },
        {
            "category": "local",
            "name": "command",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "prepare_for_flow_run",
            "type": [
                "None"
            ]
        }
    ],
    "run@BaseWorker": [
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "bool",
                "dict",
                "list[typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "configuration",
            "type": [
                "bool",
                "dict",
                "list[typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "task_status",
            "type": [
                "None",
                "bool",
                "dict",
                "list[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        }
    ],
    "setup@BaseWorker": [
        {
            "category": "local",
            "name": "_limit",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_limiter",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_client",
            "type": [
                "\"Client\"",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "is_setup",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "setup",
            "type": [
                "None"
            ]
        }
    ],
    "start@BaseWorker": [
        {
            "category": "arg",
            "name": "run_once",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "with_healthcheck",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "printer",
            "type": []
        },
        {
            "category": "local",
            "name": "healthcheck_server",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "healthcheck_thread",
            "type": [
                "threading.Thread"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "BaseWorker"
            ]
        },
        {
            "category": "local",
            "name": "run_once",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_started_event",
            "type": [
                "asyncio.locks.Event",
                "threading.Lock"
            ]
        },
        {
            "category": "local",
            "name": "with_healthcheck",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "healthcheck_server_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "start",
            "type": [
                "None"
            ]
        }
    ],
    "sync_with_backend@BaseWorker": [
        {
            "category": "local",
            "name": "remote_id",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "backend_id",
            "type": [
                "str",
                "int",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "_logger",
            "type": [
                "logging.Logger",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "sync_with_backend",
            "type": [
                "None"
            ]
        }
    ],
    "teardown@BaseWorker": [
        {
            "category": "arg",
            "name": "exc_info",
            "type": [
                "Exception",
                "BaseException",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "is_setup",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "exc_info",
            "type": [
                "Exception",
                "BaseException",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "_runs_task_group",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "_client",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "teardown",
            "type": [
                "None"
            ]
        }
    ],
    "wrapper@BaseWorker": [
        {
            "category": "arg",
            "name": "task_status",
            "type": []
        },
        {
            "category": "return",
            "name": "wrapper",
            "type": [
                "None"
            ]
        }
    ]
}