{
    "__call__@Fitness": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "nevergrad.common.ArrayLike",
                "numpy.ndarray",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "nevergrad.common.ArrayLike",
                "numpy.ndarray",
                "numpy.array"
            ]
        },
        {
            "category": "return",
            "name": "__call__",
            "type": [
                "float"
            ]
        }
    ],
    "__call__@QuadFunction": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "numpy.ndarray",
                "nevergrad.common.ArrayLike",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "numpy.ndarray",
                "nevergrad.common.ArrayLike",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__call__",
            "type": [
                "float"
            ]
        }
    ],
    "__init__@Fitness": [
        {
            "category": "arg",
            "name": "x0",
            "type": [
                "nevergrad.common.ArrayLike",
                "numpy.ndarray",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "x0",
            "type": [
                "nevergrad.common.ArrayLike",
                "numpy.ndarray",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "call_times",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@QuadFunction": [
        {
            "category": "arg",
            "name": "scale",
            "type": [
                "float",
                "int",
                "tuple[float]"
            ]
        },
        {
            "category": "arg",
            "name": "ellipse",
            "type": [
                "bool",
                "gluonts.model.common.Tensor",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "scale",
            "type": [
                "float",
                "int",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "ellipse",
            "type": [
                "bool",
                "gluonts.model.common.Tensor",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@RecommendationKeeper": [
        {
            "category": "arg",
            "name": "filepath",
            "type": [
                "pathlib.Path",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "filepath",
            "type": [
                "pathlib.Path",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_multiobjective@global": [
        {
            "category": "arg",
            "name": "z",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "z",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "y",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_multiobjective",
            "type": [
                "tuple[typing.Union[float,int]]"
            ]
        }
    ],
    "_simple_multiobjective@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "numpy.ndarray",
                "float",
                "gluonts.model.common.Tensor"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "numpy.ndarray",
                "float",
                "gluonts.model.common.Tensor"
            ]
        },
        {
            "category": "return",
            "name": "_simple_multiobjective",
            "type": [
                "list"
            ]
        }
    ],
    "_smooth_target@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "T"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "T"
            ]
        },
        {
            "category": "local",
            "name": "d",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_smooth_target",
            "type": [
                "float"
            ]
        }
    ],
    "_square@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "numpy.ndarray",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "y",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "numpy.ndarray",
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "y",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_square",
            "type": [
                "bool"
            ]
        }
    ],
    "buggy_function@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "numpy.ndarray",
                "nevergrad.common.ArrayLike"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "numpy.ndarray",
                "nevergrad.common.ArrayLike"
            ]
        },
        {
            "category": "return",
            "name": "buggy_function",
            "type": [
                "float"
            ]
        }
    ],
    "check_metamodel@global": [
        {
            "category": "arg",
            "name": "dimension",
            "type": [
                "int",
                "base.ConfiguredOptimizer"
            ]
        },
        {
            "category": "arg",
            "name": "num_workers",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "scale",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "budget",
            "type": [
                "int",
                "base.ConfiguredOptimizer"
            ]
        },
        {
            "category": "arg",
            "name": "ellipsoid",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "baseline",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "num_trials",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "scale",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "ellipsoid",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "QuadFunction"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int",
                "base.ConfiguredOptimizer"
            ]
        },
        {
            "category": "local",
            "name": "contextual_budget",
            "type": [
                "int",
                "base.ConfiguredOptimizer"
            ]
        },
        {
            "category": "local",
            "name": "successes",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "num_trials",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "recommendations",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "dimension",
            "type": [
                "int",
                "base.ConfiguredOptimizer"
            ]
        },
        {
            "category": "local",
            "name": "baseline",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "opt",
            "type": [
                "tuple[typing.Literal]",
                "nevergrad.optimization.base.Optimizer",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "metamodel_recom",
            "type": [
                "list[str]",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "default_recom",
            "type": [
                "list[typing.Any]",
                "int",
                "dict[typing.Any, int]"
            ]
        },
        {
            "category": "return",
            "name": "check_metamodel",
            "type": [
                "None"
            ]
        }
    ],
    "check_optimizer@global": [
        {
            "category": "arg",
            "name": "optimizer_cls",
            "type": [
                "int",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "budget",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "verify_value",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "optimizer_cls",
            "type": [
                "int",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "num_workers",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "verify_value",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "num_attempts",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "optimum",
            "type": [
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "fitness",
            "type": [
                "Fitness"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "list",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "candidate",
            "type": [
                "list",
                "tuple[int]",
                "list[list[float]]"
            ]
        },
        {
            "category": "local",
            "name": "raised",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "slope",
            "type": [
                "float",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "intercept",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "tuple[typing.Any]",
                "list[list[int]]",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "check_optimizer",
            "type": [
                "None"
            ]
        }
    ],
    "constraint@global": [
        {
            "category": "arg",
            "name": "i",
            "type": []
        },
        {
            "category": "return",
            "name": "constraint",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "out",
            "type": [
                "bool"
            ]
        }
    ],
    "doint@global": [
        {
            "category": "arg",
            "name": "s",
            "type": []
        },
        {
            "category": "return",
            "name": "doint",
            "type": [
                "int"
            ]
        }
    ],
    "f1@global": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "f1",
            "type": [
                "float",
                "int"
            ]
        }
    ],
    "f1p@global": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "f1p",
            "type": [
                "bool"
            ]
        }
    ],
    "f2@global": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "f2",
            "type": [
                "int"
            ]
        }
    ],
    "f2p@global": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "f2p",
            "type": [
                "bool"
            ]
        }
    ],
    "f@global": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "f",
            "type": [
                "bool"
            ]
        }
    ],
    "fake_training@global": [
        {
            "category": "arg",
            "name": "learning_rate",
            "type": []
        },
        {
            "category": "arg",
            "name": "batch_size",
            "type": []
        },
        {
            "category": "arg",
            "name": "architecture",
            "type": []
        },
        {
            "category": "return",
            "name": "fake_training",
            "type": [
                "float",
                "int"
            ]
        }
    ],
    "get_factors@Fitness": [
        {
            "category": "local",
            "name": "slope",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "intercept",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "get_factors",
            "type": [
                "tuple[float]"
            ]
        }
    ],
    "get_metamodel_test_settings@global": [
        {
            "category": "arg",
            "name": "seq",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "special",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "tests_metamodel",
            "type": [
                "list[tuple[typing.Union[int,float]]]",
                "list[typing.Union[tuple[typing.Union[int,float]],tuple[typing.Union[int,tuple[typing.Union[int,float]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "special",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "seq",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "i",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "d",
            "type": [
                "int",
                "tuple[typing.Union[int,float]]"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "int",
                "tuple[typing.Union[int,float]]"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "int",
                "tuple[typing.Union[int,float]]"
            ]
        },
        {
            "category": "local",
            "name": "b",
            "type": [
                "int",
                "tuple[typing.Union[int,float]]"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "int",
                "tuple[typing.Union[int,float]]"
            ]
        },
        {
            "category": "return",
            "name": "get_metamodel_test_settings",
            "type": [
                "list[typing.Union[tuple[typing.Union[int,float]],tuple[typing.Union[int,tuple[typing.Union[int,float]]]]]]"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "skip_win_perf",
            "type": [
                "int",
                "frozenset"
            ]
        },
        {
            "category": "local",
            "name": "CI",
            "type": [
                "bool",
                "list",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "short_registry",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "SLOW",
            "type": [
                "list[typing.Text]",
                "dict",
                "list[tuple[typing.Union[str,typing.Any]]]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "UNSEEDABLE",
            "type": [
                "list[typing.Text]",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "META_TEST_ARGS",
            "type": [
                "list[str]",
                "dict",
                "dict[str, typing.Any]",
                "dict[str, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "d",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "b",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "continuous_cases",
            "type": [
                "list[tuple[typing.Union[typing.Text,int]]]"
            ]
        }
    ],
    "long_name@global": [
        {
            "category": "arg",
            "name": "s",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "long_name",
            "type": [
                "bool",
                "list",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "CI",
            "type": [
                "list",
                "list[str]",
                "str"
            ]
        }
    ],
    "mf@global": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "mf",
            "type": [
                "bool"
            ]
        }
    ],
    "recomkeeper@global": [
        {
            "category": "local",
            "name": "keeper",
            "type": [
                "RecommendationKeeper"
            ]
        },
        {
            "category": "return",
            "name": "recomkeeper",
            "type": [
                "typing.Generator[RecommendationKeeper]"
            ]
        }
    ],
    "save@RecommendationKeeper": [
        {
            "category": "local",
            "name": "names",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "save",
            "type": [
                "None"
            ]
        }
    ],
    "test_bo_init@global": [
        {
            "category": "local",
            "name": "arg",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "gp_param",
            "type": [
                "dict[typing.Text, typing.Union[float,bool,None]]"
            ]
        },
        {
            "category": "local",
            "name": "my_opt",
            "type": [
                "float",
                "nevergrad.optimization.base.Optimizer",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "float",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "e",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "return",
            "name": "test_bo_init",
            "type": [
                "None"
            ]
        }
    ],
    "test_bo_ordering@global": [
        {
            "category": "local",
            "name": "optim",
            "type": [
                "list",
                "list[tuple[int]]",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "cand",
            "type": [
                "list",
                "int",
                "typing.Callable[None,None, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_bo_ordering",
            "type": [
                "None"
            ]
        }
    ],
    "test_chaining@global": [
        {
            "category": "local",
            "name": "budgets",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "str",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[tuple[int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_chaining",
            "type": [
                "None"
            ]
        }
    ],
    "test_cma_logs@global": [
        {
            "category": "arg",
            "name": "capsys",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "opt",
            "type": [
                "tuple[typing.Union[int,str]]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "capsys",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "captured",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "return",
            "name": "test_cma_logs",
            "type": [
                "None"
            ]
        }
    ],
    "test_constrained_optimization@global": [
        {
            "category": "arg",
            "name": "penalization",
            "type": [
                "bool",
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "gluonts.model.common.Tensor",
                "list[float]"
            ]
        },
        {
            "category": "arg",
            "name": "as_layer",
            "type": [
                "int",
                "typing.Callable[Any,Any, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "parametrization",
            "type": [
                "typing.Sized",
                "list[int]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "penalization",
            "type": [
                "bool",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "as_layer",
            "type": [
                "int",
                "typing.Callable[Any,Any, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "gluonts.model.common.Tensor",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_constrained_optimization",
            "type": [
                "None"
            ]
        }
    ],
    "test_differential_evolution_popsize@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "dimension",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "num_workers",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "optim",
            "type": [
                "dict",
                "list[tuple[int]]",
                "typing.Literal"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_differential_evolution_popsize",
            "type": [
                "None"
            ]
        }
    ],
    "test_infnan@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "CI",
            "type": [
                "list",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "optim",
            "type": [
                "tuple[tuple[typing.Literal]]"
            ]
        },
        {
            "category": "return",
            "name": "test_infnan",
            "type": [
                "None"
            ]
        }
    ],
    "test_metamodel@global": [
        {
            "category": "arg",
            "name": "baseline",
            "type": [
                "simulation.stats.Stats",
                "list[dict]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "META_TEST_ARGS",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "dict[str, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "baseline",
            "type": [
                "simulation.stats.Stats",
                "list[dict]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_metamodel",
            "type": [
                "None"
            ]
        }
    ],
    "test_mo_constrained@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "nevergrad.optimization.base.Optimizer",
                "dict",
                "es_@__EvolutionStrategy"
            ]
        },
        {
            "category": "local",
            "name": "point",
            "type": [
                "list",
                "typing.Type",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_mo_constrained",
            "type": [
                "None"
            ]
        }
    ],
    "test_mo_with_nan@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "param",
            "type": [
                "float",
                "nevergrad.parametrization.data.Array",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "tuple[tuple[typing.Literal]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cand",
            "type": [
                "int",
                "typing.Callable[None, typing.Any]",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "test_mo_with_nan",
            "type": [
                "None"
            ]
        }
    ],
    "test_ngo_split_optimizer@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "dimension",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "num_workers",
            "type": [
                "int",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_learning",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "budget",
            "type": [
                "int",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "fake_learning",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "param",
            "type": [
                "nevergrad.parametrization.data.Scalar",
                "float",
                "nevergrad.parametrization.data.Array"
            ]
        },
        {
            "category": "local",
            "name": "dimension",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "num_workers",
            "type": [
                "int",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "str",
                "list[str]",
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_ngo_split_optimizer",
            "type": [
                "None"
            ]
        }
    ],
    "test_ngopt@global": [
        {
            "category": "arg",
            "name": "dim",
            "type": [
                "int",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "budget_multiplier",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "num_workers",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "bounded",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "discrete",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "dim",
            "type": [
                "int",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "instrumentation",
            "type": [
                "list",
                "os.terminal_size"
            ]
        },
        {
            "category": "return",
            "name": "test_ngopt",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "bounded",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "discrete",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "budget_multiplier",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "num_workers",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "ngopt",
            "type": [
                "int",
                "str"
            ]
        }
    ],
    "test_ngopt_on_simple_realistic_scenario@global": [
        {
            "category": "arg",
            "name": "budget",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "with_int",
            "type": [
                "int",
                "complex",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "with_int",
            "type": [
                "int",
                "complex",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "c",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "parametrization",
            "type": [
                "int",
                "nevergrad.optimization.base.ConfiguredOptimizer",
                "typing.DefaultDict"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "nevergrad.optimization.base.Optimizer",
                "nevergrad.optimization.test_recaster.FakeOptimizer",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_ngopt_on_simple_realistic_scenario",
            "type": [
                "None"
            ]
        }
    ],
    "test_ngopt_selection@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "int",
                "nevergrad.common.Any",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "param",
            "type": [
                "int",
                "nevergrad.common.Any",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "budget",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "num_workers",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "int",
                "str",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "opt",
            "type": [
                "tuple[typing.Literal]",
                "nevergrad.optimization.base.Optimizer",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "int",
                "nevergrad.common.Any",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "match",
            "type": [
                "typing.Match",
                "None",
                "typing.Pattern",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "choice",
            "type": [
                "list[typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "int",
                "str",
                "typing.Sequence[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "param",
            "type": [
                "int",
                "nevergrad.common.Any",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "num_workers",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_ngopt_selection",
            "type": [
                "None"
            ]
        }
    ],
    "test_optim_pickle@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "optim",
            "type": [
                "nevergrad.optimization.base.Optimizer",
                "str",
                "mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_optim_pickle",
            "type": [
                "None"
            ]
        }
    ],
    "test_optimization_discrete_with_one_sample@global": [
        {
            "category": "return",
            "name": "test_optimization_discrete_with_one_sample",
            "type": [
                "None"
            ]
        }
    ],
    "test_optimization_doc_parametrization_example@global": [
        {
            "category": "local",
            "name": "instrum",
            "type": [
                "float",
                "nevergrad.parametrization.choice.TransitionChoice",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_optimization_doc_parametrization_example",
            "type": [
                "None"
            ]
        }
    ],
    "test_optimizer_families_repr@global": [
        {
            "category": "return",
            "name": "test_optimizer_families_repr",
            "type": [
                "None"
            ]
        }
    ],
    "test_optimizer_sequence@global": [
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "parametrization",
            "type": [
                "float",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "points",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_optimizer_sequence",
            "type": [
                "None"
            ]
        }
    ],
    "test_optimizers@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "CI",
            "type": [
                "list",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_optimizers",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "c",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "optimizer_cls",
            "type": [
                "base_@_ConfiguredOptimizer",
                "dict[str, typing.Any]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "nameparts",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "is_ngopt",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "SLOW",
            "type": [
                "dict",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "verify",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int"
            ]
        }
    ],
    "test_optimizers_minimal@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "CI",
            "type": [
                "list",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_optimizers_minimal",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "int",
                "float",
                "tuple[float]"
            ]
        }
    ],
    "test_optimizers_recommendation@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "recomkeeper",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "CI",
            "type": [
                "list",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "UNSEEDABLE",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "optimizer_cls",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "decimal",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "recomkeeper",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_optimizers_recommendation",
            "type": [
                "None"
            ]
        }
    ],
    "test_parallel_es@global": [
        {
            "category": "local",
            "name": "opt",
            "type": [
                "tuple[typing.Literal]",
                "nevergrad.optimization.base.Optimizer",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cand",
            "type": [
                "int",
                "typing.Final"
            ]
        },
        {
            "category": "return",
            "name": "test_parallel_es",
            "type": [
                "None"
            ]
        }
    ],
    "test_parametrization_offset@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "typing.Iterator"
            ]
        },
        {
            "category": "return",
            "name": "test_parametrization_offset",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "CI",
            "type": [
                "list",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "c",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "parametrization",
            "type": [
                "list",
                "list[list[int]]",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "str",
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "candidate",
            "type": [
                "list",
                "dict[str, typing.Union[typing.Any,int]]",
                "float"
            ]
        }
    ],
    "test_parametrization_optimizer_reproducibility@global": [
        {
            "category": "local",
            "name": "parametrization",
            "type": [
                "float",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "recom",
            "type": [
                "dict[str, typing.Any]",
                "list",
                "dict[int, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_parametrization_optimizer_reproducibility",
            "type": [
                "None"
            ]
        }
    ],
    "test_paraportfolio_de@global": [
        {
            "category": "local",
            "name": "workers",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cands",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_paraportfolio_de",
            "type": [
                "None"
            ]
        }
    ],
    "test_portfolio_budget@global": [
        {
            "category": "return",
            "name": "test_portfolio_budget",
            "type": [
                "None"
            ]
        }
    ],
    "test_pymoo_batched@global": [
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "nevergrad.optimization.base.Optimizer",
                "nevergrad.optimization.test_recaster.FakeOptimizer",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "candidates",
            "type": [
                "list",
                "list[typing.Union[int,list[list[int]],float]]"
            ]
        },
        {
            "category": "local",
            "name": "losses",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "optimizer_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "asks_from_batch",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "int",
                "list[list[int]]",
                "float",
                "list[typing.Union[int,list[list[int]],float]]"
            ]
        },
        {
            "category": "local",
            "name": "loss",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_pymoo_batched",
            "type": [
                "None"
            ]
        }
    ],
    "test_pymoo_pf@global": [
        {
            "category": "local",
            "name": "optimizer",
            "type": [
                "nevergrad.optimization.base.Optimizer",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "pf",
            "type": [
                "str",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "fixed_points",
            "type": [
                "list[list[float]]"
            ]
        },
        {
            "category": "local",
            "name": "fixed_point",
            "type": [
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_pymoo_pf",
            "type": [
                "None"
            ]
        }
    ],
    "test_shiwa_dim1@global": [
        {
            "category": "local",
            "name": "param",
            "type": [
                "str",
                "dict[str, list[str]]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_shiwa_dim1",
            "type": [
                "None"
            ]
        }
    ],
    "test_smoother@global": [
        {
            "category": "local",
            "name": "x",
            "type": [
                "int",
                "list",
                "list[list[float]]"
            ]
        },
        {
            "category": "return",
            "name": "test_smoother",
            "type": [
                "None"
            ]
        }
    ],
    "test_tbpsa_recom_with_update@global": [
        {
            "category": "local",
            "name": "budget",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "fitness",
            "type": [
                "Fitness"
            ]
        },
        {
            "category": "local",
            "name": "optim_",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_tbpsa_recom_with_update",
            "type": [
                "None"
            ]
        }
    ],
    "test_tell_not_asked@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "hex"
            ]
        },
        {
            "category": "local",
            "name": "param",
            "type": [
                "int",
                "dict[str, str]",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "opt",
            "type": [
                "nevergrad.optimization.base.Optimizer",
                "set[int]",
                "typing.Callable[..., typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "opt_",
            "type": [
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "t_10",
            "type": [
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "t_100",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "asked",
            "type": [
                "str",
                "int",
                "typing.Final"
            ]
        },
        {
            "category": "return",
            "name": "test_tell_not_asked",
            "type": [
                "None"
            ]
        }
    ],
    "test_uniform_sampling@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "param",
            "type": [
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "opt",
            "type": [
                "list",
                "set[str]",
                "nevergrad.optimization.base.Optimizer"
            ]
        },
        {
            "category": "local",
            "name": "above_50",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_uniform_sampling",
            "type": [
                "None"
            ]
        }
    ],
    "test_voronoide@global": [
        {
            "category": "arg",
            "name": "n",
            "type": [
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "b_per_dim",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "b_per_dim",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "CI",
            "type": [
                "list",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "list_optims",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "fails",
            "type": [
                "dict",
                "dict[typing.Text, int]"
            ]
        },
        {
            "category": "local",
            "name": "o",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "sqrtsize",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "b",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "nw",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "num_tests",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "array",
            "type": [
                "list",
                "float",
                "nevergrad.parametrization.data.Array"
            ]
        },
        {
            "category": "local",
            "name": "xa",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "xb",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "xs",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "VoronoiDE",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "tuple[typing.Literal]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "ratio",
            "type": [
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_voronoide",
            "type": [
                "None"
            ]
        }
    ],
    "test_weighted_moo_de@global": [
        {
            "category": "local",
            "name": "D",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "N",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "DE",
            "type": [
                "int",
                "list",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "range",
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "targ",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_weighted_moo_de",
            "type": [
                "None"
            ]
        }
    ]
}