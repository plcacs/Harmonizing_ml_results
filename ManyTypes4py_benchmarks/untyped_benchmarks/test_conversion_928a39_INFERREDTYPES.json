{
    "global@global": [],
    "test_array@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "int",
                "None",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "attr",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "index_or_series",
            "type": [
                "int",
                "tuple[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "index_or_series",
            "type": [
                "int",
                "tuple[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "box",
            "type": [
                "int",
                "tuple[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "int",
                "None",
                "list[int]",
                "list",
                "typing.Iterator",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "attr",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_array",
            "type": [
                "None"
            ]
        }
    ],
    "test_array_multiindex_raises@global": [
        {
            "category": "local",
            "name": "idx",
            "type": [
                "int",
                "list[int]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_array_multiindex_raises",
            "type": [
                "None"
            ]
        }
    ],
    "test_asarray_object_dt64@TestAsArray": [
        {
            "category": "arg",
            "name": "tz",
            "type": [
                "int",
                "pandas.Series",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "int",
                "pandas.Series",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_asarray_object_dt64",
            "type": [
                "None"
            ]
        }
    ],
    "test_asarray_tz_aware@TestAsArray": [
        {
            "category": "local",
            "name": "tz",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_asarray_tz_aware",
            "type": [
                "None"
            ]
        }
    ],
    "test_asarray_tz_naive@TestAsArray": [
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_asarray_tz_naive",
            "type": [
                "None"
            ]
        }
    ],
    "test_categorial_datetimelike@TestToIterable": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "i",
            "type": [
                "CategoricalIndex"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_categorial_datetimelike",
            "type": [
                "None"
            ]
        }
    ],
    "test_iter_box_dt64@TestToIterable": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "pandas.Series",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "vals",
            "type": [
                "list[Timestamp]"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "pandas.Series",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "list",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_iter_box_dt64",
            "type": [
                "None"
            ]
        }
    ],
    "test_iter_box_dt64tz@TestToIterable": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "str",
                "float",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "vals",
            "type": [
                "list[Timestamp]"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "str",
                "float",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "list",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_iter_box_dt64tz",
            "type": [
                "None"
            ]
        }
    ],
    "test_iter_box_period@TestToIterable": [
        {
            "category": "local",
            "name": "vals",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_iter_box_period",
            "type": [
                "None"
            ]
        }
    ],
    "test_iter_box_timedelta64@TestToIterable": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "pandas.Series",
                "float",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "vals",
            "type": [
                "list[Timedelta]"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "pandas.Series",
                "float",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "list",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_iter_box_timedelta64",
            "type": [
                "None"
            ]
        }
    ],
    "test_iterable@TestToIterable": [
        {
            "category": "arg",
            "name": "index_or_series",
            "type": [
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "int",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "typing.Callable[numpy.ndarray,numpy.ndarray,bool, numpy.ndarray]"
            ]
        },
        {
            "category": "arg",
            "name": "rdtype",
            "type": [
                "typing.Iterable[float]",
                "None",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "index_or_series",
            "type": [
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "typing.Callable[numpy.ndarray,numpy.ndarray,bool, numpy.ndarray]"
            ]
        },
        {
            "category": "return",
            "name": "test_iterable",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[typing.Optional[bool]]",
                "pandas.core.arrays.numpy_.PandasArray"
            ]
        }
    ],
    "test_iterable_items@TestToIterable": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "static_frame.core.util.DtypeSpecifier",
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "rdtype",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]",
                "typing.Callable[None, bool]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "static_frame.core.util.DtypeSpecifier",
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "numpy.st3_osx_x64.numpy.core.numerictypes._typedict",
                "dict",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "pandas.core.arrays.numpy_.PandasArray",
                "list[typing.Optional[bool]]"
            ]
        },
        {
            "category": "return",
            "name": "test_iterable_items",
            "type": [
                "None"
            ]
        }
    ],
    "test_iterable_map@TestToIterable": [
        {
            "category": "arg",
            "name": "index_or_series",
            "type": [
                "bool",
                "typing.Type",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "T",
                "Series",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "rdtype",
            "type": [
                "typing.Sequence[typing.Hashable]",
                "typing.Sequence[typing.Sequence[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "index_or_series",
            "type": [
                "bool",
                "typing.Type",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "bool",
                "typing.Type",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "T",
                "Series",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_iterable_map",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "float",
                "set",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "rdtype",
            "type": [
                "typing.Sequence[typing.Hashable]",
                "typing.Sequence[typing.Sequence[typing.Any]]",
                "tuple[typing.Union[typing.Sequence[typing.Hashable],typing.Sequence[typing.Sequence[typing.Any]]]]"
            ]
        }
    ],
    "test_iterable_object_and_category@TestToIterable": [
        {
            "category": "arg",
            "name": "index_or_series",
            "type": [
                "bool",
                "typing.Type",
                "typing.Iterable[static_frame.core.index_base.IndexBase]"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": [
                "typing.Callable",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.dtype",
                "None",
                "typing.Type",
                "typing.Iterable[static_frame.core.index_base.IndexBase]"
            ]
        },
        {
            "category": "arg",
            "name": "rdtype",
            "type": [
                "static_frame.core.util.IndexConstructor",
                "static_frame.core.util.DtypeSpecifier",
                "numpy.dtype"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "numpy.dtype",
                "None",
                "typing.Type",
                "typing.Iterable[static_frame.core.index_base.IndexBase]"
            ]
        },
        {
            "category": "local",
            "name": "index_or_series",
            "type": [
                "bool",
                "typing.Type",
                "typing.Iterable[static_frame.core.index_base.IndexBase]"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "bool",
                "typing.Type",
                "typing.Iterable[static_frame.core.index_base.IndexBase]"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "numpy.dtype",
                "None",
                "typing.Type",
                "typing.Iterable[static_frame.core.index_base.IndexBase]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "numpy.dtype",
                "None",
                "typing.Type",
                "typing.Iterable[static_frame.core.index_base.IndexBase]"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[typing.Optional[bool]]",
                "pandas.core.arrays.numpy_.PandasArray"
            ]
        },
        {
            "category": "return",
            "name": "test_iterable_object_and_category",
            "type": [
                "None"
            ]
        }
    ],
    "test_numpy_array@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "numpy.ndarray",
                "list",
                "list[list[T]]"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "numpy.ndarray",
                "list",
                "list[list[T]]"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "NumpyExtensionArray"
            ]
        },
        {
            "category": "return",
            "name": "test_numpy_array",
            "type": [
                "None"
            ]
        }
    ],
    "test_numpy_array_all_dtypes@global": [
        {
            "category": "arg",
            "name": "any_numpy_dtype",
            "type": [
                "bool",
                "numpy.ndarray",
                "static_frame.core.util.UFunc"
            ]
        },
        {
            "category": "local",
            "name": "any_numpy_dtype",
            "type": [
                "bool",
                "numpy.ndarray",
                "static_frame.core.util.UFunc"
            ]
        },
        {
            "category": "local",
            "name": "ser",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_numpy_array_all_dtypes",
            "type": [
                "None"
            ]
        }
    ],
    "test_to_numpy@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "float",
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "int",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "zero_copy",
            "type": [
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "index_or_series_or_array",
            "type": [
                "numpy.ndarray",
                "static_frame.core.util.DtypeSpecifier",
                "numpy.void"
            ]
        },
        {
            "category": "local",
            "name": "index_or_series_or_array",
            "type": [
                "numpy.ndarray",
                "static_frame.core.util.DtypeSpecifier",
                "numpy.void"
            ]
        },
        {
            "category": "local",
            "name": "box",
            "type": [
                "numpy.ndarray",
                "static_frame.core.util.DtypeSpecifier",
                "numpy.void"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "float",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "thing",
            "type": [
                "list[dict[str, typing.Any]]",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "float",
                "tuple[typing.Union[bool,float]]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "int",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_to_numpy",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "zero_copy",
            "type": [
                "bool",
                "typing.Type"
            ]
        }
    ],
    "test_to_numpy_copy@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "bool",
                "typing.Mapping",
                "pandas._FrameOrSeries"
            ]
        },
        {
            "category": "arg",
            "name": "as_series",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "using_infer_string",
            "type": [
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "bool",
                "typing.Mapping",
                "pandas._FrameOrSeries"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "as_series",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "pandas.core.arrays.numpy_.PandasArray",
                "list[None]"
            ]
        },
        {
            "category": "local",
            "name": "using_infer_string",
            "type": [
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_to_numpy_copy",
            "type": [
                "None"
            ]
        }
    ],
    "test_to_numpy_dataframe_na_value@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "pandas.Series"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "float",
                "pandas.Series"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "float",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "pandas.DataFrame",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "float",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "float",
                "pandas.Series"
            ]
        },
        {
            "category": "return",
            "name": "test_to_numpy_dataframe_na_value",
            "type": [
                "None"
            ]
        }
    ],
    "test_to_numpy_dataframe_single_block@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "expected_data",
            "type": [
                "numpy.ndarray",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected_data",
            "type": [
                "numpy.ndarray",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_to_numpy_dataframe_single_block",
            "type": [
                "None"
            ]
        }
    ],
    "test_to_numpy_dataframe_single_block_no_mutate@global": [
        {
            "category": "return",
            "name": "test_to_numpy_dataframe_single_block_no_mutate",
            "type": [
                "None"
            ]
        }
    ],
    "test_to_numpy_dtype@global": [
        {
            "category": "arg",
            "name": "as_series",
            "type": [
                "bool",
                "typing.Sequence[dict]",
                "typing.Sequence[typing.Sequence[int]]"
            ]
        },
        {
            "category": "local",
            "name": "tz",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "as_series",
            "type": [
                "bool",
                "typing.Sequence[dict]",
                "typing.Sequence[typing.Sequence[int]]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "float",
                "dict",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_to_numpy_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_to_numpy_kwargs_raises@global": [
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_to_numpy_kwargs_raises",
            "type": [
                "None"
            ]
        }
    ],
    "test_to_numpy_multiindex_series_na_value@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "pandas.Series",
                "pandas._FrameOrSeries",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "multiindex",
            "type": [
                "pandas.DataFrame",
                "list[str]",
                "pandas._FrameOrSeries"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "multiindex",
            "type": [
                "pandas.DataFrame",
                "list[str]",
                "pandas._FrameOrSeries"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "list[str]",
                "list",
                "static_frame.core.index_base.IndexBase"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "pandas.Series",
                "pandas._FrameOrSeries",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "series",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "float",
                "dict",
                "list[list[None]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_to_numpy_multiindex_series_na_value",
            "type": [
                "None"
            ]
        }
    ],
    "test_to_numpy_na_value_numpy_dtype@global": [
        {
            "category": "arg",
            "name": "index_or_series",
            "type": [
                "bool",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "values",
            "type": [
                "bool",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "tuple[int]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "bool",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "list",
                "dict[str, list[int]]",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "na_value",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "starfish.core.types._spot_finding_results.SpotFindingResults",
                "float",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "tuple[int]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_to_numpy_na_value_numpy_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "test_values_consistent@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "bool",
                "str",
                "typing.Any",
                "None",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "expected_type",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "using_infer_string",
            "type": [
                "bool",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "using_infer_string",
            "type": [
                "bool",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "bool",
                "str",
                "typing.Any",
                "None",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_values_consistent",
            "type": [
                "None"
            ]
        }
    ]
}