{
    "__call__@TestBaseResolver,ResolverSubclass": [
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "__call__",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [],
    "resolver@TestBaseResolver": [
        {
            "category": "return",
            "name": "resolver",
            "type": [
                "ResolverSubclass"
            ]
        }
    ],
    "resolver@TestRuntimeRefResolver": [
        {
            "category": "return",
            "name": "resolver",
            "type": [
                "RuntimeRefResolver"
            ]
        }
    ],
    "resolver@TestRuntimeSourceResolver": [
        {
            "category": "return",
            "name": "resolver",
            "type": [
                "RuntimeSourceResolver"
            ]
        }
    ],
    "test_create_relation_with_empty@TestRuntimeRefResolver": [
        {
            "category": "arg",
            "name": "resolver",
            "type": [
                "bool",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "empty",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "is_ephemeral_model",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "expected_limit",
            "type": [
                "bool",
                "float",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "empty",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "resolver_",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "mock_node_",
            "type": [
                "typing.Text",
                "dict",
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "is_ephemeral_model",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "resolver",
            "type": [
                "bool",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_create_relation_with_empty",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_relation_with_empty@TestRuntimeSourceResolver": [
        {
            "category": "arg",
            "name": "resolver",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "empty",
            "type": [
                "str",
                "int",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_limit",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "empty",
            "type": [
                "str",
                "int",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "resolver_",
            "type": [
                "str",
                "int",
                "list[tuple[int]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "mock_source_",
            "type": [
                "typing.Text",
                "Quoting",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "resolver",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_create_relation_with_empty",
            "type": [
                "None"
            ]
        }
    ],
    "test_resolve_event_time_filter@TestBaseResolver": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "bool",
                "typing.Callable",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "resolver",
            "type": [
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "use_microbatch_batches",
            "type": [
                "bool",
                "tuple[str]"
            ]
        },
        {
            "category": "arg",
            "name": "materialized",
            "type": [
                "bool",
                "robobackends.base.BaseServoAssembly"
            ]
        },
        {
            "category": "arg",
            "name": "incremental_strategy",
            "type": [
                "bool",
                "robobackends.base.BaseServoAssembly"
            ]
        },
        {
            "category": "arg",
            "name": "sample_mode_available",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "sample",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "resolver_model_node",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "target_type",
            "type": [
                "pytest_mock.plugin.MockFixture",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "expect_filter",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "target_type",
            "type": [
                "pytest_mock.plugin.MockFixture",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "target_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "sample_mode_available",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "resolver_",
            "type": [
                "None",
                "bool",
                "BatchContext",
                "robobackends.base.BaseServoAssembly",
                "int",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "sample",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "resolver_model_node",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "materialized",
            "type": [
                "bool",
                "robobackends.base.BaseServoAssembly"
            ]
        },
        {
            "category": "local",
            "name": "incremental_strategy",
            "type": [
                "bool",
                "robobackends.base.BaseServoAssembly"
            ]
        },
        {
            "category": "local",
            "name": "use_microbatch_batches",
            "type": [
                "bool",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "resolver",
            "type": [
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "expect_filter",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_resolve_event_time_filter",
            "type": [
                "None"
            ]
        }
    ],
    "test_resolve_limit@TestBaseResolver": [
        {
            "category": "arg",
            "name": "resolver",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "empty",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "expected_resolve_limit",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "empty",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "resolver_",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_resolve_limit",
            "type": [
                "None"
            ]
        }
    ]
}