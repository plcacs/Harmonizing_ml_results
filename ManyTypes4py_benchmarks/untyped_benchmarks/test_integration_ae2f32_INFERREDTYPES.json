{
    "global@global": [],
    "test_dca_buying@global": [
        {
            "category": "arg",
            "name": "default_conf_usdt",
            "type": []
        },
        {
            "category": "arg",
            "name": "ticker_usdt",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "typing.Callable[list, None]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "typing.Callable[list, None]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ticker_usdt",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "monkq.assets.trade.Trade",
                "list[rotkehlchen.exchanges.data_structures.Trade]"
            ]
        },
        {
            "category": "return",
            "name": "test_dca_buying",
            "type": [
                "None"
            ]
        }
    ],
    "test_dca_exiting@global": [
        {
            "category": "arg",
            "name": "default_conf_usdt",
            "type": []
        },
        {
            "category": "arg",
            "name": "ticker_usdt",
            "type": [
                "dict[str, object]",
                "models.AutoTestStepResultState",
                "typing.IO",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "dict[str, object]",
                "models.AutoTestStepResultState",
                "typing.IO",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "dict",
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "leverage",
            "type": [
                "dict",
                "freqtrade.strategy.interface.IStrategy"
            ]
        },
        {
            "category": "local",
            "name": "leverage",
            "type": [
                "dict",
                "freqtrade.strategy.interface.IStrategy"
            ]
        },
        {
            "category": "local",
            "name": "spot",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "dict",
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ticker_usdt",
            "type": [
                "dict[str, object]",
                "models.AutoTestStepResultState",
                "typing.IO",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "dict[str, object]",
                "models.AutoTestStepResultState",
                "typing.IO",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "monkq.assets.trade.Trade",
                "list[rotkehlchen.exchanges.data_structures.Trade]"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_dca_exiting",
            "type": [
                "None"
            ]
        }
    ],
    "test_dca_handle_similar_open_order@global": [
        {
            "category": "arg",
            "name": "default_conf_usdt",
            "type": []
        },
        {
            "category": "arg",
            "name": "ticker_usdt",
            "type": [
                "dict[str, object]",
                "models.AutoTestStepResultState",
                "typing.IO",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "is_short",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "leverage",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "dict[str, object]",
                "models.AutoTestStepResultState",
                "typing.IO",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "dict",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "bool",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "dict",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "ticker_usdt",
            "type": [
                "dict[str, object]",
                "models.AutoTestStepResultState",
                "typing.IO",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "dict[str, object]",
                "models.AutoTestStepResultState",
                "typing.IO",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "is_short",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade_",
            "type": [
                "typing.Callable",
                "MagicMock",
                "dict[int, float]"
            ]
        },
        {
            "category": "local",
            "name": "leverage",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "list[list]",
                "list[rotkehlchen.exchanges.data_structures.Trade]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "similar_msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_dca_handle_similar_open_order",
            "type": [
                "None"
            ]
        }
    ],
    "test_dca_order_adjust@global": [
        {
            "category": "arg",
            "name": "default_conf_usdt",
            "type": []
        },
        {
            "category": "arg",
            "name": "ticker_usdt",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "leverage",
            "type": [
                "time.Time"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "ticker_usdt",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade_",
            "type": [
                "typing.Callable",
                "MagicMock",
                "dict[int, float]"
            ]
        },
        {
            "category": "local",
            "name": "leverage",
            "type": [
                "time.Time"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "monkq.assets.trade.Trade",
                "list[rotkehlchen.exchanges.data_structures.Trade]"
            ]
        },
        {
            "category": "return",
            "name": "test_dca_order_adjust",
            "type": [
                "None"
            ]
        }
    ],
    "test_dca_order_adjust_entry_replace_fails@global": [
        {
            "category": "arg",
            "name": "default_conf_usdt",
            "type": []
        },
        {
            "category": "arg",
            "name": "ticker_usdt",
            "type": [
                "bool",
                "typing.Callable",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "bool",
                "typing.Callable",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "bool",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "bool",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "is_short",
            "type": [
                "bool",
                "\"Outcome\"",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "leverage",
            "type": [
                "bool",
                "typing.Iterable[\"Entity\"]"
            ]
        },
        {
            "category": "local",
            "name": "leverage",
            "type": [
                "bool",
                "typing.Iterable[\"Entity\"]"
            ]
        },
        {
            "category": "local",
            "name": "spot",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "bool",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "ticker_usdt",
            "type": [
                "bool",
                "typing.Callable",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "bool",
                "typing.Callable",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "is_short",
            "type": [
                "bool",
                "\"Outcome\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "list[rotkehlchen.exchanges.data_structures.Trade]",
                "rotkehlchen.exchanges.data_structures.Trade"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "entry_mock",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_dca_order_adjust_entry_replace_fails",
            "type": [
                "None"
            ]
        }
    ],
    "test_dca_short@global": [
        {
            "category": "arg",
            "name": "default_conf_usdt",
            "type": []
        },
        {
            "category": "arg",
            "name": "ticker_usdt",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ticker_usdt",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "rotkehlchen.exchanges.data_structures.Trade",
                "list[rotkehlchen.exchanges.data_structures.Trade]"
            ]
        },
        {
            "category": "return",
            "name": "test_dca_short",
            "type": [
                "None"
            ]
        }
    ],
    "test_forcebuy_last_unlimited@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "ticker",
            "type": [
                "int",
                "float",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "int",
                "float",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "int",
                "property",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "balance_ratio",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "result1",
            "type": [
                "dict[str, typing.Any]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "balance_ratio",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "int",
                "property",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "ticker",
            "type": [
                "int",
                "float",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "int",
                "float",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "should_sell_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "rpc",
            "type": [
                "RPC"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "list[rotkehlchen.exchanges.data_structures.Trade]",
                "rotkehlchen.exchanges.data_structures.Trade",
                "list[dict[str, int]]"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "rotkehlchen.exchanges.data_structures.Trade",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "bals",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "bals2",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_forcebuy_last_unlimited",
            "type": [
                "None"
            ]
        }
    ],
    "test_may_execute_exit_stoploss_on_exchange_multi@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "ticker",
            "type": [
                "bool",
                "\"Outcome\"",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "bool",
                "\"Outcome\"",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "bool",
                "\"Outcome\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "stoploss",
            "type": [
                "dict[typing.Text, typing.Union[int,dict]]"
            ]
        },
        {
            "category": "local",
            "name": "stoploss_order_open",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int,None,float]]"
            ]
        },
        {
            "category": "local",
            "name": "stoploss_order_closed",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int,None,float]]"
            ]
        },
        {
            "category": "local",
            "name": "stop_orders",
            "type": [
                "list[dict[typing.Text, typing.Union[typing.Text,int,None,float]]]"
            ]
        },
        {
            "category": "local",
            "name": "stoploss_order_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "should_sell_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "cancel_order_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "ticker",
            "type": [
                "bool",
                "\"Outcome\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "bool",
                "\"Outcome\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "bool",
                "\"Outcome\"",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "wallets_mock",
            "type": [
                "str",
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "freqtrade_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "trades",
            "type": [
                "monkq.assets.trade.Trade",
                "list[rotkehlchen.exchanges.data_structures.Trade]"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "int",
                "rotkehlchen.exchanges.data_structures.Trade"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "rotkehlchen.exchanges.data_structures.Trade",
                "list[rotkehlchen.exchanges.data_structures.Trade]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "stop_order",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int,None,float]]"
            ]
        },
        {
            "category": "local",
            "name": "oobj_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_may_execute_exit_stoploss_on_exchange_multi",
            "type": [
                "None"
            ]
        }
    ]
}