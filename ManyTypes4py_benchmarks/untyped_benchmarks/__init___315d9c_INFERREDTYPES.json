{
    "__init__@MockBleakClient": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "_device_path",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_async_setup_with_adapter@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "address",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "address",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "MockConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_async_setup_with_adapter",
            "type": [
                "MockConfigEntry"
            ]
        }
    ],
    "_get_manager@global": [
        {
            "category": "return",
            "name": "_get_manager",
            "type": []
        }
    ],
    "async_setup_with_default_adapter@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "async_setup_with_default_adapter",
            "type": []
        }
    ],
    "async_setup_with_one_adapter@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "async_setup_with_one_adapter",
            "type": [
                "dict",
                "bool",
                "boucanpy.core.http_server.HttpServerRepo"
            ]
        }
    ],
    "clear_cache@MockBleakClient": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "clear_cache",
            "type": [
                "bool"
            ]
        }
    ],
    "connect@MockBleakClient": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "connect",
            "type": [
                "bool"
            ]
        }
    ],
    "disconnect@MockBleakClient": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "disconnect",
            "type": [
                "None"
            ]
        }
    ],
    "discovered_addresses@FakeScannerMixin": [
        {
            "category": "return",
            "name": "discovered_addresses",
            "type": []
        }
    ],
    "discovered_devices@FakeScanner": [
        {
            "category": "return",
            "name": "discovered_devices",
            "type": [
                "list"
            ]
        }
    ],
    "discovered_devices_and_advertisement_data@FakeScanner": [
        {
            "category": "return",
            "name": "discovered_devices_and_advertisement_data",
            "type": [
                "dict"
            ]
        }
    ],
    "generate_advertisement_data@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "new",
            "type": [
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "ADVERTISEMENT_DATA_DEFAULTS",
            "type": [
                "dict[str, str]",
                "dict[str, typing.Union[int,str]]"
            ]
        },
        {
            "category": "return",
            "name": "generate_advertisement_data",
            "type": [
                "AdvertisementData"
            ]
        }
    ],
    "generate_ble_device@global": [
        {
            "category": "arg",
            "name": "address",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "name",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "details",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "rssi",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "new",
            "type": [
                "tuple[typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "address",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "details",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "rssi",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple[typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "BLE_DEVICE_DEFAULTS",
            "type": [
                "dict",
                "dict[str, str]",
                "dict[int, str]"
            ]
        },
        {
            "category": "return",
            "name": "generate_ble_device",
            "type": [
                "BLEDevice"
            ]
        }
    ],
    "get_discovered_device_advertisement_data@FakeScannerMixin": [
        {
            "category": "arg",
            "name": "address",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "address",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_discovered_device_advertisement_data",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "get_services@MockBleakClient": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "get_services",
            "type": [
                "list"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "__all__",
            "type": [
                "tuple[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "ADVERTISEMENT_DATA_DEFAULTS",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict,list,int,tuple[tuple]]]",
                "dict[str, str]",
                "dict[str, typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "BLE_DEVICE_DEFAULTS",
            "type": [
                "dict[typing.Text, typing.Union[None,int]]",
                "dict",
                "dict[str, str]",
                "dict[int, str]"
            ]
        },
        {
            "category": "local",
            "name": "HCI0_SOURCE_ADDRESS",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "HCI1_SOURCE_ADDRESS",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "NON_CONNECTABLE_REMOTE_SOURCE_ADDRESS",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "inject_advertisement@FakeRemoteScanner": [
        {
            "category": "arg",
            "name": "device",
            "type": [
                "str",
                "dict[tuple[typing.Union[typing.Any,str]], int]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "advertisement_data",
            "type": [
                "str",
                "dict[tuple[typing.Union[typing.Any,str]], int]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "None",
                "str",
                "dict[tuple[typing.Union[typing.Any,str]], int]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "device",
            "type": [
                "str",
                "dict[tuple[typing.Union[typing.Any,str]], int]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "advertisement_data",
            "type": [
                "str",
                "dict[tuple[typing.Union[typing.Any,str]], int]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "None",
                "str",
                "dict[tuple[typing.Union[typing.Any,str]], int]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "inject_advertisement",
            "type": [
                "None"
            ]
        }
    ],
    "inject_advertisement@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "device",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "adv",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "device",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "adv",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "inject_advertisement",
            "type": []
        }
    ],
    "inject_advertisement_with_source@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "device",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "adv",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "source",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "device",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "adv",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "inject_advertisement_with_source",
            "type": [
                "None"
            ]
        }
    ],
    "inject_advertisement_with_time_and_source@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "device",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "adv",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "time",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "source",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "device",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "adv",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "time",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "inject_advertisement_with_time_and_source",
            "type": [
                "None"
            ]
        }
    ],
    "inject_advertisement_with_time_and_source_connectable@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "device",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "adv",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "time",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "source",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "connectable",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "inject_advertisement_with_time_and_source_connectable",
            "type": [
                "None"
            ]
        }
    ],
    "inject_bluetooth_service_info@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "info",
            "type": [
                "dict",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "info",
            "type": [
                "dict",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "inject_bluetooth_service_info",
            "type": [
                "None"
            ]
        }
    ],
    "inject_bluetooth_service_info_bleak@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "info",
            "type": [
                "dict",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "info",
            "type": [
                "dict",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "inject_bluetooth_service_info_bleak",
            "type": [
                "None"
            ]
        }
    ],
    "is_connected@MockBleakClient": [
        {
            "category": "return",
            "name": "is_connected",
            "type": [
                "bool"
            ]
        }
    ],
    "patch_all_discovered_devices@global": [
        {
            "category": "arg",
            "name": "mock_discovered",
            "type": [
                "unittesmock.MagicMock",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "manager",
            "type": [
                "restful_functions.manager.FunctionManager",
                "ddionrails.imports.manager.StudyImportManager",
                "server.service.manager.bike_connection_manager.BikeConnectionManager"
            ]
        },
        {
            "category": "local",
            "name": "original_history",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "scanners",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "dict[, tuple[typing.Union[str,MagicMock]]]"
            ]
        },
        {
            "category": "local",
            "name": "mock_discovered",
            "type": [
                "unittesmock.MagicMock",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "device",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "patch_all_discovered_devices",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "patch_bluetooth_time@global": [
        {
            "category": "arg",
            "name": "mock_time",
            "type": [
                "unittesmock.MagicMock",
                "time.Time"
            ]
        },
        {
            "category": "local",
            "name": "mock_time",
            "type": [
                "unittesmock.MagicMock",
                "time.Time"
            ]
        },
        {
            "category": "return",
            "name": "patch_bluetooth_time",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "patch_discovered_devices@global": [
        {
            "category": "arg",
            "name": "mock_discovered",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "manager",
            "type": [
                "device.peripherals.modules.actuator_dac5578.manager.ActuatorDAC5578Manager",
                "device.controllers.classes.controller.manager.ControllerManager",
                "ddionrails.imports.manager.StudyImportManager"
            ]
        },
        {
            "category": "local",
            "name": "manager_",
            "type": [
                "dict[, MagicMock]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "mock_discovered",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "patch_discovered_devices",
            "type": [
                "typing.Generator"
            ]
        }
    ]
}