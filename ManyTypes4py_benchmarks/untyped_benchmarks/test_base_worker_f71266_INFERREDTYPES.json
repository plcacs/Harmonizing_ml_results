{
    "_worker_metadata@TestBaseWorkerHeartbeat,CustomWorker": [
        {
            "category": "return",
            "name": "_worker_metadata",
            "type": [
                "WorkerMetadata"
            ]
        }
    ],
    "create_run_with_deployment@TestBaseWorkerStart": [
        {
            "category": "arg",
            "name": "state",
            "type": []
        },
        {
            "category": "return",
            "name": "create_run_with_deployment",
            "type": []
        }
    ],
    "create_run_with_deployment@global": [
        {
            "category": "arg",
            "name": "state",
            "type": []
        },
        {
            "category": "return",
            "name": "create_run_with_deployment",
            "type": []
        }
    ],
    "create_run_with_deployment_1@global": [
        {
            "category": "arg",
            "name": "state",
            "type": []
        },
        {
            "category": "return",
            "name": "create_run_with_deployment_1",
            "type": []
        }
    ],
    "create_run_with_deployment_2@global": [
        {
            "category": "arg",
            "name": "state",
            "type": []
        },
        {
            "category": "return",
            "name": "create_run_with_deployment_2",
            "type": []
        }
    ],
    "deployment@TestPrepareForFlowRun": [
        {
            "category": "arg",
            "name": "flow",
            "type": [
                "Flow"
            ]
        },
        {
            "category": "local",
            "name": "flow",
            "type": [
                "Flow"
            ]
        },
        {
            "category": "return",
            "name": "deployment",
            "type": [
                "DeploymentResponse"
            ]
        }
    ],
    "ensure_default_agent_pool_exists@global": [
        {
            "category": "arg",
            "name": "session",
            "type": []
        },
        {
            "category": "local",
            "name": "default_work_pool",
            "type": [
                "int",
                "axes.models.AccessAttempt",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "ensure_default_agent_pool_exists",
            "type": [
                "None"
            ]
        }
    ],
    "flow@TestPrepareForFlowRun": [
        {
            "category": "return",
            "name": "flow",
            "type": [
                "Flow"
            ]
        }
    ],
    "flow_run@TestPrepareForFlowRun": [
        {
            "category": "return",
            "name": "flow_run",
            "type": [
                "FlowRun"
            ]
        }
    ],
    "get_client_spy@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "get_client_spy",
            "type": []
        }
    ],
    "global@global": [],
    "job_config@TestPrepareForFlowRun": [
        {
            "category": "return",
            "name": "job_config",
            "type": [
                "BaseJobConfiguration"
            ]
        }
    ],
    "no_api_url@global": [
        {
            "category": "return",
            "name": "no_api_url",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "raise_value_error@TestInfrastructureIntegration": [
        {
            "category": "return",
            "name": "raise_value_error",
            "type": [
                "None"
            ]
        }
    ],
    "run@TestBaseWorkerHeartbeat,CustomWorker": [
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        }
    ],
    "run@TestWorkerProperties,WorkerImplNoCustomization": [
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        }
    ],
    "run@TestWorkerProperties,WorkerImplWithCustomBaseJobConfiguration": [
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        }
    ],
    "run@TestWorkerProperties,WorkerImplWithDescription": [
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        }
    ],
    "run@TestWorkerProperties,WorkerImplWithDocumentationUrl": [
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        }
    ],
    "run@TestWorkerProperties,WorkerImplWithLogoUrl": [
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        }
    ],
    "run@WorkerTestImpl": [
        {
            "category": "return",
            "name": "run",
            "type": [
                "None"
            ]
        }
    ],
    "test_base_job_configuration_converts_falsey_values_to_none@global": [
        {
            "category": "arg",
            "name": "falsey_value",
            "type": [
                "str",
                "int",
                "nj.core.MongoObject"
            ]
        },
        {
            "category": "local",
            "name": "falsey_value",
            "type": [
                "str",
                "int",
                "nj.core.MongoObject"
            ]
        },
        {
            "category": "return",
            "name": "test_base_job_configuration_converts_falsey_values_to_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_base_job_configuration_from_template_and_overrides@global": [
        {
            "category": "arg",
            "name": "template",
            "type": [
                "str",
                "bool",
                "dict[str, object]"
            ]
        },
        {
            "category": "arg",
            "name": "overrides",
            "type": [
                "str",
                "bool",
                "dict[str, object]"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "str",
                "list[tuple[typing.Union[bool,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "template",
            "type": [
                "str",
                "bool",
                "dict[str, object]"
            ]
        },
        {
            "category": "local",
            "name": "overrides",
            "type": [
                "str",
                "bool",
                "dict[str, object]"
            ]
        },
        {
            "category": "return",
            "name": "test_base_job_configuration_from_template_and_overrides",
            "type": [
                "None"
            ]
        }
    ],
    "test_base_worker_gets_job_configuration_when_syncing_with_backend_with_job_config_and_variables@global": [
        {
            "category": "arg",
            "name": "session",
            "type": [
                "abilian.core.sqlalchemy.SQLAlchemy"
            ]
        },
        {
            "category": "arg",
            "name": "client",
            "type": [
                "flask.testing.FlaskClient"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "Field"
            ]
        },
        {
            "category": "local",
            "name": "WorkerTestImpl_",
            "type": [
                "WorkerJobConfig",
                "WorkerVariables"
            ]
        },
        {
            "category": "local",
            "name": "pool_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "flask.testing.FlaskClient"
            ]
        },
        {
            "category": "local",
            "name": "response",
            "type": [
                "irrd.server.whois.query_response.WhoisQueryResponse",
                "requests.models.Response",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "ezscrape.scraping.core.ScrapeResult",
                "requests.models.Response",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "session",
            "type": [
                "abilian.core.sqlalchemy.SQLAlchemy"
            ]
        },
        {
            "category": "local",
            "name": "model",
            "type": [
                "fastapi.openapi.models.APIKey",
                "allennlp.models.model.Model"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "return",
            "name": "test_base_worker_gets_job_configuration_when_syncing_with_backend_with_job_config_and_variables",
            "type": [
                "None"
            ]
        }
    ],
    "test_base_worker_gets_job_configuration_when_syncing_with_backend_with_just_job_config@global": [
        {
            "category": "arg",
            "name": "session",
            "type": [
                "abilian.core.sqlalchemy.SQLAlchemy"
            ]
        },
        {
            "category": "arg",
            "name": "client",
            "type": [
                "flask.testing.FlaskClient"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "Field"
            ]
        },
        {
            "category": "local",
            "name": "WorkerTestImpl_",
            "type": [
                "WorkerJobConfig"
            ]
        },
        {
            "category": "local",
            "name": "expected_job_template",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[dict[typing.Text, typing.Union[dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Text]],None,typing.Text]],dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, list[dict[typing.Text, typing.Text]]]]],dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Text]]]]],typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "pool_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "flask.testing.FlaskClient"
            ]
        },
        {
            "category": "local",
            "name": "response",
            "type": [
                "irrd.server.whois.query_response.WhoisQueryResponse",
                "requests.models.Response",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "ezscrape.scraping.core.ScrapeResult",
                "requests.models.Response",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "session",
            "type": [
                "abilian.core.sqlalchemy.SQLAlchemy"
            ]
        },
        {
            "category": "local",
            "name": "model",
            "type": [
                "fastapi.openapi.models.APIKey",
                "allennlp.models.model.Model"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "return",
            "name": "test_base_worker_gets_job_configuration_when_syncing_with_backend_with_just_job_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_custom_base_job_configuration@TestWorkerProperties": [
        {
            "category": "local",
            "name": "var1",
            "type": [
                "Field"
            ]
        },
        {
            "category": "local",
            "name": "var2",
            "type": [
                "Field"
            ]
        },
        {
            "category": "local",
            "name": "type",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_custom_base_job_configuration",
            "type": [
                "None"
            ]
        }
    ],
    "test_custom_description@TestWorkerProperties": [
        {
            "category": "local",
            "name": "type",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_description",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_custom_description",
            "type": [
                "None"
            ]
        }
    ],
    "test_custom_documentation_url@TestWorkerProperties": [
        {
            "category": "local",
            "name": "type",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_documentation_url",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_custom_documentation_url",
            "type": [
                "None"
            ]
        }
    ],
    "test_custom_logo_url@TestWorkerProperties": [
        {
            "category": "local",
            "name": "type",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "_logo_url",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_custom_logo_url",
            "type": [
                "None"
            ]
        }
    ],
    "test_custom_worker_can_send_arbitrary_metadata@TestBaseWorkerHeartbeat": [
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "hosted_api_server",
            "type": [
                "bool",
                "str",
                "boucanpy.core.security.TokenPayload"
            ]
        },
        {
            "category": "local",
            "name": "type",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "CustomWorker"
            ]
        },
        {
            "category": "local",
            "name": "mock_load_prefect_collections_",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "mock_distributions_",
            "type": [
                "list[MagicMock]"
            ]
        },
        {
            "category": "return",
            "name": "test_custom_worker_can_send_arbitrary_metadata",
            "type": [
                "None"
            ]
        }
    ],
    "test_defaults@TestWorkerProperties": [
        {
            "category": "local",
            "name": "type",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_defaults",
            "type": [
                "None"
            ]
        }
    ],
    "test_env_merge_logic_is_deep@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "session",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "flow",
            "type": []
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool_env",
            "type": [
                "dict[str, typing.Any]",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "deployment_env",
            "type": []
        },
        {
            "category": "arg",
            "name": "flow_run_env",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "expected_env",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "use_variable_defaults",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "work_pool_env",
            "type": [
                "dict[str, typing.Any]",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "use_variable_defaults",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "base_job_template",
            "type": [
                "dict[typing.Text, typing.Union[dict[typing.Text, typing.Text],dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[str, typing.Any],typing.Callable,int]]]]]]",
                "dict[typing.Text, typing.Union[dict[typing.Text, typing.Union[dict[str, typing.Any],typing.Callable,int]],dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "session",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "prefect_client",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "flow_run_env",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected_env",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_env_merge_logic_is_deep",
            "type": [
                "None"
            ]
        }
    ],
    "test_flow@TestBaseWorkerStart": [
        {
            "category": "return",
            "name": "test_flow",
            "type": [
                "None"
            ]
        }
    ],
    "test_flow@global": [
        {
            "category": "return",
            "name": "test_flow",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_flow_run_logger_with_worker_id_set@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": []
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": []
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "return",
            "name": "test_get_flow_run_logger_with_worker_id_set",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_flow_run_logger_without_worker_id_set@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": []
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "return",
            "name": "test_get_flow_run_logger_without_worker_id_set",
            "type": [
                "None"
            ]
        }
    ],
    "test_job_configuration_from_template_and_overrides@global": [
        {
            "category": "arg",
            "name": "template",
            "type": [
                "str",
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "overrides",
            "type": [
                "str",
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "str",
                "list[tuple[typing.Union[bool,typing.Any]]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "var1",
            "type": [
                "Field"
            ]
        },
        {
            "category": "local",
            "name": "var2",
            "type": [
                "Field"
            ]
        },
        {
            "category": "local",
            "name": "template",
            "type": [
                "str",
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "overrides",
            "type": [
                "str",
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, str]",
                "config_composer.core.config.Config"
            ]
        },
        {
            "category": "return",
            "name": "test_job_configuration_from_template_and_overrides",
            "type": [
                "None"
            ]
        }
    ],
    "test_job_configuration_from_template_and_overrides_with_hard_coded_primitives@global": [
        {
            "category": "local",
            "name": "template",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Union[int,float]]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "Field",
                "dict",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_job_configuration_from_template_and_overrides_with_hard_coded_primitives",
            "type": [
                "None"
            ]
        }
    ],
    "test_job_configuration_from_template_and_overrides_with_nested_variables@global": [
        {
            "category": "local",
            "name": "template",
            "type": [
                "dict[typing.Text, typing.Union[dict[typing.Text, dict[typing.Text, typing.Text]],dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "Field",
                "dict",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_job_configuration_from_template_and_overrides_with_nested_variables",
            "type": [
                "None"
            ]
        }
    ],
    "test_job_configuration_from_template_and_overrides_with_variables_in_a_list@global": [
        {
            "category": "local",
            "name": "template",
            "type": [
                "dict[typing.Text, typing.Union[dict[typing.Text, list[typing.Text]],dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]]],list[typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "Field",
                "dict",
                "dict[str, dict[str, bool]]"
            ]
        },
        {
            "category": "return",
            "name": "test_job_configuration_from_template_and_overrides_with_variables_in_a_list",
            "type": [
                "None"
            ]
        }
    ],
    "test_job_configuration_from_template_coerces_work_pool_values@global": [
        {
            "category": "local",
            "name": "test_work_pool_base_job_config",
            "type": [
                "dict[typing.Text, typing.Union[dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Union[int,None]]]],dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, dict[str, bool]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_job_configuration_from_template_coerces_work_pool_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_job_configuration_from_template_overrides_with_block@global": [
        {
            "category": "local",
            "name": "template",
            "type": [
                "dict[typing.Text, typing.Union[dict[typing.Text, typing.Text],dict[typing.Text, typing.Union[dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Text]],list[typing.Text]]]],list[typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "block_id",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "str",
                "dict[str, dict[str, bool]]",
                "dict[str, int]"
            ]
        },
        {
            "category": "return",
            "name": "test_job_configuration_from_template_overrides_with_block",
            "type": [
                "None"
            ]
        }
    ],
    "test_job_configuration_from_template_overrides_with_remote_variables@global": [
        {
            "category": "local",
            "name": "template",
            "type": [
                "dict[typing.Text, typing.Union[dict[typing.Text, typing.Text],dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "Field"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, dict[str, bool]]",
                "dict[str, typing.Union[int,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_job_configuration_from_template_overrides_with_remote_variables",
            "type": [
                "None"
            ]
        }
    ],
    "test_job_configuration_from_template_overrides_with_remote_variables_hardcodes@global": [
        {
            "category": "local",
            "name": "template",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Text]]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, dict[str, bool]]",
                "dict[str, typing.Union[int,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_job_configuration_from_template_overrides_with_remote_variables_hardcodes",
            "type": [
                "None"
            ]
        }
    ],
    "test_job_configuration_produces_correct_json_template@global": [
        {
            "category": "arg",
            "name": "field_template_value",
            "type": [
                "str",
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "expected_final_template",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "field_template_value",
            "type": [
                "str",
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "var1",
            "type": [
                "Field"
            ]
        },
        {
            "category": "local",
            "name": "var2",
            "type": [
                "Field"
            ]
        },
        {
            "category": "local",
            "name": "template",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_job_configuration_produces_correct_json_template",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_for_flow_run@TestPrepareForFlowRun": [
        {
            "category": "arg",
            "name": "job_config",
            "type": []
        },
        {
            "category": "arg",
            "name": "flow_run",
            "type": []
        },
        {
            "category": "return",
            "name": "test_prepare_for_flow_run",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_for_flow_run_with_deployment_and_flow@TestPrepareForFlowRun": [
        {
            "category": "arg",
            "name": "job_config",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "flow_run",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "deployment",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "flow",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "job_config",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "deployment",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "flow",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_prepare_for_flow_run_with_deployment_and_flow",
            "type": [
                "None"
            ]
        }
    ],
    "test_prepare_for_flow_run_without_deployment_and_flow@TestPrepareForFlowRun": [
        {
            "category": "arg",
            "name": "job_config",
            "type": []
        },
        {
            "category": "arg",
            "name": "flow_run",
            "type": []
        },
        {
            "category": "return",
            "name": "test_prepare_for_flow_run_without_deployment_and_flow",
            "type": [
                "None"
            ]
        }
    ],
    "test_priority_trumps_lateness@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq_2",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "arg",
            "name": "work_queue_1",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "unittesmock.MagicMock",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "flow_runs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "flow_run_ids",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "unittesmock.MagicMock",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "worker_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "submitted_flow_runs",
            "type": [
                "list",
                "set",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_priority_trumps_lateness",
            "type": [
                "None"
            ]
        }
    ],
    "test_start_executes_flow_runs@TestBaseWorkerStart": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": []
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "jgikbase.idmapping.core.object_id.Namespace",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "jgikbase.idmapping.core.object_id.Namespace",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "worker_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "test_start_executes_flow_runs",
            "type": [
                "None"
            ]
        }
    ],
    "test_start_syncs_with_the_server@TestBaseWorkerStart": [
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "meeshkan.core.sagemaker_monitor.SageMakerJobMonitor",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "meeshkan.core.sagemaker_monitor.SageMakerJobMonitor",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "return",
            "name": "test_start_syncs_with_the_server",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_calls_run_with_expected_arguments@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": []
        },
        {
            "category": "arg",
            "name": "monkeypatch",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "run_mock",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "flow_runs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "worker_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_calls_run_with_expected_arguments",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_crashes_flow_if_infrastructure_submission_fails@TestInfrastructureIntegration": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "worker_deployment_infra_wq1",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "monkeypatch",
            "type": [
                "typing.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "prefect_client",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "worker_deployment_infra_wq1",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "mock_run",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "worker_",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "monkeypatch",
            "type": [
                "typing.Iterable"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_crashes_flow_if_infrastructure_submission_fails",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_creates_only_one_client_context@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": []
        },
        {
            "category": "arg",
            "name": "monkeypatch",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "tracking_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "monkeypatch",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "run_mock",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "worker_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_creates_only_one_client_context",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_creates_work_pool_by_default_during_sync@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "prefect_client",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "worker_status",
            "type": [
                "dict[str, int]",
                "dict",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_creates_work_pool_by_default_during_sync",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_does_not_creates_work_pool_when_create_pool_is_false@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": [
                "starlette.testclienTestClient",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "prefect_client",
            "type": [
                "starlette.testclienTestClient",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "worker_status",
            "type": [
                "dict",
                "None",
                "dict[str, tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_does_not_creates_work_pool_when_create_pool_is_false",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_gives_labels_to_flow_runs_when_using_cloud_api@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "worker.jobs.base.subprocess_job.SubprocessJob",
                "int",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "worker_",
            "type": [
                "int",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "expected_labels",
            "type": [
                "dict[typing.Text, str]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_gives_labels_to_flow_runs_when_using_cloud_api",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_heartbeat_sends_integrations@TestBaseWorkerHeartbeat": [
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "hosted_api_server",
            "type": [
                "bool",
                "str",
                "boucanpy.core.security.TokenPayload"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "mock_load_prefect_collections_",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "mock_distributions_",
            "type": [
                "list[MagicMock]"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_heartbeat_sends_integrations",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_last_polled_health_check@global": [
        {
            "category": "arg",
            "name": "work_pool",
            "type": []
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "resp",
            "type": [
                "requests.models.Response",
                "dict[str, list[typing.Any]]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_last_polled_health_check",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_releases_limit_slot_when_aborting_a_change_to_pending@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "int",
                "list",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "run_mock",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "release_mock",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "worker_",
            "type": [
                "AsyncMock",
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_releases_limit_slot_when_aborting_a_change_to_pending",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_removes_flow_run_from_submitting_when_not_ready@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": []
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "worker_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_removes_flow_run_from_submitting_when_not_ready",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_requires_api_url_when_not_in_test_mode@global": [
        {
            "category": "arg",
            "name": "no_api_url",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_requires_api_url_when_not_in_test_mode",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_respects_settings@global": [
        {
            "category": "arg",
            "name": "setting",
            "type": [
                "str",
                "dict[str, object]",
                "db.models.Cowboy"
            ]
        },
        {
            "category": "arg",
            "name": "attr",
            "type": [
                "str",
                "dict[str, object]",
                "db.models.Cowboy"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_respects_settings",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_sends_heartbeat_gets_id@global": [
        {
            "category": "arg",
            "name": "respx_mock",
            "type": []
        },
        {
            "category": "local",
            "name": "work_pool_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_sends_heartbeat_gets_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_sends_heartbeat_messages@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_sends_heartbeat_messages",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_sends_heartbeat_only_gets_id_once@global": [
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "mock",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_sends_heartbeat_only_gets_id_once",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_set_last_polled_time@global": [
        {
            "category": "arg",
            "name": "work_pool",
            "type": []
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_set_last_polled_time",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_warns_when_running_a_flow_run_with_a_storage_block@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "deployment",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": []
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "flow_run",
            "type": [
                "worker.jobs.base.subprocess_job.SubprocessJob",
                "int",
                "mode.utils.mocks.Mock"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_warns_when_running_a_flow_run_with_a_storage_block",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_with_work_pool@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "jgikbase.idmapping.core.object_id.Namespace",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "flow_runs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "flow_run_ids",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "jgikbase.idmapping.core.object_id.Namespace",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "submitted_flow_runs",
            "type": [
                "list",
                "set",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_with_work_pool",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_with_work_pool_and_limit@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": [
                "unittesmock.Mock",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "flow_runs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "flow_run_ids",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "worker_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "submitted_flow_runs",
            "type": [
                "list",
                "set[str]",
                "set"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_with_work_pool_and_limit",
            "type": [
                "None"
            ]
        }
    ],
    "test_worker_with_work_pool_and_work_queue@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq1",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "arg",
            "name": "worker_deployment_wq_2",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "arg",
            "name": "work_queue_1",
            "type": [
                "bytes",
                "dict",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "bytes",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "flow_runs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "flow_run_ids",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "bytes",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "work_queue_1",
            "type": [
                "bytes",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "submitted_flow_runs",
            "type": [
                "list",
                "set",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_worker_with_work_pool_and_work_queue",
            "type": [
                "None"
            ]
        }
    ],
    "test_workers_do_not_submit_flow_runs_awaiting_retry@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "work_queue_1",
            "type": [
                "base.Connection"
            ]
        },
        {
            "category": "arg",
            "name": "work_pool",
            "type": [
                "base.Connection"
            ]
        },
        {
            "category": "local",
            "name": "prefect_client",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "work_queue_1",
            "type": [
                "base.Connection"
            ]
        },
        {
            "category": "local",
            "name": "work_pool",
            "type": [
                "base.Connection"
            ]
        },
        {
            "category": "local",
            "name": "flow_run_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "worker",
            "type": [
                "WorkerTestImpl"
            ]
        },
        {
            "category": "local",
            "name": "submitted_flow_runs",
            "type": [
                "bool",
                "list[typing.Pattern]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_workers_do_not_submit_flow_runs_awaiting_retry",
            "type": [
                "None"
            ]
        }
    ],
    "variables@global": [
        {
            "category": "arg",
            "name": "prefect_client",
            "type": []
        },
        {
            "category": "return",
            "name": "variables",
            "type": [
                "None"
            ]
        }
    ],
    "verify_submitted_deployment@TestWorkerProperties,WorkerImplNoCustomization": [
        {
            "category": "arg",
            "name": "deployment",
            "type": []
        },
        {
            "category": "return",
            "name": "verify_submitted_deployment",
            "type": [
                "None"
            ]
        }
    ],
    "verify_submitted_deployment@TestWorkerProperties,WorkerImplWithCustomBaseJobConfiguration": [
        {
            "category": "arg",
            "name": "deployment",
            "type": []
        },
        {
            "category": "return",
            "name": "verify_submitted_deployment",
            "type": [
                "None"
            ]
        }
    ],
    "verify_submitted_deployment@TestWorkerProperties,WorkerImplWithDescription": [
        {
            "category": "arg",
            "name": "deployment",
            "type": []
        },
        {
            "category": "return",
            "name": "verify_submitted_deployment",
            "type": [
                "None"
            ]
        }
    ],
    "verify_submitted_deployment@TestWorkerProperties,WorkerImplWithDocumentationUrl": [
        {
            "category": "arg",
            "name": "deployment",
            "type": []
        },
        {
            "category": "return",
            "name": "verify_submitted_deployment",
            "type": [
                "None"
            ]
        }
    ],
    "verify_submitted_deployment@TestWorkerProperties,WorkerImplWithLogoUrl": [
        {
            "category": "arg",
            "name": "deployment",
            "type": []
        },
        {
            "category": "return",
            "name": "verify_submitted_deployment",
            "type": [
                "None"
            ]
        }
    ]
}