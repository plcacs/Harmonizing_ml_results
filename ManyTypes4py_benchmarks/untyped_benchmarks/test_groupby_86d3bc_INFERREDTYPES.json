{
    "frame@TestExpanding": [
        {
            "category": "return",
            "name": "frame",
            "type": [
                "DataFrame"
            ]
        }
    ],
    "func@TestRolling": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "func",
            "type": []
        }
    ],
    "func_0@TestExpanding": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "func_0",
            "type": []
        }
    ],
    "func_1@TestExpanding": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "func_1",
            "type": []
        }
    ],
    "get_window_bounds@TestRolling,SimpleIndexer": [
        {
            "category": "arg",
            "name": "num_values",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "min_periods",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "center",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "step",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "min_periods",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "num_values",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "get_window_bounds",
            "type": [
                "tuple"
            ]
        }
    ],
    "global@global": [],
    "isnumpyarray@TestRolling": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "isnumpyarray",
            "type": [
                "int"
            ]
        }
    ],
    "roll_frame@global": [
        {
            "category": "return",
            "name": "roll_frame",
            "type": [
                "DataFrame"
            ]
        }
    ],
    "test_as_index_false@TestRolling": [
        {
            "category": "arg",
            "name": "by",
            "type": [
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "expected_data",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "list[list[typing.Union[typing.Text,float]]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame",
                "pandas.DataFrame",
                "list",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "pandas.DataFrame",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "by",
            "type": [
                "str",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "attr",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "gp_by",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "dict[typing.Text, list[typing.Text]]",
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected_data",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_as_index_false",
            "type": [
                "None"
            ]
        }
    ],
    "test_by_column_not_in_values@TestRolling": [
        {
            "category": "arg",
            "name": "columns",
            "type": [
                "pandas.DataFrame",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "columns",
            "type": [
                "pandas.DataFrame",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "dict[str, list[str]]",
                "int",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "original_obj",
            "type": [
                "dict",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "int",
                "dict[str, int]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_by_column_not_in_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_datelike_on_monotonic_within_each_group@TestRolling": [
        {
            "category": "local",
            "name": "dates",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "float",
                "list[float]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[tuple[typing.Any]]",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_datelike_on_monotonic_within_each_group",
            "type": [
                "None"
            ]
        }
    ],
    "test_datelike_on_not_monotonic_within_each_group@TestRolling": [
        {
            "category": "local",
            "name": "year",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_datelike_on_not_monotonic_within_each_group",
            "type": [
                "None"
            ]
        }
    ],
    "test_dont_mutate_obj_after_slicing@TestEWM": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "grp",
            "type": [
                "list[str]",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected_df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected_series",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_dont_mutate_obj_after_slicing",
            "type": [
                "None"
            ]
        }
    ],
    "test_expanding@TestExpanding": [
        {
            "category": "arg",
            "name": "f",
            "type": [
                "pyspark.sql.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "frame",
            "type": [
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "local",
            "name": "frame",
            "type": [
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "list[int]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "int",
                "typing.Callable[None,None, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[int]",
                "list[str]",
                "tuple[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_expanding",
            "type": [
                "None"
            ]
        }
    ],
    "test_expanding_apply@TestExpanding": [
        {
            "category": "arg",
            "name": "raw",
            "type": [
                "bytes",
                "list[dict[str, typing.Any]]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "frame",
            "type": [
                "numpy.ndarray",
                "slice",
                "list[slice]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "frame",
            "type": [
                "numpy.ndarray",
                "slice",
                "list[slice]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "int",
                "list[list[int]]",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "int",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "raw",
            "type": [
                "bytes",
                "list[dict[str, typing.Any]]",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[list[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[float]",
                "list[int]",
                "tuple[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_expanding_apply",
            "type": [
                "None"
            ]
        }
    ],
    "test_expanding_corr_cov@TestExpanding": [
        {
            "category": "arg",
            "name": "f",
            "type": [
                "typing.BinaryIO",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "frame",
            "type": [
                "typing.BinaryIO",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "frame",
            "type": [
                "typing.BinaryIO",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "dict[str, list[str]]",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "typing.Iterator",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "null_idx",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_expanding_corr_cov",
            "type": [
                "None"
            ]
        }
    ],
    "test_expanding_ddof@TestExpanding": [
        {
            "category": "arg",
            "name": "f",
            "type": []
        },
        {
            "category": "arg",
            "name": "frame",
            "type": [
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "local",
            "name": "frame",
            "type": [
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "int",
                "float",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "dict[str, list[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "float",
                "list[str]",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_expanding_ddof",
            "type": [
                "None"
            ]
        }
    ],
    "test_expanding_quantile@TestExpanding": [
        {
            "category": "arg",
            "name": "interpolation",
            "type": []
        },
        {
            "category": "arg",
            "name": "frame",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "frame",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "int",
                "float",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[int]",
                "list",
                "list[list[int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_expanding_quantile",
            "type": [
                "None"
            ]
        }
    ],
    "test_getitem@TestRolling": [
        {
            "category": "arg",
            "name": "roll_frame",
            "type": [
                "numpy.ndarray",
                "pandas.DataFrame",
                "list[numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "roll_frame",
            "type": [
                "numpy.ndarray",
                "pandas.DataFrame",
                "list[numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "int",
                "float",
                "dict[str, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "g_mutated",
            "type": [
                "list[tuple[typing.Union[int,typing.Any]]]",
                "list",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "float",
                "list",
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "float",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_getitem",
            "type": [
                "None"
            ]
        }
    ],
    "test_getitem_multiple@TestRolling": [
        {
            "category": "arg",
            "name": "roll_frame",
            "type": [
                "list[numpy.ndarray]",
                "DataFrame",
                "\"Checkpoint\""
            ]
        },
        {
            "category": "local",
            "name": "roll_frame",
            "type": [
                "list[numpy.ndarray]",
                "DataFrame",
                "\"Checkpoint\""
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "dict[str, list[str]]",
                "int",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "int",
                "float",
                "range"
            ]
        },
        {
            "category": "local",
            "name": "g_mutated",
            "type": [
                "list[tuple[typing.Any]]",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list",
                "float",
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "list[list[str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_getitem_multiple",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_ewm_agg_namedagg@TestEWM": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[typing.Mapping]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_ewm_agg_namedagg",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_expanding_agg_namedagg@TestExpanding": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[tuple[typing.Union[typing.Any,int]]]",
                "pandas.DataFrame",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_expanding_agg_namedagg",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_level@TestRolling": [
        {
            "category": "local",
            "name": "arrays",
            "type": [
                "list[list[typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, float]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_level",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_monotonic@TestRolling": [
        {
            "category": "local",
            "name": "data",
            "type": [
                "list[list[typing.Union[typing.Text,int]]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame",
                "pandas.DataFrame",
                "list",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[float]",
                "list",
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Iterator",
                "str",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_monotonic",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling@TestRolling": [
        {
            "category": "arg",
            "name": "expected_value",
            "type": [
                "pandas.DataFrame",
                "T",
                "numpy.array"
            ]
        },
        {
            "category": "arg",
            "name": "raw_value",
            "type": [
                "numpy.array",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "raw_value",
            "type": [
                "numpy.array",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected_value",
            "type": [
                "pandas.DataFrame",
                "T",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_agg_namedagg@TestRolling": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "pandas.DataFrame",
                "list[tuple[typing.Union[typing.Any,int]]]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_agg_namedagg",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_center_center@TestRolling": [
        {
            "category": "local",
            "name": "series",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "float",
                "int",
                "pandas.core.series.Series"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series",
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_center_center",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_center_min_periods@TestRolling": [
        {
            "category": "arg",
            "name": "min_periods",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "window_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[tuple[typing.Union[typing.Any,int]]]"
            ]
        },
        {
            "category": "local",
            "name": "grp_A_mean",
            "type": [
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "grp_B_mean",
            "type": [
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "min_periods",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "num_nans",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "nans",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "grp_A_expected",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "grp_B_expected",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_center_min_periods",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_center_on@TestRolling": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_center_on",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_count_closed_on@TestRolling": [
        {
            "category": "arg",
            "name": "unit",
            "type": [
                "tuple[typing.Union[pandas.Series,numpy.ndarray]]",
                "numpy.ndarray",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "unit",
            "type": [
                "tuple[typing.Union[pandas.Series,numpy.ndarray]]",
                "numpy.ndarray",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "dti",
            "type": [
                "DatetimeIndex"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_count_closed_on",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_custom_indexer@TestRolling": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[tuple[typing.Union[typing.Any,int]]]",
                "list",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[bool]",
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_custom_indexer",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_empty_frame@TestRolling": [
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame",
                "list",
                "list[list]",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, float]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_empty_frame",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_group_keys@TestRolling": [
        {
            "category": "arg",
            "name": "group_keys",
            "type": [
                "core.models.Grouping.Key",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "arrays",
            "type": [
                "list[list[typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "float",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_group_keys",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_index_changed@TestRolling": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable",
                "bool",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "ds",
            "type": [
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "typing.Mapping",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_index_changed",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_index_level_and_column_label@TestRolling": [
        {
            "category": "local",
            "name": "arrays",
            "type": [
                "list[list[typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "float",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_index_level_and_column_label",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_nans_in_index@TestRolling": [
        {
            "category": "arg",
            "name": "rollings",
            "type": [
                "str",
                "numpy.ndarray",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "key",
            "type": [
                "str",
                "None",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame",
                "pandas.DataFrame",
                "list",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "None",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "rollings",
            "type": [
                "str",
                "numpy.ndarray",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_nans_in_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_no_sort@TestRolling": [
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[list]",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame",
                "list",
                "databricks.koalas.frame.DataFrame",
                "databricks.koalas.series.Series",
                "list[bool]"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_no_sort",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_non_monotonic@TestRolling": [
        {
            "category": "local",
            "name": "shuffled",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "sec",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_non_monotonic",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_object_doesnt_affect_groupby_apply@TestRolling": [
        {
            "category": "arg",
            "name": "roll_frame",
            "type": [
                "numpy.ndarray",
                "pandas.DataFrame",
                "list[list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "roll_frame",
            "type": [
                "numpy.ndarray",
                "pandas.DataFrame",
                "list[list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "dict",
                "list[list[int]]",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "int",
                "list[tuple[typing.Any]]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_object_doesnt_affect_groupby_apply",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_resulting_multiindex2@TestRolling": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "typing.Iterator",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_resulting_multiindex2",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_resulting_multiindex3@TestRolling": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame",
                "pandas.DataFrame",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "float",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_resulting_multiindex3",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_resulting_multiindex@TestRolling": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "float",
                "list[tuple[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_resulting_multiindex",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_sem@TestRolling": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable",
                "Exception",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame",
                "tuple[float]",
                "list[int]",
                "list[list]"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_sem",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_string_index@TestRolling": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "groups",
            "type": [
                "list",
                "str",
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "rolling_groups",
            "type": [
                "list[tuple[typing.Union[str,int]]]",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "pandas.DataFrame",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "float",
                "list[typing.Any]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_string_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_subset_with_closed@TestRolling": [
        {
            "category": "local",
            "name": "date",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "typing.Iterator",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_subset_with_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_rolling_var@TestRolling": [
        {
            "category": "arg",
            "name": "window",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "min_periods",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "closed",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "bool",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[tuple[typing.Union[typing.Any,int]]]",
                "tuple[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "numpy.ndarray",
                "bool",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "expected_result",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_rolling_var",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_subselect_rolling@TestRolling": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[tuple[typing.Any]]",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame",
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_subselect_rolling",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_subset_rolling_subset_with_closed@TestRolling": [
        {
            "category": "local",
            "name": "date",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "typing.Iterator",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_subset_rolling_subset_with_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test_groupby_unsupported_argument@TestRolling": [
        {
            "category": "arg",
            "name": "roll_frame",
            "type": [
                "list",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "roll_frame",
            "type": [
                "list",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "test_groupby_unsupported_argument",
            "type": [
                "None"
            ]
        }
    ],
    "test_methods@TestEWM": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "dict",
                "str",
                "typing.Pattern"
            ]
        },
        {
            "category": "arg",
            "name": "expected_data",
            "type": [
                "list[int]",
                "list[str]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "dict[str, list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected_data",
            "type": [
                "list[int]",
                "list[str]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_methods",
            "type": [
                "None"
            ]
        }
    ],
    "test_nan_and_zero_endpoints@TestRolling": [
        {
            "category": "arg",
            "name": "any_int_numpy_dtype",
            "type": [
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "idx",
            "type": [
                "pandas.io.pytables.IndexCol"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list[tuple[typing.Union[typing.Any,int]]]",
                "list",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "test_nan_and_zero_endpoints",
            "type": [
                "None"
            ]
        }
    ],
    "test_pairwise_methods@TestEWM": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "tuple[str]",
                "dict[str, list[typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_data",
            "type": [
                "list[int]",
                "list[str]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expected_data",
            "type": [
                "list[int]",
                "list[str]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame",
                "slice",
                "list[str]",
                "list[None]"
            ]
        },
        {
            "category": "return",
            "name": "test_pairwise_methods",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling@TestRolling": [
        {
            "category": "arg",
            "name": "f",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "roll_frame",
            "type": [
                "list[numpy.ndarray]",
                "numpy.ndarray",
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "local",
            "name": "roll_frame",
            "type": [
                "list[numpy.ndarray]",
                "numpy.ndarray",
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "list[int]",
                "dict[str, list[str]]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "int",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[list]",
                "list[bool]",
                "list[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_apply@TestRolling": [
        {
            "category": "arg",
            "name": "raw",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray",
                "starfish.core.types.PerImageSliceSpotResults"
            ]
        },
        {
            "category": "arg",
            "name": "roll_frame",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "roll_frame",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "pathpy.core.edge.Edge",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "int",
                "float",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "raw",
            "type": [
                "pandas.DataFrame",
                "numpy.ndarray",
                "starfish.core.types.PerImageSliceSpotResults"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[list[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[float]",
                "list[int]",
                "tuple[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_apply",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_apply_mutability@TestRolling": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "dict[str, list[str]]",
                "int",
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "mi_",
            "type": [
                "list[typing.Optional[typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_apply_mutability",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_corr_cov_other_diff_size_as_groups@TestRolling": [
        {
            "category": "arg",
            "name": "f",
            "type": [
                "typing.Callable[list, float]",
                "typing.BinaryIO"
            ]
        },
        {
            "category": "arg",
            "name": "roll_frame",
            "type": [
                "typing.Callable[list, float]",
                "typing.BinaryIO"
            ]
        },
        {
            "category": "local",
            "name": "roll_frame",
            "type": [
                "typing.Callable[list, float]",
                "typing.BinaryIO"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "dict[str, list[str]]",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_corr_cov_other_diff_size_as_groups",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_corr_cov_other_same_size_as_groups@TestRolling": [
        {
            "category": "arg",
            "name": "f",
            "type": [
                "float",
                "numpy.array",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "expected_val",
            "type": [
                "numpy.ndarray",
                "numpy.array",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "pandas.DataFrame",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "other",
            "type": [
                "tuple[typing.Any]",
                "list",
                "databricks.koalas.indexes.Index"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected_val",
            "type": [
                "numpy.ndarray",
                "numpy.array",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "expected_data",
            "type": [
                "list[typing.Union[numpy.ndarray,numpy.array,float]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_corr_cov_other_same_size_as_groups",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_corr_cov_pairwise@TestRolling": [
        {
            "category": "arg",
            "name": "f",
            "type": [
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "roll_frame",
            "type": [
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "roll_frame",
            "type": [
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "dict[str, list[str]]",
                "list[int]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "typing.Iterator",
                "dict[str, int]"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_corr_cov_pairwise",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_corr_cov_unordered@TestRolling": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Iterable[T]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "expected_values",
            "type": [
                "numpy.ndarray",
                "list[float]",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "rol",
            "type": [
                "typing.Callable[None, typing.Any]",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "typing.Generator[typing.Optional[typing.Any]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expected_values",
            "type": [
                "numpy.ndarray",
                "list[float]",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_corr_cov_unordered",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_corr_with_single_integer_in_index@global": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "gb",
            "type": [
                "typing.Generator[typing.Optional[int]]",
                "list[str]",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "starfish.core.types._spot_finding_results.SpotFindingResults",
                "typing.Iterator",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_corr_with_single_integer_in_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_corr_with_tuples_in_index@global": [
        {
            "category": "local",
            "name": "df",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "gb",
            "type": [
                "typing.Generator[typing.Optional[int]]",
                "list[str]",
                "tuple[float]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "starfish.core.types._spot_finding_results.SpotFindingResults",
                "typing.Iterator",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_corr_with_tuples_in_index",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_ddof@TestRolling": [
        {
            "category": "arg",
            "name": "f",
            "type": []
        },
        {
            "category": "arg",
            "name": "roll_frame",
            "type": [
                "list[numpy.ndarray]",
                "numpy.ndarray",
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "local",
            "name": "roll_frame",
            "type": [
                "list[numpy.ndarray]",
                "numpy.ndarray",
                "static_frame.core.frame.Frame"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "list[int]",
                "dict[str, list[str]]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "float",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "dict[str, list[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "float",
                "list[str]",
                "tuple[float]"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_ddof",
            "type": [
                "None"
            ]
        }
    ],
    "test_rolling_quantile@TestRolling": [
        {
            "category": "arg",
            "name": "interpolation",
            "type": [
                "float",
                "numpy.ndarray",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "roll_frame",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "roll_frame",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "g",
            "type": [
                "pathpy.core.edge.Edge",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "r",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "interpolation",
            "type": [
                "float",
                "numpy.ndarray",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "list",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "float",
                "list[float]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_rolling_quantile",
            "type": [
                "None"
            ]
        }
    ],
    "test_times@TestEWM": [
        {
            "category": "arg",
            "name": "times_frame",
            "type": [
                "numpy.ndarray",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "halflife",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "times_frame",
            "type": [
                "numpy.ndarray",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "times",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[tuple[typing.Any]]",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "test_times",
            "type": [
                "None"
            ]
        }
    ],
    "test_times_array@TestEWM": [
        {
            "category": "arg",
            "name": "times_frame",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "halflife",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "times_frame",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "times",
            "type": [
                "float",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "dict",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "dict[typing.Any, float]",
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_times_array",
            "type": [
                "None"
            ]
        }
    ],
    "times_frame@global": [
        {
            "category": "return",
            "name": "times_frame",
            "type": [
                "DataFrame"
            ]
        }
    ]
}