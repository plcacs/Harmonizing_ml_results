{
    "__str__@TaggedObject": [
        {
            "category": "return",
            "name": "__str__",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "_add_owners@ObjectUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "sqlalchemy.orm.session.Session",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "session",
            "type": [
                "str",
                "dict",
                "sqlalchemy.exdeclarative.DeclarativeMeta"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "sqlalchemy.orm.session.Session",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "sqlalchemy.orm.session.Session",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "sqlalchemy.orm.session.Session",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "session",
            "type": [
                "str",
                "dict",
                "sqlalchemy.exdeclarative.DeclarativeMeta"
            ]
        },
        {
            "category": "return",
            "name": "_add_owners",
            "type": [
                "None"
            ]
        }
    ],
    "add_tag_object_if_not_tagged@ObjectUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "zerver.models.Realm",
                "None",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "session",
            "type": [
                "django.contrib.auth.models.User"
            ]
        },
        {
            "category": "arg",
            "name": "tag_id",
            "type": [
                "str",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "object_id",
            "type": [
                "str",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "object_type",
            "type": [
                "str",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "tag_id",
            "type": [
                "str",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "object_id",
            "type": [
                "str",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "object_type",
            "type": [
                "str",
                "int",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "exists_query",
            "type": [
                "str",
                "typing.Callable[typing.IO, typing.Any]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "already_tagged",
            "type": [
                "set[str]",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "tagged_object",
            "type": [
                "TaggedObject"
            ]
        },
        {
            "category": "local",
            "name": "session",
            "type": [
                "django.contrib.auth.models.User"
            ]
        },
        {
            "category": "return",
            "name": "add_tag_object_if_not_tagged",
            "type": [
                "None"
            ]
        }
    ],
    "after_delete@FavStarUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "sqlalchemy.Table",
                "sqlalchemy.orm.Mapper"
            ]
        },
        {
            "category": "arg",
            "name": "_mapper",
            "type": [
                "str",
                "sqlalchemy.Table",
                "sqlalchemy.orm.Mapper"
            ]
        },
        {
            "category": "arg",
            "name": "connection",
            "type": [
                "zerver.models.Client",
                "dbcontracts.connection.Connection"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "str",
                "Connection",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "connection",
            "type": [
                "zerver.models.Client",
                "dbcontracts.connection.Connection"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "str",
                "Connection",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "query",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "row",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "ids",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "after_delete",
            "type": [
                "None"
            ]
        }
    ],
    "after_delete@ObjectUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "None",
                "Connection"
            ]
        },
        {
            "category": "arg",
            "name": "_mapper",
            "type": [
                "str",
                "sqlalchemy.Table",
                "sqlalchemy.orm.Mapper"
            ]
        },
        {
            "category": "arg",
            "name": "connection",
            "type": [
                "zerver.models.Client",
                "dbcontracts.connection.Connection"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "str",
                "None",
                "Connection"
            ]
        },
        {
            "category": "local",
            "name": "connection",
            "type": [
                "zerver.models.Client",
                "dbcontracts.connection.Connection"
            ]
        },
        {
            "category": "return",
            "name": "after_delete",
            "type": [
                "None"
            ]
        }
    ],
    "after_insert@FavStarUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Sequence[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "_mapper",
            "type": [
                "typing.Sequence[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "connection",
            "type": [
                "str",
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "connection",
            "type": [
                "str",
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "tagged_object",
            "type": [
                "TaggedObject"
            ]
        },
        {
            "category": "return",
            "name": "after_insert",
            "type": [
                "None"
            ]
        }
    ],
    "after_insert@ObjectUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "sqlalchemy.engine.interfaces.Dialect",
                "sqlalchemy.engine.Engine"
            ]
        },
        {
            "category": "arg",
            "name": "_mapper",
            "type": [
                "typing.Sequence[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "connection",
            "type": [
                "str",
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "str",
                "None",
                "sqlalchemy.engine.Connection"
            ]
        },
        {
            "category": "local",
            "name": "connection",
            "type": [
                "str",
                "typing.Callable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "str",
                "sqlalchemy.engine.interfaces.Dialect",
                "sqlalchemy.engine.Engine"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "str",
                "None",
                "sqlalchemy.engine.Connection"
            ]
        },
        {
            "category": "return",
            "name": "after_insert",
            "type": [
                "None"
            ]
        }
    ],
    "after_update@ObjectUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "None",
                "ultron8.api.models.trigger.TriggerCreate"
            ]
        },
        {
            "category": "arg",
            "name": "_mapper",
            "type": [
                "sqlalchemy.orm.Mapper",
                "str",
                "sqlalchemy.engine.base.Connection"
            ]
        },
        {
            "category": "arg",
            "name": "connection",
            "type": [
                "sqlalchemy.engine.Connection",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "str",
                "None",
                "ultron8.api.models.trigger.TriggerCreate"
            ]
        },
        {
            "category": "local",
            "name": "connection",
            "type": [
                "sqlalchemy.engine.Connection",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "existing_tags",
            "type": [
                "list",
                "str",
                "list[typing.Hashable]"
            ]
        },
        {
            "category": "local",
            "name": "tag",
            "type": [
                "typing.Text",
                "typing.Hashable"
            ]
        },
        {
            "category": "local",
            "name": "existing_owner_tag_ids",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "str",
                "None",
                "ultron8.api.models.trigger.TriggerCreate"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "str",
                "None",
                "ultron8.api.models.trigger.TriggerCreate"
            ]
        },
        {
            "category": "local",
            "name": "tagged_object",
            "type": [
                "TaggedObject"
            ]
        },
        {
            "category": "return",
            "name": "after_update",
            "type": [
                "None"
            ]
        }
    ],
    "get_object_type@global": [
        {
            "category": "arg",
            "name": "class_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mapping",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "class_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_object_type",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ex",
            "type": [
                "Exception"
            ]
        }
    ],
    "get_owner_tag_ids@ObjectUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "bool",
                "None",
                "str",
                "sqlalchemy.engine.url.URL"
            ]
        },
        {
            "category": "arg",
            "name": "session",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "bool",
                "None",
                "str",
                "sqlalchemy.engine.url.URL"
            ]
        },
        {
            "category": "local",
            "name": "tag_ids",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "bool",
                "None",
                "str",
                "sqlalchemy.engine.url.URL"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "bool",
                "None",
                "str",
                "sqlalchemy.engine.url.URL"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "session",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "get_owner_tag_ids",
            "type": [
                "set"
            ]
        }
    ],
    "get_owners_ids@ChartUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "str",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "str",
                "list",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "get_owners_ids",
            "type": [
                "list"
            ]
        }
    ],
    "get_owners_ids@DashboardUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "str",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "str",
                "list",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "get_owners_ids",
            "type": [
                "list"
            ]
        }
    ],
    "get_owners_ids@DatasetUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "str",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "str",
                "list",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "get_owners_ids",
            "type": [
                "list"
            ]
        }
    ],
    "get_owners_ids@ObjectUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "str",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_owners_ids",
            "type": [
                "None"
            ]
        }
    ],
    "get_owners_ids@QueryUpdater": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "str",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "target",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "get_owners_ids",
            "type": [
                "list"
            ]
        }
    ],
    "get_tag@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "session",
            "type": [
                "sqlalchemy.orm.scoping.scoped_session"
            ]
        },
        {
            "category": "arg",
            "name": "type_",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tag_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tag",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "tagdir.models.Tag",
                "None",
                "Tag"
            ]
        },
        {
            "category": "local",
            "name": "type_",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "session",
            "type": [
                "sqlalchemy.orm.scoping.scoped_session"
            ]
        },
        {
            "category": "return",
            "name": "get_tag",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "tagdir.models.Tag"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "user_favorite_tag_table",
            "type": [
                "Table"
            ]
        }
    ]
}