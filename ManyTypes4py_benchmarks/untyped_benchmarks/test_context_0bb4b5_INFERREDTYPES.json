{
    "assert_has_keys@global": [
        {
            "category": "arg",
            "name": "required_keys",
            "type": [
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "maybe_keys",
            "type": [
                "set[str]",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "ctx",
            "type": [
                "list[int]",
                "frozenset"
            ]
        },
        {
            "category": "local",
            "name": "ctx",
            "type": [
                "list[int]",
                "frozenset"
            ]
        },
        {
            "category": "local",
            "name": "keys",
            "type": [
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "required_keys",
            "type": [
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "maybe_keys",
            "type": [
                "set[str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "extras",
            "type": [
                "set"
            ]
        },
        {
            "category": "return",
            "name": "assert_has_keys",
            "type": [
                "None"
            ]
        }
    ],
    "config@TestVar": [
        {
            "category": "arg",
            "name": "provider",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "provider",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "return",
            "name": "config",
            "type": []
        }
    ],
    "config_postgres@global": [
        {
            "category": "local",
            "name": "PROJECT_DATA",
            "type": [
                "dict[str, typing.Union[int,str]]",
                "dict",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "POSTGRES_PROFILE_DATA",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "config_postgres",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "typing.Callable[str, None]"
            ]
        }
    ],
    "context@TestVar": [
        {
            "category": "return",
            "name": "context",
            "type": []
        }
    ],
    "get_adapter@global": [
        {
            "category": "return",
            "name": "get_adapter",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "get_include_paths@global": [
        {
            "category": "local",
            "name": "patch_",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "get_include_paths",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "REQUIRED_BASE_KEYS",
            "type": [
                "set[typing.Text]",
                "frozenset",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "REQUIRED_TARGET_KEYS",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "REQUIRED_DOCS_KEYS",
            "type": [
                "int",
                "frozenset",
                "set[str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "MACROS",
            "type": [
                "set[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "REQUIRED_QUERY_HEADER_KEYS",
            "type": [
                "int",
                "set[str]",
                "list[str]",
                "frozenset"
            ]
        },
        {
            "category": "local",
            "name": "REQUIRED_MACRO_KEYS",
            "type": [
                "int",
                "frozenset",
                "list[str]",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "REQUIRED_MODEL_KEYS",
            "type": [
                "int",
                "frozenset",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "MAYBE_KEYS",
            "type": [
                "set[typing.Text]",
                "set[str]",
                "frozenset",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "POSTGRES_PROFILE_DATA",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,int]]]]]",
                "dict",
                "dict[str, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "PROJECT_DATA",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,int]]",
                "dict[str, typing.Union[int,str]]",
                "dict",
                "dict[str, dict[str, typing.Any]]"
            ]
        }
    ],
    "gmbp@global": [
        {
            "category": "return",
            "name": "gmbp",
            "type": []
        }
    ],
    "manifest_fx@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "manifest_fx",
            "type": []
        }
    ],
    "mock_adapter@TestParseWrapper": [
        {
            "category": "local",
            "name": "adapter_class",
            "type": [
                "dict[str, typing.Any]",
                "cincoconfig.config.Schema"
            ]
        },
        {
            "category": "return",
            "name": "mock_adapter",
            "type": []
        }
    ],
    "mock_adapter@TestRuntimeWrapper": [
        {
            "category": "local",
            "name": "mock_config_",
            "type": [
                "dict[typing.Text, bool]"
            ]
        },
        {
            "category": "local",
            "name": "adapter_class",
            "type": [
                "dict[str, typing.Any]",
                "cincoconfig.config.Schema"
            ]
        },
        {
            "category": "return",
            "name": "mock_adapter",
            "type": []
        }
    ],
    "mock_macro@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "package_name",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "package_name",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "macro_",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "mock_macro",
            "type": []
        }
    ],
    "mock_manifest@global": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "list",
                "typing.Mapping",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "additional_macros",
            "type": [
                "None",
                "list",
                "typing.Mapping",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "default_macro_names",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "list",
                "typing.Mapping",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "default_macros",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "additional_macros",
            "type": [
                "None",
                "list",
                "typing.Mapping",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "all_macros",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "manifest_macros",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "macros_by_package",
            "type": [
                "dict",
                "dict[, dict]"
            ]
        },
        {
            "category": "local",
            "name": "macro_package",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "mock_manifest",
            "type": []
        }
    ],
    "mock_model@global": [
        {
            "category": "return",
            "name": "mock_model",
            "type": []
        }
    ],
    "mock_unit_test_node@global": [
        {
            "category": "return",
            "name": "mock_unit_test_node",
            "type": []
        }
    ],
    "model@TestVar": [
        {
            "category": "return",
            "name": "model",
            "type": [
                "ModelNode"
            ]
        }
    ],
    "model@global": [
        {
            "category": "return",
            "name": "model",
            "type": [
                "ModelNode"
            ]
        }
    ],
    "postgres_adapter@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "list[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "get_adapter",
            "type": [
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "list[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "postgres_adapter",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "provider@TestVar": [
        {
            "category": "return",
            "name": "provider",
            "type": [
                "VarProvider"
            ]
        }
    ],
    "responder@TestParseWrapper": [
        {
            "category": "arg",
            "name": "mock_adapter",
            "type": []
        },
        {
            "category": "return",
            "name": "responder",
            "type": []
        }
    ],
    "responder@TestRuntimeWrapper": [
        {
            "category": "arg",
            "name": "mock_adapter",
            "type": []
        },
        {
            "category": "return",
            "name": "responder",
            "type": []
        }
    ],
    "test_base_context@global": [
        {
            "category": "local",
            "name": "REQUIRED_BASE_KEYS",
            "type": [
                "frozenset",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "MAYBE_KEYS",
            "type": [
                "set[str]",
                "frozenset",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_base_context",
            "type": [
                "None"
            ]
        }
    ],
    "test_dbt_metadata_envs@global": [
        {
            "category": "arg",
            "name": "monkeypatch",
            "type": [
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "get_adapter",
            "type": [
                "bool",
                "neuromation.api.config._AuthConfig",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "get_include_paths",
            "type": [
                "bool",
                "neuromation.api.config._AuthConfig",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "envs",
            "type": [
                "dict[typing.Text, int]"
            ]
        },
        {
            "category": "local",
            "name": "monkeypatch",
            "type": [
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "manifest_fx",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_dbt_metadata_envs",
            "type": [
                "None"
            ]
        }
    ],
    "test_docs_runtime_context@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "pyramid.config.Configurator",
                "str",
                "meier.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "pyramid.config.Configurator",
                "str",
                "meier.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "ctx",
            "type": [
                "tests.test_cogs_twitter.MockCtx"
            ]
        },
        {
            "category": "local",
            "name": "REQUIRED_DOCS_KEYS",
            "type": [
                "frozenset",
                "set[str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "MAYBE_KEYS",
            "type": [
                "set[str]",
                "frozenset",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_docs_runtime_context",
            "type": [
                "None"
            ]
        }
    ],
    "test_invocation_args_to_dict_in_macro_runtime_context@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": [
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "get_adapter",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "get_include_paths",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "manifest_fx",
            "type": [
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_invocation_args_to_dict_in_macro_runtime_context",
            "type": [
                "None"
            ]
        }
    ],
    "test_macro_namespace@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "backup.config.Config",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": []
        },
        {
            "category": "local",
            "name": "dbt_macro",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pg_macro",
            "type": [
                "str",
                "set",
                "dict[str, typing.Callable[None, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "package_macro",
            "type": [
                "dict",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_macro_namespace",
            "type": [
                "None"
            ]
        }
    ],
    "test_macro_namespace_duplicates@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "backup.config.Config",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": []
        },
        {
            "category": "return",
            "name": "test_macro_namespace_duplicates",
            "type": [
                "None"
            ]
        }
    ],
    "test_macro_runtime_context@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "get_adapter",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "get_include_paths",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "manifest_fx",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "REQUIRED_MACRO_KEYS",
            "type": [
                "frozenset",
                "list[str]",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "MAYBE_KEYS",
            "type": [
                "set[str]",
                "frozenset",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_macro_runtime_context",
            "type": [
                "None"
            ]
        }
    ],
    "test_model_parse_context@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": [
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "arg",
            "name": "get_adapter",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "get_include_paths",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "local",
            "name": "manifest_fx",
            "type": [
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "local",
            "name": "ctx",
            "type": [
                "neuromation.cli.utils.Context"
            ]
        },
        {
            "category": "local",
            "name": "REQUIRED_MODEL_KEYS",
            "type": [
                "frozenset",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "MAYBE_KEYS",
            "type": [
                "set[str]",
                "frozenset",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_model_parse_context",
            "type": [
                "None"
            ]
        }
    ],
    "test_model_runtime_context@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "human_activities.config.Config",
                "core.base.utilities.GeneralUtils",
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": [
                "human_activities.config.Config",
                "core.base.utilities.GeneralUtils",
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "arg",
            "name": "get_adapter",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "get_include_paths",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "human_activities.config.Config",
                "core.base.utilities.GeneralUtils",
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "local",
            "name": "manifest_fx",
            "type": [
                "human_activities.config.Config",
                "core.base.utilities.GeneralUtils",
                "pyramid.config.Configurator"
            ]
        },
        {
            "category": "local",
            "name": "REQUIRED_MODEL_KEYS",
            "type": [
                "frozenset",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "MAYBE_KEYS",
            "type": [
                "set[str]",
                "frozenset",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_model_runtime_context",
            "type": [
                "None"
            ]
        }
    ],
    "test_parser_var_default_none@TestVar": [
        {
            "category": "arg",
            "name": "model",
            "type": [
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "str",
                "None",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "config_",
            "type": [
                "dict[typing.Text, None]"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "str",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "model",
            "type": [
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_parser_var_default_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_parser_var_default_something@TestVar": [
        {
            "category": "arg",
            "name": "model",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "config_",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "model",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_parser_var_default_something",
            "type": [
                "None"
            ]
        }
    ],
    "test_parser_var_not_defined@TestVar": [
        {
            "category": "arg",
            "name": "model",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "model",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_parser_var_not_defined",
            "type": [
                "None"
            ]
        }
    ],
    "test_query_header_context@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "typing.IO",
                "dict",
                "backup.config.Config"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": [
                "typing.IO",
                "dict",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "typing.IO",
                "dict",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "manifest_fx",
            "type": [
                "typing.IO",
                "dict",
                "backup.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "REQUIRED_QUERY_HEADER_KEYS",
            "type": [
                "set[str]",
                "list[str]",
                "frozenset"
            ]
        },
        {
            "category": "local",
            "name": "MAYBE_KEYS",
            "type": [
                "set[str]",
                "frozenset",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_query_header_context",
            "type": [
                "None"
            ]
        }
    ],
    "test_unit_test_runtime_context@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "backup.config.Config",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": [
                "backup.config.Config",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "get_adapter",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "get_include_paths",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "backup.config.Config",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest_fx",
            "type": [
                "backup.config.Config",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "ctx",
            "type": [
                "tests.test_cogs_twitter.MockCtx"
            ]
        },
        {
            "category": "local",
            "name": "REQUIRED_MODEL_KEYS",
            "type": [
                "frozenset",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "MAYBE_KEYS",
            "type": [
                "set[str]",
                "frozenset",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_unit_test_runtime_context",
            "type": [
                "None"
            ]
        }
    ],
    "test_unit_test_runtime_context_macro_overrides_dbt_macro@global": [
        {
            "category": "arg",
            "name": "overrides",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "expected_override_value",
            "type": [
                "dict",
                "pyramid.config.Configurator",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "list[str]",
                "utils.CWLObjectType",
                "tbump.config.Config"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "get_adapter",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "get_include_paths",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "unit_test",
            "type": [
                "dict[str, typing.Union[int,None]]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "overrides",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "unit_test_",
            "type": [
                "UnitTestOverrides"
            ]
        },
        {
            "category": "local",
            "name": "dbt_macro",
            "type": [
                "str",
                "list[str]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "list[str]",
                "utils.CWLObjectType",
                "tbump.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "manifest_with_dbt_macro",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_unit_test_runtime_context_macro_overrides_dbt_macro",
            "type": [
                "None"
            ]
        }
    ],
    "test_unit_test_runtime_context_macro_overrides_global@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "str",
                "tbump.config.Config",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": [
                "str",
                "tbump.config.Config",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "get_adapter",
            "type": [
                "backup.config.Config",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "get_include_paths",
            "type": [
                "backup.config.Config",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "unit_test",
            "type": [
                "list[str]",
                "dict[int, dict[str, typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "unit_test_",
            "type": [
                "UnitTestOverrides"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "str",
                "tbump.config.Config",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "manifest_fx",
            "type": [
                "str",
                "tbump.config.Config",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_unit_test_runtime_context_macro_overrides_global",
            "type": [
                "None"
            ]
        }
    ],
    "test_unit_test_runtime_context_macro_overrides_package@global": [
        {
            "category": "arg",
            "name": "config_postgres",
            "type": [
                "typing.IO",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "manifest_fx",
            "type": [
                "int",
                "neuromation.api.config._AuthConfig",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "get_adapter",
            "type": [
                "int",
                "neuromation.api.config._AuthConfig",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "get_include_paths",
            "type": [
                "int",
                "neuromation.api.config._AuthConfig",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "unit_test",
            "type": [
                "list[str]",
                "dict[int, dict[str, typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "unit_test_",
            "type": [
                "UnitTestOverrides"
            ]
        },
        {
            "category": "local",
            "name": "dbt_macro",
            "type": [
                "str",
                "list[str]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "config_postgres",
            "type": [
                "typing.IO",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest_with_dbt_macro",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_unit_test_runtime_context_macro_overrides_package",
            "type": [
                "None"
            ]
        }
    ],
    "test_unwrapped_method@TestParseWrapper": [
        {
            "category": "arg",
            "name": "wrapper",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "responder",
            "type": [
                "app.utils.models.ModelManager",
                "tests.e2e.Helper"
            ]
        },
        {
            "category": "return",
            "name": "test_unwrapped_method",
            "type": [
                "None"
            ]
        }
    ],
    "test_unwrapped_method@TestRuntimeWrapper": [
        {
            "category": "arg",
            "name": "wrapper",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "responder",
            "type": [
                "app.utils.models.ModelManager",
                "tests.e2e.Helper"
            ]
        },
        {
            "category": "return",
            "name": "test_unwrapped_method",
            "type": [
                "None"
            ]
        }
    ],
    "test_var_default_none@TestVar": [
        {
            "category": "arg",
            "name": "model",
            "type": [
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "str",
                "None",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "config_",
            "type": [
                "dict[typing.Text, None]"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "str",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "model",
            "type": [
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "test_var_default_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_var_default_something@TestVar": [
        {
            "category": "arg",
            "name": "model",
            "type": []
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "str",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": []
        },
        {
            "category": "local",
            "name": "config_",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "str",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_var_default_something",
            "type": [
                "None"
            ]
        }
    ],
    "test_var_not_defined@TestVar": [
        {
            "category": "arg",
            "name": "model",
            "type": [
                "typing.Mapping",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "typing.Mapping",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "typing.Mapping",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "typing.Mapping",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "model",
            "type": [
                "typing.Mapping",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_var_not_defined",
            "type": [
                "None"
            ]
        }
    ],
    "test_wrapped_method@TestParseWrapper": [
        {
            "category": "arg",
            "name": "wrapper",
            "type": [
                "str",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "responder",
            "type": []
        },
        {
            "category": "local",
            "name": "wrapper",
            "type": [
                "str",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "found",
            "type": [
                "str",
                "typing.Callable[None, None]",
                "typing.Final"
            ]
        },
        {
            "category": "return",
            "name": "test_wrapped_method",
            "type": [
                "None"
            ]
        }
    ],
    "wrapper@TestParseWrapper": [
        {
            "category": "arg",
            "name": "mock_adapter",
            "type": []
        },
        {
            "category": "return",
            "name": "wrapper",
            "type": []
        }
    ],
    "wrapper@TestRuntimeWrapper": [
        {
            "category": "arg",
            "name": "mock_adapter",
            "type": [
                "tuple[typing.Union[str,mock.Mock]]"
            ]
        },
        {
            "category": "local",
            "name": "mock_adapter",
            "type": [
                "tuple[typing.Union[str,mock.Mock]]"
            ]
        },
        {
            "category": "return",
            "name": "wrapper",
            "type": []
        }
    ]
}