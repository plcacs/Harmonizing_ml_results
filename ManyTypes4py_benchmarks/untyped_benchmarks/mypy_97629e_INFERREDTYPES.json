{
    "__init__@ModelConfigData": [
        {
            "category": "arg",
            "name": "forbid_extra",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "allow_mutation",
            "type": [
                "None",
                "bool",
                "typing.Any"
            ]
        },
        {
            "category": "arg",
            "name": "frozen",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "orm_mode",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "allow_population_by_field_name",
            "type": [
                "None",
                "bool",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "has_alias_generator",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "forbid_extra",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "allow_mutation",
            "type": [
                "None",
                "bool",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "frozen",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "orm_mode",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "allow_population_by_field_name",
            "type": [
                "None",
                "bool",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "has_alias_generator",
            "type": [
                "None",
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@PydanticModelField": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "list",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "is_required",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "alias",
            "type": [
                "str",
                "bool",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "has_dynamic_alias",
            "type": [
                "bool",
                "str",
                "mypy.nodes.SymbolNode"
            ]
        },
        {
            "category": "arg",
            "name": "line",
            "type": [
                "str",
                "list",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "column",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "list",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "is_required",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "alias",
            "type": [
                "str",
                "bool",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "has_dynamic_alias",
            "type": [
                "bool",
                "str",
                "mypy.nodes.SymbolNode"
            ]
        },
        {
            "category": "local",
            "name": "line",
            "type": [
                "str",
                "list",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "column",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "ctx",
            "type": [
                "mypy.plugin.ClassDefContext",
                "click.Context"
            ]
        },
        {
            "category": "arg",
            "name": "plugin_config",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "ctx",
            "type": [
                "mypy.plugin.ClassDefContext",
                "click.Context"
            ]
        },
        {
            "category": "local",
            "name": "_ctx",
            "type": [
                "mypy.plugin.ClassDefContext",
                "click.Context"
            ]
        },
        {
            "category": "local",
            "name": "plugin_config",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@PydanticPlugin": [
        {
            "category": "arg",
            "name": "options",
            "type": [
                "mypy.options.Options"
            ]
        },
        {
            "category": "local",
            "name": "options",
            "type": [
                "mypy.options.Options"
            ]
        },
        {
            "category": "local",
            "name": "plugin_config",
            "type": [
                "PydanticPluginConfig"
            ]
        },
        {
            "category": "local",
            "name": "_plugin_data",
            "type": [
                "dict[str, typing.Union[int,str]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@PydanticPluginConfig": [
        {
            "category": "arg",
            "name": "options",
            "type": [
                "mypy.options.Options",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "options",
            "type": [
                "mypy.options.Options",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "options_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "toml_config",
            "type": [
                "str",
                "dict",
                "configparser.RawConfigParser",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "typing.MutableMapping",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "setting",
            "type": [
                "typing.KeysView",
                "dict",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "plugin_config",
            "type": [
                "ConfigParser"
            ]
        },
        {
            "category": "local",
            "name": "CONFIGFILE_KEY",
            "type": [
                "str",
                "dict[str, str]"
            ]
        }
    ],
    "_pydantic_field_callback@PydanticPlugin": [
        {
            "category": "arg",
            "name": "ctx",
            "type": [
                "mypy.plugin.MethodContext",
                "mypy.plugin.MethodSigContext",
                "discord.excommands.Context"
            ]
        },
        {
            "category": "local",
            "name": "ctx",
            "type": [
                "mypy.plugin.MethodContext",
                "mypy.plugin.MethodSigContext",
                "discord.excommands.Context"
            ]
        },
        {
            "category": "return",
            "name": "_pydantic_field_callback",
            "type": []
        },
        {
            "category": "local",
            "name": "default_factory_type",
            "type": [
                "Overloaded",
                "typing.Type",
                "dict[str, typing.Any]",
                "CallableType"
            ]
        },
        {
            "category": "local",
            "name": "MYPY_VERSION_TUPLE",
            "type": [
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "ret_type_",
            "type": [
                "tuple"
            ]
        }
    ],
    "_pydantic_model_class_maker_callback@PydanticPlugin": [
        {
            "category": "arg",
            "name": "ctx",
            "type": [
                "mypy.plugin.ClassDefContext",
                "discord.excommands.Context"
            ]
        },
        {
            "category": "local",
            "name": "ctx",
            "type": [
                "mypy.plugin.ClassDefContext",
                "discord.excommands.Context"
            ]
        },
        {
            "category": "local",
            "name": "transformer",
            "type": [
                "PydanticModelTransformer"
            ]
        },
        {
            "category": "return",
            "name": "_pydantic_model_class_maker_callback",
            "type": [
                "None"
            ]
        }
    ],
    "_pydantic_model_metaclass_marker_callback@PydanticPlugin": [
        {
            "category": "arg",
            "name": "ctx",
            "type": [
                "mypy.plugin.MethodContext",
                "mypy.plugin.MethodSigContext",
                "list[tuple[typing.Union[str,int]]]"
            ]
        },
        {
            "category": "return",
            "name": "_pydantic_model_metaclass_marker_callback",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "info_metaclass_",
            "type": [
                "None"
            ]
        }
    ],
    "add_construct_method@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "fields",
            "type": [
                "str",
                "list['PydanticModelField']",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "BUILTINS_NAME",
            "type": [
                "str",
                "set[str]",
                "int",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "set_str",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "optional_set_str",
            "type": [
                "UnionType"
            ]
        },
        {
            "category": "local",
            "name": "fields_set_argument",
            "type": [
                "Argument"
            ]
        },
        {
            "category": "local",
            "name": "fields",
            "type": [
                "str",
                "list['PydanticModelField']",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "obj_type",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "self_tvar_name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "MYPY_VERSION_TUPLE",
            "type": [
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "tvd",
            "type": [
                "TypeVarType",
                "TypeVarDef"
            ]
        },
        {
            "category": "local",
            "name": "self_tvar_expr",
            "type": [
                "TypeVarExpr"
            ]
        },
        {
            "category": "local",
            "name": "self_type",
            "type": [
                "TypeVarType"
            ]
        },
        {
            "category": "return",
            "name": "add_construct_method",
            "type": [
                "None"
            ]
        }
    ],
    "add_initializer@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "fields",
            "type": [
                "bool",
                "list['PydanticModelField']",
                "mypy.nodes.TypeInfo"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "bool",
                "dict[str, typing.Union[str,int]]"
            ]
        },
        {
            "category": "arg",
            "name": "is_settings",
            "type": [
                "bool",
                "dict[str, typing.Union[str,int]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "bool",
                "dict[str, typing.Union[str,int]]"
            ]
        },
        {
            "category": "local",
            "name": "use_alias",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "is_settings",
            "type": [
                "bool",
                "dict[str, typing.Union[str,int]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "force_all_optional",
            "type": [
                "bool",
                "dict[str, typing.Union[str,int]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "fields",
            "type": [
                "bool",
                "list['PydanticModelField']",
                "mypy.nodes.TypeInfo"
            ]
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "Var"
            ]
        },
        {
            "category": "return",
            "name": "add_initializer",
            "type": [
                "None"
            ]
        }
    ],
    "add_method@global": [
        {
            "category": "arg",
            "name": "ctx",
            "type": [
                "mypy.plugin.ClassDefContext",
                "bool",
                "click.Context"
            ]
        },
        {
            "category": "arg",
            "name": "name",
            "type": [
                "mypy.plugin.ClassDefContext",
                "bool",
                "mypy.nodes.CallExpr"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "arg",
            "name": "return_type",
            "type": [
                "mypy.types.Type",
                "list[mypy.nodes.Argument]",
                "mypy.plugin.ClassDefContext"
            ]
        },
        {
            "category": "arg",
            "name": "self_type",
            "type": [
                "None",
                "bool",
                "mypy.types.Type",
                "mypy.checker.TypeChecker"
            ]
        },
        {
            "category": "arg",
            "name": "tvar_def",
            "type": [
                "None",
                "mypy.types.Type.VarDef",
                "bool",
                "mypy.checker.TypeChecker"
            ]
        },
        {
            "category": "arg",
            "name": "is_classmethod",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "is_new",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "mypy.plugin.ClassDefContext",
                "bool",
                "mypy.nodes.CallExpr"
            ]
        },
        {
            "category": "local",
            "name": "sym",
            "type": [
                "SymbolTableNode"
            ]
        },
        {
            "category": "local",
            "name": "sym_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "self_type",
            "type": [
                "None",
                "bool",
                "mypy.types.Type",
                "mypy.checker.TypeChecker"
            ]
        },
        {
            "category": "local",
            "name": "is_classmethod",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "is_new",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "first",
            "type": [
                "list[Argument]"
            ]
        },
        {
            "category": "local",
            "name": "arg_types",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "arg_names",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "arg_kinds",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "BUILTINS_NAME",
            "type": [
                "str",
                "set[str]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "function_type",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "return_type",
            "type": [
                "mypy.types.Type",
                "list[mypy.nodes.Argument]",
                "mypy.plugin.ClassDefContext"
            ]
        },
        {
            "category": "local",
            "name": "signature",
            "type": [
                "CallableType"
            ]
        },
        {
            "category": "local",
            "name": "tvar_def",
            "type": [
                "None",
                "mypy.types.Type.VarDef",
                "bool",
                "mypy.checker.TypeChecker"
            ]
        },
        {
            "category": "local",
            "name": "signature_",
            "type": [
                "list[typing.Union[None,mypy.types.Type.VarDef,bool,mypy.checker.TypeChecker]]"
            ]
        },
        {
            "category": "local",
            "name": "func",
            "type": [
                "FuncDef"
            ]
        },
        {
            "category": "local",
            "name": "func_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "Var"
            ]
        },
        {
            "category": "local",
            "name": "v_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dec",
            "type": [
                "Decorator"
            ]
        },
        {
            "category": "return",
            "name": "add_method",
            "type": [
                "None"
            ]
        }
    ],
    "adjust_validator_signatures@PydanticModelTransformer": [
        {
            "category": "local",
            "name": "sym_",
            "type": [
                "Decorator",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_NAMESPACE",
            "type": [
                "str",
                "dict",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "adjust_validator_signatures",
            "type": [
                "None"
            ]
        }
    ],
    "collect_config@PydanticModelTransformer": [
        {
            "category": "local",
            "name": "config",
            "type": [
                "ModelConfigData"
            ]
        },
        {
            "category": "local",
            "name": "METADATA_KEY",
            "type": [
                "str",
                "typing.Type",
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "collect_config",
            "type": [
                "ModelConfigData"
            ]
        }
    ],
    "collect_fields@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "model_config",
            "type": [
                "dict[str, typing.Any]",
                "typing.Type",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fields",
            "type": [
                "list",
                "list[PydanticModelField]"
            ]
        },
        {
            "category": "local",
            "name": "known_fields",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "sym",
            "type": [
                "str",
                "list[str]",
                "typing.ClassVar",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "PlaceholderNode",
                "list",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "model_config",
            "type": [
                "dict[str, typing.Any]",
                "typing.Type",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "all_fields",
            "type": [
                "list[PydanticModelField]"
            ]
        },
        {
            "category": "local",
            "name": "METADATA_KEY",
            "type": [
                "str",
                "typing.Type",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "superclass_fields",
            "type": [
                "list",
                "list[PydanticModelField]"
            ]
        },
        {
            "category": "local",
            "name": "field",
            "type": [
                "PydanticModelField"
            ]
        },
        {
            "category": "local",
            "name": "a",
            "type": [
                "PydanticModelField"
            ]
        },
        {
            "category": "return",
            "name": "collect_fields",
            "type": [
                "list[PydanticModelField]"
            ]
        }
    ],
    "deserialize@PydanticModelField": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "mypy.nodes.JsonDict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "info",
            "type": [
                "mypy.nodes.TypeInfo",
                "JsonDict"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "mypy.nodes.JsonDict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "mypy.nodes.JsonDict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "deserialize",
            "type": [
                "typing.MutableMapping",
                "typing.Type",
                "T"
            ]
        }
    ],
    "error_default_and_default_factory_specified@global": [
        {
            "category": "arg",
            "name": "api",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "api",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_FIELD_DEFAULTS",
            "type": [
                "str",
                "dict[str, str]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "error_default_and_default_factory_specified",
            "type": [
                "None"
            ]
        }
    ],
    "error_from_orm@global": [
        {
            "category": "arg",
            "name": "model_name",
            "type": [
                "str",
                "mypy.plugin.CheckerPluginInterface",
                "mypy.nodes.Context"
            ]
        },
        {
            "category": "arg",
            "name": "api",
            "type": [
                "str",
                "mypy.plugin.CheckerPluginInterface",
                "mypy.nodes.Context"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "str",
                "mypy.plugin.CheckerPluginInterface",
                "mypy.nodes.Context"
            ]
        },
        {
            "category": "local",
            "name": "api",
            "type": [
                "str",
                "mypy.plugin.CheckerPluginInterface",
                "mypy.nodes.Context"
            ]
        },
        {
            "category": "local",
            "name": "model_name",
            "type": [
                "str",
                "mypy.plugin.CheckerPluginInterface",
                "mypy.nodes.Context"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "str",
                "mypy.plugin.CheckerPluginInterface",
                "mypy.nodes.Context"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_ORM",
            "type": [
                "str",
                "list",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "error_from_orm",
            "type": [
                "None"
            ]
        }
    ],
    "error_invalid_config_value@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface"
            ]
        },
        {
            "category": "arg",
            "name": "api",
            "type": [
                "str",
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "str",
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "api",
            "type": [
                "str",
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "str",
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_CONFIG",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "error_invalid_config_value",
            "type": [
                "None"
            ]
        }
    ],
    "error_required_dynamic_aliases@global": [
        {
            "category": "arg",
            "name": "api",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "api",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_ALIAS",
            "type": [
                "str",
                "int",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "error_required_dynamic_aliases",
            "type": [
                "None"
            ]
        }
    ],
    "error_unexpected_behavior@global": [
        {
            "category": "arg",
            "name": "detail",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "arg",
            "name": "api",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.CheckerPluginInterface",
                "mypy.plugin.SemanticAnalyzerPluginInterface"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.CheckerPluginInterface",
                "mypy.plugin.SemanticAnalyzerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "link",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "detail",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "full_message",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "api",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.CheckerPluginInterface",
                "mypy.plugin.SemanticAnalyzerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.CheckerPluginInterface",
                "mypy.plugin.SemanticAnalyzerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_UNEXPECTED",
            "type": [
                "str",
                "typing.Final",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "error_unexpected_behavior",
            "type": [
                "None"
            ]
        }
    ],
    "error_untyped_fields@global": [
        {
            "category": "arg",
            "name": "api",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "api",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "mypy.nodes.Context",
                "mypy.plugin.SemanticAnalyzerPluginInterface",
                "mypy.plugin.CheckerPluginInterface"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_UNTYPED",
            "type": [
                "str",
                "typing.Final",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "error_untyped_fields",
            "type": [
                "None"
            ]
        }
    ],
    "from_orm_callback@global": [
        {
            "category": "arg",
            "name": "ctx",
            "type": [
                "mypy.plugin.FunctionContext",
                "mypy.plugin.MethodContext",
                "discord.excommands.Context"
            ]
        },
        {
            "category": "local",
            "name": "ctx",
            "type": [
                "mypy.plugin.FunctionContext",
                "mypy.plugin.MethodContext",
                "discord.excommands.Context"
            ]
        },
        {
            "category": "local",
            "name": "ctx_type",
            "type": [
                "TypeType",
                "mypy.messages.MessageBuilder",
                "mypy.types.Instance",
                "typing.Type",
                "Instance"
            ]
        },
        {
            "category": "local",
            "name": "model_type",
            "type": [
                "Instance"
            ]
        },
        {
            "category": "local",
            "name": "detail",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "from_orm_callback",
            "type": []
        },
        {
            "category": "local",
            "name": "METADATA_KEY",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "pydantic_metadata",
            "type": [
                "dict",
                "dict[int, str]",
                "typing.MutableMapping",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "orm_mode",
            "type": [
                "bool",
                "'AbstractSetIntStr'",
                "'MappingIntStrAny'"
            ]
        }
    ],
    "get_alias_info@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "stmt",
            "type": [
                "mypy.nodes.AssignmentStmt",
                "list[mypy.nodes.Statement]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "stmt",
            "type": [
                "mypy.nodes.AssignmentStmt",
                "list[mypy.nodes.Statement]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expr",
            "type": [
                "TempNode"
            ]
        },
        {
            "category": "return",
            "name": "get_alias_info",
            "type": [
                "tuple[typing.Optional[bool]]",
                "tuple[bool]"
            ]
        },
        {
            "category": "local",
            "name": "FIELD_FULLNAME",
            "type": [
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "arg",
            "type": [
                "StrExpr",
                "typing.Callable[Any,None, dict[str, typing.Any]]",
                "str"
            ]
        }
    ],
    "get_base_class_hook@PydanticPlugin": [
        {
            "category": "arg",
            "name": "fullname",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fullname",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sym",
            "type": [
                "str",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "BASEMODEL_FULLNAME",
            "type": [
                "str",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "get_base_class_hook",
            "type": [
                "None"
            ]
        }
    ],
    "get_class_decorator_hook@PydanticPlugin": [
        {
            "category": "arg",
            "name": "fullname",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fullname",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "DATACLASS_FULLNAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "MYPY_VERSION_TUPLE",
            "type": [
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "return",
            "name": "get_class_decorator_hook",
            "type": [
                "None"
            ]
        }
    ],
    "get_config_update@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "substmt",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "substmt",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "substmt_",
            "type": [
                "StrExpr",
                "MemberExpr"
            ]
        },
        {
            "category": "return",
            "name": "get_config_update",
            "type": [
                "None",
                "ModelConfigData"
            ]
        },
        {
            "category": "local",
            "name": "forbid_extra",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "has_alias_generator",
            "type": [
                "bool"
            ]
        }
    ],
    "get_field_arguments@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "fields",
            "type": []
        },
        {
            "category": "arg",
            "name": "typed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "force_all_optional",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "use_alias",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "use_alias",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "typed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "force_all_optional",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "arguments",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "get_field_arguments",
            "type": [
                "list"
            ]
        }
    ],
    "get_fullname@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "mypy.nodes.FuncBase",
                "mypy.nodes.SymbolNode",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "mypy.nodes.FuncBase",
                "mypy.nodes.SymbolNode",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "get_fullname",
            "type": [
                "str"
            ]
        }
    ],
    "get_function_hook@PydanticPlugin": [
        {
            "category": "arg",
            "name": "fullname",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fullname",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "sym",
            "type": [
                "str",
                "list",
                "plugin.sublime_texAutoSetIndentationCommand.Indentation"
            ]
        },
        {
            "category": "local",
            "name": "FIELD_FULLNAME",
            "type": [
                "str",
                "set[str]"
            ]
        },
        {
            "category": "return",
            "name": "get_function_hook",
            "type": [
                "None"
            ]
        }
    ],
    "get_is_required@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "mypy.nodes.NameExpr",
                "mypy.nodes.Var",
                "mypy.nodes.ClassDef"
            ]
        },
        {
            "category": "arg",
            "name": "stmt",
            "type": [
                "mypy.nodes.AssignmentStmt",
                "mypy.nodes.TupleExpr",
                "mypy.nodes.Context"
            ]
        },
        {
            "category": "arg",
            "name": "lhs",
            "type": [
                "mypy.nodes.NameExpr",
                "mypy.nodes.Var",
                "mypy.nodes.ClassDef"
            ]
        },
        {
            "category": "local",
            "name": "stmt",
            "type": [
                "mypy.nodes.AssignmentStmt",
                "mypy.nodes.TupleExpr",
                "mypy.nodes.Context"
            ]
        },
        {
            "category": "local",
            "name": "expr",
            "type": [
                "TempNode"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "mypy.nodes.NameExpr",
                "mypy.nodes.Var",
                "mypy.nodes.ClassDef"
            ]
        },
        {
            "category": "local",
            "name": "lhs",
            "type": [
                "mypy.nodes.NameExpr",
                "mypy.nodes.Var",
                "mypy.nodes.ClassDef"
            ]
        },
        {
            "category": "return",
            "name": "get_is_required",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "FIELD_FULLNAME",
            "type": [
                "str",
                "set[str]"
            ]
        }
    ],
    "get_metaclass_hook@PydanticPlugin": [
        {
            "category": "arg",
            "name": "fullname",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fullname",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "MODEL_METACLASS_FULLNAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_metaclass_hook",
            "type": [
                "None"
            ]
        }
    ],
    "get_method_hook@PydanticPlugin": [
        {
            "category": "arg",
            "name": "fullname",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fullname",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "get_method_hook",
            "type": [
                "None"
            ]
        }
    ],
    "get_name@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "mypy.nodes.FuncBase",
                "mypy.nodes.SymbolNode",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "mypy.nodes.FuncBase",
                "mypy.nodes.SymbolNode",
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_name",
            "type": [
                "str"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "CONFIGFILE_KEY",
            "type": [
                "typing.Text",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "METADATA_KEY",
            "type": [
                "typing.Text",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "_NAMESPACE",
            "type": [
                "str",
                "dict",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "BASEMODEL_FULLNAME",
            "type": [
                "typing.Text",
                "str",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "BASESETTINGS_FULLNAME",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "MODEL_METACLASS_FULLNAME",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "FIELD_FULLNAME",
            "type": [
                "typing.Text",
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "DATACLASS_FULLNAME",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "MYPY_VERSION_TUPLE",
            "type": [
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "BUILTINS_NAME",
            "type": [
                "typing.Text",
                "str",
                "set[str]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "__version__",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_ORM",
            "type": [
                "ErrorCode",
                "str",
                "list",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_CONFIG",
            "type": [
                "ErrorCode",
                "dict",
                "dict[str, typing.Any]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_ALIAS",
            "type": [
                "ErrorCode",
                "str",
                "int",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_UNEXPECTED",
            "type": [
                "ErrorCode",
                "str",
                "typing.Final",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_UNTYPED",
            "type": [
                "ErrorCode",
                "str",
                "typing.Final",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ERROR_FIELD_DEFAULTS",
            "type": [
                "ErrorCode",
                "str",
                "dict[str, str]",
                "bool"
            ]
        }
    ],
    "is_dynamic_alias_present@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "fields",
            "type": [
                "list['PydanticModelField']"
            ]
        },
        {
            "category": "arg",
            "name": "has_alias_generator",
            "type": [
                "bool",
                "list['PydanticModelField']"
            ]
        },
        {
            "category": "local",
            "name": "field",
            "type": [
                "'PydanticModelField'"
            ]
        },
        {
            "category": "local",
            "name": "fields",
            "type": [
                "list['PydanticModelField']"
            ]
        },
        {
            "category": "local",
            "name": "field_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "is_dynamic_alias_present",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "has_alias_generator",
            "type": [
                "bool",
                "list['PydanticModelField']"
            ]
        }
    ],
    "parse_mypy_version@global": [
        {
            "category": "arg",
            "name": "version",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "version",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "parse_mypy_version",
            "type": [
                "tuple"
            ]
        }
    ],
    "parse_toml@global": [
        {
            "category": "arg",
            "name": "config_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "parse_toml",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "read_mode",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "rf",
            "type": [
                "typing.IO"
            ]
        }
    ],
    "plugin@global": [
        {
            "category": "arg",
            "name": "version",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "plugin",
            "type": []
        }
    ],
    "report_config_data@PydanticPlugin": [
        {
            "category": "arg",
            "name": "ctx",
            "type": [
                "click.Context",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "report_config_data",
            "type": []
        }
    ],
    "serialize@PydanticModelField": [
        {
            "category": "return",
            "name": "serialize",
            "type": []
        }
    ],
    "set_frozen@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "fields",
            "type": [
                "list['PydanticModelField']",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "frozen",
            "type": [
                "bool",
                "bytes",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "field",
            "type": [
                "'PydanticModelField'",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fields",
            "type": [
                "list['PydanticModelField']",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "sym_node",
            "type": [
                "yaml.nodes.MappingNode",
                "dict",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "var",
            "type": [
                "Var",
                "typing.Callable[Any,None, dict[str, typing.Any]]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "frozen",
            "type": [
                "bool",
                "bytes",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "var_",
            "type": [
                "bool",
                "bytes",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "var_str",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "detail",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "set_frozen",
            "type": [
                "None"
            ]
        }
    ],
    "set_values_dict@ModelConfigData": [
        {
            "category": "return",
            "name": "set_values_dict",
            "type": [
                "dict"
            ]
        }
    ],
    "setdefault@ModelConfigData": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "str",
                "KT"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str",
                "KT"
            ]
        },
        {
            "category": "return",
            "name": "setdefault",
            "type": [
                "None"
            ]
        }
    ],
    "should_init_forbid_extra@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "fields",
            "type": [
                "list['PydanticModelField']",
                "dict[str, raiden.utils.Any]",
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "typing.Type",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "fields",
            "type": [
                "list['PydanticModelField']",
                "dict[str, raiden.utils.Any]",
                "str",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "should_init_forbid_extra",
            "type": [
                "bool"
            ]
        }
    ],
    "to_argument@PydanticModelField": [
        {
            "category": "arg",
            "name": "info",
            "type": [
                "bool",
                "mypy.nodes.TypeInfo",
                "mypy.types.CallableType"
            ]
        },
        {
            "category": "arg",
            "name": "typed",
            "type": [
                "bool",
                "typing.Type",
                "mypy.nodes.TypeInfo"
            ]
        },
        {
            "category": "arg",
            "name": "force_optional",
            "type": [
                "bool",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "use_alias",
            "type": [
                "bool",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "typed",
            "type": [
                "bool",
                "typing.Type",
                "mypy.nodes.TypeInfo"
            ]
        },
        {
            "category": "local",
            "name": "info",
            "type": [
                "bool",
                "mypy.nodes.TypeInfo",
                "mypy.types.CallableType"
            ]
        },
        {
            "category": "local",
            "name": "type_annotation",
            "type": [
                "AnyType"
            ]
        },
        {
            "category": "local",
            "name": "use_alias",
            "type": [
                "bool",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "force_optional",
            "type": [
                "bool",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "to_argument",
            "type": [
                "Argument"
            ]
        }
    ],
    "to_data@PydanticPluginConfig": [
        {
            "category": "return",
            "name": "to_data",
            "type": [
                "dict"
            ]
        }
    ],
    "to_var@PydanticModelField": [
        {
            "category": "arg",
            "name": "info",
            "type": [
                "mypy.nodes.TypeInfo",
                "mypy.nodes.MypyFile"
            ]
        },
        {
            "category": "arg",
            "name": "use_alias",
            "type": [
                "bool",
                "mypy.nodes.TypeInfo",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "dict[str, str]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "use_alias",
            "type": [
                "bool",
                "mypy.nodes.TypeInfo",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "info",
            "type": [
                "mypy.nodes.TypeInfo",
                "mypy.nodes.MypyFile"
            ]
        },
        {
            "category": "return",
            "name": "to_var",
            "type": [
                "Var"
            ]
        }
    ],
    "transform@PydanticModelTransformer": [
        {
            "category": "local",
            "name": "config",
            "type": [
                "str",
                "config_parser.ConfigParser",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "fields",
            "type": [
                "str",
                "Var"
            ]
        },
        {
            "category": "local",
            "name": "BASESETTINGS_FULLNAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "is_settings",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "field",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "METADATA_KEY",
            "type": [
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "transform",
            "type": [
                "None"
            ]
        }
    ],
    "type_has_implicit_default@PydanticModelTransformer": [
        {
            "category": "arg",
            "name": "type_",
            "type": [
                "mypy.nodes.TypeInfo",
                "mypy.types.Instance",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "type_",
            "type": [
                "mypy.nodes.TypeInfo",
                "mypy.types.Instance",
                "typing.Type",
                "AnyType"
            ]
        },
        {
            "category": "return",
            "name": "type_has_implicit_default",
            "type": [
                "bool"
            ]
        }
    ],
    "update@ModelConfigData": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "None",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "update",
            "type": [
                "None"
            ]
        }
    ]
}