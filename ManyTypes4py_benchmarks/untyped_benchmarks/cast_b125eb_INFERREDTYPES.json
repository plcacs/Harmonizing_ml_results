{
    "_disallow_mismatched_datetimelike@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "str",
                "bool",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "str",
                "typing.Type",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str",
                "bool",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "vdtype",
            "type": [
                "str",
                "typing.Type",
                "dict",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_disallow_mismatched_datetimelike",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "str",
                "typing.Type",
                "numpy.ndarray"
            ]
        }
    ],
    "_dtype_can_hold_range@global": [
        {
            "category": "arg",
            "name": "rng",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "rng",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "_dtype_can_hold_range",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        }
    ],
    "_ensure_dtype_type@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "T",
                "typing.Callable",
                "typing.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "T",
                "typing.Callable",
                "typing.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_ensure_dtype_type",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "int",
                "tuple"
            ]
        }
    ],
    "_ensure_nanosecond_dtype@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "typing.Callable",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "typing.Callable",
                "numpy.ndarray",
                "str",
                "list",
                "list[bytes]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "_ensure_nanosecond_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "_maybe_box_and_unbox_datetimelike@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "bool",
                "numpy.dtype",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "int",
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "bool",
                "numpy.dtype",
                "None",
                "dt_@_datetime",
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "int",
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_box_and_unbox_datetimelike",
            "type": [
                "bool",
                "tuple[bool]",
                "str"
            ]
        }
    ],
    "_maybe_cast_to_extension_array@global": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "typing.Sequence[typing.Any]",
                "T",
                "VT"
            ]
        },
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "str",
                "KT",
                "VT"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "None",
                "str",
                "T",
                "static_frame.core.util.DtypeSpecifier"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "None",
                "str",
                "T",
                "static_frame.core.util.DtypeSpecifier"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Sequence[typing.Any]",
                "T",
                "VT"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "str",
                "KT",
                "VT"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "list[object]",
                "pandas.core.arrays.numpy_.PandasArray",
                "str",
                "KT",
                "VT"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_cast_to_extension_array",
            "type": [
                "str",
                "KT",
                "VT",
                "list",
                "list[object]",
                "pandas.core.arrays.numpy_.PandasArray"
            ]
        }
    ],
    "_maybe_infer_dtype_type@global": [
        {
            "category": "arg",
            "name": "element",
            "type": [
                "str",
                "pathpy.core.node.Node",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "tipo",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "element",
            "type": [
                "str",
                "pathpy.core.node.Node",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_infer_dtype_type",
            "type": [
                "None"
            ]
        }
    ],
    "_maybe_promote@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "static_frame.core.util.NameType",
                "gluonts.core.componenDType"
            ]
        },
        {
            "category": "arg",
            "name": "fill_value",
            "type": []
        },
        {
            "category": "local",
            "name": "fill_value",
            "type": [
                "None",
                "float",
                "int",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "static_frame.core.util.NameType",
                "gluonts.core.componenDType",
                "dict[str, typing.Any]",
                "dict[str, str]",
                "str",
                "list",
                "pandas.core.dtypes.dtypes.CategoricalDtype",
                "CategoricalDtype"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_promote",
            "type": [
                "tuple[typing.Union[dict[str, typing.Any],dict[str, str]]]",
                "tuple",
                "tuple[typing.Union[dict[str, typing.Any],dict[str, str],float,int,tuple[typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "fv",
            "type": [
                "int",
                "typing.Callable[None,None,None, typing.Any]",
                "typing.Deque"
            ]
        }
    ],
    "_maybe_promote_cached@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "numpy.dtype",
                "typing.Iterable[numpy.dtype]"
            ]
        },
        {
            "category": "arg",
            "name": "fill_value",
            "type": [
                "bool",
                "numpy.dtype",
                "typing.Iterable[numpy.dtype]"
            ]
        },
        {
            "category": "arg",
            "name": "fill_value_type",
            "type": [
                "bool",
                "typing.Callable[str, None]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "numpy.dtype",
                "typing.Iterable[numpy.dtype]"
            ]
        },
        {
            "category": "local",
            "name": "fill_value",
            "type": [
                "bool",
                "numpy.dtype",
                "typing.Iterable[numpy.dtype]"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_promote_cached",
            "type": [
                "bool",
                "str",
                "None"
            ]
        }
    ],
    "_maybe_unbox_datetimelike@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "T",
                "float",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "typing.Hashable",
                "bool",
                "typing.Iterable[tuple[typing.Union[typing.Hashable,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "T",
                "float",
                "int",
                "property",
                "str",
                "Timestamp",
                "Timedelta"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "typing.Hashable",
                "bool",
                "typing.Iterable[tuple[typing.Union[typing.Hashable,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "value_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_unbox_datetimelike",
            "type": [
                "int",
                "property",
                "str",
                "Timestamp"
            ]
        }
    ],
    "can_hold_element@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "int",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "element",
            "type": [
                "int",
                "list[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "int",
                "list",
                "list[int]",
                "array.array.array"
            ]
        },
        {
            "category": "local",
            "name": "element",
            "type": [
                "int",
                "list[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "can_hold_element",
            "type": [
                "bool"
            ]
        }
    ],
    "coerce_indexer_dtype@global": [
        {
            "category": "arg",
            "name": "indexer",
            "type": [
                "list[int]",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "arg",
            "name": "categories",
            "type": [
                "list[mxnend.array]"
            ]
        },
        {
            "category": "local",
            "name": "categories",
            "type": [
                "list[mxnend.array]"
            ]
        },
        {
            "category": "local",
            "name": "length",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_int8_max",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "list[int]",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "return",
            "name": "coerce_indexer_dtype",
            "type": [
                "bool",
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "_int16_max",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_int32_max",
            "type": [
                "int"
            ]
        }
    ],
    "common_dtype_categorical_compat@global": [
        {
            "category": "arg",
            "name": "objs",
            "type": [
                "list[tuple[typing.Union[str,typing.Any]]]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "tuple[typing.Union[str,typing.Any]]",
                "ABCIndex"
            ]
        },
        {
            "category": "local",
            "name": "objs",
            "type": [
                "list[tuple[typing.Union[str,typing.Any]]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "obj_dtype",
            "type": [
                "typing.Type",
                "bool",
                "list[tuple[typing.Union[str,typing.Any]]]",
                "CategoricalDtype"
            ]
        },
        {
            "category": "return",
            "name": "common_dtype_categorical_compat",
            "type": [
                "bool",
                "numpy.ndarray",
                "float"
            ]
        }
    ],
    "construct_1d_arraylike_from_scalar@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "bool",
                "numpy.dtype"
            ]
        },
        {
            "category": "arg",
            "name": "length",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "static_frame.core.util.NameType",
                "static_frame.core.util.DtypesSpecifier"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "static_frame.core.util.NameType",
                "static_frame.core.util.DtypesSpecifier",
                "None",
                "str",
                "pandas.core.dtypes.dtypes.CategoricalDtype",
                "typing.Type",
                "dict[str, typing.Any]",
                "dict[str, str]",
                "ExtensionDtype"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "bool",
                "numpy.dtype",
                "str",
                "dict",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type",
                "dict",
                "numpy.st3_osx_x64.numpy.core.numerictypes._typedict"
            ]
        },
        {
            "category": "local",
            "name": "length",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "seq",
            "type": [
                "list[typing.Union[bool,numpy.dtype,str,dict,list]]"
            ]
        },
        {
            "category": "return",
            "name": "construct_1d_arraylike_from_scalar",
            "type": [
                "T",
                "typing.Sequence[typing.Sequence[int]]",
                "str"
            ]
        }
    ],
    "construct_1d_object_array_from_listlike@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "list[list[int]]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "list[list[int]]"
            ]
        },
        {
            "category": "return",
            "name": "construct_1d_object_array_from_listlike",
            "type": []
        }
    ],
    "construct_2d_arraylike_from_scalar@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "bool",
                "typing.Sequence[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "length",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "width",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "typing.Mapping",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "length",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "width",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "tuple[typing.Union[int,list[int]]]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "typing.Mapping",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "bool",
                "typing.Sequence[str]",
                "None",
                "list[int]",
                "float",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "construct_2d_arraylike_from_scalar",
            "type": []
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        }
    ],
    "convert_dtypes@global": [
        {
            "category": "arg",
            "name": "input_array",
            "type": [
                "bool",
                "tuple[typing.Union[bool,...]]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "convert_string",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "convert_integer",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "convert_boolean",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "convert_floating",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "infer_objects",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "dtype_backend",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "convert_string",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "convert_integer",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "convert_boolean",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "convert_floating",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "input_array",
            "type": [
                "bool",
                "tuple[typing.Union[bool,...]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "inferred_dtype",
            "type": [
                "bool",
                "str",
                "dict",
                "int",
                "static_frame.core.index_hierarchy.IndexHierarchy",
                "typing.Type",
                "tuple[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "target_int_dtype",
            "type": [
                "str",
                "int",
                "static_frame.core.index_hierarchy.IndexHierarchy"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "bool",
                "..."
            ]
        },
        {
            "category": "local",
            "name": "infer_objects",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "inferred_float_dtype",
            "type": [
                "typing.Type",
                "int",
                "tuple[tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "dtype_backend",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "base_dtype",
            "type": [
                "str",
                "bool",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "pa_type",
            "type": [
                "list[str]",
                "tuple[typing.Any]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "convert_dtypes",
            "type": [
                "bool",
                "str",
                "typing.Callable[numpy.ndarray, numpy.ndarray]"
            ]
        }
    ],
    "dict_compat@global": [
        {
            "category": "arg",
            "name": "d",
            "type": [
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "d",
            "type": [
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "dict_compat",
            "type": [
                "dict[, tuple[str]]"
            ]
        }
    ],
    "ensure_dtype_can_hold_na@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "numpy.ndarray",
                "static_frame.core.util.DtypeSpecifier"
            ]
        },
        {
            "category": "return",
            "name": "ensure_dtype_can_hold_na",
            "type": [
                "None"
            ]
        }
    ],
    "find_common_type@global": [
        {
            "category": "arg",
            "name": "types",
            "type": [
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "find_common_type",
            "type": [
                "None"
            ]
        }
    ],
    "find_result_type@global": [
        {
            "category": "arg",
            "name": "left_dtype",
            "type": []
        },
        {
            "category": "arg",
            "name": "right",
            "type": []
        },
        {
            "category": "local",
            "name": "right",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "new_dtype",
            "type": [
                "str",
                "list[int]",
                "static_frame.core.index_hierarchy.IndexHierarchy"
            ]
        },
        {
            "category": "return",
            "name": "find_result_type",
            "type": [
                "str",
                "list[int]",
                "static_frame.core.index_hierarchy.IndexHierarchy"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_int8_max",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_int16_max",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_int32_max",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "NumpyArrayT",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "_canonical_nans",
            "type": [
                "dict[typing.Type, ]",
                "int",
                "list[dict]",
                "list[list[typing.Any]]"
            ]
        }
    ],
    "infer_dtype_from@global": [
        {
            "category": "arg",
            "name": "val",
            "type": [
                "T",
                "typing.Hashable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "T",
                "typing.Hashable",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "infer_dtype_from",
            "type": [
                "bool"
            ]
        }
    ],
    "infer_dtype_from_array@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "numpy.ndarray",
                "list",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "numpy.ndarray",
                "list",
                "pandas.Series",
                "np_@_ndarray",
                "list[int]",
                "ABCSeries"
            ]
        },
        {
            "category": "return",
            "name": "infer_dtype_from_array",
            "type": [
                "tuple[np_@_ndarray]",
                "tuple[typing.Union[list,list[int],np_@_ndarray]]",
                "tuple",
                "tuple[typing.Union[list,list[int],np_@_ndarray,ABCSeries]]"
            ]
        },
        {
            "category": "local",
            "name": "arr_dtype",
            "type": [
                "tuple",
                "nevergrad.functions.pyomo.core.Pyomo",
                "bool",
                "ExtensionDtype"
            ]
        }
    ],
    "infer_dtype_from_scalar@global": [
        {
            "category": "arg",
            "name": "val",
            "type": [
                "tuple[float]",
                "typing.Type",
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]",
                "StringDtype",
                "str",
                "list",
                "numpy.dtype",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "val",
            "type": [
                "tuple[float]",
                "typing.Type",
                "int",
                "numpy.ndarray",
                "np_@_ndarray",
                "float",
                "tuple[typing.Union[int,float]]",
                "str",
                "Timestamp",
                "Timedelta",
                "NaT",
                "np_@_integer",
                "np_@_floating"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "infer_dtype_from_scalar",
            "type": [
                "tuple[typing.Union[dict[str, typing.Any],dict[str, str],int,float,tuple[typing.Union[int,float]],Timestamp]]"
            ]
        }
    ],
    "invalidate_string_dtypes@global": [
        {
            "category": "arg",
            "name": "dtype_set",
            "type": [
                "static_frame.core.util.DtypeSpecifier"
            ]
        },
        {
            "category": "local",
            "name": "dtype_set",
            "type": [
                "static_frame.core.util.DtypeSpecifier"
            ]
        },
        {
            "category": "local",
            "name": "non_string_dtypes",
            "type": [
                "list[str]",
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "invalidate_string_dtypes",
            "type": [
                "None"
            ]
        }
    ],
    "is_nested_object@global": [
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "typing.Any",
                "None",
                "audiopyle.lib.models.metric.MetricValue",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "is_nested_object",
            "type": [
                "bool"
            ]
        }
    ],
    "maybe_box_datetimelike@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "str",
                "numpy.dtype",
                "datetime.datetime"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "None",
                "str",
                "typing.Type",
                "typing.Iterable[static_frame.core.index_base.IndexBase]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "None",
                "str",
                "typing.Type",
                "typing.Iterable[static_frame.core.index_base.IndexBase]"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str",
                "numpy.dtype",
                "datetime.datetime",
                "Timestamp",
                "Timedelta"
            ]
        },
        {
            "category": "return",
            "name": "maybe_box_datetimelike",
            "type": [
                "str",
                "numpy.dtype",
                "datetime.datetime",
                "Timedelta",
                "Timestamp"
            ]
        }
    ],
    "maybe_box_native@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "T",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "T",
                "numpy.ndarray",
                "float",
                "int",
                "bool",
                "list",
                "list[float]",
                "list[str]",
                "NA",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "maybe_box_native",
            "type": [
                "list",
                "list[float]",
                "list[str]",
                "None",
                "bool",
                "float"
            ]
        }
    ],
    "maybe_cast_pointwise_result@global": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "same_dtype",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "ExtensionDtype"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type",
                "super"
            ]
        },
        {
            "category": "local",
            "name": "same_dtype",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "bool",
                "typing.Callable",
                "list",
                "pandas.core.arrays.numpy_.PandasArray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "numeric_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "maybe_cast_pointwise_result",
            "type": [
                "bool",
                "typing.Callable",
                "list",
                "pandas.core.arrays.numpy_.PandasArray",
                "float"
            ]
        }
    ],
    "maybe_cast_to_datetime@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "str",
                "numpy.dtype",
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "static_frame.core.util.GetItemKeyType",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "str",
                "numpy.dtype",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "static_frame.core.util.GetItemKeyType",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "maybe_cast_to_datetime",
            "type": []
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        }
    ],
    "maybe_cast_to_integer_array@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "typing.Iterable[typing.Any]",
                "numpy.ndarray",
                "typing.Iterable[T]"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "list[numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "typing.Iterable[typing.Any]",
                "numpy.ndarray",
                "typing.Iterable[T]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "list[numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "casted",
            "type": [
                "list",
                "dict[str, object]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "return",
            "name": "maybe_cast_to_integer_array",
            "type": [
                "list",
                "dict[str, object]",
                "str"
            ]
        }
    ],
    "maybe_convert_platform@global": [
        {
            "category": "arg",
            "name": "values",
            "type": [
                "T",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "T",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list",
                "typing.Iterator",
                "dict",
                "T",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "maybe_convert_platform",
            "type": [
                "T",
                "typing.Iterable[typing.Any]"
            ]
        }
    ],
    "maybe_downcast_numeric@global": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "int",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "do_round",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "maybe_downcast_numeric",
            "type": [
                "None"
            ]
        }
    ],
    "maybe_downcast_to_dtype@global": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "typing.Sequence[typing.Sequence[typing.Any]]",
                "typing.Callable[..., static_frame.core.index_base.IndexBase]",
                "None",
                "static_frame.core.util.NameType"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "typing.Iterable[numpy.ndarray]",
                "pandas.Series"
            ]
        },
        {
            "category": "return",
            "name": "maybe_downcast_to_dtype",
            "type": [
                "None"
            ]
        }
    ],
    "maybe_infer_to_datetimelike@global": [
        {
            "category": "arg",
            "name": "value",
            "type": [
                "numpy.ndarray",
                "lib.AbstractArray",
                "numpy.dtype"
            ]
        },
        {
            "category": "arg",
            "name": "convert_to_nullable_dtype",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "numpy.ndarray",
                "lib.AbstractArray",
                "numpy.dtype"
            ]
        },
        {
            "category": "return",
            "name": "maybe_infer_to_datetimelike",
            "type": [
                "numpy.ndarray",
                "lib.AbstractArray",
                "numpy.dtype"
            ]
        },
        {
            "category": "local",
            "name": "convert_to_nullable_dtype",
            "type": [
                "bool"
            ]
        }
    ],
    "maybe_promote@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "tuple[numpy.dtype]",
                "static_frame.core.util.DtypeSpecifier"
            ]
        },
        {
            "category": "arg",
            "name": "fill_value",
            "type": []
        },
        {
            "category": "local",
            "name": "fill_value",
            "type": [
                "float",
                "property",
                "tuple[typing.Any]",
                "NA"
            ]
        },
        {
            "category": "local",
            "name": "orig_is_nat",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_canonical_nans",
            "type": [
                "dict[typing.Type, ]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "tuple[numpy.dtype]",
                "static_frame.core.util.DtypeSpecifier",
                "str",
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "maybe_promote",
            "type": [
                "tuple[typing.Union[str,dict[str, typing.Any],dict[str, str],float,property,tuple[typing.Any]]]"
            ]
        }
    ],
    "maybe_upcast_numeric_to_64bit@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list",
                "numpy.ndarray",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list",
                "numpy.ndarray",
                "pandas.Series"
            ]
        },
        {
            "category": "return",
            "name": "maybe_upcast_numeric_to_64bit",
            "type": [
                "list",
                "numpy.ndarray",
                "pandas.Series"
            ]
        }
    ],
    "np_can_cast_scalar@global": [
        {
            "category": "arg",
            "name": "element",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "element",
            "type": [
                "numpy.ndarray",
                "numpy.dtype",
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "np_can_cast_scalar",
            "type": [
                "bool"
            ]
        }
    ],
    "np_can_hold_element@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "pandas._ArrayLike",
                "typing.Iterable[numpy.dtype]",
                "numpy.dtype"
            ]
        },
        {
            "category": "arg",
            "name": "element",
            "type": [
                "numpy.ndarray",
                "pandas._ArrayLike",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "pandas._ArrayLike",
                "typing.Iterable[numpy.dtype]",
                "numpy.dtype"
            ]
        },
        {
            "category": "local",
            "name": "_dtype_obj",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "element",
            "type": [
                "numpy.ndarray",
                "pandas._ArrayLike",
                "bool",
                "range"
            ]
        },
        {
            "category": "return",
            "name": "np_can_hold_element",
            "type": [
                "numpy.ndarray",
                "pandas._ArrayLike",
                "bool",
                "range"
            ]
        },
        {
            "category": "local",
            "name": "tipo",
            "type": [
                "str",
                "tuple[typing.Literal]",
                "Packages.numpy.st3_osx_x64.numpy.oldnumeric.ma.masked_binary_operation",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        }
    ],
    "np_find_common_type@global": [
        {
            "category": "arg",
            "name": "dtypes",
            "type": []
        },
        {
            "category": "return",
            "name": "np_find_common_type",
            "type": []
        }
    ]
}