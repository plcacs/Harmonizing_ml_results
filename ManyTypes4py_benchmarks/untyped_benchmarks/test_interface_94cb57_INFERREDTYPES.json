{
    "global@global": [
        {
            "category": "local",
            "name": "_STRATEGY",
            "type": [
                "StrategyTestV3",
                "freqtrade.strategy.interface.IStrategy",
                "pandas.core.internals.managers.BlockManager"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY_",
            "type": [
                "DataProvider"
            ]
        }
    ],
    "test__analyze_ticker_internal_skip_analyze@global": [
        {
            "category": "arg",
            "name": "ohlcv_history",
            "type": [
                "tests.async_mock.Mock",
                "kata.data.repos.HardCoded.ConfigRepo"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "kata.data.repos.KataTemplateRepo",
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "kata.data.repos.KataTemplateRepo",
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "ind_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "entry_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "exit_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "strategy",
            "type": [
                "StrategyTestV3"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "DataProvider",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ohlcv_history",
            "type": [
                "tests.async_mock.Mock",
                "kata.data.repos.HardCoded.ConfigRepo"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "dict",
                "list[tuple[typing.Union[str,int]]]",
                "dict[str, list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test__analyze_ticker_internal_skip_analyze",
            "type": [
                "None"
            ]
        }
    ],
    "test_advise_all_indicators@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "testdatadir",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "testdatadir",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_advise_all_indicators",
            "type": [
                "None"
            ]
        }
    ],
    "test_advise_all_indicators_copy@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "tests.async_mock.MagicMock",
                "experimental.util.alice.alice_pb2.RunRequest"
            ]
        },
        {
            "category": "arg",
            "name": "default_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "testdatadir",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "tests.async_mock.MagicMock",
                "experimental.util.alice.alice_pb2.RunRequest"
            ]
        },
        {
            "category": "local",
            "name": "aimock",
            "type": [
                "str",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "testdatadir",
            "type": [
                "tests.setup.SetupTest"
            ]
        },
        {
            "category": "return",
            "name": "test_advise_all_indicators_copy",
            "type": [
                "None"
            ]
        }
    ],
    "test_analyze_pair_empty@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "experimental.util.alice.alice_pb2.String",
                "experimental.util.alice.alice_pb2_grpc.LedgerStub"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": []
        },
        {
            "category": "arg",
            "name": "ohlcv_history",
            "type": [
                "experimental.util.alice.alice_pb2.RunRequest",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY_",
            "type": [
                "DataProvider"
            ]
        },
        {
            "category": "local",
            "name": "ohlcv_history",
            "type": [
                "experimental.util.alice.alice_pb2.RunRequest",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY",
            "type": [
                "freqtrade.strategy.interface.IStrategy",
                "pandas.core.internals.managers.BlockManager"
            ]
        },
        {
            "category": "return",
            "name": "test_analyze_pair_empty",
            "type": [
                "None"
            ]
        }
    ],
    "test_analyze_ticker_default@global": [
        {
            "category": "arg",
            "name": "ohlcv_history",
            "type": [
                "tests.async_mock.Mock",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "ind_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "entry_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "exit_mock",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "strategy",
            "type": [
                "StrategyTestV3"
            ]
        },
        {
            "category": "local",
            "name": "ohlcv_history",
            "type": [
                "tests.async_mock.Mock",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_analyze_ticker_default",
            "type": [
                "None"
            ]
        }
    ],
    "test_assert_df@global": [
        {
            "category": "arg",
            "name": "ohlcv_history",
            "type": [
                "pandas.DataFrame",
                "dict[int, dict]"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "dict[str, typing.Any]",
                "dict[int, list[typing.Any]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "ohlcv_history",
            "type": [
                "pandas.DataFrame",
                "dict[int, dict]"
            ]
        },
        {
            "category": "local",
            "name": "df_len",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY",
            "type": [
                "freqtrade.strategy.interface.IStrategy",
                "pandas.core.internals.managers.BlockManager"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "dict[str, typing.Any]",
                "dict[int, list[typing.Any]]",
                "list",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_assert_df",
            "type": [
                "None"
            ]
        }
    ],
    "test_assert_df_raise@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "experimental.util.alice.alice_pb2.RunRequest"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": []
        },
        {
            "category": "arg",
            "name": "ohlcv_history",
            "type": []
        },
        {
            "category": "local",
            "name": "_STRATEGY_",
            "type": [
                "DataProvider"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY",
            "type": [
                "freqtrade.strategy.interface.IStrategy",
                "pandas.core.internals.managers.BlockManager"
            ]
        },
        {
            "category": "return",
            "name": "test_assert_df_raise",
            "type": [
                "None"
            ]
        }
    ],
    "test_auto_hyperopt_interface@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": []
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "IntParameter"
            ]
        },
        {
            "category": "return",
            "name": "test_auto_hyperopt_interface",
            "type": [
                "None"
            ]
        }
    ],
    "test_auto_hyperopt_interface_loadparams@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "pathlib.Path",
                "experimental.util.alice.alice_pb2.RunRequest",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": []
        },
        {
            "category": "local",
            "name": "expected_result",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, dict[typing.Text, float]]]]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "pathlib.Path",
                "experimental.util.alice.alice_pb2.RunRequest",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_auto_hyperopt_interface_loadparams",
            "type": [
                "None"
            ]
        }
    ],
    "test_custom_exit@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "tuple[dict]",
                "pd.DataFrame",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "tuple[dict]",
                "pd.DataFrame",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "Trade"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_custom_exit",
            "type": [
                "None"
            ]
        }
    ],
    "test_freqai_not_initialized@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Callable[list, None]"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "typing.Callable[list, None]"
            ]
        },
        {
            "category": "return",
            "name": "test_freqai_not_initialized",
            "type": [
                "None"
            ]
        }
    ],
    "test_ft_stoploss_reached@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "bool",
                "None",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "profit",
            "type": [
                "float",
                "freqtrade.persistence.Trade",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "adjusted",
            "type": [
                "float",
                "freqtrade.persistence.Trade",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "bool",
                "float",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "liq",
            "type": [
                "bool",
                "None",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "trailing",
            "type": [
                "bool",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "custom",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "profit2",
            "type": [
                "float",
                "freqtrade.persistence.Trade",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "adjusted2",
            "type": [
                "float",
                "freqtrade.persistence.Trade",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "expected2",
            "type": [
                "bool",
                "float",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "custom_stop",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "bool",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "liq",
            "type": [
                "bool",
                "None",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "Trade"
            ]
        },
        {
            "category": "local",
            "name": "trailing",
            "type": [
                "bool",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "bool",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "custom",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "custom_stop",
            "type": [
                "float",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "datetime.datetime",
                "typing.Type",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "profit",
            "type": [
                "float",
                "freqtrade.persistence.Trade",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "current_rate",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "bool",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "profit2",
            "type": [
                "float",
                "freqtrade.persistence.Trade",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "current_rate2",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "expected2",
            "type": [
                "bool",
                "float",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_ft_stoploss_reached",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_signal_empty@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_get_signal_empty",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_signal_exception_valueerror@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "experimental.util.alice.alice_pb2.String",
                "experimental.util.alice.alice_pb2_grpc.LedgerStub",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "ohlcv_history",
            "type": [
                "experimental.util.alice.alice_pb2.String"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY_",
            "type": [
                "DataProvider"
            ]
        },
        {
            "category": "local",
            "name": "ohlcv_history",
            "type": [
                "experimental.util.alice.alice_pb2.String"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY",
            "type": [
                "freqtrade.strategy.interface.IStrategy",
                "pandas.core.internals.managers.BlockManager"
            ]
        },
        {
            "category": "return",
            "name": "test_get_signal_exception_valueerror",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_signal_no_sell_column@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "typing.Callable[list, None]",
                "dict",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "typing.Callable[list, None]",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "arg",
            "name": "ohlcv_history",
            "type": []
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY",
            "type": [
                "freqtrade.strategy.interface.IStrategy",
                "pandas.core.internals.managers.BlockManager"
            ]
        },
        {
            "category": "return",
            "name": "test_get_signal_no_sell_column",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_signal_old_dataframe@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "typing.Callable[list, None]",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "dict[str, list[str]]"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "logging.Logger",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "ohlcv_history",
            "type": []
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "logging.Logger",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY",
            "type": [
                "freqtrade.strategy.interface.IStrategy",
                "pandas.core.internals.managers.BlockManager"
            ]
        },
        {
            "category": "return",
            "name": "test_get_signal_old_dataframe",
            "type": [
                "None"
            ]
        }
    ],
    "test_hyperopt_parameters@global": [
        {
            "category": "local",
            "name": "intpar",
            "type": [
                "IntParameter"
            ]
        },
        {
            "category": "local",
            "name": "intpar_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "fltpar",
            "type": [
                "RealParameter",
                "DecimalParameter"
            ]
        },
        {
            "category": "local",
            "name": "fltpar_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "catpar",
            "type": [
                "CategoricalParameter"
            ]
        },
        {
            "category": "local",
            "name": "catpar_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "boolpar",
            "type": [
                "BooleanParameter"
            ]
        },
        {
            "category": "local",
            "name": "boolpar_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_hyperopt_parameters",
            "type": [
                "None"
            ]
        }
    ],
    "test_ignore_expired_candle@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "typing.Callable[list, None]"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "typing.Callable[list, None]"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "current_time",
            "type": [
                "float",
                "datetime.timedelta",
                "datetime.datetime"
            ]
        },
        {
            "category": "return",
            "name": "test_ignore_expired_candle",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_informative_pairs_callback@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": []
        },
        {
            "category": "return",
            "name": "test_is_informative_pairs_callback",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_pair_locked@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": []
        },
        {
            "category": "local",
            "name": "PairLocks_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "pair",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "reason",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_is_pair_locked",
            "type": [
                "None"
            ]
        }
    ],
    "test_leverage_callback@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": []
        },
        {
            "category": "arg",
            "name": "side",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_leverage_callback",
            "type": [
                "None"
            ]
        }
    ],
    "test_min_roi_reached2@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "keno.strategy.Strategy",
                "pandas.Series",
                "pd.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "min_roi_list",
            "type": [
                "list[dict[int, float]]"
            ]
        },
        {
            "category": "local",
            "name": "roi",
            "type": [
                "dict[int, float]"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "dict[int, float]"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "keno.strategy.Strategy",
                "pandas.Series",
                "pd.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "Trade"
            ]
        },
        {
            "category": "return",
            "name": "test_min_roi_reached2",
            "type": [
                "None"
            ]
        }
    ],
    "test_min_roi_reached3@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "keno.strategy.Strategy",
                "pandas.Series",
                "pd.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "min_roi",
            "type": [
                "dict[int, float]"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "dict[int, float]"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "keno.strategy.Strategy",
                "pandas.Series",
                "pd.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "Trade"
            ]
        },
        {
            "category": "return",
            "name": "test_min_roi_reached3",
            "type": [
                "None"
            ]
        }
    ],
    "test_min_roi_reached@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "keno.strategy.Strategy",
                "pandas.Series",
                "pd.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "min_roi_list",
            "type": [
                "list[dict[int, float]]"
            ]
        },
        {
            "category": "local",
            "name": "roi",
            "type": [
                "dict[int, float]"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "dict[int, float]"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "keno.strategy.Strategy",
                "pandas.Series",
                "pd.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "Trade"
            ]
        },
        {
            "category": "return",
            "name": "test_min_roi_reached",
            "type": [
                "None"
            ]
        }
    ],
    "test_pandas_warning_direct@global": [
        {
            "category": "arg",
            "name": "ohlcv_history",
            "type": [
                "bool",
                "list",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "function",
            "type": [
                "str",
                "object",
                "typing.Type",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "raises",
            "type": [
                "bool",
                "typing.Callable",
                "None",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "recwarn",
            "type": [
                "list[str]",
                "str",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY",
            "type": [
                "freqtrade.strategy.interface.IStrategy",
                "pandas.core.internals.managers.BlockManager"
            ]
        },
        {
            "category": "local",
            "name": "ohlcv_history",
            "type": [
                "bool",
                "list",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "df",
            "type": [
                "str",
                "list",
                "list[dict[str, int]]"
            ]
        },
        {
            "category": "local",
            "name": "raises",
            "type": [
                "bool",
                "typing.Callable",
                "None",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_pandas_warning_direct",
            "type": [
                "None"
            ]
        }
    ],
    "test_pandas_warning_through_analyze_pair@global": [
        {
            "category": "arg",
            "name": "ohlcv_history",
            "type": [
                "taskiinfrastructure.data.json.repositories.project_repository.JsonProjectRepository"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "taskiinfrastructure.data.json.repositories.project_repository.JsonProjectRepository"
            ]
        },
        {
            "category": "arg",
            "name": "recwarn",
            "type": [
                "lib.Path"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY_",
            "type": [
                "DataProvider"
            ]
        },
        {
            "category": "local",
            "name": "ohlcv_history",
            "type": [
                "taskiinfrastructure.data.json.repositories.project_repository.JsonProjectRepository"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY",
            "type": [
                "freqtrade.strategy.interface.IStrategy",
                "pandas.core.internals.managers.BlockManager"
            ]
        },
        {
            "category": "return",
            "name": "test_pandas_warning_through_analyze_pair",
            "type": [
                "None"
            ]
        }
    ],
    "test_returns_latest_signal@global": [
        {
            "category": "arg",
            "name": "ohlcv_history",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "ohlcv_history",
            "type": [
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY",
            "type": [
                "freqtrade.strategy.interface.IStrategy",
                "pandas.core.internals.managers.BlockManager"
            ]
        },
        {
            "category": "local",
            "name": "_STRATEGY_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_returns_latest_signal",
            "type": [
                "None"
            ]
        }
    ],
    "test_should_sell@global": [
        {
            "category": "arg",
            "name": "default_conf",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "fee",
            "type": [
                "tuple[dict]",
                "float",
                "dict[str, \"Outcome\"]"
            ]
        },
        {
            "category": "local",
            "name": "default_conf",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "fee",
            "type": [
                "tuple[dict]",
                "float",
                "dict[str, \"Outcome\"]"
            ]
        },
        {
            "category": "local",
            "name": "trade",
            "type": [
                "Trade"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "strategy_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_should_sell",
            "type": [
                "None"
            ]
        }
    ]
}