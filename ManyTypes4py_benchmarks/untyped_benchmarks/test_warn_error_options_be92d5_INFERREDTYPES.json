{
    "assert_deprecation_error@global": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "dict",
                "apistar.types.ReturnValue"
            ]
        },
        {
            "category": "return",
            "name": "assert_deprecation_error",
            "type": [
                "None"
            ]
        }
    ],
    "assert_deprecation_warning@global": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "typing.Callable",
                "bool",
                "typing.Iterable[typing.Callable]"
            ]
        },
        {
            "category": "arg",
            "name": "catcher",
            "type": [
                "list[dict[str, typing.Any]]",
                "list[dict]",
                "list[list[int]]"
            ]
        },
        {
            "category": "return",
            "name": "assert_deprecation_warning",
            "type": [
                "None"
            ]
        }
    ],
    "catcher@global": [
        {
            "category": "return",
            "name": "catcher",
            "type": [
                "EventCatcher"
            ]
        }
    ],
    "clear_project_flags@TestWarnErrorOptionsFromProject": [
        {
            "category": "arg",
            "name": "project_root",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "flags",
            "type": [
                "dict[typing.Text, dict]"
            ]
        },
        {
            "category": "local",
            "name": "project_root",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "clear_project_flags",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "ModelsDictSpec",
            "type": [
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "my_model_sql",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "schema_yml",
            "type": [
                "typing.Text",
                "str",
                "dict[str, str]"
            ]
        }
    ],
    "models@TestEmptyWarnError": [
        {
            "category": "local",
            "name": "my_model_sql",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "schema_yml",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "models",
            "type": [
                "dict[typing.Text, typing.Union[str,dict[str, str]]]"
            ]
        }
    ],
    "models@global": [
        {
            "category": "local",
            "name": "my_model_sql",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "schema_yml",
            "type": [
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "models",
            "type": [
                "dict[typing.Text, typing.Union[str,dict[str, str]]]"
            ]
        }
    ],
    "runner@global": [
        {
            "category": "arg",
            "name": "catcher",
            "type": [
                "str",
                "\"Tracer\"",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "catcher",
            "type": [
                "str",
                "\"Tracer\"",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "runner",
            "type": [
                "dbtRunner"
            ]
        }
    ],
    "test_can_exclude_specific_event@TestWarnErrorOptionsFromCLI": [
        {
            "category": "arg",
            "name": "project",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "catcher",
            "type": [
                "cli_ui.tests.MessageRecorder"
            ]
        },
        {
            "category": "arg",
            "name": "runner",
            "type": [
                "tests.e2e.Helper",
                "neuromation.cli.printer.TTYPrinter"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "tests.e2e.Helper",
                "neuromation.cli.printer.TTYPrinter"
            ]
        },
        {
            "category": "local",
            "name": "catcher",
            "type": [
                "cli_ui.tests.MessageRecorder"
            ]
        },
        {
            "category": "return",
            "name": "test_can_exclude_specific_event",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_exclude_specific_event@TestWarnErrorOptionsFromProject": [
        {
            "category": "arg",
            "name": "project",
            "type": [
                "typing.Callable[typing.Any, None]",
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "clear_project_flags",
            "type": [
                "typing.Callable[typing.Any, None]",
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "project_root",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "catcher",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "runner",
            "type": [
                "tests.e2e.Helper",
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "include_options",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "project_root",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "tests.e2e.Helper",
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "exclude_options",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,list[typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "catcher",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_can_exclude_specific_event",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_raise_warning_to_error@TestWarnErrorOptionsFromCLI": [
        {
            "category": "arg",
            "name": "project",
            "type": [
                "bool",
                "cli_ui.tests.MessageRecorder"
            ]
        },
        {
            "category": "arg",
            "name": "catcher",
            "type": [
                "cli_ui.tests.MessageRecorder"
            ]
        },
        {
            "category": "arg",
            "name": "runner",
            "type": [
                "tests.e2e.Helper",
                "tests.e2e.conftesHelper"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "tests.e2e.Helper",
                "tests.e2e.conftesHelper"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "tests.randommock.SampleMock"
            ]
        },
        {
            "category": "local",
            "name": "catcher",
            "type": [
                "cli_ui.tests.MessageRecorder"
            ]
        },
        {
            "category": "return",
            "name": "test_can_raise_warning_to_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_raise_warning_to_error@TestWarnErrorOptionsFromProject": [
        {
            "category": "arg",
            "name": "project",
            "type": [
                "bool",
                "typing.Callable[typing.Any, None]",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "clear_project_flags",
            "type": [
                "bool",
                "typing.Callable[typing.Any, None]",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "project_root",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "catcher",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "runner",
            "type": [
                "tests.e2e.Helper"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "tests.e2e.Helper"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "tests.randommock.SampleMock"
            ]
        },
        {
            "category": "local",
            "name": "catcher",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "include_options",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, list[typing.Text]]]]",
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "project_root",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_can_raise_warning_to_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_silence@TestWarnErrorOptionsFromCLI": [
        {
            "category": "arg",
            "name": "project",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "catcher",
            "type": []
        },
        {
            "category": "arg",
            "name": "runner",
            "type": [
                "tests.e2e.Helper",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "tests.e2e.Helper",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_can_silence",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_silence@TestWarnErrorOptionsFromProject": [
        {
            "category": "arg",
            "name": "project",
            "type": [
                "bool",
                "typing.Callable[typing.Any, None]",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "clear_project_flags",
            "type": [
                "bool",
                "typing.Callable[typing.Any, None]",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "project_root",
            "type": [
                "str",
                "bool",
                "typing.Callable[typing.Any, None]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "catcher",
            "type": [
                "tuple[str]",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "runner",
            "type": [
                "typing.MutableSequence",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "typing.MutableSequence",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "catcher",
            "type": [
                "tuple[str]",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "silence_options",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, list[typing.Text]]]]"
            ]
        },
        {
            "category": "local",
            "name": "project_root",
            "type": [
                "str",
                "bool",
                "typing.Callable[typing.Any, None]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_can_silence",
            "type": [
                "None"
            ]
        }
    ],
    "test_cant_set_both_exclude_and_warn@TestWarnErrorOptionsFromCLI": [
        {
            "category": "arg",
            "name": "project",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "runner",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "types.R"
            ]
        },
        {
            "category": "return",
            "name": "test_cant_set_both_exclude_and_warn",
            "type": [
                "None"
            ]
        }
    ],
    "test_cant_set_both_exclude_and_warn@TestWarnErrorOptionsFromProject": [
        {
            "category": "arg",
            "name": "project",
            "type": [
                "str",
                "typing.Callable[typing.Any, None]",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "clear_project_flags",
            "type": [
                "str",
                "typing.Callable[typing.Any, None]",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "project_root",
            "type": [
                "str",
                "typing.Callable[str, None]"
            ]
        },
        {
            "category": "arg",
            "name": "runner",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "exclude_options",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Union[typing.Text,list[typing.Text]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "project_root",
            "type": [
                "str",
                "typing.Callable[str, None]"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "types.R"
            ]
        },
        {
            "category": "return",
            "name": "test_cant_set_both_exclude_and_warn",
            "type": [
                "None"
            ]
        }
    ],
    "test_cant_set_both_include_and_error@TestWarnErrorOptionsFromCLI": [
        {
            "category": "arg",
            "name": "project",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "runner",
            "type": [
                "tests.e2e.Helper",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "tests.e2e.Helper",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "types.R"
            ]
        },
        {
            "category": "return",
            "name": "test_cant_set_both_include_and_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_cant_set_both_include_and_error@TestWarnErrorOptionsFromProject": [
        {
            "category": "arg",
            "name": "project",
            "type": [
                "str",
                "typing.Callable[typing.Any, None]",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "clear_project_flags",
            "type": [
                "str",
                "typing.Callable[typing.Any, None]",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "project_root",
            "type": [
                "str",
                "typing.Callable[typing.Any, None]",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "runner",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "exclude_options",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "project_root",
            "type": [
                "str",
                "typing.Callable[typing.Any, None]",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "types.R"
            ]
        },
        {
            "category": "return",
            "name": "test_cant_set_both_include_and_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_project_flags@TestEmptyWarnError": [
        {
            "category": "arg",
            "name": "project",
            "type": []
        },
        {
            "category": "local",
            "name": "project_flags",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Union[bool,dict[typing.Text, typing.Union[None,list[typing.Text]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "flags",
            "type": [
                "int",
                "str",
                "dict[int, bool]"
            ]
        },
        {
            "category": "return",
            "name": "test_project_flags",
            "type": [
                "None"
            ]
        }
    ]
}