{
    "__init__@MyConsumer": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "current_assignment",
            "type": [
                "set"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "_call@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "_call",
            "type": []
        }
    ],
    "_commit@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "offsets",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_commit",
            "type": [
                "None"
            ]
        }
    ],
    "_getmany@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "_getmany",
            "type": [
                "None"
            ]
        }
    ],
    "_new_consumer_thread@test_ThreadDelegateConsumer,TestThreadDelegateConsumer": [
        {
            "category": "return",
            "name": "_new_consumer_thread",
            "type": [
                "Mock"
            ]
        }
    ],
    "_new_topicpartition@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "topic",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "partition",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "topic",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "partition",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_new_topicpartition",
            "type": [
                "TP"
            ]
        }
    ],
    "_new_topicpartition@test_ThreadDelegateConsumer,TestThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "_new_topicpartition",
            "type": [
                "TP"
            ]
        }
    ],
    "_seek@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "_seek",
            "type": [
                "None"
            ]
        }
    ],
    "_setup_records@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "bool",
                "dict[int, str]"
            ]
        },
        {
            "category": "arg",
            "name": "active_partitions",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "records",
            "type": [
                "None",
                "bool",
                "dict[int, str]"
            ]
        },
        {
            "category": "arg",
            "name": "flow_active",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "flow_active",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "bool",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "active_partitions",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "records",
            "type": [
                "None",
                "bool",
                "dict[int, str]"
            ]
        },
        {
            "category": "return",
            "name": "_setup_records",
            "type": [
                "None"
            ]
        }
    ],
    "_to_message@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "_to_message",
            "type": [
                "None"
            ]
        }
    ],
    "_to_message@test_ThreadDelegateConsumer,TestThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "_to_message",
            "type": [
                "tuple"
            ]
        }
    ],
    "assignment@MockedConsumerAbstractMethods": [
        {
            "category": "return",
            "name": "assignment",
            "type": []
        }
    ],
    "callback@test_Consumer": [
        {
            "category": "return",
            "name": "callback",
            "type": [
                "Mock"
            ]
        }
    ],
    "close@test_ConsumerThread,MyConsumerThread": [
        {
            "category": "return",
            "name": "close",
            "type": [
                "None"
            ]
        }
    ],
    "commit@test_ConsumerThread,MyConsumerThread": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "commit",
            "type": [
                "None"
            ]
        }
    ],
    "consumer@test_Consumer": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "bool",
                "asyncio.AbstractEventLoop",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "callback",
            "type": [
                "bool",
                "asyncio.AbstractEventLoop",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "on_P_revoked",
            "type": [
                "bool",
                "asyncio.AbstractEventLoop",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "on_P_assigned",
            "type": [
                "bool",
                "asyncio.AbstractEventLoop",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "bool",
                "asyncio.AbstractEventLoop",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "callback",
            "type": [
                "bool",
                "asyncio.AbstractEventLoop",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "on_P_revoked",
            "type": [
                "bool",
                "asyncio.AbstractEventLoop",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "on_P_assigned",
            "type": [
                "bool",
                "asyncio.AbstractEventLoop",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "consumer",
            "type": [
                "MyConsumer"
            ]
        }
    ],
    "consumer@test_ConsumerThread": [
        {
            "category": "return",
            "name": "consumer",
            "type": [
                "Mock"
            ]
        }
    ],
    "consumer@test_Fetcher": [
        {
            "category": "return",
            "name": "consumer",
            "type": [
                "Mock"
            ]
        }
    ],
    "consumer@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "asyncio.AbstractEventLoop",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "message_callback",
            "type": [
                "asyncio.AbstractEventLoop",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "partitions_revoked_callback",
            "type": [
                "asyncio.AbstractEventLoop",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "partitions_assigned_callback",
            "type": [
                "asyncio.AbstractEventLoop",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "asyncio.AbstractEventLoop",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "message_callback",
            "type": [
                "asyncio.AbstractEventLoop",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "partitions_revoked_callback",
            "type": [
                "asyncio.AbstractEventLoop",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "partitions_assigned_callback",
            "type": [
                "asyncio.AbstractEventLoop",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "TestThreadDelegateConsumer"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "consumer",
            "type": [
                "TestThreadDelegateConsumer"
            ]
        }
    ],
    "consumer@test_TransactionManager": [
        {
            "category": "return",
            "name": "consumer",
            "type": [
                "Mock"
            ]
        }
    ],
    "create_topic@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "create_topic",
            "type": [
                "None"
            ]
        }
    ],
    "create_topic@test_ThreadDelegateConsumer,TestThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "create_topic",
            "type": [
                "None"
            ]
        }
    ],
    "earliest_offsets@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "earliest_offsets",
            "type": [
                "None"
            ]
        }
    ],
    "fetcher@test_Fetcher": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "app.GrpyApp",
                "bocadillo.App"
            ]
        },
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "apistar.app.App"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "app.GrpyApp",
                "bocadillo.App"
            ]
        },
        {
            "category": "local",
            "name": "fetcher",
            "type": [
                "Fetcher"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "apistar.app.App"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "app.GrpyApp",
                "apistar.app.App"
            ]
        },
        {
            "category": "return",
            "name": "fetcher",
            "type": [
                "Fetcher"
            ]
        }
    ],
    "getmany@test_ConsumerThread,MyConsumerThread": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "getmany",
            "type": [
                "typing.Generator[tuple[None]]"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "TP",
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "TP",
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "TP",
                "int",
                "str"
            ]
        }
    ],
    "highwater@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "highwater",
            "type": [
                "None"
            ]
        }
    ],
    "highwaters@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "highwaters",
            "type": [
                "None"
            ]
        }
    ],
    "key_partition@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "key_partition",
            "type": [
                "None"
            ]
        }
    ],
    "manager@test_TransactionManager": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.Task",
                "Transport"
            ]
        },
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.Task",
                "Transport"
            ]
        },
        {
            "category": "arg",
            "name": "transport",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.Task",
                "Transport"
            ]
        },
        {
            "category": "local",
            "name": "transport",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.Task",
                "Transport"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.Task",
                "Transport"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.Task",
                "Transport"
            ]
        },
        {
            "category": "return",
            "name": "manager",
            "type": [
                "TransactionManager"
            ]
        }
    ],
    "message@test_Consumer": [
        {
            "category": "return",
            "name": "message",
            "type": [
                "Mock"
            ]
        }
    ],
    "message_callback@test_ThreadDelegateConsumer": [
        {
            "category": "return",
            "name": "message_callback",
            "type": [
                "Mock"
            ]
        }
    ],
    "on_P_assigned@test_Consumer": [
        {
            "category": "return",
            "name": "on_P_assigned",
            "type": [
                "Mock"
            ]
        }
    ],
    "on_P_revoked@test_Consumer": [
        {
            "category": "return",
            "name": "on_P_revoked",
            "type": [
                "Mock"
            ]
        }
    ],
    "on_commit@test_Consumer": [
        {
            "category": "arg",
            "name": "start_new_transaction",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "on_commit",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "on_sleep@test_Consumer": [
        {
            "category": "arg",
            "name": "secs",
            "type": []
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "on_sleep",
            "type": [
                "None"
            ]
        }
    ],
    "on_sleep@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "secs",
            "type": []
        },
        {
            "category": "return",
            "name": "on_sleep",
            "type": [
                "None"
            ]
        }
    ],
    "on_wait@test_Consumer": [
        {
            "category": "arg",
            "name": "timeout",
            "type": []
        },
        {
            "category": "return",
            "name": "on_wait",
            "type": [
                "tuple[None]"
            ]
        }
    ],
    "partitions_assigned_callback@test_ThreadDelegateConsumer": [
        {
            "category": "return",
            "name": "partitions_assigned_callback",
            "type": [
                "Mock"
            ]
        }
    ],
    "partitions_revoked_callback@test_ThreadDelegateConsumer": [
        {
            "category": "return",
            "name": "partitions_revoked_callback",
            "type": [
                "Mock"
            ]
        }
    ],
    "pause_partitions@test_ConsumerThread,MyConsumerThread": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "pause_partitions",
            "type": [
                "None"
            ]
        }
    ],
    "perform_seek@test_ConsumerThread,MyConsumerThread": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "perform_seek",
            "type": [
                "None"
            ]
        }
    ],
    "position@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "position",
            "type": [
                "None"
            ]
        }
    ],
    "producer@test_TransactionManager": [
        {
            "category": "return",
            "name": "producer",
            "type": [
                "Mock"
            ]
        }
    ],
    "resume_flow@test_ConsumerThread,MyConsumerThread": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "resume_flow",
            "type": [
                "None"
            ]
        }
    ],
    "resume_partitions@test_ConsumerThread,MyConsumerThread": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "resume_partitions",
            "type": [
                "None"
            ]
        }
    ],
    "se@test_Consumer": [
        {
            "category": "arg",
            "name": "records",
            "type": []
        },
        {
            "category": "return",
            "name": "se",
            "type": [
                "typing.Generator"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "bool"
            ]
        }
    ],
    "seek@test_ConsumerThread,MyConsumerThread": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "seek",
            "type": [
                "None"
            ]
        }
    ],
    "seek_to_beginning@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "seek_to_beginning",
            "type": [
                "None"
            ]
        }
    ],
    "seek_to_committed@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "seek_to_committed",
            "type": [
                "None"
            ]
        }
    ],
    "seek_wait@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "seek_wait",
            "type": [
                "None"
            ]
        }
    ],
    "send@test_TransactionManager": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "send",
            "type": []
        }
    ],
    "set_ack@test_Consumer": [
        {
            "category": "return",
            "name": "set_ack",
            "type": [
                "None"
            ]
        }
    ],
    "stop_flow@test_ConsumerThread,MyConsumerThread": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "stop_flow",
            "type": [
                "None"
            ]
        }
    ],
    "subscribe@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "subscribe",
            "type": [
                "None"
            ]
        }
    ],
    "test__add_gap@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "producer.Producer",
                "Transport",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "producer.Producer",
                "Transport",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test__add_gap",
            "type": [
                "None"
            ]
        }
    ],
    "test__add_gap__previous_to_committed@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "int",
                "app.App"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "int",
                "app.App"
            ]
        },
        {
            "category": "return",
            "name": "test__add_gap__previous_to_committed",
            "type": [
                "None"
            ]
        }
    ],
    "test__get_active_partitions__when_empty@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "aioapp.app.Application"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "None",
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test__get_active_partitions__when_empty",
            "type": [
                "None"
            ]
        }
    ],
    "test__get_active_partitions__when_set@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.Transport",
                "aioapp.app.Application"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "set[typing.Union[bocadillo.applications.App,str,None,typing.Callable,int,dict[str, typing.Type]]]",
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test__get_active_partitions__when_set",
            "type": [
                "None"
            ]
        }
    ],
    "test__getmany@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "asyncio.exceptions.CancelledError"
            ]
        },
        {
            "category": "return",
            "name": "test__getmany",
            "type": [
                "None"
            ]
        }
    ],
    "test__seek@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.StreamReader",
                "confluent_kafka.Consumer"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.StreamReader",
                "confluent_kafka.Consumer"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test__seek",
            "type": [
                "None"
            ]
        }
    ],
    "test__stop_transactions@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "manager",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test__stop_transactions",
            "type": [
                "None"
            ]
        }
    ],
    "test__wait_for_ack@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "collections.abc.Awaitable",
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "collections.abc.Awaitable",
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test__wait_for_ack",
            "type": [
                "None"
            ]
        }
    ],
    "test__wait_next_records@test_Consumer": [
        {
            "category": "arg",
            "name": "client_only",
            "type": []
        },
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "expected_active",
            "type": [
                "None",
                "set[typing.Union[bocadillo.applications.App,str,None,typing.Callable]]"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]",
                "types.RecordMetadata",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test__wait_next_records",
            "type": [
                "None"
            ]
        }
    ],
    "test__wait_next_records__flow_inactive@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "aioapp.app.Application",
                "list[dict]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "aioapp.app.Application",
                "list[dict]"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "test__wait_next_records__flow_inactive",
            "type": [
                "None"
            ]
        }
    ],
    "test__wait_next_records__no_active_tps@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp",
                "collections.abc.Awaitable"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp",
                "collections.abc.Awaitable"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "list",
                "types.RecordMetadata",
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test__wait_next_records__no_active_tps",
            "type": [
                "None"
            ]
        }
    ],
    "test_ack@test_Consumer": [
        {
            "category": "arg",
            "name": "offset",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.StreamWriter",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "types.FutureMessage",
                "raiden.utils.Address"
            ]
        },
        {
            "category": "local",
            "name": "message_",
            "type": [
                "bool",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "Mock",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.StreamWriter",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "types.FutureMessage",
                "raiden.utils.Address"
            ]
        },
        {
            "category": "local",
            "name": "offset",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_ack",
            "type": [
                "None"
            ]
        }
    ],
    "test_ack__already_acked@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "telethon.tl.custom.Message"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "telethon.tl.custom.Message"
            ]
        },
        {
            "category": "local",
            "name": "message_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "telethon.tl.custom.Message"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "telethon.tl.custom.Message"
            ]
        },
        {
            "category": "return",
            "name": "test_ack__already_acked",
            "type": [
                "None"
            ]
        }
    ],
    "test_ack__disabled@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "app.App"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": [
                "asyncio.AbstractEventLoop",
                "aioapp.app.Application"
            ]
        },
        {
            "category": "local",
            "name": "message_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "Mock",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "app.App"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_ack__disabled",
            "type": [
                "None"
            ]
        }
    ],
    "test_assignment@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "list",
                "dict[str, typing.Callable]",
                "collections.abc.Awaitable[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_assignment",
            "type": [
                "None"
            ]
        }
    ],
    "test_close@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "confluent_kafka.Consumer",
                "asyncio.StreamReader",
                "asyncio.StreamWriter"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "confluent_kafka.Consumer",
                "asyncio.StreamReader",
                "asyncio.StreamWriter"
            ]
        },
        {
            "category": "return",
            "name": "test_close",
            "type": [
                "None"
            ]
        }
    ],
    "test_close@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_close",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "topics",
            "type": [
                "set[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "start_new_transaction",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "list",
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_commit",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp",
                "aioapp.app.Application"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp",
                "aioapp.app.Application"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "asyncio.exceptions.CancelledError",
                "collections.abc.Awaitable[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_commit",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": [
                "aioapp.app.Application"
            ]
        },
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "local",
            "name": "manager_",
            "type": [
                "dict[typing.Text, int]"
            ]
        },
        {
            "category": "local",
            "name": "manager",
            "type": [
                "aioapp.app.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_commit",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit__already_committing@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "test_commit__already_committing",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit__client_only@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "asyncio.AbstractEventLoop",
                "aioapp.app.Application"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_commit__client_only",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit__empty@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": [
                "manager.Manager"
            ]
        },
        {
            "category": "local",
            "name": "manager",
            "type": [
                "manager.Manager"
            ]
        },
        {
            "category": "return",
            "name": "test_commit__empty",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit_handler@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "i",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_commit_handler",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit_offsets@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_commit_offsets",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit_offsets__did_not_commit@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "bool",
                "AsyncMock",
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_commit_offsets__did_not_commit",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit_offsets__in_transaction@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "typing.Callable",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "bool",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "typing.Callable",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "str",
                "typing.Generator[typing.Optional[typing.Any]]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_commit_offsets__in_transaction",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit_offsets__no_committable_offsets@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_commit_offsets__no_committable_offsets",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit_tps@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock",
                "Mock",
                "dict[typing.Union[bocadillo.applications.App,str,None,typing.Callable,int,dict[str, typing.Type]], int]"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "return",
            "name": "test_commit_tps",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit_tps__ProducerSendError@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "Mock",
                "ProducerSendError",
                "AsyncMock",
                "dict[typing.Union[bocadillo.applications.App,str,None,typing.Callable,int,dict[str, typing.Type]], int]"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "ProducerSendError"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_commit_tps__ProducerSendError",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit_tps__no_committable@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "unittesmock.Mock",
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "Mock",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "unittesmock.Mock",
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_commit_tps__no_committable",
            "type": [
                "None"
            ]
        }
    ],
    "test_committed_offset_default@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "producer.Producer",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_committed_offset_default",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_topic@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": []
        },
        {
            "category": "return",
            "name": "test_create_topic",
            "type": [
                "None"
            ]
        }
    ],
    "test_earliest_offsets@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "list",
                "telegram.utils.AsyncResult",
                "list[tuple[typing.Union[int,float]]]"
            ]
        },
        {
            "category": "return",
            "name": "test_earliest_offsets",
            "type": [
                "None"
            ]
        }
    ],
    "test_fetcher@test_Fetcher": [
        {
            "category": "arg",
            "name": "fetcher",
            "type": [
                "app.GrpyApp"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": [
                "app.GrpyApp",
                "bocadillo.App",
                "abilian.app.Application"
            ]
        },
        {
            "category": "local",
            "name": "fetcher",
            "type": [
                "app.GrpyApp"
            ]
        },
        {
            "category": "return",
            "name": "test_fetcher",
            "type": [
                "None"
            ]
        }
    ],
    "test_fetcher__raises_CancelledError@test_Fetcher": [
        {
            "category": "arg",
            "name": "fetcher",
            "type": [
                "app.GrpyApp"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": [
                "bocadillo.App",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "fetcher",
            "type": [
                "app.GrpyApp"
            ]
        },
        {
            "category": "return",
            "name": "test_fetcher__raises_CancelledError",
            "type": [
                "None"
            ]
        }
    ],
    "test_filter_committable_offsets@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "dict[typing.Union[bocadillo.applications.App,str,None,typing.Callable,int,dict[str, typing.Type]], list[int]]",
                "dict[typing.Union[bocadillo.applications.App,str,None,typing.Callable,int,dict[str, typing.Type]], int]"
            ]
        },
        {
            "category": "return",
            "name": "test_filter_committable_offsets",
            "type": [
                "None"
            ]
        }
    ],
    "test_filter_tps_with_pending_acks@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "confluent_kafka.Consumer",
                "str",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "dict[typing.Union[bocadillo.applications.App,str,None,typing.Callable,int,dict[str, typing.Type]], list[int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_filter_tps_with_pending_acks",
            "type": [
                "None"
            ]
        }
    ],
    "test_flush@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.StreamReader"
            ]
        },
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "manager",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.StreamReader"
            ]
        },
        {
            "category": "return",
            "name": "test_flush",
            "type": [
                "None"
            ]
        }
    ],
    "test_force_commit@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "Mock",
                "AsyncMock",
                "dict[typing.Union[bocadillo.applications.App,str,None,typing.Callable], list[int]]",
                "dict[typing.Union[bocadillo.applications.App,str,None,typing.Callable], int]"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_force_commit",
            "type": [
                "None"
            ]
        }
    ],
    "test_getmany@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.BaseTransport",
                "telethon.tl.custom.Message"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.BaseTransport",
                "telethon.tl.custom.Message"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_getmany",
            "type": [
                "None"
            ]
        }
    ],
    "test_getmany__flow_inactive2@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock",
                "Mock",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_getmany__flow_inactive2",
            "type": [
                "None"
            ]
        }
    ],
    "test_getmany__flow_inactive@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_getmany__flow_inactive",
            "type": [
                "None"
            ]
        }
    ],
    "test_getmany__stopped_after_wait@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "confluent_kafka.Consumer"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "test_getmany__stopped_after_wait",
            "type": [
                "None"
            ]
        }
    ],
    "test_handle_attached@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "att_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_handle_attached",
            "type": [
                "None"
            ]
        }
    ],
    "test_highwater@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "types.RecordMetadata",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_highwater",
            "type": [
                "None"
            ]
        }
    ],
    "test_highwaters@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "types.RecordMetadata",
                "asyncio.exceptions.CancelledError"
            ]
        },
        {
            "category": "return",
            "name": "test_highwaters",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_changelog_tp@test_Consumer": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "app.GrpyApp",
                "apistar.app.App"
            ]
        },
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "aioapp.app.Application"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "Mock",
                "set[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "test_is_changelog_tp",
            "type": [
                "None"
            ]
        }
    ],
    "test_key_partition@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "list",
                "types.RecordMetadata",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_key_partition",
            "type": [
                "None"
            ]
        }
    ],
    "test_key_partition@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": [
                "aioapp.app.Application"
            ]
        },
        {
            "category": "local",
            "name": "manager",
            "type": [
                "aioapp.app.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_key_partition",
            "type": [
                "None"
            ]
        }
    ],
    "test_maybe_wait_for_commit_to_finish@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_maybe_wait_for_commit_to_finish",
            "type": [
                "None"
            ]
        }
    ],
    "test_new_offset@test_Consumer": [
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "mode.utils.queues.ThrowableQueue",
                "concurrenfutures.Future",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "acked",
            "type": [
                "collections.abc.Awaitable",
                "int",
                "concurrenfutures.Future"
            ]
        },
        {
            "category": "arg",
            "name": "expected_offset",
            "type": [
                "int",
                "asyncio.Future"
            ]
        },
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "mode.utils.queues.ThrowableQueue",
                "concurrenfutures.Future",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "acked",
            "type": [
                "collections.abc.Awaitable",
                "int",
                "concurrenfutures.Future"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "mode.utils.queues.ThrowableQueue",
                "concurrenfutures.Future",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "mode.utils.queues.ThrowableQueue",
                "concurrenfutures.Future",
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_new_offset",
            "type": [
                "None"
            ]
        }
    ],
    "test_new_offset_with_gaps@test_Consumer": [
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "acked",
            "type": [
                "Exception",
                "concurrenfutures.Future",
                "mode.utils.queues.ThrowableQueue"
            ]
        },
        {
            "category": "arg",
            "name": "gaps",
            "type": [
                "int",
                "asyncio.Future"
            ]
        },
        {
            "category": "arg",
            "name": "expected_offset",
            "type": [
                "int",
                "asyncio.Future"
            ]
        },
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "acked",
            "type": [
                "Exception",
                "concurrenfutures.Future",
                "mode.utils.queues.ThrowableQueue"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "gaps",
            "type": [
                "int",
                "asyncio.Future"
            ]
        },
        {
            "category": "return",
            "name": "test_new_offset_with_gaps",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_init_dependencies__default@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_on_init_dependencies__default",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_init_dependencies__exactly_once@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "aioapp.app.Application",
                "asyncio.AbstractEventLoop",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_on_init_dependencies__exactly_once",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_partitions_assigned@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "unittesmock.Mock",
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "tps",
            "type": [
                "set[TP]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "unittesmock.Mock",
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "return",
            "name": "test_on_partitions_assigned",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_partitions_assigned@test_ConsumerThread": [
        {
            "category": "arg",
            "name": "thread",
            "type": [
                "asyncio.AbstractEventLoop",
                "set[faustypes.TP]"
            ]
        },
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "thread",
            "type": [
                "asyncio.AbstractEventLoop",
                "set[faustypes.TP]"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_on_partitions_assigned",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_partitions_revoked@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "unittesmock.Mock",
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "tps",
            "type": [
                "set[TP]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "unittesmock.Mock",
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "return",
            "name": "test_on_partitions_revoked",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_partitions_revoked@test_ConsumerThread": [
        {
            "category": "arg",
            "name": "thread",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "thread",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_on_partitions_revoked",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_partitions_revoked@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "manager_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "manager",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_on_partitions_revoked",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_partitions_revoked__updates_active@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "aioapp.app.Application",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "set[TP]",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "tps",
            "type": [
                "set[TP]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "aioapp.app.Application",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_on_partitions_revoked__updates_active",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_rebalance@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": []
        },
        {
            "category": "local",
            "name": "TP3_group",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "TP2_group",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "manager_",
            "type": [
                "dict[, int]",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "assigned",
            "type": [
                "set[typing.Union[int,str,dict[str, typing.Type]]]"
            ]
        },
        {
            "category": "local",
            "name": "revoked",
            "type": [
                "set[typing.Union[int,str]]"
            ]
        },
        {
            "category": "local",
            "name": "newly_assigned",
            "type": [
                "set[typing.Union[int,str,dict[str, typing.Type]]]"
            ]
        },
        {
            "category": "return",
            "name": "test_on_rebalance",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_restart@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_on_restart",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_stop@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp",
                "aioapp.app.Application"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "bool",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp",
                "aioapp.app.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_on_stop",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_stop__drainer_done@test_Fetcher": [
        {
            "category": "arg",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "fetcher_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_on_stop__drainer_done",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_stop__drainer_pending@test_Fetcher": [
        {
            "category": "arg",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "fetcher_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_on_stop__drainer_pending",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_stop__drainer_raises_CancelledError@test_Fetcher": [
        {
            "category": "arg",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "fetcher_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_on_stop__drainer_raises_CancelledError",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_stop__drainer_raises_StopIteration@test_Fetcher": [
        {
            "category": "arg",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "fetcher_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_on_stop__drainer_raises_StopIteration",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_stop__drainer_raises_TimeoutError@test_Fetcher": [
        {
            "category": "arg",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "fetcher_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "wait_for_",
            "type": [
                "list[None]"
            ]
        },
        {
            "category": "local",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_on_stop__drainer_raises_TimeoutError",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_stop__no_drainer@test_Fetcher": [
        {
            "category": "arg",
            "name": "fetcher",
            "type": [
                "asyncio.AbstractEventLoop",
                "base.Connection"
            ]
        },
        {
            "category": "local",
            "name": "fetcher_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "fetcher",
            "type": [
                "asyncio.AbstractEventLoop",
                "base.Connection"
            ]
        },
        {
            "category": "return",
            "name": "test_on_stop__no_drainer",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_stop_drainer__drainer_done2@test_Fetcher": [
        {
            "category": "arg",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "fetcher_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "wait_for_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "fetcher",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_on_stop_drainer__drainer_done2",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_task_error@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_on_task_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_pause_partitions@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "set[faustypes.TP]"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "set[typing.Union[bocadillo.applications.App,str,None,typing.Callable,int,dict[str, typing.Type]]]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "set[faustypes.TP]"
            ]
        },
        {
            "category": "return",
            "name": "test_pause_partitions",
            "type": [
                "None"
            ]
        }
    ],
    "test_perform_seek@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.StreamWriter"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "asyncio.StreamWriter"
            ]
        },
        {
            "category": "return",
            "name": "test_perform_seek",
            "type": [
                "None"
            ]
        }
    ],
    "test_position@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "dict[str, typing.Callable]",
                "list[tuple[typing.Any]]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_position",
            "type": [
                "None"
            ]
        }
    ],
    "test_read_offset_default@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "producer.Producer",
                "Transport"
            ]
        },
        {
            "category": "return",
            "name": "test_read_offset_default",
            "type": [
                "None"
            ]
        }
    ],
    "test_resume_flow@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "aioapp.app.Application",
                "asyncio.AbstractEventLoop",
                "bocadillo.App"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "aioapp.app.Application",
                "asyncio.AbstractEventLoop",
                "bocadillo.App"
            ]
        },
        {
            "category": "return",
            "name": "test_resume_flow",
            "type": [
                "None"
            ]
        }
    ],
    "test_resume_partitions@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "confluent_kafka.Consumer",
                "Transport",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "set[typing.Union[int,str,dict[str, typing.Type]]]",
                "set[typing.Union[bocadillo.applications.App,str,None,typing.Callable]]"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "confluent_kafka.Consumer",
                "Transport",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_resume_partitions",
            "type": [
                "None"
            ]
        }
    ],
    "test_seek@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "confluent_kafka.Consumer",
                "asyncio.AbstractEventLoop",
                "base.Connection"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "confluent_kafka.Consumer",
                "asyncio.AbstractEventLoop",
                "base.Connection"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_seek",
            "type": [
                "None"
            ]
        }
    ],
    "test_seek_to_committed@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "ret",
            "type": [
                "str",
                "mode.threads.MethodQueue"
            ]
        },
        {
            "category": "return",
            "name": "test_seek_to_committed",
            "type": [
                "None"
            ]
        }
    ],
    "test_seek_wait@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_seek_wait",
            "type": [
                "None"
            ]
        }
    ],
    "test_send@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": [
                "app.GrpyApp"
            ]
        },
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "raiden.utils.PrivateKey",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "manager_",
            "type": [
                "dict[typing.Text, int]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "manager",
            "type": [
                "app.GrpyApp"
            ]
        },
        {
            "category": "return",
            "name": "test_send",
            "type": [
                "None"
            ]
        }
    ],
    "test_send__topic_not_transactive@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": [
                "app.GrpyApp"
            ]
        },
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "app.GrpyApp",
                "raiden.utils.PrivateKey"
            ]
        },
        {
            "category": "local",
            "name": "manager_",
            "type": [
                "dict[typing.Text, int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "manager",
            "type": [
                "app.GrpyApp"
            ]
        },
        {
            "category": "return",
            "name": "test_send__topic_not_transactive",
            "type": [
                "None"
            ]
        }
    ],
    "test_send_and_wait@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": []
        },
        {
            "category": "local",
            "name": "on_send",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "send",
            "type": [
                "str",
                "bytes",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "manager_",
            "type": [
                "str",
                "bytes",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_send_and_wait",
            "type": [
                "None"
            ]
        }
    ],
    "test_send_soon@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": []
        },
        {
            "category": "return",
            "name": "test_send_soon",
            "type": [
                "None"
            ]
        }
    ],
    "test_should_commit@test_Consumer": [
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "int",
                "asyncio.Future"
            ]
        },
        {
            "category": "arg",
            "name": "offset",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "committed",
            "type": [
                "int",
                "asyncio.Future"
            ]
        },
        {
            "category": "arg",
            "name": "should",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "int",
                "asyncio.Future"
            ]
        },
        {
            "category": "local",
            "name": "committed",
            "type": [
                "int",
                "asyncio.Future"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "int",
                "asyncio.Future"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "int",
                "asyncio.Future"
            ]
        },
        {
            "category": "return",
            "name": "test_should_commit",
            "type": [
                "None"
            ]
        }
    ],
    "test_start_transactions@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": []
        },
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "manager_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "test_start_transactions",
            "type": [
                "None"
            ]
        }
    ],
    "test_stop_flow@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "confluent_kafka.Consumer",
                "asyncio.AbstractEventLoop",
                "Transport"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "confluent_kafka.Consumer",
                "asyncio.AbstractEventLoop",
                "Transport"
            ]
        },
        {
            "category": "return",
            "name": "test_stop_flow",
            "type": [
                "None"
            ]
        }
    ],
    "test_subscribe@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp"
            ]
        },
        {
            "category": "return",
            "name": "test_subscribe",
            "type": [
                "None"
            ]
        }
    ],
    "test_supports_headers@test_TransactionManager": [
        {
            "category": "arg",
            "name": "manager",
            "type": []
        },
        {
            "category": "return",
            "name": "test_supports_headers",
            "type": [
                "None"
            ]
        }
    ],
    "test_threadsafe_partitions_assigned@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_threadsafe_partitions_assigned",
            "type": [
                "None"
            ]
        }
    ],
    "test_threadsafe_partitions_revoked@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp",
                "aioapp.app.Application"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.GrpyApp",
                "aioapp.app.Application"
            ]
        },
        {
            "category": "return",
            "name": "test_threadsafe_partitions_revoked",
            "type": [
                "None"
            ]
        }
    ],
    "test_topic_partitions@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.executor.Application",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "app.executor.Application",
                "app.GrpyApp"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "return",
            "name": "test_topic_partitions",
            "type": [
                "None"
            ]
        }
    ],
    "test_track_message@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "telethon.tl.custom.Message",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "telethon.tl.custom.Message",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "telethon.tl.custom.Message",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "telethon.tl.custom.Message",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_track_message",
            "type": [
                "None"
            ]
        }
    ],
    "test_verify_all_partitions_active@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "Mock",
                "list[typing.Union[bocadillo.applications.App,str,None,typing.Callable,int,dict[str, typing.Type]]]"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "monotonic_",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "app.GrpyApp",
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_verify_all_partitions_active",
            "type": [
                "None"
            ]
        }
    ],
    "test_verify_all_partitions_active__bail_on_sleep@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "Mock",
                "list[typing.Union[bocadillo.applications.App,str,None,typing.Callable,int,dict[str, typing.Type]]]",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "bocadillo.applications.App",
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "TP3",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "monotonic_",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_verify_all_partitions_active__bail_on_sleep",
            "type": [
                "None"
            ]
        }
    ],
    "test_verify_event_path@test_ThreadDelegateConsumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "confluent_kafka.Consumer",
                "asyncio.StreamWriter",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_verify_event_path",
            "type": [
                "None"
            ]
        }
    ],
    "test_wait_empty@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "set[Mock]",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop"
            ]
        },
        {
            "category": "return",
            "name": "test_wait_empty",
            "type": [
                "None"
            ]
        }
    ],
    "test_wait_empty__when_stopped@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "confluent_kafka.Consumer",
                "Transport"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.AbstractEventLoop",
                "confluent_kafka.Consumer",
                "Transport"
            ]
        },
        {
            "category": "return",
            "name": "test_wait_empty__when_stopped",
            "type": [
                "None"
            ]
        }
    ],
    "thread@test_ConsumerThread": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "asyncio.Task",
                "str",
                "Consumer"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "asyncio.Task",
                "str",
                "Consumer"
            ]
        },
        {
            "category": "return",
            "name": "thread",
            "type": [
                "MyConsumerThread"
            ]
        }
    ],
    "to_message@test_Consumer": [
        {
            "category": "arg",
            "name": "tp",
            "type": []
        },
        {
            "category": "arg",
            "name": "record",
            "type": []
        },
        {
            "category": "return",
            "name": "to_message",
            "type": []
        }
    ],
    "topic_partitions@MockedConsumerAbstractMethods": [
        {
            "category": "arg",
            "name": "topic",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "return",
            "name": "topic_partitions",
            "type": [
                "None"
            ]
        }
    ],
    "transport@test_TransactionManager": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "App"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "App"
            ]
        },
        {
            "category": "return",
            "name": "transport",
            "type": [
                "Mock"
            ]
        }
    ]
}