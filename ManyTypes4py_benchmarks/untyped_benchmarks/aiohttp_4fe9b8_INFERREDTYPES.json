{
    "__aenter__@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "__aenter__",
            "type": [
                "AiohttpClientMockResponse"
            ]
        }
    ],
    "__aexit__@AiohttpClientMockResponse": [
        {
            "category": "arg",
            "name": "exc_type",
            "type": [
                "types.TracebackType",
                "BaseException",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "exc_val",
            "type": [
                "types.TracebackType",
                "BaseException",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "exc_tb",
            "type": [
                "types.TracebackType",
                "BaseException",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "__aexit__",
            "type": [
                "None"
            ]
        }
    ],
    "__call__@MockLongPollSideEffect": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "yarl.URL"
            ]
        },
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "yarl.URL"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "typing.Literal",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "kwargs",
            "type": [
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "str",
                "yarl.URL"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "yarl.URL"
            ]
        },
        {
            "category": "return",
            "name": "__call__",
            "type": [
                "AiohttpClientMockResponse"
            ]
        }
    ],
    "__init__@AiohttpClientMockResponse": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "list[typing.Any]",
                "None",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "status",
            "type": []
        },
        {
            "category": "arg",
            "name": "response",
            "type": [
                "None",
                "str",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "json",
            "type": [
                "None",
                "str",
                "typing.Mapping",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "text",
            "type": [
                "None",
                "str",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "cookies",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "exc",
            "type": [
                "None",
                "list",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "headers",
            "type": [
                "None",
                "typing.Mapping",
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "side_effect",
            "type": [
                "None",
                "typing.Callable[T, typing.Any]",
                "typing.Sequence[str]",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "closing",
            "type": [
                "None",
                "typing.Sequence[str]",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "json",
            "type": [
                "None",
                "str",
                "typing.Mapping",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "str",
                "typing.Type",
                "None",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "response",
            "type": [
                "bytes",
                "None",
                "str",
                "dict[str, str]",
                "dict",
                "list",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "charset",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "str",
                "list[typing.Any]",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "_url",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "_response",
            "type": [
                "dict",
                "list",
                "dict[str, typing.Any]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "None",
                "list",
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "side_effect",
            "type": [
                "None",
                "typing.Callable[T, typing.Any]",
                "typing.Sequence[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "closing",
            "type": [
                "None",
                "typing.Sequence[str]",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "headers",
            "type": [
                "None",
                "typing.Mapping",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_headers",
            "type": [
                "CIMultiDict"
            ]
        },
        {
            "category": "local",
            "name": "_cookies",
            "type": [
                "dict",
                "dict[tuple[typing.Union[str,typing.Any]], ]"
            ]
        },
        {
            "category": "local",
            "name": "cookies",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "cookie_",
            "type": [
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@AiohttpClientMocker": [
        {
            "category": "local",
            "name": "_mocks",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_cookies",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "mock_calls",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@MockLongPollSideEffect": [
        {
            "category": "local",
            "name": "response_list",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "stopping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "call_count@AiohttpClientMocker": [
        {
            "category": "return",
            "name": "call_count",
            "type": [
                "int"
            ]
        }
    ],
    "clear_requests@AiohttpClientMocker": [
        {
            "category": "return",
            "name": "clear_requests",
            "type": [
                "None"
            ]
        }
    ],
    "close@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "close",
            "type": [
                "None"
            ]
        }
    ],
    "close_session@global": [
        {
            "category": "arg",
            "name": "event",
            "type": []
        },
        {
            "category": "return",
            "name": "close_session",
            "type": [
                "None"
            ]
        }
    ],
    "content@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "content",
            "type": []
        }
    ],
    "content_type@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "content_type",
            "type": [
                "str",
                "bytes"
            ]
        }
    ],
    "cookies@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "cookies",
            "type": []
        }
    ],
    "create_session@AiohttpClientMocker": [
        {
            "category": "arg",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "asyncio.AbstractEventLoop",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "session",
            "type": [
                "ClientSession"
            ]
        },
        {
            "category": "return",
            "name": "create_session",
            "type": [
                "ClientSession"
            ]
        }
    ],
    "create_session@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": []
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "create_session",
            "type": []
        }
    ],
    "delete@AiohttpClientMocker": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "delete",
            "type": [
                "None"
            ]
        }
    ],
    "get@AiohttpClientMocker": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "get",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "RETYPE",
            "type": [
                "typing.Type",
                "tuple[typing.Union[typing.Any,None,list[typing.Any]]]"
            ]
        }
    ],
    "headers@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "headers",
            "type": []
        }
    ],
    "json@AiohttpClientMockResponse": [
        {
            "category": "arg",
            "name": "encoding",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "content_type",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "loads",
            "type": []
        },
        {
            "category": "local",
            "name": "encoding",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "json",
            "type": [
                "bytes",
                "None",
                "waterbutler.core.streams.BaseStream"
            ]
        }
    ],
    "match_request@AiohttpClientMockResponse": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "None",
                "yarl.URL"
            ]
        },
        {
            "category": "arg",
            "name": "params",
            "type": [
                "None",
                "str",
                "list[tuple[typing.Union[str,typing.Any]]]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "match_request",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "_url",
            "type": [
                "RETYPE"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "None",
                "yarl.URL"
            ]
        }
    ],
    "match_request@AiohttpClientMocker": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "None",
                "str",
                "bool",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "auth",
            "type": [
                "None",
                "bool",
                "typing.Sequence[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "params",
            "type": [
                "None",
                "str",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "headers",
            "type": [
                "None",
                "bool",
                "dict[str, list[typing.Callable]]",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "allow_redirects",
            "type": [
                "None",
                "bool",
                "typing.Sequence[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "timeout",
            "type": [
                "None",
                "bool",
                "typing.Sequence[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "json",
            "type": [
                "None",
                "bool",
                "typing.Mapping",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "cookies",
            "type": [
                "None",
                "bool",
                "typing.Sequence[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "None",
                "str",
                "bool",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "json",
            "type": [
                "None",
                "bool",
                "typing.Mapping",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "dict[str, str]",
                "None",
                "URL",
                "urllib.parse.ParseResult"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "None",
                "str",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "headers",
            "type": [
                "None",
                "bool",
                "dict[str, list[typing.Callable]]",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "match_request",
            "type": []
        }
    ],
    "mock_aiohttp_client@global": [
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "AiohttpClientMocker"
            ]
        },
        {
            "category": "return",
            "name": "mock_aiohttp_client",
            "type": [
                "typing.Generator[AiohttpClientMocker]"
            ]
        }
    ],
    "mock_stream@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bytes",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "stream",
            "type": [
                "StreamReader"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bytes",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "mock_stream",
            "type": [
                "StreamReader"
            ]
        }
    ],
    "options@AiohttpClientMocker": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "options",
            "type": [
                "None"
            ]
        }
    ],
    "patch@AiohttpClientMocker": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "patch",
            "type": [
                "None"
            ]
        }
    ],
    "post@AiohttpClientMocker": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "post",
            "type": [
                "None"
            ]
        }
    ],
    "put@AiohttpClientMocker": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "return",
            "name": "put",
            "type": [
                "None"
            ]
        }
    ],
    "queue_response@MockLongPollSideEffect": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "queue_response",
            "type": [
                "None"
            ]
        }
    ],
    "raise_for_status@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "raise_for_status",
            "type": [
                "None"
            ]
        }
    ],
    "read@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "read",
            "type": []
        }
    ],
    "release@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "release",
            "type": [
                "None"
            ]
        }
    ],
    "request@AiohttpClientMocker": [
        {
            "category": "arg",
            "name": "method",
            "type": [
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "url",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "auth",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]",
                "typing.Any"
            ]
        },
        {
            "category": "arg",
            "name": "status",
            "type": []
        },
        {
            "category": "arg",
            "name": "text",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "None",
                "str",
                "dict[str, typing.Any]",
                "typing.Any"
            ]
        },
        {
            "category": "arg",
            "name": "content",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "json",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "params",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "headers",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "exc",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "cookies",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "side_effect",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "closing",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "url",
            "type": [
                "str",
                "None",
                "bool",
                "URL",
                "yarl._url.URL"
            ]
        },
        {
            "category": "local",
            "name": "RETYPE",
            "type": [
                "typing.Type",
                "tuple[typing.Union[typing.Any,None,list[typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "method",
            "type": [
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "content",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "json",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "text",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "cookies",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "headers",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "side_effect",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "closing",
            "type": [
                "None",
                "str",
                "tuple",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "request",
            "type": [
                "None"
            ]
        }
    ],
    "response@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "response",
            "type": []
        }
    ],
    "stop@MockLongPollSideEffect": [
        {
            "category": "local",
            "name": "stopping",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "stop",
            "type": [
                "None"
            ]
        }
    ],
    "text@AiohttpClientMockResponse": [
        {
            "category": "arg",
            "name": "encoding",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "errors",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "encoding",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "text",
            "type": [
                "str",
                "bytes"
            ]
        }
    ],
    "url@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "url",
            "type": []
        }
    ],
    "wait_for_close@AiohttpClientMockResponse": [
        {
            "category": "return",
            "name": "wait_for_close",
            "type": [
                "None"
            ]
        }
    ]
}