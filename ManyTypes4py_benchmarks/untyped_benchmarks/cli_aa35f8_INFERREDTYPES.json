{
    "_refactor@global": [
        {
            "category": "arg",
            "name": "func",
            "type": [
                "typing.Callable",
                "typing.Any",
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fname",
            "type": [
                "str",
                "pathlib.Path",
                "typing.TextIO"
            ]
        },
        {
            "category": "local",
            "name": "fname",
            "type": [
                "str",
                "pathlib.Path",
                "typing.TextIO"
            ]
        },
        {
            "category": "local",
            "name": "oldcode",
            "type": [
                "str",
                "pathlib.Path",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception",
                "ParserSyntaxError"
            ]
        },
        {
            "category": "return",
            "name": "_refactor",
            "type": [
                "typing.Text",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "newcode",
            "type": [
                "str",
                "bytes",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "str"
            ]
        }
    ],
    "codemod@global": [
        {
            "category": "arg",
            "name": "path",
            "type": [
                "str",
                "pathlib.Path",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "str",
                "pathlib.Path",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "codemod",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "files",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "errors",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "pool",
            "type": [
                "Pool"
            ]
        }
    ],
    "describe_close_matches@global": [
        {
            "category": "arg",
            "name": "module_or_class",
            "type": []
        },
        {
            "category": "arg",
            "name": "objname",
            "type": []
        },
        {
            "category": "local",
            "name": "public_names",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "describe_close_matches",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "pytest",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "MESSAGE",
            "type": [
                "typing.Text",
                "str"
            ]
        }
    ],
    "main@global": [
        {
            "category": "local",
            "name": "MESSAGE",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "main",
            "type": [
                "None"
            ]
        }
    ],
    "obj_name@global": [
        {
            "category": "arg",
            "name": "s",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "obj_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "classname",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "modulename",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "module",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "funcname",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "err",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "func_class",
            "type": [
                "str",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "func_class_is",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "write@global": [
        {
            "category": "arg",
            "name": "func",
            "type": []
        },
        {
            "category": "arg",
            "name": "writer",
            "type": [
                "typing.Callable",
                "typing.Iterable",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "except_",
            "type": [
                "bool",
                "Exception",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "style",
            "type": [
                "bool",
                "Exception",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "annotate",
            "type": [
                "bool",
                "Exception",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "except_",
            "type": [
                "bool",
                "Exception",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "style",
            "type": [
                "bool",
                "Exception",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "annotate",
            "type": [
                "bool",
                "Exception",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "kwargs",
            "type": [
                "dict[typing.Text, typing.Union[bool,Exception,typing.Callable,tuple]]"
            ]
        },
        {
            "category": "local",
            "name": "writer",
            "type": [
                "typing.Callable",
                "typing.Iterable",
                "bool",
                "None",
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "MESSAGE",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "code",
            "type": [
                "types.CodeType",
                "Syntax"
            ]
        },
        {
            "category": "local",
            "name": "theme",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "write",
            "type": [
                "None"
            ]
        }
    ]
}