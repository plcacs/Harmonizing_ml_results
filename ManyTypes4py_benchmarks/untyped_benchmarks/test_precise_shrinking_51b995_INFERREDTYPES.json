{
    "find_random@global": [
        {
            "category": "arg",
            "name": "s",
            "type": [
                "int",
                "None",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "condition",
            "type": [
                "str",
                "int",
                "typing.Iterable"
            ]
        },
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "None",
                "bytes",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "None",
                "bytes",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "random",
            "type": [
                "Random"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "ConjectureData"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "int",
                "None",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "list[float]",
                "list",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "find_random",
            "type": [
                "tuple[typing.Union[list[float],list,float]]"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "T",
            "type": [
                "TypeVar"
            ]
        },
        {
            "category": "local",
            "name": "common_strategies_with_types",
            "type": [
                "list[typing.Union[tuple[typing.Type],tuple[bool],tuple[bytes],tuple[str]]]",
                "list[str]",
                "dict[str, typing.Type]"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "typing.Type",
                "bool",
                "bytes",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "v",
            "type": [
                "typing.Type",
                "bool",
                "bytes",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "common_strategies",
            "type": [
                "list[typing.Union[typing.Type,bool,bytes,str]]"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "alternatives",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "indexed_alternatives",
            "type": [
                "list[tuple]"
            ]
        }
    ],
    "minimal_for_strategy@global": [
        {
            "category": "arg",
            "name": "s",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "return",
            "name": "minimal_for_strategy",
            "type": []
        }
    ],
    "minimal_nodes_for_strategy@global": [
        {
            "category": "arg",
            "name": "s",
            "type": [
                "typing.AbstractSet",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "typing.AbstractSet",
                "typing.Iterable[typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "minimal_nodes_for_strategy",
            "type": [
                "dict",
                "bool",
                "str",
                "list[typing.Any]"
            ]
        }
    ],
    "precisely_shrink@global": [
        {
            "category": "arg",
            "name": "strategy",
            "type": [
                "bool",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "is_interesting",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "initial_condition",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "end_marker",
            "type": []
        },
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "random",
            "type": [
                "Random"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "ConjectureData"
            ]
        },
        {
            "category": "local",
            "name": "strategy",
            "type": [
                "bool",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "initial_value",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "ConjectureRunner"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "precisely_shrink",
            "type": [
                "tuple"
            ]
        }
    ],
    "safe_draw@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict[str, typing.Any]",
                "tuple[typing.Optional[int]]"
            ]
        },
        {
            "category": "arg",
            "name": "strategy",
            "type": []
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[str, typing.Any]",
                "tuple[typing.Optional[int]]"
            ]
        },
        {
            "category": "return",
            "name": "safe_draw",
            "type": []
        }
    ],
    "shrinks@global": [
        {
            "category": "arg",
            "name": "strategy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "nodes",
            "type": [
                "set[int]"
            ]
        },
        {
            "category": "arg",
            "name": "allow_sloppy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "results",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "random",
            "type": [
                "Random"
            ]
        },
        {
            "category": "local",
            "name": "nodes",
            "type": [
                "set[int]"
            ]
        },
        {
            "category": "local",
            "name": "n",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "choices",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "allow_sloppy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "ConjectureRunner"
            ]
        },
        {
            "category": "local",
            "name": "initial",
            "type": [
                "bool",
                "typing.Generator[typing.Optional[int]]"
            ]
        },
        {
            "category": "local",
            "name": "trial",
            "type": [
                "ConjectureData"
            ]
        },
        {
            "category": "local",
            "name": "strategy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "seen",
            "type": [
                "set",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "result_list",
            "type": [
                "list",
                "list[tuple]"
            ]
        },
        {
            "category": "local",
            "name": "t",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "shrinks",
            "type": [
                "list[tuple]"
            ]
        }
    ],
    "test_always_shrinks_to_none@global": [
        {
            "category": "arg",
            "name": "a",
            "type": [
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "block_falsey",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "allow_sloppy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "a",
            "type": [
                "int",
                "float",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "allow_sloppy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_always_shrinks_to_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_precisely_shrink_alternatives@global": [
        {
            "category": "arg",
            "name": "i",
            "type": [
                "int",
                "typing.Iterable[typing.Any]",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "j",
            "type": [
                "int",
                "typing.Iterable[typing.Any]",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "a",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "int",
                "typing.Iterable[typing.Any]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "types",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "int",
                "typing.Iterable[typing.Any]",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_can_precisely_shrink_alternatives",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_precisely_shrink_values@global": [
        {
            "category": "arg",
            "name": "typ",
            "type": [
                "bool",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "arg",
            "name": "strat",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "require_truthy",
            "type": [
                "bool",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "typ",
            "type": [
                "bool",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "require_truthy",
            "type": [
                "bool",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "cond",
            "type": [
                "bool",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "strat",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list",
                "str",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "shrunk",
            "type": [
                "str",
                "typing.Callable[int, str]",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_can_precisely_shrink_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_shrink_to_every_smaller_alternative@global": [
        {
            "category": "arg",
            "name": "i",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "alts",
            "type": [
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "force_small",
            "type": [
                "bool",
                "True"
            ]
        },
        {
            "category": "local",
            "name": "alts",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "types",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "strats",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "force_small",
            "type": [
                "bool",
                "True"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "shrunk_values",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_can_shrink_to_every_smaller_alternative",
            "type": [
                "None"
            ]
        }
    ],
    "test_function@global": [
        {
            "category": "arg",
            "name": "data",
            "type": []
        },
        {
            "category": "return",
            "name": "test_function",
            "type": [
                "None"
            ]
        }
    ],
    "test_precise_shrink_with_blocker@global": [
        {
            "category": "arg",
            "name": "a",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "seed",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "a",
            "type": [
                "int",
                "float",
                "list[int]",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "y",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "z",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "types",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "seed",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_precise_shrink_with_blocker",
            "type": [
                "None"
            ]
        }
    ],
    "test_strategy_list_is_in_sorted_order@global": [
        {
            "category": "return",
            "name": "test_strategy_list_is_in_sorted_order",
            "type": [
                "None"
            ]
        }
    ]
}