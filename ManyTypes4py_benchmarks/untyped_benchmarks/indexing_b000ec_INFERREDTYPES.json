{
    "_NotImplemented@LocIndexer": [
        {
            "category": "arg",
            "name": "description",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "description",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_NotImplemented",
            "type": [
                "SparkPandasNotImplementedError"
            ]
        }
    ],
    "_NotImplemented@iLocIndexer": [
        {
            "category": "arg",
            "name": "description",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "description",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_NotImplemented",
            "type": [
                "SparkPandasNotImplementedError"
            ]
        }
    ],
    "__getitem__@AtIndexer": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "abc.graph.EdgeKeyType",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "abc.graph.EdgeKeyType",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "row_sel",
            "type": [
                "list",
                "abc.graph.EdgeKeyType",
                "slice",
                "tuple[typing.Union[abc.graph.EdgeKeyType,slice,list]]"
            ]
        },
        {
            "category": "local",
            "name": "col_sel",
            "type": [
                "str",
                "list[str]",
                "list[int]",
                "tuple[typing.Union[str,list[str],list[int]]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "cond",
            "type": [
                "int",
                "tuple[str]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "pdf",
            "type": [
                "str",
                "list[str]",
                "list[list[str]]"
            ]
        },
        {
            "category": "return",
            "name": "__getitem__",
            "type": []
        }
    ],
    "__getitem__@LocIndexerLike": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "int",
                "slice",
                "abc.graph.EdgeKeyType"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "int",
                "slice",
                "abc.graph.EdgeKeyType",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "kdf",
            "type": [
                "slice",
                "typing.Iterator",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "temp_col",
            "type": [
                "list[str]",
                "list",
                "databricks.koalas.frame.DataFrame"
            ]
        },
        {
            "category": "return",
            "name": "__getitem__",
            "type": [
                "mypy.types.Type",
                "typing.Callable[str, mypy.types.Instance]"
            ]
        },
        {
            "category": "local",
            "name": "cond",
            "type": [
                "tuple[typing.Union[int,...]]",
                "None",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "int",
                "list[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "remaining_index",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "column_labels",
            "type": [
                "list",
                "list[tuple[typing.Union[str,...]]]",
                "list[str]",
                "list[None]"
            ]
        },
        {
            "category": "local",
            "name": "data_spark_columns",
            "type": [
                "list",
                "list[str]",
                "list[tuple[typing.Union[str,...]]]"
            ]
        },
        {
            "category": "local",
            "name": "data_dtypes",
            "type": [
                "list",
                "list[list[str]]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "returns_series",
            "type": [
                "bool",
                "list",
                "list[dict[typing.Any, typing.Any]]",
                "pandas._FrameOrSeries"
            ]
        },
        {
            "category": "local",
            "name": "series_name",
            "type": [
                "str",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "list",
                "int",
                "typing.Mapping",
                "slice",
                "abc.graph.EdgeKeyType"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "list",
                "typing.Mapping",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "kser",
            "type": [
                "list",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "index_spark_columns",
            "type": [
                "list[str]",
                "tuple[typing.Any]",
                "list[tuple[typing.Union[str,...]]]"
            ]
        },
        {
            "category": "local",
            "name": "index_names",
            "type": [
                "str",
                "list",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "index_dtypes",
            "type": [
                "list",
                "list[list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "label",
            "type": [
                "list[str]",
                "str",
                "list",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "column_labels_level",
            "type": [
                "int",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "none_column",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "column_label_names",
            "type": [
                "str",
                "list[str]",
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "sdf",
            "type": [
                "list",
                "pandas.io.pytables.Selection",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pdf_or_pser",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "length",
            "type": [
                "int"
            ]
        }
    ],
    "__getitem__@iAtIndexer": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "abc.graph.EdgeKeyType",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "abc.graph.EdgeKeyType",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "row_sel",
            "type": [
                "list",
                "list[int]",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "col_sel",
            "type": [
                "int",
                "list[int]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__getitem__",
            "type": []
        }
    ],
    "__init__@IndexerLike": [
        {
            "category": "arg",
            "name": "kdf_or_kser",
            "type": [
                "list[tuple[int]]",
                "T",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "kdf_or_kser",
            "type": [
                "list[tuple[int]]",
                "T",
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_kdf_or_kser",
            "type": [
                "list[tuple[int]]",
                "T",
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__setitem__@LocIndexerLike": [
        {
            "category": "arg",
            "name": "key",
            "type": []
        },
        {
            "category": "arg",
            "name": "value",
            "type": []
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "Series",
                "tuple[typing.Any]",
                "str",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "Series",
                "typing.AbstractSet",
                "list[int]",
                "property",
                "DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "kdf",
            "type": [
                "databricks.koalas.frame.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "temp_natural_order",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "temp_key_col",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "temp_value_col",
            "type": [
                "str",
                "list[str]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__setitem__",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "cond",
            "type": [
                "str",
                "int",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "limit",
            "type": [
                "int",
                "None",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "remaining_index",
            "type": [
                "int",
                "typing.Iterator",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "scol",
            "type": [
                "list[str]",
                "list[list[int]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "internal",
            "type": [
                "str",
                "bool",
                "databricks.koalas.internal.InternalFrame"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "list",
                "int",
                "list[int]",
                "tuple[typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "int",
                "list[str]",
                "list",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "missing_keys",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "tuple[typing.Literal]",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "data_spark_columns",
            "type": [
                "list[str]",
                "list[tuple[typing.Any]]",
                "list[tuple[typing.Union[str,...]]]"
            ]
        },
        {
            "category": "local",
            "name": "new_data_spark_columns",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "new_dtypes",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "new_scol",
            "type": [
                "typing.Callable[typing.Iterable, typing.Iterator]",
                "set[typing.Type]",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "column_labels",
            "type": [
                "list[str]",
                "list",
                "list[tuple[typing.Union[str,...]]]"
            ]
        },
        {
            "category": "local",
            "name": "label",
            "type": [
                "str",
                "list[str]",
                "int"
            ]
        }
    ],
    "__setitem__@iLocIndexer": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "str",
                "list",
                "KT"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "list[str]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "list[str]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str",
                "list",
                "KT"
            ]
        },
        {
            "category": "local",
            "name": "iloc_item",
            "type": [
                "list",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "len_value",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "__setitem__",
            "type": [
                "None"
            ]
        }
    ],
    "_get_from_multiindex_column@LocIndexer": [
        {
            "category": "arg",
            "name": "key",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "dict[str, str]",
                "list[str]",
                "None",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "labels",
            "type": [
                "None",
                "str",
                "dict[str, str]",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "recursed",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "labels",
            "type": [
                "None",
                "str",
                "dict[str, str]",
                "list",
                "list[tuple]",
                "list[str]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "label",
            "type": [
                "list",
                "list[str]",
                "list[typing.Optional[str]]"
            ]
        },
        {
            "category": "local",
            "name": "k",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "missing_keys",
            "type": [
                "dict[str, str]",
                "list[str]",
                "None",
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_get_from_multiindex_column",
            "type": [
                "tuple[typing.Union[list,bool,None]]"
            ]
        },
        {
            "category": "local",
            "name": "recursed",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "data_spark_columns",
            "type": [
                "list[tuple[str]]",
                "dict[str, list[typing.Any]]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "data_dtypes",
            "type": [
                "list",
                "dict",
                "list[None]"
            ]
        },
        {
            "category": "local",
            "name": "series_name",
            "type": [
                "None",
                "list[str]",
                "str",
                "list[typing.Optional[str]]"
            ]
        }
    ],
    "_internal@IndexerLike": [
        {
            "category": "return",
            "name": "_internal",
            "type": []
        }
    ],
    "_internal@iLocIndexer": [
        {
            "category": "return",
            "name": "_internal",
            "type": []
        }
    ],
    "_is_df@IndexerLike": [
        {
            "category": "return",
            "name": "_is_df",
            "type": [
                "bool"
            ]
        }
    ],
    "_is_series@IndexerLike": [
        {
            "category": "return",
            "name": "_is_series",
            "type": [
                "bool"
            ]
        }
    ],
    "_kdf@IndexerLike": [
        {
            "category": "return",
            "name": "_kdf",
            "type": []
        }
    ],
    "_select_cols@LocIndexerLike": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "list[typing.Any]",
                "None",
                "slice",
                "pandas.Series"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "None",
                "list[typing.Any]",
                "pyspark.sql.Column",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "list[typing.Any]",
                "None",
                "slice",
                "pandas.Series",
                "Series",
                "spark_@_Column",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols",
            "type": [
                "tuple[typing.Optional[bool]]",
                "str",
                "int",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "missing_keys",
            "type": [
                "None",
                "list[typing.Any]",
                "pyspark.sql.Column",
                "Series"
            ]
        }
    ],
    "_select_cols_by_iterable@LocIndexer": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "abc.Iterable",
                "list[typing.Union[typing.Any,str]]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "abc.Iterable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "abc.Iterable",
                "list[typing.Union[typing.Any,str]]",
                "str",
                "pd_@_Series"
            ]
        },
        {
            "category": "local",
            "name": "column_labels",
            "type": [
                "list",
                "list[tuple]"
            ]
        },
        {
            "category": "local",
            "name": "data_spark_columns",
            "type": [
                "list",
                "list[str]",
                "list[tuple[typing.Union[str,...]]]"
            ]
        },
        {
            "category": "local",
            "name": "data_dtypes",
            "type": [
                "list",
                "None",
                "dict[str, typing.Any]",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "col",
            "type": [
                "int",
                "typing.Any",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "i",
            "type": [
                "int",
                "typing.Any",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "abc.Iterable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "found",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_iterable",
            "type": []
        }
    ],
    "_select_cols_by_iterable@LocIndexerLike": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "list[typing.Any]",
                "None",
                "abc.Iterable",
                "slice"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "abc.Iterable",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_iterable",
            "type": [
                "None"
            ]
        }
    ],
    "_select_cols_by_iterable@iLocIndexer": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "abc.Iterable"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "abc.Iterable",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "abc.Iterable",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "column_labels",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "data_spark_columns",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "data_dtypes",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_iterable",
            "type": [
                "tuple[typing.Union[list,bool,None]]"
            ]
        }
    ],
    "_select_cols_by_series@LocIndexer": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "Series",
                "pyspark.sql.Column",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "Series",
                "pyspark.sql.Column"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "Series",
                "pyspark.sql.Column",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "column_labels",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "data_spark_columns",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "data_dtypes",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_series",
            "type": [
                "tuple[typing.Union[list,bool,None]]"
            ]
        }
    ],
    "_select_cols_by_series@LocIndexerLike": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "list[typing.Any]",
                "None",
                "Series",
                "pyspark.sql.Column"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "Series",
                "pyspark.sql.Column"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_series",
            "type": [
                "None"
            ]
        }
    ],
    "_select_cols_by_series@iLocIndexer": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "Series",
                "pyspark.sql.Column",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "Series",
                "pyspark.sql.Column"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "Series",
                "pyspark.sql.Column",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_series",
            "type": [
                "None"
            ]
        }
    ],
    "_select_cols_by_slice@LocIndexer": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "slice",
                "pyspark.sql.Column",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "slice",
                "abc.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "slice",
                "pyspark.sql.Column",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "int",
                "list[int]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "stop",
            "type": [
                "int",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_slice",
            "type": [
                "tuple[typing.Optional[bool]]"
            ]
        }
    ],
    "_select_cols_by_slice@LocIndexerLike": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "list[typing.Any]",
                "None",
                "slice",
                "abc.Iterable"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "slice",
                "abc.Iterable"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_slice",
            "type": [
                "None"
            ]
        }
    ],
    "_select_cols_by_slice@iLocIndexer": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "slice",
                "set[starfish.types.Axes]",
                "abc.Iterable"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "slice",
                "abc.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "slice",
                "set[starfish.types.Axes]",
                "abc.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_slice",
            "type": [
                "tuple[typing.Optional[bool]]"
            ]
        }
    ],
    "_select_cols_by_spark_column@LocIndexer": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "pyspark.sql.Column",
                "Series",
                "list[typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "pyspark.sql.Column",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "column_labels",
            "type": [
                "list[tuple]"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "pyspark.sql.Column",
                "Series",
                "list[typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data_spark_columns",
            "type": [
                "list[typing.Union[pyspark.sql.Column,Series,list[typing.Any],None]]"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_spark_column",
            "type": [
                "tuple[typing.Union[list[tuple],list[typing.Union[pyspark.sql.Column,Series,list[typing.Any],None]],None,bool]]"
            ]
        }
    ],
    "_select_cols_by_spark_column@LocIndexerLike": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "list[typing.Any]",
                "None",
                "pyspark.sql.Column",
                "Series"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "pyspark.sql.Column",
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_spark_column",
            "type": [
                "None"
            ]
        }
    ],
    "_select_cols_by_spark_column@iLocIndexer": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "pyspark.sql.Column",
                "Series",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "pyspark.sql.Column",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "pyspark.sql.Column",
                "Series",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_by_spark_column",
            "type": [
                "None"
            ]
        }
    ],
    "_select_cols_else@LocIndexer": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "bool",
                "dict[str, dict[str, typing.Any]]",
                "typing.MutableSequence"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "bool",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "bool",
                "dict[str, dict[str, typing.Any]]",
                "typing.MutableSequence",
                "tuple[typing.Union[bool,dict[str, dict[str, typing.Any]],typing.MutableSequence]]"
            ]
        },
        {
            "category": "local",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "bool",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_else",
            "type": [
                "str"
            ]
        }
    ],
    "_select_cols_else@LocIndexerLike": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "list[typing.Any]",
                "None",
                "abc.Iterable",
                "slice"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "abc.Iterable",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_else",
            "type": [
                "None"
            ]
        }
    ],
    "_select_cols_else@iLocIndexer": [
        {
            "category": "arg",
            "name": "cols_sel",
            "type": [
                "slice",
                "typing.Sequence[numpy.ndarray]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "missing_keys",
            "type": [
                "list[typing.Any]",
                "None",
                "abc.Iterable",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "cols_sel",
            "type": [
                "slice",
                "typing.Sequence[numpy.ndarray]",
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "column_labels",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "data_spark_columns",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "data_dtypes",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_select_cols_else",
            "type": [
                "tuple[typing.Union[list,bool,None]]"
            ]
        }
    ],
    "_select_rows@LocIndexerLike": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "int",
                "slice",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "int",
                "slice",
                "pandas.Series",
                "None",
                "Series",
                "spark_@_Column",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows",
            "type": [
                "tuple[None]",
                "str",
                "None",
                "bool"
            ]
        }
    ],
    "_select_rows_by_iterable@LocIndexer": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "abc.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "abc.Iterable",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_iterable",
            "type": [
                "tuple[None]",
                "tuple[typing.Optional[bool]]"
            ]
        },
        {
            "category": "local",
            "name": "index_column",
            "type": [
                "list[str]",
                "list",
                "str"
            ]
        }
    ],
    "_select_rows_by_iterable@LocIndexerLike": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "abc.Iterable",
                "slice",
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_iterable",
            "type": [
                "None"
            ]
        }
    ],
    "_select_rows_by_iterable@iLocIndexer": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "abc.Iterable",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "abc.Iterable",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "offset",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "new_rows_sel",
            "type": [
                "list",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "cond",
            "type": [
                "list",
                "list[bool]"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_iterable",
            "type": [
                "tuple[None]"
            ]
        }
    ],
    "_select_rows_by_series@LocIndexer": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "Series",
                "list[typing.Any]",
                "None",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_series",
            "type": [
                "tuple[None]"
            ]
        }
    ],
    "_select_rows_by_series@LocIndexerLike": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "Series",
                "abc.Iterable",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_series",
            "type": [
                "None"
            ]
        }
    ],
    "_select_rows_by_series@iLocIndexer": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "Series",
                "int",
                "typing.Iterable[typing.Iterable[str]]"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "Series",
                "int",
                "typing.Iterable[typing.Iterable[str]]"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_series",
            "type": [
                "None"
            ]
        }
    ],
    "_select_rows_by_slice@LocIndexer": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "slice",
                "pandas.Series",
                "numpy.ndarray",
                "numpy.void",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "slice",
                "pandas.Series",
                "numpy.ndarray",
                "numpy.void",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "index_data_type",
            "type": [
                "list",
                "set",
                "tuple[typing.Literal]",
                "dict[typing.Union[str,None], typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "list[typing.Union[typing.Text,typing.Any]]",
                "typing.Text",
                "typing.Any",
                "None",
                "int",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "stop",
            "type": [
                "list[typing.Union[typing.Text,typing.Any]]",
                "typing.Text",
                "typing.Any",
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "start_and_stop",
            "type": [
                "str",
                "list[tuple[typing.Union[str,typing.Any]]]",
                "range"
            ]
        },
        {
            "category": "local",
            "name": "row",
            "type": [
                "typing.Text",
                "tuple[typing.Union[str,typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "cond",
            "type": [
                "list",
                "list[bool]",
                "str",
                "typing.Callable[None, list[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "inc",
            "type": [
                "int",
                "typing.Callable[None,None, typing.Any]",
                "dict[typing.Any, int]"
            ]
        },
        {
            "category": "local",
            "name": "dec",
            "type": [
                "int",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_slice",
            "type": [
                "typing.Callable[int, str]",
                "list",
                "tuple[None]"
            ]
        },
        {
            "category": "local",
            "name": "depth",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "conds",
            "type": [
                "list"
            ]
        }
    ],
    "_select_rows_by_slice@LocIndexerLike": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "slice",
                "abc.Iterable",
                "Series"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_slice",
            "type": [
                "None"
            ]
        }
    ],
    "_select_rows_by_slice@iLocIndexer": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "slice",
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "has_negative",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "slice",
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "stop",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "step",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_slice",
            "type": [
                "tuple[typing.Optional[int]]",
                "tuple[None]"
            ]
        },
        {
            "category": "local",
            "name": "cond",
            "type": [
                "list",
                "list[bool]"
            ]
        }
    ],
    "_select_rows_by_spark_column@LocIndexer": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "pyspark.sql.Column",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "pyspark.sql.Column",
                "pandas.Series"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_spark_column",
            "type": [
                "tuple[typing.Union[pyspark.sql.Column,pandas.Series,None]]"
            ]
        }
    ],
    "_select_rows_by_spark_column@LocIndexerLike": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "Series",
                "abc.Iterable",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_spark_column",
            "type": [
                "None"
            ]
        }
    ],
    "_select_rows_by_spark_column@iLocIndexer": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "Series",
                "int",
                "typing.Iterable[typing.Iterable[str]]"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "Series",
                "int",
                "typing.Iterable[typing.Iterable[str]]"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_by_spark_column",
            "type": [
                "None"
            ]
        }
    ],
    "_select_rows_else@LocIndexer": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "tuple",
                "pandas.Series",
                "abc.Iterable"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "tuple",
                "pandas.Series",
                "abc.Iterable",
                "tuple[typing.Union[tuple,pandas.Series,abc.Iterable]]"
            ]
        },
        {
            "category": "local",
            "name": "rows",
            "type": [
                "list[bool]"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_else",
            "type": [
                "tuple[typing.Optional[int]]"
            ]
        }
    ],
    "_select_rows_else@LocIndexerLike": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "abc.Iterable",
                "Series",
                "slice"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_else",
            "type": [
                "None"
            ]
        }
    ],
    "_select_rows_else@iLocIndexer": [
        {
            "category": "arg",
            "name": "rows_sel",
            "type": [
                "numpy.ndarray",
                "tuple",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "rows_sel",
            "type": [
                "numpy.ndarray",
                "tuple",
                "pandas.Series",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_select_rows_else",
            "type": [
                "tuple[typing.Optional[bool]]"
            ]
        }
    ],
    "_sequence_col@iLocIndexer": [
        {
            "category": "return",
            "name": "_sequence_col",
            "type": []
        }
    ],
    "global@global": [],
    "verify_type@iLocIndexer": [
        {
            "category": "arg",
            "name": "i",
            "type": []
        },
        {
            "category": "return",
            "name": "verify_type",
            "type": [
                "None"
            ]
        }
    ]
}