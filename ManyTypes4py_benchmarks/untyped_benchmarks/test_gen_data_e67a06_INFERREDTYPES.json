{
    "_broadcast_shapes@global": [
        {
            "category": "arg",
            "name": "shapes",
            "type": [
                "list[int]",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "local",
            "name": "shapes",
            "type": [
                "list[int]",
                "typing.Sequence[int]"
            ]
        },
        {
            "category": "return",
            "name": "_broadcast_shapes",
            "type": []
        }
    ],
    "_broadcast_two_shapes@global": [
        {
            "category": "arg",
            "name": "shape_a",
            "type": [
                "hypothesis.extra.numpy.Shape",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "shape_b",
            "type": [
                "hypothesis.extra.numpy.Shape",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "shape_a",
            "type": [
                "hypothesis.extra.numpy.Shape",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "shape_b",
            "type": [
                "hypothesis.extra.numpy.Shape",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_broadcast_two_shapes",
            "type": [
                "tuple"
            ]
        }
    ],
    "_draw_valid_bounds@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "rl_algorithms.utils.config.ConfigDict",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "max_dims",
            "type": [
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "permit_none",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "max_dims",
            "type": [
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "_draw_valid_bounds",
            "type": [
                "tuple[typing.Optional[int]]",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "smallest_side",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "rl_algorithms.utils.config.ConfigDict",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "largest_side",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "permit_none",
            "type": [
                "bool"
            ]
        }
    ],
    "f@global": [
        {
            "category": "arg",
            "name": "shapes",
            "type": []
        },
        {
            "category": "return",
            "name": "f",
            "type": [
                "bool"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "ANY_SHAPE",
            "type": [
                "tuple[tuple[int]]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "ANY_NONZERO_SHAPE",
            "type": [
                "tuple[typing.Any]",
                "tuple[tuple[int]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "foos",
            "type": [
                "list",
                "list[int]",
                "list[typing.Sized]"
            ]
        },
        {
            "category": "local",
            "name": "np_version",
            "type": [
                "tuple[int]"
            ]
        }
    ],
    "index_selects_values_in_order@global": [
        {
            "category": "arg",
            "name": "index",
            "type": []
        },
        {
            "category": "return",
            "name": "index_selects_values_in_order",
            "type": []
        }
    ],
    "test_advanced_integer_index_can_generate_any_pattern@global": [
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "numpy.ndarray",
                "xarray.DataArray"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bool",
                "typing.Iterable[bool]"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "numpy.ndarray",
                "xarray.DataArray"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "int",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bool",
                "typing.Iterable[bool]"
            ]
        },
        {
            "category": "local",
            "name": "target_array",
            "type": [
                "float",
                "dict[str, int]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_advanced_integer_index_can_generate_any_pattern",
            "type": [
                "None"
            ]
        }
    ],
    "test_advanced_integer_index_is_valid_and_satisfies_bounds@global": [
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "int",
                "numpy.ndarray",
                "numpy.random.RandomState"
            ]
        },
        {
            "category": "arg",
            "name": "min_dims",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "min_side",
            "type": [
                "int",
                "tuple",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "int",
                "numpy.ndarray",
                "numpy.random.RandomState"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_side",
            "type": [
                "int",
                "tuple",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "int",
                "numpy.ndarray",
                "numpy.random.RandomState"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "int",
                "numpy.ndarray",
                "numpy.random.RandomState"
            ]
        },
        {
            "category": "return",
            "name": "test_advanced_integer_index_is_valid_and_satisfies_bounds",
            "type": [
                "None"
            ]
        }
    ],
    "test_advanced_integer_index_is_valid_with_default_result_shape@global": [
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "numpy.ndarray",
                "tuple[typing.Union[int,slice]]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "tuple[typing.Union[int,slice]]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "None",
                "tuple[typing.Union[int,slice]]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "None",
                "tuple[typing.Union[int,slice]]"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "numpy.ndarray",
                "tuple[typing.Union[int,slice]]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "tuple[typing.Union[int,slice]]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_advanced_integer_index_is_valid_with_default_result_shape",
            "type": [
                "None"
            ]
        }
    ],
    "test_advanced_integer_index_minimizes_as_documented@global": [
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "min_dims",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "min_side",
            "type": [
                "int",
                "list[float]"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "str",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "str",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "min_side",
            "type": [
                "int",
                "list[float]"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "desired",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "test_advanced_integer_index_minimizes_as_documented",
            "type": [
                "None"
            ]
        }
    ],
    "test_array_dtypes_may_have_field_titles@global": [
        {
            "category": "return",
            "name": "test_array_dtypes_may_have_field_titles",
            "type": [
                "None"
            ]
        }
    ],
    "test_array_element_rewriting@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "numpy.ndarray",
                "typing.Iterable[T]"
            ]
        },
        {
            "category": "arg",
            "name": "start",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_array_element_rewriting",
            "type": [
                "None"
            ]
        }
    ],
    "test_array_owns_memory@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "numpy.ndarray",
                "str",
                "typing.Type",
                "dict",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_array_owns_memory",
            "type": [
                "None"
            ]
        }
    ],
    "test_array_values_are_unique@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list[int]",
                "list",
                "list[T]"
            ]
        },
        {
            "category": "return",
            "name": "test_array_values_are_unique",
            "type": [
                "None"
            ]
        }
    ],
    "test_array_values_are_unique_high_collision@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list",
                "list[float]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_array_values_are_unique_high_collision",
            "type": [
                "None"
            ]
        }
    ],
    "test_assert_fits_in_machine_size@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "int",
                "typing.Callable",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_assert_fits_in_machine_size",
            "type": [
                "None"
            ]
        }
    ],
    "test_axes_are_valid_inputs_to_sum@global": [
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_axes_are_valid_inputs_to_sum",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_indices_can_generate_empty_tuple@global": [
        {
            "category": "return",
            "name": "test_basic_indices_can_generate_empty_tuple",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_indices_can_generate_indices_not_covering_all_dims@global": [
        {
            "category": "return",
            "name": "test_basic_indices_can_generate_indices_not_covering_all_dims",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_indices_can_generate_long_ellipsis@global": [
        {
            "category": "return",
            "name": "test_basic_indices_can_generate_long_ellipsis",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_indices_can_generate_non_tuples@global": [
        {
            "category": "return",
            "name": "test_basic_indices_can_generate_non_tuples",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_indices_generate_valid_indexers@global": [
        {
            "category": "arg",
            "name": "shape",
            "type": []
        },
        {
            "category": "arg",
            "name": "allow_newaxis",
            "type": [
                "bool",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "arg",
            "name": "allow_ellipsis",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bool",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bool",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "allow_newaxis",
            "type": [
                "bool",
                "typing.Sequence[str]"
            ]
        },
        {
            "category": "local",
            "name": "allow_ellipsis",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "indexer",
            "type": [
                "tuple",
                "list[int]",
                "list",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "array",
            "type": [
                "dict[str, int]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "view",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_basic_indices_generate_valid_indexers",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_indices_options@global": [
        {
            "category": "arg",
            "name": "condition",
            "type": [
                "typing.Pattern",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "indexers",
            "type": [
                "list[int]",
                "list",
                "list[tuple[int]]"
            ]
        },
        {
            "category": "local",
            "name": "condition",
            "type": [
                "typing.Pattern",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_basic_indices_options",
            "type": [
                "None"
            ]
        }
    ],
    "test_basic_indices_replaces_whole_axis_slices_with_ellipsis@global": [
        {
            "category": "arg",
            "name": "idx",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_basic_indices_replaces_whole_axis_slices_with_ellipsis",
            "type": [
                "None"
            ]
        }
    ],
    "test_broadcastable_empty_shape@global": [
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "int",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_broadcastable_empty_shape",
            "type": [
                "None"
            ]
        }
    ],
    "test_broadcastable_shape_adjusts_max_dim_with_explicit_bounds@global": [
        {
            "category": "arg",
            "name": "max_dims",
            "type": [
                "numpy.ndarray",
                "numpy.array",
                "dict[int, numpy.ndarray]"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "numpy.array",
                "dict[str, dict[str, int]]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "numpy.array",
                "dict[str, dict[str, int]]"
            ]
        },
        {
            "category": "local",
            "name": "max_dims",
            "type": [
                "numpy.ndarray",
                "numpy.array",
                "dict[int, numpy.ndarray]"
            ]
        },
        {
            "category": "return",
            "name": "test_broadcastable_shape_adjusts_max_dim_with_explicit_bounds",
            "type": [
                "None"
            ]
        }
    ],
    "test_broadcastable_shape_bounds_are_satisfied@global": [
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "max_dims",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "max_side",
            "type": [
                "None",
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_broadcastable_shape_bounds_are_satisfied",
            "type": [
                "None"
            ]
        }
    ],
    "test_broadcastable_shape_can_broadcast@global": [
        {
            "category": "arg",
            "name": "min_dims",
            "type": [
                "numpy.ndarray",
                "numpy.array"
            ]
        },
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "int",
                "tuple[int]",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str",
                "tuple[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str",
                "tuple[int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "numpy.ndarray",
                "numpy.array"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "int",
                "tuple[int]",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_broadcastable_shape_can_broadcast",
            "type": [
                "None"
            ]
        }
    ],
    "test_broadcastable_shape_can_generate_arbitrary_ndims@global": [
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "max_dims",
            "type": [
                "numpy.ndarray",
                "numpy.array",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "max_dims",
            "type": [
                "numpy.ndarray",
                "numpy.array",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "int",
                "float",
                "dict[str, int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "kwargs",
            "type": [
                "dict[typing.Text, typing.Union[int,float,dict[str, int]]]"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_broadcastable_shape_can_generate_arbitrary_ndims",
            "type": [
                "None"
            ]
        }
    ],
    "test_broadcastable_shape_has_good_default_values@global": [
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "numpy.ndarray",
                "xarray.DataArray"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "xarray.DataArray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "xarray.DataArray"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "numpy.ndarray",
                "xarray.DataArray"
            ]
        },
        {
            "category": "return",
            "name": "test_broadcastable_shape_has_good_default_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_broadcastable_shape_shrinking_with_singleton_out_of_bounds@global": [
        {
            "category": "arg",
            "name": "min_dims",
            "type": [
                "tuple[float]",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "min_side",
            "type": [
                "typing.Collection",
                "None",
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "tuple[float]",
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "tuple[float]",
                "numpy.ndarray",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "tuple[float]",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_side",
            "type": [
                "typing.Collection",
                "None",
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "tuple",
                "dict[str, str]",
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_broadcastable_shape_shrinking_with_singleton_out_of_bounds",
            "type": [
                "None"
            ]
        }
    ],
    "test_broadcastable_shape_util@global": [
        {
            "category": "arg",
            "name": "shapes",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "shapes",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_broadcastable_shape_util",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "arrs",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "broadcasted_shape",
            "type": [
                "tuple[int]",
                "list[typing.Union[tuple,typing.Any]]"
            ]
        }
    ],
    "test_can_cast_for_arrays@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "hypothesis.internal.conjecture.data.ConjectureData"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "hypothesis.internal.conjecture.data.ConjectureData"
            ]
        },
        {
            "category": "return",
            "name": "test_can_cast_for_arrays",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_arrays_of_composite_types@global": [
        {
            "category": "local",
            "name": "foos",
            "type": [
                "list",
                "list[int]",
                "list[typing.Sized]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_arrays_of_composite_types",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_arrays_of_tuples@global": [
        {
            "category": "return",
            "name": "test_can_create_arrays_of_tuples",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_zero_dim_arrays_of_lists@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "gluonts.model.common.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict[str, numpy.ndarray]",
                "gluonts.model.common.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict[str, numpy.ndarray]",
                "gluonts.model.common.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "gluonts.model.common.Tensor",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_zero_dim_arrays_of_lists",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_draw_arrays_from_scalars@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_can_draw_arrays_from_scalars",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_generate_array_shapes@global": [
        {
            "category": "arg",
            "name": "shape",
            "type": [
                "tuple[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_can_generate_array_shapes",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_generate_compound_dtypes@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "typing.Type",
                "numpy.dtype"
            ]
        },
        {
            "category": "return",
            "name": "test_can_generate_compound_dtypes",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_generate_data_compound_dtypes@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "numpy.ndarray",
                "list[numpy.array]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_can_generate_data_compound_dtypes",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_generate_scalar_dtypes@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "tuple['cirq.Qid']",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_can_generate_scalar_dtypes",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_handle_zero_dimensions@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "gluonts.model.common.Tensor",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_can_handle_zero_dimensions",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_minimize_float_arrays@global": [
        {
            "category": "return",
            "name": "test_can_minimize_float_arrays",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_minimize_large_arrays@global": [
        {
            "category": "return",
            "name": "test_can_minimize_large_arrays",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_restrict_endianness@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "tuple[typing.Union[dict[str, typing.Any],bool]]",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "byteorder",
            "type": [
                "bytes",
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "tuple[typing.Union[dict[str, typing.Any],bool]]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "byteorder",
            "type": [
                "bytes",
                "numpy.ndarray",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_can_restrict_endianness",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_specify_size_as_an_int@global": [
        {
            "category": "arg",
            "name": "dt",
            "type": []
        },
        {
            "category": "return",
            "name": "test_can_specify_size_as_an_int",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_turn_off_subarrays@global": [
        {
            "category": "arg",
            "name": "dt",
            "type": []
        },
        {
            "category": "return",
            "name": "test_can_turn_off_subarrays",
            "type": [
                "None"
            ]
        }
    ],
    "test_cannot_generate_unique_array_of_too_many_elements@global": [
        {
            "category": "return",
            "name": "test_cannot_generate_unique_array_of_too_many_elements",
            "type": [
                "None"
            ]
        }
    ],
    "test_does_not_flatten_arrays_of_lists@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list",
                "numpy.ndarray",
                "list[list[T]]"
            ]
        },
        {
            "category": "return",
            "name": "test_does_not_flatten_arrays_of_lists",
            "type": [
                "None"
            ]
        }
    ],
    "test_does_not_flatten_arrays_of_tuples@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list",
                "list[list[T]]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_does_not_flatten_arrays_of_tuples",
            "type": [
                "None"
            ]
        }
    ],
    "test_efficiently_generates_all_unique_array@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list",
                "list[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_efficiently_generates_all_unique_array",
            "type": [
                "None"
            ]
        }
    ],
    "test_empty_dimensions_are_arrays@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "numpy.ndarray",
                "typing.Iterable[typing.Any]",
                "nevergrad.common.ArrayLike"
            ]
        },
        {
            "category": "return",
            "name": "test_empty_dimensions_are_arrays",
            "type": [
                "None"
            ]
        }
    ],
    "test_generates_all_values_for_unique_array@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_generates_all_values_for_unique_array",
            "type": [
                "None"
            ]
        }
    ],
    "test_generates_and_minimizes@global": [
        {
            "category": "return",
            "name": "test_generates_and_minimizes",
            "type": [
                "None"
            ]
        }
    ],
    "test_generates_unsigned_ints@global": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "test_generates_unsigned_ints",
            "type": [
                "None"
            ]
        }
    ],
    "test_inferred_floats_can_be_constrained_at_low_width@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "int",
                "list",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_inferred_floats_can_be_constrained_at_low_width",
            "type": [
                "None"
            ]
        }
    ],
    "test_inferred_floats_can_be_constrained_at_low_width_excluding_endpoints@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list",
                "list[int]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_inferred_floats_can_be_constrained_at_low_width_excluding_endpoints",
            "type": [
                "None"
            ]
        }
    ],
    "test_inferred_floats_do_not_overflow@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list",
                "list[int]",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_inferred_floats_do_not_overflow",
            "type": [
                "None"
            ]
        }
    ],
    "test_infers_elements_and_fill@global": [
        {
            "category": "local",
            "name": "elems",
            "type": [
                "list",
                "list[tuple[typing.Any]]",
                "typing.Iterator"
            ]
        },
        {
            "category": "return",
            "name": "test_infers_elements_and_fill",
            "type": [
                "None"
            ]
        }
    ],
    "test_interesting_array_shapes_argument@global": [
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "test_interesting_array_shapes_argument",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_still_unique_with_nan_fill@global": [
        {
            "category": "arg",
            "name": "xs",
            "type": [
                "int",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_is_still_unique_with_nan_fill",
            "type": [
                "None"
            ]
        }
    ],
    "test_length_bounds_are_satisfied@global": [
        {
            "category": "arg",
            "name": "ndim",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "ndim",
            "type": [
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_length_bounds_are_satisfied",
            "type": [
                "None"
            ]
        }
    ],
    "test_mapped_positive_axes_are_unique@global": [
        {
            "category": "arg",
            "name": "ndim",
            "type": [
                "numpy.ndarray",
                "tuple",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "tuple",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "tuple",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "ndim",
            "type": [
                "numpy.ndarray",
                "tuple",
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_mapped_positive_axes_are_unique",
            "type": [
                "None"
            ]
        }
    ],
    "test_may_fill_with_nan_when_unique_is_set@global": [
        {
            "category": "return",
            "name": "test_may_fill_with_nan_when_unique_is_set",
            "type": [
                "None"
            ]
        }
    ],
    "test_may_not_fill_with_non_nan_when_unique_is_set@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "T",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_may_not_fill_with_non_nan_when_unique_is_set",
            "type": [
                "None"
            ]
        }
    ],
    "test_may_not_fill_with_non_nan_when_unique_is_set_and_type_is_not_number@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "T",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_may_not_fill_with_non_nan_when_unique_is_set_and_type_is_not_number",
            "type": [
                "None"
            ]
        }
    ],
    "test_minimise_array_shapes@global": [
        {
            "category": "arg",
            "name": "min_dims",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "dim_range",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "min_side",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "side_range",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "dim_range",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_side",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "side_range",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_minimise_array_shapes",
            "type": [
                "None"
            ]
        }
    ],
    "test_minimise_array_strategy@global": [
        {
            "category": "return",
            "name": "test_minimise_array_strategy",
            "type": [
                "None"
            ]
        }
    ],
    "test_minimise_nested_types@global": [
        {
            "category": "return",
            "name": "test_minimise_nested_types",
            "type": [
                "None"
            ]
        }
    ],
    "test_minimise_scalar_dtypes@global": [
        {
            "category": "return",
            "name": "test_minimise_scalar_dtypes",
            "type": [
                "None"
            ]
        }
    ],
    "test_minimize_mutually_broadcastable_shape@global": [
        {
            "category": "arg",
            "name": "num_shapes",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "min_dims",
            "type": [
                "numpy.ndarray",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "base_shape",
            "type": [
                "numpy.ndarray",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "tuple[int]",
                "str",
                "None",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "tuple[int]",
                "str",
                "None",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "numpy.ndarray",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "base_shape",
            "type": [
                "numpy.ndarray",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "num_shapes",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "n_leading",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "n_aligned",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_minimize_mutually_broadcastable_shape",
            "type": [
                "None"
            ]
        }
    ],
    "test_minimize_negative_tuple_axes@global": [
        {
            "category": "arg",
            "name": "ndim",
            "type": [
                "numpy.ndarray",
                "xarray.DataArray",
                "numpy.array"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "torch.nn.utils.rnn.PackedSequence",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "torch.nn.utils.rnn.PackedSequence",
                "typing.Iterator"
            ]
        },
        {
            "category": "local",
            "name": "ndim",
            "type": [
                "numpy.ndarray",
                "xarray.DataArray",
                "numpy.array"
            ]
        },
        {
            "category": "return",
            "name": "test_minimize_negative_tuple_axes",
            "type": [
                "None"
            ]
        }
    ],
    "test_minimize_tuple_axes@global": [
        {
            "category": "arg",
            "name": "ndim",
            "type": [
                "numpy.ndarray",
                "xarray.DataArray",
                "numpy.array"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "typing.Iterator",
                "torch.nn.utils.rnn.PackedSequence"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "typing.Iterator",
                "torch.nn.utils.rnn.PackedSequence"
            ]
        },
        {
            "category": "local",
            "name": "ndim",
            "type": [
                "numpy.ndarray",
                "xarray.DataArray",
                "numpy.array"
            ]
        },
        {
            "category": "return",
            "name": "test_minimize_tuple_axes",
            "type": [
                "None"
            ]
        }
    ],
    "test_mutually_broadcastable_shape_adjusts_max_dim_with_default_bounds@global": [
        {
            "category": "arg",
            "name": "max_side",
            "type": [
                "int",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "min_dims",
            "type": [
                "int",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "num_shapes",
            "type": [
                "int",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "num_shapes",
            "type": [
                "int",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "max_side",
            "type": [
                "int",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "int",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "test_mutually_broadcastable_shape_adjusts_max_dim_with_default_bounds",
            "type": [
                "None"
            ]
        }
    ],
    "test_mutually_broadcastable_shape_bounds_are_satisfied@global": [
        {
            "category": "arg",
            "name": "num_shapes",
            "type": [
                "numpy.array",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "base_shape",
            "type": [
                "numpy.array",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "max_dims",
            "type": [
                "None",
                "int",
                "float",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "max_side",
            "type": [
                "None",
                "int",
                "float",
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "num_shapes",
            "type": [
                "numpy.array",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "base_shape",
            "type": [
                "numpy.array",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_mutually_broadcastable_shape_bounds_are_satisfied",
            "type": [
                "None"
            ]
        }
    ],
    "test_mutually_broadcastable_shape_can_broadcast@global": [
        {
            "category": "arg",
            "name": "num_shapes",
            "type": [
                "int",
                "numpy.ndarray",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "min_dims",
            "type": [
                "int",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "base_shape",
            "type": [
                "tuple[int]",
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "tuple[int]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "tuple[int]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "int",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "base_shape",
            "type": [
                "tuple[int]",
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "num_shapes",
            "type": [
                "int",
                "numpy.ndarray",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "test_mutually_broadcastable_shape_can_broadcast",
            "type": [
                "None"
            ]
        }
    ],
    "test_mutually_broadcastable_shapes_can_generate_arbitrary_ndims@global": [
        {
            "category": "arg",
            "name": "num_shapes",
            "type": [
                "int",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "base_shape",
            "type": [
                "numpy.ndarray",
                "int",
                "numpy.void"
            ]
        },
        {
            "category": "arg",
            "name": "max_dims",
            "type": [
                "int",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "max_dims",
            "type": [
                "int",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "num_shapes",
            "type": [
                "int",
                "numpy.ndarray",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "int",
                "float",
                "dict[str, int]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "kwargs",
            "type": [
                "dict[typing.Text, typing.Union[int,float,dict[str, int]]]"
            ]
        },
        {
            "category": "local",
            "name": "base_shape",
            "type": [
                "numpy.ndarray",
                "int",
                "numpy.void"
            ]
        },
        {
            "category": "return",
            "name": "test_mutually_broadcastable_shapes_can_generate_arbitrary_ndims",
            "type": [
                "None"
            ]
        }
    ],
    "test_mutually_broadcastable_shapes_can_generate_interesting_singletons@global": [
        {
            "category": "arg",
            "name": "base_shape",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "max_dims",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "base_shape",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "max_dims",
            "type": [
                "int",
                "float",
                "numpy.ndarray"
            ]
        },
        {
            "category": "return",
            "name": "test_mutually_broadcastable_shapes_can_generate_interesting_singletons",
            "type": [
                "None"
            ]
        }
    ],
    "test_mutually_broadcastable_shapes_can_generate_mirrored_singletons@global": [
        {
            "category": "arg",
            "name": "base_shape",
            "type": [
                "int",
                "list[int]",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "base_shape",
            "type": [
                "int",
                "list[int]",
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_mutually_broadcastable_shapes_can_generate_mirrored_singletons",
            "type": [
                "None"
            ]
        }
    ],
    "test_mutually_broadcastable_shapes_only_singleton_is_valid@global": [
        {
            "category": "arg",
            "name": "num_shapes",
            "type": [
                "int",
                "numpy.ndarray",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "min_dims",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "max_side",
            "type": [
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "max_side",
            "type": [
                "int",
                "tuple[int]"
            ]
        },
        {
            "category": "local",
            "name": "num_shapes",
            "type": [
                "int",
                "numpy.ndarray",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "test_mutually_broadcastable_shapes_only_singleton_is_valid",
            "type": [
                "None"
            ]
        }
    ],
    "test_mutually_broadcastable_shapes_shrinking_with_singleton_out_of_bounds@global": [
        {
            "category": "arg",
            "name": "num_shapes",
            "type": [
                "int",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "min_dims",
            "type": [
                "int",
                "numpy.ndarray",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "min_side",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "float",
                "int",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "float",
                "int",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "min_dims",
            "type": [
                "int",
                "numpy.ndarray",
                "typing.Any",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "min_side",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "num_shapes",
            "type": [
                "int",
                "numpy.ndarray",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_mutually_broadcastable_shapes_shrinking_with_singleton_out_of_bounds",
            "type": [
                "None"
            ]
        }
    ],
    "test_mutually_broadcastableshapes_has_good_default_values@global": [
        {
            "category": "arg",
            "name": "num_shapes",
            "type": [
                "int",
                "float",
                "numpy.random.RandomState"
            ]
        },
        {
            "category": "arg",
            "name": "base_shape",
            "type": [
                "numpy.ndarray",
                "numpy.random.RandomState",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "float",
                "numpy.random.RandomState"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "float",
                "numpy.random.RandomState"
            ]
        },
        {
            "category": "local",
            "name": "num_shapes",
            "type": [
                "int",
                "float",
                "numpy.random.RandomState"
            ]
        },
        {
            "category": "local",
            "name": "base_shape",
            "type": [
                "numpy.ndarray",
                "numpy.random.RandomState",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "test_mutually_broadcastableshapes_has_good_default_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_recursion_in_multi_line_reprs_issue_3560@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "hypothesis.internal.conjecture.data.ConjectureData"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "hypothesis.internal.conjecture.data.ConjectureData"
            ]
        },
        {
            "category": "return",
            "name": "test_no_recursion_in_multi_line_reprs_issue_3560",
            "type": [
                "None"
            ]
        }
    ],
    "test_np_dtype_is_idempotent@global": [
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "typing.Type",
                "tuple[int]",
                "numpy.dtype"
            ]
        },
        {
            "category": "return",
            "name": "test_np_dtype_is_idempotent",
            "type": [
                "None"
            ]
        }
    ],
    "test_overflowing_integers_are_deprecated@global": [
        {
            "category": "arg",
            "name": "fill",
            "type": [
                "bool",
                "list",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "int",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "kw",
            "type": [
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "fill",
            "type": [
                "bool",
                "list",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "int",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_overflowing_integers_are_deprecated",
            "type": [
                "None"
            ]
        }
    ],
    "test_unique_array_with_fill_can_use_all_elements@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list[tuple[typing.Union[int,typing.Any]]]",
                "list[int]",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list[tuple[typing.Union[int,typing.Any]]]",
                "list[int]",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "test_unique_array_with_fill_can_use_all_elements",
            "type": [
                "None"
            ]
        }
    ],
    "test_unique_array_without_fill@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_unique_array_without_fill",
            "type": [
                "None"
            ]
        }
    ],
    "test_unrepresentable_elements_are_deprecated@global": [
        {
            "category": "arg",
            "name": "fill",
            "type": [
                "bool",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]"
            ]
        },
        {
            "category": "arg",
            "name": "strat",
            "type": [
                "bool",
                "typing.Mapping",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "fill",
            "type": [
                "bool",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "strat",
            "type": [
                "bool",
                "typing.Mapping",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "kw",
            "type": [
                "dict[typing.Text, typing.Union[bool,typing.Mapping,str]]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "numpy.ndarray",
                "bool",
                "typing.Callable[numpy.ndarray, numpy.ndarray]"
            ]
        },
        {
            "category": "return",
            "name": "test_unrepresentable_elements_are_deprecated",
            "type": [
                "None"
            ]
        }
    ]
}