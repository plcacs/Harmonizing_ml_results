{
    "_condition@global": [
        {
            "category": "arg",
            "name": "x",
            "type": []
        },
        {
            "category": "return",
            "name": "_condition",
            "type": [
                "bool"
            ]
        }
    ],
    "define_test@global": [
        {
            "category": "arg",
            "name": "specifier",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "predicate",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "condition",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "p",
            "type": [
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "suppress_health_check",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "RUNS",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "p",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "required_runs",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "define_test",
            "type": []
        }
    ],
    "distorted@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "int",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "int",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "distorted",
            "type": []
        }
    ],
    "distorted_value@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "int",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "int",
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "distorted_value",
            "type": [
                "bool"
            ]
        }
    ],
    "double@global": [
        {
            "category": "arg",
            "name": "x",
            "type": [
                "int",
                "gluonts.model.common.Tensor",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "x",
            "type": [
                "int",
                "gluonts.model.common.Tensor",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "double",
            "type": [
                "float",
                "int",
                "gluonts.model.common.Tensor"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "RUNS",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "INITIAL_LAMBDA",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_zero",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_large_magnitude_integers",
            "type": [
                "str",
                "bool",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_large_positive_integers",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_large_negative_integers",
            "type": [
                "bool",
                "str",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_unstripped_strings",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_stripped_strings",
            "type": [
                "bool",
                "list",
                "str",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_multi_line_strings",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_ascii_strings",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_long_strings_with_no_ascii",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_short_strings_with_some_non_ascii",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_large_binary_strings",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_positive_infinity",
            "type": [
                "bool",
                "staticmethod",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_negative_infinity",
            "type": [
                "bool",
                "list",
                "list[list[list]]"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_nan",
            "type": [
                "bool",
                "typing.Callable",
                "list[list[list]]"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_floats_near_left",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_floats_near_right",
            "type": [
                "str",
                "bool",
                "dict[str, tuple[typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_floats_in_middle",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_long_lists",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_short_lists",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_can_produce_the_same_int_twice",
            "type": [
                "bool",
                "typing.Type",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "test_sampled_from_large_number_can_mix",
            "type": [
                "str",
                "int",
                "dict[int, tuple[typing.Optional[int]]]"
            ]
        },
        {
            "category": "local",
            "name": "test_sampled_from_often_distorted",
            "type": [
                "str",
                "int",
                "dict[str, float]"
            ]
        },
        {
            "category": "local",
            "name": "test_non_empty_subset_of_two_is_usually_large",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_subset_of_ten_is_sometimes_empty",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_mostly_sensible_floats",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_mostly_largish_floats",
            "type": [
                "str",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "test_ints_can_occasionally_be_really_large",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_mixing_is_sometimes_distorted",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "test_mixes_2_reasonably_often",
            "type": [
                "typing.Callable[None, typing.Any]",
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "test_partial_mixes_3_reasonably_often",
            "type": [
                "str",
                "bool",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "test_mixes_not_too_often",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "test_integers_are_usually_non_zero",
            "type": [
                "bool",
                "str",
                "property"
            ]
        },
        {
            "category": "local",
            "name": "test_integers_are_sometimes_zero",
            "type": [
                "bool",
                "str",
                "list[bool]"
            ]
        },
        {
            "category": "local",
            "name": "test_integers_are_often_small",
            "type": [
                "bool",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "test_integers_are_often_small_but_not_that_small",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "one_of_nested_strategy",
            "type": [
                "bool",
                "None",
                "list[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "i",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "xor_nested_strategy",
            "type": [
                "str",
                "property",
                "typing.Callable[None,None,None,None,None, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "one_of_nested_strategy_with_map",
            "type": [
                "dict[str, float]",
                "tuple[tuple[typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "one_of_nested_strategy_with_flatmap",
            "type": [
                "str",
                "bool",
                "list[list[list]]"
            ]
        },
        {
            "category": "local",
            "name": "xor_nested_strategy_with_flatmap",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "one_of_nested_strategy_with_filter",
            "type": [
                "bool",
                "staticmethod"
            ]
        },
        {
            "category": "local",
            "name": "test_long_duplicates_strings",
            "type": [
                "str"
            ]
        }
    ],
    "long_list@global": [
        {
            "category": "arg",
            "name": "xs",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "xs",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "long_list",
            "type": [
                "bool"
            ]
        }
    ],
    "run_test@global": [
        {
            "category": "local",
            "name": "condition",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "condition_string",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "successes",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "actual_runs",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "RUNS",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "runner",
            "type": [
                "ConjectureRunner"
            ]
        },
        {
            "category": "return",
            "name": "run_test",
            "type": [
                "None"
            ]
        }
    ],
    "strip_lambda@global": [
        {
            "category": "arg",
            "name": "s",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "INITIAL_LAMBDA",
            "type": [
                "typing.Pattern"
            ]
        },
        {
            "category": "local",
            "name": "s",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "strip_lambda",
            "type": [
                "str",
                "None",
                "dict[str, tuple[str]]",
                "typing.Callable"
            ]
        }
    ],
    "test_function@global": [
        {
            "category": "arg",
            "name": "data",
            "type": []
        },
        {
            "category": "return",
            "name": "test_function",
            "type": [
                "None"
            ]
        }
    ]
}