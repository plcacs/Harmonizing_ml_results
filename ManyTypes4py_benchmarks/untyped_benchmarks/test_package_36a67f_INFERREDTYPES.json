{
    "communicate@global": [
        {
            "category": "arg",
            "name": "input",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "stdout",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "communicate",
            "type": [
                "tuple[typing.Optional[bytes]]"
            ]
        }
    ],
    "deps_dir@global": [
        {
            "category": "return",
            "name": "deps_dir",
            "type": [
                "str"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "RESOURCE_DIR",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "TEST_NEW_REQ",
            "type": [
                "typing.Text",
                "str",
                "dict[typing.Union[str,None], str]"
            ]
        },
        {
            "category": "local",
            "name": "TEST_ZIP_REQ",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "lib_dir@global": [
        {
            "category": "arg",
            "name": "deps_dir",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "deps_dir",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "lib_dir",
            "type": [
                "str"
            ]
        }
    ],
    "mock_async_subprocess@global": [
        {
            "category": "local",
            "name": "async_popen",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "communicate",
            "type": [
                "asyncio.locks.Event",
                "list",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "async_popen_",
            "type": [
                "asyncio.locks.Event",
                "list",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "mock_async_subprocess",
            "type": [
                "MagicMock"
            ]
        }
    ],
    "mock_env_copy@global": [
        {
            "category": "local",
            "name": "env_copy_",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "mock_env_copy",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "mock_popen@global": [
        {
            "category": "arg",
            "name": "lib_dir",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "popen_mock_",
            "type": [
                "tuple[bytes]",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "lib_dir",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "mock_popen",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "mock_sys@global": [
        {
            "category": "local",
            "name": "sys_mock_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "mock_sys",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "mock_venv@global": [
        {
            "category": "local",
            "name": "mock_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "mock_venv",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "new_path_mock@global": [
        {
            "category": "arg",
            "name": "path",
            "type": []
        },
        {
            "category": "local",
            "name": "mock",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "new_path_mock",
            "type": [
                "Mock"
            ]
        }
    ],
    "test_async_get_user_site@global": [
        {
            "category": "arg",
            "name": "mock_env_copy",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "deps_dir",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "dict",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "return",
            "name": "test_async_get_user_site",
            "type": [
                "None"
            ]
        }
    ],
    "test_check_package_fragment@global": [
        {
            "category": "arg",
            "name": "caplog",
            "type": []
        },
        {
            "category": "return",
            "name": "test_check_package_fragment",
            "type": [
                "None"
            ]
        }
    ],
    "test_check_package_global@global": [
        {
            "category": "arg",
            "name": "caplog",
            "type": []
        },
        {
            "category": "local",
            "name": "pkg",
            "type": [
                "str",
                "tuple[str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "installed_package",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "installed_version",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_check_package_global",
            "type": [
                "None"
            ]
        }
    ],
    "test_check_package_previous_failed_install@global": [
        {
            "category": "local",
            "name": "pkg",
            "type": [
                "str",
                "tuple[str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "installed_package",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "installed_version",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_check_package_previous_failed_install",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_is_installed@global": [
        {
            "category": "local",
            "name": "pkg",
            "type": [
                "str",
                "tuple[str]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "installed_package",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "installed_version",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_is_installed",
            "type": [
                "None"
            ]
        }
    ],
    "test_install@global": [
        {
            "category": "arg",
            "name": "mock_popen",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_env_copy",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_sys",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_install",
            "type": [
                "None"
            ]
        }
    ],
    "test_install_constraint@global": [
        {
            "category": "arg",
            "name": "mock_popen",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_env_copy",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_sys",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "constraints",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_install_constraint",
            "type": [
                "None"
            ]
        }
    ],
    "test_install_error@global": [
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "unittesmock.Mock",
                "mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_popen",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "unittesmock.Mock",
                "mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_popen_",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_install_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_install_pip_compatibility_no_workaround@global": [
        {
            "category": "arg",
            "name": "mock_sys",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_popen",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_env_copy",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_venv",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "in_venv",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "additional_env_vars",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "dict[str, str]",
                "dict",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "additional_env_vars",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock",
                "dict[str, int]"
            ]
        },
        {
            "category": "local",
            "name": "in_venv",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_venv_",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_sys_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "mock_sys",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "TEST_NEW_REQ",
            "type": [
                "str",
                "dict[typing.Union[str,None], str]"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[typing.Union[typing.Text,dict[typing.Union[str,None], str]]]"
            ]
        },
        {
            "category": "return",
            "name": "test_install_pip_compatibility_no_workaround",
            "type": [
                "None"
            ]
        }
    ],
    "test_install_pip_compatibility_use_workaround@global": [
        {
            "category": "arg",
            "name": "mock_sys",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_popen",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_env_copy",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_venv",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "mock_venv_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mock_sys_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "python",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "site_dir",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "TEST_NEW_REQ",
            "type": [
                "str",
                "dict[typing.Union[str,None], str]"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[typing.Union[typing.Text,dict[typing.Union[str,None], str]]]"
            ]
        },
        {
            "category": "local",
            "name": "site_mock_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_install_pip_compatibility_use_workaround",
            "type": [
                "None"
            ]
        }
    ],
    "test_install_target@global": [
        {
            "category": "arg",
            "name": "mock_sys",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_popen",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_env_copy",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_venv",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "is_venv",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "target",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "abs_target",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "is_venv",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_venv_",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_sys_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "mock_sys",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "TEST_NEW_REQ",
            "type": [
                "str",
                "dict[typing.Union[str,None], str]"
            ]
        },
        {
            "category": "local",
            "name": "args",
            "type": [
                "list[typing.Union[typing.Text,dict[typing.Union[str,None], str]]]"
            ]
        },
        {
            "category": "return",
            "name": "test_install_target",
            "type": [
                "None"
            ]
        }
    ],
    "test_install_upgrade@global": [
        {
            "category": "arg",
            "name": "mock_popen",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_env_copy",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_sys",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_install_upgrade",
            "type": [
                "None"
            ]
        }
    ],
    "test_install_with_timeout@global": [
        {
            "category": "arg",
            "name": "mock_popen",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_env_copy",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "mock_sys",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_install_with_timeout",
            "type": [
                "None"
            ]
        }
    ],
    "test_is_docker_env@global": [
        {
            "category": "arg",
            "name": "dockerenv",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "containerenv",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "kubernetes_service_host",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "is_official_image",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "dict",
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "kubernetes_service_host",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "is_official_image",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_is_docker_env",
            "type": [
                "None"
            ]
        }
    ]
}