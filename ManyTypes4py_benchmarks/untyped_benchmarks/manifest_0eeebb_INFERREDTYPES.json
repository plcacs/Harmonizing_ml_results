{
    "__init__@ManifestLoader": [
        {
            "category": "arg",
            "name": "root_project",
            "type": [
                "dbconfig.Project",
                "dict",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "all_projects",
            "type": [
                "str",
                "dbconfig.Project",
                "tuple"
            ]
        },
        {
            "category": "arg",
            "name": "macro_hook",
            "type": [
                "None",
                "str",
                "list[str]",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "file_diff",
            "type": [
                "None",
                "tuple[int]",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "root_project",
            "type": [
                "dbconfig.Project",
                "dict",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "all_projects",
            "type": [
                "str",
                "dbconfig.Project",
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "file_diff",
            "type": [
                "None",
                "tuple[int]",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "Manifest"
            ]
        },
        {
            "category": "local",
            "name": "new_manifest",
            "type": [
                "Manifest"
            ]
        },
        {
            "category": "local",
            "name": "macro_resolver",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "macro_hook",
            "type": [
                "None",
                "str",
                "list[str]",
                "typing.Callable",
                "frozenset"
            ]
        },
        {
            "category": "local",
            "name": "_perf_info",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "partially_parsing",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "partial_parser",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "skip_parsing",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "saved_manifest",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__post_serialize__@ManifestLoaderInfo": [
        {
            "category": "arg",
            "name": "dct",
            "type": [
                "mypy.nodes.Context",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "context",
            "type": [
                "None",
                "mypy.nodes.Context",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "dct",
            "type": [
                "mypy.nodes.Context",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__post_serialize__",
            "type": [
                "mypy.nodes.Context",
                "dict"
            ]
        }
    ],
    "_build_model_names_to_versions@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "nativecards.lib.dicts.models.DictionaryEntry",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "model_names_to_versions",
            "type": [
                "dict",
                "dict[, dict]",
                "dict[, dict[, list]]"
            ]
        },
        {
            "category": "return",
            "name": "_build_model_names_to_versions",
            "type": [
                "dict[, dict[, list]]"
            ]
        }
    ],
    "_check_manifest@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbconfig.RuntimeConfig",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbconfig.RuntimeConfig",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbconfig.RuntimeConfig",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbconfig.RuntimeConfig",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_check_manifest",
            "type": [
                "None"
            ]
        }
    ],
    "_check_resource_uniqueness@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "alias_resources",
            "type": [
                "dict",
                "dict[str, ]"
            ]
        },
        {
            "category": "local",
            "name": "name_resources",
            "type": [
                "dict",
                "dict[, dict[typing.Text, dict]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "full_node_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "existing_alias",
            "type": [
                "str",
                "list[str]",
                "dict[str, str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ver_unver_dict",
            "type": [
                "list[dict[typing.Text, dict]]"
            ]
        },
        {
            "category": "local",
            "name": "versioned_names",
            "type": [
                "set[list[typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "unversioned_names",
            "type": [
                "set[list[typing.Text]]"
            ]
        },
        {
            "category": "local",
            "name": "intersection_versioned",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "versioned_node",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "unversioned_node",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_check_resource_uniqueness",
            "type": [
                "None"
            ]
        }
    ],
    "_get_doc_blocks@global": [
        {
            "category": "arg",
            "name": "description",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "node_package",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "description",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "ast",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "doc_blocks",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "_get_doc_blocks",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "doc_args",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "package",
            "type": [
                "None",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "node_package",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dict[str, typing.Any]",
                "list[str]"
            ]
        }
    ],
    "_process_docs_for_exposure@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "str",
                "None",
                "dict[str, dict[str, str]]"
            ]
        },
        {
            "category": "arg",
            "name": "exposure",
            "type": [
                "str",
                "None",
                "dict[str, dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "exposure",
            "type": [
                "str",
                "None",
                "dict[str, dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "str",
                "None",
                "dict[str, dict[str, str]]"
            ]
        },
        {
            "category": "return",
            "name": "_process_docs_for_exposure",
            "type": [
                "None"
            ]
        }
    ],
    "_process_docs_for_macro@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "dbcontracts.graph.parsed.ParsedMacro",
                "core_lib.core.parser.ParsingContext"
            ]
        },
        {
            "category": "arg",
            "name": "macro",
            "type": [
                "dbcontracts.graph.parsed.ParsedMacro",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "macro",
            "type": [
                "dbcontracts.graph.parsed.ParsedMacro",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "dbcontracts.graph.parsed.ParsedMacro",
                "core_lib.core.parser.ParsingContext"
            ]
        },
        {
            "category": "return",
            "name": "_process_docs_for_macro",
            "type": [
                "None"
            ]
        }
    ],
    "_process_docs_for_metrics@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "dbcontracts.graph.parsed.ParsedMacro",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "metric",
            "type": [
                "dict[str, typing.Any]",
                "dbcontracts.graph.parsed.ParsedMacro",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "metric",
            "type": [
                "dict[str, typing.Any]",
                "dbcontracts.graph.parsed.ParsedMacro",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "dbcontracts.graph.parsed.ParsedMacro",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_process_docs_for_metrics",
            "type": [
                "None"
            ]
        }
    ],
    "_process_docs_for_node@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "story.models.Choice",
                "story.models.Author"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": [
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "yaml.nodes.Node",
                "nativecards.lib.dicts.models.DictionaryEntry"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "story.models.Choice",
                "nativecards.lib.dicts.models.DictionaryEntry"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "yaml.nodes.Node",
                "nativecards.lib.dicts.models.DictionaryEntry"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "story.models.Choice",
                "nativecards.lib.dicts.models.DictionaryEntry"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "story.models.Choice",
                "story.models.Author"
            ]
        },
        {
            "category": "return",
            "name": "_process_docs_for_node",
            "type": [
                "None"
            ]
        }
    ],
    "_process_docs_for_saved_query@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, dict[str, str]]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "saved_query",
            "type": [
                "dict[str, dict[str, str]]",
                "core_lib.core.parser.ParsingContext"
            ]
        },
        {
            "category": "local",
            "name": "saved_query",
            "type": [
                "dict[str, dict[str, str]]",
                "core_lib.core.parser.ParsingContext"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, dict[str, str]]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_process_docs_for_saved_query",
            "type": [
                "None"
            ]
        }
    ],
    "_process_docs_for_semantic_model@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "typing.Mapping",
                "dbcontracts.graph.compiled.NonSourceCompiledNode"
            ]
        },
        {
            "category": "arg",
            "name": "semantic_model",
            "type": [
                "dict[str, typing.Any]",
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "semantic_model",
            "type": [
                "dict[str, typing.Any]",
                "dbcontracts.graph.compiled.NonSourceCompiledNode",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dict[str, typing.Any]",
                "typing.Mapping",
                "dbcontracts.graph.compiled.NonSourceCompiledNode"
            ]
        },
        {
            "category": "return",
            "name": "_process_docs_for_semantic_model",
            "type": [
                "None"
            ]
        }
    ],
    "_process_docs_for_source@global": [
        {
            "category": "arg",
            "name": "context",
            "type": [
                "dbupgrade.files.FileInfo",
                "core_lib.core.parser.ParsingContext",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "source",
            "type": [
                "dict[str, typing.Any]",
                "core_lib.core.parser.ParsingContext",
                "cmk.base.events.EventContext"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]",
                "core_lib.core.parser.ParsingContext",
                "dbupgrade.files.FileInfo"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "dict[str, typing.Any]",
                "core_lib.core.parser.ParsingContext",
                "cmk.base.events.EventContext"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict[str, typing.Any]",
                "core_lib.core.parser.ParsingContext",
                "dbupgrade.files.FileInfo"
            ]
        },
        {
            "category": "local",
            "name": "context",
            "type": [
                "dbupgrade.files.FileInfo",
                "core_lib.core.parser.ParsingContext",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_process_docs_for_source",
            "type": [
                "None"
            ]
        }
    ],
    "_process_metric_depends_on@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "int",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "int",
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "metric",
            "type": [
                "bool",
                "str",
                "domain.common.types.QueryDomain"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "int",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "int",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "metric",
            "type": [
                "bool",
                "str",
                "domain.common.types.QueryDomain"
            ]
        },
        {
            "category": "local",
            "name": "target_semantic_model",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "target_semantic_model_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_process_metric_depends_on",
            "type": [
                "None"
            ]
        }
    ],
    "_process_metric_node@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dict",
                "task_processing.plugins.mesos.task_config.MesosTaskConfig",
                "tartare.core.models.Job"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "dict",
                "task_processing.plugins.mesos.task_config.MesosTaskConfig",
                "tartare.core.models.Job"
            ]
        },
        {
            "category": "arg",
            "name": "metric",
            "type": [
                "str",
                "bool",
                "dict[int, dict[int, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "metric_",
            "type": [
                "MetricType_@_CONVERSION",
                "MetricType_@_RATIO"
            ]
        },
        {
            "category": "return",
            "name": "_process_metric_node",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "metric",
            "type": [
                "str",
                "bool",
                "dict[int, dict[int, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict",
                "task_processing.plugins.mesos.task_config.MesosTaskConfig",
                "tartare.core.models.Job"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "dict",
                "task_processing.plugins.mesos.task_config.MesosTaskConfig",
                "tartare.core.models.Job"
            ]
        },
        {
            "category": "local",
            "name": "input_metrics",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "target_metric",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "list",
                "list[dict[str, typing.Any]]",
                "Disabled"
            ]
        }
    ],
    "_process_metrics_for_node@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.compiled.ManifestNode",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "dbcontracts.graph.compiled.ManifestNode",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str",
                "dict",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "dict",
                "None",
                "SeedNode",
                "SavedQuery"
            ]
        },
        {
            "category": "return",
            "name": "_process_metrics_for_node",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "node_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "metric",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "metrics",
            "type": [
                "list[list]"
            ]
        },
        {
            "category": "local",
            "name": "target_metric",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "target_metric_package",
            "type": [
                "None",
                "list[str]",
                "str",
                "dict[str, dict[str, typing.Any]]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "target_metric_name",
            "type": [
                "str",
                "None",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "dbcontracts.graph.compiled.ManifestNode",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "dbcontracts.graph.compiled.ManifestNode",
                "bool"
            ]
        }
    ],
    "_process_refs@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str",
                "waterbutler.providers.onedrive.path.OneDrivePath",
                "wgraph.parsing.types.Ref"
            ]
        },
        {
            "category": "arg",
            "name": "dependencies",
            "type": [
                "str",
                "list[str]",
                "wgraph.parsing.types.Ref"
            ]
        },
        {
            "category": "local",
            "name": "dependencies",
            "type": [
                "str",
                "list[str]",
                "wgraph.parsing.types.Ref",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "waterbutler.providers.onedrive.path.OneDrivePath",
                "wgraph.parsing.types.Ref",
                "SeedNode"
            ]
        },
        {
            "category": "return",
            "name": "_process_refs",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "node_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "target_model",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest",
                "None"
            ]
        }
    ],
    "_process_sources_for_exposure@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "exposure",
            "type": [
                "str",
                "typing.BinaryIO"
            ]
        },
        {
            "category": "local",
            "name": "target_source",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "exposure",
            "type": [
                "str",
                "typing.BinaryIO"
            ]
        },
        {
            "category": "local",
            "name": "exposure_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_process_sources_for_exposure",
            "type": [
                "None"
            ]
        }
    ],
    "_process_sources_for_metric@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "metric",
            "type": [
                "str",
                "dict[str, bool]"
            ]
        },
        {
            "category": "local",
            "name": "target_source",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "metric",
            "type": [
                "str",
                "dict[str, bool]"
            ]
        },
        {
            "category": "local",
            "name": "metric_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_process_sources_for_metric",
            "type": [
                "None"
            ]
        }
    ],
    "_process_sources_for_node@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "None",
                "projects.project_models.Project"
            ]
        },
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "None",
                "projects.project_models.Project"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str",
                "dbcontracts.files.SourceFile"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "dbcontracts.files.SourceFile",
                "SeedNode"
            ]
        },
        {
            "category": "return",
            "name": "_process_sources_for_node",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "target_source",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "node_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "None",
                "projects.project_models.Project"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "None",
                "projects.project_models.Project"
            ]
        }
    ],
    "_warn_for_unused_resource_config_paths@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "pyramid.config.Configurator",
                "list[esm.models.Manifest]"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dbconfig.RuntimeConfig",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "pyramid.config.Configurator",
                "list[esm.models.Manifest]"
            ]
        },
        {
            "category": "local",
            "name": "resource_fqns",
            "type": [
                "str",
                "tuple[str]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "disabled_fqns",
            "type": [
                "set[tuple]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dbconfig.RuntimeConfig",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_warn_for_unused_resource_config_paths",
            "type": [
                "None"
            ]
        }
    ],
    "build_macro_resolver@ManifestLoader": [
        {
            "category": "local",
            "name": "macro_resolver",
            "type": [
                "MacroResolver"
            ]
        },
        {
            "category": "return",
            "name": "build_macro_resolver",
            "type": [
                "None"
            ]
        }
    ],
    "build_manifest_state_check@ManifestLoader": [
        {
            "category": "local",
            "name": "secret_vars",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "key_list",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "env_var_str",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "connection_keys",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "project_hashes",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fp",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "state_check",
            "type": [
                "ManifestStateCheck"
            ]
        },
        {
            "category": "return",
            "name": "build_manifest_state_check",
            "type": [
                "ManifestStateCheck"
            ]
        }
    ],
    "build_model_to_generic_tests_map@ManifestLoader": [
        {
            "category": "local",
            "name": "model_to_generic_tests_map",
            "type": [
                "dict",
                "dict[, list]"
            ]
        },
        {
            "category": "return",
            "name": "build_model_to_generic_tests_map",
            "type": [
                "dict[, list]"
            ]
        }
    ],
    "build_perf_info@ManifestLoader": [
        {
            "category": "local",
            "name": "flags",
            "type": [
                "int",
                "dict[int, bool]"
            ]
        },
        {
            "category": "local",
            "name": "mli",
            "type": [
                "ManifestLoaderInfo"
            ]
        },
        {
            "category": "local",
            "name": "project_info",
            "type": [
                "ProjectLoaderInfo"
            ]
        },
        {
            "category": "return",
            "name": "build_perf_info",
            "type": [
                "ManifestLoaderInfo"
            ]
        }
    ],
    "check_for_microbatch_deprecations@ManifestLoader": [
        {
            "category": "local",
            "name": "has_microbatch_model",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "check_for_microbatch_deprecations",
            "type": [
                "None"
            ]
        }
    ],
    "check_for_model_deprecations@ManifestLoader": [
        {
            "category": "local",
            "name": "child_node",
            "type": [
                "yaml.nodes.MappingNode",
                "list[str]",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "check_for_model_deprecations",
            "type": [
                "None"
            ]
        }
    ],
    "check_for_spaces_in_resource_names@ManifestLoader": [
        {
            "category": "local",
            "name": "improper_resource_names",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "flags",
            "type": [
                "int",
                "dict[int, typing.Any]",
                "dict[int, bool]"
            ]
        },
        {
            "category": "return",
            "name": "check_for_spaces_in_resource_names",
            "type": [
                "None"
            ]
        }
    ],
    "check_forcing_batch_concurrency@ManifestLoader": [
        {
            "category": "local",
            "name": "models_forcing_concurrent_batches",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "check_forcing_batch_concurrency",
            "type": [
                "None"
            ]
        }
    ],
    "check_microbatch_model_has_a_filtered_input@ManifestLoader": [
        {
            "category": "local",
            "name": "has_input_with_event_time_config",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "input_node",
            "type": [
                "str",
                "dict[str, list[int]]",
                "set"
            ]
        },
        {
            "category": "return",
            "name": "check_microbatch_model_has_a_filtered_input",
            "type": [
                "None"
            ]
        }
    ],
    "check_valid_access_property@ManifestLoader": [
        {
            "category": "return",
            "name": "check_valid_access_property",
            "type": [
                "None"
            ]
        }
    ],
    "check_valid_group_config@ManifestLoader": [
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "waterbutler.providers.googlecloud.metadata.GoogleCloudFileMetadata",
                "nufb.wrappers.Manifest",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "group_names",
            "type": [
                "set"
            ]
        },
        {
            "category": "return",
            "name": "check_valid_group_config",
            "type": [
                "None"
            ]
        }
    ],
    "check_valid_group_config_node@ManifestLoader": [
        {
            "category": "arg",
            "name": "groupable_node",
            "type": [
                "str",
                "list[str]",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "valid_group_names",
            "type": [
                "set[str]",
                "str",
                "tuple[str]"
            ]
        },
        {
            "category": "local",
            "name": "groupable_node",
            "type": [
                "str",
                "list[str]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "valid_group_names",
            "type": [
                "set[str]",
                "str",
                "tuple[str]"
            ]
        },
        {
            "category": "return",
            "name": "check_valid_group_config_node",
            "type": [
                "None"
            ]
        }
    ],
    "check_valid_microbatch_config@ManifestLoader": [
        {
            "category": "local",
            "name": "node_",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "event_time",
            "type": [
                "None",
                "datetime.datetime",
                "datetime.datetime.timedelta"
            ]
        },
        {
            "category": "local",
            "name": "begin",
            "type": [
                "None",
                "datetime.datetime",
                "datetime.date",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "valid_batch_sizes",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "check_valid_microbatch_config",
            "type": [
                "None"
            ]
        }
    ],
    "check_valid_snapshot_config@ManifestLoader": [
        {
            "category": "return",
            "name": "check_valid_snapshot_config",
            "type": [
                "None"
            ]
        }
    ],
    "cleanup_disabled@ManifestLoader": [
        {
            "category": "local",
            "name": "disabled_nodes",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "cleanup_disabled",
            "type": [
                "None"
            ]
        }
    ],
    "create_macro_manifest@ManifestLoader": [
        {
            "category": "local",
            "name": "macro_parser",
            "type": [
                "MacroParser"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "FileBlock"
            ]
        },
        {
            "category": "local",
            "name": "macro_manifest",
            "type": [
                "MacroManifest"
            ]
        },
        {
            "category": "return",
            "name": "create_macro_manifest",
            "type": [
                "MacroManifest"
            ]
        }
    ],
    "extended_mashumaro_encoder@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "bytes",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "bytes",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "extended_mashumaro_encoder",
            "type": []
        }
    ],
    "extended_mashumuro_decoder@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "extended_mashumuro_decoder",
            "type": []
        }
    ],
    "extended_msgpack_decoder@global": [
        {
            "category": "arg",
            "name": "code",
            "type": [
                "int",
                "tuple[typing.Union[int,bytearray]]",
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "code",
            "type": [
                "int",
                "tuple[typing.Union[int,bytearray]]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "d",
            "type": [
                "datetime.datetime",
                "datetime.date.time.date"
            ]
        },
        {
            "category": "return",
            "name": "extended_msgpack_decoder",
            "type": [
                "datetime.datetime",
                "datetime.date.time.date",
                "datetime.datetime.date.time"
            ]
        },
        {
            "category": "local",
            "name": "dt",
            "type": [
                "datetime.datetime",
                "datetime.datetime.date.time"
            ]
        }
    ],
    "extended_msgpack_encoder@global": [
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "datetime.datetime",
                "datetime.date",
                "datetime.time"
            ]
        },
        {
            "category": "local",
            "name": "obj",
            "type": [
                "datetime.datetime",
                "datetime.date",
                "datetime.time"
            ]
        },
        {
            "category": "local",
            "name": "date_bytes",
            "type": [
                "int",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "extended_msgpack_encoder",
            "type": [
                "int",
                "bytes",
                "typing.Type",
                "datetime.datetime",
                "datetime.date",
                "datetime.time"
            ]
        },
        {
            "category": "local",
            "name": "datetime_bytes",
            "type": [
                "typing.Type",
                "bytes",
                "int"
            ]
        }
    ],
    "get_full_manifest@ManifestLoader": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "bool",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "file_diff",
            "type": [
                "None",
                "list[str]",
                "bool",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "reset",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "write_perf_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "bool",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "adapter",
            "type": [
                "str",
                "lightbus.plugins.state.StatePlugin"
            ]
        },
        {
            "category": "local",
            "name": "reset",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "flags",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "file_diff",
            "type": [
                "None",
                "list[str]",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "file_diff_path",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "file_diff_dct",
            "type": [
                "int",
                "dict[str, set]",
                "dict[int, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "projects",
            "type": [
                "str",
                "Project"
            ]
        },
        {
            "category": "local",
            "name": "write_perf_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "get_full_manifest",
            "type": []
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "PERF_INFO_FILE_NAME",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "DocsContextCallback",
            "type": [
                "typing.Type",
                "typing.Callable[None, typing.Iterator]"
            ]
        }
    ],
    "inject_external_nodes@ManifestLoader": [
        {
            "category": "local",
            "name": "manifest_nodes_modified",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "inject_external_nodes",
            "type": [
                "bool"
            ]
        }
    ],
    "invalid_target_fail_unless_test@global": [
        {
            "category": "arg",
            "name": "node",
            "type": [
                "str",
                "list[str]",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "target_name",
            "type": [
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "arg",
            "name": "target_kind",
            "type": [
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "arg",
            "name": "target_package",
            "type": [
                "None",
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "arg",
            "name": "target_version",
            "type": [
                "None",
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "arg",
            "name": "disabled",
            "type": [
                "None",
                "str",
                "int",
                "os.PathLike"
            ]
        },
        {
            "category": "arg",
            "name": "should_warn_if_disabled",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "list[str]",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "disabled",
            "type": [
                "None",
                "str",
                "int",
                "os.PathLike"
            ]
        },
        {
            "category": "local",
            "name": "target_kind",
            "type": [
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "local",
            "name": "target_name",
            "type": [
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "local",
            "name": "target_package",
            "type": [
                "None",
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "local",
            "name": "event",
            "type": [
                "InvalidDisabledTargetInTestNode"
            ]
        },
        {
            "category": "local",
            "name": "should_warn_if_disabled",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "target_version",
            "type": [
                "None",
                "int",
                "str",
                "os.PathLike"
            ]
        },
        {
            "category": "return",
            "name": "invalid_target_fail_unless_test",
            "type": [
                "None"
            ]
        }
    ],
    "is_partial_parsable@ManifestLoader": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "Manifest",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "valid",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "reparse_reason",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "is_partial_parsable",
            "type": [
                "tuple[bool]",
                "tuple[typing.Optional[bool]]"
            ]
        },
        {
            "category": "local",
            "name": "missing_keys",
            "type": [
                "set"
            ]
        }
    ],
    "load@ManifestLoader": [
        {
            "category": "local",
            "name": "self_",
            "type": [
                "int",
                "None",
                "ParsingInfo"
            ]
        },
        {
            "category": "local",
            "name": "saved_files",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "file_reader",
            "type": [
                "None",
                "ReadFilesFromDiff",
                "ReadFilesFromFileSystem"
            ]
        },
        {
            "category": "local",
            "name": "skip_parsing",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "partially_parsing",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "parser_types",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "patcher",
            "type": [
                "SourcePatcher"
            ]
        },
        {
            "category": "local",
            "name": "external_nodes_modified",
            "type": [
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "semantic_manifest",
            "type": [
                "SemanticManifest"
            ]
        },
        {
            "category": "return",
            "name": "load",
            "type": [
                "str"
            ]
        }
    ],
    "load_and_parse_macros@ManifestLoader": [
        {
            "category": "arg",
            "name": "project_parser_files",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "project_parser_files",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "parser_files",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "parser",
            "type": [
                "MacroParser",
                "GenericTestParser"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "FileBlock"
            ]
        },
        {
            "category": "return",
            "name": "load_and_parse_macros",
            "type": [
                "None"
            ]
        }
    ],
    "load_macros@ManifestLoader": [
        {
            "category": "arg",
            "name": "cls",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "root_config",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "macro_hook",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "base_macros_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "root_config",
            "type": [
                "str",
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "base_macros_only",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "projects",
            "type": [
                "str",
                "list[str]",
                "Project"
            ]
        },
        {
            "category": "local",
            "name": "macro_hook",
            "type": [
                "bool",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "loader",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "load_macros",
            "type": [
                "multinedb.models.workspace.Workspace"
            ]
        }
    ],
    "macro_depends_on@ManifestLoader": [
        {
            "category": "local",
            "name": "macro_namespace",
            "type": [
                "TestMacroNamespace"
            ]
        },
        {
            "category": "local",
            "name": "dep_macro_id",
            "type": [
                "str",
                "set[int]",
                "set"
            ]
        },
        {
            "category": "return",
            "name": "macro_depends_on",
            "type": [
                "None"
            ]
        }
    ],
    "parse_manifest@global": [
        {
            "category": "arg",
            "name": "runtime_config",
            "type": [
                "dict",
                "typing.Mapping",
                "tbump.config.Config"
            ]
        },
        {
            "category": "arg",
            "name": "write_perf_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "write",
            "type": [
                "bool",
                "str",
                "typing.Callable[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "write_json",
            "type": [
                "bool",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "runtime_config",
            "type": [
                "dict",
                "typing.Mapping",
                "tbump.config.Config"
            ]
        },
        {
            "category": "local",
            "name": "adapter",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "write_perf_info",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "write",
            "type": [
                "bool",
                "str",
                "typing.Callable[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "write_json",
            "type": [
                "bool",
                "bytes"
            ]
        },
        {
            "category": "return",
            "name": "parse_manifest",
            "type": [
                "dict"
            ]
        }
    ],
    "parse_project@ManifestLoader": [
        {
            "category": "arg",
            "name": "project",
            "type": [
                "str",
                "models.Pkg"
            ]
        },
        {
            "category": "arg",
            "name": "parser_files",
            "type": [
                "str",
                "dep_check.models.SourceFile",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "parser_types",
            "type": [
                "str",
                "dict[str, mypy.nodes.MypyFile]"
            ]
        },
        {
            "category": "local",
            "name": "project",
            "type": [
                "str",
                "models.Pkg"
            ]
        },
        {
            "category": "local",
            "name": "total_parsed_path_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "parser_cls",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "parser_types",
            "type": [
                "str",
                "dict[str, mypy.nodes.MypyFile]"
            ]
        },
        {
            "category": "local",
            "name": "parser_files",
            "type": [
                "str",
                "dep_check.models.SourceFile",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "project_parsed_path_count",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "parser",
            "type": [
                "SchemaParser",
                "openapi.spec.spec.SchemaParser",
                "shared.configuration.configuration_parser.Parser"
            ]
        },
        {
            "category": "local",
            "name": "file_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "block",
            "type": [
                "FileBlock"
            ]
        },
        {
            "category": "local",
            "name": "hook_parser",
            "type": [
                "HookParser"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "file_block",
            "type": [
                "FileBlock"
            ]
        },
        {
            "category": "return",
            "name": "parse_project",
            "type": [
                "None"
            ]
        }
    ],
    "process_docs@ManifestLoader": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "pyramid.config.Configurator",
                "dothebackup.types.CONFIGTYPE"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[str, typing.Any]",
                "pyramid.config.Configurator",
                "dothebackup.types.CONFIGTYPE"
            ]
        },
        {
            "category": "return",
            "name": "process_docs",
            "type": [
                "None"
            ]
        }
    ],
    "process_macro@global": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dbcontracts.graph.parsed.ParsedMacro",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.parsed.ParsedMacro",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "arg",
            "name": "macro",
            "type": [
                "dbcontracts.graph.parsed.ParsedMacro",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dbcontracts.graph.parsed.ParsedMacro",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "macro",
            "type": [
                "dbcontracts.graph.parsed.ParsedMacro",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.parsed.ParsedMacro",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.manifesManifest"
            ]
        },
        {
            "category": "return",
            "name": "process_macro",
            "type": [
                "None"
            ]
        }
    ],
    "process_metrics@ManifestLoader": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "sphinx.config.Config",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "sphinx.config.Config",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "process_metrics",
            "type": [
                "None"
            ]
        }
    ],
    "process_model_inferred_primary_keys@ManifestLoader": [
        {
            "category": "local",
            "name": "model_to_generic_test_map",
            "type": [
                "dict",
                "dict[int, str]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "node_",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "generic_tests",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "process_model_inferred_primary_keys",
            "type": [
                "None"
            ]
        }
    ],
    "process_node@global": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "arg",
            "name": "node",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "dbcontracts.graph.manifesManifest",
                "dbconfig.RuntimeConfig",
                "dbcontracts.graph.compiled.ManifestNode"
            ]
        },
        {
            "category": "return",
            "name": "process_node",
            "type": [
                "None"
            ]
        }
    ],
    "process_refs@ManifestLoader": [
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "set[str]",
                "os.DirEntry"
            ]
        },
        {
            "category": "arg",
            "name": "dependencies",
            "type": [
                "str",
                "set[str]",
                "os.DirEntry"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "set[str]",
                "os.DirEntry"
            ]
        },
        {
            "category": "local",
            "name": "dependencies",
            "type": [
                "str",
                "set[str]",
                "os.DirEntry"
            ]
        },
        {
            "category": "return",
            "name": "process_refs",
            "type": [
                "None"
            ]
        }
    ],
    "process_saved_queries@ManifestLoader": [
        {
            "category": "arg",
            "name": "config",
            "type": [
                "sphinx.config.Config",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "semantic_manifest_changed",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "semantic_manifest_nodes",
            "type": [
                "dict[str, list]",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "node",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "process_saved_queries",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "sphinx.config.Config",
                "dict[str, str]"
            ]
        }
    ],
    "process_sources@ManifestLoader": [
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "str",
                "dbcontracts.graph.manifesManifest",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "process_sources",
            "type": [
                "None"
            ]
        }
    ],
    "process_unit_tests@ManifestLoader": [
        {
            "category": "arg",
            "name": "current_project",
            "type": [
                "projects.models.projects.Project",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "models_to_versions",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "unit_test_unique_ids",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "current_project",
            "type": [
                "projects.models.projects.Project",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "process_unit_tests",
            "type": [
                "None"
            ]
        }
    ],
    "read_manifest_for_partial_parse@ManifestLoader": [
        {
            "category": "local",
            "name": "flags",
            "type": [
                "int",
                "list[str]",
                "dict[int, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "read_manifest_for_partial_parse",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "reparse_reason",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "fp",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "manifest_mp",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "dbt_",
            "type": [
                "None"
            ]
        }
    ],
    "remove_dependent_project_references@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "None",
                "wemake_python_styleguide.types.AnyText"
            ]
        },
        {
            "category": "arg",
            "name": "external_node_unique_id",
            "type": [
                "int",
                "dict[str, zam_repondeur.models.Amendement]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "None",
                "wemake_python_styleguide.types.AnyText"
            ]
        },
        {
            "category": "local",
            "name": "external_node_unique_id",
            "type": [
                "int",
                "dict[str, zam_repondeur.models.Amendement]",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "remove_dependent_project_references",
            "type": [
                "None"
            ]
        }
    ],
    "safe_update_project_parser_files_partially@ManifestLoader": [
        {
            "category": "arg",
            "name": "project_parser_files",
            "type": [
                "dbparser.base.BaseParser",
                "dep_check.models.SourceFile",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "saved_manifest",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "project_parser_files",
            "type": [
                "dbparser.base.BaseParser",
                "dep_check.models.SourceFile",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "safe_update_project_parser_files_partially",
            "type": [
                "dbparser.base.BaseParser",
                "dep_check.models.SourceFile",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "partial_parser",
            "type": [
                "PartialParsing"
            ]
        },
        {
            "category": "local",
            "name": "skip_parsing",
            "type": [
                "bool",
                "tuple[str]",
                "frozenset"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "partially_parsing",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "Exception"
            ]
        },
        {
            "category": "local",
            "name": "exc_info",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "parse_file_type",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "source_file",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "dbt_",
            "type": [
                "None"
            ]
        }
    ],
    "save_macros_to_adapter@ManifestLoader": [
        {
            "category": "arg",
            "name": "adapter",
            "type": [
                "antidote.providers.tag.TagProvider",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "adapter",
            "type": [
                "antidote.providers.tag.TagProvider",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "save_macros_to_adapter",
            "type": [
                "None"
            ]
        }
    ],
    "skip_partial_parsing_because_of_macros@ManifestLoader": [
        {
            "category": "return",
            "name": "skip_partial_parsing_because_of_macros",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "macro",
            "type": [
                "dict[str, str]",
                "str",
                "typing.KeysView"
            ]
        }
    ],
    "track_project_load@ManifestLoader": [
        {
            "category": "local",
            "name": "invocation_id",
            "type": [
                "str",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "track_project_load",
            "type": [
                "None"
            ]
        }
    ],
    "update_semantic_model@ManifestLoader": [
        {
            "category": "arg",
            "name": "semantic_model",
            "type": []
        },
        {
            "category": "local",
            "name": "semantic_model_",
            "type": [
                "NodeRelation"
            ]
        },
        {
            "category": "return",
            "name": "update_semantic_model",
            "type": [
                "None"
            ]
        }
    ],
    "version_to_str@global": [
        {
            "category": "arg",
            "name": "version",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "version",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "version_to_str",
            "type": [
                "str",
                "typing.Text"
            ]
        }
    ],
    "write_manifest@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "bool",
                "typing.IO"
            ]
        },
        {
            "category": "arg",
            "name": "target_path",
            "type": [
                "bool",
                "str",
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "which",
            "type": [
                "None",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "target_path",
            "type": [
                "bool",
                "str",
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "bool",
                "typing.IO"
            ]
        },
        {
            "category": "return",
            "name": "write_manifest",
            "type": [
                "None"
            ]
        }
    ],
    "write_manifest_for_partial_parse@ManifestLoader": [
        {
            "category": "local",
            "name": "path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest_msgpack",
            "type": [
                "bytes",
                "bytearray"
            ]
        },
        {
            "category": "local",
            "name": "fp",
            "type": [
                "typing.IO"
            ]
        },
        {
            "category": "return",
            "name": "write_manifest_for_partial_parse",
            "type": [
                "None"
            ]
        }
    ],
    "write_perf_info@ManifestLoader": [
        {
            "category": "arg",
            "name": "target_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "target_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "PERF_INFO_FILE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "str",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "write_perf_info",
            "type": [
                "None"
            ]
        }
    ],
    "write_semantic_manifest@global": [
        {
            "category": "arg",
            "name": "manifest",
            "type": [
                "str",
                "typing.Sequence[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "target_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "target_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "manifest",
            "type": [
                "str",
                "typing.Sequence[str]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "semantic_manifest",
            "type": [
                "SemanticManifest"
            ]
        },
        {
            "category": "return",
            "name": "write_semantic_manifest",
            "type": [
                "None"
            ]
        }
    ]
}