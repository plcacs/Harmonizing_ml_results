{
    "__init__@FakeConfig": [
        {
            "category": "arg",
            "name": "deployed_values",
            "type": [
                "int",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "deployed_values",
            "type": [
                "int",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "_deployed_values",
            "type": [
                "int",
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "chalice_stage",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "api_gateway_stage",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "__init__@InMemoryRemoteState": [
        {
            "category": "arg",
            "name": "known_resources",
            "type": [
                "None",
                "str",
                "typing.Sequence[str]",
                "cmk.utils.type_defs.Item"
            ]
        },
        {
            "category": "local",
            "name": "known_resources",
            "type": [
                "None",
                "str",
                "typing.Sequence[str]",
                "cmk.utils.type_defs.Item",
                "dict",
                "set[str]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "deployed_values",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "__init__",
            "type": [
                "None"
            ]
        }
    ],
    "assert_apicall_equals@BasePlannerTests": [
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "list[tuple[str]]",
                "dict",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "actual_api_call",
            "type": [
                "tuple[str]",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "assert_apicall_equals",
            "type": [
                "None"
            ]
        }
    ],
    "assert_loads_needed_variables@TestPlanRestAPI": [
        {
            "category": "arg",
            "name": "plan",
            "type": [
                "str",
                "typing.Sequence[decksite.data.models.person.Person]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "assert_loads_needed_variables",
            "type": [
                "None"
            ]
        }
    ],
    "assert_loads_needed_variables@TestPlanWebsocketAPI": [
        {
            "category": "arg",
            "name": "plan",
            "type": [
                "str",
                "typing.Sequence[decksite.data.models.person.Person]",
                "list[tuple[str]]"
            ]
        },
        {
            "category": "return",
            "name": "assert_loads_needed_variables",
            "type": [
                "None"
            ]
        }
    ],
    "assert_recorded_values@BasePlannerTests": [
        {
            "category": "arg",
            "name": "plan",
            "type": [
                "str",
                "models.PermissionLookup"
            ]
        },
        {
            "category": "arg",
            "name": "resource_type",
            "type": [
                "str",
                "models.PermissionLookup",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "resource_name",
            "type": [
                "str",
                "models.PermissionLookup",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "expected_mapping",
            "type": [
                "str",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "actual",
            "type": [
                "dict",
                "dict[, Variable]"
            ]
        },
        {
            "category": "local",
            "name": "step",
            "type": [
                "typing.Text",
                "models_@_RecordResourceValue",
                "models_@_RecordResourceVariable"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "str",
                "models.PermissionLookup"
            ]
        },
        {
            "category": "return",
            "name": "assert_recorded_values",
            "type": [
                "None"
            ]
        }
    ],
    "create_api_mapping@TestRemoteState": [
        {
            "category": "return",
            "name": "create_api_mapping",
            "type": []
        }
    ],
    "create_api_mapping@global": [
        {
            "category": "return",
            "name": "create_api_mapping",
            "type": []
        }
    ],
    "create_domain_name@TestRemoteState": [
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "create_domain_name",
            "type": [
                "str",
                "list"
            ]
        }
    ],
    "create_function_resource@global": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "function_name",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "environment_variables",
            "type": [
                "None",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "runtime",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "handler",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "tags",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "timeout",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "memory_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "deployment_package",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "role",
            "type": [
                "None",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "layers",
            "type": [
                "None",
                "str",
                "typing.Iterable[str]",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "managed_layer",
            "type": [
                "None",
                "str",
                "typing.Iterable[str]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "function_name",
            "type": [
                "None",
                "str",
                "int",
                "typing.Text",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "str",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "environment_variables",
            "type": [
                "None",
                "str",
                "int",
                "dict",
                "tuple[typing.Literal]",
                "list[dict[str, typing.Any]]",
                "dict[str, tuple[typing.Union[int,str]]]"
            ]
        },
        {
            "category": "local",
            "name": "tags",
            "type": [
                "None",
                "str",
                "dict",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "deployment_package",
            "type": [
                "None",
                "str",
                "list[str]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "role",
            "type": [
                "None",
                "str",
                "list[str]",
                "dict",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "runtime",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "handler",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "timeout",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "memory_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "layers",
            "type": [
                "None",
                "str",
                "typing.Iterable[str]",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "managed_layer",
            "type": [
                "None",
                "str",
                "typing.Iterable[str]",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "create_function_resource",
            "type": []
        }
    ],
    "create_http_domain_name@global": [
        {
            "category": "return",
            "name": "create_http_domain_name",
            "type": [
                "dict",
                "str",
                "bool"
            ]
        }
    ],
    "create_managed_layer@global": [
        {
            "category": "return",
            "name": "create_managed_layer",
            "type": []
        }
    ],
    "create_rest_api_model@TestRemoteState": [
        {
            "category": "return",
            "name": "create_rest_api_model",
            "type": []
        }
    ],
    "create_websocket_api_model@TestRemoteState": [
        {
            "category": "return",
            "name": "create_websocket_api_model",
            "type": []
        }
    ],
    "create_websocket_domain_name@global": [
        {
            "category": "return",
            "name": "create_websocket_domain_name",
            "type": [
                "dict",
                "str",
                "bool"
            ]
        }
    ],
    "declare_no_resources_exists@InMemoryRemoteState": [
        {
            "category": "local",
            "name": "known_resources",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "declare_no_resources_exists",
            "type": [
                "None"
            ]
        }
    ],
    "declare_resource_exists@InMemoryRemoteState": [
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "dict",
                "typing.Type",
                "object"
            ]
        },
        {
            "category": "arg",
            "name": "deployed_values",
            "type": [
                "str",
                "bool",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "dict",
                "typing.Type",
                "object"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "local",
            "name": "deployed_values",
            "type": [
                "str",
                "bool",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "declare_resource_exists",
            "type": [
                "None"
            ]
        }
    ],
    "deployed_resources@FakeConfig": [
        {
            "category": "arg",
            "name": "chalice_stage_name",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "deployed_resources",
            "type": [
                "DeployedResources"
            ]
        }
    ],
    "determine_plan@BasePlannerTests": [
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str",
                "list[eventdb.core.models.resource.Resource]",
                "typing.KeysView"
            ]
        },
        {
            "category": "local",
            "name": "planner",
            "type": [
                "PlanStage"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "str",
                "list[eventdb.core.models.resource.Resource]",
                "typing.KeysView"
            ]
        },
        {
            "category": "local",
            "name": "last_plan",
            "type": [
                "float",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "determine_plan",
            "type": []
        }
    ],
    "execute@TestUnreferencedResourcePlanner": [
        {
            "category": "arg",
            "name": "plan",
            "type": [
                "dict",
                "dict[\"core.Edge\", \"state.State\"]",
                "core.models.UserPreferences"
            ]
        },
        {
            "category": "arg",
            "name": "config",
            "type": [
                "dict",
                "dict[\"core.Edge\", \"state.State\"]",
                "core.models.UserPreferences"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "dict",
                "dict[\"core.Edge\", \"state.State\"]",
                "core.models.UserPreferences"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict",
                "dict[\"core.Edge\", \"state.State\"]",
                "core.models.UserPreferences"
            ]
        },
        {
            "category": "return",
            "name": "execute",
            "type": [
                "None"
            ]
        }
    ],
    "filter_api_calls@BasePlannerTests": [
        {
            "category": "arg",
            "name": "plan",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "api_calls",
            "type": [
                "list",
                "list[models_@_APICall]"
            ]
        },
        {
            "category": "local",
            "name": "instruction",
            "type": [
                "typing.Text",
                "models_@_APICall"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "filter_api_calls",
            "type": [
                "list[models_@_APICall]"
            ]
        }
    ],
    "function_resource@TestUnreferencedResourcePlanner": [
        {
            "category": "return",
            "name": "function_resource",
            "type": [
                "str"
            ]
        }
    ],
    "get_remote_model@InMemoryRemoteState": [
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "tuple"
            ]
        },
        {
            "category": "return",
            "name": "get_remote_model",
            "type": [
                "str",
                "None"
            ]
        }
    ],
    "global@global": [],
    "no_deployed_values@global": [
        {
            "category": "return",
            "name": "no_deployed_values",
            "type": [
                "DeployedResources"
            ]
        }
    ],
    "one_deployed_lambda_function@TestUnreferencedResourcePlanner": [
        {
            "category": "arg",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "arn",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "arn",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "one_deployed_lambda_function",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        }
    ],
    "resource_deployed_values@InMemoryRemoteState": [
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "resource_deployed_values",
            "type": []
        }
    ],
    "resource_exists@InMemoryRemoteState": [
        {
            "category": "arg",
            "name": "resource",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "resource",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "resource_exists",
            "type": [
                "bool"
            ]
        }
    ],
    "setup_method@BasePlannerTests": [
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "InMemoryRemoteState"
            ]
        },
        {
            "category": "local",
            "name": "last_plan",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "setup_method",
            "type": [
                "None"
            ]
        }
    ],
    "setup_method@TestRemoteState": [
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "setup_method",
            "type": [
                "None"
            ]
        }
    ],
    "setup_method@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "sweeper",
            "type": [
                "ResourceSweeper"
            ]
        },
        {
            "category": "return",
            "name": "setup_method",
            "type": [
                "None"
            ]
        }
    ],
    "test_api_gateway_domain_name_exists@TestRemoteState": [
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str",
                "dict[str, str]",
                "set[str]"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_api_gateway_domain_name_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_api_mapping@TestPlanCreateUpdateAPIMapping": [
        {
            "category": "arg",
            "name": "lambda_function",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "lambda_function",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "rest_api",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,Variable]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[APICall]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_api_mapping",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_domain_name@TestPlanCreateUpdateDomainName": [
        {
            "category": "arg",
            "name": "lambda_function",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str",
                "set[str]",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "lambda_function",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,None]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[APICall]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_domain_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_function@TestPlanLambdaFunction": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "dict",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list[dict[str, int]]",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[APICall]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_function",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_function_with_reserved_concurrency@TestPlanLambdaFunction": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "dict",
                "list",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "function_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list[dict[str, int]]",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[APICall]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_function_with_reserved_concurrency",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_layer@TestPlanLambdaFunction": [
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[APICall]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_layer",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_log_group@TestPlanLogGroup": [
        {
            "category": "return",
            "name": "test_can_create_log_group",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_plan_for_filebased_role@TestPlanManagedRole": [
        {
            "category": "local",
            "name": "expected",
            "type": [
                "APICall"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_plan_for_filebased_role",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_create_websocket_api_mapping_with_path@TestPlanCreateUpdateAPIMapping": [
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "domain_name_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "connect_function",
            "type": [
                "dict",
                "tuple",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "message_function",
            "type": [
                "str",
                "typing.Callable",
                "dict[str, dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "disconnect_function",
            "type": [
                "typing.Type",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,Variable]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[APICall]"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_can_create_websocket_api_mapping_with_path",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_delete_api_mapping@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Union[typing.Text,list[dict[typing.Text, typing.Text]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_delete_api_mapping",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_delete_api_mapping_none@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Union[typing.Text,list[dict[typing.Text, typing.Text]]]]]]"
            ]
        },
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_delete_api_mapping_none",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_delete_domain_name@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_delete_domain_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_delete_iam_role@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_delete_iam_role",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_delete_lambda_layer@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_delete_lambda_layer",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_delete_rest_api@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_delete_rest_api",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_delete_s3_event@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_delete_s3_event",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_delete_scheduled_event@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_delete_scheduled_event",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_delete_sns_subscription@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_delete_sns_subscription",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_delete_sqs_subscription@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_delete_sqs_subscription",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_delete_websocket_api@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_delete_websocket_api",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_get_deployed_values@TestRemoteState": [
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "local",
            "name": "rest_api",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "values",
            "type": [
                "int",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_can_get_deployed_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_handle_domain_name_without_api_mapping@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str",
                "set[str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_handle_domain_name_without_api_mapping",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_handle_when_resource_changes_values@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "app.models.ScrapeTarget",
                "list[str]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_can_handle_when_resource_changes_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_cloudwatch_event@TestPlanCloudWatchEvent": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[str]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_cloudwatch_event",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_dynamodb_event_source@TestPlanDynamoDBSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[str]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_dynamodb_event_source",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_dynamodb_event_source_update@TestPlanDynamoDBSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[str]",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_dynamodb_event_source_update",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_for_iam_role_creation@TestPlanManagedRole": [
        {
            "category": "local",
            "name": "expected",
            "type": [
                "APICall"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_for_iam_role_creation",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_kinesis_event_source@TestPlanKinesisSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "typing.Callable[None,None,None,None, typing.Any]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_kinesis_event_source",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_rest_api@TestPlanRestAPI": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_rest_api",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_s3_event@TestPlanS3Events": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[str]",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "local",
            "name": "setup_plan",
            "type": [
                "str",
                "dict[str, dict[str, typing.Any]]",
                "set"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list[aw_core.models.Event]",
                "dict[str, typing.Any]",
                "dict[typing.Any, list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_s3_event",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_scheduled_event@TestPlanScheduledEvent": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[str]",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_scheduled_event",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_scheduled_event_can_omit_description@TestPlanScheduledEvent": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "dict",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_scheduled_event_can_omit_description",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_sns_arn_subscription@TestPlanSNSSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[str]",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "local",
            "name": "topic_arn",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "topic_arn_var",
            "type": [
                "Variable"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_sns_arn_subscription",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_sns_subscription@TestPlanSNSSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[typing.Callable]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "topic_arn_var",
            "type": [
                "Variable"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_sns_subscription",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_sqs_event_source@TestPlanSQSSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[str]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_sqs_event_source",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_plan_websocket_api@TestPlanWebsocketAPI": [
        {
            "category": "local",
            "name": "connect_function",
            "type": [
                "dict",
                "tuple",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "message_function",
            "type": [
                "str",
                "typing.Callable",
                "dict[str, dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "disconnect_function",
            "type": [
                "typing.Type",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_can_plan_websocket_api",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_set_variables_when_needed@TestPlanLambdaFunction": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "chalice.deploy.models.LambdaFunction",
                "None",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "str",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "call",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_can_set_variables_when_needed",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_domain_name@TestPlanCreateUpdateDomainName": [
        {
            "category": "local",
            "name": "deployed_value",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "domain_name_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,None]]"
            ]
        },
        {
            "category": "local",
            "name": "planner",
            "type": [
                "PlanStage"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "salon.models.Stylist",
                "list[chalice.deploy.models.RecordResource]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[APICall]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_update_domain_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_file_based_policy@TestPlanManagedRole": [
        {
            "category": "return",
            "name": "test_can_update_file_based_policy",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_kinesis_event_source@TestPlanKinesisSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "typing.Callable[None,None,None,None, typing.Any]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_can_update_kinesis_event_source",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_lambda_function_code@TestPlanLambdaFunction": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "dict",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "local",
            "name": "copy_of_function",
            "type": [
                "str",
                "frozenset",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "function_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list[dict[str, int]]",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "existing_params",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,dict,None,int,list]]"
            ]
        },
        {
            "category": "local",
            "name": "expected_params",
            "type": [
                "dict",
                "dict[str, typing.Union[str,None]]",
                "dict[str, None]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[APICall]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_update_lambda_function_code",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_lambda_function_with_managed_layer@TestPlanLambdaFunction": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[typing.Callable]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "copy_of_function",
            "type": [
                "str",
                "frozenset",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_can_update_lambda_function_with_managed_layer",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_layer@TestPlanLambdaFunction": [
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[APICall]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_update_layer",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_log_group@TestPlanLogGroup": [
        {
            "category": "return",
            "name": "test_can_update_log_group",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_managed_role@TestPlanManagedRole": [
        {
            "category": "return",
            "name": "test_can_update_managed_role",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_rest_api@TestPlanRestAPI": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "int",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_update_rest_api",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_rest_api_with_policy@TestPlanRestAPI": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "chalice.app.Blueprint",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_can_update_rest_api_with_policy",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_sqs_event_with_queue_arn@TestPlanSQSSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "dict",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "return",
            "name": "test_can_update_sqs_event_with_queue_arn",
            "type": [
                "None"
            ]
        }
    ],
    "test_can_update_websocket_api@TestPlanWebsocketAPI": [
        {
            "category": "local",
            "name": "connect_function",
            "type": [
                "dict",
                "tuple",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "message_function",
            "type": [
                "str",
                "typing.Callable",
                "dict[str, dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "disconnect_function",
            "type": [
                "typing.Type",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_can_update_websocket_api",
            "type": [
                "None"
            ]
        }
    ],
    "test_correct_deletion_order_for_dependencies@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "local",
            "name": "expected_api_calls",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected_api_args",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_correct_deletion_order_for_dependencies",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_function_with_layers@TestPlanLambdaFunction": [
        {
            "category": "local",
            "name": "layers",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[typing.Callable]",
                "typing.Type"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list[APICall]"
            ]
        },
        {
            "category": "return",
            "name": "test_create_function_with_layers",
            "type": [
                "None"
            ]
        }
    ],
    "test_ddb_event_source_exists@TestRemoteState": [
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_ddb_event_source_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_ddb_event_source_not_exists@TestRemoteState": [
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list]"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_ddb_event_source_not_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_domain_name_does_not_exist@TestRemoteState": [
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str",
                "dict[str, str]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "domain_name_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_domain_name_does_not_exist",
            "type": [
                "None"
            ]
        }
    ],
    "test_dynamically_lookup_iam_role@TestRemoteState": [
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_dynamically_lookup_iam_role",
            "type": [
                "None"
            ]
        }
    ],
    "test_exists_check_is_cached@TestRemoteState": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "typing.Callable",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_exists_check_is_cached",
            "type": [
                "None"
            ]
        }
    ],
    "test_exists_check_is_cached_api_mapping@TestRemoteState": [
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_exists_check_is_cached_api_mapping",
            "type": [
                "None"
            ]
        }
    ],
    "test_handles_when_queue_name_change@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list",
                "dict[str, typing.Union[typing.Any,str]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_handles_when_queue_name_change",
            "type": [
                "None"
            ]
        }
    ],
    "test_handles_when_topic_name_change@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_handles_when_topic_name_change",
            "type": [
                "None"
            ]
        }
    ],
    "test_key_variable_str@TestKeyVariable": [
        {
            "category": "local",
            "name": "key_var",
            "type": [
                "KeyDataVariable"
            ]
        },
        {
            "category": "return",
            "name": "test_key_variable_str",
            "type": [
                "None"
            ]
        }
    ],
    "test_key_variables_equal@TestKeyVariable": [
        {
            "category": "local",
            "name": "key_var",
            "type": [
                "KeyDataVariable"
            ]
        },
        {
            "category": "local",
            "name": "key_var_1",
            "type": [
                "KeyDataVariable"
            ]
        },
        {
            "category": "local",
            "name": "key_var_2",
            "type": [
                "KeyDataVariable"
            ]
        },
        {
            "category": "return",
            "name": "test_key_variables_equal",
            "type": [
                "None"
            ]
        }
    ],
    "test_kinesis_event_source_exists@TestRemoteState": [
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_kinesis_event_source_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_kinesis_event_source_not_exists@TestRemoteState": [
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list]"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_kinesis_event_source_not_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_lambda_function_does_not_exist@TestRemoteState": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "typing.Callable[..., None]",
                "dict",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_lambda_function_does_not_exist",
            "type": [
                "None"
            ]
        }
    ],
    "test_lambda_function_exists@TestRemoteState": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "typing.Callable[..., None]",
                "dict",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_lambda_function_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_lambda_layer_exists@TestRemoteState": [
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_lambda_layer_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_lambda_layer_not_exists@TestRemoteState": [
        {
            "category": "return",
            "name": "test_lambda_layer_not_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_deletion_when_no_changes@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list[dict[str, typing.Any]]",
                "aw_core.models.Event",
                "dict[typing.Type, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "local",
            "name": "original_plan",
            "type": [
                "dict[str, typing.Any]",
                "typing.Any"
            ]
        },
        {
            "category": "return",
            "name": "test_no_deletion_when_no_changes",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_sqs_deletion_when_no_changes@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list",
                "dict[str, typing.Union[typing.Any,str]]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "local",
            "name": "original_plan",
            "type": [
                "int",
                "dict",
                "list[aw_core.models.Event]"
            ]
        },
        {
            "category": "return",
            "name": "test_no_sqs_deletion_when_no_changes",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_sweeping_when_resource_value_unchanged@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "str",
                "list",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "local",
            "name": "original_plan",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_no_sweeping_when_resource_value_unchanged",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_update_for_non_managed_role@TestPlanManagedRole": [
        {
            "category": "return",
            "name": "test_no_update_for_non_managed_role",
            "type": [
                "None"
            ]
        }
    ],
    "test_none_api_mapping_exists@TestRemoteState": [
        {
            "category": "local",
            "name": "api_mapping",
            "type": [
                "dict[str, str]",
                "dict",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_none_api_mapping_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_noop_when_all_resources_accounted_for@TestUnreferencedResourcePlanner": [
        {
            "category": "arg",
            "name": "function_resource",
            "type": [
                "typing.Type",
                "django.db.models.Model",
                "list[T]"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "original_plan",
            "type": [
                "int",
                "dict",
                "list[aw_core.models.Event]"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_noop_when_all_resources_accounted_for",
            "type": [
                "None"
            ]
        }
    ],
    "test_path_api_mapping_exists@TestRemoteState": [
        {
            "category": "local",
            "name": "api_mapping",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "api_mapping_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_path_api_mapping_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_path_api_mapping_exists_with_slash@TestRemoteState": [
        {
            "category": "local",
            "name": "api_mapping",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "api_mapping_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_path_api_mapping_exists_with_slash",
            "type": [
                "None"
            ]
        }
    ],
    "test_raise_error_not_existed_resource_delete@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_raise_error_not_existed_resource_delete",
            "type": [
                "None"
            ]
        }
    ],
    "test_rest_api_exists_no_deploy@TestRemoteState": [
        {
            "category": "arg",
            "name": "no_deployed_values",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "rest_api",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "no_deployed_values",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_rest_api_exists_no_deploy",
            "type": [
                "None"
            ]
        }
    ],
    "test_rest_api_exists_with_existing_deploy@TestRemoteState": [
        {
            "category": "local",
            "name": "rest_api",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_rest_api_exists_with_existing_deploy",
            "type": [
                "None"
            ]
        }
    ],
    "test_rest_api_not_exists_with_preexisting_deploy@TestRemoteState": [
        {
            "category": "local",
            "name": "rest_api",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_rest_api_not_exists_with_preexisting_deploy",
            "type": [
                "None"
            ]
        }
    ],
    "test_role_does_not_exist@TestRemoteState": [
        {
            "category": "local",
            "name": "client_",
            "type": [
                "ResourceDoesNotExistError"
            ]
        },
        {
            "category": "return",
            "name": "test_role_does_not_exist",
            "type": [
                "None"
            ]
        }
    ],
    "test_role_exists@TestRemoteState": [
        {
            "category": "local",
            "name": "self_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_role_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_sns_subscription_exists@TestRemoteState": [
        {
            "category": "arg",
            "name": "resource_topic",
            "type": [
                "list[str]",
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "deployed_topic",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "is_current",
            "type": [
                "str",
                "bool",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "expected_result",
            "type": [
                "bool",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "resource_topic",
            "type": [
                "list[str]",
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "deployed_topic",
            "type": [
                "str",
                "list[str]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Union[typing.Text,list[str],None]]]]"
            ]
        },
        {
            "category": "local",
            "name": "is_current",
            "type": [
                "str",
                "bool",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "str",
                "bool",
                "dict[str, typing.Any]",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_sns_subscription_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_sns_subscription_exists_is_noop_for_planner@TestPlanSNSSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[typing.Callable]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_sns_subscription_exists_is_noop_for_planner",
            "type": [
                "None"
            ]
        }
    ],
    "test_sns_subscription_not_in_deployed_values@TestRemoteState": [
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list]"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_sns_subscription_not_in_deployed_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_sqs_event_source_exists@TestRemoteState": [
        {
            "category": "arg",
            "name": "new_queue",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "deployed_queue",
            "type": [
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "expected_result",
            "type": [
                "typing.Callable",
                "str",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "new_queue",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "deployed_queue",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Union[dict[str, typing.Any],str]]]]",
                "dict[typing.Text, list]"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_sqs_event_source_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_sqs_event_source_exists_updates_batch_size@TestPlanSQSSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[str]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_sqs_event_source_exists_updates_batch_size",
            "type": [
                "None"
            ]
        }
    ],
    "test_sqs_event_source_exists_updates_maximum_concurrency@TestPlanSQSSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "list[str]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_sqs_event_source_exists_updates_maximum_concurrency",
            "type": [
                "None"
            ]
        }
    ],
    "test_sqs_event_supports_maximum_concurrency@TestPlanSQSSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "dict",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "return",
            "name": "test_sqs_event_supports_maximum_concurrency",
            "type": [
                "None"
            ]
        }
    ],
    "test_sqs_event_supports_queue_arn@TestPlanSQSSubscription": [
        {
            "category": "local",
            "name": "function",
            "type": [
                "str",
                "dict",
                "list[typing.Callable]"
            ]
        },
        {
            "category": "return",
            "name": "test_sqs_event_supports_queue_arn",
            "type": [
                "None"
            ]
        }
    ],
    "test_store_api_mapping_if_already_exists@TestPlanCreateUpdateAPIMapping": [
        {
            "category": "arg",
            "name": "lambda_function",
            "type": [
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "domain_name_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "lambda_function",
            "type": [
                "typing.Callable",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "deployed_value",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,list[dict[typing.Text, typing.Text]]]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_store_api_mapping_if_already_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_store_api_mapping_none_if_already_exists@TestPlanCreateUpdateAPIMapping": [
        {
            "category": "arg",
            "name": "lambda_function",
            "type": [
                "typing.Callable",
                "\"Account\""
            ]
        },
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str",
                "tuple[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "domain_name_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "lambda_function",
            "type": [
                "typing.Callable",
                "\"Account\""
            ]
        },
        {
            "category": "local",
            "name": "deployed_value",
            "type": [
                "dict[typing.Text, typing.Union[typing.Text,list[dict[typing.Text, typing.Text]]]]"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_store_api_mapping_none_if_already_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_supports_multiple_unreferenced_and_unchanged@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "first",
            "type": [
                "str",
                "src.pythonfinder.models.path.PathEntry",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "second",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "third",
            "type": [
                "str",
                "int",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_supports_multiple_unreferenced_and_unchanged",
            "type": [
                "None"
            ]
        }
    ],
    "test_unknown_model_type_raises_error@TestRemoteState": [
        {
            "category": "local",
            "name": "resource_type",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "foo",
            "type": [
                "Foo"
            ]
        },
        {
            "category": "return",
            "name": "test_unknown_model_type_raises_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_update_plan_with_insert_without_message@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "instructions",
            "type": [
                "tuple[APICall]"
            ]
        },
        {
            "category": "return",
            "name": "test_update_plan_with_insert_without_message",
            "type": [
                "None"
            ]
        }
    ],
    "test_value_error_raised_for_unknown_resource_name@TestRemoteState": [
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "local",
            "name": "rest_api",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_value_error_raised_for_unknown_resource_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_value_error_raised_on_no_deployed_values@TestRemoteState": [
        {
            "category": "arg",
            "name": "no_deployed_values",
            "type": [
                "typing.Callable",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "no_deployed_values",
            "type": [
                "typing.Callable",
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "local",
            "name": "rest_api",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_value_error_raised_on_no_deployed_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_websocket_api_exists_no_deploy@TestRemoteState": [
        {
            "category": "arg",
            "name": "no_deployed_values",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "rest_api",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "no_deployed_values",
            "type": [
                "str",
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_websocket_api_exists_no_deploy",
            "type": [
                "None"
            ]
        }
    ],
    "test_websocket_api_exists_with_existing_deploy@TestRemoteState": [
        {
            "category": "local",
            "name": "websocket_api",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_websocket_api_exists_with_existing_deploy",
            "type": [
                "None"
            ]
        }
    ],
    "test_websocket_api_not_exists_with_preexisting_deploy@TestRemoteState": [
        {
            "category": "local",
            "name": "websocket_api",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "deployed_resources",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "remote_state",
            "type": [
                "RemoteState"
            ]
        },
        {
            "category": "return",
            "name": "test_websocket_api_not_exists_with_preexisting_deploy",
            "type": [
                "None"
            ]
        }
    ],
    "test_websocket_api_plan_omits_unused_lambdas@TestPlanSQSSubscription": [
        {
            "category": "arg",
            "name": "functions",
            "type": [
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "integration_injected",
            "type": [
                "Exception",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "functions",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "integrations",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_websocket_api_plan_omits_unused_lambdas",
            "type": [
                "None"
            ]
        }
    ],
    "test_websocket_domain_name_exists@TestRemoteState": [
        {
            "category": "local",
            "name": "domain_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "domain_name_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_websocket_domain_name_exists",
            "type": [
                "None"
            ]
        }
    ],
    "test_will_delete_log_group@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict[typing.Text, list[dict[typing.Text, typing.Text]]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_will_delete_log_group",
            "type": [
                "None"
            ]
        }
    ],
    "test_will_delete_unreferenced_resource@TestUnreferencedResourcePlanner": [
        {
            "category": "local",
            "name": "plan",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "deployed",
            "type": [
                "dict",
                "dict[str, str]",
                "dict[str, dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "FakeConfig"
            ]
        },
        {
            "category": "return",
            "name": "test_will_delete_unreferenced_resource",
            "type": [
                "None"
            ]
        }
    ]
}