{
    "_mock_imported_settings_paths@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "pathlib.Path",
                "nauta.config.NautaPlatformConfig"
            ]
        },
        {
            "category": "arg",
            "name": "mock_settings",
            "type": [
                "pathlib.Path",
                "nauta.config.NautaPlatformConfig"
            ]
        },
        {
            "category": "local",
            "name": "path",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "pathlib.Path",
                "nauta.config.NautaPlatformConfig"
            ]
        },
        {
            "category": "local",
            "name": "mock_settings",
            "type": [
                "pathlib.Path",
                "nauta.config.NautaPlatformConfig"
            ]
        },
        {
            "category": "return",
            "name": "_mock_imported_settings_paths",
            "type": [
                "pathlib.Path",
                "nauta.config.NautaPlatformConfig"
            ]
        }
    ],
    "create_attrs_autospec@global": [
        {
            "category": "arg",
            "name": "spec",
            "type": [
                "bool",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "spec_set",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "spec",
            "type": [
                "bool",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "ATTRS_ATTRIBUTE",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "spec_set",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mock",
            "type": [
                "dict[str, tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "NEW_TYPING",
            "type": [
                "list[str]",
                "list[shromazdeni.reports.utils.Field]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "create_attrs_autospec",
            "type": [
                "dict[str, tuple[typing.Union[str,typing.Any]]]"
            ]
        }
    ],
    "fake_project@global": [
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "str",
                "path.Path",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "mock_package_name",
            "type": [
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "str",
                "path.Path",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_dir",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "pyproject_toml_path",
            "type": [
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "_FAKE_PROJECT_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_package_name",
            "type": [
                "str",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "payload",
            "type": [
                "dict[typing.Text, dict[typing.Text, dict[typing.Text, typing.Union[str,None,dict[str, typing.Any]]]]]"
            ]
        },
        {
            "category": "return",
            "name": "fake_project",
            "type": [
                "pathlib.Path"
            ]
        }
    ],
    "fake_project_with_logging_file_handler@global": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": []
        },
        {
            "category": "local",
            "name": "logging_config",
            "type": [
                "dict[typing.Text, typing.Union[int,dict[typing.Text, dict[typing.Text, typing.Text]]]]"
            ]
        },
        {
            "category": "return",
            "name": "fake_project_with_logging_file_handler",
            "type": []
        }
    ],
    "fake_session_id@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "session_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "fake_session_id",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "fake_username@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "username",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "fake_username",
            "type": [
                "typing.Text"
            ]
        }
    ],
    "get_all_values@global": [
        {
            "category": "arg",
            "name": "mapping",
            "type": [
                "dict[int, list[str]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "list[list[str]]",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "mapping",
            "type": [
                "dict[int, list[str]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "get_all_values",
            "type": [
                "typing.Generator[list[list[str]]]",
                "typing.Generator"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_FAKE_PROJECT_NAME",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_FAKE_PIPELINE_NAME",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "ATTRS_ATTRIBUTE",
            "type": [
                "typing.Text",
                "list[str]",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "NEW_TYPING",
            "type": [
                "bool",
                "list[str]",
                "list[shromazdeni.reports.utils.Field]",
                "list"
            ]
        },
        {
            "category": "local",
            "name": "SESSION_LOGGER_NAME",
            "type": [
                "typing.Text",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "STORE_LOGGER_NAME",
            "type": [
                "typing.Text",
                "str",
                "pathlib.Path"
            ]
        }
    ],
    "mock_context_class@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "mock_context_class",
            "type": []
        }
    ],
    "mock_runner@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "mock_runner_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "mock_runner",
            "type": []
        }
    ],
    "mock_settings@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "return",
            "name": "mock_settings",
            "type": []
        }
    ],
    "mock_settings_bad_session_store_args@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "_SESSION_STORE_ARGS",
            "type": [
                "Validator"
            ]
        },
        {
            "category": "return",
            "name": "mock_settings_bad_session_store_args",
            "type": []
        }
    ],
    "mock_settings_config_loader_args@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "_CONFIG_LOADER_ARGS",
            "type": [
                "Validator"
            ]
        },
        {
            "category": "return",
            "name": "mock_settings_config_loader_args",
            "type": []
        }
    ],
    "mock_settings_config_loader_args_env@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "_CONFIG_LOADER_ARGS",
            "type": [
                "Validator"
            ]
        },
        {
            "category": "return",
            "name": "mock_settings_config_loader_args_env",
            "type": []
        }
    ],
    "mock_settings_context_class@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mock_context_class",
            "type": [
                "str",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "_CONTEXT_CLASS",
            "type": [
                "Validator"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "mock_settings_context_class",
            "type": [
                "dict[str, typing.Any]",
                "typing.Callable",
                "dict"
            ]
        }
    ],
    "mock_settings_custom_config_loader_class@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "_CONFIG_LOADER_CLASS",
            "type": [
                "_HasSharedParentClassValidator"
            ]
        },
        {
            "category": "return",
            "name": "mock_settings_custom_config_loader_class",
            "type": []
        }
    ],
    "mock_settings_custom_context_class@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "_CONTEXT_CLASS",
            "type": [
                "Validator"
            ]
        },
        {
            "category": "return",
            "name": "mock_settings_custom_context_class",
            "type": []
        }
    ],
    "mock_settings_file_bad_config_loader_class@global": [
        {
            "category": "arg",
            "name": "tmpdir",
            "type": [
                "pathlib.Path",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tmpdir",
            "type": [
                "pathlib.Path",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_settings_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "mock_settings_file_bad_config_loader_class",
            "type": [
                "str"
            ]
        }
    ],
    "mock_settings_file_bad_session_store_class@global": [
        {
            "category": "arg",
            "name": "tmpdir",
            "type": [
                "pathlib.Path",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tmpdir",
            "type": [
                "pathlib.Path",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_settings_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "mock_settings_file_bad_session_store_class",
            "type": [
                "str"
            ]
        }
    ],
    "mock_settings_omega_config_loader_class@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "_CONFIG_LOADER_CLASS",
            "type": [
                "_HasSharedParentClassValidator"
            ]
        },
        {
            "category": "return",
            "name": "mock_settings_omega_config_loader_class",
            "type": []
        }
    ],
    "mock_settings_uncaught_session_store_exception@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "_SESSION_STORE_ARGS",
            "type": [
                "Validator"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "mock_settings_uncaught_session_store_exception",
            "type": []
        }
    ],
    "mock_thread_runner@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "mock_runner_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "mock_thread_runner",
            "type": []
        }
    ],
    "test_broken_config_loader@TestKedroSession": [
        {
            "category": "arg",
            "name": "mock_settings_file_bad_config_loader_class",
            "type": [
                "str",
                "cerise.config.Config",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "mock_settings_file_bad_config_loader_class",
            "type": [
                "str",
                "cerise.config.Config",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "mock_settings",
            "type": [
                "_ProjectSettings"
            ]
        },
        {
            "category": "return",
            "name": "test_broken_config_loader",
            "type": [
                "None"
            ]
        }
    ],
    "test_config_loader_args_no_env_overwrites_env@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "return",
            "name": "test_config_loader_args_no_env_overwrites_env",
            "type": [
                "None"
            ]
        }
    ],
    "test_config_loader_args_overwrite_env@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "return",
            "name": "test_config_loader_args_overwrite_env",
            "type": [
                "None"
            ]
        }
    ],
    "test_create@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "mock_context_class",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session_id",
            "type": [
                "mock.Mock",
                "list[dict[str, typing.Any]]",
                "revived.store.Store"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "env",
            "type": [
                "app.utils.models.ModelManager",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "extra_params",
            "type": [
                "dict",
                "app.utils.models.ModelManager",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "fake_username",
            "type": [
                "dss.config.Replica"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "env",
            "type": [
                "app.utils.models.ModelManager",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "extra_params",
            "type": [
                "dict",
                "app.utils.models.ModelManager",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "expected_cli_data",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "fake_session_id",
            "type": [
                "mock.Mock",
                "list[dict[str, typing.Any]]",
                "revived.store.Store"
            ]
        },
        {
            "category": "local",
            "name": "expected_store",
            "type": [
                "dict[typing.Text, typing.Union[str,dict[str, typing.Any],mock.Mock,list[dict[str, typing.Any]],revived.store.Store,dict[typing.Text, typing.Text]]]",
                "dict[typing.Text, typing.Union[str,dict[str, typing.Any],mock.Mock,list[dict[str, typing.Any]],revived.store.Store,dict[typing.Text, typing.Text],app.utils.models.ModelManager]]",
                "dict[typing.Text, typing.Union[str,dict[str, typing.Any],mock.Mock,list[dict[str, typing.Any]],revived.store.Store,dict[typing.Text, typing.Text],dict,app.utils.models.ModelManager]]",
                "dict[typing.Text, typing.Union[str,dict[str, typing.Any],mock.Mock,list[dict[str, typing.Any]],revived.store.Store,dict[typing.Text, typing.Text],dict,app.utils.models.ModelManager,dss.config.Replica]]"
            ]
        },
        {
            "category": "local",
            "name": "fake_username",
            "type": [
                "dss.config.Replica"
            ]
        },
        {
            "category": "return",
            "name": "test_create",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_multiple_sessions@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": []
        },
        {
            "category": "return",
            "name": "test_create_multiple_sessions",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_no_env_extra_params@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mock_context_class",
            "type": [
                "str",
                "int",
                "None",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session_id",
            "type": [
                "dict[str, tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_username",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "expected_cli_data",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "fake_session_id",
            "type": [
                "dict[str, tuple[typing.Union[str,typing.Any]]]"
            ]
        },
        {
            "category": "local",
            "name": "expected_store",
            "type": [
                "dict[typing.Text, typing.Union[str,dict[str, tuple[typing.Union[str,typing.Any]]],dict[typing.Text, typing.Text]]]",
                "dict[typing.Text, typing.Union[str,dict[str, tuple[typing.Union[str,typing.Any]]],dict[typing.Text, typing.Text],app.utils.models.ModelManager]]"
            ]
        },
        {
            "category": "local",
            "name": "fake_username",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "return",
            "name": "test_create_no_env_extra_params",
            "type": [
                "None"
            ]
        }
    ],
    "test_default_store@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "sqlalchemy.orm.session.Session"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "sqlalchemy.orm.session.Session"
            ]
        },
        {
            "category": "local",
            "name": "expected_log_messages",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "STORE_LOGGER_NAME",
            "type": [
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "actual_log_messages",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_default_store",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_username_error@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": []
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "expected_log_messages",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "SESSION_LOGGER_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "actual_log_messages",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_get_username_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_git_describe@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "fake_commit_hash",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_git_status",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_commit_hash",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_git_status",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "expected_git_info",
            "type": [
                "dict[typing.Text, typing.Union[str,int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_git_describe",
            "type": [
                "None"
            ]
        }
    ],
    "test_git_describe_error@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "exception",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "exception",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "expected_log_message",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "SESSION_LOGGER_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "actual_log_messages",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_git_describe_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_config_loader_args@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "return",
            "name": "test_load_config_loader_args",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_config_loader_custom_config_loader_class@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": []
        },
        {
            "category": "return",
            "name": "test_load_config_loader_custom_config_loader_class",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_config_loader_with_envvar@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "eth.abc.AtomicDatabaseAPI",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "monkeypatch",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "monkeypatch",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "eth.abc.AtomicDatabaseAPI",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "return",
            "name": "test_load_config_loader_with_envvar",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_context_custom_context_class@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": []
        },
        {
            "category": "return",
            "name": "test_load_context_custom_context_class",
            "type": [
                "None"
            ]
        }
    ],
    "test_load_context_with_envvar@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "monkeypatch",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "return",
            "name": "test_load_context_with_envvar",
            "type": [
                "None"
            ]
        }
    ],
    "test_log_error@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "return",
            "name": "test_log_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_logging_is_not_reconfigure@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "caplog",
            "type": [
                "logging.Logger"
            ]
        },
        {
            "category": "local",
            "name": "mock_logging",
            "type": [
                "str",
                "list[dict[str, str]]"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "return",
            "name": "test_logging_is_not_reconfigure",
            "type": [
                "None"
            ]
        }
    ],
    "test_logging_rich_markup@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": []
        },
        {
            "category": "return",
            "name": "test_logging_rich_markup",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_DictConfig_in_store@global": [
        {
            "category": "arg",
            "name": "params",
            "type": [
                "pyramid.config.Configurator",
                "pymap.config.IMAPConfig"
            ]
        },
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "dict[str, typing.Any]",
                "blurr.store.dynamo_store.DynamoStore"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "pyramid.config.Configurator",
                "pymap.config.IMAPConfig"
            ]
        },
        {
            "category": "local",
            "name": "extra_params",
            "type": [
                "dict[str, typing.Any]",
                "dict[str, str]",
                "dict[str, list[str]]"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "dict[str, typing.Any]",
                "blurr.store.dynamo_store.DynamoStore"
            ]
        },
        {
            "category": "return",
            "name": "test_no_DictConfig_in_store",
            "type": [
                "None"
            ]
        }
    ],
    "test_run@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session_id",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_pipeline_name",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "mock_context_class",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "mock_runner",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_FAKE_PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_pipelines",
            "type": [
                "mock.mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_context_class",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "mock_runner_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "mock_runner",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_pipeline_name",
            "type": [
                "str",
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "fake_session_id",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "record_data",
            "type": [
                "dict[typing.Text, typing.Union[dict,dict[str, typing.Any],str,None,int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_run",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_broken_pipeline_multiple_times@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "str",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session_id",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "fake_pipeline_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mock_context_class",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "mock_runner",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_FAKE_PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_pipelines",
            "type": [
                "mock.mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_context_class",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "str",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "broken_runner",
            "type": [
                "mode.utils.mocks.Mock"
            ]
        },
        {
            "category": "local",
            "name": "broken_runner_",
            "type": [
                "typing.Text",
                "FakeException"
            ]
        },
        {
            "category": "local",
            "name": "error",
            "type": [
                "FakeException"
            ]
        },
        {
            "category": "local",
            "name": "fake_pipeline_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_session_id",
            "type": [
                "str",
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "record_data",
            "type": [
                "dict[typing.Text, typing.Union[str,dict,dict[str, typing.Any],None]]"
            ]
        },
        {
            "category": "return",
            "name": "test_run_broken_pipeline_multiple_times",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_exception@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session_id",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "fake_pipeline_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mock_context_class",
            "type": []
        },
        {
            "category": "arg",
            "name": "mock_runner",
            "type": []
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_FAKE_PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_pipelines",
            "type": [
                "mock.mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "error",
            "type": [
                "FakeException"
            ]
        },
        {
            "category": "local",
            "name": "mock_runner_",
            "type": [
                "FakeException"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "fake_pipeline_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_session_id",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "record_data",
            "type": [
                "dict[typing.Text, typing.Union[dict[str, typing.Any],None,dict,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_run_exception",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_multiple_times@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session_id",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "fake_pipeline_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mock_context_class",
            "type": []
        },
        {
            "category": "arg",
            "name": "mock_runner",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_FAKE_PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_pipelines",
            "type": [
                "mock.mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_runner",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_pipeline_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_session_id",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "record_data",
            "type": [
                "dict[typing.Text, typing.Union[str,dict[str, typing.Any],dict,None]]"
            ]
        },
        {
            "category": "return",
            "name": "test_run_multiple_times",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_non_existent_pipeline@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "mock_runner",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "mock_runner",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_run_non_existent_pipeline",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_thread_runner@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "str",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session_id",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "fake_pipeline_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mock_context_class",
            "type": []
        },
        {
            "category": "arg",
            "name": "mock_thread_runner",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str",
                "mock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "match_pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str",
                "mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "ds_mock",
            "type": [
                "mock.Mock",
                "mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "filter_mock",
            "type": [
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "_FAKE_PIPELINE_NAME",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pipelines_ret",
            "type": [
                "dict[str, mock.Mock]"
            ]
        },
        {
            "category": "local",
            "name": "match_pattern",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "str",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "mock_thread_runner",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_pipeline_name",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_session_id",
            "type": [
                "dict[str, typing.Any]",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "record_data",
            "type": [
                "dict[typing.Text, typing.Union[dict[str, typing.Any],str,dict,None]]"
            ]
        },
        {
            "category": "local",
            "name": "mock_pipeline",
            "type": [
                "logging.LogRecord",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_run_thread_runner",
            "type": [
                "None"
            ]
        }
    ],
    "test_session_raise_error_with_invalid_runner_instance@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "return",
            "name": "test_session_raise_error_with_invalid_runner_instance",
            "type": [
                "None"
            ]
        }
    ],
    "test_store_uncaught_error@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mock_settings_uncaught_session_store_exception",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "classpath",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "fake_project",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_settings_uncaught_session_store_exception",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_session_id",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_store_uncaught_error",
            "type": [
                "None"
            ]
        }
    ],
    "test_wrong_store_args@TestKedroSession": [
        {
            "category": "arg",
            "name": "fake_project",
            "type": []
        },
        {
            "category": "local",
            "name": "classpath",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_wrong_store_args",
            "type": [
                "None"
            ]
        }
    ],
    "test_wrong_store_type@TestKedroSession": [
        {
            "category": "arg",
            "name": "mock_settings_file_bad_session_store_class",
            "type": [
                "app.utils.models.ModelManager",
                "tuple[typing.Union[str,mock.Mock]]"
            ]
        },
        {
            "category": "local",
            "name": "pattern",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "mock_settings_file_bad_session_store_class",
            "type": [
                "app.utils.models.ModelManager",
                "tuple[typing.Union[str,mock.Mock]]"
            ]
        },
        {
            "category": "local",
            "name": "mock_settings",
            "type": [
                "_ProjectSettings"
            ]
        },
        {
            "category": "return",
            "name": "test_wrong_store_type",
            "type": [
                "None"
            ]
        }
    ]
}