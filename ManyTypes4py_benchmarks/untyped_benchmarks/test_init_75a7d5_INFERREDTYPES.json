{
    "_assert_entry@global": [
        {
            "category": "arg",
            "name": "entry",
            "type": [
                "str",
                "typing.Callable",
                "voluptuous.Schema",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "when",
            "type": [
                "None",
                "datetime",
                "list[\"ChangeSubscription\"]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "name",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "None",
                "str",
                "typing.Any",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "domain",
            "type": [
                "None",
                "str",
                "typing.Any",
                "dict[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "entity_id",
            "type": [
                "None",
                "str",
                "typing.Any"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "None",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "when",
            "type": [
                "None",
                "datetime",
                "list[\"ChangeSubscription\"]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "None",
                "str",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "None",
                "str",
                "typing.Any",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "domain",
            "type": [
                "None",
                "str",
                "typing.Any",
                "dict[str, str]"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "None",
                "str",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "state",
            "type": [
                "None",
                "str",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "_assert_entry",
            "type": [
                "None"
            ]
        }
    ],
    "_async_fetch_logbook@global": [
        {
            "category": "arg",
            "name": "client",
            "type": [
                "models.Credentials",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "params",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "dict",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "params",
            "type": [
                "None",
                "dict[str, typing.Any]",
                "dict",
                "str",
                "dict[str, str]",
                "dict[str, typing.Union[list,str]]",
                "dict[typing.Text, ]"
            ]
        },
        {
            "category": "local",
            "name": "start_date",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "models.Credentials",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "response",
            "type": [
                "typing.Generator[typing.Optional[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "_async_fetch_logbook",
            "type": [
                "models.Credentials",
                "allennlp.common.util.JsonDict",
                "str"
            ]
        }
    ],
    "_describe@global": [
        {
            "category": "arg",
            "name": "event",
            "type": []
        },
        {
            "category": "return",
            "name": "_describe",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        }
    ],
    "assert_entry@global": [
        {
            "category": "arg",
            "name": "entry",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "when",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "name",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "message",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "domain",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "entity_id",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "when",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "domain",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "None",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "assert_entry",
            "type": [
                "bool",
                "str"
            ]
        }
    ],
    "async_describe_events@MockLogbookPlatform": [
        {
            "category": "arg",
            "name": "hass",
            "type": []
        },
        {
            "category": "arg",
            "name": "async_describe_event",
            "type": []
        },
        {
            "category": "return",
            "name": "async_describe_events",
            "type": [
                "None"
            ]
        }
    ],
    "async_describe_events@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": []
        },
        {
            "category": "arg",
            "name": "async_describe_event",
            "type": []
        },
        {
            "category": "return",
            "name": "async_describe_events",
            "type": [
                "None"
            ]
        }
    ],
    "async_describe_test_event@MockLogbookPlatform": [
        {
            "category": "arg",
            "name": "event",
            "type": []
        },
        {
            "category": "return",
            "name": "async_describe_test_event",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        }
    ],
    "create_state_changed_event@global": [
        {
            "category": "arg",
            "name": "event_time_fired",
            "type": [
                "bool",
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "arg",
            "name": "entity_id",
            "type": [
                "datetime.datetime",
                "tuple[typing.Union[str,dict[str, str]]]",
                "typing.Any"
            ]
        },
        {
            "category": "arg",
            "name": "state",
            "type": [
                "str",
                "dict[str, typing.Any]",
                "datetime.date"
            ]
        },
        {
            "category": "arg",
            "name": "attributes",
            "type": [
                "None",
                "datetime.datetime",
                "tuple[typing.Union[str,dict[str, str]]]",
                "typing.Any"
            ]
        },
        {
            "category": "arg",
            "name": "last_changed",
            "type": [
                "None",
                "datetime.datetime",
                "tuple[typing.Union[str,dict[str, str]]]",
                "typing.Any"
            ]
        },
        {
            "category": "arg",
            "name": "last_reported",
            "type": [
                "None",
                "datetime.datetime",
                "tuple[typing.Union[str,dict[str, str]]]",
                "typing.Any"
            ]
        },
        {
            "category": "arg",
            "name": "last_updated",
            "type": [
                "None",
                "datetime.datetime",
                "tuple[typing.Union[str,dict[str, str]]]",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "old_state",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "new_state",
            "type": [
                "dict",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "datetime.datetime",
                "tuple[typing.Union[str,dict[str, str]]]",
                "typing.Any"
            ]
        },
        {
            "category": "local",
            "name": "event_time_fired",
            "type": [
                "bool",
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "return",
            "name": "create_state_changed_event",
            "type": [
                "str",
                "None",
                "models.RefreshToken",
                "asyncio.Future"
            ]
        }
    ],
    "create_state_changed_event_from_old_new@global": [
        {
            "category": "arg",
            "name": "entity_id",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "event_time_fired",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "old_state",
            "type": [
                "float",
                "helpers.Endpoint",
                "list[typing.Any]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "new_state",
            "type": []
        },
        {
            "category": "local",
            "name": "event_time_fired",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "row",
            "type": [
                "EventAsRow"
            ]
        },
        {
            "category": "return",
            "name": "create_state_changed_event_from_old_new",
            "type": [
                "LazyEventPartialState"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "EMPTY_CONFIG",
            "type": [
                "dict[str, dict[str, str]]",
                "dict[str, dict[str, typing.Any]]",
                "dict[str, str]"
            ]
        }
    ],
    "hass_@global": [
        {
            "category": "arg",
            "name": "recorder_mock",
            "type": [
                "set"
            ]
        },
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "list[dict[str, typing.Any]]",
                "homeassistancore.HomeAssistant",
                "list[dict]"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "list[dict[str, typing.Any]]",
                "homeassistancore.HomeAssistant",
                "list[dict]"
            ]
        },
        {
            "category": "return",
            "name": "hass_",
            "type": [
                "list[dict[str, typing.Any]]",
                "homeassistancore.HomeAssistant",
                "list[dict]"
            ]
        }
    ],
    "set_utc@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "set_utc",
            "type": [
                "None"
            ]
        }
    ],
    "test_context_filter@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "entries",
            "type": [
                "list"
            ]
        },
        {
            "category": "local",
            "name": "response",
            "type": [
                "requests.models.Response",
                "dict",
                "dict[str, list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_context_filter",
            "type": [
                "None"
            ]
        }
    ],
    "test_custom_log_entry_discoverable_via_@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "float",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_custom_log_entry_discoverable_via_",
            "type": [
                "None"
            ]
        }
    ],
    "test_empty_config@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_empty_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_exclude_attribute_changes@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "return",
            "name": "test_exclude_attribute_changes",
            "type": [
                "None"
            ]
        }
    ],
    "test_exclude_described_event@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id3",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_exclude_described_event",
            "type": [
                "None"
            ]
        }
    ],
    "test_exclude_events_domain@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_exclude_events_domain",
            "type": [
                "None"
            ]
        }
    ],
    "test_exclude_events_domain_glob@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id3",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_exclude_events_domain_glob",
            "type": [
                "None"
            ]
        }
    ],
    "test_exclude_events_entity@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_exclude_events_entity",
            "type": [
                "None"
            ]
        }
    ],
    "test_exclude_new_entities@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "return",
            "name": "test_exclude_new_entities",
            "type": [
                "None"
            ]
        }
    ],
    "test_exclude_removed_entities@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "return",
            "name": "test_exclude_removed_entities",
            "type": [
                "None"
            ]
        }
    ],
    "test_filter_continuous_sensor_values@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_second",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_third",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_proximity",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_counter",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "return",
            "name": "test_filter_continuous_sensor_values",
            "type": [
                "None"
            ]
        }
    ],
    "test_filter_sensor@global": [
        {
            "category": "arg",
            "name": "hass_",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "hass_",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "entity_id1",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "attributes_1",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "attributes_2",
            "type": [
                "dict[, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "attributes_3",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "attributes_4",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_filter_sensor",
            "type": [
                "None"
            ]
        }
    ],
    "test_fire_logbook_entries@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "response_json",
            "type": [
                "list",
                "dict[str, list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_fire_logbook_entries",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_events@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_ws_client",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_get_events",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_events_bad_end_time@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "arg",
            "name": "hass_ws_client",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "return",
            "name": "test_get_events_bad_end_time",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_events_bad_start_time@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "arg",
            "name": "hass_ws_client",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "response",
            "type": [
                "dict",
                "list",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_events_bad_start_time",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_events_future_start_time@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_ws_client",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "future",
            "type": [
                "datetime.datetime",
                "datetime.timedelta"
            ]
        },
        {
            "category": "return",
            "name": "test_get_events_future_start_time",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_events_invalid_filters@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "arg",
            "name": "hass_ws_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "return",
            "name": "test_get_events_invalid_filters",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_events_with_context_state@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_ws_client",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_get_events_with_context_state",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_events_with_device_ids@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_ws_client",
            "type": [
                "homeassistancore.HomeAssistant",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "device_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "str",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entry",
            "type": [
                "MockConfigEntry"
            ]
        },
        {
            "category": "local",
            "name": "device_registry",
            "type": [
                "str",
                "homeassistancore.HomeAssistant",
                "typing.Iterable[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_get_events_with_device_ids",
            "type": [
                "None"
            ]
        }
    ],
    "test_home_assistant_start@global": [
        {
            "category": "arg",
            "name": "hass_",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass_",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entries",
            "type": [
                "list",
                "list[passzero.models.entries.Entry]",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_home_assistant_start",
            "type": [
                "None"
            ]
        }
    ],
    "test_home_assistant_start_stop_not_grouped@global": [
        {
            "category": "arg",
            "name": "hass_",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass_",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entries",
            "type": [
                "list",
                "tuple[int]",
                "list[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_home_assistant_start_stop_not_grouped",
            "type": [
                "None"
            ]
        }
    ],
    "test_icon_and_state@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "response_json",
            "type": [
                "dict[str, typing.Union[int,str]]",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_icon_and_state",
            "type": [
                "None"
            ]
        }
    ],
    "test_include_events_domain@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_include_events_domain",
            "type": [
                "None"
            ]
        }
    ],
    "test_include_events_domain_glob@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id3",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_include_events_domain_glob",
            "type": [
                "None"
            ]
        }
    ],
    "test_include_events_entity@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_include_events_entity",
            "type": [
                "None"
            ]
        }
    ],
    "test_include_exclude_events_no_globs@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id3",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id4",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_include_exclude_events_no_globs",
            "type": [
                "None"
            ]
        }
    ],
    "test_include_exclude_events_with_glob_filters@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id2",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id3",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id4",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id5",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id6",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_include_exclude_events_with_glob_filters",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "float",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_context_from_template@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "common.ComponentFactory",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "common.ComponentFactory",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_context_from_template",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_context_id_automation_script_started_manually@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "automation_entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_context_id_automation_script_started_manually",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_describe_event@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_describe_event",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_entity_context_id@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "automation_entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_second",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_entity_context_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_entity_context_parent_id@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "automation_entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_second",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_entity_context_parent_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_entity_filter_with_automations@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_second",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_entity_filter_with_automations",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_entity_no_longer_in_state_machine@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_entity_no_longer_in_state_machine",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_invalid_entity@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "float",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_invalid_entity",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_many_entities_multiple_calls@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_many_entities_multiple_calls",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_multiple_entities@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "datetime.time",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_multiple_entities",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_select_entities_context_id@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "comp",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "automation_entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_second",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_third",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "datetime.date",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_select_entities_context_id",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_view@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.async_mock.Mock",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_view",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_view_end_time_entity@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.async_mock.Mock",
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_second",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime",
                "datetime.date"
            ]
        },
        {
            "category": "local",
            "name": "end_time",
            "type": [
                "datetime.datetime",
                "str",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_view_end_time_entity",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_view_invalid_end_date_time@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "common.ComponentFactory",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "common.ComponentFactory",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_view_invalid_end_date_time",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_view_invalid_start_date_time@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.test_util.aiohttp.AiohttpClientMocker",
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant",
                "tests.async_mock.Mock",
                "common.ComponentFactory"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "response",
            "type": [
                "requests.models.Response",
                "dict[str, str]"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_view_invalid_start_date_time",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_view_period_entity@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "arg",
            "name": "hass_client",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant",
                "tests.test_util.aiohttp.AiohttpClientMocker"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "tests.async_mock.Mock",
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_test",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id_second",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "start",
            "type": [
                "datetime.datetime.datetime",
                "datetime.timedelta",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "response",
            "type": [
                "requests.models.Response",
                "typing.Generator[typing.Optional[typing.Any]]",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "response_json",
            "type": [
                "requests.models.Response",
                "str",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_view_period_entity",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_with_empty_config@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_with_empty_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_logbook_with_non_iterable_entity_filter@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_logbook_with_non_iterable_entity_filter",
            "type": [
                "None"
            ]
        }
    ],
    "test_process_custom_logbook_entries@global": [
        {
            "category": "arg",
            "name": "hass_",
            "type": []
        },
        {
            "category": "local",
            "name": "name",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "message",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "entity_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_process_custom_logbook_entries",
            "type": [
                "None"
            ]
        }
    ],
    "test_service_call_create_log_book_entry_no_message@global": [
        {
            "category": "arg",
            "name": "hass_",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass_",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "return",
            "name": "test_service_call_create_log_book_entry_no_message",
            "type": [
                "None"
            ]
        }
    ],
    "test_service_call_create_logbook_entry@global": [
        {
            "category": "arg",
            "name": "hass_",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass_",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "event_processor",
            "type": [
                "EventProcessor"
            ]
        },
        {
            "category": "local",
            "name": "events",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_service_call_create_logbook_entry",
            "type": [
                "None"
            ]
        }
    ],
    "test_service_call_create_logbook_entry_invalid_entity_id@global": [
        {
            "category": "arg",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "hass",
            "type": [
                "homeassistancore.HomeAssistant"
            ]
        },
        {
            "category": "local",
            "name": "event_processor",
            "type": [
                "EventProcessor"
            ]
        },
        {
            "category": "local",
            "name": "events",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_service_call_create_logbook_entry_invalid_entity_id",
            "type": [
                "None"
            ]
        }
    ]
}