{
    "_maybe_repeat@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "index",
            "type": [
                "list",
                "slice"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "list",
                "slice",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list",
                "list[str]",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_maybe_repeat",
            "type": [
                "list",
                "list[str]",
                "bool"
            ]
        }
    ],
    "_sanitize_ndim@global": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "str",
                "bool",
                "numpy.ndarray",
                "numpy.void"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "int",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "numpy.dtype",
                "None",
                "Series"
            ]
        },
        {
            "category": "arg",
            "name": "index",
            "type": [
                "int",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "arg",
            "name": "allow_2d",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "str",
                "bool",
                "numpy.ndarray",
                "numpy.void",
                "list",
                "dict[str, typing.Any]",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "int",
                "str",
                "numpy.ndarray"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "int",
                "numpy.ndarray",
                "np_@_ndarray"
            ]
        },
        {
            "category": "local",
            "name": "allow_2d",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "_sanitize_ndim",
            "type": [
                "str",
                "bool",
                "numpy.ndarray",
                "numpy.void",
                "list",
                "dict[str, typing.Any]",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "numpy.dtype",
                "None",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "dict",
                "typing.ClassVar",
                "str"
            ]
        }
    ],
    "_sanitize_non_ordered@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "dict",
                "dict[str, typing.Any]",
                "tuple[typing.Literal]"
            ]
        },
        {
            "category": "return",
            "name": "_sanitize_non_ordered",
            "type": [
                "None"
            ]
        }
    ],
    "_sanitize_str_dtypes@global": [
        {
            "category": "arg",
            "name": "result",
            "type": [
                "numpy.ndarray",
                "bool",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.dtype",
                "bool",
                "static_frame.core.util.DtypeSpecifier"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "typing.Mapping"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool",
                "numpy.ndarray",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.dtype",
                "bool",
                "static_frame.core.util.DtypeSpecifier"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "typing.Mapping"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool",
                "numpy.ndarray",
                "Series"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "numpy.ndarray",
                "bool",
                "typing.Mapping"
            ]
        },
        {
            "category": "return",
            "name": "_sanitize_str_dtypes",
            "type": [
                "numpy.ndarray",
                "bool",
                "typing.Mapping"
            ]
        }
    ],
    "_try_cast@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "list[int]",
                "numpy.dtype"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list[int]",
                "numpy.dtype"
            ]
        },
        {
            "category": "local",
            "name": "is_ndarray",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "bool",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "subarr",
            "type": [
                "list",
                "int",
                "typing.Callable[None, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "_try_cast",
            "type": [
                "list",
                "int",
                "typing.Callable[None, typing.Any]",
                "typing.Callable",
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "shape",
            "type": [
                "tuple[int]"
            ]
        }
    ],
    "array@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bool",
                "static_frame.core.util.IndexConstructor",
                "static_frame.core.util.IndexInitializer",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "None",
                "static_frame.core.util.GetItemKeyType",
                "bool",
                "static_frame.core.util.IndexInitializer"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bool",
                "static_frame.core.util.IndexConstructor",
                "static_frame.core.util.IndexInitializer",
                "None",
                "ABCDataFrame",
                "str",
                "bytearray",
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "None",
                "static_frame.core.util.GetItemKeyType",
                "bool",
                "static_frame.core.util.IndexInitializer",
                "list[typing.Any]",
                "str",
                "pandas.core.dtypes.dtypes.CategoricalDtype",
                "StringDtype"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "array",
            "type": [
                "numpy.ndarray",
                "int",
                "typing.Callable",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "was_ndarray",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "np_@_ndarray",
                "dict",
                "Anaconda3.Lib.site-packages.IPython.core.interactiveshell.ExecutionResult",
                "typing.Generator[typing.Optional[tuple[typing.Any]]]"
            ]
        }
    ],
    "ensure_wrapped_if_datetimelike@global": [
        {
            "category": "arg",
            "name": "arr",
            "type": [
                "numpy.ndarray",
                "list",
                "pandas.Series"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "numpy.ndarray",
                "list",
                "pandas.Series",
                "np_@_ndarray"
            ]
        },
        {
            "category": "return",
            "name": "ensure_wrapped_if_datetimelike",
            "type": [
                "numpy.ndarray",
                "list",
                "pandas.Series",
                "np_@_ndarray"
            ]
        }
    ],
    "extract_array@global": [
        {
            "category": "arg",
            "name": "obj",
            "type": [
                "bool",
                "dict",
                "tuple[typing.Union[str,...]]",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "extract_numpy",
            "type": [
                "bool",
                "typing.IO",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "extract_range",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "extract_array",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "_typs",
            "type": [
                "set[typing.Text]"
            ]
        }
    ],
    "range_to_ndarray@global": [
        {
            "category": "arg",
            "name": "rng",
            "type": [
                "numpy.ndarray",
                "numpy.random.RandomState",
                "pymatgen.core.structure.Structure"
            ]
        },
        {
            "category": "local",
            "name": "rng",
            "type": [
                "numpy.ndarray",
                "numpy.random.RandomState",
                "pymatgen.core.structure.Structure"
            ]
        },
        {
            "category": "local",
            "name": "arr",
            "type": [
                "list[int]",
                "list",
                "list[list[int]]"
            ]
        },
        {
            "category": "return",
            "name": "range_to_ndarray",
            "type": []
        }
    ],
    "sanitize_array@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "bool",
                "numpy.ndarray",
                "numpy.dtype"
            ]
        },
        {
            "category": "arg",
            "name": "index",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]",
                "numpy.dtype"
            ]
        },
        {
            "category": "arg",
            "name": "dtype",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "allow_2d",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "dtype",
            "type": [
                "None",
                "bool",
                "NumpyEADtype",
                "str",
                "dict[int, str]",
                "StringDtype",
                "ExtensionDtype"
            ]
        },
        {
            "category": "local",
            "name": "original_dtype",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "bool",
                "numpy.ndarray",
                "numpy.dtype",
                "ma_@_MaskedArray",
                "typing.Type",
                "typing.OrderedDict",
                "property",
                "range"
            ]
        },
        {
            "category": "local",
            "name": "infer_object",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "copy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "index",
            "type": [
                "bool",
                "typing.Iterable[typing.Any]",
                "numpy.dtype",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "sanitize_array",
            "type": [
                "numpy.ndarray",
                "typing.Type",
                "typing.IO"
            ]
        },
        {
            "category": "local",
            "name": "subarr",
            "type": [
                "dict",
                "int",
                "list[typing.Callable[None,None, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "cls",
            "type": [
                "typing.Type",
                "dict",
                "dict[int, int]"
            ]
        },
        {
            "category": "local",
            "name": "allow_2d",
            "type": [
                "bool"
            ]
        }
    ],
    "sanitize_masked_array@global": [
        {
            "category": "arg",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "pandas.DataFrame"
            ]
        },
        {
            "category": "local",
            "name": "data",
            "type": [
                "numpy.ndarray",
                "pandas.DataFrame",
                "str",
                "dict",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "sanitize_masked_array",
            "type": [
                "str",
                "dict",
                "list"
            ]
        }
    ]
}