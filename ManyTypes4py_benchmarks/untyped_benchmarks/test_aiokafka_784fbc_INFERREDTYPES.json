{
    "REPLACE_WITH_MEMBER_ID@test_AIOKafkaConsumerThread": [
        {
            "category": "local",
            "name": "got_baz",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "REPLACE_WITH_MEMBER_ID",
            "type": [
                "None"
            ]
        }
    ],
    "_configure@test_VEP_no_commit": [
        {
            "category": "arg",
            "name": "now",
            "type": [
                "bool",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "_configure",
            "type": [
                "None"
            ]
        }
    ],
    "_consumer@AIOKafkaConsumerThreadFixtures": [
        {
            "category": "return",
            "name": "_consumer",
            "type": [
                "Mock"
            ]
        }
    ],
    "_producer@test_Producer": [
        {
            "category": "return",
            "name": "_producer",
            "type": [
                "Mock"
            ]
        }
    ],
    "_set_last_commit@test_verify_event_path_base": [
        {
            "category": "arg",
            "name": "commit_time",
            "type": [
                "float",
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "commit_time",
            "type": [
                "float",
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "_set_last_commit",
            "type": [
                "None"
            ]
        }
    ],
    "_set_last_request@test_verify_event_path_base": [
        {
            "category": "arg",
            "name": "last_request",
            "type": []
        },
        {
            "category": "return",
            "name": "_set_last_request",
            "type": [
                "None"
            ]
        }
    ],
    "_set_last_response@test_verify_event_path_base": [
        {
            "category": "arg",
            "name": "last_response",
            "type": [
                "bool",
                "list[dict[str, typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "last_response",
            "type": [
                "bool",
                "list[dict[str, typing.Any]]",
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "_set_last_response",
            "type": [
                "None"
            ]
        }
    ],
    "_set_started@test_verify_event_path_base": [
        {
            "category": "arg",
            "name": "t",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "t",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "self_",
            "type": [
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "return",
            "name": "_set_started",
            "type": [
                "None"
            ]
        }
    ],
    "_set_stream_inbound@test_verify_event_path_base": [
        {
            "category": "arg",
            "name": "inbound_time",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "inbound_time",
            "type": [
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "_set_stream_inbound",
            "type": [
                "None"
            ]
        }
    ],
    "aaaa_setup_attributes@test_verify_event_path_base": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "concurrenfutures.Future"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "int",
                "concurrenfutures.Future"
            ]
        },
        {
            "category": "arg",
            "name": "aiotp",
            "type": [
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_app",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "int",
                "concurrenfutures.Future"
            ]
        },
        {
            "category": "local",
            "name": "_tp",
            "type": [
                "int",
                "concurrenfutures.Future"
            ]
        },
        {
            "category": "local",
            "name": "aiotp",
            "type": [
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_aiotp",
            "type": [
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "concurrenfutures.Future"
            ]
        },
        {
            "category": "local",
            "name": "_now",
            "type": [
                "concurrenfutures.Future"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_cthread",
            "type": [
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_consumer",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "__consumer",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "aaaa_setup_attributes",
            "type": [
                "None"
            ]
        }
    ],
    "aiotp@AIOKafkaConsumerThreadFixtures": [
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "faustypes.tuples.TP",
                "mypy.types.Type",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "faustypes.tuples.TP",
                "mypy.types.Type",
                "T"
            ]
        },
        {
            "category": "return",
            "name": "aiotp",
            "type": [
                "TopicPartition"
            ]
        }
    ],
    "assert_calls_thread@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "typing.Callable",
                "frozenset",
                "mode.Service.T"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": [
                "typing.Callable",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "method",
            "type": []
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "local",
            "name": "_consumer",
            "type": [
                "typing.Callable",
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "typing.Callable",
                "list[str]",
                "str",
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "assert_calls_thread",
            "type": [
                "typing.Generator"
            ]
        }
    ],
    "assert_create_worker_consumer@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int",
                "itsim.types.Protocol",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "in_transaction",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "isolation_level",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "api_version",
            "type": [
                "None",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "int",
                "itsim.types.Protocol",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "in_transaction",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "isolation_level",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "assert_create_worker_consumer",
            "type": [
                "None"
            ]
        }
    ],
    "assert_new_producer@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "acks",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "api_version",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "bootstrap_servers",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "arg",
            "name": "client_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "compression_type",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "linger_ms",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "max_batch_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "max_request_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "request_timeout_ms",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "security_protocol",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "p",
            "type": [
                "set"
            ]
        },
        {
            "category": "local",
            "name": "acks",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "api_version",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "bootstrap_servers",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "client_id",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "compression_type",
            "type": [
                "None",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "linger_ms",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "max_batch_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "max_request_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "request_timeout_ms",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "security_protocol",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "assert_new_producer",
            "type": [
                "None"
            ]
        }
    ],
    "assert_setup_lazy_spans@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "tracer",
            "type": [
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "expect_lazy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "got_foo",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "got_bar",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "got_baz",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "bool",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "expect_lazy",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "assert_setup_lazy_spans",
            "type": [
                "None"
            ]
        }
    ],
    "bar@test_AIOKafkaConsumerThread": [
        {
            "category": "local",
            "name": "got_bar",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "bar",
            "type": [
                "None"
            ]
        }
    ],
    "callback@global": [
        {
            "category": "return",
            "name": "callback",
            "type": [
                "Mock"
            ]
        }
    ],
    "callback@test_Consumer": [
        {
            "category": "return",
            "name": "callback",
            "type": [
                "Mock"
            ]
        }
    ],
    "consumer@global": [
        {
            "category": "arg",
            "name": "thread",
            "type": [
                "collections.abc.Awaitable",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "arg",
            "name": "callback",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "arg",
            "name": "on_partitions_revoked",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "arg",
            "name": "on_partitions_assigned",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "callback",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "on_partitions_revoked",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "on_partitions_assigned",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "Consumer"
            ]
        },
        {
            "category": "local",
            "name": "thread",
            "type": [
                "collections.abc.Awaitable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "collections.abc.Awaitable",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "consumer",
            "type": [
                "Consumer"
            ]
        }
    ],
    "consumer@test_Consumer": [
        {
            "category": "arg",
            "name": "thread",
            "type": [
                "collections.abc.Awaitable",
                "bool"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "arg",
            "name": "callback",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "arg",
            "name": "on_partitions_revoked",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "arg",
            "name": "on_partitions_assigned",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "callback",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "on_partitions_revoked",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "on_partitions_assigned",
            "type": [
                "bool",
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "Consumer"
            ]
        },
        {
            "category": "local",
            "name": "thread",
            "type": [
                "collections.abc.Awaitable",
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "collections.abc.Awaitable",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "consumer",
            "type": [
                "Consumer"
            ]
        }
    ],
    "cthread@AIOKafkaConsumerThreadFixtures": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "list[confluent_kafka.TopicPartition]",
                "aiokafka.AIOKafkaConsumer"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "list[confluent_kafka.TopicPartition]",
                "aiokafka.AIOKafkaConsumer"
            ]
        },
        {
            "category": "return",
            "name": "cthread",
            "type": [
                "AIOKafkaConsumerThread"
            ]
        }
    ],
    "foo@test_AIOKafkaConsumerThread": [
        {
            "category": "local",
            "name": "got_foo",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "foo",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "TP",
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "TP",
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "TESTED_MODULE",
            "type": [
                "typing.Text",
                "list[str]",
                "str",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "my_partitioner",
            "type": [
                "MyPartitioner"
            ]
        }
    ],
    "handler@test_ConsumerRebalanceListener": [
        {
            "category": "arg",
            "name": "thread",
            "type": [
                "list",
                "str",
                "None",
                "collections.abc.Coroutine"
            ]
        },
        {
            "category": "local",
            "name": "thread",
            "type": [
                "list",
                "str",
                "None",
                "collections.abc.Coroutine"
            ]
        },
        {
            "category": "return",
            "name": "handler",
            "type": [
                "ConsumerRebalanceListener"
            ]
        }
    ],
    "logger@AIOKafkaConsumerThreadFixtures": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "mock.Mock",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "logger",
            "type": [
                "Mock"
            ]
        }
    ],
    "mock_record@test_Consumer": [
        {
            "category": "arg",
            "name": "topic",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "arg",
            "name": "partition",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "offset",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "timestamp",
            "type": [
                "None",
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "timestamp_type",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "headers",
            "type": [
                "None",
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "key",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "value",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "arg",
            "name": "checksum",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "serialized_key_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "serialized_value_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "topic",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "partition",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "offset",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "timestamp",
            "type": [
                "None",
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "timestamp_type",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "headers",
            "type": [
                "None",
                "str",
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "key",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "value",
            "type": [
                "bytes"
            ]
        },
        {
            "category": "local",
            "name": "checksum",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "serialized_key_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "serialized_value_size",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "mock_record",
            "type": [
                "Mock"
            ]
        }
    ],
    "now@AIOKafkaConsumerThreadFixtures": [
        {
            "category": "return",
            "name": "now",
            "type": [
                "int"
            ]
        }
    ],
    "on_partitions_assigned@global": [
        {
            "category": "return",
            "name": "on_partitions_assigned",
            "type": [
                "Mock"
            ]
        }
    ],
    "on_partitions_assigned@test_Consumer": [
        {
            "category": "return",
            "name": "on_partitions_assigned",
            "type": [
                "Mock"
            ]
        }
    ],
    "on_partitions_revoked@global": [
        {
            "category": "return",
            "name": "on_partitions_revoked",
            "type": [
                "Mock"
            ]
        }
    ],
    "on_partitions_revoked@test_Consumer": [
        {
            "category": "return",
            "name": "on_partitions_revoked",
            "type": [
                "Mock"
            ]
        }
    ],
    "producer@test_Producer": [
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": [
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "Producer"
            ]
        },
        {
            "category": "local",
            "name": "_producer",
            "type": [
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "local",
            "name": "producer_",
            "type": [
                "list[confluent_kafka.TopicPartition]"
            ]
        },
        {
            "category": "return",
            "name": "producer",
            "type": [
                "Producer"
            ]
        }
    ],
    "setup_consumer@test_verify_event_path_base": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int",
                "collections.abc.Coroutine"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "int",
                "concurrenfutures.Future"
            ]
        },
        {
            "category": "arg",
            "name": "aiotp",
            "type": [
                "typing.Callable",
                "float",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "Mock",
                "None",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "_consumer",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "str",
                "int",
                "Mock",
                "unittesmock.Mock",
                "dict[typing.Union[int,concurrenfutures.Future], ]",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "_consumer_",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "last_request",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "last_response",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "highwater",
            "type": [
                "int",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "int",
                "concurrenfutures.Future"
            ]
        },
        {
            "category": "return",
            "name": "setup_consumer",
            "type": [
                "None"
            ]
        }
    ],
    "start_span@AIOKafkaConsumerThreadFixtures": [
        {
            "category": "arg",
            "name": "operation_name",
            "type": [
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "local",
            "name": "operation_name",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "start_span",
            "type": []
        }
    ],
    "test__commit@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "offsets",
            "type": [
                "dict[typing.Union[str,typing.Callable,int], int]"
            ]
        },
        {
            "category": "return",
            "name": "test__commit",
            "type": [
                "None"
            ]
        }
    ],
    "test__commit__CommitFailedError@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "CommitFailedError"
            ]
        },
        {
            "category": "local",
            "name": "_consumer_",
            "type": [
                "CommitFailedError"
            ]
        },
        {
            "category": "return",
            "name": "test__commit__CommitFailedError",
            "type": [
                "None"
            ]
        }
    ],
    "test__commit__IllegalStateError@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "IllegalStateError"
            ]
        },
        {
            "category": "local",
            "name": "_consumer_",
            "type": [
                "IllegalStateError"
            ]
        },
        {
            "category": "return",
            "name": "test__commit__IllegalStateError",
            "type": [
                "None"
            ]
        }
    ],
    "test__commit__already_rebalancing@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "_consumer_",
            "type": [
                "CommitFailedError"
            ]
        },
        {
            "category": "return",
            "name": "test__commit__already_rebalancing",
            "type": [
                "None"
            ]
        }
    ],
    "test__create_client_consumer@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test__create_client_consumer",
            "type": [
                "None"
            ]
        }
    ],
    "test__create_consumer__client@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "c",
            "type": [
                "set",
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test__create_consumer__client",
            "type": [
                "None"
            ]
        }
    ],
    "test__create_consumer__worker@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "loop",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test__create_consumer__worker",
            "type": [
                "None"
            ]
        }
    ],
    "test__create_topic@test_Transport": [
        {
            "category": "arg",
            "name": "transport",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "transport",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test__create_topic",
            "type": [
                "None"
            ]
        }
    ],
    "test__create_topic__missing@test_Transport": [
        {
            "category": "arg",
            "name": "transport",
            "type": [
                "Transport"
            ]
        },
        {
            "category": "arg",
            "name": "loop",
            "type": []
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "SW_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "transport",
            "type": [
                "Transport"
            ]
        },
        {
            "category": "return",
            "name": "test__create_topic__missing",
            "type": [
                "None"
            ]
        }
    ],
    "test__create_topic__raises@test_Transport": [
        {
            "category": "arg",
            "name": "transport",
            "type": [
                "Transport"
            ]
        },
        {
            "category": "arg",
            "name": "loop",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "client",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "SW_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "transport",
            "type": [
                "Transport"
            ]
        },
        {
            "category": "return",
            "name": "test__create_topic__raises",
            "type": [
                "None"
            ]
        }
    ],
    "test__create_worker_consumer@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "return",
            "name": "test__create_worker_consumer",
            "type": [
                "None"
            ]
        }
    ],
    "test__create_worker_consumer__transaction@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "return",
            "name": "test__create_worker_consumer__transaction",
            "type": [
                "None"
            ]
        }
    ],
    "test__ensure_consumer@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test__ensure_consumer",
            "type": [
                "None"
            ]
        }
    ],
    "test__ensure_producer@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": []
        },
        {
            "category": "local",
            "name": "producer_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test__ensure_producer",
            "type": [
                "None"
            ]
        }
    ],
    "test__fetch_records@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "_consumer_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "fetcher_",
            "type": [
                "bool",
                "MagicMock",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test__fetch_records",
            "type": [
                "None"
            ]
        }
    ],
    "test__fetch_records__flow_inactive@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test__fetch_records__flow_inactive",
            "type": [
                "None"
            ]
        }
    ],
    "test__fetch_records_consumer_closed@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "_consumer_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test__fetch_records_consumer_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test__fetch_records_fetcher_closed@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "_consumer_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test__fetch_records_fetcher_closed",
            "type": [
                "None"
            ]
        }
    ],
    "test__highwaters@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test__highwaters",
            "type": [
                "None"
            ]
        }
    ],
    "test__highwaters__in_transaction@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test__highwaters__in_transaction",
            "type": [
                "None"
            ]
        }
    ],
    "test__new_producer@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test__new_producer",
            "type": [
                "None"
            ]
        }
    ],
    "test__new_producer__default@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "return",
            "name": "test__new_producer__default",
            "type": [
                "None"
            ]
        }
    ],
    "test__new_producer__in_transaction@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "local",
            "name": "producer_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test__new_producer__in_transaction",
            "type": [
                "None"
            ]
        }
    ],
    "test__new_producer__using_settings@test_Producer": [
        {
            "category": "arg",
            "name": "expected_args",
            "type": [
                "typing.Type",
                "typing.Callable",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "typing.Type",
                "typing.Callable",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "typing.Type",
                "typing.Callable",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "expected_args",
            "type": [
                "typing.Type",
                "typing.Callable",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test__new_producer__using_settings",
            "type": [
                "None"
            ]
        }
    ],
    "test__new_topicpartition@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": []
        },
        {
            "category": "return",
            "name": "test__new_topicpartition",
            "type": [
                "None"
            ]
        }
    ],
    "test__on_irrecoverable_error@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "exc",
            "type": [
                "KeyError",
                "werkzeug.exceptions.BadRequest",
                "RuntimeError"
            ]
        },
        {
            "category": "local",
            "name": "producer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "None",
                "Mock",
                "AsyncMock"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test__on_irrecoverable_error",
            "type": [
                "None"
            ]
        }
    ],
    "test__producer_type@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test__producer_type",
            "type": [
                "None"
            ]
        }
    ],
    "test__seek_wait@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "partitions",
            "type": [
                "dict[typing.Union[str,typing.Callable,int], int]"
            ]
        },
        {
            "category": "return",
            "name": "test__seek_wait",
            "type": [
                "None"
            ]
        }
    ],
    "test__seek_wait__empty@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "return",
            "name": "test__seek_wait__empty",
            "type": [
                "None"
            ]
        }
    ],
    "test__settings_extra@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test__settings_extra",
            "type": [
                "None"
            ]
        }
    ],
    "test__start_span@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "local",
            "name": "TESTED_MODULE",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test__start_span",
            "type": [
                "None"
            ]
        }
    ],
    "test__start_span__no_tracer@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test__start_span__no_tracer",
            "type": [
                "None"
            ]
        }
    ],
    "test__to_message@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "str",
                "utils.clienClient",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "record",
            "type": [
                "tuple[tuple[typing.Union[typing.Literal,typing.Any]]]",
                "list[typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "str",
                "utils.clienClient",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "int",
                "str",
                "typing.Match",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test__to_message",
            "type": [
                "None"
            ]
        }
    ],
    "test__to_message__no_timestamp@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "record",
            "type": [
                "list",
                "list[tuple[typing.Union[str,bytes]]]"
            ]
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "m",
            "type": [
                "typing.Match",
                "None",
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test__to_message__no_timestamp",
            "type": [
                "None"
            ]
        }
    ],
    "test__topic_config@test_Transport": [
        {
            "category": "arg",
            "name": "transport",
            "type": [
                "confluent_kafka.Consumer"
            ]
        },
        {
            "category": "return",
            "name": "test__topic_config",
            "type": [
                "None"
            ]
        }
    ],
    "test__topic_config__combined@test_Transport": [
        {
            "category": "arg",
            "name": "transport",
            "type": [
                "producer.Producer",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "transport",
            "type": [
                "producer.Producer",
                "typing.Callable"
            ]
        },
        {
            "category": "local",
            "name": "res",
            "type": [
                "dict[str, typing.Any]",
                "None",
                "types.RecordMetadata",
                "\"Texte\""
            ]
        },
        {
            "category": "return",
            "name": "test__topic_config__combined",
            "type": [
                "None"
            ]
        }
    ],
    "test__topic_config__compacting@test_Transport": [
        {
            "category": "arg",
            "name": "transport",
            "type": [
                "producer.Producer",
                "confluent_kafka.Consumer",
                "set[faustypes.tuples.TP]"
            ]
        },
        {
            "category": "return",
            "name": "test__topic_config__compacting",
            "type": [
                "None"
            ]
        }
    ],
    "test__topic_config__deleting@test_Transport": [
        {
            "category": "arg",
            "name": "transport",
            "type": [
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test__topic_config__deleting",
            "type": [
                "None"
            ]
        }
    ],
    "test__topic_config__retention@test_Transport": [
        {
            "category": "arg",
            "name": "transport",
            "type": [
                "raiden.utils.PrivateKey",
                "producer.Producer"
            ]
        },
        {
            "category": "return",
            "name": "test__topic_config__retention",
            "type": [
                "None"
            ]
        }
    ],
    "test_abort_transaction@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": []
        },
        {
            "category": "return",
            "name": "test_abort_transaction",
            "type": [
                "None"
            ]
        }
    ],
    "test_assignment@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "_consumer_",
            "type": [
                "set[TopicPartition]"
            ]
        },
        {
            "category": "return",
            "name": "test_assignment",
            "type": [
                "None"
            ]
        }
    ],
    "test_begin_transaction@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": []
        },
        {
            "category": "return",
            "name": "test_begin_transaction",
            "type": [
                "None"
            ]
        }
    ],
    "test_close@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "return",
            "name": "test_close",
            "type": [
                "None"
            ]
        }
    ],
    "test_close__no_consumer@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_close__no_consumer",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "offsets",
            "type": [
                "dict[typing.Union[str,typing.Callable,int], int]"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_commit",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit_transaction@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_commit_transaction",
            "type": [
                "None"
            ]
        }
    ],
    "test_commit_transactions@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "TP2",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tid_to_offset_map",
            "type": [
                "dict[typing.Text, dict[typing.Union[str,typing.Callable,int], int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_commit_transactions",
            "type": [
                "None"
            ]
        }
    ],
    "test_committing_fine@test_VEP_no_commit": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "int",
                "str",
                "typing.Callable[str, None]"
            ]
        },
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "tuple[typing.Union[str,int]]",
                "None",
                "rouver.types.WSGIApplication",
                "list"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_committing_fine",
            "type": [
                "None"
            ]
        }
    ],
    "test_constructor@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "float",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_constructor",
            "type": [
                "None"
            ]
        }
    ],
    "test_constructor@test_Transport": [
        {
            "category": "arg",
            "name": "transport",
            "type": [
                "list[dict]"
            ]
        },
        {
            "category": "return",
            "name": "test_constructor",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_topic@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "topic",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "partitions",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "replication",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[typing.Text, typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "timeout",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "retention",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "compacting",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "deleting",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "ensure_created",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_create_topic",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_topic@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "thread",
            "type": []
        },
        {
            "category": "local",
            "name": "consumer",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_create_topic",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_topic@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": [
                "unittesmock.MagicMock",
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "_producer_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "producer_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_create_topic",
            "type": [
                "None"
            ]
        }
    ],
    "test_create_topic_invalid_name@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "topic",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "msg",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_create_topic_invalid_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_credentials_to_aiokafka@global": [
        {
            "category": "arg",
            "name": "credentials",
            "type": [
                "requests.auth.AuthBase",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "ssl_context",
            "type": [
                "requests.auth.AuthBase",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "requests.auth.AuthBase",
                "None",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "return",
            "name": "test_credentials_to_aiokafka",
            "type": [
                "None"
            ]
        }
    ],
    "test_credentials_to_aiokafka__invalid@global": [
        {
            "category": "return",
            "name": "test_credentials_to_aiokafka__invalid",
            "type": [
                "None"
            ]
        }
    ],
    "test_earliest_offsets@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_earliest_offsets",
            "type": [
                "None"
            ]
        }
    ],
    "test_flush@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": []
        },
        {
            "category": "local",
            "name": "producer_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_flush",
            "type": [
                "None"
            ]
        }
    ],
    "test_getmany@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "timeout",
            "type": [
                "float"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "active_partitions",
            "type": [
                "set[typing.Union[str,typing.Callable,int]]"
            ]
        },
        {
            "category": "return",
            "name": "test_getmany",
            "type": [
                "None"
            ]
        }
    ],
    "test_has_inbound@test_VEP_stream_idle_highwater_no_inbound": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "str",
                "int",
                "typing.Callable[str, None]"
            ]
        },
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "utils.CWLObjectType"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_has_inbound",
            "type": [
                "None"
            ]
        }
    ],
    "test_highwater@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_highwater",
            "type": [
                "None"
            ]
        }
    ],
    "test_highwater__in_transaction@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_highwater__in_transaction",
            "type": [
                "None"
            ]
        }
    ],
    "test_highwater_same_as_offset@test_VEP_stream_idle_no_highwater": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "typing.Callable[str, typing.Any]",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "typing.Callable[str, typing.Any]",
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_highwater_same_as_offset",
            "type": [
                "None"
            ]
        }
    ],
    "test_highwaters@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_highwaters",
            "type": [
                "None"
            ]
        }
    ],
    "test_inbound_timed_out@test_VEP_stream_idle_highwater_no_inbound": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int",
                "str",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "list[str]"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "int",
                "str",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_inbound_timed_out",
            "type": [
                "None"
            ]
        }
    ],
    "test_just_started@test_VEP_no_commit": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_just_started",
            "type": [
                "None"
            ]
        }
    ],
    "test_just_started@test_VEP_no_fetch_since_start": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_just_started",
            "type": [
                "None"
            ]
        }
    ],
    "test_just_started@test_VEP_no_highwater_since_start": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_just_started",
            "type": [
                "None"
            ]
        }
    ],
    "test_just_started@test_VEP_no_response_since_start": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": [
                "str",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": []
        },
        {
            "category": "arg",
            "name": "tp",
            "type": []
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_just_started",
            "type": [
                "None"
            ]
        }
    ],
    "test_just_started@test_VEP_stream_idle_highwater_no_inbound": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_just_started",
            "type": [
                "None"
            ]
        }
    ],
    "test_key_partition@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "metadata_",
            "type": [
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_key_partition",
            "type": [
                "None"
            ]
        }
    ],
    "test_key_partition@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": []
        },
        {
            "category": "return",
            "name": "test_key_partition",
            "type": [
                "None"
            ]
        }
    ],
    "test_key_partition__no_metadata@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "metadata_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_key_partition__no_metadata",
            "type": [
                "None"
            ]
        }
    ],
    "test_main@test_VEP_stream_idle_highwater_same_has_acks_everything_OK": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "str",
                "unittesmock.Mock",
                "typing.Callable[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "str",
                "unittesmock.Mock",
                "typing.Callable[str, str]"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": []
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_main",
            "type": [
                "None"
            ]
        }
    ],
    "test_maybe_begin_transaction@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "list[confluent_kafka.TopicPartition]",
                "str",
                "Consumer"
            ]
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": []
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "list[confluent_kafka.TopicPartition]",
                "str",
                "Consumer"
            ]
        },
        {
            "category": "return",
            "name": "test_maybe_begin_transaction",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_acks@test_VEP_stream_idle_highwater_no_acks": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "unittesmock.Mock",
                "mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_no_acks",
            "type": [
                "None"
            ]
        }
    ],
    "test_no_monitor@test_VEP_no_highwater_since_start": [
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int",
                "utils.CWLObjectType"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "int",
                "utils.CWLObjectType"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_no_monitor",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_partitions_assigned@test_ConsumerRebalanceListener": [
        {
            "category": "arg",
            "name": "handler",
            "type": [
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "thread",
            "type": []
        },
        {
            "category": "local",
            "name": "handler",
            "type": [
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_on_partitions_assigned",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_partitions_revoked@test_ConsumerRebalanceListener": [
        {
            "category": "arg",
            "name": "handler",
            "type": [
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "arg",
            "name": "thread",
            "type": [
                "unittesmock.Mock",
                "Transport"
            ]
        },
        {
            "category": "local",
            "name": "handler",
            "type": [
                "int",
                "typing.Callable"
            ]
        },
        {
            "category": "return",
            "name": "test_on_partitions_revoked",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_start@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_on_start",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_start@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "loop",
            "type": [
                "str",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "producer_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_on_start",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_stop@test_Consumer": [
        {
            "category": "arg",
            "name": "consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "consumer_",
            "type": [
                "dict[typing.Text, Mock]"
            ]
        },
        {
            "category": "return",
            "name": "test_on_stop",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_stop@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": []
        },
        {
            "category": "return",
            "name": "test_on_stop",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_thread_stop@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_on_thread_stop",
            "type": [
                "None"
            ]
        }
    ],
    "test_on_thread_stop__consumer_not_started@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "str",
                "bool",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "str",
                "bool",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_on_thread_stop__consumer_not_started",
            "type": [
                "None"
            ]
        }
    ],
    "test_position@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_position",
            "type": [
                "None"
            ]
        }
    ],
    "test_producer__uses_custom_partitioner@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "return",
            "name": "test_producer__uses_custom_partitioner",
            "type": [
                "None"
            ]
        }
    ],
    "test_recent_fetch@test_VEP_no_recent_fetch": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": []
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": []
        },
        {
            "category": "return",
            "name": "test_recent_fetch",
            "type": [
                "None"
            ]
        }
    ],
    "test_recent_response@test_VEP_no_recent_response": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "str",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "str",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "mock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_recent_response",
            "type": [
                "None"
            ]
        }
    ],
    "test_seek@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_seek",
            "type": [
                "None"
            ]
        }
    ],
    "test_seek_to_beginning@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "partitions",
            "type": [
                "tuple[typing.Union[str,typing.Callable,int]]"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_seek_to_beginning",
            "type": [
                "None"
            ]
        }
    ],
    "test_seek_to_committed@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_seek_to_committed",
            "type": [
                "None"
            ]
        }
    ],
    "test_seek_wait@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "TP1",
            "type": [
                "str",
                "typing.Callable",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "partitions",
            "type": [
                "dict[typing.Union[str,typing.Callable,int], int]"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "_consumer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_seek_wait",
            "type": [
                "None"
            ]
        }
    ],
    "test_send@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_send",
            "type": [
                "None"
            ]
        }
    ],
    "test_send__KafkaError@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": []
        },
        {
            "category": "local",
            "name": "_producer_",
            "type": [
                "KafkaError"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_send__KafkaError",
            "type": [
                "None"
            ]
        }
    ],
    "test_send__auto_passes_headers@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": [
                "unittesmock.MagicMock",
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_send__auto_passes_headers",
            "type": [
                "None"
            ]
        }
    ],
    "test_send__kafka011_supports_headers@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_send__kafka011_supports_headers",
            "type": [
                "None"
            ]
        }
    ],
    "test_send__no_headers@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_send__no_headers",
            "type": [
                "None"
            ]
        }
    ],
    "test_send__no_timestamp@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_send__no_timestamp",
            "type": [
                "None"
            ]
        }
    ],
    "test_send__request_no_headers@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": [
                "unittesmock.Mock",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_send__request_no_headers",
            "type": [
                "None"
            ]
        }
    ],
    "test_send_and_wait@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "local",
            "name": "producer_",
            "type": [
                "AsyncMock"
            ]
        },
        {
            "category": "return",
            "name": "test_send_and_wait",
            "type": [
                "None"
            ]
        }
    ],
    "test_session_gt_request_timeout@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "app",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_session_gt_request_timeout",
            "type": [
                "None"
            ]
        }
    ],
    "test_span_without_operation_name@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "return",
            "name": "test_span_without_operation_name",
            "type": [
                "None"
            ]
        }
    ],
    "test_start_coordinator_span@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_start_coordinator_span",
            "type": [
                "None"
            ]
        }
    ],
    "test_start_rebalancing_span@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_start_rebalancing_span",
            "type": [
                "None"
            ]
        }
    ],
    "test_state@test_verify_event_path_base": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_state",
            "type": [
                "None"
            ]
        }
    ],
    "test_stop_transaction@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": []
        },
        {
            "category": "arg",
            "name": "_producer",
            "type": []
        },
        {
            "category": "return",
            "name": "test_stop_transaction",
            "type": [
                "None"
            ]
        }
    ],
    "test_subscribe@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "return",
            "name": "test_subscribe",
            "type": [
                "None"
            ]
        }
    ],
    "test_supports_headers@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "producer_",
            "type": [
                "tuple[int]"
            ]
        },
        {
            "category": "return",
            "name": "test_supports_headers",
            "type": [
                "None"
            ]
        }
    ],
    "test_supports_headers__not_ready@test_Producer": [
        {
            "category": "arg",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "producer_",
            "type": [
                "None"
            ]
        },
        {
            "category": "local",
            "name": "producer",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_supports_headers__not_ready",
            "type": [
                "None"
            ]
        }
    ],
    "test_timed_out@test_VEP_no_fetch_since_start": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "str",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "str",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "str",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "str",
                "int",
                "float",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_timed_out",
            "type": [
                "None"
            ]
        }
    ],
    "test_timed_out@test_VEP_no_highwater_since_start": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int",
                "confluent_kafka.Consumer"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int",
                "confluent_kafka.Consumer"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_timed_out",
            "type": [
                "None"
            ]
        }
    ],
    "test_timed_out@test_VEP_no_recent_fetch": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "str",
                "set[faustypes.TP]",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "str",
                "set[faustypes.TP]",
                "float",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_timed_out",
            "type": [
                "None"
            ]
        }
    ],
    "test_timed_out@test_VEP_no_recent_response": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_timed_out",
            "type": [
                "None"
            ]
        }
    ],
    "test_timed_out@test_VEP_no_response_since_start": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": [
                "str",
                "int",
                "typing.Callable[str, None]"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "int",
                "str",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "int",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_timed_out",
            "type": [
                "None"
            ]
        }
    ],
    "test_timed_out_since_last@test_VEP_no_commit": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "str",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "utils.CWLObjectType"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "str",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "int",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "utils.CWLObjectType"
            ]
        },
        {
            "category": "return",
            "name": "test_timed_out_since_last",
            "type": [
                "None"
            ]
        }
    ],
    "test_timed_out_since_start@test_VEP_no_commit": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "list[str]",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "str",
                "float",
                "None"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": [
                "utils.CWLObjectType"
            ]
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "list[str]",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "str",
                "float",
                "None"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "tp",
            "type": [
                "utils.CWLObjectType"
            ]
        },
        {
            "category": "return",
            "name": "test_timed_out_since_start",
            "type": [
                "None"
            ]
        }
    ],
    "test_timed_out_since_start@test_VEP_stream_idle_highwater_no_inbound": [
        {
            "category": "arg",
            "name": "app",
            "type": [
                "list[str]",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "arg",
            "name": "now",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "arg",
            "name": "tp",
            "type": []
        },
        {
            "category": "arg",
            "name": "logger",
            "type": [
                "list[str]",
                "str",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "now",
            "type": [
                "int",
                "float"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "str",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_timed_out_since_start",
            "type": [
                "None"
            ]
        }
    ],
    "test_topic_partitions@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "_consumer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "None"
            ]
        },
        {
            "category": "return",
            "name": "test_topic_partitions",
            "type": [
                "None"
            ]
        }
    ],
    "test_trace_category@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "return",
            "name": "test_trace_category",
            "type": [
                "None"
            ]
        }
    ],
    "test_traced_from_parent_span@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "local",
            "name": "TESTED_MODULE",
            "type": [
                "list[str]",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "parent_span",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_traced_from_parent_span",
            "type": [
                "None"
            ]
        }
    ],
    "test_transform_span_eager@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "arg",
            "name": "tracer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_transform_span_eager",
            "type": [
                "None"
            ]
        }
    ],
    "test_transform_span_flush_spans@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "arg",
            "name": "tracer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_transform_span_flush_spans",
            "type": [
                "None"
            ]
        }
    ],
    "test_transform_span_lazy@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "arg",
            "name": "tracer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock",
                "int"
            ]
        },
        {
            "category": "local",
            "name": "cthread",
            "type": [
                "unittesmock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_transform_span_lazy",
            "type": [
                "None"
            ]
        }
    ],
    "test_transform_span_lazy_no_consumer@test_AIOKafkaConsumerThread": [
        {
            "category": "arg",
            "name": "cthread",
            "type": []
        },
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "arg",
            "name": "tracer",
            "type": []
        },
        {
            "category": "local",
            "name": "cthread_",
            "type": [
                "Mock",
                "None",
                "int"
            ]
        },
        {
            "category": "return",
            "name": "test_transform_span_lazy_no_consumer",
            "type": [
                "None"
            ]
        }
    ],
    "thread@global": [
        {
            "category": "return",
            "name": "thread",
            "type": [
                "Mock"
            ]
        }
    ],
    "thread@test_Consumer": [
        {
            "category": "return",
            "name": "thread",
            "type": [
                "Mock"
            ]
        }
    ],
    "thread@test_ConsumerRebalanceListener": [
        {
            "category": "return",
            "name": "thread",
            "type": [
                "Mock"
            ]
        }
    ],
    "tp@AIOKafkaConsumerThreadFixtures": [
        {
            "category": "return",
            "name": "tp",
            "type": [
                "TP"
            ]
        }
    ],
    "tracer@AIOKafkaConsumerThreadFixtures": [
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "local",
            "name": "tracer",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "app_",
            "type": [
                "Mock"
            ]
        },
        {
            "category": "local",
            "name": "start_span",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "local",
            "name": "tobj_",
            "type": [
                "int",
                "list[int]"
            ]
        },
        {
            "category": "return",
            "name": "tracer",
            "type": [
                "Mock"
            ]
        }
    ],
    "transport@test_Transport": [
        {
            "category": "arg",
            "name": "app",
            "type": []
        },
        {
            "category": "return",
            "name": "transport",
            "type": [
                "Transport"
            ]
        }
    ]
}