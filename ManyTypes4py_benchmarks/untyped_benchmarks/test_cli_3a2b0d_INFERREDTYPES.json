{
    "fake_invalid_run_config@TestRunCommand": [
        {
            "category": "arg",
            "name": "request",
            "type": [
                "pathlib.Path",
                "str",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "fake_root_dir",
            "type": [
                "pathlib.Path",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "fake_root_dir",
            "type": [
                "pathlib.Path",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "pathlib.Path",
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "config_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "return",
            "name": "fake_invalid_run_config",
            "type": [
                "str"
            ]
        }
    ],
    "fake_run_config@TestRunCommand": [
        {
            "category": "arg",
            "name": "request",
            "type": [
                "str",
                "dict",
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "fake_root_dir",
            "type": [
                "str",
                "dict",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "fake_root_dir",
            "type": [
                "str",
                "dict",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "str",
                "dict",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "config_path",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config",
            "type": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ]
        },
        {
            "category": "return",
            "name": "fake_run_config",
            "type": [
                "str"
            ]
        }
    ],
    "fake_run_config_with_params@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_run_config",
            "type": [
                "tests.utils.CliObjectRunner",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "request",
            "type": [
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "fake_run_config",
            "type": [
                "tests.utils.CliObjectRunner",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "request",
            "type": [
                "dict"
            ]
        },
        {
            "category": "return",
            "name": "fake_run_config_with_params",
            "type": [
                "tests.utils.CliObjectRunner",
                "unittesmock.MagicMock"
            ]
        }
    ],
    "fake_session@global": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_session_create",
            "type": [
                "unittesmock.MagicMock",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "fake_session",
            "type": []
        }
    ],
    "forwarded_command@global": [
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "forwarded_command",
            "type": [
                "None"
            ]
        }
    ],
    "forwarded_help@global": [
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "forwarded_help",
            "type": [
                "None"
            ]
        }
    ],
    "global@global": [],
    "requirements_file@global": [
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "body",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "reqs_file",
            "type": [
                "pathlib.Path",
                "str"
            ]
        },
        {
            "category": "return",
            "name": "requirements_file",
            "type": [
                "typing.Generator[typing.Union[pathlib.Path,str]]"
            ]
        }
    ],
    "stub_cli@global": [
        {
            "category": "return",
            "name": "stub_cli",
            "type": [
                "None"
            ]
        }
    ],
    "stub_command@global": [
        {
            "category": "return",
            "name": "stub_command",
            "type": [
                "None"
            ]
        }
    ],
    "test_bad_extra_params@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock",
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "bad_arg",
            "type": [
                "unittesmock.MagicMock",
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock",
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "bad_arg",
            "type": [
                "unittesmock.MagicMock",
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_bad_extra_params",
            "type": [
                "None"
            ]
        }
    ],
    "test_bad_params_key@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock",
                "str",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "str",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "bad_arg",
            "type": [
                "unittesmock.MagicMock",
                "str",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock",
                "str",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "bad_arg",
            "type": [
                "unittesmock.MagicMock",
                "str",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "str",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_bad_params_key",
            "type": [
                "None"
            ]
        }
    ],
    "test_clean_pycache@TestCliUtils": [
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "str",
                "path.Path"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "source",
            "type": [
                "Path"
            ]
        },
        {
            "category": "local",
            "name": "pycache2",
            "type": [
                "pathlib.Path",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "pycache1",
            "type": [
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "pycache",
            "type": [
                "str",
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "str",
                "path.Path"
            ]
        },
        {
            "category": "local",
            "name": "mocked_rmtree",
            "type": [
                "str",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "expected_calls",
            "type": [
                "list"
            ]
        },
        {
            "category": "return",
            "name": "test_clean_pycache",
            "type": [
                "None"
            ]
        }
    ],
    "test_cli@TestCliCommands": [
        {
            "category": "return",
            "name": "test_cli",
            "type": [
                "None"
            ]
        }
    ],
    "test_fail_split_load_versions@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "load_version",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "expected_output",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_fail_split_load_versions",
            "type": [
                "None"
            ]
        }
    ],
    "test_find_run_command_no_clipy@TestCliUtils": [
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_repo_path",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_repo_path",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_project_cli",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_find_run_command_no_clipy",
            "type": [
                "None"
            ]
        }
    ],
    "test_find_run_command_non_existing_project@TestCliUtils": [
        {
            "category": "local",
            "name": "_",
            "type": [
                "list[tuple[str]]",
                "typing.Callable[None, typing.Any]",
                "typing.Type"
            ]
        },
        {
            "category": "return",
            "name": "test_find_run_command_non_existing_project",
            "type": [
                "None"
            ]
        }
    ],
    "test_find_run_command_use_default_run@TestCliUtils": [
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_find_run_command_use_default_run",
            "type": [
                "None"
            ]
        }
    ],
    "test_find_run_command_use_plugin_run@TestCliUtils": [
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_repo_path",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "mock_plugin",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_command",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_plugin_",
            "type": [
                "dict[typing.Text, MagicMock]"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_find_run_command_use_plugin_run",
            "type": [
                "None"
            ]
        }
    ],
    "test_find_run_command_with_clipy@TestCliUtils": [
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_repo_path",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_repo_path",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_project_cli",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mock_project_cli_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_find_run_command_with_clipy",
            "type": [
                "None"
            ]
        }
    ],
    "test_forwarded_help@TestForwardCommand": [
        {
            "category": "return",
            "name": "test_forwarded_help",
            "type": [
                "None"
            ]
        }
    ],
    "test_found@TestCommandCollection": [
        {
            "category": "local",
            "name": "cmd_collection",
            "type": [
                "CommandCollection"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_found",
            "type": [
                "None"
            ]
        }
    ],
    "test_found_reverse@TestCommandCollection": [
        {
            "category": "local",
            "name": "cmd_collection",
            "type": [
                "CommandCollection"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_found_reverse",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_pkg_version@TestCliUtils": [
        {
            "category": "arg",
            "name": "requirements_file",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "sa_version",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "requirements_file",
            "type": [
                "pathlib.Path"
            ]
        },
        {
            "category": "local",
            "name": "non_existent_file",
            "type": [
                "str"
            ]
        },
        {
            "category": "return",
            "name": "test_get_pkg_version",
            "type": [
                "None"
            ]
        }
    ],
    "test_get_pkg_version_deprecated@TestCliUtils": [
        {
            "category": "arg",
            "name": "requirements_file",
            "type": [
                "pathlib.Path",
                "os.PathLike"
            ]
        },
        {
            "category": "local",
            "name": "requirements_file",
            "type": [
                "pathlib.Path",
                "os.PathLike"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "str",
                "pathlib.Path",
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_get_pkg_version_deprecated",
            "type": [
                "None"
            ]
        }
    ],
    "test_global_error_is_caught@TestEntryPoints": [
        {
            "category": "arg",
            "name": "entry_points",
            "type": [
                "list[dict[str, typing.Any]]",
                "list[dict]",
                "list[tuple[typing.Union[int,typing.Any]]]"
            ]
        },
        {
            "category": "arg",
            "name": "entry_point",
            "type": [
                "unittesmock.MagicMock",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "str",
                "T"
            ]
        },
        {
            "category": "local",
            "name": "entry_point_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_global_error_is_caught",
            "type": [
                "None"
            ]
        }
    ],
    "test_global_groups@TestEntryPoints": [
        {
            "category": "arg",
            "name": "entry_points",
            "type": [
                "float",
                "int",
                "dict[str, dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "entry_point",
            "type": [
                "dict",
                "list[dict]",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "local",
            "name": "entry_point_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "groups",
            "type": [
                "list",
                "str",
                "set[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_global_groups",
            "type": [
                "None"
            ]
        }
    ],
    "test_help@TestCliCommands": [
        {
            "category": "return",
            "name": "test_help",
            "type": [
                "None"
            ]
        }
    ],
    "test_help@TestCommandCollection": [
        {
            "category": "local",
            "name": "cmd_collection",
            "type": [
                "CommandCollection"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_help",
            "type": [
                "None"
            ]
        }
    ],
    "test_help@TestForwardCommand": [
        {
            "category": "return",
            "name": "test_help",
            "type": [
                "None"
            ]
        }
    ],
    "test_info_contains_plugin_versions@TestCliCommands": [
        {
            "category": "arg",
            "name": "entry_point",
            "type": [
                "dict",
                "dict[str, bytes]"
            ]
        },
        {
            "category": "local",
            "name": "entry_point_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_info_contains_plugin_versions",
            "type": [
                "None"
            ]
        }
    ],
    "test_info_only_kedro_telemetry_plugin_installed@TestCliCommands": [
        {
            "category": "local",
            "name": "split_result",
            "type": [
                "dict[str, typing.Union[typing.Any,str]]",
                "str",
                "None",
                "dict[str, list[typing.Any]]"
            ]
        },
        {
            "category": "return",
            "name": "test_info_only_kedro_telemetry_plugin_installed",
            "type": [
                "None"
            ]
        }
    ],
    "test_init@TestEntryPoints": [
        {
            "category": "arg",
            "name": "entry_points",
            "type": [
                "list[tuple[typing.Union[int,typing.Any]]]",
                "list[dict]"
            ]
        },
        {
            "category": "arg",
            "name": "entry_point",
            "type": [
                "dict[str, typing.Any]",
                "dict",
                "mock.Mock"
            ]
        },
        {
            "category": "return",
            "name": "test_init",
            "type": [
                "None"
            ]
        }
    ],
    "test_init_error_is_caught@TestEntryPoints": [
        {
            "category": "arg",
            "name": "entry_points",
            "type": [
                "list[tuple[typing.Union[int,typing.Any]]]",
                "list[dict]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "entry_point",
            "type": [
                "mock.Mock",
                "dict[str, typing.Any]",
                "dict[str, typing.Union[int,str]]"
            ]
        },
        {
            "category": "return",
            "name": "test_init_error_is_caught",
            "type": [
                "None"
            ]
        }
    ],
    "test_kedro_cli_no_project@TestKedroCLI": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "pathlib.Path",
                "tsrc.teshelpers.cli.CLI"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "pathlib.Path",
                "tsrc.teshelpers.cli.CLI"
            ]
        },
        {
            "category": "local",
            "name": "kedro_cli",
            "type": [
                "KedroCLI"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_kedro_cli_no_project",
            "type": [
                "None"
            ]
        }
    ],
    "test_kedro_cli_with_project@TestKedroCLI": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "kedro_cli",
            "type": [
                "KedroCLI"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_kedro_cli_with_project",
            "type": [
                "None"
            ]
        }
    ],
    "test_kedro_run_no_project@TestKedroCLI": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "pathlib.Path",
                "tsrc.teshelpers.cli.CLI"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "pathlib.Path",
                "tsrc.teshelpers.cli.CLI"
            ]
        },
        {
            "category": "local",
            "name": "kedro_cli",
            "type": [
                "KedroCLI"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_kedro_run_no_project",
            "type": [
                "None"
            ]
        }
    ],
    "test_main_hook_exception_handling@TestKedroCLI": [
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "pathlib.Path",
                "telepresence.runner.Runner"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "pathlib.Path",
                "telepresence.runner.Runner"
            ]
        },
        {
            "category": "local",
            "name": "kedro_cli",
            "type": [
                "KedroCLI"
            ]
        },
        {
            "category": "local",
            "name": "kedro_cli_",
            "type": [
                "MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_main_hook_exception_handling",
            "type": [
                "None"
            ]
        }
    ],
    "test_not_found@TestCommandCollection": [
        {
            "category": "local",
            "name": "cmd_collection",
            "type": [
                "CommandCollection"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_not_found",
            "type": [
                "None"
            ]
        }
    ],
    "test_not_found_closest_match@TestCommandCollection": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "cmd_collection",
            "type": [
                "CommandCollection"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_not_found_closest_match",
            "type": [
                "None"
            ]
        }
    ],
    "test_not_found_closet_match_singular@TestCommandCollection": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "cmd_collection",
            "type": [
                "CommandCollection"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "return",
            "name": "test_not_found_closet_match_singular",
            "type": [
                "None"
            ]
        }
    ],
    "test_print_version@TestCliCommands": [
        {
            "category": "return",
            "name": "test_print_version",
            "type": [
                "None"
            ]
        }
    ],
    "test_project_commands_invalid_clipy@TestKedroCLI": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "_",
            "type": [
                "KedroCLI"
            ]
        },
        {
            "category": "return",
            "name": "test_project_commands_invalid_clipy",
            "type": [
                "None"
            ]
        }
    ],
    "test_project_commands_no_clipy@TestKedroCLI": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "kedro_cli",
            "type": [
                "KedroCLI"
            ]
        },
        {
            "category": "return",
            "name": "test_project_commands_no_clipy",
            "type": [
                "None"
            ]
        }
    ],
    "test_project_commands_no_project@TestKedroCLI": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "tmp_path",
            "type": [
                "pathlib.Path",
                "tsrc.teshelpers.cli.CLI"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "tmp_path",
            "type": [
                "pathlib.Path",
                "tsrc.teshelpers.cli.CLI"
            ]
        },
        {
            "category": "local",
            "name": "kedro_cli",
            "type": [
                "KedroCLI"
            ]
        },
        {
            "category": "return",
            "name": "test_project_commands_no_project",
            "type": [
                "None"
            ]
        }
    ],
    "test_project_commands_valid_clipy@TestKedroCLI": [
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "Module",
            "type": [
                "str",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "mock.Mock"
            ]
        },
        {
            "category": "local",
            "name": "kedro_cli",
            "type": [
                "KedroCLI"
            ]
        },
        {
            "category": "return",
            "name": "test_project_commands_valid_clipy",
            "type": [
                "None"
            ]
        }
    ],
    "test_project_error_is_caught@TestEntryPoints": [
        {
            "category": "arg",
            "name": "entry_points",
            "type": [
                "list[tuple[typing.Union[int,typing.Any]]]",
                "dict"
            ]
        },
        {
            "category": "arg",
            "name": "entry_point",
            "type": [
                "unittesmock.MagicMock",
                "dict[str, typing.Any]"
            ]
        },
        {
            "category": "arg",
            "name": "caplog",
            "type": [
                "str",
                "dict"
            ]
        },
        {
            "category": "local",
            "name": "entry_point_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_project_error_is_caught",
            "type": [
                "None"
            ]
        }
    ],
    "test_project_groups@TestEntryPoints": [
        {
            "category": "arg",
            "name": "entry_points",
            "type": [
                "list[dict]",
                "list[tuple[typing.Any]]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "arg",
            "name": "entry_point",
            "type": [
                "dict",
                "list[dict]",
                "list[dict[str, typing.Any]]"
            ]
        },
        {
            "category": "local",
            "name": "entry_point_",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "groups",
            "type": [
                "list",
                "str",
                "set[str]"
            ]
        },
        {
            "category": "return",
            "name": "test_project_groups",
            "type": [
                "None"
            ]
        }
    ],
    "test_regular@TestForwardCommand": [
        {
            "category": "return",
            "name": "test_regular",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_async@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_session",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_run_async",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_extra_params@TestRunCommand": [
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "tests.utils.CliObjectRunner",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "tests.utils.CliObjectRunner",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "cli_arg",
            "type": [
                "tests.utils.CliObjectRunner",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "arg",
            "name": "expected_extra_params",
            "type": [
                "unittesmock.MagicMock",
                "tuple[typing.Union[str,mock.Mock]]"
            ]
        },
        {
            "category": "local",
            "name": "mock_session_create",
            "type": [
                "unittesmock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "tests.utils.CliObjectRunner",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "cli_arg",
            "type": [
                "tests.utils.CliObjectRunner",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "tests.utils.CliObjectRunner",
                "click.testing.CliRunner"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "expected_extra_params",
            "type": [
                "unittesmock.MagicMock",
                "tuple[typing.Union[str,mock.Mock]]"
            ]
        },
        {
            "category": "return",
            "name": "test_run_extra_params",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_specific_nodes@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock",
                "tuple[typing.Union[str,mock.Mock]]",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "tuple[typing.Union[str,mock.Mock]]",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "nodes_input",
            "type": []
        },
        {
            "category": "arg",
            "name": "nodes_expected",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock",
                "tuple[typing.Union[str,mock.Mock]]",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "tuple[typing.Union[str,mock.Mock]]",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "nodes_expected",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_run_specific_nodes",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_successfully@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_session",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_run_successfully",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_successfully_parallel@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_session",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_run_successfully_parallel",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_with_alternative_conf_source@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "return",
            "name": "test_run_with_alternative_conf_source",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_with_config@TestRunCommand": [
        {
            "category": "arg",
            "name": "config_flag",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_run_config",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config_flag",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_run_config",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_run_with_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_with_invalid_config@TestRunCommand": [
        {
            "category": "arg",
            "name": "config_flag",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_invalid_run_config",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "config_flag",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_invalid_run_config",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "KedroCliError_",
            "type": [
                "bool"
            ]
        },
        {
            "category": "return",
            "name": "test_run_with_invalid_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_with_non_existent_conf_source@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": []
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": []
        },
        {
            "category": "local",
            "name": "expected_output",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "return",
            "name": "test_run_with_non_existent_conf_source",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_with_params_in_config@TestRunCommand": [
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "pathlib.Path",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_run_config_with_params",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": []
        },
        {
            "category": "local",
            "name": "mock_session_create",
            "type": [
                "unittesmock.MagicMock",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_run_config_with_params",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "pathlib.Path",
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_run_with_params_in_config",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_with_pipeline_filters@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock",
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "from_nodes",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "to_nodes",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "namespace",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "tags",
            "type": [
                "list[typing.Text]"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock",
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock",
                "click.testing.CliRunner",
                "str"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_run_with_pipeline_filters",
            "type": [
                "None"
            ]
        }
    ],
    "test_run_with_tags@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "tags_input",
            "type": [
                "str"
            ]
        },
        {
            "category": "arg",
            "name": "tags_expected",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "tags_input",
            "type": [
                "str"
            ]
        },
        {
            "category": "local",
            "name": "tags_command",
            "type": [
                "typing.Text"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "tags_expected",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_run_with_tags",
            "type": [
                "None"
            ]
        }
    ],
    "test_safe_split_option_arguments@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session",
            "type": [
                "unittesmock.MagicMock",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "arg",
            "name": "from_nodes",
            "type": []
        },
        {
            "category": "arg",
            "name": "expected",
            "type": [
                "unittesmock.MagicMock",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "local",
            "name": "expected",
            "type": [
                "unittesmock.MagicMock",
                "app.utils.models.ModelManager"
            ]
        },
        {
            "category": "return",
            "name": "test_safe_split_option_arguments",
            "type": [
                "None"
            ]
        }
    ],
    "test_split_load_versions@TestRunCommand": [
        {
            "category": "arg",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "fake_session",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "lv_input",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "lv_dict",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "arg",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_project_cli",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "lv_input",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "fake_metadata",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "result",
            "type": [
                "click.testing.Result"
            ]
        },
        {
            "category": "local",
            "name": "mocker",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "local",
            "name": "lv_dict",
            "type": [
                "unittesmock.MagicMock"
            ]
        },
        {
            "category": "return",
            "name": "test_split_load_versions",
            "type": [
                "None"
            ]
        }
    ],
    "test_unnamed@TestForwardCommand": [
        {
            "category": "return",
            "name": "test_unnamed",
            "type": [
                "None"
            ]
        }
    ],
    "unnamed@global": [
        {
            "category": "arg",
            "name": "args",
            "type": []
        },
        {
            "category": "arg",
            "name": "kwargs",
            "type": []
        },
        {
            "category": "return",
            "name": "unnamed",
            "type": [
                "None"
            ]
        }
    ]
}