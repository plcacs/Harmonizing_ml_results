[
  {
    "file_signature": [
      "class:EnvisalinkBinarySensor",
      "func:__init__",
      "func:async_update_callback",
      "func:device_class",
      "func:extra_state_attributes",
      "func:is_on"
    ],
    "old_files": [
      "binary_sensor.py_o1_mini_0433b0a2.py"
    ],
    "new_files": [
      "binary_sensor_e70512.py"
    ]
  },
  {
    "file_signature": [
      "class:X",
      "class:test_ChangeloggedSet",
      "class:test_SetTable",
      "class:test_SetTableManager",
      "class:test_SetWindowSet",
      "func:cset",
      "func:key",
      "func:man",
      "func:manager",
      "func:stable",
      "func:table",
      "func:test_ChangeloggedSetManager",
      "func:test__apply_set_operation",
      "func:test__clear",
      "func:test__difference_update",
      "func:test__getitem__",
      "func:test__intersection_update",
      "func:test__new_store",
      "func:test__symmetric_difference_update",
      "func:test__update",
      "func:test_add",
      "func:test_apply_changelog_event__ADD",
      "func:test_apply_changelog_event__DISCARD",
      "func:test_apply_changelog_event__UPDATE",
      "func:test_apply_changelog_event__not_implemented",
      "func:test_as_stored_value",
      "func:test_constructor",
      "func:test_constructor__with_specific_name",
      "func:test_constructor__with_suffix",
      "func:test_constructor_disabled",
      "func:test_constructor_enabled",
      "func:test_discard",
      "func:test_on_add",
      "func:test_on_change__diff",
      "func:test_on_change__update",
      "func:test_on_discard",
      "func:test_sync_from_storage",
      "func:wrapper",
      "func:wset"
    ],
    "old_files": [
      "test_sets.py_o1_mini_a2e17664.py"
    ],
    "new_files": [
      "test_sets_73d779.py"
    ]
  },
  {
    "file_signature": [
      "class:ConditionError",
      "class:ConditionErrorContainer",
      "class:ConditionErrorIndex",
      "class:ConditionErrorMessage",
      "class:ConfigEntryAuthFailed",
      "class:ConfigEntryError",
      "class:ConfigEntryNotReady",
      "class:ConfigValidationError",
      "class:DependencyError",
      "class:HomeAssistantError",
      "class:IntegrationError",
      "class:InvalidEntityFormatError",
      "class:InvalidStateError",
      "class:MaxLengthExceeded",
      "class:NoEntitySpecifiedError",
      "class:PlatformNotReady",
      "class:ServiceNotFound",
      "class:ServiceNotSupported",
      "class:ServiceValidationError",
      "class:TemplateError",
      "class:Unauthorized",
      "class:UnknownUser",
      "func:__init__",
      "func:__str__",
      "func:_indent",
      "func:import_async_get_exception_message",
      "func:output"
    ],
    "old_files": [
      "exceptions.py_o1_mini_0aff413c.py"
    ],
    "new_files": [
      "exceptions_da9151.py"
    ]
  },
  {
    "file_signature": [
      "class:RestartNode",
      "func:__call__",
      "func:__init__",
      "func:adhoc_capability",
      "func:capabilities",
      "func:link_exception_to",
      "func:pfs_mock",
      "func:raiden_chain",
      "func:raiden_network",
      "func:resolvers",
      "func:restart_node",
      "func:routing_mode",
      "func:timeout"
    ],
    "old_files": [
      "raiden_network.py_o3_mini_34be1bfe.py"
    ],
    "new_files": [
      "raiden_network_f4d23c.py"
    ]
  },
  {
    "file_signature": [
      "func:generate_mock_trade",
      "func:test_CooldownPeriod",
      "func:test_CooldownPeriod_unlock_at",
      "func:test_LowProfitPairs",
      "func:test_MaxDrawdown",
      "func:test_protection_manager_desc",
      "func:test_protectionmanager",
      "func:test_protections_init",
      "func:test_stoploss_guard",
      "func:test_stoploss_guard_perpair",
      "func:test_validate_protections"
    ],
    "old_files": [
      "test_protections.py_o1_mini_b5e8377a.py"
    ],
    "new_files": [
      "test_protections_3ce579.py"
    ]
  },
  {
    "file_signature": [
      "class:Message",
      "func:__init__",
      "func:code_address",
      "func:data_as_bytes",
      "func:is_create",
      "func:storage_address"
    ],
    "old_files": [
      "message.py_o3_mini_497b1e8f.py"
    ],
    "new_files": [
      "message_7557cb.py"
    ]
  },
  {
    "file_signature": [
      "func:add_areas",
      "func:add_indicators",
      "func:add_max_drawdown",
      "func:add_parallelism",
      "func:add_profit",
      "func:add_underwater",
      "func:create_plotconfig",
      "func:create_scatter",
      "func:generate_candlestick_graph",
      "func:generate_plot_filename",
      "func:generate_profit_graph",
      "func:init_plotscript",
      "func:load_and_plot_trades",
      "func:plot_area",
      "func:plot_profit",
      "func:plot_trades",
      "func:store_plot_file"
    ],
    "old_files": [
      "plotting.py_o1_mini_730c2c83.py"
    ],
    "new_files": [
      "plotting_800aba.py"
    ]
  },
  {
    "file_signature": [
      "class:TelldusLiveClient",
      "func:__init__",
      "func:device",
      "func:device_info",
      "func:identify_device",
      "func:is_available"
    ],
    "old_files": [
      "__init__.py_o1_mini_f6db51ae.py"
    ],
    "new_files": [
      "__init___cd0888.py"
    ]
  },
  {
    "file_signature": [
      "class:TeslaFleetEnergySiteHistoryCoordinator",
      "class:TeslaFleetEnergySiteInfoCoordinator",
      "class:TeslaFleetEnergySiteLiveCoordinator",
      "class:TeslaFleetVehicleDataCoordinator",
      "func:__init__",
      "func:flatten"
    ],
    "old_files": [
      "coordinator.py_o1_mini_9eabf262.py"
    ],
    "new_files": [
      "coordinator_a3c28d.py"
    ]
  },
  {
    "file_signature": [
      "class:RemoteIpAddr",
      "func:delete",
      "func:post_receive",
      "func:pre_receive",
      "func:status_change",
      "func:take_action"
    ],
    "old_files": [
      "remote_ip.py_o1_mini_6ab0625f.py"
    ],
    "new_files": [
      "remote_ip_c6c5d8.py"
    ]
  },
  {
    "file_signature": [
      "func:SimplePyFn",
      "func:a",
      "func:aaaaaaaaaaaaaaaaa",
      "func:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
      "func:foo",
      "func:thiiiiiiiiiiiiiiiiiis_iiiiiiiiiiiiiiiiiiiiiiiiiiiiiis_veeeeeeeeeeeeeeeeeeeeeeery_looooooong"
    ],
    "old_files": [
      "funcdef_return_type_trailing_comma.py_o1_mini_9d900532.py"
    ],
    "new_files": [
      "funcdef_return_type_trailing_comma_6ef842.py"
    ]
  },
  {
    "file_signature": [
      "class:BeamSearch",
      "class:Constraint",
      "class:DeterministicSampler",
      "class:FinalSequenceScorer",
      "class:GumbelSampler",
      "class:LengthNormalizedSequenceLogProbabilityScorer",
      "class:MultinomialSampler",
      "class:RepeatedNGramBlockingConstraint",
      "class:Sampler",
      "class:SequenceLogProbabilityScorer",
      "class:TopKSampler",
      "class:TopPSampler",
      "func:__init__",
      "func:_copy_state",
      "func:_is_multilayer_rnn_decoder",
      "func:_reconstruct_sequences",
      "func:_search",
      "func:_update_initial_state",
      "func:_update_state",
      "func:apply",
      "func:gumbel",
      "func:gumbel_with_max",
      "func:init_state",
      "func:new_step",
      "func:sample_beams",
      "func:sample_nodes",
      "func:score",
      "func:search",
      "func:update_state"
    ],
    "old_files": [
      "beam_search.py_o1_mini_11544983.py"
    ],
    "new_files": [
      "beam_search_b3623d.py"
    ]
  },
  {
    "file_signature": [
      "class:DBSingleton",
      "class:PrefectDBInterface",
      "func:Agent",
      "func:Artifact",
      "func:ArtifactCollection",
      "func:Automation",
      "func:AutomationBucket",
      "func:AutomationEventFollower",
      "func:AutomationRelatedResource",
      "func:Base",
      "func:BlockDocument",
      "func:BlockDocumentReference",
      "func:BlockSchema",
      "func:BlockSchemaReference",
      "func:BlockType",
      "func:CompositeTriggerChildFiring",
      "func:ConcurrencyLimit",
      "func:ConcurrencyLimitV2",
      "func:Configuration",
      "func:CsrfToken",
      "func:Deployment",
      "func:DeploymentSchedule",
      "func:Event",
      "func:EventResource",
      "func:Flow",
      "func:FlowRun",
      "func:FlowRunInput",
      "func:FlowRunNotificationPolicy",
      "func:FlowRunNotificationQueue",
      "func:FlowRunState",
      "func:Log",
      "func:SavedSearch",
      "func:TaskRun",
      "func:TaskRunState",
      "func:TaskRunStateCache",
      "func:Variable",
      "func:WorkPool",
      "func:WorkQueue",
      "func:Worker",
      "func:__call__",
      "func:__init__",
      "func:dialect"
    ],
    "old_files": [
      "interface.py_o1_mini_0bffa7b7.py"
    ],
    "new_files": [
      "interface_7aa819.py"
    ]
  },
  {
    "file_signature": [
      "func:_mocked_unlock",
      "func:get_netting_channel_closed_events",
      "func:get_netting_channel_deposit_events",
      "func:get_netting_channel_settled_events",
      "func:has_initiator_events",
      "func:test_channel_deposit",
      "func:test_channel_new",
      "func:test_clear_closed_queue",
      "func:test_query_events",
      "func:test_secret_revealed_on_chain",
      "func:wait_both_channel_open"
    ],
    "old_files": [
      "test_integration_events.py_o1_mini_d5489aea.py"
    ],
    "new_files": [
      "test_integration_events_f08b97.py"
    ]
  },
  {
    "file_signature": [
      "class:_EtreeFrameParser",
      "class:_LxmlFrameParser",
      "class:_XMLFrameParser",
      "func:__init__",
      "func:_data_to_frame",
      "func:_iterparse_nodes",
      "func:_parse",
      "func:_parse_doc",
      "func:_parse_nodes",
      "func:_transform_doc",
      "func:_validate_names",
      "func:_validate_path",
      "func:get_data_from_filepath",
      "func:parse_data",
      "func:preprocess_data",
      "func:read_xml"
    ],
    "old_files": [
      "xml.py_o3_mini_792d4f4f.py"
    ],
    "new_files": [
      "xml_da8497.py"
    ]
  },
  {
    "file_signature": [
      "class:BlobPayloadDecoder",
      "class:BlobTransaction",
      "class:CancunLegacyTransaction",
      "class:CancunTransactionBuilder",
      "class:CancunTypedTransaction",
      "class:CancunUnsignedLegacyTransaction",
      "class:UnsignedBlobTransaction",
      "func:_type_byte",
      "func:as_signed_transaction",
      "func:blob_versioned_hashes",
      "func:check_signature_validity",
      "func:decode",
      "func:encode",
      "func:gas_price",
      "func:gas_used_by",
      "func:get_intrinsic_gas",
      "func:get_message_for_signing",
      "func:get_sender",
      "func:hash",
      "func:intrinsic_gas",
      "func:make_receipt",
      "func:max_fee_per_blob_gas",
      "func:new_blob_transaction",
      "func:new_unsigned_blob_transaction",
      "func:validate"
    ],
    "old_files": [
      "transactions.py_o3_mini_8abeba06.py"
    ],
    "new_files": [
      "transactions_ca9596.py"
    ]
  },
  {
    "file_signature": [
      "class:Config",
      "class:EggBox",
      "class:X",
      "func:__init__",
      "func:__str__",
      "func:foo",
      "func:foo1",
      "func:foo2",
      "func:foo3",
      "func:foo4",
      "func:foo_bar",
      "func:func",
      "func:test_args",
      "func:test_args_name",
      "func:test_async",
      "func:test_class_method",
      "func:test_config_arbitrary_types_allowed",
      "func:test_config_fields",
      "func:test_config_title",
      "func:test_config_title_cls",
      "func:test_field_can_provide_factory",
      "func:test_item_method",
      "func:test_kwargs",
      "func:test_populate_by_name",
      "func:test_positional_only",
      "func:test_string_annotation",
      "func:test_untyped",
      "func:test_use_of_alias",
      "func:test_v_args",
      "func:test_validate",
      "func:test_var_args_kwargs",
      "func:test_wrap",
      "func:validate_arguments"
    ],
    "old_files": [
      "test_deprecated_validate_arguments.py_o1_mini_fe17300b.py"
    ],
    "new_files": [
      "test_deprecated_validate_arguments_bca830.py"
    ]
  },
  {
    "file_signature": [
      "class:ExternalURLClass",
      "func:test_basic_url",
      "func:test_complete_url",
      "func:test_copy_with",
      "func:test_idna_url",
      "func:test_ipv6_url",
      "func:test_ipv6_url_copy_with_host",
      "func:test_ipv6_url_from_raw_url",
      "func:test_param_requires_encoding",
      "func:test_param_with_existing_escape_requires_encoding",
      "func:test_param_with_percent_encoded",
      "func:test_param_with_space",
      "func:test_path_query_fragment",
      "func:test_query_requiring_percent_encoding",
      "func:test_query_with_existing_percent_encoding",
      "func:test_query_with_mixed_percent_encoding",
      "func:test_relative_url_join",
      "func:test_resolution_error_1833",
      "func:test_url_add_param_manipulation",
      "func:test_url_copywith_authority_subcomponents",
      "func:test_url_copywith_invalid_component",
      "func:test_url_copywith_netloc",
      "func:test_url_copywith_query",
      "func:test_url_copywith_raw_path",
      "func:test_url_copywith_security",
      "func:test_url_copywith_urlencoded_path",
      "func:test_url_copywith_userinfo_subcomponents",
      "func:test_url_eq_str",
      "func:test_url_escaped_idna_host",
      "func:test_url_escaped_path",
      "func:test_url_excessively_long_component",
      "func:test_url_excessively_long_url",
      "func:test_url_invalid_hostname",
      "func:test_url_invalid_idna_host",
      "func:test_url_invalid_ipv4",
      "func:test_url_invalid_ipv6",
      "func:test_url_invalid_port",
      "func:test_url_invalid_type",
      "func:test_url_ipv4_like_host",
      "func:test_url_join",
      "func:test_url_join_rfc3986",
      "func:test_url_leading_dot_prefix_on_absolute_url",
      "func:test_url_leading_dot_prefix_on_relative_url",
      "func:test_url_merge_params_manipulation",
      "func:test_url_no_authority",
      "func:test_url_no_scheme",
      "func:test_url_non_printing_character_in_component",
      "func:test_url_non_printing_character_in_url",
      "func:test_url_normalized_host",
      "func:test_url_normalized_path",
      "func:test_url_normalized_port",
      "func:test_url_params",
      "func:test_url_percent_escape_host",
      "func:test_url_query_encoding",
      "func:test_url_remove_param_manipulation",
      "func:test_url_set",
      "func:test_url_set_param_manipulation",
      "func:test_url_unescaped_idna_host",
      "func:test_url_username_and_password",
      "func:test_url_valid_host",
      "func:test_url_valid_ipv4",
      "func:test_url_valid_ipv6",
      "func:test_url_valid_port",
      "func:test_url_with_components",
      "func:test_url_with_empty_query",
      "func:test_url_with_invalid_component",
      "func:test_url_with_relative_path",
      "func:test_urlparse_with_invalid_component",
      "func:test_urlparse_with_invalid_path",
      "func:test_urlparse_with_invalid_scheme"
    ],
    "old_files": [
      "test_url.py_o1_mini_78704760.py"
    ],
    "new_files": [
      "test_url_1ceabd.py"
    ]
  },
  {
    "file_signature": [
      "class:TestReadCollectionViews",
      "func:collection_view_url",
      "func:mock_block_response",
      "func:mock_collection_response",
      "func:mock_flow_response",
      "func:mock_get_missing_view",
      "func:mock_get_view",
      "func:mock_worker_response"
    ],
    "old_files": [
      "test_collections.py_o1_mini_d87bab87.py"
    ],
    "new_files": [
      "test_collections_4d5e21.py"
    ]
  },
  {
    "file_signature": [
      "class:Kraken",
      "func:_get_params",
      "func:_get_trade_pagination_next_value",
      "func:_set_leverage",
      "func:_valid_trade_pagination_id",
      "func:calculate_funding_fees",
      "func:consolidate_balances",
      "func:get_balances",
      "func:get_tickers",
      "func:market_is_tradable"
    ],
    "old_files": [
      "kraken.py_o1_mini_d5b7d358.py"
    ],
    "new_files": [
      "kraken_c1d78e.py"
    ]
  },
  {
    "file_signature": [
      "class:MetadataSchema",
      "func:get_contents_from_bundle",
      "func:is_valid_config",
      "func:load_configs",
      "func:load_metadata",
      "func:load_yaml",
      "func:remove_root",
      "func:validate_metadata_type"
    ],
    "old_files": [
      "utils.py_o1_mini_a82590b3.py"
    ],
    "new_files": [
      "utils_f25548.py"
    ]
  },
  {
    "file_signature": [
      "class:Bool",
      "class:BrokerList",
      "class:Codec",
      "class:Credentials",
      "class:Dict",
      "class:EnumParam",
      "class:Int",
      "class:LogHandlers",
      "class:Number",
      "class:Param",
      "class:Path",
      "class:Port",
      "class:SSLContext",
      "class:Seconds",
      "class:Severity",
      "class:Str",
      "class:Timezone",
      "class:URL",
      "class:UnsignedInt",
      "class:Version",
      "class:_Int",
      "class:_Section",
      "class:_Settings",
      "class:_Symbol",
      "func:Enum",
      "func:Symbol",
      "func:__get__",
      "func:__init__",
      "func:__set__",
      "func:_init_options",
      "func:_out_of_range",
      "func:active",
      "func:broker_list",
      "func:build_deprecation_warning",
      "func:class_name",
      "func:convert",
      "func:deprecated",
      "func:on_get",
      "func:on_get_value",
      "func:on_init_set_default",
      "func:on_init_set_value",
      "func:on_set",
      "func:on_set_default",
      "func:prepare_get",
      "func:prepare_init_default",
      "func:prepare_path",
      "func:prepare_set",
      "func:set_class_default",
      "func:to_bool",
      "func:to_python",
      "func:validate_after",
      "func:validate_before"
    ],
    "old_files": [
      "params.py_o3_mini_e6727dc5.py"
    ],
    "new_files": [
      "params_067b56.py"
    ]
  },
  {
    "file_signature": [
      "class:ShowRunner",
      "class:ShowTask",
      "class:ShowTaskDirect",
      "func:__init__",
      "func:_handle_result",
      "func:_runtime_initialize",
      "func:execute",
      "func:get_runner_type",
      "func:run",
      "func:task_end_messages"
    ],
    "old_files": [
      "show.py_o1_mini_19112c41.py"
    ],
    "new_files": [
      "show_0b8fd6.py"
    ]
  },
  {
    "file_signature": [
      "class:Cache",
      "class:Consumer",
      "class:Publisher",
      "class:RedisStreamsMessage",
      "class:Subscription",
      "func:__eq__",
      "func:__init__"
    ],
    "old_files": [
      "messaging.py_o3_mini_c5025826.py"
    ],
    "new_files": [
      "messaging_30ade3.py"
    ]
  },
  {
    "file_signature": [
      "func:decimal_number_check",
      "func:test_1000_sep_decimal_float_precision",
      "func:test_accurate_parsing_of_large_integers",
      "func:test_boolean_dtype",
      "func:test_decimal_and_exponential",
      "func:test_delimiter_with_usecols_and_parse_dates",
      "func:test_dtype_all_columns",
      "func:test_dtype_backend",
      "func:test_dtype_backend_and_dtype",
      "func:test_dtype_backend_ea_dtype_specified",
      "func:test_dtype_backend_pyarrow",
      "func:test_dtype_backend_string",
      "func:test_dtype_mangle_dup_cols",
      "func:test_dtype_mangle_dup_cols_single_dtype",
      "func:test_dtype_multi_index",
      "func:test_dtype_per_column",
      "func:test_dtype_with_converters",
      "func:test_dtypes_defaultdict",
      "func:test_dtypes_defaultdict_invalid",
      "func:test_dtypes_defaultdict_mangle_dup_cols",
      "func:test_dtypes_with_usecols",
      "func:test_ea_int_avoid_overflow",
      "func:test_index_col_with_dtype_no_rangeindex",
      "func:test_invalid_dtype_per_column",
      "func:test_nullable_int_dtype",
      "func:test_numeric_dtype",
      "func:test_raise_on_passed_int_dtype_with_nas",
      "func:test_skip_whitespace",
      "func:test_string_inference",
      "func:test_string_inference_object_dtype",
      "func:test_true_values_cast_to_bool"
    ],
    "old_files": [
      "test_dtypes_basic.py_o1_mini_3cac3357.py"
    ],
    "new_files": [
      "test_dtypes_basic_4a9ebb.py"
    ]
  },
  {
    "file_signature": [
      "class:TestTZLocalize",
      "func:test_dti_tz_localize",
      "func:test_dti_tz_localize_ambiguous_flags",
      "func:test_dti_tz_localize_ambiguous_flags2",
      "func:test_dti_tz_localize_ambiguous_infer",
      "func:test_dti_tz_localize_ambiguous_infer2",
      "func:test_dti_tz_localize_ambiguous_infer3",
      "func:test_dti_tz_localize_ambiguous_nat",
      "func:test_dti_tz_localize_ambiguous_times",
      "func:test_dti_tz_localize_bdate_range",
      "func:test_dti_tz_localize_naive",
      "func:test_dti_tz_localize_nonexistent_raise_coerce",
      "func:test_dti_tz_localize_nonexistent_shift",
      "func:test_dti_tz_localize_nonexistent_shift_invalid",
      "func:test_dti_tz_localize_pass_dates_to_utc",
      "func:test_dti_tz_localize_roundtrip",
      "func:test_dti_tz_localize_tzlocal",
      "func:test_dti_tz_localize_utc_conversion",
      "func:test_tz_localize_invalidates_freq",
      "func:test_tz_localize_utc_copies",
      "func:tz"
    ],
    "old_files": [
      "test_tz_localize.py_o1_mini_65adf99a.py"
    ],
    "new_files": [
      "test_tz_localize_a90669.py"
    ]
  },
  {
    "file_signature": [
      "class:TrainerCallback",
      "func:__init__",
      "func:load_state_dict",
      "func:on_backward",
      "func:on_batch",
      "func:on_end",
      "func:on_epoch",
      "func:on_start",
      "func:state_dict"
    ],
    "old_files": [
      "callback.py_o3_mini_1dcc5b58.py"
    ],
    "new_files": [
      "callback_4e27f8.py"
    ]
  },
  {
    "file_signature": [
      "class:MailNotificationService",
      "func:__init__",
      "func:_attach_file",
      "func:_build_html_msg",
      "func:_build_multipart_msg",
      "func:_build_text_msg",
      "func:_send_email",
      "func:connect",
      "func:connection_is_valid",
      "func:get_service",
      "func:send_message"
    ],
    "old_files": [
      "notify.py_o3_mini_79a4d062.py"
    ],
    "new_files": [
      "notify_74dbdd.py"
    ]
  },
  {
    "file_signature": [
      "class:OctoPrintEstimatedFinishTimeSensor",
      "class:OctoPrintJobPercentageSensor",
      "class:OctoPrintSensorBase",
      "class:OctoPrintStartTimeSensor",
      "class:OctoPrintStatusSensor",
      "class:OctoPrintTemperatureSensor",
      "func:__init__",
      "func:_is_printer_printing",
      "func:async_add_tool_sensors",
      "func:available",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_o1_mini_58ff999d.py"
    ],
    "new_files": [
      "sensor_ab37f6.py"
    ]
  },
  {
    "file_signature": [
      "class:DoctestSyntaxError",
      "class:DuplicateArgument",
      "class:ImportShadowedByLoopVar",
      "class:ImportStarUsed",
      "class:LateFutureImport",
      "class:Message",
      "class:RedefinedInListComp",
      "class:RedefinedWhileUnused",
      "class:ReturnOutsideFunction",
      "class:ReturnWithArgsInsideGenerator",
      "class:UndefinedExport",
      "class:UndefinedLocal",
      "class:UndefinedName",
      "class:UnusedImport",
      "class:UnusedVariable",
      "func:__init__",
      "func:__str__"
    ],
    "old_files": [
      "messages.py_o1_mini_4d9edd21.py"
    ],
    "new_files": [
      "messages_0d6d46.py"
    ]
  },
  {
    "file_signature": [
      "class:SliceCombinerTest",
      "func:create_dataset",
      "func:f",
      "func:g",
      "func:setUp",
      "func:test_make_slice_dataloader",
      "func:test_scores_pipeline",
      "func:test_slice_tasks"
    ],
    "old_files": [
      "test_sliceaware_classifier.py_o1_mini_e30a3084.py"
    ],
    "new_files": [
      "test_sliceaware_classifier_1e31e5.py"
    ]
  },
  {
    "file_signature": [
      "class:LgTVDevice",
      "func:__init__",
      "func:__update_volume",
      "func:is_volume_muted",
      "func:media_channel",
      "func:media_content_id",
      "func:media_image_url",
      "func:media_next_track",
      "func:media_pause",
      "func:media_play",
      "func:media_previous_track",
      "func:media_stop",
      "func:media_title",
      "func:mute_volume",
      "func:play_media",
      "func:select_source",
      "func:send_command",
      "func:set_volume_level",
      "func:source",
      "func:source_list",
      "func:supported_features",
      "func:turn_off",
      "func:update",
      "func:volume_down",
      "func:volume_level",
      "func:volume_up"
    ],
    "old_files": [
      "media_player.py_o1_mini_ab8a670a.py"
    ],
    "new_files": [
      "media_player_7d6a6e.py"
    ]
  },
  {
    "file_signature": [
      "func:_akima_interpolate",
      "func:_backfill_1d",
      "func:_backfill_2d",
      "func:_cubicspline_interpolate",
      "func:_datetimelike_compat",
      "func:_fill_limit_area_1d",
      "func:_fill_limit_area_2d",
      "func:_fillna_prep",
      "func:_from_derivatives",
      "func:_index_to_interp_indices",
      "func:_interp_limit",
      "func:_interpolate_1d",
      "func:_interpolate_scipy_wrapper",
      "func:_pad_1d",
      "func:_pad_2d",
      "func:check_value_size",
      "func:clean_fill_method",
      "func:clean_interp_method",
      "func:clean_reindex_fill_method",
      "func:find_valid_index",
      "func:func",
      "func:get_fill_func",
      "func:get_interp_index",
      "func:infer_limit_direction",
      "func:inner",
      "func:interpolate_2d_inplace",
      "func:mask_missing",
      "func:new_func",
      "func:pad_or_backfill_inplace",
      "func:validate_limit_area",
      "func:validate_limit_direction"
    ],
    "old_files": [
      "missing.py_o3_mini_68837e1d.py"
    ],
    "new_files": [
      "missing_3e0a9c.py"
    ]
  },
  {
    "file_signature": [
      "class:MemoryLockManager",
      "class:_LockInfo",
      "func:__init__",
      "func:__new__",
      "func:_expire_lock",
      "func:acquire_lock",
      "func:is_lock_holder",
      "func:is_locked",
      "func:release_lock",
      "func:wait_for_lock"
    ],
    "old_files": [
      "memory.py_o1_mini_ca2ce909.py"
    ],
    "new_files": [
      "memory_df2954.py"
    ]
  },
  {
    "file_signature": [
      "class:ActiveUserDict",
      "class:RecipientInfoResult",
      "class:SentMessageResult",
      "class:UserData",
      "func:_internal_prep_message",
      "func:already_sent_mirrored_message_id",
      "func:build_message_send_dict",
      "func:check_can_send_direct_message",
      "func:check_message",
      "func:check_send_message",
      "func:check_send_private_message",
      "func:check_send_stream_message",
      "func:check_send_stream_message_by_id",
      "func:check_sender_can_access_recipients",
      "func:compute_irc_user_fullname",
      "func:compute_jabber_user_fullname",
      "func:create_mirror_user_if_needed",
      "func:create_user_messages",
      "func:do_send_messages",
      "func:extract_private_recipients",
      "func:extract_stream_indicator",
      "func:filter_presence_idle_user_ids",
      "func:followed_topic_notification_recipients",
      "func:get_active_presence_idle_user_ids",
      "func:get_ids_for",
      "func:get_recipient_info",
      "func:get_recipients_for_user_creation_events",
      "func:get_service_bot_events",
      "func:get_user_profile_delivery_email_cache_key",
      "func:get_validated_emails",
      "func:get_validated_user_ids",
      "func:internal_prep_group_direct_message",
      "func:internal_prep_private_message",
      "func:internal_prep_stream_message",
      "func:internal_prep_stream_message_by_name",
      "func:internal_send_group_direct_message",
      "func:internal_send_private_message",
      "func:internal_send_stream_message",
      "func:internal_send_stream_message_by_name",
      "func:maybe_add_event",
      "func:notification_recipients",
      "func:render_incoming_message",
      "func:send_pm_if_empty_stream",
      "func:send_rate_limited_pm_notification_to_bot_owner",
      "func:validate_stream_id_with_pm_notification",
      "func:validate_stream_name_with_pm_notification"
    ],
    "old_files": [
      "message_send.py_o3_mini_c3e58676.py"
    ],
    "new_files": [
      "message_send_b7048c.py"
    ]
  },
  {
    "file_signature": [
      "class:_ResponseArgs",
      "func:_make_ssl_transport_dummy",
      "func:_patch_ssl_transport",
      "func:mock_is_file",
      "func:proxy_test_server",
      "func:secure_proxy_url",
      "func:web_server_endpoint_payload",
      "func:web_server_endpoint_type"
    ],
    "old_files": [
      "test_proxy_functional.py_o1_mini_9569b1ca.py"
    ],
    "new_files": [
      "test_proxy_functional_150ce7.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseMissingTests",
      "func:test_dropna_array",
      "func:test_dropna_frame",
      "func:test_dropna_series",
      "func:test_ffill_limit_area",
      "func:test_fillna_fill_other",
      "func:test_fillna_frame",
      "func:test_fillna_limit_backfill",
      "func:test_fillna_limit_pad",
      "func:test_fillna_no_op_returns_copy",
      "func:test_fillna_scalar",
      "func:test_fillna_series",
      "func:test_fillna_series_method",
      "func:test_fillna_with_none",
      "func:test_isna",
      "func:test_isna_returns_copy"
    ],
    "old_files": [
      "missing.py_o1_mini_dc85ca80.py"
    ],
    "new_files": [
      "missing_a60b28.py"
    ]
  },
  {
    "file_signature": [
      "class:PythonLintHandler",
      "func:__init__",
      "func:_configure_linters",
      "func:_merge",
      "func:_normalize",
      "func:import_validator",
      "func:lint",
      "func:mypy",
      "func:pep257",
      "func:pep8",
      "func:pyflakes",
      "func:pylint"
    ],
    "old_files": [
      "python_lint_handler.py_o1_mini_bc6a67c9.py"
    ],
    "new_files": [
      "python_lint_handler_d8f325.py"
    ]
  },
  {
    "file_signature": [
      "class:ConsumerMessage",
      "class:FutureMessage",
      "class:Message",
      "class:PendingMessage",
      "class:RecordMetadata",
      "class:TP",
      "class:_ChannelT",
      "class:_ConsumerT",
      "func:_PendingMessage_to_Message",
      "func:__init__",
      "func:__repr__",
      "func:_get_len",
      "func:ack",
      "func:decref",
      "func:from_message",
      "func:incref",
      "func:on_final_ack",
      "func:set_result",
      "func:tp_set_to_map"
    ],
    "old_files": [
      "tuples.py_o3_mini_03a2bff8.py"
    ],
    "new_files": [
      "tuples_43cb14.py"
    ]
  },
  {
    "file_signature": [
      "class:TestClient",
      "class:WebSocketDenialResponse",
      "class:WebSocketTestSession",
      "class:_AsyncBackend",
      "class:_TestClientTransport",
      "class:_Upgrade",
      "class:_WrapASGI2",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_is_asgi3",
      "func:_portal_factory",
      "func:_raise_on_close",
      "func:close",
      "func:delete",
      "func:get",
      "func:handle_request",
      "func:head",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:receive",
      "func:receive_bytes",
      "func:receive_json",
      "func:receive_text",
      "func:request",
      "func:reset_portal",
      "func:send",
      "func:send_bytes",
      "func:send_json",
      "func:send_text",
      "func:wait_shutdown",
      "func:websocket_connect"
    ],
    "old_files": [
      "testclient.py_o3_mini_b53c0624.py"
    ],
    "new_files": [
      "testclient_6e1da5.py"
    ]
  },
  {
    "file_signature": [
      "class:SQLQueryCounter",
      "func:__call__",
      "func:__init__",
      "func:client_cache_items",
      "func:fill_remote_cache",
      "func:get_active_realm_ids",
      "func:get_narrow_users",
      "func:get_users",
      "func:session_cache_items",
      "func:user_cache_items",
      "func:user_narrow_cache_items"
    ],
    "old_files": [
      "cache_helpers.py_o1_mini_cb41589e.py"
    ],
    "new_files": [
      "cache_helpers_e012c1.py"
    ]
  },
  {
    "file_signature": [
      "class:freqai_test_strat",
      "func:feature_engineering_expand_all",
      "func:feature_engineering_expand_basic",
      "func:feature_engineering_standard",
      "func:populate_entry_trend",
      "func:populate_exit_trend",
      "func:populate_indicators",
      "func:set_freqai_targets"
    ],
    "old_files": [
      "freqai_test_strat.py_o1_mini_1f03992b.py"
    ],
    "new_files": [
      "freqai_test_strat_0dc220.py"
    ]
  },
  {
    "file_signature": [
      "func:make_channel_pair",
      "func:running_sum",
      "func:test_fee_add_remove_invariant",
      "func:test_fee_capping",
      "func:test_fee_round_trip",
      "func:test_get_lock_amount_after_fees",
      "func:test_get_lock_amount_after_fees_imbalanced_channel",
      "func:test_imbalance_penalty",
      "func:test_interpolation",
      "func:test_linspace",
      "func:test_mfee1",
      "func:test_mfee2",
      "func:test_mfee3",
      "func:test_mfee4",
      "func:test_rebalancing_fee_calculation"
    ],
    "old_files": [
      "test_mediation_fee.py_o1_mini_bcbdb4de.py"
    ],
    "new_files": [
      "test_mediation_fee_82ecfe.py"
    ]
  },
  {
    "file_signature": [
      "class:DeploymentPaginationResponse",
      "class:DeploymentResponse",
      "class:FlowPaginationResponse",
      "class:FlowRunPaginationResponse",
      "class:FlowRunResponse",
      "class:GlobalConcurrencyLimitResponse",
      "class:HistoryResponse",
      "class:HistoryResponseState",
      "class:OrchestrationResult",
      "class:SchemaValueIndexError",
      "class:SchemaValuePropertyError",
      "class:SchemaValuesValidationResponse",
      "class:SetStateStatus",
      "class:StateAbortDetails",
      "class:StateAcceptDetails",
      "class:StateRejectDetails",
      "class:StateWaitDetails",
      "class:WorkQueueResponse",
      "class:WorkQueueWithStatus",
      "class:WorkerFlowRunResponse",
      "class:WorkerResponse",
      "func:__eq__",
      "func:model_validate",
      "func:validate_timestamps"
    ],
    "old_files": [
      "responses.py_o1_mini_60ef7b70.py"
    ],
    "new_files": [
      "responses_7e84ca.py"
    ]
  },
  {
    "file_signature": [
      "func:assign_customer",
      "func:process_action",
      "func:process_alert",
      "func:process_delete",
      "func:process_note",
      "func:process_status"
    ],
    "old_files": [
      "api.py_o1_mini_a31f2df4.py"
    ],
    "new_files": [
      "api_1f14a8.py"
    ]
  },
  {
    "file_signature": [
      "class:Retry",
      "func:__init__",
      "func:__repr__",
      "func:_is_connection_error",
      "func:_is_method_retryable",
      "func:_is_read_error",
      "func:_sleep_backoff",
      "func:from_int",
      "func:get_backoff_time",
      "func:get_retry_after",
      "func:increment",
      "func:is_exhausted",
      "func:is_retry",
      "func:new",
      "func:parse_retry_after",
      "func:sleep",
      "func:sleep_for_retry"
    ],
    "old_files": [
      "retry.py_o1_mini_09c31389.py"
    ],
    "new_files": [
      "retry_71dc8b.py"
    ]
  },
  {
    "file_signature": [
      "class:DeflateDecoder",
      "class:GzipDecoder",
      "class:HTTPResponse",
      "func:__getattr__",
      "func:__init__",
      "func:_decode",
      "func:_error_catcher",
      "func:_flush_decoder",
      "func:_get_decoder",
      "func:_init_decoder",
      "func:close",
      "func:closed",
      "func:connection",
      "func:data",
      "func:decompress",
      "func:fileno",
      "func:from_base",
      "func:get_redirect_location",
      "func:getheader",
      "func:getheaders",
      "func:info",
      "func:read",
      "func:readable",
      "func:readinto",
      "func:release_conn",
      "func:stream",
      "func:tell"
    ],
    "old_files": [
      "response.py_o3_mini_c8730d4d.py"
    ],
    "new_files": [
      "response_365c37.py"
    ]
  },
  {
    "file_signature": [
      "func:clear_if_finalized",
      "func:events_for_balanceproof",
      "func:events_for_expired_pairs",
      "func:events_for_onchain_secretreveal_if_closed",
      "func:events_for_onchain_secretreveal_if_dangerzone",
      "func:events_for_secretreveal",
      "func:events_to_remove_expired_locks",
      "func:find_intersection",
      "func:forward_transfer_pair",
      "func:get_amount_without_fees",
      "func:get_payee_channel",
      "func:get_payer_channel",
      "func:get_pending_transfer_pairs",
      "func:handle_block",
      "func:handle_init",
      "func:handle_lock_expired",
      "func:handle_offchain_secretreveal",
      "func:handle_onchain_secretreveal",
      "func:handle_refundtransfer",
      "func:handle_unlock",
      "func:has_secret_registration_started",
      "func:is_lock_valid",
      "func:is_safe_to_wait",
      "func:is_send_transfer_almost_equal",
      "func:mediate_transfer",
      "func:sanity_check",
      "func:secret_learned",
      "func:set_offchain_reveal_state",
      "func:set_offchain_secret",
      "func:set_onchain_secret",
      "func:state_transition"
    ],
    "old_files": [
      "mediator.py_o1_mini_18d28abe.py"
    ],
    "new_files": [
      "mediator_edd547.py"
    ]
  },
  {
    "file_signature": [
      "func:make_api_task",
      "func:mock_api",
      "func:mock_api_side_effect",
      "func:mock_api_status",
      "func:mock_due",
      "func:mock_setup_entry",
      "func:mock_tasks",
      "func:mock_todoist_config_entry",
      "func:mock_todoist_domain",
      "func:platforms"
    ],
    "old_files": [
      "conftest.py_o1_mini_ce9dda9c.py"
    ],
    "new_files": [
      "conftest_ddc29c.py"
    ]
  },
  {
    "file_signature": [
      "class:ResolverSubclass",
      "class:TestBaseResolver",
      "class:TestRuntimeRefResolver",
      "class:TestRuntimeSourceResolver",
      "func:__call__",
      "func:resolver",
      "func:test_create_relation_with_empty",
      "func:test_resolve_event_time_filter",
      "func:test_resolve_limit"
    ],
    "old_files": [
      "test_providers.py_o3_mini_7d8a7750.py"
    ],
    "new_files": [
      "test_providers_4601ba.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractEventLogger",
      "class:DBEventLogger",
      "class:StdOutEventLogger",
      "func:__call__",
      "func:__enter__",
      "func:__exit__",
      "func:_wrapper",
      "func:collect_request_payload",
      "func:curate_form_data",
      "func:curate_payload",
      "func:func",
      "func:get_event_logger_from_cfg_value",
      "func:get_logger_from_status",
      "func:log",
      "func:log_context",
      "func:log_this",
      "func:log_this_with_context",
      "func:log_this_with_extra_payload",
      "func:log_with_context",
      "func:wrapper"
    ],
    "old_files": [
      "log.py_o3_mini_08a35b3f.py"
    ],
    "new_files": [
      "log_67c6cb.py"
    ]
  },
  {
    "file_signature": [
      "class:PlotAccessor",
      "func:__call__",
      "func:__init__",
      "func:_get_call_args",
      "func:_get_plot_backend",
      "func:_load_backend",
      "func:area",
      "func:bar",
      "func:barh",
      "func:box",
      "func:boxplot",
      "func:boxplot_frame",
      "func:boxplot_frame_groupby",
      "func:hexbin",
      "func:hist",
      "func:hist_frame",
      "func:hist_series",
      "func:holds_integer",
      "func:kde",
      "func:line",
      "func:pie",
      "func:scatter"
    ],
    "old_files": [
      "_core.py_o3_mini_688d1085.py"
    ],
    "new_files": [
      "_core_627b18.py"
    ]
  },
  {
    "file_signature": [
      "class:Dummy",
      "class:Inner",
      "class:Outer",
      "func:a_cached_property",
      "func:a_class_method",
      "func:a_property",
      "func:a_settable_property",
      "func:a_static_method",
      "func:an_instance_method",
      "func:f",
      "func:has_complex_signature",
      "func:smartcov_paths_hook",
      "func:transform_path"
    ],
    "old_files": [
      "util.py_o1_mini_32addba5.py"
    ],
    "new_files": [
      "util_d92a2e.py"
    ]
  },
  {
    "file_signature": [
      "func:local_matrix_servers",
      "func:local_matrix_servers_with_executor",
      "func:matrix_server_count",
      "func:matrix_sync_timeout",
      "func:matrix_transports",
      "func:resolver_ports",
      "func:synapse_config_generator"
    ],
    "old_files": [
      "transport.py_o1_mini_5fa62350.py"
    ],
    "new_files": [
      "transport_2d9279.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoGeolocationEvent",
      "class:DemoManager",
      "func:__init__",
      "func:_generate_random_event",
      "func:_init_regular_updates",
      "func:_update",
      "func:distance",
      "func:latitude",
      "func:longitude",
      "func:setup_platform",
      "func:source",
      "func:unit_of_measurement"
    ],
    "old_files": [
      "geo_location.py_o1_mini_c0edfff6.py"
    ],
    "new_files": [
      "geo_location_9da493.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseSampleMode",
      "class:TestBasicSampleMode",
      "class:TestIncrementalModelSampleModeRelative",
      "class:TestIncrementalModelSampleModeSpecific",
      "class:TestMicrobatchSampleMode",
      "class:TestSampleSeedRefs",
      "func:assert_row_count",
      "func:event_catcher",
      "func:event_time_end_catcher",
      "func:event_time_start_catcher",
      "func:models",
      "func:seeds",
      "func:test_incremental_model_sample",
      "func:test_sample_mode"
    ],
    "old_files": [
      "test_sample_mode.py_o1_mini_40df71d0.py"
    ],
    "new_files": [
      "test_sample_mode_75a9c6.py"
    ]
  },
  {
    "file_signature": [
      "func:build_stream_api_dict",
      "func:build_stream_dict_for_never_sub",
      "func:build_stream_dict_for_sub",
      "func:build_unsubscribed_sub_from_stream_dict",
      "func:bulk_get_subscriber_peer_info",
      "func:bulk_get_subscriber_user_ids",
      "func:gather_subscriptions",
      "func:gather_subscriptions_helper",
      "func:get_next_color",
      "func:get_stream_id",
      "func:get_subscribers_query",
      "func:get_web_public_subs",
      "func:has_metadata_access_to_previously_subscribed_stream",
      "func:validate_user_access_to_subscribers",
      "func:validate_user_access_to_subscribers_helper"
    ],
    "old_files": [
      "subscription_info.py_o1_mini_bad27e04.py"
    ],
    "new_files": [
      "subscription_info_2fc87f.py"
    ]
  },
  {
    "file_signature": [
      "class:ArrayStrategy",
      "func:__init__",
      "func:__repr__",
      "func:_dtype_from_args",
      "func:_from_type",
      "func:_no_title_is_name_of_a_titled_field",
      "func:_try_import",
      "func:_unpack_dtype",
      "func:_unpack_generic",
      "func:array_dtypes",
      "func:array_for",
      "func:arrays",
      "func:basic_indices",
      "func:boolean_dtypes",
      "func:byte_string_dtypes",
      "func:compat_kw",
      "func:complex_number_dtypes",
      "func:datetime64_dtypes",
      "func:defines_dtype_strategy",
      "func:do_draw",
      "func:dtype_factory",
      "func:fill_for",
      "func:floating_dtypes",
      "func:from_dtype",
      "func:inner",
      "func:integer_array_indices",
      "func:integer_dtypes",
      "func:mutually_broadcastable_shapes",
      "func:nested_dtypes",
      "func:scalar_dtypes",
      "func:set_element",
      "func:timedelta64_dtypes",
      "func:unicode_string_dtypes",
      "func:unsigned_integer_dtypes",
      "func:valid_tuple_axes",
      "func:validate_time_slice"
    ],
    "old_files": [
      "numpy.py_o3_mini_24b50428.py"
    ],
    "new_files": [
      "numpy_f7c5e7.py"
    ]
  },
  {
    "file_signature": [
      "class:RangeIndex",
      "func:__abs__",
      "func:__contains__",
      "func:__floordiv__",
      "func:__getitem__",
      "func:__invert__",
      "func:__iter__",
      "func:__len__",
      "func:__neg__",
      "func:__new__",
      "func:__pos__",
      "func:__reduce__",
      "func:_argminmax",
      "func:_arith_method",
      "func:_cmp_method",
      "func:_concat",
      "func:_constructor",
      "func:_data",
      "func:_difference",
      "func:_engine_type",
      "func:_extended_gcd",
      "func:_format_attrs",
      "func:_format_with_header",
      "func:_get_data_as_items",
      "func:_get_indexer",
      "func:_getitem_slice",
      "func:_intersection",
      "func:_join_empty",
      "func:_join_monotonic",
      "func:_minmax",
      "func:_range_in_self",
      "func:_shallow_copy",
      "func:_should_fallback_to_positional",
      "func:_simple_new",
      "func:_union",
      "func:_validate_dtype",
      "func:_view",
      "func:_wrap_reindex_result",
      "func:all",
      "func:any",
      "func:argmax",
      "func:argmin",
      "func:argsort",
      "func:copy",
      "func:delete",
      "func:dtype",
      "func:equals",
      "func:factorize",
      "func:from_range",
      "func:get_loc",
      "func:inferred_type",
      "func:insert",
      "func:is_monotonic_decreasing",
      "func:is_monotonic_increasing",
      "func:is_unique",
      "func:max",
      "func:memory_usage",
      "func:min",
      "func:min_fitting_element",
      "func:nbytes",
      "func:round",
      "func:searchsorted",
      "func:size",
      "func:sort_values",
      "func:start",
      "func:step",
      "func:stop",
      "func:symmetric_difference",
      "func:take",
      "func:tolist",
      "func:value_counts"
    ],
    "old_files": [
      "range.py_o1_mini_2641469b.py"
    ],
    "new_files": [
      "range_eccc67.py"
    ]
  },
  {
    "file_signature": [
      "func:copy_default_settings",
      "func:create_user",
      "func:create_user_profile",
      "func:get_display_email_address",
      "func:get_dummy_email_address_for_display_regex"
    ],
    "old_files": [
      "create_user.py_o3_mini_b066d983.py"
    ],
    "new_files": [
      "create_user_5beae0.py"
    ]
  },
  {
    "file_signature": [
      "class:GamutType",
      "class:RGBColor",
      "class:XYPoint",
      "func:_clamp",
      "func:_get_blue",
      "func:_get_green",
      "func:_get_red",
      "func:_white_levels_to_color_temperature",
      "func:brightness_to_value",
      "func:check_point_in_lamps_reach",
      "func:check_valid_gamut",
      "func:color_RGB_to_hs",
      "func:color_RGB_to_hsv",
      "func:color_RGB_to_xy",
      "func:color_RGB_to_xy_brightness",
      "func:color_hs_to_RGB",
      "func:color_hs_to_xy",
      "func:color_hsb_to_RGB",
      "func:color_hsv_to_RGB",
      "func:color_name_to_rgb",
      "func:color_rgb_to_hex",
      "func:color_rgb_to_rgbw",
      "func:color_rgb_to_rgbww",
      "func:color_rgbw_to_rgb",
      "func:color_rgbww_to_rgb",
      "func:color_temperature_kelvin_to_mired",
      "func:color_temperature_mired_to_kelvin",
      "func:color_temperature_to_hs",
      "func:color_temperature_to_rgb",
      "func:color_temperature_to_rgbww",
      "func:color_xy_brightness_to_RGB",
      "func:color_xy_to_RGB",
      "func:color_xy_to_hs",
      "func:color_xy_to_temperature",
      "func:cross_product",
      "func:get_closest_point_to_line",
      "func:get_closest_point_to_point",
      "func:get_distance_between_two_points",
      "func:match_max_scale",
      "func:rgb_hex_to_rgb_list",
      "func:rgbww_to_color_temperature",
      "func:value_to_brightness"
    ],
    "old_files": [
      "color.py_o1_mini_b7e9c08e.py"
    ],
    "new_files": [
      "color_a02da4.py"
    ]
  },
  {
    "file_signature": [
      "class:MockBaseClassDeprecatedProperty",
      "class:MockDefaultClass",
      "class:MockDeprecatedClass",
      "class:MockUpdatedClass",
      "class:TestDeprecatedConstantEnum",
      "class:TestEnum",
      "func:_get_value",
      "func:mock_deprecated_function",
      "func:new_property",
      "func:old_property",
      "func:test_check_if_deprecated_constant",
      "func:test_check_if_deprecated_constant_integration_not_found",
      "func:test_config_get_deprecated_new",
      "func:test_config_get_deprecated_old",
      "func:test_deprecated_class",
      "func:test_deprecated_function",
      "func:test_deprecated_function_called_from_built_in_integration",
      "func:test_deprecated_function_called_from_custom_integration",
      "func:test_deprecated_substitute_default_class",
      "func:test_deprecated_substitute_new_class",
      "func:test_deprecated_substitute_old_class",
      "func:test_dir_with_deprecated_constants",
      "func:test_enum_with_deprecated_members",
      "func:test_enum_with_deprecated_members_integration_not_found",
      "func:test_test_check_if_deprecated_constant_invalid"
    ],
    "old_files": [
      "test_deprecation.py_o1_mini_98a3985d.py"
    ],
    "new_files": [
      "test_deprecation_a6e8da.py"
    ]
  },
  {
    "file_signature": [
      "class:AppKey",
      "class:BaseTimerContext",
      "class:BasicAuth",
      "class:ChainMapProxy",
      "class:CookieMixin",
      "class:ETag",
      "class:ErrorableProtocol",
      "class:HeadersMixin",
      "class:MimeType",
      "class:ProxyInfo",
      "class:TimeoutHandle",
      "class:TimerContext",
      "class:TimerNoop",
      "func:__bool__",
      "func:__call__",
      "func:__contains__",
      "func:__enter__",
      "func:__exit__",
      "func:__getitem__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__iter__",
      "func:__len__",
      "func:__lt__",
      "func:__new__",
      "func:__repr__",
      "func:_parse_content_type",
      "func:_weakref_handle",
      "func:assert_timeout",
      "func:basicauth_from_netrc",
      "func:calculate_timeout_when",
      "func:call_later",
      "func:ceil_timeout",
      "func:charset",
      "func:close",
      "func:content_disposition_header",
      "func:content_length",
      "func:content_type",
      "func:cookies",
      "func:decode",
      "func:del_cookie",
      "func:encode",
      "func:from_url",
      "func:get",
      "func:get_env_proxy_for_url",
      "func:guess_filename",
      "func:is_expected_content_type",
      "func:is_ip_address",
      "func:must_be_empty_body",
      "func:netrc_from_env",
      "func:parse_http_date",
      "func:parse_mimetype",
      "func:populate_with_cookies",
      "func:proxies_from_env",
      "func:quoted_string",
      "func:register",
      "func:rfc822_formatted_time",
      "func:set_cookie",
      "func:set_exception",
      "func:set_result",
      "func:should_remove_content_length",
      "func:start",
      "func:strip_auth_from_url",
      "func:timeout",
      "func:timer",
      "func:validate_etag_value",
      "func:weakref_handle"
    ],
    "old_files": [
      "helpers.py_o3_mini_ad3722ad.py"
    ],
    "new_files": [
      "helpers_5f1f91.py"
    ]
  },
  {
    "file_signature": [
      "class:HomematicipGroupSwitch",
      "class:HomematicipMultiSwitch",
      "class:HomematicipSwitch",
      "class:HomematicipSwitchMeasuring",
      "func:__init__",
      "func:available",
      "func:extra_state_attributes",
      "func:is_on"
    ],
    "old_files": [
      "switch.py_o1_mini_8803b2d7.py"
    ],
    "new_files": [
      "switch_aac10e.py"
    ]
  },
  {
    "file_signature": [
      "func:check_send_typing_notification",
      "func:do_send_direct_message_edit_typing_notification",
      "func:do_send_stream_message_edit_typing_notification",
      "func:do_send_stream_typing_notification",
      "func:do_send_typing_notification"
    ],
    "old_files": [
      "typing.py_o1_mini_b4e4aa33.py"
    ],
    "new_files": [
      "typing_c8a53e.py"
    ]
  },
  {
    "file_signature": [
      "class:RaidenAPI",
      "func:__init__",
      "func:_batch_coop_settle",
      "func:_raise_for_invalid_channel_timeouts",
      "func:address",
      "func:channel_batch_close",
      "func:channel_close",
      "func:channel_open",
      "func:config",
      "func:event_filter_for_payments",
      "func:flatten_transfer",
      "func:get_channel",
      "func:get_channel_list",
      "func:get_new_notifications",
      "func:get_node_network_state",
      "func:get_pending_transfers",
      "func:get_raiden_events_payment_history_with_timestamps",
      "func:get_raiden_internal_events_with_timestamps",
      "func:get_token_network_address_for_token_address",
      "func:get_tokens_list",
      "func:get_transfer_from_task",
      "func:is_already_existing_channel",
      "func:mint_token_for",
      "func:notifications",
      "func:plan_udc_withdraw",
      "func:set_reveal_timeout",
      "func:set_total_channel_deposit",
      "func:set_total_channel_withdraw",
      "func:set_total_udc_deposit",
      "func:shutdown",
      "func:token_network_leave",
      "func:token_network_register",
      "func:transfer_and_wait",
      "func:transfer_async",
      "func:transfer_tasks_view",
      "func:withdraw_from_udc"
    ],
    "old_files": [
      "python.py_o3_mini_6ca98bab.py"
    ],
    "new_files": [
      "python_f218d0.py"
    ]
  },
  {
    "file_signature": [
      "class:ZHAEntity",
      "func:__init__",
      "func:_handle_entity_events",
      "func:available",
      "func:device_info",
      "func:log",
      "func:name",
      "func:restore_external_state_attributes"
    ],
    "old_files": [
      "entity.py_o1_mini_fb3caf10.py"
    ],
    "new_files": [
      "entity_3c2299.py"
    ]
  },
  {
    "file_signature": [
      "class:JSONEncoder",
      "func:default",
      "func:dumps",
      "func:loads",
      "func:on_default",
      "func:str_to_decimal"
    ],
    "old_files": [
      "json.py_o3_mini_3bee49f9.py"
    ],
    "new_files": [
      "json_7b3477.py"
    ]
  },
  {
    "file_signature": [
      "class:Apply",
      "class:EWMMethods",
      "class:ForwardWindowMethods",
      "class:Groupby",
      "class:GroupbyEWM",
      "class:GroupbyEWMEngine",
      "class:GroupbyLargeGroups",
      "class:Methods",
      "class:NumbaEngineApply",
      "class:NumbaEngineMethods",
      "class:Pairwise",
      "class:PeakMemFixedWindowMinMax",
      "class:Quantile",
      "class:Rank",
      "class:TableMethod",
      "class:VariableWindowMethods",
      "func:peakmem_fixed",
      "func:peakmem_method",
      "func:peakmem_rolling",
      "func:setup",
      "func:table_method_func",
      "func:test_method",
      "func:time_apply",
      "func:time_ewm",
      "func:time_ewm_mean",
      "func:time_groupby",
      "func:time_groupby_mean",
      "func:time_groupby_method",
      "func:time_method",
      "func:time_pairwise",
      "func:time_quantile",
      "func:time_rank",
      "func:time_rolling",
      "func:time_rolling_multiindex_creation"
    ],
    "old_files": [
      "rolling.py_o1_mini_7b2c4010.py"
    ],
    "new_files": [
      "rolling_129721.py"
    ]
  },
  {
    "file_signature": [
      "class:CannotCommunicate",
      "class:CannotConnect",
      "class:DSMRConnection",
      "class:DSMRFlowHandler",
      "class:DSMROptionFlowHandler",
      "func:__init__",
      "func:async_get_options_flow",
      "func:equipment_identifier",
      "func:equipment_identifier_gas",
      "func:get_serial_by_id",
      "func:update_telegram"
    ],
    "old_files": [
      "config_flow.py_o1_mini_245b389c.py"
    ],
    "new_files": [
      "config_flow_b3a401.py"
    ]
  },
  {
    "file_signature": [
      "class:TestStrategyValidation",
      "func:empty_db",
      "func:inner",
      "func:no_explicit",
      "func:no_phases",
      "func:test_can_find_with_db_eq_none",
      "func:test_characters_codec",
      "func:test_given_shrinks_pytest_helper_errors",
      "func:test_is_not_normally_default",
      "func:test_method_with_bad_strategy",
      "func:test_no_such_example",
      "func:test_non_executed_tests_raise_skipped",
      "func:test_pytest_skip_skips_shrinking",
      "func:test_settings_are_default_in_given",
      "func:test_stops_after_max_examples_if_satisfying",
      "func:test_stops_after_ten_times_max_examples_if_not_satisfying",
      "func:test_validates_strategies_for_test_method",
      "func:track"
    ],
    "old_files": [
      "test_core.py_o1_mini_050b7066.py"
    ],
    "new_files": [
      "test_core_08030e.py"
    ]
  },
  {
    "file_signature": [
      "class:TestSparseArrayArithmetics",
      "func:_assert",
      "func:_check_bool_result",
      "func:_check_comparison_ops",
      "func:_check_logical_ops",
      "func:_check_numeric_ops",
      "func:kind",
      "func:mix",
      "func:test_binary_operators",
      "func:test_binary_ufuncs",
      "func:test_bool_array_logical",
      "func:test_bool_same_index",
      "func:test_float_array",
      "func:test_float_array_comparison",
      "func:test_float_array_different_kind",
      "func:test_float_same_index_comparison",
      "func:test_float_same_index_with_nans",
      "func:test_float_same_index_without_nans",
      "func:test_float_scalar",
      "func:test_float_scalar_comparison",
      "func:test_int_array",
      "func:test_int_array_comparison",
      "func:test_mismatched_length_arith_op",
      "func:test_mismatched_length_cmp_op",
      "func:test_mixed_array_comparison",
      "func:test_mixed_array_float_int",
      "func:test_ndarray_inplace",
      "func:test_sparray_inplace",
      "func:test_ufuncs",
      "func:test_with_dataframe",
      "func:test_with_list",
      "func:test_with_zerodim_ndarray",
      "func:test_xor"
    ],
    "old_files": [
      "test_arithmetics.py_o1_mini_1d2db0a9.py"
    ],
    "new_files": [
      "test_arithmetics_2d6e2b.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseExprVisitor",
      "class:Expr",
      "class:PandasExprVisitor",
      "class:PythonExprVisitor",
      "func:__call__",
      "func:__init__",
      "func:__len__",
      "func:__repr__",
      "func:_compose",
      "func:_compose2",
      "func:_filter_nodes",
      "func:_is_type",
      "func:_maybe_downcast_constants",
      "func:_maybe_eval",
      "func:_maybe_evaluate_binop",
      "func:_maybe_transform_eq_ne",
      "func:_node_not_implemented",
      "func:_op_maker",
      "func:_preparse",
      "func:_replace_booleans",
      "func:_replace_locals",
      "func:_rewrite_assign",
      "func:_rewrite_membership_op",
      "func:_try_visit_binop",
      "func:add_ops",
      "func:assigner",
      "func:disallow",
      "func:disallowed",
      "func:f",
      "func:names",
      "func:parse",
      "func:translate_In",
      "func:visit",
      "func:visit_Assign",
      "func:visit_Attribute",
      "func:visit_BinOp",
      "func:visit_BoolOp",
      "func:visit_Call",
      "func:visit_Compare",
      "func:visit_Constant",
      "func:visit_Expr",
      "func:visit_Index",
      "func:visit_List",
      "func:visit_Module",
      "func:visit_Name",
      "func:visit_NameConstant",
      "func:visit_Num",
      "func:visit_Slice",
      "func:visit_Str",
      "func:visit_Subscript",
      "func:visit_UnaryOp",
      "func:visitor"
    ],
    "old_files": [
      "expr.py_o1_mini_e4a118ef.py"
    ],
    "new_files": [
      "expr_a7337f.py"
    ]
  },
  {
    "file_signature": [
      "func:add_monitor",
      "func:assert_power_sensor_registered",
      "func:assert_pulse_counter_registered",
      "func:assert_sensor_registered",
      "func:assert_sensor_state",
      "func:assert_temperature_sensor_registered",
      "func:assert_voltage_sensor_registered",
      "func:monitors"
    ],
    "old_files": [
      "conftest.py_o1_mini_4058499b.py"
    ],
    "new_files": [
      "conftest_f547b4.py"
    ]
  },
  {
    "file_signature": [
      "class:Metric",
      "func:_coverage_score",
      "func:_f1_macro_score",
      "func:_f1_micro_score",
      "func:_f1_score",
      "func:_roc_auc_score",
      "func:metric_score"
    ],
    "old_files": [
      "metrics.py_o1_mini_765e3d38.py"
    ],
    "new_files": [
      "metrics_195f9f.py"
    ]
  },
  {
    "file_signature": [
      "func:_translate_output_is_valid",
      "func:check_train_translate",
      "func:test_odd_even_target_factors",
      "func:test_scoring",
      "func:test_translate_equivalence"
    ],
    "old_files": [
      "common.py_o1_mini_94644383.py"
    ],
    "new_files": [
      "common_fcbb68.py"
    ]
  },
  {
    "file_signature": [
      "class:Affine",
      "class:ArctanBound",
      "class:BoundTransform",
      "class:Clipping",
      "class:CumulativeDensity",
      "class:Exponentiate",
      "class:Fourrier",
      "class:Reverted",
      "class:TanhBound",
      "class:Transform",
      "func:__init__",
      "func:__repr__",
      "func:_check_shape",
      "func:_f",
      "func:backward",
      "func:bound_to_array",
      "func:forward",
      "func:reverted"
    ],
    "old_files": [
      "transforms.py_o1_mini_6e373cdf.py"
    ],
    "new_files": [
      "transforms_f38536.py"
    ]
  },
  {
    "file_signature": [
      "func:index_or_series2",
      "func:test_cat_different_classes",
      "func:test_cat_on_filtered_index",
      "func:test_cat_on_series_dot_str",
      "func:test_str_cat",
      "func:test_str_cat_align_indexed",
      "func:test_str_cat_align_mixed_inputs",
      "func:test_str_cat_all_na",
      "func:test_str_cat_categorical",
      "func:test_str_cat_mixed_inputs",
      "func:test_str_cat_name",
      "func:test_str_cat_raises_intuitive_error",
      "func:test_str_cat_special_cases",
      "func:test_str_cat_wrong_dtype_raises"
    ],
    "old_files": [
      "test_cat.py_o1_mini_7f01fd9a.py"
    ],
    "new_files": [
      "test_cat_c39959.py"
    ]
  },
  {
    "file_signature": [
      "class:DeconzBatteryTracker",
      "class:DeconzSensor",
      "class:DeconzSensorDescription",
      "func:__init__",
      "func:async_add_sensor",
      "func:async_update_callback",
      "func:extra_state_attributes",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_o1_mini_5402843b.py"
    ],
    "new_files": [
      "sensor_afd46b.py"
    ]
  },
  {
    "file_signature": [
      "class:RestData",
      "func:__init__",
      "func:data_without_xml",
      "func:set_payload",
      "func:set_url",
      "func:url"
    ],
    "old_files": [
      "data.py_o3_mini_f36d47b3.py"
    ],
    "new_files": [
      "data_b998b2.py"
    ]
  },
  {
    "file_signature": [
      "class:Forwarder",
      "func:append_to_header",
      "func:delete",
      "func:is_in_xloop",
      "func:post_receive",
      "func:pre_receive",
      "func:status_change",
      "func:take_action"
    ],
    "old_files": [
      "forwarder.py_o1_mini_46b0ae59.py"
    ],
    "new_files": [
      "forwarder_298c02.py"
    ]
  },
  {
    "file_signature": [
      "class:ClientSession",
      "class:ClientTimeout",
      "class:_BaseRequestContextManager",
      "class:_RequestOptions",
      "class:_SessionRequestContextManager",
      "func:__await__",
      "func:__del__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__iter__",
      "func:_build_url",
      "func:_prepare_headers",
      "func:auth",
      "func:auto_decompress",
      "func:close",
      "func:closed",
      "func:connector",
      "func:connector_owner",
      "func:cookie_jar",
      "func:delete",
      "func:detach",
      "func:get",
      "func:head",
      "func:headers",
      "func:json_serialize",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:raise_for_status",
      "func:request",
      "func:requote_redirect_url",
      "func:send",
      "func:skip_auto_headers",
      "func:throw",
      "func:timeout",
      "func:trace_configs",
      "func:trust_env",
      "func:version",
      "func:ws_connect"
    ],
    "old_files": [
      "client.py_o3_mini_e3fb94fd.py"
    ],
    "new_files": [
      "client_87f577.py"
    ]
  },
  {
    "file_signature": [
      "class:BuildPyCommand",
      "class:PySpecCommand",
      "class:PyspecDevCommand",
      "class:PyspecFilter",
      "func:_get_class_info_from_source",
      "func:_get_eth2_spec_comment",
      "func:_get_function_name_from_source",
      "func:_get_name_from_heading",
      "func:_get_self_type_from_source",
      "func:_get_source_from_code_block",
      "func:_is_constant_id",
      "func:_load_curdleproofs_crs",
      "func:_load_kzg_trusted_setups",
      "func:_parse_value",
      "func:_update_constant_vars_with_kzg_setups",
      "func:build_spec",
      "func:filter",
      "func:finalize_options",
      "func:get_spec",
      "func:initialize_options",
      "func:load_config",
      "func:load_preset",
      "func:parse_markdown",
      "func:run",
      "func:run_pyspec_cmd"
    ],
    "old_files": [
      "setup.py_o1_mini_c0544850.py"
    ],
    "new_files": [
      "setup_25159f.py"
    ]
  },
  {
    "file_signature": [
      "class:RateLimitResult",
      "class:RateLimitedEndpoint",
      "class:RateLimitedIPAddr",
      "class:RateLimitedObject",
      "class:RateLimitedSpectatorAttachmentAccessByFile",
      "class:RateLimitedUser",
      "class:RateLimiterBackend",
      "class:RateLimiterLockingError",
      "class:RedisRateLimiterBackend",
      "class:TornadoInMemoryRateLimiterBackend",
      "func:__init__",
      "func:_garbage_collect_for_rule",
      "func:api_calls_left",
      "func:block_access",
      "func:clear_history",
      "func:client_is_exempt_from_rate_limiting",
      "func:get_api_calls_left",
      "func:get_keys",
      "func:get_rules",
      "func:get_tor_ips",
      "func:incr_ratelimit",
      "func:is_local_addr",
      "func:is_ratelimited",
      "func:key",
      "func:max_api_calls",
      "func:max_api_window",
      "func:need_to_limit",
      "func:rate_limit",
      "func:rate_limit_endpoint_absolute",
      "func:rate_limit_entity",
      "func:rate_limit_request",
      "func:rate_limit_request_by_ip",
      "func:rate_limit_spectator_attachment_access_by_file",
      "func:rate_limit_user",
      "func:rules",
      "func:should_rate_limit",
      "func:unblock_access"
    ],
    "old_files": [
      "rate_limiter.py_o1_mini_dfe84514.py"
    ],
    "new_files": [
      "rate_limiter_5a146f.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoWeather",
      "func:__init__",
      "func:condition",
      "func:humidity",
      "func:native_pressure",
      "func:native_pressure_unit",
      "func:native_temperature",
      "func:native_temperature_unit",
      "func:native_wind_speed",
      "func:native_wind_speed_unit"
    ],
    "old_files": [
      "weather.py_o3_mini_206013a4.py",
      "weather.py_o3_mini_4e219085.py"
    ],
    "new_files": [
      "weather_020398.py",
      "weather_6c1670.py"
    ]
  },
  {
    "file_signature": [
      "class:BenchmarkChunk",
      "class:Moduler",
      "func:__call__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:_submit_jobs",
      "func:compute",
      "func:id",
      "func:import_additional_module",
      "func:moduler",
      "func:save_or_append_to_csv",
      "func:split"
    ],
    "old_files": [
      "core.py_o1_mini_ffc8e6e8.py"
    ],
    "new_files": [
      "core_9c7c0d.py"
    ]
  },
  {
    "file_signature": [
      "func:changed_args",
      "func:cli_args",
      "func:cli_tests_contracts_version",
      "func:dont_print_step",
      "func:raiden_spawner",
      "func:raiden_testchain",
      "func:removed_args",
      "func:spawn_raiden"
    ],
    "old_files": [
      "conftest.py_o1_mini_8b971bd2.py"
    ],
    "new_files": [
      "conftest_0be5a6.py"
    ]
  },
  {
    "file_signature": [
      "class:TestArtifacts",
      "class:TestAutomations",
      "class:TestClientAPIKey",
      "class:TestClientAPIVersionRequests",
      "class:TestClientAuthString",
      "class:TestClientContextManager",
      "class:TestClientProxyAwareness",
      "class:TestClientWorkQueues",
      "class:TestGetClient",
      "class:TestInjectClient",
      "class:TestPrefectClientCsrfSupport",
      "class:TestPrefectClientDeploymentSchedules",
      "class:TestPrefectClientRaiseForAPIVersionMismatch",
      "class:TestPrefectClientWorkerHeartbeat",
      "class:TestSyncClient",
      "class:TestSyncClientRaiseForAPIVersionMismatch",
      "class:TestVariables",
      "class:TestWorkPools",
      "func:automation",
      "func:automation2",
      "func:bar",
      "func:do_nothing",
      "func:foo",
      "func:foobar",
      "func:hello",
      "func:http_proxy",
      "func:https_proxy",
      "func:major_version",
      "func:make_lifespan",
      "func:minor_version",
      "func:moo_deng",
      "func:not_enough_open_files",
      "func:patch_version",
      "func:remote_http_api",
      "func:remote_https_api",
      "func:something_went_wrong",
      "func:test_api_version",
      "func:test_enabled_ephemeral",
      "func:test_fixture_is_sync",
      "func:test_get_client_cache_uses_profile_settings",
      "func:test_get_client_does_not_cache_client",
      "func:test_get_client_rasises_error_when_no_api_url_and_no_ephemeral_mode",
      "func:test_get_client_returns_client",
      "func:test_get_client_starts_subprocess_server_when_enabled",
      "func:test_get_sync_client",
      "func:test_hello",
      "func:test_raise_for_api_version_mismatch",
      "func:test_raise_for_api_version_mismatch_against_cloud",
      "func:test_raise_for_api_version_mismatch_when_api_unreachable",
      "func:test_raise_for_api_version_mismatch_with_incompatible_versions",
      "func:test_server_type_ephemeral",
      "func:versions"
    ],
    "old_files": [
      "test_prefect_client.py_o1_mini_59d61d71.py"
    ],
    "new_files": [
      "test_prefect_client_9ba189.py"
    ]
  },
  {
    "file_signature": [
      "class:DatetimeIndex",
      "func:__new__",
      "func:__reduce__",
      "func:_can_range_setop",
      "func:_disallow_mismatched_indexing",
      "func:_engine_type",
      "func:_formatter_func",
      "func:_get_time_micros",
      "func:_is_comparable_dtype",
      "func:_is_dates_only",
      "func:_maybe_cast_slice_bound",
      "func:_new_DatetimeIndex",
      "func:_parse_with_reso",
      "func:_parsed_string_to_bounds",
      "func:_resolution_obj",
      "func:_time_to_micros",
      "func:bdate_range",
      "func:check_str_or_none",
      "func:date_range",
      "func:get_loc",
      "func:indexer_at_time",
      "func:indexer_between_time",
      "func:inferred_type",
      "func:isocalendar",
      "func:slice_indexer",
      "func:snap",
      "func:strftime",
      "func:to_julian_date",
      "func:to_period",
      "func:tz_convert",
      "func:tz_localize"
    ],
    "old_files": [
      "datetimes.py_o3_mini_b610e23a.py"
    ],
    "new_files": [
      "datetimes_224965.py"
    ]
  },
  {
    "file_signature": [
      "class:InputReduction",
      "func:__init__",
      "func:_attack_instance",
      "func:_get_ner_tags_and_mask",
      "func:_remove_one_token",
      "func:attack_from_json",
      "func:get_length"
    ],
    "old_files": [
      "input_reduction.py_o1_mini_3f881361.py"
    ],
    "new_files": [
      "input_reduction_cfaaeb.py"
    ]
  },
  {
    "file_signature": [
      "func:clamp",
      "func:count_between_floats",
      "func:float_clamper",
      "func:float_of",
      "func:float_permitted",
      "func:float_to_int",
      "func:int_to_float",
      "func:is_negative",
      "func:make_float_clamper",
      "func:next_down",
      "func:next_down_normal",
      "func:next_up",
      "func:next_up_normal",
      "func:reinterpret_bits",
      "func:sign_aware_lte"
    ],
    "old_files": [
      "floats.py_o1_mini_ce2412a7.py"
    ],
    "new_files": [
      "floats_47251e.py"
    ]
  },
  {
    "file_signature": [
      "class:InfluenceInterpreter",
      "class:InstanceInfluence",
      "class:InstanceWithGrads",
      "class:InterpretOutput",
      "func:__init__",
      "func:_calculate_influence_scores",
      "func:_gather_instances",
      "func:_gather_train_instances_and_compute_gradients",
      "func:from_archive",
      "func:from_path",
      "func:interpret",
      "func:interpret_from_file",
      "func:interpret_instances",
      "func:train_instances",
      "func:used_param_names",
      "func:used_params"
    ],
    "old_files": [
      "influence_interpreter.py_o3_mini_c61f4344.py"
    ],
    "new_files": [
      "influence_interpreter_a2577a.py"
    ]
  },
  {
    "file_signature": [
      "class:PilightSensor",
      "func:__init__",
      "func:_handle_code",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform"
    ],
    "old_files": [
      "sensor.py_o1_mini_4c09ee3c.py"
    ],
    "new_files": [
      "sensor_f532d5.py"
    ]
  },
  {
    "file_signature": [
      "func:build_gld_probs",
      "func:query_test",
      "func:test_interleaved_multihead_attention",
      "func:test_interleaved_multihead_self_attention",
      "func:test_knn_layer",
      "func:test_lhuc",
      "func:test_output_layer",
      "func:test_positional_embeddings",
      "func:test_source_length_mask"
    ],
    "old_files": [
      "test_layers.py_o1_mini_2c94b4d9.py"
    ],
    "new_files": [
      "test_layers_95be9f.py"
    ]
  },
  {
    "file_signature": [
      "class:MBCover",
      "func:__init__",
      "func:_reset_open_close",
      "func:actuator_down",
      "func:actuator_up",
      "func:name"
    ],
    "old_files": [
      "cover.py_o1_mini_370912ea.py"
    ],
    "new_files": [
      "cover_b92bd5.py"
    ]
  },
  {
    "file_signature": [
      "class:CheckConfigError",
      "class:HomeAssistantConfig",
      "func:__init__",
      "func:_comp_error",
      "func:_pack_error",
      "func:add_error",
      "func:add_warning",
      "func:error_str",
      "func:warning_str"
    ],
    "old_files": [
      "check_config.py_o1_mini_9da79f7c.py"
    ],
    "new_files": [
      "check_config_125c88.py"
    ]
  },
  {
    "file_signature": [
      "func:gen_ws_headers",
      "func:test_handshake_compress_bad_ext",
      "func:test_handshake_compress_client_notakeover",
      "func:test_handshake_compress_multi_ext_bad",
      "func:test_handshake_compress_multi_ext_wbits",
      "func:test_handshake_compress_server_notakeover",
      "func:test_handshake_compress_wbits",
      "func:test_handshake_compress_wbits_error",
      "func:test_handshake_no_transfer_encoding"
    ],
    "old_files": [
      "test_websocket_handshake.py_o1_mini_5fe4076a.py"
    ],
    "new_files": [
      "test_websocket_handshake_a4bf54.py"
    ]
  },
  {
    "file_signature": [
      "class:ModelTestCase",
      "func:assert_fields_equal",
      "func:check_model_computes_gradients_correctly",
      "func:ensure_batch_predictions_are_consistent",
      "func:ensure_model_can_train",
      "func:ensure_model_can_train_save_and_load",
      "func:set_up_model",
      "func:test_model_batch_norm_verification"
    ],
    "old_files": [
      "model_test_case.py_o3_mini_462aa8c2.py"
    ],
    "new_files": [
      "model_test_case_905237.py"
    ]
  },
  {
    "file_signature": [
      "class:date",
      "class:datetime",
      "class:time",
      "class:timedelta",
      "class:timezone",
      "class:tzinfo",
      "func:__abs__",
      "func:__add__",
      "func:__bool__",
      "func:__divmod__",
      "func:__eq__",
      "func:__floordiv__",
      "func:__format__",
      "func:__ge__",
      "func:__gt__",
      "func:__init__",
      "func:__le__",
      "func:__lt__",
      "func:__mod__",
      "func:__mul__",
      "func:__neg__",
      "func:__pos__",
      "func:__radd__",
      "func:__repr__",
      "func:__rmul__",
      "func:__rsub__",
      "func:__str__",
      "func:__sub__",
      "func:__truediv__",
      "func:_build_struct_time",
      "func:_check_date_fields",
      "func:_check_int_field",
      "func:_check_time_fields",
      "func:_check_tzinfo_arg",
      "func:_check_tzname",
      "func:_check_utc_offset",
      "func:_cmp",
      "func:_cmperror",
      "func:_create",
      "func:_days_before_month",
      "func:_days_before_year",
      "func:_days_in_month",
      "func:_divide_and_round",
      "func:_format_time",
      "func:_fromtimestamp",
      "func:_is_leap",
      "func:_isoweek1monday",
      "func:_name_from_offset",
      "func:_ord2ymd",
      "func:_to_microseconds",
      "func:_tzstr",
      "func:_wrap_strftime",
      "func:_ymd2ord",
      "func:astimezone",
      "func:combine",
      "func:ctime",
      "func:date",
      "func:day",
      "func:days",
      "func:dst",
      "func:fromordinal",
      "func:fromtimestamp",
      "func:fromutc",
      "func:hour",
      "func:isocalendar",
      "func:isoformat",
      "func:isoweekday",
      "func:microsecond",
      "func:microseconds",
      "func:minute",
      "func:month",
      "func:now",
      "func:plural",
      "func:replace",
      "func:rjust",
      "func:second",
      "func:seconds",
      "func:strftime",
      "func:strptime",
      "func:time",
      "func:timestamp",
      "func:timetuple",
      "func:timetz",
      "func:today",
      "func:toordinal",
      "func:total_seconds",
      "func:tzinfo",
      "func:tzname",
      "func:utcfromtimestamp",
      "func:utcnow",
      "func:utcoffset",
      "func:utctimetuple",
      "func:weekday",
      "func:year",
      "func:zfill"
    ],
    "old_files": [
      "__init__.py_o1_mini_05f8316a.py"
    ],
    "new_files": [
      "__init___d9ab30.py"
    ]
  },
  {
    "file_signature": [
      "class:GitlabIssue",
      "func:__init__",
      "func:post_receive",
      "func:pre_receive",
      "func:status_change",
      "func:take_action"
    ],
    "old_files": [
      "alerta_gitlab.py_o1_mini_784d3636.py"
    ],
    "new_files": [
      "alerta_gitlab_b4eabf.py"
    ]
  },
  {
    "file_signature": [
      "func:complex_loss",
      "func:complex_six_losses",
      "func:correlated_loss",
      "func:get_score",
      "func:lcb_score",
      "func:loss",
      "func:mean",
      "func:noisy_six_losses",
      "func:six_losses",
      "func:testing_domain_and_loss_and_budget",
      "func:testing_domain_and_loss_and_single_budget",
      "func:timeout_handler",
      "func:ucb_score"
    ],
    "old_files": [
      "instrumentations_examples.py_o1_mini_4572d1a8.py"
    ],
    "new_files": [
      "instrumentations_examples_d8ae97.py"
    ]
  },
  {
    "file_signature": [
      "class:GoogleTravelTimeSensor",
      "func:__init__",
      "func:convert_time_to_utc",
      "func:extra_state_attributes",
      "func:native_value",
      "func:update"
    ],
    "old_files": [
      "sensor.py_o1_mini_36877070.py"
    ],
    "new_files": [
      "sensor_7457a0.py"
    ]
  },
  {
    "file_signature": [
      "class:Body",
      "class:Cookie",
      "class:Depends",
      "class:File",
      "class:Form",
      "class:Header",
      "class:Param",
      "class:ParamTypes",
      "class:Path",
      "class:Query",
      "class:Security",
      "func:__init__",
      "func:__repr__"
    ],
    "old_files": [
      "params.py_o3_mini_5f47f3d9.py"
    ],
    "new_files": [
      "params_3f7432.py"
    ]
  },
  {
    "file_signature": [
      "class:Cyclist",
      "func:__init__",
      "func:follow",
      "func:get_height",
      "func:get_mean_maximum_power",
      "func:get_position",
      "func:get_remaining_energy",
      "func:get_weight",
      "func:increase_fatigue",
      "func:recover",
      "func:reset",
      "func:set_height",
      "func:set_mean_maximum_power",
      "func:set_pace",
      "func:set_position",
      "func:set_weight",
      "func:update_cda",
      "func:update_total_energy"
    ],
    "old_files": [
      "cyclist.py_o1_mini_a9eea13e.py"
    ],
    "new_files": [
      "cyclist_8fa926.py"
    ]
  },
  {
    "file_signature": [
      "class:GenericHygrostat",
      "func:__init__",
      "func:_async_switch_changed",
      "func:_async_switch_event",
      "func:_is_device_active",
      "func:_time_period_or_none",
      "func:available",
      "func:available_modes",
      "func:current_humidity",
      "func:device_class",
      "func:extra_state_attributes",
      "func:is_on",
      "func:max_humidity",
      "func:min_humidity",
      "func:mode",
      "func:name",
      "func:target_humidity"
    ],
    "old_files": [
      "humidifier.py_o3_mini_0cbe9187.py"
    ],
    "new_files": [
      "humidifier_29087a.py"
    ]
  },
  {
    "file_signature": [
      "class:LocalOptimizationProblem",
      "class:NonObjectOptimizer",
      "class:Pymoo",
      "class:PymooBatch",
      "class:_NonObjectMinimizeBase",
      "class:_PymooBatchMinimizeBase",
      "class:_PymooMinimizeBase",
      "class:_PymooProblem",
      "func:__init__",
      "func:_create_pymoo_problem",
      "func:_evaluate",
      "func:_internal_ask_candidate",
      "func:_internal_tell_candidate",
      "func:_internal_tell_not_asked",
      "func:_optimization_function",
      "func:_post_loss",
      "func:ax_obj",
      "func:cma_objective_function",
      "func:dummy_function",
      "func:eval",
      "func:get_optimization_function",
      "func:nlopt_objective_function",
      "func:smac2_obj"
    ],
    "old_files": [
      "recastlib.py_o1_mini_20a1a0a2.py"
    ],
    "new_files": [
      "recastlib_49d2ed.py"
    ]
  },
  {
    "file_signature": [
      "class:GDMOptimizer",
      "class:L1MomentumIterativeFastGradientMethod",
      "class:L2MomentumIterativeFastGradientMethod",
      "class:LinfMomentumIterativeFastGradientMethod",
      "func:__call__",
      "func:__init__",
      "func:get_optimizer"
    ],
    "old_files": [
      "mi_fgsm.py_o1_mini_76c7d7df.py"
    ],
    "new_files": [
      "mi_fgsm_09ba33.py"
    ]
  },
  {
    "file_signature": [
      "class:HassImportsFormatChecker",
      "class:NamespaceAlias",
      "class:ObsoleteImportMatch",
      "func:__init__",
      "func:_check_for_component_root_import",
      "func:_check_for_constant_alias",
      "func:_check_for_relative_import",
      "func:_visit_importfrom_relative",
      "func:register",
      "func:visit_import",
      "func:visit_importfrom",
      "func:visit_module"
    ],
    "old_files": [
      "hass_imports.py_o1_mini_8670ad81.py"
    ],
    "new_files": [
      "hass_imports_8c6b50.py"
    ]
  },
  {
    "file_signature": [
      "class:SIABaseEntity",
      "class:SIAEntityDescription",
      "class:SIARequiredKeysMixin",
      "func:__init__",
      "func:_cancel_post_interval_update_cb",
      "func:async_create_post_interval_update_cb",
      "func:async_handle_event",
      "func:async_post_interval_update",
      "func:handle_last_state",
      "func:update_state"
    ],
    "old_files": [
      "entity.py_o1_mini_8c4155c9.py"
    ],
    "new_files": [
      "entity_a0478b.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockHeader",
      "class:MiningHeader",
      "func:__init__",
      "func:__str__",
      "func:base_fee_per_gas",
      "func:blob_gas_used",
      "func:excess_blob_gas",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash",
      "func:parent_beacon_block_root",
      "func:withdrawals_root"
    ],
    "old_files": [
      "headers.py_o3_mini_a1534da1.py"
    ],
    "new_files": [
      "headers_cc92a5.py"
    ]
  },
  {
    "file_signature": [
      "class:Test2DCompat",
      "class:TestMaskedArrays",
      "func:_cast_pointwise_result",
      "func:_get_expected_exception",
      "func:_get_expected_reduction_dtype",
      "func:_supports_accumulation",
      "func:_supports_reduction",
      "func:check_accumulate",
      "func:check_reduce",
      "func:data",
      "func:data_for_grouping",
      "func:data_for_sorting",
      "func:data_for_twos",
      "func:data_missing",
      "func:data_missing_for_sorting",
      "func:dtype",
      "func:make_bool_data",
      "func:make_data",
      "func:make_float_data",
      "func:na_cmp",
      "func:test_combine_le",
      "func:test_divmod_series_array",
      "func:test_map",
      "func:test_map_na_action_ignore"
    ],
    "old_files": [
      "test_masked.py_o1_mini_f680e59c.py"
    ],
    "new_files": [
      "test_masked_a94e75.py"
    ]
  },
  {
    "file_signature": [
      "func:_async_describe_event",
      "func:_process_logbook_platform",
      "func:async_log_entry",
      "func:log_entry",
      "func:log_message"
    ],
    "old_files": [
      "__init__.py_o1_mini_b4ce3426.py"
    ],
    "new_files": [
      "__init___caf114.py"
    ]
  },
  {
    "file_signature": [
      "func:dt_floor_day",
      "func:dt_from_ts",
      "func:dt_humanize_delta",
      "func:dt_now",
      "func:dt_ts",
      "func:dt_ts_def",
      "func:dt_ts_none",
      "func:dt_utc",
      "func:format_date",
      "func:format_ms_time",
      "func:format_ms_time_det",
      "func:shorten_date"
    ],
    "old_files": [
      "datetime_helpers.py_o1_mini_0e83921a.py"
    ],
    "new_files": [
      "datetime_helpers_3d4ed3.py"
    ]
  },
  {
    "file_signature": [
      "class:Color",
      "class:RGBA",
      "func:__eq__",
      "func:__get_validators__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__modify_schema__",
      "func:__repr_args__",
      "func:__str__",
      "func:_alpha_float",
      "func:as_hex",
      "func:as_hsl",
      "func:as_hsl_tuple",
      "func:as_named",
      "func:as_rgb",
      "func:as_rgb_tuple",
      "func:float_to_255",
      "func:ints_to_rgba",
      "func:original",
      "func:parse_color_value",
      "func:parse_float_alpha",
      "func:parse_hsl",
      "func:parse_str",
      "func:parse_tuple"
    ],
    "old_files": [
      "color.py_o1_mini_41c9bd2a.py"
    ],
    "new_files": [
      "color_334856.py"
    ]
  },
  {
    "file_signature": [
      "class:RedisCacheBackend",
      "class:RedisSentinelCacheBackend",
      "func:__init__",
      "func:from_config",
      "func:xadd",
      "func:xrange"
    ],
    "old_files": [
      "cache_backend.py_o3_mini_421ef640.py"
    ],
    "new_files": [
      "cache_backend_1dcc35.py"
    ]
  },
  {
    "file_signature": [
      "class:Withdrawal",
      "func:__init__",
      "func:decode",
      "func:encode",
      "func:hash",
      "func:validate"
    ],
    "old_files": [
      "withdrawals.py_o1_mini_084e60f6.py"
    ],
    "new_files": [
      "withdrawals_8c07d5.py"
    ]
  },
  {
    "file_signature": [
      "class:Abort",
      "class:BlockMissingCapabilities",
      "class:CancelledRun",
      "class:ConfigurationError",
      "class:CrashedRun",
      "class:ExternalSignal",
      "class:FailedRun",
      "class:FlowPauseTimeout",
      "class:FlowRunWaitTimeout",
      "class:HashError",
      "class:InfrastructureError",
      "class:InfrastructureNotAvailable",
      "class:InfrastructureNotFound",
      "class:InvalidNameError",
      "class:InvalidRepositoryURLError",
      "class:MappingLengthMismatch",
      "class:MappingMissingIterable",
      "class:MissingContextError",
      "class:MissingFlowError",
      "class:MissingProfileError",
      "class:MissingResult",
      "class:NotPausedError",
      "class:ObjectAlreadyExists",
      "class:ObjectNotFound",
      "class:ParameterBindError",
      "class:ParameterTypeError",
      "class:Pause",
      "class:PausedRun",
      "class:PrefectException",
      "class:PrefectHTTPStatusError",
      "class:PrefectImportError",
      "class:PrefectSignal",
      "class:ProfileSettingsValidationError",
      "class:ProtectedBlockError",
      "class:ReservedArgumentError",
      "class:ScriptError",
      "class:SerializationError",
      "class:SignatureMismatchError",
      "class:TerminationSignal",
      "class:UnfinishedRun",
      "class:UnspecifiedFlowError",
      "class:UpstreamTaskError",
      "func:__init__",
      "func:__str__",
      "func:_trim_traceback",
      "func:exception_traceback",
      "func:from_bad_params",
      "func:from_bind_failure",
      "func:from_httpx_error",
      "func:from_validation_error"
    ],
    "old_files": [
      "exceptions.py_o1_mini_adfa0765.py"
    ],
    "new_files": [
      "exceptions_725799.py"
    ]
  },
  {
    "file_signature": [
      "class:DummyClass",
      "class:TestExcelWriter",
      "class:TestExcelWriterEngineTests",
      "class:TestFSPath",
      "class:TestRoundTrip",
      "func:_save",
      "func:_write_cells",
      "func:assert_called_and_reset",
      "func:book",
      "func:frame",
      "func:get_exp_unit",
      "func:merge_cells",
      "func:roundtrip",
      "func:set_engine",
      "func:sheets",
      "func:tdf",
      "func:test_ExcelWriter_dispatch",
      "func:test_ExcelWriter_dispatch_raises",
      "func:test_basics_with_nan",
      "func:test_bool_types",
      "func:test_bytes_io",
      "func:test_colaliases",
      "func:test_comment_arg",
      "func:test_comment_default",
      "func:test_comment_empty_line",
      "func:test_comment_used",
      "func:test_creating_and_reading_multiple_sheets",
      "func:test_datetimes",
      "func:test_duplicated_columns",
      "func:test_engine_kwargs",
      "func:test_excel_010_hemstring",
      "func:test_excel_date_datetime_format",
      "func:test_excel_duplicate_columns_with_names",
      "func:test_excel_multindex_roundtrip",
      "func:test_excel_round_trip_with_periodindex",
      "func:test_excel_roundtrip_datetime",
      "func:test_excel_roundtrip_indexname",
      "func:test_excel_sheet_by_name_raise",
      "func:test_excel_sheet_size",
      "func:test_excel_writer_context_manager",
      "func:test_excel_writer_empty_frame",
      "func:test_excelfile_fspath",
      "func:test_excelwriter_fspath",
      "func:test_float_types",
      "func:test_freeze_panes",
      "func:test_if_sheet_exists_raises",
      "func:test_inf_roundtrip",
      "func:test_int_types",
      "func:test_invalid_columns",
      "func:test_merged_cell_custom_objects",
      "func:test_mixed",
      "func:test_multiindex_interval_datetimes",
      "func:test_path_path_lib",
      "func:test_raise_when_saving_timezones",
      "func:test_read_excel_multiindex_empty_level",
      "func:test_read_excel_parse_dates",
      "func:test_read_one_empty_col_no_header",
      "func:test_read_one_empty_col_with_header",
      "func:test_register_writer",
      "func:test_render_as_column_name",
      "func:test_roundtrip",
      "func:test_roundtrip_indexlabels",
      "func:test_set_column_names_in_parameter",
      "func:test_sheets",
      "func:test_subclass_attr",
      "func:test_swapped_columns",
      "func:test_to_excel_datatypes_preserved",
      "func:test_to_excel_empty_frame",
      "func:test_to_excel_empty_multiindex",
      "func:test_to_excel_empty_multiindex_both_axes",
      "func:test_to_excel_float_format",
      "func:test_to_excel_interval_labels",
      "func:test_to_excel_interval_no_labels",
      "func:test_to_excel_multiindex",
      "func:test_to_excel_multiindex_cols",
      "func:test_to_excel_multiindex_dates",
      "func:test_to_excel_multiindex_nan_label",
      "func:test_to_excel_multiindex_no_write_index",
      "func:test_to_excel_output_encoding",
      "func:test_to_excel_periodindex",
      "func:test_to_excel_raising_warning_when_cell_character_exceed_limit",
      "func:test_to_excel_timedelta",
      "func:test_to_excel_unicode_filename",
      "func:test_true_and_false_value_options",
      "func:test_ts_frame",
      "func:test_write_lists_dict",
      "func:test_write_subset_columns",
      "func:tmp_excel"
    ],
    "old_files": [
      "test_writers.py_o1_mini_94abc203.py"
    ],
    "new_files": [
      "test_writers_3a0994.py"
    ]
  },
  {
    "file_signature": [
      "class:YeelightDevice",
      "func:__init__",
      "func:_active_mode",
      "func:_async_unique_name",
      "func:_color_flow",
      "func:_nightlight_brightness",
      "func:async_format_id",
      "func:async_format_model",
      "func:async_format_model_id",
      "func:async_mark_unavailable",
      "func:async_update_callback",
      "func:available",
      "func:bulb",
      "func:config",
      "func:fw_version",
      "func:host",
      "func:is_color_flow_enabled",
      "func:is_nightlight_enabled",
      "func:is_nightlight_supported",
      "func:model",
      "func:name",
      "func:type",
      "func:unique_id",
      "func:update_needs_bg_power_workaround"
    ],
    "old_files": [
      "device.py_o1_mini_7e5392fe.py"
    ],
    "new_files": [
      "device_e3bccf.py"
    ]
  },
  {
    "file_signature": [
      "class:FieldDescriptorT",
      "class:ModelOptions",
      "class:ModelT",
      "class:_InitSubclassCheck",
      "class:_UsingKwargsInNew",
      "func:__init__",
      "func:__init_subclass__",
      "func:as_dict",
      "func:clone",
      "func:clone_defaults",
      "func:derive",
      "func:dumps",
      "func:from_data",
      "func:getattr",
      "func:ident",
      "func:is_valid",
      "func:lazy_coercion",
      "func:loads",
      "func:on_model_attached",
      "func:prepare_value",
      "func:related_models",
      "func:should_coerce",
      "func:to_python",
      "func:to_representation",
      "func:validate",
      "func:validate_all",
      "func:validate_or_raise",
      "func:validation_error",
      "func:validation_errors"
    ],
    "old_files": [
      "models.py_o3_mini_63b1f093.py"
    ],
    "new_files": [
      "models_25879e.py"
    ]
  },
  {
    "file_signature": [
      "class:EarlyStoppingTrainer",
      "class:ModelWithLoss",
      "class:Speedometer",
      "class:TensorboardLogger",
      "class:TrainState",
      "class:TrainerConfig",
      "func:__call__",
      "func:__getstate__",
      "func:__init__",
      "func:__setstate__",
      "func:_adjust_learning_rate",
      "func:_cleanup",
      "func:_create_checkpoint",
      "func:_determine_convergence",
      "func:_determine_divergence",
      "func:_determine_improvement",
      "func:_evaluate",
      "func:_forward_backward",
      "func:_load_lr_scheduler",
      "func:_load_optimizer_state",
      "func:_load_training_state",
      "func:_save_lr_scheduler",
      "func:_save_optimizer_state",
      "func:_save_params",
      "func:_save_training_state",
      "func:_step",
      "func:_update_best_params",
      "func:_write_and_log_metrics",
      "func:best_lr_scheduler_fname",
      "func:best_optimizer_state_fname",
      "func:best_params_fname",
      "func:cleanup_params_files",
      "func:current_params_fname",
      "func:fit",
      "func:forward",
      "func:load",
      "func:log_metrics",
      "func:metrics_fname",
      "func:safe_custom_metrics_logger",
      "func:save",
      "func:time_elapsed",
      "func:training_state_dirname",
      "func:update_time_elapsed"
    ],
    "old_files": [
      "training.py_o3_mini_79729440.py"
    ],
    "new_files": [
      "training_45f057.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoClimate",
      "func:__init__",
      "func:current_humidity",
      "func:current_temperature",
      "func:fan_mode",
      "func:fan_modes",
      "func:hvac_action",
      "func:hvac_mode",
      "func:hvac_modes",
      "func:preset_mode",
      "func:preset_modes",
      "func:swing_horizontal_mode",
      "func:swing_horizontal_modes",
      "func:swing_mode",
      "func:swing_modes",
      "func:target_humidity",
      "func:target_temperature",
      "func:target_temperature_high",
      "func:target_temperature_low",
      "func:temperature_unit",
      "func:unique_id"
    ],
    "old_files": [
      "climate.py_o3_mini_645306d2.py"
    ],
    "new_files": [
      "climate_5f3cc6.py"
    ]
  },
  {
    "file_signature": [
      "class:TestLastWeekOfMonth",
      "class:TestWeek",
      "class:TestWeekOfMonth",
      "func:test_constructor",
      "func:test_corner",
      "func:test_is_on_offset",
      "func:test_is_on_offset_nanoseconds",
      "func:test_is_on_offset_weekday_none",
      "func:test_last_week_of_month_on_offset",
      "func:test_offset",
      "func:test_repr",
      "func:test_week_add_invalid"
    ],
    "old_files": [
      "test_week.py_o1_mini_50adb609.py"
    ],
    "new_files": [
      "test_week_31892f.py"
    ]
  },
  {
    "file_signature": [
      "class:LiteJetSwitch",
      "func:__init__",
      "func:_on_connected_changed",
      "func:_on_switch_pressed",
      "func:_on_switch_released",
      "func:extra_state_attributes"
    ],
    "old_files": [
      "switch.py_o1_mini_6cad3583.py"
    ],
    "new_files": [
      "switch_a354e7.py"
    ]
  },
  {
    "file_signature": [
      "class:Setting",
      "func:__bool__",
      "func:__eq__",
      "func:__hash__",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:_env_var_to_accessor",
      "func:_get_settings_fields",
      "func:_get_valid_setting_names",
      "func:default",
      "func:is_secret",
      "func:name",
      "func:value",
      "func:value_from"
    ],
    "old_files": [
      "legacy.py_o1_mini_fa6e1de2.py"
    ],
    "new_files": [
      "legacy_8258c7.py"
    ]
  },
  {
    "file_signature": [
      "class:InformativeData",
      "func:__get_pair_formats",
      "func:_create_and_merge_informative_pair",
      "func:_format_pair_name",
      "func:decorator",
      "func:informative"
    ],
    "old_files": [
      "informative_decorator.py_o1_mini_bd83f821.py"
    ],
    "new_files": [
      "informative_decorator_cfc496.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseRoute",
      "class:Host",
      "class:Match",
      "class:Mount",
      "class:NoMatchFound",
      "class:Route",
      "class:Router",
      "class:WebSocketRoute",
      "class:_AsyncLiftContextManager",
      "class:_DefaultLifespan",
      "func:__call__",
      "func:__eq__",
      "func:__init__",
      "func:__repr__",
      "func:_wrap_gen_lifespan_context",
      "func:add_event_handler",
      "func:add_route",
      "func:add_websocket_route",
      "func:compile_path",
      "func:decorator",
      "func:get_name",
      "func:host",
      "func:iscoroutinefunction_or_partial",
      "func:matches",
      "func:mount",
      "func:on_event",
      "func:replace_params",
      "func:request_response",
      "func:route",
      "func:routes",
      "func:url_path_for",
      "func:websocket_route",
      "func:websocket_session",
      "func:wrapper"
    ],
    "old_files": [
      "routing.py_o1_mini_021033be.py"
    ],
    "new_files": [
      "routing_66b713.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPFetcher",
      "class:ThreadedLocalServer",
      "func:__init__",
      "func:_assert_env_var_loaded",
      "func:_wait_for_server_ready",
      "func:basic_app",
      "func:cd",
      "func:config",
      "func:configure",
      "func:create_server",
      "func:get_record_counter",
      "func:http_session",
      "func:index",
      "func:index_view",
      "func:json_get",
      "func:local_server_factory",
      "func:make_call",
      "func:make_requests",
      "func:record_counter",
      "func:run",
      "func:sample_app",
      "func:shutdown",
      "func:test_can_accept_get_request",
      "func:test_can_accept_multiple_connections",
      "func:test_can_accept_multiple_options_request",
      "func:test_can_accept_options_request",
      "func:test_can_get_unicode_string_content_length",
      "func:test_can_import_env_vars",
      "func:test_can_reload_server",
      "func:test_cors",
      "func:test_has_thread_safe_current_request",
      "func:unused_tcp_port",
      "func:wait_for_server_ready"
    ],
    "old_files": [
      "test_local.py_o1_mini_3856ab90.py"
    ],
    "new_files": [
      "test_local_0cfc7f.py"
    ]
  },
  {
    "file_signature": [
      "class:TomorrowioWeatherEntity",
      "func:__init__",
      "func:_async_forecast_daily",
      "func:_async_forecast_hourly",
      "func:_calculate_unique_id",
      "func:_forecast",
      "func:_forecast_dict",
      "func:_translate_condition",
      "func:condition",
      "func:humidity",
      "func:native_pressure",
      "func:native_temperature",
      "func:native_visibility",
      "func:native_wind_speed",
      "func:ozone",
      "func:wind_bearing"
    ],
    "old_files": [
      "weather.py_o3_mini_80b5c19e.py"
    ],
    "new_files": [
      "weather_ac8565.py"
    ]
  },
  {
    "file_signature": [
      "class:EnvFilterSettingsSource",
      "class:FilteredDotEnvSettingsSource",
      "class:PrefectTomlConfigSettingsSource",
      "class:ProfileSettingsTomlLoader",
      "class:PyprojectTomlConfigSettingsSource",
      "class:TomlConfigSettingsSourceBase",
      "func:__call__",
      "func:__init__",
      "func:_get_default_profile",
      "func:_get_profiles_path",
      "func:_get_profiles_path_from_toml",
      "func:_is_test_mode",
      "func:_load_profile_settings",
      "func:_read_file",
      "func:get_field_value"
    ],
    "old_files": [
      "sources.py_o3_mini_61b6f7ff.py"
    ],
    "new_files": [
      "sources_dfba5e.py"
    ]
  },
  {
    "file_signature": [
      "class:IBeaconTrackerEntity",
      "func:__init__",
      "func:_async_device_new",
      "func:_async_seen",
      "func:_async_unavailable",
      "func:source_type",
      "func:state"
    ],
    "old_files": [
      "device_tracker.py_o1_mini_0f4fc3ad.py"
    ],
    "new_files": [
      "device_tracker_406c5a.py"
    ]
  },
  {
    "file_signature": [
      "class:Case",
      "class:_LiveCheck",
      "func:__init__",
      "func:_failed_longer_than",
      "func:_maybe_recover_from_failed_state",
      "func:_now",
      "func:_set_pass_state",
      "func:current_execution",
      "func:current_test",
      "func:label",
      "func:seconds_since_last_fail"
    ],
    "old_files": [
      "case.py_o3_mini_556666e4.py"
    ],
    "new_files": [
      "case_2f1853.py"
    ]
  },
  {
    "file_signature": [
      "class:SparseArray",
      "class:ellipsis",
      "func:__abs__",
      "func:__array__",
      "func:__array_ufunc__",
      "func:__getitem__",
      "func:__init__",
      "func:__invert__",
      "func:__len__",
      "func:__neg__",
      "func:__pos__",
      "func:__repr__",
      "func:__setitem__",
      "func:__setstate__",
      "func:_argmin_argmax",
      "func:_arith_method",
      "func:_cmp_method",
      "func:_concat_same_type",
      "func:_first_fill_value_loc",
      "func:_formatter",
      "func:_from_factorized",
      "func:_from_sequence",
      "func:_get_fill",
      "func:_get_val_at",
      "func:_make_sparse",
      "func:_min_max",
      "func:_null_fill_value",
      "func:_reduce",
      "func:_simple_new",
      "func:_sparse_array_op",
      "func:_take_with_fill",
      "func:_take_without_fill",
      "func:_unary_method",
      "func:_valid_sp_values",
      "func:_values_for_factorize",
      "func:_where",
      "func:_wrap_result",
      "func:all",
      "func:any",
      "func:argmax",
      "func:argmin",
      "func:astype",
      "func:copy",
      "func:cumsum",
      "func:density",
      "func:dtype",
      "func:duplicated",
      "func:factorize",
      "func:fill_value",
      "func:fillna",
      "func:from_spmatrix",
      "func:func",
      "func:isna",
      "func:kind",
      "func:make_sparse_index",
      "func:map",
      "func:max",
      "func:mean",
      "func:min",
      "func:nbytes",
      "func:nonzero",
      "func:npoints",
      "func:searchsorted",
      "func:shift",
      "func:sp_index",
      "func:sp_values",
      "func:sum",
      "func:take",
      "func:to_dense",
      "func:unique",
      "func:value_counts"
    ],
    "old_files": [
      "array.py_o1_mini_e58982f2.py"
    ],
    "new_files": [
      "array_be8945.py"
    ]
  },
  {
    "file_signature": [
      "class:MyUplinkDevicePointSensor",
      "class:MyUplinkEnumRawSensor",
      "class:MyUplinkEnumSensor",
      "func:__init__",
      "func:get_description",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_o1_mini_82288060.py"
    ],
    "new_files": [
      "sensor_48e774.py"
    ]
  },
  {
    "file_signature": [
      "class:RfxtrxBinarySensor",
      "func:__init__",
      "func:_apply_event",
      "func:_apply_event_lighting4",
      "func:_apply_event_standard",
      "func:_constructor",
      "func:_handle_event",
      "func:get_sensor_description",
      "func:off_delay_listener",
      "func:supported"
    ],
    "old_files": [
      "binary_sensor.py_o1_mini_f8e5fdeb.py"
    ],
    "new_files": [
      "binary_sensor_9e59d0.py"
    ]
  },
  {
    "file_signature": [
      "class:AutomationEntity",
      "class:AutomationEntityConfig",
      "class:BaseAutomationEntity",
      "class:IfAction",
      "class:UnavailableAutomationEntity",
      "func:__call__",
      "func:__init__",
      "func:_automation_matches_config",
      "func:_automation_name",
      "func:_automations_with_x",
      "func:_log_callback",
      "func:_trigger_extract_devices",
      "func:_trigger_extract_entities",
      "func:_x_in_automation",
      "func:areas_in_automation",
      "func:automation_matches_config",
      "func:automations_with_area",
      "func:automations_with_blueprint",
      "func:automations_with_device",
      "func:automations_with_entity",
      "func:automations_with_floor",
      "func:automations_with_label",
      "func:blueprint_in_automation",
      "func:capability_attributes",
      "func:devices_in_automation",
      "func:entities_in_automation",
      "func:extra_state_attributes",
      "func:find_matches",
      "func:floors_in_automation",
      "func:is_on",
      "func:labels_in_automation",
      "func:referenced_areas",
      "func:referenced_blueprint",
      "func:referenced_devices",
      "func:referenced_entities",
      "func:referenced_floors",
      "func:referenced_labels",
      "func:reload_targets",
      "func:started_action",
      "func:websocket_config"
    ],
    "old_files": [
      "__init__.py_o3_mini_1516527e.py"
    ],
    "new_files": [
      "__init___642017.py"
    ]
  },
  {
    "file_signature": [
      "class:TestGetIndexerNonUnique",
      "class:TestGetLoc",
      "class:TestGetSliceBounds",
      "func:test_get_indexer_non_unique_dtype_mismatch",
      "func:test_get_indexer_non_unique_int_index",
      "func:test_get_loc_nan_object_dtype_nonmonotonic_nonunique",
      "func:test_get_loc_tuple_monotonic_above_size_cutoff",
      "func:test_get_slice_bounds_invalid_side",
      "func:test_get_slice_bounds_outside",
      "func:test_get_slice_bounds_within",
      "func:test_getitem_boolean_ea_indexer"
    ],
    "old_files": [
      "test_indexing.py_o1_mini_fa642a88.py"
    ],
    "new_files": [
      "test_indexing_3e5a66.py"
    ]
  },
  {
    "file_signature": [
      "class:GetUsers",
      "class:SubscriberHandler",
      "func:__call__",
      "func:__init__",
      "func:build_attachment",
      "func:build_avatar",
      "func:build_defaultstream",
      "func:build_direct_message_group",
      "func:build_direct_message_group_subscriptions",
      "func:build_message",
      "func:build_personal_subscriptions",
      "func:build_realm",
      "func:build_realm_emoji",
      "func:build_recipient",
      "func:build_recipients",
      "func:build_stream",
      "func:build_stream_subscriptions",
      "func:build_subscription",
      "func:build_user_message",
      "func:build_user_profile",
      "func:build_usermessages",
      "func:build_zerver_realm",
      "func:create_converted_data_files",
      "func:get_avatar",
      "func:get_emojis",
      "func:get_uploads",
      "func:get_users",
      "func:long_term_idle_helper",
      "func:make_subscriber_map",
      "func:make_user_messages",
      "func:process_avatars",
      "func:process_emojis",
      "func:process_uploads",
      "func:run_parallel_wrapper",
      "func:set_info",
      "func:validate_user_emails_for_import",
      "func:wrapping_function"
    ],
    "old_files": [
      "import_util.py_o1_mini_1732c302.py"
    ],
    "new_files": [
      "import_util_c23496.py"
    ]
  },
  {
    "file_signature": [
      "class:CheckpointDecoder",
      "func:__init__",
      "func:decode_and_evaluate",
      "func:parallel_subsample",
      "func:warmup",
      "func:write_to_file"
    ],
    "old_files": [
      "checkpoint_decoder.py_o3_mini_886fcce4.py"
    ],
    "new_files": [
      "checkpoint_decoder_4db09b.py"
    ]
  },
  {
    "file_signature": [
      "class:GeonetnzVolcanoSensor",
      "func:__init__",
      "func:_update_callback",
      "func:_update_from_feed",
      "func:async_add_sensor",
      "func:extra_state_attributes",
      "func:icon",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_o1_mini_98cd40cb.py"
    ],
    "new_files": [
      "sensor_1533dd.py"
    ]
  },
  {
    "file_signature": [
      "class:RiscoAlarm",
      "class:RiscoCloudAlarm",
      "class:RiscoLocalAlarm",
      "func:__init__",
      "func:_get_data_from_coordinator",
      "func:_validate_code",
      "func:alarm_state"
    ],
    "old_files": [
      "alarm_control_panel.py_o1_mini_1df18bf0.py"
    ],
    "new_files": [
      "alarm_control_panel_489ba5.py"
    ]
  },
  {
    "file_signature": [
      "func:big_gym_multi",
      "func:conformant_gp",
      "func:conformant_ng_full_gym",
      "func:conformant_planning",
      "func:deterministic_gym_multi",
      "func:gp",
      "func:gym_budget_modifier",
      "func:gym_multifid_anm",
      "func:gym_optimizer_modifier",
      "func:gym_problem",
      "func:gym_problem_modifier",
      "func:multi_ng_full_gym",
      "func:multi_structured_ng_full_gym",
      "func:neuro_planning",
      "func:ng_full_gym",
      "func:ng_gym",
      "func:ng_stacking_gym",
      "func:small_deterministic_gym_multi",
      "func:sparse_gp",
      "func:tiny_deterministic_gym_multi"
    ],
    "old_files": [
      "gymexperiments.py_o3_mini_116f21de.py"
    ],
    "new_files": [
      "gymexperiments_f3782d.py"
    ]
  },
  {
    "file_signature": [
      "class:MetaModelFailure",
      "func:learn_on_k_best",
      "func:loss_function_sm",
      "func:my_kernel",
      "func:rephrase",
      "func:trans"
    ],
    "old_files": [
      "metamodel.py_o1_mini_c025893b.py"
    ],
    "new_files": [
      "metamodel_f9ba03.py"
    ]
  },
  {
    "file_signature": [
      "func:_base_filter",
      "func:test_apply_dynamic_database_filter",
      "func:test_catalogs",
      "func:test_catalogs_with_oauth2",
      "func:test_columnar_metadata",
      "func:test_columnar_metadata_bad_extension",
      "func:test_columnar_metadata_validation",
      "func:test_columnar_upload",
      "func:test_columnar_upload_file_extension_invalid",
      "func:test_columnar_upload_file_extension_valid",
      "func:test_columnar_upload_validation",
      "func:test_csv_metadata",
      "func:test_csv_metadata_bad_extension",
      "func:test_csv_metadata_validation",
      "func:test_csv_upload",
      "func:test_csv_upload_file_extension_invalid",
      "func:test_csv_upload_file_extension_valid",
      "func:test_csv_upload_validation",
      "func:test_database_connection",
      "func:test_delete_ssh_tunnel",
      "func:test_delete_ssh_tunnel_not_found",
      "func:test_excel_metadata",
      "func:test_excel_metadata_bad_extension",
      "func:test_excel_metadata_validation",
      "func:test_excel_upload",
      "func:test_excel_upload_file_extension_invalid",
      "func:test_excel_upload_validation",
      "func:test_filter_by_uuid",
      "func:test_non_zip_import",
      "func:test_oauth2_error",
      "func:test_oauth2_happy_path",
      "func:test_oauth2_multiple_tokens",
      "func:test_password_mask",
      "func:test_post_with_uuid",
      "func:test_schemas",
      "func:test_schemas_with_oauth2",
      "func:test_table_extra_metadata_happy_path",
      "func:test_table_extra_metadata_invalid_database",
      "func:test_table_extra_metadata_no_table",
      "func:test_table_extra_metadata_slashes",
      "func:test_table_extra_metadata_unauthorized",
      "func:test_table_metadata_happy_path",
      "func:test_table_metadata_invalid_database",
      "func:test_table_metadata_no_table",
      "func:test_table_metadata_slashes",
      "func:test_table_metadata_unauthorized",
      "func:test_update_with_password_mask"
    ],
    "old_files": [
      "api_test.py_o1_mini_1adc1dd7.py"
    ],
    "new_files": [
      "api_test_5baf5c.py"
    ]
  },
  {
    "file_signature": [
      "class:Record",
      "func:_BUILD_asdict",
      "func:_BUILD_asdict_field",
      "func:_BUILD_eq",
      "func:_BUILD_ge",
      "func:_BUILD_gt",
      "func:_BUILD_hash",
      "func:_BUILD_init",
      "func:_BUILD_input_translate_fields",
      "func:_BUILD_le",
      "func:_BUILD_lt",
      "func:_BUILD_ne",
      "func:__eq__",
      "func:__ge__",
      "func:__gt__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__json__",
      "func:__le__",
      "func:__lt__",
      "func:__ne__",
      "func:_contribute_field_descriptors",
      "func:_contribute_methods",
      "func:_contribute_to_options",
      "func:_derive",
      "func:_humanize",
      "func:_kvrepr",
      "func:_prepare_dict",
      "func:add_related_to_tagged_indices",
      "func:add_to_tagged_indices",
      "func:asdict",
      "func:from_data",
      "func:generate_prepare_value",
      "func:generate_setter",
      "func:to_representation"
    ],
    "old_files": [
      "record.py_o3_mini_e4228424.py"
    ],
    "new_files": [
      "record_c0e555.py"
    ]
  },
  {
    "file_signature": [
      "class:OnlineMeanAndVariance",
      "class:SingleProcessPool",
      "class:SockeyeError",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:adjust_first_step_masking",
      "func:all_gather_object",
      "func:average_tensors",
      "func:broadcast_object",
      "func:check_condition",
      "func:check_import_faiss",
      "func:check_version",
      "func:chunks",
      "func:combine_means",
      "func:combine_stds",
      "func:compute_isometric_score",
      "func:count",
      "func:count_seq_len",
      "func:create_pool",
      "func:dtype_to_str",
      "func:fault_tolerant_symlink",
      "func:gen_prefix_masking",
      "func:get_local_rank",
      "func:get_numpy_dtype",
      "func:get_tokens",
      "func:get_torch_dtype",
      "func:get_validation_metric_points",
      "func:grouper",
      "func:init_deepspeed",
      "func:init_device",
      "func:is_distributed",
      "func:is_gzip_file",
      "func:is_primary_worker",
      "func:load_version",
      "func:log_basic_info",
      "func:log_parameters",
      "func:map",
      "func:mean",
      "func:metric_value_is_better",
      "func:no_context",
      "func:parse_metrics_line",
      "func:parse_version",
      "func:read_metrics_file",
      "func:seed_rngs",
      "func:shift_prefix_factors",
      "func:smart_open",
      "func:starmap",
      "func:std",
      "func:update",
      "func:update_dict",
      "func:update_dict_with_prefix_kv",
      "func:using_deepspeed",
      "func:variance",
      "func:write_metrics_file"
    ],
    "old_files": [
      "utils.py_o1_mini_8b360116.py"
    ],
    "new_files": [
      "utils_b5d4df.py"
    ]
  },
  {
    "file_signature": [
      "class:AiohttpClientMockResponse",
      "class:AiohttpClientMocker",
      "class:MockLongPollSideEffect",
      "func:__init__",
      "func:call_count",
      "func:clear_requests",
      "func:close",
      "func:content",
      "func:content_type",
      "func:cookies",
      "func:create_session",
      "func:delete",
      "func:get",
      "func:headers",
      "func:match_request",
      "func:mock_aiohttp_client",
      "func:mock_stream",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:queue_response",
      "func:raise_for_status",
      "func:release",
      "func:request",
      "func:response",
      "func:stop",
      "func:url"
    ],
    "old_files": [
      "aiohttp.py_o3_mini_5a9bb6c0.py"
    ],
    "new_files": [
      "aiohttp_4fe9b8.py"
    ]
  },
  {
    "file_signature": [
      "class:FlicButton",
      "func:__init__",
      "func:_connection_status_changed",
      "func:_create_channel",
      "func:_on_click",
      "func:_on_up_down",
      "func:_queued_event_check",
      "func:get_info_callback",
      "func:new_button_callback",
      "func:scan_completed_callback",
      "func:setup_button",
      "func:setup_platform",
      "func:start_scanning"
    ],
    "old_files": [
      "binary_sensor.py_o1_mini_1e3e2ae7.py"
    ],
    "new_files": [
      "binary_sensor_f0d918.py"
    ]
  },
  {
    "file_signature": [
      "class:MiroboVacuum",
      "func:__init__",
      "func:_handle_coordinator_update",
      "func:activity",
      "func:battery_level",
      "func:extra_state_attributes",
      "func:fan_speed",
      "func:fan_speed_list",
      "func:timers"
    ],
    "old_files": [
      "vacuum.py_o1_mini_6c2556ba.py"
    ],
    "new_files": [
      "vacuum_d388a1.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseHomeKitSelect",
      "class:EcobeeModeSelect",
      "class:HomeKitSelect",
      "class:HomeKitSelectEntityDescription",
      "func:__init__",
      "func:async_add_characteristic",
      "func:current_option",
      "func:get_characteristic_types",
      "func:name"
    ],
    "old_files": [
      "select.py_o1_mini_fd861681.py"
    ],
    "new_files": [
      "select_c9b799.py"
    ]
  },
  {
    "file_signature": [
      "class:CategoricalIndex",
      "func:__getattr__",
      "func:__new__",
      "func:categories",
      "func:codes",
      "func:ordered"
    ],
    "old_files": [
      "category.py_o1_mini_a37e8ddf.py"
    ],
    "new_files": [
      "category_59cae5.py"
    ]
  },
  {
    "file_signature": [
      "class:HiveEngineSpec",
      "func:_extract_error_message",
      "func:_get_fields",
      "func:_get_hive_type",
      "func:_latest_partition_from_df",
      "func:_partition_query",
      "func:adjust_engine_params",
      "func:convert_dttm",
      "func:df_to_sql",
      "func:execute",
      "func:fetch_data",
      "func:get_columns",
      "func:get_function_names",
      "func:get_schema_from_engine_params",
      "func:get_tracking_url_from_logs",
      "func:get_url_for_impersonation",
      "func:get_view_names",
      "func:handle_cursor",
      "func:has_implicit_cancel",
      "func:latest_sub_partition",
      "func:patch",
      "func:progress",
      "func:select_star",
      "func:update_impersonation_config",
      "func:upload_to_s3",
      "func:where_latest_partition"
    ],
    "old_files": [
      "hive.py_o1_mini_5136cf5e.py"
    ],
    "new_files": [
      "hive_66cde7.py"
    ]
  },
  {
    "file_signature": [
      "class:GitLabData",
      "class:GitLabSensor",
      "func:__init__",
      "func:_update",
      "func:icon",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_o1_mini_ae00635a.py"
    ],
    "new_files": [
      "sensor_97b467.py"
    ]
  },
  {
    "file_signature": [
      "func:client_label_map",
      "func:do_get_chart_data",
      "func:get_chart_data",
      "func:get_chart_data_for_installation",
      "func:get_chart_data_for_realm",
      "func:get_chart_data_for_remote_installation",
      "func:get_chart_data_for_remote_realm",
      "func:get_chart_data_for_stream",
      "func:get_time_series_by_subgroup",
      "func:is_analytics_ready",
      "func:render_stats",
      "func:rewrite_client_arrays",
      "func:sort_by_totals",
      "func:sort_client_labels",
      "func:stats",
      "func:stats_for_installation",
      "func:stats_for_realm",
      "func:stats_for_remote_installation",
      "func:stats_for_remote_realm",
      "func:table_filtered_to_id"
    ],
    "old_files": [
      "stats.py_o3_mini_8c4e9045.py"
    ],
    "new_files": [
      "stats_691b29.py"
    ]
  },
  {
    "file_signature": [
      "class:ConfiguredOptimizer",
      "class:Optimizer",
      "func:__call__",
      "func:__eq__",
      "func:__init__",
      "func:__repr__",
      "func:_constraint_solver",
      "func:_info",
      "func:_internal_ask",
      "func:_internal_ask_candidate",
      "func:_internal_provide_recommendation",
      "func:_internal_tell",
      "func:_internal_tell_candidate",
      "func:_internal_tell_not_asked",
      "func:_loss",
      "func:_num_objectives_set_callback",
      "func:_preprocess_multiobjective",
      "func:_rng",
      "func:_update_archive_and_bests",
      "func:_warn",
      "func:addCompare",
      "func:ask",
      "func:compare",
      "func:config",
      "func:dimension",
      "func:dump",
      "func:enable_pickling",
      "func:load",
      "func:minimize",
      "func:num_ask",
      "func:num_objectives",
      "func:num_tell",
      "func:num_tell_not_asked",
      "func:pareto_front",
      "func:provide_recommendation",
      "func:recommend",
      "func:register_callback",
      "func:remove_all_callbacks",
      "func:set_name",
      "func:suggest",
      "func:tell"
    ],
    "old_files": [
      "base.py_o1_mini_8b736991.py"
    ],
    "new_files": [
      "base_7e9ae1.py"
    ]
  },
  {
    "file_signature": [
      "func:check_finality",
      "func:test_finality_no_updates_at_genesis",
      "func:test_finality_rule_1",
      "func:test_finality_rule_2",
      "func:test_finality_rule_3",
      "func:test_finality_rule_4"
    ],
    "old_files": [
      "test_finality.py_o1_mini_e56e2f79.py"
    ],
    "new_files": [
      "test_finality_a16bde.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseFollower",
      "func:__init__",
      "func:_calculate_price_by_slippage",
      "func:_execute_trade_cmd",
      "func:_generate_headers",
      "func:_is_number",
      "func:add_cmd_to_expired_cmds",
      "func:check_login_success",
      "func:create_login_params",
      "func:create_query_transaction_params",
      "func:extract_strategy_id",
      "func:extract_strategy_name",
      "func:extract_transactions",
      "func:follow",
      "func:generate_expired_cmd_key",
      "func:is_cmd_expired",
      "func:load_expired_cmd_cache",
      "func:login",
      "func:order_transactions_sell_first",
      "func:project_transactions",
      "func:query_strategy_transaction",
      "func:re_find",
      "func:re_search",
      "func:start_trader_thread",
      "func:track_strategy_worker",
      "func:trade_worker",
      "func:warp_list"
    ],
    "old_files": [
      "follower.py_o1_mini_fea1953d.py"
    ],
    "new_files": [
      "follower_4727fb.py"
    ]
  },
  {
    "file_signature": [
      "func:decorator",
      "func:etag_cache",
      "func:generate_cache_key",
      "func:memoized_func",
      "func:set_and_log_cache",
      "func:wrap",
      "func:wrapped_f",
      "func:wrapper"
    ],
    "old_files": [
      "cache.py_o1_mini_be14b11e.py"
    ],
    "new_files": [
      "cache_053dd3.py"
    ]
  },
  {
    "file_signature": [
      "class:FreqaiDataDrawer",
      "class:pair_info",
      "func:__init__",
      "func:append_model_predictions",
      "func:attach_return_values_to_return_dataframe",
      "func:collect_metrics",
      "func:get_base_and_corr_dataframes",
      "func:get_pair_dict_info",
      "func:get_timerange_from_live_historic_predictions",
      "func:load_all_pair_histories",
      "func:load_data",
      "func:load_drawer_from_disk",
      "func:load_global_metadata_from_disk",
      "func:load_historic_predictions_from_disk",
      "func:load_metadata",
      "func:load_metric_tracker_from_disk",
      "func:np_encoder",
      "func:purge_old_models",
      "func:return_null_values_to_strategy",
      "func:save_data",
      "func:save_drawer_to_disk",
      "func:save_global_metadata_to_disk",
      "func:save_historic_predictions_to_disk",
      "func:save_metadata",
      "func:save_metric_tracker_to_disk",
      "func:set_initial_return_values",
      "func:set_pair_dict_info",
      "func:update_historic_data",
      "func:update_metric_tracker"
    ],
    "old_files": [
      "data_drawer.py_o1_mini_9845f8e5.py"
    ],
    "new_files": [
      "data_drawer_b3adf2.py"
    ]
  },
  {
    "file_signature": [
      "class:BlackVersion",
      "func:black_runner",
      "func:download_and_extract",
      "func:download_and_extract_top_packages",
      "func:format_repo_with_version",
      "func:format_repos",
      "func:get_archive_manager",
      "func:get_first_archive_member",
      "func:get_package",
      "func:get_package_source",
      "func:get_pypi_download_url",
      "func:get_top_packages",
      "func:git_add_and_commit",
      "func:git_create_repository",
      "func:git_switch_branch",
      "func:init_repos",
      "func:main"
    ],
    "old_files": [
      "gallery.py_o1_mini_281bac21.py"
    ],
    "new_files": [
      "gallery_2bb1c1.py"
    ]
  },
  {
    "file_signature": [
      "func:correct_function",
      "func:f",
      "func:func_1",
      "func:func_2",
      "func:func_kwargs",
      "func:func_numba",
      "func:incorrect_function",
      "func:numba_func",
      "func:sum_last",
      "func:test_args_not_cached",
      "func:test_cache",
      "func:test_check_nopython_kwargs",
      "func:test_correct_function_signature",
      "func:test_engine_kwargs_not_cached",
      "func:test_index_data_correctly_passed",
      "func:test_multifunc_numba_kwarg_propagation",
      "func:test_multifunc_numba_udf_frame",
      "func:test_multifunc_numba_vs_cython_frame",
      "func:test_multifunc_numba_vs_cython_frame_noskipna",
      "func:test_multifunc_numba_vs_cython_series",
      "func:test_multiindex_multi_key_not_supported",
      "func:test_multiindex_one_key",
      "func:test_multilabel_numba_vs_cython",
      "func:test_multilabel_udf_numba_vs_cython",
      "func:test_numba_vs_cython",
      "func:test_use_global_config"
    ],
    "old_files": [
      "test_numba.py_o1_mini_2e23aee3.py"
    ],
    "new_files": [
      "test_numba_246dfa.py"
    ]
  },
  {
    "file_signature": [
      "class:CloudGoogleConfig",
      "func:_2fa_disabled_legacy",
      "func:__init__",
      "func:_async_exposed_entities_updated",
      "func:_handle_device_registry_updated",
      "func:_handle_entity_registry_updated",
      "func:_migrate_google_entity_settings_v1",
      "func:_should_expose_entity_id",
      "func:_should_expose_legacy",
      "func:_supported_legacy",
      "func:agent_user_id",
      "func:async_get_agent_users",
      "func:cloud_user",
      "func:enabled",
      "func:entity_config",
      "func:get_agent_user_id_from_context",
      "func:get_agent_user_id_from_webhook",
      "func:get_local_user_id",
      "func:get_local_webhook_id",
      "func:has_registered_user_agent",
      "func:secure_devices_pin",
      "func:should_2fa",
      "func:should_expose",
      "func:should_report_state"
    ],
    "old_files": [
      "google_config.py_o1_mini_bfbc83e7.py"
    ],
    "new_files": [
      "google_config_4b4b29.py"
    ]
  },
  {
    "file_signature": [
      "class:LegacyServerLoginTest",
      "class:RemoteBillingAuthenticationTest",
      "class:RemoteRealmBillingTestCase",
      "class:RemoteServerTestCase",
      "class:SelfHostedBillingEndpointBasicTest",
      "class:TestGenerateDeactivationLink",
      "func:execute_remote_billing_authentication_flow",
      "func:setUp",
      "func:test_generate_deactivation_link",
      "func:test_remote_billing_authentication_flow",
      "func:test_remote_billing_authentication_flow_cant_access_billing_without_finishing_confirmation",
      "func:test_remote_billing_authentication_flow_expired_session",
      "func:test_remote_billing_authentication_flow_generate_two_confirmation_links_before_confirming",
      "func:test_remote_billing_authentication_flow_rate_limited",
      "func:test_remote_billing_authentication_flow_realm_not_registered",
      "func:test_remote_billing_authentication_flow_to_sponsorship_page",
      "func:test_remote_billing_authentication_flow_to_upgrade_page",
      "func:test_remote_billing_authentication_flow_tos_consent_failure",
      "func:test_remote_billing_authentication_flow_tos_consent_update",
      "func:test_remote_billing_unauthed_access",
      "func:test_self_hosted_billing_endpoints",
      "func:test_self_hosted_config_error_page",
      "func:test_server_billing_unauthed",
      "func:test_server_login_deactivated_server",
      "func:test_server_login_get",
      "func:test_server_login_invalid_zulip_org_id",
      "func:test_server_login_invalid_zulip_org_key",
      "func:test_server_login_next_page_in_form_persists",
      "func:test_server_login_success_consent_is_not_re_asked",
      "func:test_server_login_success_with_next_page",
      "func:test_server_login_success_with_no_plan",
      "func:test_transfer_business_plan_from_server_to_realm",
      "func:test_transfer_complimentary_access_plan_scheduled_for_upgrade_from_server_to_realm",
      "func:test_transfer_plan_from_server_to_realm_edge_cases",
      "func:test_transfer_plan_from_server_to_realm_when_realm_has_customer"
    ],
    "old_files": [
      "test_remote_billing.py_o1_mini_6840a147.py"
    ],
    "new_files": [
      "test_remote_billing_3a9a00.py"
    ]
  },
  {
    "file_signature": [
      "class:EtreeXMLFormatter",
      "class:LxmlXMLFormatter",
      "class:_BaseXMLFormatter",
      "func:__init__",
      "func:_build_attribs",
      "func:_build_elems",
      "func:_build_tree",
      "func:_convert_empty_str_key",
      "func:_get_flat_col_name",
      "func:_get_prefix_uri",
      "func:_handle_indexes",
      "func:_other_namespaces",
      "func:_prettify_tree",
      "func:_process_dataframe",
      "func:_sub_element_cls",
      "func:_transform_doc",
      "func:_validate_columns",
      "func:_validate_encoding",
      "func:write_output"
    ],
    "old_files": [
      "xml.py_o3_mini_3e69baff.py"
    ],
    "new_files": [
      "xml_bf31a3.py"
    ]
  },
  {
    "file_signature": [
      "class:TargetStateSetup",
      "func:make_target_state",
      "func:make_target_transfer",
      "func:test_events_for_onchain_secretreveal",
      "func:test_handle_block",
      "func:test_handle_block_equal_block_number",
      "func:test_handle_block_lower_block_number",
      "func:test_handle_inittarget",
      "func:test_handle_inittarget_bad_expiration",
      "func:test_handle_offchain_secretreveal",
      "func:test_handle_offchain_secretreveal_after_lock_expired",
      "func:test_handle_onchain_secretreveal",
      "func:test_state_transition",
      "func:test_target_accept_keccak_empty_hash",
      "func:test_target_lock_is_expired_if_secret_is_not_registered_onchain",
      "func:test_target_receive_lock_expired",
      "func:test_transfer_successful_after_secret_learned"
    ],
    "old_files": [
      "test_targetstate.py_o1_mini_91490d51.py"
    ],
    "new_files": [
      "test_targetstate_85ad01.py"
    ]
  },
  {
    "file_signature": [
      "func:_find_likely_port",
      "func:build_device_override_schema",
      "func:build_hub_schema",
      "func:build_plm_manual_schema",
      "func:build_plm_schema",
      "func:build_x10_schema"
    ],
    "old_files": [
      "schemas.py_o1_mini_fc9b3a3d.py"
    ],
    "new_files": [
      "schemas_156b3c.py"
    ]
  },
  {
    "file_signature": [
      "class:ZWaveBaseEntity",
      "func:__init__",
      "func:_node_status_alive_or_dead",
      "func:_value_changed",
      "func:_value_removed",
      "func:available",
      "func:generate_name",
      "func:get_zwave_value",
      "func:on_value_update"
    ],
    "old_files": [
      "entity.py_o1_mini_505884a2.py"
    ],
    "new_files": [
      "entity_428030.py"
    ]
  },
  {
    "file_signature": [
      "class:ParserTest",
      "func:_assert_validate_error",
      "func:test_anchor_blocks",
      "func:test_code_blocks",
      "func:test_is_django_block_tag",
      "func:test_tokenize",
      "func:test_validate_bad_handlebars_partial_block",
      "func:test_validate_bad_indentation",
      "func:test_validate_comment",
      "func:test_validate_django",
      "func:test_validate_empty_html_tag",
      "func:test_validate_handlebars",
      "func:test_validate_handlebars_partial_block",
      "func:test_validate_incomplete_django_tag_1",
      "func:test_validate_incomplete_django_tag_2",
      "func:test_validate_incomplete_handlebars_tag_1",
      "func:test_validate_incomplete_handlebars_tag_2",
      "func:test_validate_incomplete_html_tag_1",
      "func:test_validate_incomplete_html_tag_2",
      "func:test_validate_jinja2_whitespace_markers_1",
      "func:test_validate_jinja2_whitespace_markers_2",
      "func:test_validate_jinja2_whitespace_markers_3",
      "func:test_validate_jinja2_whitespace_markers_4",
      "func:test_validate_jinja2_whitespace_type2_markers",
      "func:test_validate_mismatch_jinja2_whitespace_markers_1",
      "func:test_validate_mismatched_tag",
      "func:test_validate_no_start_tag",
      "func:test_validate_state_depth",
      "func:test_validate_vanilla_html"
    ],
    "old_files": [
      "test_template_parser.py_o1_mini_70590f1d.py"
    ],
    "new_files": [
      "test_template_parser_7279f4.py"
    ]
  },
  {
    "file_signature": [
      "func:test_issue_290_1",
      "func:test_issue_290_2",
      "func:test_issue_290_3",
      "func:test_issue_290_4",
      "func:test_to_finals",
      "func:test_to_finals_tone",
      "func:test_to_finals_tone2",
      "func:test_to_finals_tone3",
      "func:test_to_initials",
      "func:test_tone2_to_normal",
      "func:test_tone2_to_normal_with_v_to_u",
      "func:test_tone2_tone3",
      "func:test_tone2_tone3_with_v_to_u",
      "func:test_tone3_to_normal",
      "func:test_tone3_to_normal_with_v_to_u",
      "func:test_tone3_to_tone2",
      "func:test_tone3_to_tone2_with_v_to_u",
      "func:test_tone_to_normal",
      "func:test_tone_to_normal_with_v_to_u",
      "func:test_tone_to_tone2_tone3_to_tone",
      "func:test_tone_tone2",
      "func:test_tone_tone2_with_neutral_tone_with_five",
      "func:test_tone_tone2_with_v_to_u",
      "func:test_tone_tone3",
      "func:test_tone_tone3_with_neutral_tone_with_five",
      "func:test_tone_tone3_with_v_to_u"
    ],
    "old_files": [
      "test_tone_convert.py_o1_mini_6e62e26a.py"
    ],
    "new_files": [
      "test_tone_convert_a42800.py"
    ]
  },
  {
    "file_signature": [
      "func:buffer",
      "func:parser_and_data",
      "func:test_compression",
      "func:test_compression_tar_archive",
      "func:test_compression_utf_encoding",
      "func:test_ignore_compression_extension",
      "func:test_infer_compression",
      "func:test_invalid_compression",
      "func:test_writes_tar_gz",
      "func:test_zip",
      "func:test_zip_error_invalid_zip",
      "func:test_zip_error_multiple_files",
      "func:test_zip_error_no_files"
    ],
    "old_files": [
      "test_compression.py_o1_mini_8c14f213.py"
    ],
    "new_files": [
      "test_compression_21f3e4.py"
    ]
  },
  {
    "file_signature": [
      "class:OmniLogicEntity",
      "func:__init__",
      "func:device_info",
      "func:extra_state_attributes",
      "func:icon",
      "func:name",
      "func:unique_id"
    ],
    "old_files": [
      "entity.py_o1_mini_c6a208ce.py"
    ],
    "new_files": [
      "entity_ad6171.py"
    ]
  },
  {
    "file_signature": [
      "class:CachedDataset",
      "func:__getstate__",
      "func:__init__",
      "func:__repr__",
      "func:_describe",
      "func:_exists",
      "func:_from_config",
      "func:_release",
      "func:load",
      "func:save"
    ],
    "old_files": [
      "cached_dataset.py_o1_mini_2b01c16a.py"
    ],
    "new_files": [
      "cached_dataset_374c5d.py"
    ]
  },
  {
    "file_signature": [
      "class:AccessListPayloadDecoder",
      "class:AccessListTransaction",
      "class:AccountAccesses",
      "class:BerlinLegacyTransaction",
      "class:BerlinTransactionBuilder",
      "class:BerlinUnsignedLegacyTransaction",
      "class:TypedTransaction",
      "class:UnsignedAccessListTransaction",
      "func:__eq__",
      "func:__hash__",
      "func:__init__",
      "func:_calculate_txn_intrinsic_gas_berlin",
      "func:_type_byte",
      "func:access_list",
      "func:as_signed_transaction",
      "func:blob_versioned_hashes",
      "func:chain_id",
      "func:check_signature_validity",
      "func:copy",
      "func:create_unsigned_transaction",
      "func:data",
      "func:decode",
      "func:deserialize",
      "func:encode",
      "func:gas",
      "func:gas_price",
      "func:gas_used_by",
      "func:get_intrinsic_gas",
      "func:get_message_for_signing",
      "func:get_payload_codec",
      "func:get_sender",
      "func:hash",
      "func:intrinsic_gas",
      "func:make_receipt",
      "func:max_fee_per_blob_gas",
      "func:max_fee_per_gas",
      "func:max_priority_fee_per_gas",
      "func:new_access_list_transaction",
      "func:new_transaction",
      "func:new_unsigned_access_list_transaction",
      "func:nonce",
      "func:r",
      "func:s",
      "func:serialize",
      "func:to",
      "func:validate",
      "func:value",
      "func:y_parity"
    ],
    "old_files": [
      "transactions.py_o3_mini_e917af4b.py"
    ],
    "new_files": [
      "transactions_635878.py"
    ]
  },
  {
    "file_signature": [
      "class:RemoteClient",
      "func:__init__",
      "func:auto_ipo",
      "func:balance",
      "func:buy",
      "func:cancel_entrust",
      "func:cancel_entrusts",
      "func:common_get",
      "func:exit",
      "func:position",
      "func:prepare",
      "func:sell",
      "func:today_entrusts",
      "func:today_trades",
      "func:use"
    ],
    "old_files": [
      "remoteclient.py_o1_mini_903996d9.py"
    ],
    "new_files": [
      "remoteclient_c4932f.py"
    ]
  },
  {
    "file_signature": [
      "func:test_datahandler__check_empty_df",
      "func:test_datahandler_ohlcv_append",
      "func:test_datahandler_ohlcv_data_min_max",
      "func:test_datahandler_ohlcv_get_available_data",
      "func:test_datahandler_ohlcv_get_pairs",
      "func:test_datahandler_ohlcv_regex",
      "func:test_datahandler_trades_append",
      "func:test_datahandler_trades_data_min_max",
      "func:test_datahandler_trades_get_available_data",
      "func:test_datahandler_trades_get_pairs",
      "func:test_datahandler_trades_load",
      "func:test_datahandler_trades_not_supported",
      "func:test_datahandler_trades_purge",
      "func:test_datahandler_trades_store",
      "func:test_generic_datahandler_ohlcv_load_and_resave",
      "func:test_get_datahandler",
      "func:test_gethandlerclass",
      "func:test_hdf5datahandler_deprecated",
      "func:test_jsondatahandler_ohlcv_load",
      "func:test_jsondatahandler_ohlcv_purge",
      "func:test_jsondatahandler_trades_load",
      "func:test_rebuild_pair_from_filename"
    ],
    "old_files": [
      "test_datahandler.py_o3_mini_ef9e6109.py"
    ],
    "new_files": [
      "test_datahandler_39fafd.py"
    ]
  },
  {
    "file_signature": [
      "class:User",
      "class:UserStatus",
      "func:__init__",
      "func:__repr__",
      "func:_clear_email_hash",
      "func:_set_email_hash",
      "func:check_credentials",
      "func:count",
      "func:create",
      "func:delete",
      "func:domain",
      "func:find_all",
      "func:find_by_email",
      "func:find_by_id",
      "func:find_by_username",
      "func:from_db",
      "func:from_document",
      "func:from_record",
      "func:get_groups",
      "func:is_active",
      "func:parse",
      "func:reset_password",
      "func:send_confirmation",
      "func:send_password_reset",
      "func:serialize",
      "func:set_email_verified",
      "func:update",
      "func:update_attributes",
      "func:update_last_login",
      "func:verify_hash",
      "func:verify_password"
    ],
    "old_files": [
      "user.py_o1_mini_e720dd47.py"
    ],
    "new_files": [
      "user_fbdb95.py"
    ]
  },
  {
    "file_signature": [
      "class:FBetaVerboseMeasureTest",
      "func:multiple_runs",
      "func:setup_method",
      "func:test_config_errors",
      "func:test_distributed_fbeta_measure",
      "func:test_fbeta_handles_batch_size_of_one",
      "func:test_fbeta_handles_no_prediction_false_last_class",
      "func:test_fbeta_handles_no_prediction_true_all_class",
      "func:test_fbeta_handles_no_prediction_true_last_class",
      "func:test_fbeta_handles_no_prediction_true_other_class",
      "func:test_fbeta_multiclass_macro_average_metric",
      "func:test_fbeta_multiclass_metric",
      "func:test_fbeta_multiclass_micro_average_metric",
      "func:test_fbeta_multiclass_state",
      "func:test_fbeta_multiclass_weighted_average_metric",
      "func:test_fbeta_multiclass_with_explicit_labels",
      "func:test_fbeta_multiclass_with_explicit_labels_macro",
      "func:test_fbeta_multiclass_with_explicit_labels_micro",
      "func:test_fbeta_multiclass_with_explicit_labels_weighted",
      "func:test_fbeta_multiclass_with_mask",
      "func:test_multiple_distributed_runs",
      "func:test_runtime_errors"
    ],
    "old_files": [
      "fbeta_verbose_measure_test.py_o1_mini_de506267.py"
    ],
    "new_files": [
      "fbeta_verbose_measure_test_a08d84.py"
    ]
  },
  {
    "file_signature": [
      "class:Player",
      "func:__init__",
      "func:_need_to_shuffle",
      "func:_swap_song",
      "func:add_songs",
      "func:append_songs",
      "func:build_playinfo",
      "func:cache_song",
      "func:change_mode",
      "func:config_mpg123",
      "func:config_notifier",
      "func:current_song",
      "func:download_lyric",
      "func:download_song",
      "func:index",
      "func:info",
      "func:is_empty",
      "func:is_index_valid",
      "func:is_ordered_loop_mode",
      "func:is_ordered_mode",
      "func:is_random_loop_mode",
      "func:is_random_mode",
      "func:is_single_loop_mode",
      "func:list",
      "func:mode",
      "func:new_player_list",
      "func:next",
      "func:next_idx",
      "func:notify_copyright_issue",
      "func:notify_playing",
      "func:on_exit",
      "func:order",
      "func:play_or_pause",
      "func:playing_id",
      "func:playing_name",
      "func:prev",
      "func:prev_idx",
      "func:refresh_urls",
      "func:replay",
      "func:run_mpg123",
      "func:shuffle",
      "func:shuffle_order",
      "func:songs",
      "func:start_playing",
      "func:stop",
      "func:switch",
      "func:tune_volume",
      "func:update_size",
      "func:volume_down",
      "func:volume_up",
      "func:write_path"
    ],
    "old_files": [
      "player.py_o1_mini_504483b4.py"
    ],
    "new_files": [
      "player_035866.py"
    ]
  },
  {
    "file_signature": [
      "class:NeatoConnectedVacuum",
      "func:__init__",
      "func:clean_spot",
      "func:device_info",
      "func:extra_state_attributes",
      "func:locate",
      "func:neato_custom_cleaning",
      "func:pause",
      "func:return_to_base",
      "func:start",
      "func:stop",
      "func:update"
    ],
    "old_files": [
      "vacuum.py_o1_mini_a1493f57.py"
    ],
    "new_files": [
      "vacuum_0ba5e2.py"
    ]
  },
  {
    "file_signature": [
      "func:duplicate_columns_frame",
      "func:memory_usage",
      "func:test_info_categorical",
      "func:test_info_categorical_column_smoke_test",
      "func:test_info_compute_numba",
      "func:test_info_default_verbose_selection",
      "func:test_info_duplicate_columns_shows_correct_dtypes",
      "func:test_info_empty",
      "func:test_info_int_columns",
      "func:test_info_max_cols",
      "func:test_info_memory",
      "func:test_info_memory_usage",
      "func:test_info_memory_usage_bug_on_multiindex",
      "func:test_info_memory_usage_deep_not_pypy",
      "func:test_info_memory_usage_deep_pypy",
      "func:test_info_memory_usage_qualified",
      "func:test_info_show_counts",
      "func:test_info_shows_column_dtypes",
      "func:test_info_smoke_test",
      "func:test_info_smoke_test2",
      "func:test_info_verbose_check_header_separator_body",
      "func:test_info_verbose_with_counts_spacing",
      "func:test_info_wide",
      "func:test_memory_usage_empty_no_warning",
      "func:test_usage_via_getsizeof"
    ],
    "old_files": [
      "test_info.py_o1_mini_0c6b742d.py"
    ],
    "new_files": [
      "test_info_8bfc42.py"
    ]
  },
  {
    "file_signature": [
      "class:BlocksDocumentAsyncClient",
      "class:BlocksDocumentClient",
      "func:create_block_document",
      "func:delete_block_document",
      "func:read_block_document",
      "func:read_block_documents",
      "func:update_block_document"
    ],
    "old_files": [
      "client.py_o1_mini_0fece5a3.py"
    ],
    "new_files": [
      "client_22bde8.py"
    ]
  },
  {
    "file_signature": [
      "class:ServiceRegistry",
      "func:__init__",
      "func:current_price",
      "func:deposit",
      "func:ever_made_deposits",
      "func:ever_made_deposits_len",
      "func:get_service_url",
      "func:has_valid_registration",
      "func:set_url",
      "func:token_address"
    ],
    "old_files": [
      "service_registry.py_o1_mini_7bd579f2.py"
    ],
    "new_files": [
      "service_registry_e94e0b.py"
    ]
  },
  {
    "file_signature": [
      "class:Process",
      "class:StreamReaderWrapper",
      "class:StreamWriterWrapper",
      "func:_register_signal",
      "func:_win32_ctrl_handler",
      "func:forward_signal_handler",
      "func:get_sys_executable",
      "func:handler",
      "func:kill",
      "func:pid",
      "func:returncode",
      "func:send_signal",
      "func:setup_signal_handlers_agent",
      "func:setup_signal_handlers_server",
      "func:setup_signal_handlers_worker",
      "func:stderr",
      "func:stdin",
      "func:stdout",
      "func:terminate"
    ],
    "old_files": [
      "processutils.py_o1_mini_82c6c801.py"
    ],
    "new_files": [
      "processutils_97fd75.py"
    ]
  },
  {
    "file_signature": [
      "class:AreaRegistryEntrySnapshot",
      "class:ConfigEntrySnapshot",
      "class:DeviceRegistryEntrySnapshot",
      "class:EntityRegistryEntrySnapshot",
      "class:FlowResultSnapshot",
      "class:HomeAssistantSnapshotExtension",
      "class:HomeAssistantSnapshotSerializer",
      "class:IssueRegistryItemSnapshot",
      "class:StateSnapshot",
      "class:_ANY",
      "class:_FakePytestItem",
      "class:_FakePytestObject",
      "class:_IntFlagWrapper",
      "func:__init__",
      "func:__repr__",
      "func:_merge_serialized_collections",
      "func:_merge_serialized_report",
      "func:_remove_created_and_modified_at",
      "func:_serializable_area_registry_entry",
      "func:_serializable_config_entry",
      "func:_serializable_conversation_result",
      "func:_serializable_device_registry_entry",
      "func:_serializable_entity_registry_entry",
      "func:_serializable_flow_result",
      "func:_serializable_issue_registry_entry",
      "func:_serializable_state",
      "func:_serialize",
      "func:_serialize_collections",
      "func:_serialize_report",
      "func:dirname",
      "func:override_syrupy_finish"
    ],
    "old_files": [
      "syrupy.py_o1_mini_bab28c01.py"
    ],
    "new_files": [
      "syrupy_b69260.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseJobConfiguration",
      "class:BaseVariables",
      "class:BaseWorker",
      "class:BaseWorkerResult",
      "func:__bool__",
      "func:__dispatch_key__",
      "func:__init__",
      "func:__repr__",
      "func:_base_deployment_labels",
      "func:_base_environment",
      "func:_base_flow_labels",
      "func:_base_flow_run_command",
      "func:_base_flow_run_environment",
      "func:_base_flow_run_labels",
      "func:_coerce_command",
      "func:_coerce_env",
      "func:_emit_flow_run_executed_event",
      "func:_emit_flow_run_submitted_event",
      "func:_event_related_resources",
      "func:_event_resource",
      "func:_get_base_config_defaults",
      "func:_related_resources",
      "func:_release_limit_slot",
      "func:_should_get_worker_id",
      "func:get_all_available_worker_types",
      "func:get_default_base_job_template",
      "func:get_description",
      "func:get_documentation_url",
      "func:get_flow_run_logger",
      "func:get_logo_url",
      "func:get_name_slug",
      "func:get_status",
      "func:get_worker_class_from_type",
      "func:is_using_a_runner",
      "func:is_worker_still_polling",
      "func:json_template",
      "func:model_json_schema",
      "func:prepare_for_flow_run"
    ],
    "old_files": [
      "base.py_o1_mini_fa2b3146.py"
    ],
    "new_files": [
      "base_9be364.py"
    ]
  },
  {
    "file_signature": [
      "func:can_run_model",
      "func:test_backtesting_fit_live_predictions",
      "func:test_download_all_data_for_training",
      "func:test_extract_data_and_train_model_Classifiers",
      "func:test_extract_data_and_train_model_MultiTargets",
      "func:test_extract_data_and_train_model_Standard",
      "func:test_freqai_informative_pairs",
      "func:test_get_required_data_timerange",
      "func:test_get_state_info",
      "func:test_plot_feature_importance",
      "func:test_start_backtesting",
      "func:test_start_backtesting_from_existing_folder",
      "func:test_start_backtesting_subdaily_backtest_period",
      "func:test_start_set_train_queue"
    ],
    "old_files": [
      "test_freqai_interface.py_o1_mini_a7012432.py"
    ],
    "new_files": [
      "test_freqai_interface_ca78dd.py"
    ]
  },
  {
    "file_signature": [
      "class:CloudAlexaConfig",
      "func:__init__",
      "func:_async_exposed_entities_updated",
      "func:_migrate_alexa_entity_settings_v1",
      "func:_should_expose_legacy",
      "func:async_invalidate_access_token",
      "func:enabled",
      "func:endpoint",
      "func:entity_config",
      "func:entity_supported",
      "func:locale",
      "func:should_expose",
      "func:should_report_state",
      "func:supports_auth",
      "func:user_identifier"
    ],
    "old_files": [
      "alexa_config.py_o1_mini_285aee30.py"
    ],
    "new_files": [
      "alexa_config_96590b.py"
    ]
  },
  {
    "file_signature": [
      "class:AppT",
      "class:BootStrategyT",
      "class:TracerT",
      "class:_AppCommand",
      "class:_EventT",
      "class:_LiveCheck",
      "class:_ModelArg",
      "class:_Monitor",
      "class:_SchemaT",
      "class:_Settings",
      "class:_Worker",
      "func:FlowControlQueue",
      "func:GlobalTable",
      "func:LiveCheck",
      "func:SetGlobalTable",
      "func:SetTable",
      "func:Table",
      "func:Worker",
      "func:__init__",
      "func:_span_add_default_tags",
      "func:_start_span_from_rebalancing",
      "func:agent",
      "func:assignor",
      "func:cache",
      "func:channel",
      "func:client_only",
      "func:command",
      "func:conf",
      "func:config_from_object",
      "func:consumer",
      "func:create_event",
      "func:crontab",
      "func:default_tracer",
      "func:discover",
      "func:finalize",
      "func:flow_control",
      "func:get_tracer",
      "func:http_client",
      "func:in_transaction",
      "func:is_leader",
      "func:main",
      "func:monitor",
      "func:on_rebalance_end",
      "func:on_rebalance_return",
      "func:on_rebalance_start",
      "func:on_webserver_init",
      "func:page",
      "func:producer",
      "func:producer_only",
      "func:producer_transport",
      "func:router",
      "func:serializers",
      "func:server",
      "func:service",
      "func:stream",
      "func:table_route",
      "func:tables",
      "func:task",
      "func:timer",
      "func:topic",
      "func:topics",
      "func:trace",
      "func:transport",
      "func:web",
      "func:worker_init",
      "func:worker_init_post_autodiscover"
    ],
    "old_files": [
      "app.py_o3_mini_39324c85.py"
    ],
    "new_files": [
      "app_c89ec6.py"
    ]
  },
  {
    "file_signature": [
      "func:base_expected_catalog",
      "func:case",
      "func:expected_references_catalog",
      "func:no_stats"
    ],
    "old_files": [
      "expected_catalog.py_o3_mini_a0db9c34.py"
    ],
    "new_files": [
      "expected_catalog_04b2bc.py"
    ]
  },
  {
    "file_signature": [
      "class:NoURLAvailableError",
      "func:_get_cloud_url",
      "func:_get_external_url",
      "func:_get_internal_url",
      "func:_get_request_host",
      "func:cloud_url",
      "func:get_supervisor_network_url",
      "func:get_url",
      "func:host_ip",
      "func:is_cloud_connection",
      "func:is_hass_url",
      "func:is_internal_request"
    ],
    "old_files": [
      "network.py_o3_mini_b74d7a34.py"
    ],
    "new_files": [
      "network_55c06b.py"
    ]
  },
  {
    "file_signature": [
      "class:FightPlotter",
      "class:LegendGroup",
      "class:LegendInfo",
      "class:NameStyle",
      "class:PatternAggregate",
      "class:XpPlotter",
      "func:__call__",
      "func:__del__",
      "func:__getitem__",
      "func:__init__",
      "func:__repr__",
      "func:_get_confidence_arrays",
      "func:_make_sorted_winrates_df",
      "func:_make_style_generator",
      "func:_make_winners_df",
      "func:add_legends",
      "func:aggregate_winners",
      "func:bounds",
      "func:ceviche_sota",
      "func:combine_with",
      "func:compactize",
      "func:compute_best_placements",
      "func:create_plots",
      "func:get_positions",
      "func:gp_sota",
      "func:main",
      "func:make_data",
      "func:merge_optimizer_name_pattern",
      "func:normalized_losses",
      "func:remove_errors",
      "func:save",
      "func:save_txt",
      "func:split_long_title",
      "func:winrates_from_selection"
    ],
    "old_files": [
      "plotting.py_o1_mini_efc5055e.py"
    ],
    "new_files": [
      "plotting_b73057.py"
    ]
  },
  {
    "file_signature": [
      "class:ISYAuxControlEntity",
      "class:ISYEntity",
      "class:ISYNodeEntity",
      "class:ISYProgramEntity",
      "func:__init__",
      "func:async_on_control",
      "func:async_on_update",
      "func:available",
      "func:extra_state_attributes"
    ],
    "old_files": [
      "entity.py_o1_mini_8d553cb4.py"
    ],
    "new_files": [
      "entity_8bb532.py"
    ]
  },
  {
    "file_signature": [
      "class:HypothesisSpec",
      "func:__init__",
      "func:adjust_float",
      "func:cat_tuples",
      "func:clear_database",
      "func:do_map",
      "func:filtered_strategy",
      "func:flatmapped_strategy",
      "func:float",
      "func:float_range",
      "func:get_example",
      "func:integer_range",
      "func:is_good",
      "func:just_strategy",
      "func:list_strategy",
      "func:or_strategy",
      "func:repr_is_good",
      "func:sampled_from_strategy",
      "func:set_database",
      "func:single_tuple",
      "func:strategy",
      "func:strategy_for_tupes",
      "func:teardown"
    ],
    "old_files": [
      "test_strategy_state.py_o1_mini_f335305e.py"
    ],
    "new_files": [
      "test_strategy_state_127381.py"
    ]
  },
  {
    "file_signature": [
      "func:_drop_random_half",
      "func:_drop_random_quarter",
      "func:_run_transition_test_with_attestations",
      "func:test_non_empty_historical_roots",
      "func:test_normal_transition",
      "func:test_simple_transition",
      "func:test_transition_missing_first_post_block",
      "func:test_transition_missing_last_pre_fork_block",
      "func:test_transition_only_blocks_post_fork",
      "func:test_transition_randomized_state",
      "func:test_transition_with_finality",
      "func:test_transition_with_no_attestations_until_after_fork",
      "func:test_transition_with_random_half_participation",
      "func:test_transition_with_random_three_quarters_participation"
    ],
    "old_files": [
      "test_transition.py_o1_mini_5b8686d2.py"
    ],
    "new_files": [
      "test_transition_77bcb3.py"
    ]
  },
  {
    "file_signature": [
      "class:ExponentialMovingWindow",
      "class:ExponentialMovingWindowGroupby",
      "class:OnlineExponentialMovingWindow",
      "func:__init__",
      "func:_calculate_deltas",
      "func:_check_window_bounds",
      "func:_cov",
      "func:_get_window_indexer",
      "func:aggregate",
      "func:corr",
      "func:cov",
      "func:cov_func",
      "func:get_center_of_mass",
      "func:mean",
      "func:online",
      "func:reset",
      "func:std",
      "func:sum",
      "func:var",
      "func:var_func"
    ],
    "old_files": [
      "ewm.py_o3_mini_64027fd2.py"
    ],
    "new_files": [
      "ewm_ef0fa0.py"
    ]
  },
  {
    "file_signature": [
      "func:test__valid_trade_pagination_id_kraken",
      "func:test_create_stoploss_order_dry_run_kraken",
      "func:test_create_stoploss_order_kraken",
      "func:test_get_balances_prod_kraken",
      "func:test_kraken_trading_agreement",
      "func:test_stoploss_adjust_kraken"
    ],
    "old_files": [
      "test_kraken.py_o1_mini_9d701995.py"
    ],
    "new_files": [
      "test_kraken_f9036a.py"
    ]
  },
  {
    "file_signature": [
      "class:MySensorNodeEntity",
      "class:MySensorsChildEntity",
      "func:__init__",
      "func:_async_update",
      "func:_async_update_callback",
      "func:_child",
      "func:_node",
      "func:available",
      "func:dev_id",
      "func:device_info",
      "func:extra_state_attributes",
      "func:get_mysensors_devices",
      "func:name",
      "func:node_name",
      "func:sketch_name",
      "func:sketch_version",
      "func:unique_id"
    ],
    "old_files": [
      "entity.py_o1_mini_656d6ebf.py"
    ],
    "new_files": [
      "entity_5876c1.py"
    ]
  },
  {
    "file_signature": [
      "class:XiaomiGenericSwitch",
      "func:__init__",
      "func:extra_state_attributes",
      "func:icon",
      "func:is_on",
      "func:parse_data",
      "func:turn_off",
      "func:turn_on",
      "func:update"
    ],
    "old_files": [
      "switch.py_o1_mini_56dcbc4e.py"
    ],
    "new_files": [
      "switch_8d0b59.py"
    ]
  },
  {
    "file_signature": [
      "func:_create_message",
      "func:test_code_address_defaults_to_to_address",
      "func:test_code_address_uses_provided_address",
      "func:test_is_create_computed_property",
      "func:test_parameter_validation",
      "func:test_storage_address_defaults_to_to_address",
      "func:test_storage_address_uses_provided_address"
    ],
    "old_files": [
      "test_message_object.py_o1_mini_6076aa58.py"
    ],
    "new_files": [
      "test_message_object_cf66b4.py"
    ]
  },
  {
    "file_signature": [
      "func:ensure_list_vars",
      "func:get_var_names",
      "func:lreshape",
      "func:melt",
      "func:melt_stub",
      "func:wide_to_long"
    ],
    "old_files": [
      "melt.py_o1_mini_713be946.py"
    ],
    "new_files": [
      "melt_24cac4.py"
    ]
  },
  {
    "file_signature": [
      "class:ConflictingSchwefel",
      "class:FunctionChunk",
      "class:LsgoFunction",
      "class:OverlappingSchwefel",
      "class:PartiallySeparableAckley",
      "class:PartiallySeparableAckley2",
      "class:PartiallySeparableElliptic",
      "class:PartiallySeparableElliptic2",
      "class:PartiallySeparableRastrigin",
      "class:PartiallySeparableRastrigin2",
      "class:PartiallySeparableSchwefel",
      "class:PartiallySeparableSchwefel2",
      "class:ShiftedAckley",
      "class:ShiftedElliptic",
      "class:ShiftedRastrigin",
      "class:ShiftedRosenbrock",
      "class:ShiftedSchwefel",
      "class:_MultiPartFunction",
      "func:__call__",
      "func:__init__",
      "func:__repr__",
      "func:__rmul__",
      "func:_apply_transforms",
      "func:_make_loss",
      "func:_make_transforms",
      "func:dimension",
      "func:instrumented",
      "func:make_function",
      "func:read_data"
    ],
    "old_files": [
      "_funcs.py_o1_mini_3974b319.py"
    ],
    "new_files": [
      "_funcs_29fad7.py"
    ]
  },
  {
    "file_signature": [
      "class:DatetimeIndexResampler",
      "class:DatetimeIndexResamplerGroupby",
      "class:PeriodIndexResampler",
      "class:PeriodIndexResamplerGroupby",
      "class:Resampler",
      "class:TimeGrouper",
      "class:TimedeltaIndexResampler",
      "class:TimedeltaIndexResamplerGroupby",
      "class:_GroupByMixin",
      "func:__getattr__",
      "func:__init__",
      "func:__str__",
      "func:_adjust_bin_edges",
      "func:_adjust_binner_for_upsample",
      "func:_adjust_dates_anchored",
      "func:_apply",
      "func:_asfreq_compat",
      "func:_convert_obj",
      "func:_downsample",
      "func:_from_selection",
      "func:_get_binner",
      "func:_get_binner_for_time",
      "func:_get_grouper",
      "func:_get_period_bins",
      "func:_get_period_range_edges",
      "func:_get_resampler",
      "func:_get_resampler_for_grouping",
      "func:_get_time_bins",
      "func:_get_time_delta_bins",
      "func:_get_time_period_bins",
      "func:_get_timestamp_range_edges",
      "func:_gotitem",
      "func:_groupby_and_aggregate",
      "func:_insert_nat_bin",
      "func:_resampler_cls",
      "func:_resampler_for_grouping",
      "func:_set_grouper",
      "func:_take_new_index",
      "func:_upsample",
      "func:_wrap_result",
      "func:aggregate",
      "func:asfreq",
      "func:bfill",
      "func:count",
      "func:ffill",
      "func:first",
      "func:func",
      "func:get_resampler",
      "func:get_resampler_for_grouping",
      "func:interpolate",
      "func:last",
      "func:max",
      "func:mean",
      "func:median",
      "func:min",
      "func:nearest",
      "func:nunique",
      "func:ohlc",
      "func:pipe",
      "func:prod",
      "func:quantile",
      "func:sem",
      "func:size",
      "func:std",
      "func:sum",
      "func:transform",
      "func:var"
    ],
    "old_files": [
      "resample.py_o3_mini_ca3f1bbe.py"
    ],
    "new_files": [
      "resample_616b7d.py"
    ]
  },
  {
    "file_signature": [
      "func:mock_button",
      "func:mock_buttoncounter",
      "func:mock_controller",
      "func:mock_cover",
      "func:mock_cover_no_position",
      "func:mock_dimmer",
      "func:mock_lightsensor",
      "func:mock_module_no_subdevices",
      "func:mock_module_subdevices",
      "func:mock_relay",
      "func:mock_select",
      "func:mock_sensornumber",
      "func:mock_temperature"
    ],
    "old_files": [
      "conftest.py_o3_mini_ef4e97b9.py"
    ],
    "new_files": [
      "conftest_976174.py"
    ]
  },
  {
    "file_signature": [
      "class:LogWriterCallback",
      "func:__init__",
      "func:_enable_activation_logging",
      "func:_log_activation_distribution",
      "func:_log_distributions",
      "func:_log_gradient_updates",
      "func:_log_learning_rates",
      "func:_log_parameter_and_gradient_statistics",
      "func:_should_log_distributions_next_batch",
      "func:_should_log_distributions_this_batch",
      "func:_should_log_this_batch",
      "func:close",
      "func:hook",
      "func:log_batch",
      "func:log_epoch",
      "func:log_inputs",
      "func:log_scalars",
      "func:log_tensors",
      "func:on_batch",
      "func:on_end",
      "func:on_epoch",
      "func:on_start"
    ],
    "old_files": [
      "log_writer.py_o3_mini_6fa19710.py"
    ],
    "new_files": [
      "log_writer_c4397a.py"
    ]
  },
  {
    "file_signature": [
      "func:async_build_cached_discovery",
      "func:async_clear_discovery_cache",
      "func:async_get_discovery",
      "func:async_name_from_discovery",
      "func:async_populate_data_from_discovery",
      "func:async_trigger_discovery",
      "func:async_update_entry_from_discovery"
    ],
    "old_files": [
      "discovery.py_o1_mini_0f02b1bd.py"
    ],
    "new_files": [
      "discovery_3110d1.py"
    ]
  },
  {
    "file_signature": [
      "class:Task",
      "class:TaskRunNameCallbackWithParameters",
      "func:__call__",
      "func:__get__",
      "func:__init__",
      "func:_generate_task_key",
      "func:_infer_parent_task_runs",
      "func:apply_async",
      "func:delay",
      "func:exponential_backoff",
      "func:is_callback_with_parameters",
      "func:ismethod",
      "func:map",
      "func:on_commit",
      "func:on_completion",
      "func:on_failure",
      "func:on_rollback",
      "func:retry_backoff_callable",
      "func:submit",
      "func:task",
      "func:task_input_hash",
      "func:with_options"
    ],
    "old_files": [
      "tasks.py_o3_mini_e0ffa927.py"
    ],
    "new_files": [
      "tasks_d21306.py"
    ]
  },
  {
    "file_signature": [
      "class:UnitSystem",
      "func:__init__",
      "func:_deprecated_unit_system",
      "func:_is_valid_unit",
      "func:accumulated_precipitation",
      "func:area",
      "func:as_dict",
      "func:get_converted_unit",
      "func:get_unit_system",
      "func:length",
      "func:pressure",
      "func:temperature",
      "func:volume",
      "func:wind_speed"
    ],
    "old_files": [
      "unit_system.py_o3_mini_e74b9d39.py"
    ],
    "new_files": [
      "unit_system_a3b7c4.py"
    ]
  },
  {
    "file_signature": [
      "class:_TestInference",
      "func:__init__",
      "func:decode_step",
      "func:encode_and_initialize",
      "func:model_output_factor_vocab_size",
      "func:model_output_vocab_size",
      "func:numpy_topk",
      "func:state_structure",
      "func:test_beam_search",
      "func:test_brevity_penalty",
      "func:test_brevity_penalty_default",
      "func:test_brevity_penalty_int_input",
      "func:test_candidate_scorer",
      "func:test_get_nvs_vocab_slice_ids",
      "func:test_get_vocab_slice_ids_blocking",
      "func:test_greedytop1",
      "func:test_length_penalty",
      "func:test_length_penalty_default",
      "func:test_length_penalty_int_input",
      "func:test_samplek_func",
      "func:test_topk_func",
      "func:test_update_scores"
    ],
    "old_files": [
      "test_beam_search.py_o1_mini_c680d939.py"
    ],
    "new_files": [
      "test_beam_search_c853ca.py"
    ]
  },
  {
    "file_signature": [
      "class:AttentionLayer",
      "class:TransformerLayer",
      "class:TransformerLayerOutput",
      "func:__init__",
      "func:_from_config",
      "func:forward",
      "func:get_output_dim"
    ],
    "old_files": [
      "transformer_layer.py_o1_mini_238a1cf9.py"
    ],
    "new_files": [
      "transformer_layer_bf9c8e.py"
    ]
  },
  {
    "file_signature": [
      "class:AreaPlot",
      "class:BarPlot",
      "class:BarhPlot",
      "class:HexBinPlot",
      "class:LinePlot",
      "class:MPLPlot",
      "class:PiePlot",
      "class:PlanePlot",
      "class:ScatterPlot",
      "func:__init__",
      "func:_add_table",
      "func:_adorn_subplots",
      "func:_append_legend_handles_labels",
      "func:_apply_axis_properties",
      "func:_apply_style_colors",
      "func:_are_valid_colors",
      "func:_axes_and_fig",
      "func:_col_idx_to_axis_idx",
      "func:_color_in_style",
      "func:_compute_plot_data",
      "func:_convert_to_ndarray",
      "func:_decorate_ticks",
      "func:_ensure_frame",
      "func:_get_ax",
      "func:_get_ax_layer",
      "func:_get_ax_legend",
      "func:_get_axes_layout",
      "func:_get_c_values",
      "func:_get_color_mapping",
      "func:_get_colorbar",
      "func:_get_colors",
      "func:_get_custom_index_name",
      "func:_get_errorbars",
      "func:_get_index_name",
      "func:_get_norm_and_cmap",
      "func:_get_nseries",
      "func:_get_stacked_values",
      "func:_get_stacking_id",
      "func:_get_subplots",
      "func:_get_xticks",
      "func:_has_plotted_object",
      "func:_initialize_stacker",
      "func:_is_ts_plot",
      "func:_iter_data",
      "func:_kind",
      "func:_make_legend",
      "func:_make_plot",
      "func:_mark_right_label",
      "func:_maybe_right_yaxis",
      "func:_parse_errorbars",
      "func:_plot",
      "func:_plot_colorbar",
      "func:_post_plot_logic",
      "func:_post_plot_logic_common",
      "func:_start_base",
      "func:_ts_plot",
      "func:_update_stacker",
      "func:_use_dynamic_x",
      "func:_validate_color_args",
      "func:_validate_log_kwd",
      "func:_validate_sharex",
      "func:_validate_subplots_kwarg",
      "func:ax_pos",
      "func:axes",
      "func:blank_labeler",
      "func:fig",
      "func:generate",
      "func:get_label",
      "func:holds_integer",
      "func:legend_title",
      "func:lim_offset",
      "func:match_labels",
      "func:nseries",
      "func:on_right",
      "func:orientation",
      "func:result",
      "func:tickoffset"
    ],
    "old_files": [
      "core.py_o3_mini_f0978ce4.py"
    ],
    "new_files": [
      "core_c55873.py"
    ]
  },
  {
    "file_signature": [
      "class:FixOperator",
      "func:_check_method",
      "func:_handle_rename",
      "func:_handle_type2abc",
      "func:_irepeat",
      "func:_isCallable",
      "func:_isMappingType",
      "func:_isNumberType",
      "func:_isSequenceType",
      "func:_repeat",
      "func:_sequenceIncludes",
      "func:dec",
      "func:invocation",
      "func:transform"
    ],
    "old_files": [
      "fix_operator.py_o1_mini_cb44f66b.py"
    ],
    "new_files": [
      "fix_operator_2f0209.py"
    ]
  },
  {
    "file_signature": [
      "class:ValueIndexStrategy",
      "class:column",
      "func:__init__",
      "func:assign_rows",
      "func:columns",
      "func:convert_element",
      "func:data_frames",
      "func:do_draw",
      "func:dtype_for_elements_strategy",
      "func:elements_and_dtype",
      "func:indexes",
      "func:infer_dtype_if_necessary",
      "func:just_draw_columns",
      "func:range_indexes",
      "func:result",
      "func:row",
      "func:rows_only",
      "func:series"
    ],
    "old_files": [
      "impl.py_o1_mini_a0b30e41.py"
    ],
    "new_files": [
      "impl_a6397c.py"
    ]
  },
  {
    "file_signature": [
      "class:IgnoreUnhashableLruCacheWrapper",
      "class:InvalidCacheKeyError",
      "func:__call__",
      "func:__init__",
      "func:active_non_guest_user_ids_cache_key",
      "func:active_user_ids_cache_key",
      "func:bot_dicts_in_realm_cache_key",
      "func:bot_profile_cache_key",
      "func:bounce_key_prefix_for_testing",
      "func:bulk_cached_fetch",
      "func:cache_delete",
      "func:cache_delete_many",
      "func:cache_get",
      "func:cache_get_many",
      "func:cache_set",
      "func:cache_set_many",
      "func:cache_with_key",
      "func:changed",
      "func:decorator",
      "func:delete_display_recipient_cache",
      "func:delete_user_profile_caches",
      "func:dict_items_to_dict",
      "func:dict_to_items_tuple",
      "func:dict_to_tuple",
      "func:display_recipient_cache_key",
      "func:filter_good_and_bad_keys",
      "func:flush_message",
      "func:flush_muting_users_cache",
      "func:flush_realm",
      "func:flush_stream",
      "func:flush_submessage",
      "func:flush_used_upload_space_cache",
      "func:flush_user_profile",
      "func:flush_zoom_server_access_token_cache",
      "func:func_with_caching",
      "func:generic_bulk_cached_fetch",
      "func:get_cache_backend",
      "func:get_cross_realm_dicts_key",
      "func:get_muting_users_cache_key",
      "func:get_or_create_key_prefix",
      "func:get_realm_seat_count_cache_key",
      "func:get_realm_used_upload_space_cache_key",
      "func:get_remote_cache_requests",
      "func:get_remote_cache_time",
      "func:ignore_unhashable_lru_cache",
      "func:items_tuple_to_dict",
      "func:log_invalid_cache_keys",
      "func:open_graph_description_cache_key",
      "func:preview_url_cache_key",
      "func:realm_alert_words_automaton_cache_key",
      "func:realm_alert_words_cache_key",
      "func:realm_rendered_description_cache_key",
      "func:realm_text_description_cache_key",
      "func:realm_user_dicts_cache_key",
      "func:remote_cache_stats_finish",
      "func:remote_cache_stats_start",
      "func:safe_cache_get_many",
      "func:safe_cache_set_many",
      "func:single_user_display_recipient_cache_key",
      "func:to_dict_cache_key",
      "func:to_dict_cache_key_id",
      "func:user_profile_by_api_key_cache_key",
      "func:user_profile_by_email_realm_cache_key",
      "func:user_profile_by_email_realm_id_cache_key",
      "func:user_profile_by_id_cache_key",
      "func:user_profile_delivery_email_cache_key",
      "func:user_profile_narrow_by_id_cache_key",
      "func:validate_cache_key",
      "func:wrapper",
      "func:zoom_server_access_token_cache_key"
    ],
    "old_files": [
      "cache.py_o1_mini_b2559857.py"
    ],
    "new_files": [
      "cache_83a043.py"
    ]
  },
  {
    "file_signature": [
      "class:test_Case",
      "func:_patch_monotonic",
      "func:frozen_monotonic",
      "func:on_is_leader",
      "func:on_make_fake_request",
      "func:on_sample",
      "func:seconds_since_last_fail",
      "func:test__maybe_recover_from_failed_state",
      "func:test_constructor",
      "func:test_current_execution",
      "func:test_current_test",
      "func:test_failed_longer_than",
      "func:test_label",
      "func:test_now",
      "func:test_seconds_since_last_fail"
    ],
    "old_files": [
      "test_case.py_o1_mini_7c281e68.py"
    ],
    "new_files": [
      "test_case_e8713f.py"
    ]
  },
  {
    "file_signature": [
      "func:events_for_onchain_secretreveal",
      "func:handle_block",
      "func:handle_inittarget",
      "func:handle_lock_expired",
      "func:handle_offchain_secretreveal",
      "func:handle_onchain_secretreveal",
      "func:handle_unlock",
      "func:sanity_check",
      "func:state_transition"
    ],
    "old_files": [
      "target.py_o1_mini_88467d89.py"
    ],
    "new_files": [
      "target_133731.py"
    ]
  },
  {
    "file_signature": [
      "class:TextualEntailmentSuite",
      "func:__init__",
      "func:_default_coreference_tests",
      "func:_default_fairness_tests",
      "func:_default_logic_tests",
      "func:_default_negation_tests",
      "func:_default_ner_tests",
      "func:_default_robustness_tests",
      "func:_default_taxonomy_tests",
      "func:_default_temporal_tests",
      "func:_default_tests",
      "func:_default_vocabulary_tests",
      "func:_format_failing_examples",
      "func:_prediction_and_confidence_scores",
      "func:_setup_editor",
      "func:_wrap_apply_to_each",
      "func:contractions",
      "func:new_fn",
      "func:preds_and_confs_fn",
      "func:punctuation",
      "func:typos"
    ],
    "old_files": [
      "textual_entailment_suite.py_o1_mini_657c92f3.py"
    ],
    "new_files": [
      "textual_entailment_suite_19763e.py"
    ]
  },
  {
    "file_signature": [
      "class:StoreT",
      "class:_AppT",
      "class:_CollectionT",
      "class:_ModelArg",
      "func:__init__",
      "func:apply_changelog_batch",
      "func:persisted_offset",
      "func:reset_state",
      "func:set_persisted_offset"
    ],
    "old_files": [
      "stores.py_o3_mini_6fd2ef14.py"
    ],
    "new_files": [
      "stores_aa1665.py"
    ]
  },
  {
    "file_signature": [
      "func:fetch_available_matrix_servers",
      "func:get_account_and_private_key",
      "func:get_min_reveal_timeout",
      "func:get_smart_contracts_start_at",
      "func:rpc_normalized_endpoint",
      "func:run_raiden_service",
      "func:setup_raiden_config",
      "func:start_api_server"
    ],
    "old_files": [
      "app.py_o3_mini_147ce993.py"
    ],
    "new_files": [
      "app_e5f00c.py"
    ]
  },
  {
    "file_signature": [
      "class:SentimentAnalysisSuite",
      "func:__init__",
      "func:_add_phrase_function",
      "func:_default_fairness_tests",
      "func:_default_negation_tests",
      "func:_default_ner_tests",
      "func:_default_robustness_tests",
      "func:_default_temporal_tests",
      "func:_default_tests",
      "func:_default_vocabulary_tests",
      "func:_diff_down",
      "func:_diff_up",
      "func:_format_failing_examples",
      "func:_positive_change",
      "func:_prediction_and_confidence_scores",
      "func:_setup_editor",
      "func:perturb_fn",
      "func:preds_and_confs_fn"
    ],
    "old_files": [
      "sentiment_analysis_suite.py_o1_mini_ad14d086.py"
    ],
    "new_files": [
      "sentiment_analysis_suite_5e67f5.py"
    ]
  },
  {
    "file_signature": [
      "func:change_user_is_active",
      "func:do_change_can_change_user_emails",
      "func:do_change_can_create_users",
      "func:do_change_can_forge_sender",
      "func:do_change_is_billing_admin",
      "func:do_change_user_role",
      "func:do_deactivate_user",
      "func:do_delete_user",
      "func:do_delete_user_preserving_messages",
      "func:do_send_password_reset_email",
      "func:do_update_bot_config_data",
      "func:do_update_outgoing_webhook_service",
      "func:generate_password_reset_url",
      "func:get_owned_bot_dicts",
      "func:get_service_dicts_for_bot",
      "func:get_service_dicts_for_bots",
      "func:send_events_for_user_deactivation",
      "func:send_group_update_event_for_anonymous_group_setting",
      "func:send_realm_update_event_for_anonymous_group_setting",
      "func:send_stream_events_for_role_update",
      "func:send_update_events_for_anonymous_group_settings"
    ],
    "old_files": [
      "users.py_o1_mini_2376ea08.py"
    ],
    "new_files": [
      "users_e38fbd.py"
    ]
  },
  {
    "file_signature": [
      "class:Actor",
      "class:AsyncIterableActor",
      "class:AwaitableActor",
      "func:__aiter__",
      "func:__await__",
      "func:__init__",
      "func:__repr__",
      "func:cancel",
      "func:label",
      "func:traceback"
    ],
    "old_files": [
      "actor.py_o1_mini_fd81ae30.py"
    ],
    "new_files": [
      "actor_865029.py"
    ]
  },
  {
    "file_signature": [
      "class:TestDataFrameSortIndex",
      "class:TestDataFrameSortIndexKey",
      "func:my_func",
      "func:test_axis_columns_ignore_index",
      "func:test_axis_columns_ignore_index_ascending_false",
      "func:test_changes_length_raises",
      "func:test_respect_ignore_index",
      "func:test_sort_index",
      "func:test_sort_index_and_reconstruction",
      "func:test_sort_index_and_reconstruction_doc_example",
      "func:test_sort_index_ascending_bad_value_raises",
      "func:test_sort_index_ascending_tuple",
      "func:test_sort_index_categorical_index",
      "func:test_sort_index_categorical_multiindex",
      "func:test_sort_index_different_sortorder",
      "func:test_sort_index_ignore_index",
      "func:test_sort_index_ignore_index_multi_index",
      "func:test_sort_index_inplace",
      "func:test_sort_index_intervalindex",
      "func:test_sort_index_key",
      "func:test_sort_index_key_int",
      "func:test_sort_index_level",
      "func:test_sort_index_level2",
      "func:test_sort_index_level_by_name",
      "func:test_sort_index_level_large_cardinality",
      "func:test_sort_index_level_mixed",
      "func:test_sort_index_multi_index",
      "func:test_sort_index_multiindex",
      "func:test_sort_index_multiindex_sort_remaining",
      "func:test_sort_index_multiindex_sparse_column",
      "func:test_sort_index_multilevel_repr_8017",
      "func:test_sort_index_na_position",
      "func:test_sort_index_nan",
      "func:test_sort_index_nan_multiindex",
      "func:test_sort_index_non_existent_label_multiindex",
      "func:test_sort_index_preserve_levels",
      "func:test_sort_index_reorder_on_ops",
      "func:test_sort_index_stable_sort",
      "func:test_sort_index_with_categories",
      "func:test_sort_index_with_sliced_multiindex",
      "func:test_sort_multi_index_key",
      "func:test_sort_multi_index_key_str"
    ],
    "old_files": [
      "test_sort_index.py_o1_mini_ae1da105.py"
    ],
    "new_files": [
      "test_sort_index_15410c.py"
    ]
  },
  {
    "file_signature": [
      "func:generate_result_metrics",
      "func:stake_amount_interceptor",
      "func:test_SKDecimal",
      "func:test_clean_hyperopt",
      "func:test_generate_optimizer",
      "func:test_hyperopt_format_results",
      "func:test_in_strategy_auto_hyperopt",
      "func:test_in_strategy_auto_hyperopt_per_epoch",
      "func:test_in_strategy_auto_hyperopt_with_parallel",
      "func:test_log_results_if_loss_improves",
      "func:test_max_open_trades_consistency",
      "func:test_max_open_trades_dump",
      "func:test_no_log_if_loss_does_not_improve",
      "func:test_params_no_optimize_details",
      "func:test_populate_indicators",
      "func:test_print_json_spaces_all",
      "func:test_print_json_spaces_default",
      "func:test_print_json_spaces_roi_stoploss",
      "func:test_roi_table_generation",
      "func:test_setup_hyperopt_configuration_stake_amount",
      "func:test_setup_hyperopt_configuration_with_arguments",
      "func:test_setup_hyperopt_configuration_without_arguments",
      "func:test_simplified_interface_all_failed",
      "func:test_simplified_interface_buy",
      "func:test_simplified_interface_failed",
      "func:test_simplified_interface_roi_stoploss",
      "func:test_simplified_interface_sell",
      "func:test_stake_amount_unlimited_max_open_trades",
      "func:test_start_calls_optimizer",
      "func:test_start_filelock",
      "func:test_start_no_data",
      "func:test_start_no_hyperopt_allowed",
      "func:test_start_not_installed",
      "func:wrapper"
    ],
    "old_files": [
      "test_hyperopt.py_o1_mini_f00d318e.py"
    ],
    "new_files": [
      "test_hyperopt_ac1e12.py"
    ]
  },
  {
    "file_signature": [
      "class:Agent",
      "class:Artifact",
      "class:ArtifactCollection",
      "class:BlockDocument",
      "class:BlockDocumentReference",
      "class:BlockSchema",
      "class:BlockSchemaReference",
      "class:BlockType",
      "class:ConcurrencyLimit",
      "class:ConcurrencyLimitStrategy",
      "class:ConcurrencyLimitV2",
      "class:ConcurrencyOptions",
      "class:Configuration",
      "class:Constant",
      "class:CreatedBy",
      "class:CsrfToken",
      "class:Deployment",
      "class:DeploymentSchedule",
      "class:Flow",
      "class:FlowRun",
      "class:FlowRunInput",
      "class:FlowRunNotificationPolicy",
      "class:FlowRunPolicy",
      "class:Log",
      "class:Parameter",
      "class:QueueFilter",
      "class:SavedSearch",
      "class:SavedSearchFilter",
      "class:TaskRun",
      "class:TaskRunInput",
      "class:TaskRunPolicy",
      "class:TaskRunResult",
      "class:UpdatedBy",
      "class:Variable",
      "class:WorkPool",
      "class:WorkQueue",
      "class:WorkQueueHealthPolicy",
      "class:WorkQueueStatusDetail",
      "class:Worker",
      "func:__eq__",
      "func:evaluate_health_status",
      "func:from_result",
      "func:helpful_error_for_missing_default_queue_id",
      "func:model_validate",
      "func:populate_deprecated_fields",
      "func:set_name",
      "func:validate_cache_key",
      "func:validate_configured_retry_delays",
      "func:validate_jitter_factor",
      "func:validate_max_scheduled_runs",
      "func:validate_message_template_variables",
      "func:validate_metadata_length",
      "func:validate_name_characters",
      "func:validate_name_is_present_if_not_anonymous",
      "func:validate_parent_and_ref_are_different"
    ],
    "old_files": [
      "core.py_o1_mini_ab43a113.py"
    ],
    "new_files": [
      "core_0bbc8d.py"
    ]
  },
  {
    "file_signature": [
      "class:RegistryT",
      "class:SchemaT",
      "class:_AppT",
      "class:_Message",
      "class:_ModelArg",
      "func:__init__",
      "func:dumps_key",
      "func:dumps_value",
      "func:loads_key",
      "func:loads_value",
      "func:on_dumps_key_prepare_headers",
      "func:on_dumps_value_prepare_headers",
      "func:update"
    ],
    "old_files": [
      "serializers.py_o1_mini_d7b8c7c6.py"
    ],
    "new_files": [
      "serializers_307391.py"
    ]
  },
  {
    "file_signature": [
      "class:YamahaConfigInfo",
      "class:YamahaDeviceZone",
      "func:__init__",
      "func:_call_playback_function",
      "func:_discovery",
      "func:build_source_list",
      "func:enable_output",
      "func:media_album_name",
      "func:media_artist",
      "func:media_content_type",
      "func:media_next_track",
      "func:media_pause",
      "func:media_play",
      "func:media_previous_track",
      "func:media_stop",
      "func:media_title",
      "func:menu_cursor",
      "func:mute_volume",
      "func:name",
      "func:play_media",
      "func:select_sound_mode",
      "func:select_source",
      "func:set_scene",
      "func:set_volume_level",
      "func:supported_features",
      "func:turn_off",
      "func:turn_on",
      "func:update",
      "func:zone_id"
    ],
    "old_files": [
      "media_player.py_o1_mini_6b769586.py"
    ],
    "new_files": [
      "media_player_8b296d.py"
    ]
  },
  {
    "file_signature": [
      "func:_apply_entities_context_union",
      "func:_select_entities_context_ids_sub_query",
      "func:apply_entities_hints",
      "func:apply_event_entity_id_matchers",
      "func:entities_stmt",
      "func:states_select_for_entity_ids"
    ],
    "old_files": [
      "entities.py_o1_mini_aef30866.py"
    ],
    "new_files": [
      "entities_19afaa.py"
    ]
  },
  {
    "file_signature": [
      "func:catboost_regressor_learner",
      "func:custom_supervised_model_learner",
      "func:elasticnet_regression_learner",
      "func:gp_regression_learner",
      "func:lgbm_regression_learner",
      "func:linear_regression_learner",
      "func:p",
      "func:xgb_regression_learner"
    ],
    "old_files": [
      "regression.py_o1_mini_3a52a41f.py"
    ],
    "new_files": [
      "regression_5b5987.py"
    ]
  },
  {
    "file_signature": [
      "class:YHClientTrader",
      "func:_handle_verify_code",
      "func:_switch_window_to_normal_mode",
      "func:auto_ipo",
      "func:balance",
      "func:broker_type",
      "func:login"
    ],
    "old_files": [
      "yh_clienttrader.py_o1_mini_469ca96e.py"
    ],
    "new_files": [
      "yh_clienttrader_6b6d1f.py"
    ]
  },
  {
    "file_signature": [
      "class:BeamSearch",
      "class:BrevityPenalty",
      "class:CandidateScorer",
      "class:GreedySearch",
      "class:GreedyTop1",
      "class:LengthPenalty",
      "class:RepeatStates",
      "class:SampleK",
      "class:Search",
      "class:SearchResult",
      "class:SortNormalizeAndUpdateFinished",
      "class:SortStates",
      "class:TopK",
      "class:UpdateScores",
      "class:_EnsembleInference",
      "class:_Inference",
      "class:_SingleModelInference",
      "func:__init__",
      "func:_get_nvs_vocab_slice_ids",
      "func:_get_vocab_slice_ids",
      "func:_should_stop",
      "func:decode_step",
      "func:encode_and_initialize",
      "func:forward",
      "func:get_search_algorithm",
      "func:linear_interpolation",
      "func:log_linear_interpolation",
      "func:log_search_stats",
      "func:model_output_factor_vocab_size",
      "func:model_output_vocab_size",
      "func:state_structure",
      "func:unnormalize",
      "func:update_output_vocab_size"
    ],
    "old_files": [
      "beam_search.py_o3_mini_2a43a776.py"
    ],
    "new_files": [
      "beam_search_54db1c.py"
    ]
  },
  {
    "file_signature": [
      "class:HomematicipGenericEntity",
      "func:__init__",
      "func:_async_device_changed",
      "func:_async_device_removed",
      "func:async_remove_from_registries",
      "func:available",
      "func:device_info",
      "func:extra_state_attributes",
      "func:get_current_channel",
      "func:icon",
      "func:name",
      "func:unique_id"
    ],
    "old_files": [
      "entity.py_o1_mini_067a2f2c.py"
    ],
    "new_files": [
      "entity_680502.py"
    ]
  },
  {
    "file_signature": [
      "class:SerialSensor",
      "func:__init__",
      "func:extra_state_attributes",
      "func:name",
      "func:native_value",
      "func:stop_serial_read"
    ],
    "old_files": [
      "sensor.py_o3_mini_6aacde5a.py"
    ],
    "new_files": [
      "sensor_c9d852.py"
    ]
  },
  {
    "file_signature": [
      "class:ONVIFDevice",
      "func:__init__",
      "func:_async_log_time_out_of_sync",
      "func:get_device",
      "func:host",
      "func:name",
      "func:password",
      "func:port",
      "func:username"
    ],
    "old_files": [
      "device.py_o1_mini_0d15bcc0.py"
    ],
    "new_files": [
      "device_9b2e80.py"
    ]
  },
  {
    "file_signature": [
      "class:BasicPrinter",
      "class:ColoramaPrinter",
      "func:__init__",
      "func:ask_whether_to_apply_changes_to_file",
      "func:create_terminal_printer",
      "func:diff_line",
      "func:error",
      "func:format_natural",
      "func:format_simplified",
      "func:remove_whitespace",
      "func:show_unified_diff",
      "func:style_text",
      "func:success"
    ],
    "old_files": [
      "format.py_o1_mini_742bff2c.py"
    ],
    "new_files": [
      "format_0c602c.py"
    ]
  },
  {
    "file_signature": [
      "func:_load_feature_fixtures",
      "func:_mock_protocol",
      "func:_mocked_alarm_module",
      "func:_mocked_camera_module",
      "func:_mocked_clean_module",
      "func:_mocked_device",
      "func:_mocked_energy_features",
      "func:_mocked_fan_module",
      "func:_mocked_feature",
      "func:_mocked_light_effect_module",
      "func:_mocked_light_module",
      "func:_mocked_speaker_module",
      "func:_mocked_strip_children",
      "func:_mocked_thermostat_module",
      "func:_patch_connect",
      "func:_patch_discovery",
      "func:_patch_single_discovery"
    ],
    "old_files": [
      "__init__.py_o3_mini_c8544535.py"
    ],
    "new_files": [
      "__init___bc9a6b.py"
    ]
  },
  {
    "file_signature": [
      "class:NetworkManager",
      "class:Request",
      "class:Response",
      "class:SecurityDetails",
      "func:__init__",
      "func:_bodyLoadedPromiseFulfill",
      "func:_handleRequestRedirect",
      "func:_handleRequestStart",
      "func:_onLoadingFailed",
      "func:_onLoadingFinished",
      "func:_onRequest",
      "func:_onRequestIntercepted",
      "func:_onRequestServedFromCache",
      "func:_onResponseReceived",
      "func:buffer",
      "func:extraHTTPHeaders",
      "func:failure",
      "func:frame",
      "func:fromCache",
      "func:fromServiceWorker",
      "func:generateRequestHash",
      "func:headers",
      "func:isNavigationRequest",
      "func:issuer",
      "func:method",
      "func:ok",
      "func:postData",
      "func:protocol",
      "func:redirectChain",
      "func:request",
      "func:resourceType",
      "func:response",
      "func:securityDetails",
      "func:status",
      "func:subjectName",
      "func:url",
      "func:validFrom",
      "func:validTo"
    ],
    "old_files": [
      "network_manager.py_o3_mini_eaf8ec93.py"
    ],
    "new_files": [
      "network_manager_8c67f5.py"
    ]
  },
  {
    "file_signature": [
      "class:TestFirstValidIndex",
      "func:test_first_last_valid",
      "func:test_first_last_valid_all_nan",
      "func:test_first_last_valid_frame",
      "func:test_first_valid_index_empty",
      "func:test_first_valid_index_single_nan"
    ],
    "old_files": [
      "test_first_valid_index.py_o1_mini_de8279cb.py"
    ],
    "new_files": [
      "test_first_valid_index_e77512.py"
    ]
  },
  {
    "file_signature": [
      "class:BasePassiveBluetoothCoordinator",
      "func:__init__",
      "func:_async_handle_bluetooth_event",
      "func:_async_handle_unavailable",
      "func:_async_start",
      "func:_async_stop",
      "func:async_start",
      "func:last_seen",
      "func:name"
    ],
    "old_files": [
      "update_coordinator.py_o1_mini_4245f689.py"
    ],
    "new_files": [
      "update_coordinator_155ec7.py"
    ]
  },
  {
    "file_signature": [
      "class:ConfluentConsumerThread",
      "class:Consumer",
      "class:Producer",
      "class:ProducerProduceFuture",
      "class:ProducerThread",
      "class:Transport",
      "class:_Consumer",
      "class:_Message",
      "class:_Producer",
      "func:__init__",
      "func:__post_init__",
      "func:_create_client_consumer",
      "func:_create_consumer",
      "func:_create_worker_consumer",
      "func:_ensure_consumer",
      "func:_new_consumer_thread",
      "func:_new_topicpartition",
      "func:_on_assign",
      "func:_on_revoke",
      "func:_to_message",
      "func:_topic_config",
      "func:assignment",
      "func:close",
      "func:highwater",
      "func:key_partition",
      "func:message_to_metadata",
      "func:produce",
      "func:seek",
      "func:server_list",
      "func:set_from_on_delivery",
      "func:topic_partitions"
    ],
    "old_files": [
      "confluent.py_o1_mini_3fc1d46a.py"
    ],
    "new_files": [
      "confluent_3b2473.py"
    ]
  },
  {
    "file_signature": [
      "func:by_row",
      "func:f",
      "func:foo1",
      "func:foo2",
      "func:func",
      "func:noop",
      "func:raising_op",
      "func:retrieve",
      "func:test_agg_args",
      "func:test_agg_evaluate_lambdas",
      "func:test_agg_mapping_func_deprecated",
      "func:test_apply",
      "func:test_apply_args",
      "func:test_apply_box_dt64",
      "func:test_apply_box_dt64tz",
      "func:test_apply_box_period",
      "func:test_apply_box_td64",
      "func:test_apply_categorical",
      "func:test_apply_categorical_with_nan_values",
      "func:test_apply_dataframe_iloc",
      "func:test_apply_datetimetz",
      "func:test_apply_dictlike_lambda",
      "func:test_apply_dictlike_reducer",
      "func:test_apply_dictlike_transformer",
      "func:test_apply_empty_integer_series_with_datetime_index",
      "func:test_apply_listlike_lambda",
      "func:test_apply_listlike_reducer",
      "func:test_apply_listlike_transformer",
      "func:test_apply_map_evaluate_lambdas_the_same",
      "func:test_apply_map_same_length_inference_bug",
      "func:test_apply_retains_column_name",
      "func:test_apply_scalar_on_date_time_index_aware_series",
      "func:test_apply_series_on_date_time_index_aware_series",
      "func:test_apply_to_timedelta",
      "func:test_apply_type",
      "func:test_demo",
      "func:test_non_callable_aggregates",
      "func:test_reduce",
      "func:test_replicate_describe",
      "func:test_series_apply_map_box_timestamps",
      "func:test_series_apply_no_suffix_index",
      "func:test_series_apply_unpack_nested_data",
      "func:test_series_map_box_timedelta",
      "func:test_transform",
      "func:test_transform_partial_failure",
      "func:test_transform_partial_failure_valueerror",
      "func:test_with_nested_series"
    ],
    "old_files": [
      "test_series_apply.py_o1_mini_21ec4375.py"
    ],
    "new_files": [
      "test_series_apply_554287.py"
    ]
  },
  {
    "file_signature": [
      "class:Agent",
      "class:AgentTestWrapper",
      "class:_App",
      "func:__aiter__",
      "func:__call__",
      "func:__init__",
      "func:_agent_label",
      "func:_create_req",
      "func:_get_active_partitions",
      "func:_get_strtopic",
      "func:_get_supervisor_strategy",
      "func:_maybe_unwrap_reply_request",
      "func:_new_supervisor",
      "func:_on_first_isolated_partition_assigned",
      "func:_prepare_channel",
      "func:_repr_info",
      "func:_request_class",
      "func:_response_class",
      "func:actor_from_stream",
      "func:actor_tracebacks",
      "func:add_sink",
      "func:cancel",
      "func:channel",
      "func:channel_iterator",
      "func:clone",
      "func:current_agent",
      "func:get_topic_names",
      "func:info",
      "func:label",
      "func:on_init_dependencies",
      "func:shortlabel",
      "func:stream",
      "func:test_context",
      "func:to_message"
    ],
    "old_files": [
      "agent.py_o3_mini_deba533c.py"
    ],
    "new_files": [
      "agent_c9999e.py"
    ]
  },
  {
    "file_signature": [
      "func:basename",
      "func:get_abbr",
      "func:maybe_resolve_abbreviations",
      "func:modify_textnode",
      "func:pkg_of",
      "func:resolve",
      "func:setup",
      "func:shorten",
      "func:typeify"
    ],
    "old_files": [
      "faustdocs.py_o1_mini_49d23d14.py"
    ],
    "new_files": [
      "faustdocs_7d8e30.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_last_state_changes_multiple_stmt",
      "func:_get_last_state_changes_single_stmt",
      "func:_get_oldest_possible_ts",
      "func:_get_single_entity_start_time_stmt",
      "func:_get_start_time_state_for_entities_stmt",
      "func:_get_start_time_state_stmt",
      "func:_select_from_subquery",
      "func:_significant_states_stmt",
      "func:_sorted_states_to_dict",
      "func:_state_changed_during_period_stmt",
      "func:_stmt_and_join_attributes",
      "func:_stmt_and_join_attributes_for_start_state",
      "func:get_full_significant_states_with_session",
      "func:get_last_state_changes",
      "func:get_significant_states",
      "func:get_significant_states_with_session",
      "func:state_changes_during_period"
    ],
    "old_files": [
      "modern.py_o3_mini_e73854b5.py"
    ],
    "new_files": [
      "modern_5fa600.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncHTTPClient",
      "class:HTTPClient",
      "class:HTTPClientError",
      "class:HTTPRequest",
      "class:HTTPResponse",
      "class:_RequestProxy",
      "func:__del__",
      "func:__getattr__",
      "func:__init__",
      "func:__new__",
      "func:__repr__",
      "func:__str__",
      "func:_async_clients",
      "func:body",
      "func:close",
      "func:configurable_base",
      "func:configurable_default",
      "func:configure",
      "func:fetch",
      "func:fetch_impl",
      "func:handle_response",
      "func:headers",
      "func:initialize",
      "func:main",
      "func:rethrow"
    ],
    "old_files": [
      "httpclient.py_o3_mini_76d1a39b.py"
    ],
    "new_files": [
      "httpclient_e36adc.py"
    ]
  },
  {
    "file_signature": [
      "class:FindLearningRate",
      "func:_save_plot",
      "func:_smooth",
      "func:add_subparser",
      "func:find_learning_rate_from_args",
      "func:find_learning_rate_model",
      "func:search_learning_rate"
    ],
    "old_files": [
      "find_learning_rate.py_o1_mini_5b4e5b17.py"
    ],
    "new_files": [
      "find_learning_rate_f33819.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_later_major_version",
      "func:_touch_file",
      "func:test_adjust_first_step_masking",
      "func:test_average_tensors",
      "func:test_check_condition_false",
      "func:test_check_condition_true",
      "func:test_check_version_checks_major",
      "func:test_check_version_disregards_minor",
      "func:test_chunks",
      "func:test_combine_means",
      "func:test_combine_stds",
      "func:test_count_seq_len",
      "func:test_fault_tolerant_symlink",
      "func:test_get_tokens",
      "func:test_is_gzip_file",
      "func:test_metric_value_is_better",
      "func:test_online_mean_and_variance",
      "func:test_online_mean_and_variance_nan",
      "func:test_parse_metrics_line",
      "func:test_parse_version",
      "func:test_rerank_hypotheses_isometric",
      "func:test_smart_open_without_suffix",
      "func:test_update_dict_with_prefix_kv",
      "func:test_version_matches_changelog",
      "func:test_write_read_metric_file"
    ],
    "old_files": [
      "test_utils.py_o1_mini_f3910096.py"
    ],
    "new_files": [
      "test_utils_4b4e4d.py"
    ]
  },
  {
    "file_signature": [
      "class:Topic",
      "class:_App",
      "func:__aiter__",
      "func:__init__",
      "func:__str__",
      "func:_clone_args",
      "func:_compile_decode",
      "func:_on_published",
      "func:_topic_name_or_default",
      "func:derive",
      "func:derive_topic",
      "func:get_topic_name",
      "func:partitions",
      "func:pattern",
      "func:send_soon"
    ],
    "old_files": [
      "topics.py_o3_mini_fe9d0a1d.py"
    ],
    "new_files": [
      "topics_3a0e29.py"
    ]
  },
  {
    "file_signature": [
      "class:TestPeriodComparisons",
      "class:TestPeriodConstruction",
      "class:TestPeriodDisallowedFreqs",
      "class:TestPeriodMethods",
      "class:TestPeriodProperties",
      "func:_ex",
      "func:_period_constructor",
      "func:test_anchor_week_end_time",
      "func:test_construct_from_nat_string_and_freq",
      "func:test_construction",
      "func:test_construction_bday",
      "func:test_construction_from_timestamp_nanos",
      "func:test_construction_month",
      "func:test_construction_quarter",
      "func:test_constructor_corner",
      "func:test_constructor_infer_freq",
      "func:test_custom_business_day_freq_raises",
      "func:test_end_time",
      "func:test_end_time_business_friday",
      "func:test_freq_str",
      "func:test_from_td64nat_raises",
      "func:test_hash",
      "func:test_inner_bounds_start_and_end_time",
      "func:test_invalid_arguments",
      "func:test_invalid_frequency_error_message",
      "func:test_invalid_frequency_period_error_message",
      "func:test_is_leap_year",
      "func:test_multiples",
      "func:test_negone_ordinals",
      "func:test_offsets_not_supported",
      "func:test_outer_bounds_start_and_end_time",
      "func:test_parse_week_str_roundstrip",
      "func:test_period_cons_annual",
      "func:test_period_cons_combined",
      "func:test_period_cons_mult",
      "func:test_period_cons_nat",
      "func:test_period_cons_quarterly",
      "func:test_period_cons_weekly",
      "func:test_period_constructor_nanosecond",
      "func:test_period_constructor_offsets",
      "func:test_period_deprecated_freq",
      "func:test_period_deprecated_lowercase_freq",
      "func:test_period_from_ordinal",
      "func:test_period_immutable",
      "func:test_period_large_ordinal",
      "func:test_properties_annually",
      "func:test_properties_daily",
      "func:test_properties_hourly",
      "func:test_properties_minutely",
      "func:test_properties_monthly",
      "func:test_properties_quarterly",
      "func:test_properties_secondly",
      "func:test_properties_weekly",
      "func:test_properties_weekly_legacy",
      "func:test_quarterly_negative_ordinals",
      "func:test_repr",
      "func:test_repr_nat",
      "func:test_round_trip",
      "func:test_small_year_parsing",
      "func:test_sort_periods",
      "func:test_start_time",
      "func:test_strftime",
      "func:test_to_timestamp",
      "func:test_to_timestamp_business_end",
      "func:test_to_timestamp_microsecond",
      "func:test_to_timestamp_mult",
      "func:test_tuple_freq_disallowed"
    ],
    "old_files": [
      "test_period.py_o1_mini_02403177.py"
    ],
    "new_files": [
      "test_period_c61bbd.py"
    ]
  },
  {
    "file_signature": [
      "class:ManualMQTTAlarm",
      "func:__init__",
      "func:_active_state",
      "func:_async_update_state",
      "func:_async_validate_code",
      "func:_pending_time",
      "func:_state_schema",
      "func:_state_validator",
      "func:_within_pending_time",
      "func:alarm_state",
      "func:async_scheduled_update",
      "func:code_format",
      "func:extra_state_attributes"
    ],
    "old_files": [
      "alarm_control_panel.py_o3_mini_e816d2fa.py"
    ],
    "new_files": [
      "alarm_control_panel_e80274.py"
    ]
  },
  {
    "file_signature": [
      "class:DeploymentAsyncClient",
      "class:DeploymentClient",
      "func:_create_deployment_from_schema",
      "func:create_deployment",
      "func:create_deployment_schedules",
      "func:create_flow_run_from_deployment",
      "func:delete_deployment",
      "func:delete_deployment_schedule",
      "func:get_scheduled_flow_runs_for_deployments",
      "func:read_deployment",
      "func:read_deployment_by_name",
      "func:read_deployment_schedules",
      "func:read_deployments",
      "func:set_deployment_paused_state",
      "func:update_deployment",
      "func:update_deployment_schedule"
    ],
    "old_files": [
      "client.py_o3_mini_da9172a9.py"
    ],
    "new_files": [
      "client_1e3c0a.py"
    ]
  },
  {
    "file_signature": [
      "class:SecretRegistry",
      "func:__init__",
      "func:_register_secret_batch",
      "func:get_secret_registration_block_by_secrethash",
      "func:is_secret_registered",
      "func:register_secret",
      "func:register_secret_batch"
    ],
    "old_files": [
      "secret_registry.py_o1_mini_9bac50fe.py"
    ],
    "new_files": [
      "secret_registry_13acaf.py"
    ]
  },
  {
    "file_signature": [
      "class:Append",
      "class:CategoricalLevel",
      "class:Difference",
      "class:Duplicated",
      "class:Duplicates",
      "class:Equals",
      "class:GetLoc",
      "class:GetLocs",
      "class:Integer",
      "class:Isin",
      "class:Putmask",
      "class:SetOperations",
      "class:SortValues",
      "class:Sortlevel",
      "class:Unique",
      "class:Values",
      "func:setup",
      "func:setup_cache",
      "func:time_append",
      "func:time_categorical_level",
      "func:time_datetime_level_values_copy",
      "func:time_datetime_level_values_sliced",
      "func:time_difference",
      "func:time_duplicated",
      "func:time_equals_deepcopy",
      "func:time_equals_non_object_index",
      "func:time_get_indexer",
      "func:time_get_indexer_and_backfill",
      "func:time_get_indexer_and_pad",
      "func:time_is_monotonic",
      "func:time_isin_large",
      "func:time_isin_small",
      "func:time_large_get_loc",
      "func:time_large_get_loc_warm",
      "func:time_large_get_locs",
      "func:time_med_get_loc",
      "func:time_med_get_loc_warm",
      "func:time_med_get_locs",
      "func:time_operation",
      "func:time_putmask",
      "func:time_putmask_all_different",
      "func:time_remove_unused_levels",
      "func:time_small_get_loc_warm",
      "func:time_small_get_locs",
      "func:time_sort_values",
      "func:time_sortlevel_int64",
      "func:time_sortlevel_one",
      "func:time_sortlevel_zero",
      "func:time_string_get_loc",
      "func:time_unique",
      "func:time_unique_dups"
    ],
    "old_files": [
      "multiindex_object.py_o1_mini_c697e158.py"
    ],
    "new_files": [
      "multiindex_object_2ee917.py"
    ]
  },
  {
    "file_signature": [
      "class:DevoloBatteryEntity",
      "class:DevoloConsumptionEntity",
      "class:DevoloGenericMultiLevelDeviceEntity",
      "class:DevoloMultiLevelDeviceEntity",
      "func:__init__",
      "func:_sync",
      "func:native_value",
      "func:unique_id"
    ],
    "old_files": [
      "sensor.py_o1_mini_bbe187d6.py"
    ],
    "new_files": [
      "sensor_a11f7f.py"
    ]
  },
  {
    "file_signature": [
      "class:ManualAlarm",
      "func:__init__",
      "func:_active_state",
      "func:_arming_time",
      "func:_async_set_state_update_events",
      "func:_async_update_state",
      "func:_async_validate_code",
      "func:_pending_time",
      "func:_state_schema",
      "func:_state_validator",
      "func:_within_arming_time",
      "func:_within_pending_time",
      "func:alarm_state",
      "func:async_scheduled_update",
      "func:code_format",
      "func:extra_state_attributes"
    ],
    "old_files": [
      "alarm_control_panel.py_o1_mini_b90d8589.py"
    ],
    "new_files": [
      "alarm_control_panel_85f407.py"
    ]
  },
  {
    "file_signature": [
      "class:DropDuplicates",
      "class:TestDropDuplicatesDatetimeIndex",
      "class:TestDropDuplicatesPeriodIndex",
      "class:TestDropDuplicatesTimedeltaIndex",
      "func:freq",
      "func:idx",
      "func:test_drop_duplicates",
      "func:test_drop_duplicates_metadata"
    ],
    "old_files": [
      "test_drop_duplicates.py_o1_mini_eba4cfd2.py"
    ],
    "new_files": [
      "test_drop_duplicates_d918e0.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_fqdn",
      "func:_update_route53",
      "func:setup",
      "func:update_records_interval",
      "func:update_records_service"
    ],
    "old_files": [
      "__init__.py_o1_mini_9760c5ac.py"
    ],
    "new_files": [
      "__init___943365.py"
    ]
  },
  {
    "file_signature": [
      "class:AuditTrail",
      "func:__init__",
      "func:_fmt",
      "func:_log_response",
      "func:_webhook_response",
      "func:admin_log_response",
      "func:admin_webhook_response",
      "func:auth_log_response",
      "func:auth_webhook_response",
      "func:get_redacted_data",
      "func:init_app",
      "func:write_log_response",
      "func:write_webhook_response"
    ],
    "old_files": [
      "audit.py_o3_mini_9dfb954b.py"
    ],
    "new_files": [
      "audit_992d57.py"
    ]
  },
  {
    "file_signature": [
      "class:SchemaGenericTestParser",
      "func:__init__",
      "func:_lookup_attached_node",
      "func:add_test_node",
      "func:create_test_node",
      "func:generate_unique_id",
      "func:get_compiled_path",
      "func:get_hashable_md",
      "func:parse_column_tests",
      "func:parse_file",
      "func:parse_from_dict",
      "func:parse_generic_test",
      "func:parse_node",
      "func:parse_test",
      "func:parse_tests",
      "func:parse_versioned_tests",
      "func:render_test_update",
      "func:render_with_context",
      "func:resource_type",
      "func:store_env_vars"
    ],
    "old_files": [
      "schema_generic_tests.py_o3_mini_d32963a8.py"
    ],
    "new_files": [
      "schema_generic_tests_906d8a.py"
    ]
  },
  {
    "file_signature": [
      "class:CircularDependencyError",
      "class:ConfirmNotUniqueError",
      "class:OutputNotUniqueError",
      "class:Pipeline",
      "func:__add__",
      "func:__and__",
      "func:__getattr__",
      "func:__init__",
      "func:__or__",
      "func:__radd__",
      "func:__repr__",
      "func:__sub__",
      "func:_check_node",
      "func:_get_nodes_with_inputs_transcode_compatible",
      "func:_get_nodes_with_outputs_transcode_compatible",
      "func:_remove_intermediates",
      "func:_transcode_compatible_names",
      "func:_validate_duplicate_nodes",
      "func:_validate_transcoded_inputs_outputs",
      "func:_validate_unique_confirms",
      "func:_validate_unique_outputs",
      "func:all_inputs",
      "func:all_outputs",
      "func:datasets",
      "func:describe",
      "func:filter",
      "func:from_inputs",
      "func:from_nodes",
      "func:grouped_nodes",
      "func:grouped_nodes_by_namespace",
      "func:inputs",
      "func:node_dependencies",
      "func:nodes",
      "func:only_nodes",
      "func:only_nodes_with_inputs",
      "func:only_nodes_with_namespace",
      "func:only_nodes_with_outputs",
      "func:only_nodes_with_tags",
      "func:outputs",
      "func:set_to_string",
      "func:tag",
      "func:to_json",
      "func:to_nodes",
      "func:to_outputs"
    ],
    "old_files": [
      "pipeline.py_o1_mini_9b0da9bc.py"
    ],
    "new_files": [
      "pipeline_25a0ac.py"
    ]
  },
  {
    "file_signature": [
      "func:_mock_blu_rtv_device",
      "func:_mock_rpc_device",
      "func:disconnected",
      "func:event",
      "func:events",
      "func:initialized",
      "func:mock_bluetooth",
      "func:mock_coap",
      "func:mock_light_set_state",
      "func:mock_white_light_set_state",
      "func:mock_ws_server",
      "func:online",
      "func:update",
      "func:update_reply"
    ],
    "old_files": [
      "conftest.py_o3_mini_8f499602.py"
    ],
    "new_files": [
      "conftest_04471e.py"
    ]
  },
  {
    "file_signature": [
      "func:build_shard_block",
      "func:get_committee_index_of_shard",
      "func:get_sample_shard_block_body",
      "func:get_shard_transitions",
      "func:sign_shard_block"
    ],
    "old_files": [
      "shard_block.py_o1_mini_19f36678.py"
    ],
    "new_files": [
      "shard_block_395422.py"
    ]
  },
  {
    "file_signature": [
      "func:ephemeral_model",
      "func:ext_model",
      "func:ext_source",
      "func:ext_source_2",
      "func:ext_source_id_unique",
      "func:ext_source_other",
      "func:ext_source_other_2",
      "func:files",
      "func:macro_default_test_not_null",
      "func:macro_default_test_unique",
      "func:macro_materialization_table_default",
      "func:macro_test_not_null",
      "func:macro_test_unique",
      "func:macros",
      "func:make_exposure",
      "func:make_generic_test",
      "func:make_group",
      "func:make_macro",
      "func:make_manifest",
      "func:make_metric",
      "func:make_model",
      "func:make_not_null_test",
      "func:make_saved_query",
      "func:make_seed",
      "func:make_semantic_model",
      "func:make_singular_test",
      "func:make_source",
      "func:make_unique_test",
      "func:make_unit_test",
      "func:manifest",
      "func:metric",
      "func:metricflow_time_spine_model",
      "func:metrics",
      "func:namespace_model",
      "func:namespaced_seed",
      "func:namespaced_union_model",
      "func:nodes",
      "func:saved_queries",
      "func:saved_query",
      "func:seed",
      "func:semantic_model",
      "func:semantic_models",
      "func:source",
      "func:sources",
      "func:table_id_not_null",
      "func:table_id_unique",
      "func:table_model",
      "func:table_model_csv",
      "func:table_model_py",
      "func:union_model",
      "func:unit_test_table_model",
      "func:unit_tests",
      "func:versioned_model_v1",
      "func:versioned_model_v12_string",
      "func:versioned_model_v2",
      "func:versioned_model_v3",
      "func:versioned_model_v4_nested_dir",
      "func:view_id_unique",
      "func:view_model",
      "func:view_test_nothing"
    ],
    "old_files": [
      "manifest.py_o3_mini_c8979c4a.py"
    ],
    "new_files": [
      "manifest_87d3d1.py"
    ]
  },
  {
    "file_signature": [
      "func:test_ambiguous_archive_tar",
      "func:test_ambiguous_archive_zip",
      "func:test_bzip_compression_level",
      "func:test_compression_binary",
      "func:test_compression_size",
      "func:test_compression_size_fh",
      "func:test_compression_warning",
      "func:test_dataframe_compression_defaults_to_infer",
      "func:test_empty_archive_zip",
      "func:test_gzip_compression_level",
      "func:test_gzip_reproducibility_file_name",
      "func:test_gzip_reproducibility_file_object",
      "func:test_series_compression_defaults_to_infer",
      "func:test_tar_gz_to_different_filename",
      "func:test_tar_no_error_on_close",
      "func:test_with_missing_lzma",
      "func:test_with_missing_lzma_runtime",
      "func:test_xz_compression_level_read"
    ],
    "old_files": [
      "test_compression.py_o1_mini_58a3c14f.py"
    ],
    "new_files": [
      "test_compression_088712.py"
    ]
  },
  {
    "file_signature": [
      "func:_validate_stack_integers",
      "func:stack",
      "func:test_dup_does_not_allow_stack_to_exceed_1024_items",
      "func:test_dup_operates_correctly",
      "func:test_dup_raises_InsufficientStack_appropriately",
      "func:test_pop_different_types",
      "func:test_pop_raises_InsufficientStack_appropriately",
      "func:test_pop_returns_latest_stack_item",
      "func:test_push_does_not_allow_stack_to_exceed_1024_items",
      "func:test_push_only_pushes_valid_stack_bytes",
      "func:test_push_only_pushes_valid_stack_ints",
      "func:test_swap_operates_correctly",
      "func:test_swap_raises_InsufficientStack_appropriately"
    ],
    "old_files": [
      "test_stack.py_o1_mini_249558e0.py"
    ],
    "new_files": [
      "test_stack_b5f4bd.py"
    ]
  },
  {
    "file_signature": [
      "class:ConditionalRandomField",
      "func:__init__",
      "func:_input_likelihood",
      "func:_joint_likelihood",
      "func:allowed_transitions",
      "func:forward",
      "func:is_transition_allowed",
      "func:reset_parameters",
      "func:viterbi_tags"
    ],
    "old_files": [
      "conditional_random_field.py_o1_mini_b0709573.py"
    ],
    "new_files": [
      "conditional_random_field_4f2ecd.py"
    ]
  },
  {
    "file_signature": [
      "class:Crossover",
      "class:DifferentialEvolution",
      "class:_DE",
      "func:__init__",
      "func:_internal_ask_candidate",
      "func:_internal_tell_candidate",
      "func:_internal_tell_not_asked",
      "func:apply",
      "func:onepoint",
      "func:recommend",
      "func:rotated_twopoints",
      "func:set_objective_weights",
      "func:twopoints",
      "func:variablewise",
      "func:voronoi"
    ],
    "old_files": [
      "differentialevolution.py_o3_mini_3f237df5.py"
    ],
    "new_files": [
      "differentialevolution_f6d97d.py"
    ]
  },
  {
    "file_signature": [
      "class:HarmonyRemote",
      "func:__init__",
      "func:_setup_callbacks",
      "func:activity_list",
      "func:async_new_activity",
      "func:async_new_activity_finished",
      "func:current_activity",
      "func:extra_state_attributes",
      "func:is_on",
      "func:write_config_file"
    ],
    "old_files": [
      "remote.py_o1_mini_dfe711fb.py"
    ],
    "new_files": [
      "remote_60424b.py"
    ]
  },
  {
    "file_signature": [
      "class:TestDataFrameTruncate",
      "func:test_sort_values_nonsortedindex",
      "func:test_truncate",
      "func:test_truncate_decreasing_index",
      "func:test_truncate_index_only_one_unique_value",
      "func:test_truncate_multiindex",
      "func:test_truncate_nonsortedindex",
      "func:test_truncate_nonsortedindex_axis1"
    ],
    "old_files": [
      "test_truncate.py_o1_mini_cd6b171a.py"
    ],
    "new_files": [
      "test_truncate_a84f32.py"
    ]
  },
  {
    "file_signature": [
      "func:_bins_to_cuts",
      "func:_coerce_to_type",
      "func:_format_labels",
      "func:_infer_precision",
      "func:_is_dt_or_td",
      "func:_nbins_to_bins",
      "func:_postprocess_for_cut",
      "func:_preprocess_for_cut",
      "func:_round_frac",
      "func:cut",
      "func:qcut"
    ],
    "old_files": [
      "tile.py_o1_mini_dd3f33a5.py"
    ],
    "new_files": [
      "tile_a06764.py"
    ]
  },
  {
    "file_signature": [
      "class:AirzoneEntity",
      "class:AirzoneHotWaterEntity",
      "class:AirzoneSystemEntity",
      "class:AirzoneWebServerEntity",
      "class:AirzoneZoneEntity",
      "func:__init__",
      "func:available",
      "func:get_airzone_value"
    ],
    "old_files": [
      "entity.py_o1_mini_b83ba77e.py"
    ],
    "new_files": [
      "entity_9f065b.py"
    ]
  },
  {
    "file_signature": [
      "class:DataConverter",
      "class:HTMLGenerator",
      "class:JSTesterUI",
      "class:TestModuleExpander",
      "func:__init__",
      "func:_expandCollapseAllFuncs",
      "func:_extractPosResult",
      "func:_writeCSS",
      "func:_writeStatusHeaderTemplate",
      "func:_writeTableArea",
      "func:appendSeqRowName",
      "func:appendTableResult",
      "func:applyToAll",
      "func:collapseAll",
      "func:collapseModule",
      "func:expandAll",
      "func:generate_html",
      "func:getPythonResults",
      "func:getRowClsName",
      "func:itemsAreEqual",
      "func:setCollapsed",
      "func:setOutputStatus",
      "func:setupCollapseableHeader",
      "func:showException",
      "func:toggleCollapse",
      "func:writeHiddenResults"
    ],
    "old_files": [
      "html.py_o1_mini_22f9c5ed.py"
    ],
    "new_files": [
      "html_1d1577.py"
    ]
  },
  {
    "file_signature": [
      "class:PowerViewSensor",
      "class:PowerviewSensorDescription",
      "class:PowerviewSensorDescriptionMixin",
      "func:__init__",
      "func:_async_update_shade_from_group",
      "func:device_class",
      "func:get_signal_device_class",
      "func:get_signal_native_unit",
      "func:native_unit_of_measurement",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_o1_mini_d891af5b.py"
    ],
    "new_files": [
      "sensor_dd9269.py"
    ]
  },
  {
    "file_signature": [
      "func:get_min_new_period_epochs",
      "func:get_mock_aggregate",
      "func:run_compute_subscribed_subnets_arguments",
      "func:run_get_committee_assignment",
      "func:run_get_signature_test",
      "func:run_is_candidate_block",
      "func:test_check_if_validator_active",
      "func:test_compute_fork_digest",
      "func:test_compute_new_state_root",
      "func:test_compute_subnet_for_attestation",
      "func:test_compute_subscribed_subnets_random_1",
      "func:test_compute_subscribed_subnets_random_2",
      "func:test_compute_subscribed_subnets_random_3",
      "func:test_get_aggregate_and_proof",
      "func:test_get_aggregate_and_proof_signature",
      "func:test_get_aggregate_signature",
      "func:test_get_attestation_signature_phase0",
      "func:test_get_block_signature",
      "func:test_get_committee_assignment_current_epoch",
      "func:test_get_committee_assignment_next_epoch",
      "func:test_get_committee_assignment_out_bound_epoch",
      "func:test_get_epoch_signature",
      "func:test_get_eth1_vote_chain_in_past",
      "func:test_get_eth1_vote_consensus_vote",
      "func:test_get_eth1_vote_default_vote",
      "func:test_get_eth1_vote_tie",
      "func:test_get_slot_signature",
      "func:test_is_aggregator",
      "func:test_is_candidate_block",
      "func:test_is_proposer"
    ],
    "old_files": [
      "test_validator_unittest.py_o1_mini_d0ddfc83.py"
    ],
    "new_files": [
      "test_validator_unittest_4d4a84.py"
    ]
  },
  {
    "file_signature": [
      "class:MockedAnovaWebsocketHandler",
      "class:MockedAnovaWebsocketStream",
      "class:MockedanovaWebsocketMessage",
      "func:__aiter__",
      "func:__init__",
      "func:__post_init__",
      "func:anova_api_mock",
      "func:clear"
    ],
    "old_files": [
      "conftest.py_o1_mini_7fd8d02c.py"
    ],
    "new_files": [
      "conftest_7752c7.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoAction",
      "func:is_valid_template",
      "func:object_retriever",
      "func:picture_taken",
      "func:picture_taken_by_task",
      "func:took_a_picture",
      "func:took_a_picture_by_task",
      "func:ui_url",
      "func:woodchonk_triggered"
    ],
    "old_files": [
      "test_jinja_templated_action.py_o1_mini_f597637a.py"
    ],
    "new_files": [
      "test_jinja_templated_action_39a881.py"
    ]
  },
  {
    "file_signature": [
      "class:HomeAccessory",
      "class:HomeBridge",
      "class:HomeDriver",
      "class:HomeIIDManager",
      "func:__init__",
      "func:_update_available_from_state",
      "func:async_call_service",
      "func:async_reload",
      "func:async_stop",
      "func:async_update_battery",
      "func:async_update_event_state_callback",
      "func:async_update_linked_battery_callback",
      "func:async_update_linked_battery_charging_callback",
      "func:async_update_state",
      "func:async_update_state_callback",
      "func:available",
      "func:get_accessory",
      "func:get_iid_for_obj",
      "func:pair",
      "func:run",
      "func:setup_message",
      "func:unpair"
    ],
    "old_files": [
      "accessories.py_o3_mini_99a8bc17.py"
    ],
    "new_files": [
      "accessories_b90bda.py"
    ]
  },
  {
    "file_signature": [
      "class:PaymentStatus",
      "class:RaidenService",
      "class:SyncTimeout",
      "class:SynchronizationState",
      "func:__init__",
      "func:__repr__",
      "func:_best_effort_synchronize",
      "func:_best_effort_synchronize_with_confirmed_head",
      "func:_blockchain_event_listener",
      "func:_handle_events",
      "func:_initialize_channel_fees",
      "func:_initialize_messages_queues",
      "func:_initialize_monitoring_services_queue",
      "func:_initialize_payment_statuses",
      "func:_initialize_ready_to_process_events",
      "func:_initialize_transactions_queues",
      "func:_initialize_wal",
      "func:_log_sync_progress",
      "func:_make_initial_state",
      "func:_maybe_snapshot",
      "func:_run",
      "func:_set_rest_api_service_available",
      "func:_start_alarm_task",
      "func:_start_transport",
      "func:_synchronize_with_blockchain",
      "func:_trigger_state_change_effects",
      "func:add_notification",
      "func:add_pending_greenlet",
      "func:async_handle_events",
      "func:confirmation_blocks",
      "func:get_block_number",
      "func:handle_and_track_state_changes",
      "func:handle_state_changes",
      "func:initiator_init",
      "func:matches",
      "func:maybe_upgrade_db",
      "func:mediated_transfer_async",
      "func:on_messages",
      "func:privkey",
      "func:remove",
      "func:set_channel_reveal_timeout",
      "func:should_continue",
      "func:sign",
      "func:smart_contract_filters_from_node_state",
      "func:start",
      "func:stop",
      "func:time_elapsed",
      "func:withdraw"
    ],
    "old_files": [
      "raiden_service.py_o3_mini_abb03416.py"
    ],
    "new_files": [
      "raiden_service_70320b.py"
    ]
  },
  {
    "file_signature": [
      "class:SCSGateScenarioSwitch",
      "class:SCSGateSwitch",
      "func:__init__",
      "func:_setup_scenario_switches",
      "func:_setup_traditional_switches",
      "func:is_on",
      "func:name",
      "func:process_event",
      "func:scs_id",
      "func:setup_platform",
      "func:turn_off",
      "func:turn_on"
    ],
    "old_files": [
      "switch.py_o1_mini_6d2bb2c2.py"
    ],
    "new_files": [
      "switch_5119b1.py"
    ]
  },
  {
    "file_signature": [
      "func:cleanup_report_schedule",
      "func:create_dashboard_report",
      "func:create_report_notification",
      "func:insert_report_schedule",
      "func:reset_key_values"
    ],
    "old_files": [
      "utils.py_o3_mini_4ba154ec.py"
    ],
    "new_files": [
      "utils_9c5ea6.py"
    ]
  },
  {
    "file_signature": [
      "class:_Options",
      "func:__contains__",
      "func:__delitem__",
      "func:__getitem__",
      "func:__init__",
      "func:__setitem__",
      "func:_get_canonical_key",
      "func:andrews_curves",
      "func:autocorrelation_plot",
      "func:bootstrap_plot",
      "func:deregister",
      "func:lag_plot",
      "func:parallel_coordinates",
      "func:radviz",
      "func:register",
      "func:reset",
      "func:scatter_matrix",
      "func:table",
      "func:use"
    ],
    "old_files": [
      "_misc.py_o3_mini_e437bff3.py"
    ],
    "new_files": [
      "_misc_3826f1.py"
    ]
  },
  {
    "file_signature": [
      "class:SerializedStore",
      "class:Store",
      "class:_SerializedStoreItemsView",
      "class:_SerializedStoreKeysView",
      "class:_SerializedStoreValuesView",
      "func:__contains__",
      "func:__delitem__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__setitem__",
      "func:_clear",
      "func:_contains",
      "func:_decode_key",
      "func:_decode_value",
      "func:_del",
      "func:_encode_key",
      "func:_encode_value",
      "func:_get",
      "func:_items_decoded",
      "func:_iteritems",
      "func:_iterkeys",
      "func:_itervalues",
      "func:_keys_decoded",
      "func:_repr_info",
      "func:_set",
      "func:_size",
      "func:_values_decoded",
      "func:apply_changelog_batch",
      "func:clear",
      "func:items",
      "func:keys",
      "func:label",
      "func:persisted_offset",
      "func:set_persisted_offset",
      "func:values"
    ],
    "old_files": [
      "base.py_o3_mini_aafd8625.py"
    ],
    "new_files": [
      "base_ce86d4.py"
    ]
  },
  {
    "file_signature": [
      "class:TestApplicationGraphBuilder",
      "func:bar",
      "func:connect",
      "func:create_config",
      "func:disconnect",
      "func:foo",
      "func:message",
      "func:new_handler",
      "func:second",
      "func:test_all_lambda_functions_share_managed_layer",
      "func:test_autogen_policy_for_function",
      "func:test_can_build_app_with_domain_name",
      "func:test_can_build_lambda_function_app_with_reserved_concurrency",
      "func:test_can_build_lambda_function_app_with_vpc_config",
      "func:test_can_build_lambda_function_with_layers",
      "func:test_can_build_private_rest_api",
      "func:test_can_build_private_rest_api_custom_policy",
      "func:test_can_build_rest_api",
      "func:test_can_build_rest_api_with_authorizer",
      "func:test_can_build_single_lambda_function_app",
      "func:test_can_build_single_lambda_function_app_with_log_retention",
      "func:test_can_build_single_lambda_function_app_with_managed_layer",
      "func:test_can_create_ddb_event_handler",
      "func:test_can_create_kinesis_event_handler",
      "func:test_can_create_s3_event_handler",
      "func:test_can_create_sns_event_handler",
      "func:test_can_create_sqs_event_handler",
      "func:test_can_create_sqs_handler_with_queue_arn",
      "func:test_can_create_websocket_api_with_domain_name",
      "func:test_can_create_websocket_app_missing_connect",
      "func:test_can_create_websocket_app_missing_disconnect",
      "func:test_can_create_websocket_app_missing_message",
      "func:test_can_create_websocket_event_handler",
      "func:test_cloudwatch_event_models",
      "func:test_exception_raised_when_missing_vpc_params",
      "func:test_multiple_lambda_functions_share_role_and_package",
      "func:test_scheduled_event_models",
      "func:test_vpc_trait_added_when_vpc_configured",
      "func:websocket_app_without_connect",
      "func:websocket_app_without_disconnect",
      "func:websocket_app_without_message"
    ],
    "old_files": [
      "test_appgraph.py_o3_mini_d2cf8562.py"
    ],
    "new_files": [
      "test_appgraph_6f35e2.py"
    ]
  },
  {
    "file_signature": [
      "class:Dataset",
      "class:EvaluationData",
      "class:Factors",
      "class:IntendedUse",
      "class:Metrics",
      "class:ModelCard",
      "class:ModelCardInfo",
      "class:ModelCaveatsAndRecommendations",
      "class:ModelDetails",
      "class:ModelEthicalConsiderations",
      "class:ModelUsage",
      "class:Paper",
      "class:QuantitativeAnalyses",
      "class:TrainingData",
      "func:__init__",
      "func:__str__",
      "func:get_description",
      "func:to_dict"
    ],
    "old_files": [
      "model_card.py_o3_mini_55460c7b.py"
    ],
    "new_files": [
      "model_card_7b7f62.py"
    ]
  },
  {
    "file_signature": [
      "class:DataCatalog",
      "class:_FrozenDatasets",
      "func:__contains__",
      "func:__eq__",
      "func:__getitem__",
      "func:__init__",
      "func:__repr__",
      "func:__setattr__",
      "func:_get_dataset",
      "func:_ipython_key_completions_",
      "func:_logger",
      "func:_sub_nonword_chars",
      "func:add",
      "func:add_all",
      "func:add_feed_dict",
      "func:config_resolver",
      "func:confirm",
      "func:exists",
      "func:from_config",
      "func:list",
      "func:load",
      "func:release",
      "func:save",
      "func:shallow_copy"
    ],
    "old_files": [
      "data_catalog.py_o1_mini_8d340332.py"
    ],
    "new_files": [
      "data_catalog_8d7fcf.py"
    ]
  },
  {
    "file_signature": [
      "class:TestBusinessHour",
      "class:TestOpeningTimes",
      "func:_offset",
      "func:dt",
      "func:offset1",
      "func:offset10",
      "func:offset2",
      "func:offset3",
      "func:offset4",
      "func:offset5",
      "func:offset6",
      "func:offset7",
      "func:offset8",
      "func:offset9",
      "func:testRollback1",
      "func:testRollback2",
      "func:testRollforward1",
      "func:testRollforward2",
      "func:test_add_bday_offset_nanos",
      "func:test_add_datetime",
      "func:test_apply",
      "func:test_apply_large_n",
      "func:test_apply_nanoseconds",
      "func:test_bday_ignores_timedeltas",
      "func:test_constructor_errors",
      "func:test_different_normalize_equals",
      "func:test_eq",
      "func:test_eq_attribute",
      "func:test_hash",
      "func:test_is_on_offset",
      "func:test_multiply_by_zero",
      "func:test_neq",
      "func:test_normalize",
      "func:test_opening_time",
      "func:test_repr",
      "func:test_roll_date_object",
      "func:test_sub",
      "func:test_with_offset"
    ],
    "old_files": [
      "test_business_hour.py_o3_mini_13906fb9.py"
    ],
    "new_files": [
      "test_business_hour_6b0e7b.py"
    ]
  },
  {
    "file_signature": [
      "class:HomematicipDimmer",
      "class:HomematicipLight",
      "class:HomematicipLightMeasuring",
      "class:HomematicipMultiDimmer",
      "class:HomematicipNotificationLight",
      "class:HomematicipNotificationLightV2",
      "func:__init__",
      "func:_convert_color",
      "func:_func_channel",
      "func:brightness",
      "func:effect",
      "func:effect_list",
      "func:extra_state_attributes",
      "func:hs_color",
      "func:is_on",
      "func:unique_id"
    ],
    "old_files": [
      "light.py_o1_mini_cbc25cdd.py"
    ],
    "new_files": [
      "light_65a387.py"
    ]
  },
  {
    "file_signature": [
      "class:Color",
      "class:Foo",
      "class:TestCollapseVariadicParameter",
      "class:TestEntrypointToSchema",
      "class:TestExplodeVariadicParameter",
      "class:TestFunctionToSchema",
      "class:TestGetCallParameters",
      "class:TestMethodToSchema",
      "class:TestParseFlowDescriptionToSchema",
      "func:dog",
      "func:f",
      "func:foo",
      "func:g",
      "func:h",
      "func:test_does_not_raise_when_missing_dependencies",
      "func:test_flow_with_args_docstring",
      "func:test_flow_with_complex_args_docstring",
      "func:test_flow_without_args_docstring",
      "func:test_flow_without_docstring",
      "func:test_function_not_found",
      "func:test_function_with_complex_args_across_v1_and_v2",
      "func:test_function_with_datetime_arguments",
      "func:test_function_with_enum_argument",
      "func:test_function_with_generic_arguments",
      "func:test_function_with_kwargs_only",
      "func:test_function_with_one_optional_annotated_argument",
      "func:test_function_with_one_optional_argument",
      "func:test_function_with_one_required_argument",
      "func:test_function_with_positional_only_args",
      "func:test_function_with_pydantic_base_model_collisions",
      "func:test_function_with_pydantic_model_default_across_v1_and_v2",
      "func:test_function_with_secretstr",
      "func:test_function_with_two_arguments",
      "func:test_function_with_user_defined_pydantic_model",
      "func:test_function_with_user_defined_type",
      "func:test_function_with_v1_secretstr_from_compat_module",
      "func:test_handles_dynamically_created_models",
      "func:test_method_with_kwargs_only",
      "func:test_methods_with_complex_arguments",
      "func:test_methods_with_enum_arguments",
      "func:test_methods_with_no_arguments",
      "func:test_no_error_if_no_variadic_parameter",
      "func:test_no_error_if_variadic_parameter_and_kwargs_provided",
      "func:test_no_error_if_variadic_parameter_and_no_kwargs_provided",
      "func:test_params_unchanged_if_variadic_parameter_and_no_kwargs_provided",
      "func:test_raises_parameter_bind_error_with_excess_kwargs",
      "func:test_raises_parameter_bind_error_with_excess_kwargs_no_args",
      "func:test_raises_parameter_bind_with_missing_kwargs",
      "func:test_raises_parameter_bind_with_no_kwargs",
      "func:test_raises_parameter_bind_with_wrong_kwargs_same_number",
      "func:test_simple_function_with_no_arguments",
      "func:test_value_error_raised_if_extra_args_but_no_variadic_parameter"
    ],
    "old_files": [
      "test_callables.py_o3_mini_03d6aa1c.py"
    ],
    "new_files": [
      "test_callables_9ff673.py"
    ]
  },
  {
    "file_signature": [
      "class:TestSerializeTraces",
      "class:TestTypeConversion",
      "func:dummy_func",
      "func:test_convert_non_type",
      "func:test_log_failure_and_continue",
      "func:test_maybe_decode_type",
      "func:test_maybe_encode_type",
      "func:test_trace_round_trip",
      "func:test_type_from_dict",
      "func:test_type_from_dict_nested",
      "func:test_type_from_json",
      "func:test_type_round_trip",
      "func:test_type_round_trip_typed_dict",
      "func:test_type_to_dict",
      "func:test_type_to_json"
    ],
    "old_files": [
      "test_encoding.py_o1_mini_de4987e5.py"
    ],
    "new_files": [
      "test_encoding_e05f99.py"
    ]
  },
  {
    "file_signature": [
      "class:ArtificialFunction",
      "class:ArtificialVariable",
      "class:FarOptimumFunction",
      "func:__init__",
      "func:_initialize",
      "func:_monofunc",
      "func:_multifunc",
      "func:_noisy_call",
      "func:_short_repr",
      "func:_transform",
      "func:compute_pseudotime",
      "func:dimension",
      "func:evaluation_function",
      "func:function_from_transform",
      "func:itercases",
      "func:list_sorted_function_names",
      "func:noisy_function",
      "func:process"
    ],
    "old_files": [
      "functionlib.py_o3_mini_9ac1b2ed.py"
    ],
    "new_files": [
      "functionlib_51de18.py"
    ]
  },
  {
    "file_signature": [
      "func:build_deposit",
      "func:build_deposit_data",
      "func:deposit_from_context",
      "func:mock_deposit",
      "func:prepare_deposit_request",
      "func:prepare_full_genesis_deposits",
      "func:prepare_pending_deposit",
      "func:prepare_random_genesis_deposits",
      "func:prepare_state_and_deposit",
      "func:run_deposit_processing",
      "func:run_deposit_processing_with_specific_fork_version",
      "func:run_deposit_request_processing",
      "func:run_pending_deposit_applying",
      "func:sign_deposit_data"
    ],
    "old_files": [
      "deposits.py_o1_mini_04a4908d.py"
    ],
    "new_files": [
      "deposits_09e7ec.py"
    ]
  },
  {
    "file_signature": [
      "class:FixedAndOptionalKeysDictStrategy",
      "class:FixedKeysDictStrategy",
      "class:ListStrategy",
      "class:TupleStrategy",
      "class:UniqueListStrategy",
      "class:UniqueSampledListStrategy",
      "func:__init__",
      "func:__repr__",
      "func:calc_has_reusable_values",
      "func:calc_is_empty",
      "func:calc_label",
      "func:do_draw",
      "func:do_validate",
      "func:filter",
      "func:not_yet_in_unique_list",
      "func:tuples"
    ],
    "old_files": [
      "collections.py_o1_mini_6db025db.py"
    ],
    "new_files": [
      "collections_5f4a3a.py"
    ]
  },
  {
    "file_signature": [
      "class:OwnTracksContext",
      "func:__init__",
      "func:async_handle_mqtt_message",
      "func:async_see",
      "func:async_see_beacons",
      "func:async_valid_accuracy",
      "func:set_async_see"
    ],
    "old_files": [
      "__init__.py_o1_mini_88580b96.py"
    ],
    "new_files": [
      "__init___1a62a7.py"
    ]
  },
  {
    "file_signature": [
      "func:get_all_committers",
      "func:get_assignee_string",
      "func:get_commits_comment_action_message",
      "func:get_commits_content",
      "func:get_create_branch_event_message",
      "func:get_force_push_commits_event_message",
      "func:get_issue_event_message",
      "func:get_issue_labeled_or_unlabeled_event_message",
      "func:get_issue_milestoned_or_demilestoned_event_message",
      "func:get_pull_request_event_message",
      "func:get_push_commits_event_message",
      "func:get_push_tag_event_message",
      "func:get_release_event_message",
      "func:get_remove_branch_event_message",
      "func:get_short_sha"
    ],
    "old_files": [
      "git.py_o1_mini_e0829e70.py"
    ],
    "new_files": [
      "git_90c119.py"
    ]
  },
  {
    "file_signature": [
      "func:_download_pair_history",
      "func:_download_trades_history",
      "func:_load_cached_data_for_updating",
      "func:download_data",
      "func:download_data_main",
      "func:get_timerange",
      "func:load_data",
      "func:load_pair_history",
      "func:refresh_backtest_ohlcv_data",
      "func:refresh_backtest_trades_data",
      "func:refresh_data",
      "func:validate_backtest_data"
    ],
    "old_files": [
      "history_utils.py_o3_mini_5189a5e1.py"
    ],
    "new_files": [
      "history_utils_a432d7.py"
    ]
  },
  {
    "file_signature": [
      "class:TextClassificationJsonReader",
      "func:__init__",
      "func:_read",
      "func:_truncate",
      "func:apply_token_indexers",
      "func:text_to_instance"
    ],
    "old_files": [
      "text_classification_json.py_o1_mini_45388262.py"
    ],
    "new_files": [
      "text_classification_json_d0a412.py"
    ]
  },
  {
    "file_signature": [
      "func:_join_split_log",
      "func:clean_logs",
      "func:fold_iter",
      "func:get_perturbed_columns",
      "func:kwdissoc",
      "func:parallel_validator",
      "func:parallel_validator_iteration",
      "func:validator",
      "func:validator_iteration"
    ],
    "old_files": [
      "validator.py_o3_mini_af420d1c.py"
    ],
    "new_files": [
      "validator_71103e.py"
    ]
  },
  {
    "file_signature": [
      "class:SendNotificationBot",
      "class:XmppNotificationService",
      "func:__init__",
      "func:_read_upload_file",
      "func:discard_ssl_invalid_cert",
      "func:disconnect_on_login_fail",
      "func:get_random_filename",
      "func:get_url_inner",
      "func:send_text_message"
    ],
    "old_files": [
      "notify.py_o1_mini_f0af2326.py"
    ],
    "new_files": [
      "notify_7c7ee7.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPServer",
      "class:_CallableAdapter",
      "class:_HTTPRequestContext",
      "class:_ProxyAdapter",
      "func:__init__",
      "func:__str__",
      "func:_apply_xheaders",
      "func:_cleanup",
      "func:_unapply_xheaders",
      "func:configurable_base",
      "func:configurable_default",
      "func:data_received",
      "func:finish",
      "func:handle_stream",
      "func:headers_received",
      "func:initialize",
      "func:on_close",
      "func:on_connection_close",
      "func:start_request"
    ],
    "old_files": [
      "httpserver.py_o3_mini_064c87b3.py"
    ],
    "new_files": [
      "httpserver_262275.py"
    ]
  },
  {
    "file_signature": [
      "class:CSSToExcelConverter",
      "class:CssExcelCell",
      "class:ExcelCell",
      "class:ExcelFormatter",
      "func:__call__",
      "func:__init__",
      "func:_border_style",
      "func:_call_uncached",
      "func:_convert_hex_to_excel",
      "func:_format_body",
      "func:_format_header",
      "func:_format_header_mi",
      "func:_format_header_regular",
      "func:_format_hierarchical_rows",
      "func:_format_regular_rows",
      "func:_format_value",
      "func:_generate_body",
      "func:_get_decoration",
      "func:_get_font_names",
      "func:_get_font_size",
      "func:_get_is_bold",
      "func:_get_is_italic",
      "func:_get_is_wrap_text",
      "func:_get_shadow",
      "func:_get_underline",
      "func:_get_vertical_alignment",
      "func:_get_width_name",
      "func:_has_aliases",
      "func:_is_hex_color",
      "func:_is_shorthand_color",
      "func:_pt_to_float",
      "func:_select_font_family",
      "func:_width_to_float",
      "func:build_alignment",
      "func:build_border",
      "func:build_fill",
      "func:build_font",
      "func:build_number_format",
      "func:build_xlstyle",
      "func:color_to_excel",
      "func:get_formatted_cells",
      "func:remove_none",
      "func:write"
    ],
    "old_files": [
      "excel.py_o3_mini_a8ae7b91.py"
    ],
    "new_files": [
      "excel_26f18f.py"
    ]
  },
  {
    "file_signature": [
      "func:_entity_history_to_float_and_state",
      "func:_equivalent_units",
      "func:_get_sensor_states",
      "func:_get_units",
      "func:_is_numeric",
      "func:_last_reset_as_utc_isoformat",
      "func:_normalize_states",
      "func:_suggest_report_issue",
      "func:_time_weighted_average",
      "func:_timestamp_to_isoformat_or_none",
      "func:_update_issues",
      "func:_wanted_statistics",
      "func:compile_statistics",
      "func:create_issue_registry_issue",
      "func:create_statistic_validation_issue",
      "func:get_sensor_statistics_issues",
      "func:list_statistic_ids",
      "func:reset_detected",
      "func:update_statistics_issues",
      "func:validate_statistics",
      "func:warn_dip",
      "func:warn_negative"
    ],
    "old_files": [
      "recorder.py_o1_mini_9c3ad09c.py"
    ],
    "new_files": [
      "recorder_29bf33.py"
    ]
  },
  {
    "file_signature": [
      "class:ArestBinarySensor",
      "class:ArestData",
      "func:__init__",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "binary_sensor.py_o1_mini_f0c44c26.py"
    ],
    "new_files": [
      "binary_sensor_254d71.py"
    ]
  },
  {
    "file_signature": [
      "class:CollectionT",
      "class:GlobalTableT",
      "class:TableManagerT",
      "class:TableT",
      "class:WindowSetT",
      "class:WindowWrapperT",
      "class:WindowedItemsViewT",
      "class:WindowedValuesViewT",
      "class:_AppT",
      "class:_FieldDescriptorT",
      "class:_ModelArg",
      "class:_SchemaT",
      "func:__getitem__",
      "func:__iadd__",
      "func:__iand__",
      "func:__ifloordiv__",
      "func:__ilshift__",
      "func:__imod__",
      "func:__imul__",
      "func:__init__",
      "func:__ior__",
      "func:__ipow__",
      "func:__irshift__",
      "func:__isub__",
      "func:__iter__",
      "func:__itruediv__",
      "func:__ixor__",
      "func:_changelog_topic_name",
      "func:_relative_event",
      "func:_relative_field",
      "func:_relative_now",
      "func:_relative_timestamp",
      "func:_windowed_contains",
      "func:add",
      "func:apply",
      "func:apply_changelog_batch",
      "func:as_ansitable",
      "func:changelog_topic",
      "func:changelog_topics",
      "func:clone",
      "func:current",
      "func:delta",
      "func:get_relative_timestamp",
      "func:get_timestamp",
      "func:hopping",
      "func:keys",
      "func:name",
      "func:now",
      "func:on_commit",
      "func:on_del_key",
      "func:on_partitions_revoked",
      "func:on_rebalance_start",
      "func:on_recover",
      "func:on_set_key",
      "func:partition_for_key",
      "func:persist_offset_on_commit",
      "func:persisted_offset",
      "func:relative_to_field",
      "func:relative_to_now",
      "func:relative_to_stream",
      "func:reset_state",
      "func:send_changelog",
      "func:tumbling",
      "func:using_window",
      "func:value"
    ],
    "old_files": [
      "tables.py_o3_mini_1d679a61.py"
    ],
    "new_files": [
      "tables_379478.py"
    ]
  },
  {
    "file_signature": [
      "class:Foo",
      "class:Model",
      "class:MyModel",
      "func:__call__",
      "func:__init__",
      "func:_equals",
      "func:test_annotated_field",
      "func:test_annotated_optional_field",
      "func:test_custom_init_signature",
      "func:test_custom_init_signature_with_no_var_kw",
      "func:test_does_not_use_reserved_word",
      "func:test_extra_allow_conflict",
      "func:test_extra_allow_conflict_custom_signature",
      "func:test_extra_allow_conflict_twice",
      "func:test_extra_allow_no_conflict",
      "func:test_generic_model_signature",
      "func:test_invalid_identifiers_signature",
      "func:test_model_signature",
      "func:test_optional_field",
      "func:test_signature_is_class_only",
      "func:test_use_field_name"
    ],
    "old_files": [
      "test_model_signature.py_o1_mini_4509d167.py"
    ],
    "new_files": [
      "test_model_signature_86e541.py"
    ]
  },
  {
    "file_signature": [
      "func:test_basic",
      "func:test_binary_mode",
      "func:test_bool_header_arg",
      "func:test_bytes_io_input",
      "func:test_colspecs",
      "func:test_colspecs_with_comment",
      "func:test_default_delimiter",
      "func:test_dtype",
      "func:test_dtype_backend",
      "func:test_encoding_mmap",
      "func:test_full_file",
      "func:test_full_file_with_missing",
      "func:test_full_file_with_spaces",
      "func:test_full_file_with_spaces_and_missing",
      "func:test_fwf_colspecs_infer_nrows",
      "func:test_fwf_colspecs_is_list_or_tuple",
      "func:test_fwf_colspecs_is_list_or_tuple_of_two_element_tuples",
      "func:test_fwf_colspecs_none",
      "func:test_fwf_comment",
      "func:test_fwf_compression",
      "func:test_fwf_for_uint8",
      "func:test_fwf_regression",
      "func:test_fwf_skip_blank_lines",
      "func:test_fwf_thousands",
      "func:test_invalid_dtype_backend",
      "func:test_len_colspecs_len_names",
      "func:test_len_colspecs_len_names_with_index_col",
      "func:test_messed_up_data",
      "func:test_multiple_delimiters",
      "func:test_names_and_infer_colspecs",
      "func:test_non_space_filler",
      "func:test_over_specified",
      "func:test_read_csv_compat",
      "func:test_skip_rows_and_n_rows",
      "func:test_skiprows_by_index_inference",
      "func:test_skiprows_inference",
      "func:test_skiprows_inference_empty",
      "func:test_skiprows_with_iterator",
      "func:test_under_specified",
      "func:test_url_urlopen",
      "func:test_variable_width_unicode",
      "func:test_whitespace_preservation",
      "func:test_widths",
      "func:test_widths_and_usecols"
    ],
    "old_files": [
      "test_read_fwf.py_o1_mini_278fe89e.py"
    ],
    "new_files": [
      "test_read_fwf_ec1bf4.py"
    ]
  },
  {
    "file_signature": [
      "class:XiaomiMiioRemote",
      "func:__init__",
      "func:_send_command",
      "func:device",
      "func:is_on",
      "func:name",
      "func:send_command",
      "func:slot",
      "func:timeout",
      "func:unique_id"
    ],
    "old_files": [
      "remote.py_o1_mini_88116a83.py"
    ],
    "new_files": [
      "remote_939ae3.py"
    ]
  },
  {
    "file_signature": [
      "class:Schema",
      "func:__init__",
      "func:__repr__",
      "func:_model_serializer",
      "func:compile",
      "func:dumps_key",
      "func:dumps_value",
      "func:loads_key",
      "func:loads_value",
      "func:on_dumps_key_prepare_headers",
      "func:on_dumps_value_prepare_headers",
      "func:update"
    ],
    "old_files": [
      "schemas.py_o1_mini_f1442ce8.py"
    ],
    "new_files": [
      "schemas_1abb49.py"
    ]
  },
  {
    "file_signature": [
      "class:OpenAPI",
      "func:_simple_slugify",
      "func:get_content",
      "func:get_field",
      "func:get_link",
      "func:get_schema_definitions",
      "func:load",
      "func:lookup"
    ],
    "old_files": [
      "openapi.py_o1_mini_03accd2a.py"
    ],
    "new_files": [
      "openapi_a5fc11.py"
    ]
  },
  {
    "file_signature": [
      "class:RobotPmsPaddingPayloadEnum",
      "class:RobotScanResultEnum",
      "class:RobotServerResponsesAnalyzer",
      "class:ServerDoesNotSupportRsa",
      "class:ServerResponseToRobot",
      "class:_RobotTlsRecordPayloads",
      "func:__init__",
      "func:_compute_pms_padding",
      "func:_get_rsa_parameters",
      "func:_run_oracle_detection",
      "func:_send_robot_payload",
      "func:compute_result_enum",
      "func:do_handshake_with_robot",
      "func:get_client_key_exchange_record",
      "func:get_finished_record_bytes",
      "func:test_robot"
    ],
    "old_files": [
      "_robot_tester.py_o1_mini_1de23e0a.py"
    ],
    "new_files": [
      "_robot_tester_77d42f.py"
    ]
  },
  {
    "file_signature": [
      "func:download_response",
      "func:format_certificate",
      "func:format_request_headers",
      "func:format_response_headers",
      "func:get_lexer_for_response",
      "func:handle_help",
      "func:main",
      "func:print_help",
      "func:print_request_headers",
      "func:print_response",
      "func:print_response_headers",
      "func:trace",
      "func:validate_auth",
      "func:validate_json"
    ],
    "old_files": [
      "_main.py_o3_mini_93f26c03.py"
    ],
    "new_files": [
      "_main_43a52e.py"
    ]
  },
  {
    "file_signature": [
      "class:AmqpDsn",
      "class:AnyHttpUrl",
      "class:AnyUrl",
      "class:CockroachDsn",
      "class:EmailStr",
      "class:FileUrl",
      "class:HostParts",
      "class:HttpUrl",
      "class:IPvAnyAddress",
      "class:IPvAnyInterface",
      "class:IPvAnyNetwork",
      "class:KafkaDsn",
      "class:MongoDsn",
      "class:MultiHostDsn",
      "class:NameEmail",
      "class:Parts",
      "class:PostgresDsn",
      "class:RedisDsn",
      "func:__eq__",
      "func:__get_validators__",
      "func:__init__",
      "func:__modify_schema__",
      "func:__new__",
      "func:__repr__",
      "func:__str__",
      "func:_build_url",
      "func:_match_url",
      "func:_validate_port",
      "func:apply_default_parts",
      "func:ascii_domain_regex",
      "func:build",
      "func:get_default_parts",
      "func:host_regex",
      "func:import_email_validator",
      "func:int_domain_regex",
      "func:multi_host_url_regex",
      "func:stricturl",
      "func:url_regex",
      "func:validate",
      "func:validate_email",
      "func:validate_host",
      "func:validate_parts"
    ],
    "old_files": [
      "networks.py_o3_mini_5d69cfc5.py"
    ],
    "new_files": [
      "networks_4fcfb8.py"
    ]
  },
  {
    "file_signature": [
      "func:get_full_significant_states_with_session",
      "func:get_last_state_changes",
      "func:get_significant_states",
      "func:get_significant_states_with_session",
      "func:state_changes_during_period"
    ],
    "old_files": [
      "__init__.py_o3_mini_0ebca355.py"
    ],
    "new_files": [
      "__init___4bc6fc.py"
    ]
  },
  {
    "file_signature": [
      "class:ImplicitNSInfo",
      "func:__init__",
      "func:_find_module",
      "func:_find_module_py33",
      "func:_from_loader",
      "func:_get_init_path",
      "func:_get_source",
      "func:_iter_module_names",
      "func:_test_print",
      "func:_test_raise_error",
      "func:_zip_list_subdirectory",
      "func:create_simple_object",
      "func:get_builtin_module_names",
      "func:get_compiled_method_return",
      "func:get_module_info",
      "func:get_sys_path",
      "func:iter_module_names",
      "func:load_module",
      "func:safe_literal_eval"
    ],
    "old_files": [
      "functions.py_o1_mini_02c2585e.py"
    ],
    "new_files": [
      "functions_b12404.py"
    ]
  },
  {
    "file_signature": [
      "func:_checkout",
      "func:_is_commit",
      "func:checkout",
      "func:clone",
      "func:clone_and_checkout",
      "func:get_current_sha",
      "func:list_tags",
      "func:remove_remote"
    ],
    "old_files": [
      "git.py_o1_mini_08af83e3.py"
    ],
    "new_files": [
      "git_e2f7c0.py"
    ]
  },
  {
    "file_signature": [
      "func:album_fixture",
      "func:artist_albums_fixture",
      "func:children_200_fixture",
      "func:children_20_fixture",
      "func:children_300_fixture",
      "func:children_30_fixture",
      "func:empty_library_fixture",
      "func:empty_payload_fixture",
      "func:grandchildren_300_fixture",
      "func:hubs_fixture",
      "func:hubs_music_library_fixture",
      "func:library_fixture",
      "func:library_movies_all_fixture",
      "func:library_movies_collections_fixture",
      "func:library_movies_filtertypes_fixture",
      "func:library_movies_metadata_fixture",
      "func:library_movies_size_fixture",
      "func:library_movies_sort_fixture",
      "func:library_music_all_fixture",
      "func:library_music_collections_fixture",
      "func:library_music_metadata_fixture",
      "func:library_music_size_fixture",
      "func:library_music_sort_fixture",
      "func:library_sections_fixture",
      "func:library_tvshows_all_fixture",
      "func:library_tvshows_collections_fixture",
      "func:library_tvshows_metadata_fixture",
      "func:library_tvshows_size_episodes_fixture",
      "func:library_tvshows_size_fixture",
      "func:library_tvshows_size_seasons_fixture",
      "func:library_tvshows_sort_fixture",
      "func:livetv_sessions_fixture",
      "func:media_100_fixture",
      "func:media_1_fixture",
      "func:media_200_fixture",
      "func:media_30_fixture",
      "func:mock_plex_calls",
      "func:mock_setup_entry",
      "func:mock_websocket",
      "func:player_plexhtpc_resources_fixture",
      "func:player_plexweb_resources_fixture",
      "func:playlist_500_fixture",
      "func:playlists_fixture",
      "func:playqueue_1234_fixture",
      "func:playqueue_created_fixture",
      "func:plex_server_accounts_fixture",
      "func:plex_server_base_fixture",
      "func:plex_server_clients_fixture",
      "func:plex_server_default_fixture",
      "func:plex_server_url",
      "func:plextv_account_fixture",
      "func:plextv_resources_fixture",
      "func:plextv_resources_two_servers_fixture",
      "func:plextv_shared_users_fixture",
      "func:security_token_fixture",
      "func:session_base_fixture",
      "func:session_default_fixture",
      "func:session_live_tv_fixture",
      "func:session_new_user_fixture",
      "func:session_photo_fixture",
      "func:session_plexweb_fixture",
      "func:session_transient_fixture",
      "func:session_unknown_fixture",
      "func:setup_plex_server",
      "func:show_seasons_fixture",
      "func:sonos_resources_fixture",
      "func:update_check_fixture_new",
      "func:update_check_fixture_new_not_updatable",
      "func:update_check_fixture_nochange"
    ],
    "old_files": [
      "conftest.py_o3_mini_27c9761e.py"
    ],
    "new_files": [
      "conftest_ca46fe.py"
    ]
  },
  {
    "file_signature": [
      "class:Appender",
      "class:Substitution",
      "func:__call__",
      "func:__init__",
      "func:_deprecate_kwarg",
      "func:_format_argument_list",
      "func:decorate",
      "func:decorator",
      "func:deprecate",
      "func:deprecate_kwarg",
      "func:deprecate_nonkeyword_arguments",
      "func:doc",
      "func:future_version_msg",
      "func:indent",
      "func:set_module",
      "func:update",
      "func:wrapper"
    ],
    "old_files": [
      "_decorators.py_o1_mini_7c692e1f.py"
    ],
    "new_files": [
      "_decorators_cfdb34.py"
    ]
  },
  {
    "file_signature": [
      "class:SimpleInfluence",
      "func:__init__",
      "func:_calculate_influence_scores",
      "func:_flatten_tensors",
      "func:get_hvp",
      "func:get_inverse_hvp_lissa"
    ],
    "old_files": [
      "simple_influence.py_o3_mini_20464f95.py"
    ],
    "new_files": [
      "simple_influence_296df3.py"
    ]
  },
  {
    "file_signature": [
      "class:StateGroup",
      "func:AwaitingConcurrencySlot",
      "func:AwaitingRetry",
      "func:Cancelled",
      "func:Cancelling",
      "func:Completed",
      "func:Crashed",
      "func:Failed",
      "func:Late",
      "func:Paused",
      "func:Pending",
      "func:Retrying",
      "func:Running",
      "func:Scheduled",
      "func:Suspended",
      "func:__init__",
      "func:__repr__",
      "func:_get_type_counts",
      "func:_traced",
      "func:all_completed",
      "func:all_final",
      "func:any_cancelled",
      "func:any_failed",
      "func:any_paused",
      "func:counts_message",
      "func:fail_count",
      "func:format_exception",
      "func:get_state_result",
      "func:is_state_iterable",
      "func:to_state_create"
    ],
    "old_files": [
      "states.py_o1_mini_3a0b7b54.py"
    ],
    "new_files": [
      "states_8ed126.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseChoice",
      "class:Choice",
      "class:TransitionChoice",
      "func:__init__",
      "func:__len__",
      "func:_get_parameters_str",
      "func:_internal_get_standardized_data",
      "func:_internal_set_standardized_data",
      "func:_layered_get_value",
      "func:_layered_set_value",
      "func:choices",
      "func:get_value_hash",
      "func:index",
      "func:indices",
      "func:mutate",
      "func:transitions"
    ],
    "old_files": [
      "choice.py_o1_mini_7210e35e.py"
    ],
    "new_files": [
      "choice_599488.py"
    ]
  },
  {
    "file_signature": [
      "func:_filter_recursive",
      "func:json_load",
      "func:json_save",
      "func:json_stringify",
      "func:sanitize_json"
    ],
    "old_files": [
      "json_utils.py_o1_mini_dbbfa128.py"
    ],
    "new_files": [
      "json_utils_d4639e.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractArguments",
      "class:ParamIssue",
      "class:TreeArguments",
      "class:TreeArgumentsWrapper",
      "class:ValuesArguments",
      "class:_AbstractArgumentsMixin",
      "func:__init__",
      "func:__repr__",
      "func:_as_tree_tuple_objects",
      "func:_iterate_star_args",
      "func:_parse_argument_clinic",
      "func:_star_star_dict",
      "func:argument_node",
      "func:context",
      "func:create_cached",
      "func:decorator",
      "func:get_calling_nodes",
      "func:iter_calling_names_with_star",
      "func:iterate_argument_clinic",
      "func:repack_with_argument_clinic",
      "func:trailer",
      "func:try_iter_content",
      "func:unpack",
      "func:unpack_arglist",
      "func:wrapper"
    ],
    "old_files": [
      "arguments.py_o1_mini_8266a1b7.py"
    ],
    "new_files": [
      "arguments_a79ceb.py"
    ]
  },
  {
    "file_signature": [
      "class:BroadlinkDevice",
      "class:BroadlinkMP1BG1Device",
      "class:BroadlinkSP4BDevice",
      "class:MockSetup",
      "func:__init__",
      "func:get_device",
      "func:get_entry_data",
      "func:get_mock_api",
      "func:get_mock_entry"
    ],
    "old_files": [
      "__init__.py_o1_mini_b35c5769.py"
    ],
    "new_files": [
      "__init___716b23.py"
    ]
  },
  {
    "file_signature": [
      "func:owners",
      "func:test_execute_task",
      "func:test_execute_task_with_command_exception",
      "func:test_scheduler_celery_no_timeout_ny",
      "func:test_scheduler_celery_no_timeout_utc",
      "func:test_scheduler_celery_timeout_ny",
      "func:test_scheduler_celery_timeout_utc",
      "func:test_scheduler_feature_flag_off"
    ],
    "old_files": [
      "scheduler_tests.py_o1_mini_704e35bc.py"
    ],
    "new_files": [
      "scheduler_tests_223cad.py"
    ]
  },
  {
    "file_signature": [
      "func:__internal_pivot_table",
      "func:_add_margins",
      "func:_all_key",
      "func:_build_names_mapper",
      "func:_compute_grand_margin",
      "func:_convert_by",
      "func:_generate_marginal_results",
      "func:_generate_marginal_results_without_values",
      "func:_get_names",
      "func:_normalize",
      "func:crosstab",
      "func:pivot",
      "func:pivot_table"
    ],
    "old_files": [
      "pivot.py_o3_mini_366d7a7a.py"
    ],
    "new_files": [
      "pivot_1f30db.py"
    ]
  },
  {
    "file_signature": [
      "func:cast_mock",
      "func:castbrowser_mock",
      "func:get_cast_type_mock",
      "func:get_chromecast_mock",
      "func:get_multizone_status_mock",
      "func:ha_controller_mock",
      "func:mz_mock",
      "func:quick_play_mock"
    ],
    "old_files": [
      "conftest.py_o1_mini_0958eae7.py"
    ],
    "new_files": [
      "conftest_d0fb86.py"
    ]
  },
  {
    "file_signature": [
      "class:AccountSensor",
      "class:ExchangeRateSensor",
      "func:__init__",
      "func:extra_state_attributes",
      "func:update"
    ],
    "old_files": [
      "sensor.py_o1_mini_e1086b56.py"
    ],
    "new_files": [
      "sensor_b70d9a.py"
    ]
  },
  {
    "file_signature": [
      "class:PioneerDevice",
      "func:__init__",
      "func:is_volume_muted",
      "func:media_title",
      "func:mute_volume",
      "func:name",
      "func:select_source",
      "func:set_volume_level",
      "func:setup_platform",
      "func:source",
      "func:source_list",
      "func:state",
      "func:telnet_command",
      "func:telnet_request",
      "func:turn_off",
      "func:turn_on",
      "func:update",
      "func:volume_down",
      "func:volume_level",
      "func:volume_up"
    ],
    "old_files": [
      "media_player.py_o1_mini_6a1193c9.py"
    ],
    "new_files": [
      "media_player_d56fd8.py"
    ]
  },
  {
    "file_signature": [
      "class:Token",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:ensure_text",
      "func:show_token"
    ],
    "old_files": [
      "token_class.py_o3_mini_074419f2.py"
    ],
    "new_files": [
      "token_class_8d102b.py"
    ]
  },
  {
    "file_signature": [
      "class:ImportKey",
      "func:_config",
      "func:_file_output_stream_context",
      "func:_in_memory_output_stream_context",
      "func:_tmp_file",
      "func:check_code_string",
      "func:check_file",
      "func:check_stream",
      "func:find_imports_in_code",
      "func:find_imports_in_file",
      "func:find_imports_in_paths",
      "func:find_imports_in_stream",
      "func:sort_code_string",
      "func:sort_file",
      "func:sort_stream"
    ],
    "old_files": [
      "api.py_o1_mini_dfd28840.py"
    ],
    "new_files": [
      "api_1827f5.py"
    ]
  },
  {
    "file_signature": [
      "class:TestPreviousVersionState",
      "func:analyses",
      "func:compare_previous_results",
      "func:compare_previous_state",
      "func:generate_latest_manifest",
      "func:generate_latest_run_results",
      "func:macros",
      "func:models",
      "func:seeds",
      "func:snapshots",
      "func:test_backwards_compatible_run_results_versions",
      "func:test_backwards_compatible_versions",
      "func:test_compare_results_current",
      "func:test_compare_state_current",
      "func:test_get_manifest_schema_version",
      "func:test_nonbackwards_compatible_versions",
      "func:test_project",
      "func:tests"
    ],
    "old_files": [
      "test_previous_version_state.py_o1_mini_89d24786.py"
    ],
    "new_files": [
      "test_previous_version_state_eb5537.py"
    ]
  },
  {
    "file_signature": [
      "class:ProtectCamera",
      "func:__init__",
      "func:_add_new_device",
      "func:_async_camera_entities",
      "func:_async_set_stream_source",
      "func:_async_update_device_from_protect",
      "func:_create_rtsp_repair",
      "func:_get_camera_channels"
    ],
    "old_files": [
      "camera.py_o1_mini_23cce426.py"
    ],
    "new_files": [
      "camera_19b416.py"
    ]
  },
  {
    "file_signature": [
      "class:ConditionerEntity",
      "func:__init__",
      "func:_async_push_update",
      "func:_async_update_from_data",
      "func:_async_update_meteo_from_value",
      "func:_climate",
      "func:_handle_coordinator_update"
    ],
    "old_files": [
      "climate.py_o1_mini_d7aa9b80.py"
    ],
    "new_files": [
      "climate_9e8de7.py"
    ]
  },
  {
    "file_signature": [
      "class:AnacondaCompleteFuncargs",
      "class:AnacondaFillFuncargs",
      "class:AnacondaFuncargsKeyListener",
      "func:_insert_characters",
      "func:insert_snippet",
      "func:is_enabled",
      "func:on_query_context",
      "func:run",
      "func:valid_scope"
    ],
    "old_files": [
      "complete_func_args.py_o1_mini_add1538b.py"
    ],
    "new_files": [
      "complete_func_args_83358f.py"
    ]
  },
  {
    "file_signature": [
      "class:UnknownMediaType",
      "func:browse_media",
      "func:build_item_response",
      "func:generate_plex_uri",
      "func:get_proxy_image_url",
      "func:hub_payload",
      "func:item_payload",
      "func:library_contents",
      "func:library_section_payload",
      "func:playlists_payload",
      "func:root_payload",
      "func:server_payload",
      "func:special_library_payload",
      "func:station_payload"
    ],
    "old_files": [
      "media_browser.py_o1_mini_7f9ba9bb.py"
    ],
    "new_files": [
      "media_browser_2b5d62.py"
    ]
  },
  {
    "file_signature": [
      "class:MultiIndex",
      "func:__abs__",
      "func:__getattr__",
      "func:__iter__",
      "func:__new__",
      "func:_align_and_column_op",
      "func:_column_label",
      "func:_comparator_for_monotonic_decreasing",
      "func:_comparator_for_monotonic_increasing",
      "func:_get_level_number",
      "func:_internal",
      "func:_is_monotonic",
      "func:_is_monotonic_decreasing",
      "func:_is_monotonic_increasing",
      "func:_verify_for_rename",
      "func:_with_new_scol",
      "func:all",
      "func:any",
      "func:argmax",
      "func:argmin",
      "func:asi8",
      "func:asof",
      "func:copy",
      "func:drop",
      "func:factorize",
      "func:from_arrays",
      "func:from_frame",
      "func:from_product",
      "func:from_tuples",
      "func:get_level_values",
      "func:hasnans",
      "func:inferred_type",
      "func:insert",
      "func:intersection",
      "func:is_all_dates",
      "func:item",
      "func:levshape",
      "func:name",
      "func:nunique",
      "func:swaplevel",
      "func:symmetric_difference",
      "func:toPandas",
      "func:to_frame",
      "func:to_pandas",
      "func:value_counts"
    ],
    "old_files": [
      "multi.py_o1_mini_ac01e7fb.py"
    ],
    "new_files": [
      "multi_7dfe48.py"
    ]
  },
  {
    "file_signature": [
      "class:CancunBackwardsHeader",
      "class:CancunBlock",
      "class:CancunBlockHeader",
      "func:__init__",
      "func:__str__",
      "func:deserialize",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash"
    ],
    "old_files": [
      "blocks.py_o3_mini_5859508d.py"
    ],
    "new_files": [
      "blocks_abf4af.py"
    ]
  },
  {
    "file_signature": [
      "func:compute_gas_limit",
      "func:compute_gas_limit_bounds",
      "func:eth_now",
      "func:fill_header_params_from_parent",
      "func:new_timestamp_from_parent"
    ],
    "old_files": [
      "headers.py_o3_mini_3581e504.py"
    ],
    "new_files": [
      "headers_8374b8.py"
    ]
  },
  {
    "file_signature": [
      "class:PrefixPart",
      "func:__init__",
      "func:__repr__",
      "func:create_spacing_part",
      "func:end_pos",
      "func:search_ancestor",
      "func:split_prefix"
    ],
    "old_files": [
      "prefix.py_o1_mini_ee5684c9.py"
    ],
    "new_files": [
      "prefix_7be09c.py"
    ]
  },
  {
    "file_signature": [
      "class:MessageDict",
      "class:RawReactionRow",
      "class:ReactionDict",
      "func:build_dict_from_raw_db_row",
      "func:build_message_dict",
      "func:bulk_hydrate_recipient_info",
      "func:bulk_hydrate_sender_info",
      "func:extract_message_dict",
      "func:finalize_payload",
      "func:get_rendering_realm_id",
      "func:hydrate_recipient_info",
      "func:ids_to_dict",
      "func:message_to_encoded_cache",
      "func:messages_to_encoded_cache",
      "func:messages_to_encoded_cache_helper",
      "func:post_process_dicts",
      "func:save_message_rendered_content",
      "func:set_sender_avatar",
      "func:sew_messages_and_reactions",
      "func:sew_messages_and_submessages",
      "func:sew_submessages_and_reactions_to_msgs",
      "func:stringify_message_dict",
      "func:update_message_cache",
      "func:wide_dict"
    ],
    "old_files": [
      "message_cache.py_o1_mini_ef44c5a4.py"
    ],
    "new_files": [
      "message_cache_dbda93.py"
    ]
  },
  {
    "file_signature": [
      "class:Automation",
      "class:AutomationCore",
      "class:AutomationCreate",
      "class:AutomationPartialUpdate",
      "class:AutomationSort",
      "class:AutomationUpdate",
      "class:CompositeTrigger",
      "class:CompoundTrigger",
      "class:EventTrigger",
      "class:Firing",
      "class:Posture",
      "class:ResourceTrigger",
      "class:SequenceTrigger",
      "class:Trigger",
      "class:TriggerState",
      "class:TriggeredAction",
      "func:__init__",
      "func:_set_parent",
      "func:all_events",
      "func:all_firings",
      "func:all_triggers",
      "func:automation",
      "func:bucketing_key",
      "func:child_trigger_ids",
      "func:covers",
      "func:covers_resources",
      "func:create_automation_state_change_event",
      "func:enforce_minimum_within_for_proactive_triggers",
      "func:event_pattern",
      "func:expected_firing_order",
      "func:expects",
      "func:idempotency_key",
      "func:immediate",
      "func:meets_threshold",
      "func:model_validate",
      "func:num_expected_firings",
      "func:parent",
      "func:prevent_run_deployment_loops",
      "func:ready_to_fire",
      "func:reset_ids",
      "func:starts_after",
      "func:trigger_by_id",
      "func:triggers",
      "func:triggers_of_type",
      "func:validate_require",
      "func:validate_trigger_states"
    ],
    "old_files": [
      "automations.py_o1_mini_7478a9fa.py"
    ],
    "new_files": [
      "automations_d10ae8.py"
    ]
  },
  {
    "file_signature": [
      "class:RaidenBundle",
      "class:ServicesBundle",
      "func:__post_init__",
      "func:load_deployed_contracts_data",
      "func:load_deployment_addresses_from_contracts",
      "func:load_deployment_addresses_from_udc",
      "func:raiden_bundle_from_contracts_deployment",
      "func:services_bundle_from_contracts_deployment"
    ],
    "old_files": [
      "startup.py_o1_mini_d09acc98.py"
    ],
    "new_files": [
      "startup_7ab634.py"
    ]
  },
  {
    "file_signature": [
      "func:_build_block_for_next_slot_with_sync_participation",
      "func:compute_aggregate_sync_committee_signature",
      "func:compute_committee_indices",
      "func:compute_sync_committee_inclusion_reward",
      "func:compute_sync_committee_participant_reward_and_penalty",
      "func:compute_sync_committee_proposer_reward",
      "func:compute_sync_committee_signature",
      "func:run_successful_sync_committee_test",
      "func:run_sync_committee_processing",
      "func:validate_sync_committee_rewards"
    ],
    "old_files": [
      "sync_committee.py_o1_mini_d5a03087.py"
    ],
    "new_files": [
      "sync_committee_b34f1b.py"
    ]
  },
  {
    "file_signature": [
      "func:_hash_ndarray",
      "func:combine_hash_arrays",
      "func:hash_array",
      "func:hash_pandas_object",
      "func:hash_tuples"
    ],
    "old_files": [
      "hashing.py_o1_mini_acc7615d.py"
    ],
    "new_files": [
      "hashing_3bf140.py"
    ]
  },
  {
    "file_signature": [
      "class:XlsxWriter",
      "class:_XlsxStyler",
      "func:__init__",
      "func:_save",
      "func:_write_cells",
      "func:book",
      "func:convert",
      "func:sheets"
    ],
    "old_files": [
      "_xlsxwriter.py_o1_mini_41e95306.py"
    ],
    "new_files": [
      "_xlsxwriter_8ba0cd.py"
    ]
  },
  {
    "file_signature": [
      "class:ConfiguredDoorBird",
      "class:DoorbirdEvent",
      "class:DoorbirdEventConfig",
      "func:__init__",
      "func:_get_event_name",
      "func:custom_url",
      "func:device",
      "func:get_event_data",
      "func:name",
      "func:slug",
      "func:token",
      "func:update_events"
    ],
    "old_files": [
      "device.py_o1_mini_60b139c5.py"
    ],
    "new_files": [
      "device_e2c8fa.py"
    ]
  },
  {
    "file_signature": [
      "class:OlympusEmulator",
      "class:OlympusSurface",
      "func:__init__",
      "func:_get_parametrization",
      "func:_simulate_emulator",
      "func:_simulate_surface",
      "func:evaluation_function"
    ],
    "old_files": [
      "core.py_o1_mini_16553488.py"
    ],
    "new_files": [
      "core_fcc14c.py"
    ]
  },
  {
    "file_signature": [
      "class:IOU",
      "class:PFSConfig",
      "class:PFSInfo",
      "class:PFSProxy",
      "func:__init__",
      "func:_query_address_metadata",
      "func:_query_paths",
      "func:as_json",
      "func:check_pfs_for_production",
      "func:configure_pfs_or_exit",
      "func:create_current_iou",
      "func:get_last_iou",
      "func:get_pfs_info",
      "func:get_random_pfs",
      "func:get_valid_pfs_url",
      "func:make_iou",
      "func:post_pfs_feedback",
      "func:post_pfs_paths",
      "func:query_address_metadata",
      "func:query_paths",
      "func:sign",
      "func:update_iou"
    ],
    "old_files": [
      "pathfinding.py_o3_mini_40519248.py"
    ],
    "new_files": [
      "pathfinding_7a5b8f.py"
    ]
  },
  {
    "file_signature": [
      "class:BlueprintT",
      "class:CacheBackendT",
      "class:CacheT",
      "class:Request",
      "class:ResourceOptions",
      "class:Response",
      "class:View",
      "class:Web",
      "class:_AppT",
      "func:__init__",
      "func:cache",
      "func:init_webserver",
      "func:on_webserver_init",
      "func:register",
      "func:route",
      "func:static",
      "func:view"
    ],
    "old_files": [
      "web.py_o1_mini_8f2f47a8.py"
    ],
    "new_files": [
      "web_6fce4a.py"
    ]
  },
  {
    "file_signature": [
      "class:BooleanField",
      "class:BytesField",
      "class:CharField",
      "class:DatetimeField",
      "class:DecimalField",
      "class:FieldDescriptor",
      "class:FloatField",
      "class:IntegerField",
      "class:NumberField",
      "class:StringField",
      "func:__get__",
      "func:__init__",
      "func:__repr__",
      "func:__set__",
      "func:__set_name__",
      "func:_compile_type_expression",
      "func:_copy_descriptors",
      "func:_is_concrete_model",
      "func:_parents_path",
      "func:_prepare_type_expression",
      "func:as_dict",
      "func:clone",
      "func:field_for_type",
      "func:getattr",
      "func:ident",
      "func:lazy_coercion",
      "func:on_model_attached",
      "func:prepare_value",
      "func:related_models",
      "func:should_coerce",
      "func:to_python",
      "func:validate",
      "func:validate_all",
      "func:validation_error"
    ],
    "old_files": [
      "fields.py_o3_mini_49602f5d.py"
    ],
    "new_files": [
      "fields_638399.py"
    ]
  },
  {
    "file_signature": [
      "class:LondonBackwardsHeader",
      "class:LondonBlock",
      "class:LondonBlockHeader",
      "class:LondonMiningHeader",
      "func:__init__",
      "func:__str__",
      "func:blob_gas_used",
      "func:deserialize",
      "func:excess_blob_gas",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash",
      "func:parent_beacon_block_root",
      "func:serialize",
      "func:withdrawals_root"
    ],
    "old_files": [
      "blocks.py_o3_mini_268dfb6c.py"
    ],
    "new_files": [
      "blocks_a65ab4.py"
    ]
  },
  {
    "file_signature": [
      "class:RougeTest",
      "func:f1",
      "func:global_distributed_rouge",
      "func:setup_method",
      "func:test_distributed_rouge",
      "func:test_rouge",
      "func:test_rouge_with_zero_counts"
    ],
    "old_files": [
      "rouge_test.py_o1_mini_057140f4.py"
    ],
    "new_files": [
      "rouge_test_960688.py"
    ]
  },
  {
    "file_signature": [
      "func:assert_equal_cell_styles",
      "func:custom_converter",
      "func:test_format_hierarchical_rows_periodindex",
      "func:test_styler_custom_converter",
      "func:test_styler_custom_style",
      "func:test_styler_default_values",
      "func:test_styler_to_excel_basic",
      "func:test_styler_to_excel_basic_indexes",
      "func:test_styler_to_excel_border_style",
      "func:test_styler_to_excel_unstyled",
      "func:test_styler_to_s3",
      "func:tmp_excel"
    ],
    "old_files": [
      "test_style.py_o1_mini_dbe3e079.py"
    ],
    "new_files": [
      "test_style_48cf89.py"
    ]
  },
  {
    "file_signature": [
      "func:convert_trades_format",
      "func:convert_trades_to_ohlcv",
      "func:trades_convert_types",
      "func:trades_df_remove_duplicates",
      "func:trades_dict_to_list",
      "func:trades_list_to_df",
      "func:trades_to_ohlcv"
    ],
    "old_files": [
      "trade_converter.py_o1_mini_e08055d2.py"
    ],
    "new_files": [
      "trade_converter_316324.py"
    ]
  },
  {
    "file_signature": [
      "class:GrowattData",
      "class:GrowattInverter",
      "func:__init__",
      "func:get_currency",
      "func:get_data",
      "func:get_device_list",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:update"
    ],
    "old_files": [
      "__init__.py_o1_mini_892dc81c.py"
    ],
    "new_files": [
      "__init___ea74db.py"
    ]
  },
  {
    "file_signature": [
      "class:MountableProtectDeviceBinarySensor",
      "class:ProtectBinaryEntityDescription",
      "class:ProtectBinaryEventEntityDescription",
      "class:ProtectDeviceBinarySensor",
      "class:ProtectDiskBinarySensor",
      "class:ProtectEventBinarySensor",
      "func:__init__",
      "func:_add_new_device",
      "func:_async_event_entities",
      "func:_async_nvr_entities",
      "func:_async_update_device_from_protect",
      "func:_set_event_done"
    ],
    "old_files": [
      "binary_sensor.py_o1_mini_5651c40b.py"
    ],
    "new_files": [
      "binary_sensor_9e7fb5.py"
    ]
  },
  {
    "file_signature": [
      "class:MentionedUserGroup",
      "class:UserMessageNotificationsData",
      "func:__post_init__",
      "func:from_user_id_sets",
      "func:get_email_notification_trigger",
      "func:get_mentioned_user_group",
      "func:get_push_notification_trigger",
      "func:get_user_group_mentions_data",
      "func:is_email_notifiable",
      "func:is_notifiable",
      "func:is_push_notifiable",
      "func:trivially_should_not_notify",
      "func:user_allows_notifications_in_StreamTopic"
    ],
    "old_files": [
      "notification_data.py_o1_mini_110f4c2c.py"
    ],
    "new_files": [
      "notification_data_d3e584.py"
    ]
  },
  {
    "file_signature": [
      "class:SysMonitorSensorEntityDescription",
      "class:SystemMonitorSensor",
      "func:__init__",
      "func:_handle_coordinator_update",
      "func:available",
      "func:check_legacy_resource",
      "func:clean_obsolete_entities",
      "func:get_arguments",
      "func:get_cpu_icon",
      "func:get_ip_address",
      "func:get_network",
      "func:get_packets",
      "func:get_throughput"
    ],
    "old_files": [
      "sensor.py_o1_mini_90181a90.py"
    ],
    "new_files": [
      "sensor_440acd.py"
    ]
  },
  {
    "file_signature": [
      "class:Agent",
      "class:PowerSystem",
      "func:__init__",
      "func:_simulate_power_system",
      "func:block",
      "func:block24",
      "func:deblock24",
      "func:dimension",
      "func:get_num_vars",
      "func:get_output",
      "func:make_plots",
      "func:set_parameters"
    ],
    "old_files": [
      "core.py_o3_mini_9f7a19d9.py"
    ],
    "new_files": [
      "core_a86387.py"
    ]
  },
  {
    "file_signature": [
      "class:TestContains",
      "class:TestGetIndexer",
      "class:TestGetItem",
      "class:TestGetLoc",
      "class:TestGetSliceBounds",
      "class:TestIndexerBetweenTime",
      "class:TestMaybeCastSliceBound",
      "class:TestTake",
      "class:TestWhere",
      "func:test_contains_nonunique",
      "func:test_dti_business_getitem",
      "func:test_dti_business_getitem_matplotlib_hackaround",
      "func:test_dti_contains_with_duplicates",
      "func:test_dti_take_dont_lose_meta",
      "func:test_get_indexer",
      "func:test_get_indexer_date_objs",
      "func:test_get_indexer_mixed_dtypes",
      "func:test_get_indexer_out_of_bounds_date",
      "func:test_get_indexer_pad_requires_monotonicity",
      "func:test_get_loc_key_unit_mismatch",
      "func:test_get_loc_key_unit_mismatch_not_castable",
      "func:test_get_loc_nat",
      "func:test_get_loc_reasonable_key_error",
      "func:test_get_loc_time_nat",
      "func:test_get_loc_time_obj",
      "func:test_get_loc_time_obj2",
      "func:test_get_loc_timedelta_invalid_key",
      "func:test_get_loc_year_str",
      "func:test_get_slice_bounds_datetime_outside",
      "func:test_get_slice_bounds_datetime_within",
      "func:test_getitem",
      "func:test_getitem_int_list",
      "func:test_getitem_slice_keeps_name",
      "func:test_indexer_between_time",
      "func:test_indexer_between_time_non_nano",
      "func:test_maybe_cast_slice_bounds_empty",
      "func:test_maybe_cast_slice_duplicate_monotonic",
      "func:test_slice_datetime_locs",
      "func:test_take",
      "func:test_take2",
      "func:test_take_fill_value",
      "func:test_take_fill_value_with_timezone",
      "func:test_take_invalid_kwargs",
      "func:test_take_nan_first_datetime",
      "func:test_where_doesnt_retain_freq",
      "func:test_where_invalid_dtypes",
      "func:test_where_mismatched_nat",
      "func:test_where_other",
      "func:test_where_tz"
    ],
    "old_files": [
      "test_indexing.py_o1_mini_3567a5c8.py"
    ],
    "new_files": [
      "test_indexing_e492e0.py"
    ]
  },
  {
    "file_signature": [
      "class:ExitCode",
      "class:TransformFilterAst",
      "func:_main",
      "func:filterfunc",
      "func:filterstr_to_filterfunc",
      "func:get_cookies_from_instagram",
      "func:http_status_code_list",
      "func:import_session",
      "func:main",
      "func:usage_string",
      "func:visit_Name"
    ],
    "old_files": [
      "__main__.py_o3_mini_9161fe52.py"
    ],
    "new_files": [
      "__main___793293.py"
    ]
  },
  {
    "file_signature": [
      "class:AJAXHandler",
      "class:BufferingHandler",
      "class:MemoryHandler",
      "class:QueueHandler",
      "func:__init__",
      "func:ajaxCallback",
      "func:close",
      "func:emit",
      "func:enqueue",
      "func:flush",
      "func:mapLogRecord",
      "func:prepare",
      "func:repl",
      "func:setTarget",
      "func:shouldFlush",
      "func:urlencode"
    ],
    "old_files": [
      "handlers.py_o1_mini_21ef1750.py"
    ],
    "new_files": [
      "handlers_facbc6.py"
    ]
  },
  {
    "file_signature": [
      "class:TestPipelineGenLegacy",
      "class:TestPipelineGenV2",
      "func:generate_template",
      "func:pipeline_gen",
      "func:pipeline_params",
      "func:setup_method",
      "func:test_app_name_in_param_default",
      "func:test_build_extractor",
      "func:test_can_add_github_as_source_stage",
      "func:test_can_create_buildspec_v2",
      "func:test_can_extract_python_version",
      "func:test_can_generate_github_source",
      "func:test_can_provide_codebuild_image",
      "func:test_can_validate_python_version",
      "func:test_codebuild_resource",
      "func:test_codepipeline_resource",
      "func:test_default_version_range_locks_minor_version",
      "func:test_github_source_uses_secretsmanager_in_v2",
      "func:test_install_requirements_in_buildspec",
      "func:test_invalid_python_throws_error",
      "func:test_new_default_codebuild_image",
      "func:test_no_source_resource_when_using_github",
      "func:test_nonsense_py_version_throws_error",
      "func:test_python_36_in_param_default",
      "func:test_python_version_in_param_default",
      "func:test_source_repo_resource",
      "func:test_uses_v2_codebuild_spec",
      "func:test_validate_python_versions"
    ],
    "old_files": [
      "test_pipeline.py_o1_mini_2e127b37.py"
    ],
    "new_files": [
      "test_pipeline_0fd84d.py"
    ]
  },
  {
    "file_signature": [
      "func:create_signed_exit",
      "func:exit_validators",
      "func:get_exited_validators",
      "func:get_unslashed_exited_validators",
      "func:prepare_signed_exits",
      "func:run_voluntary_exit_processing",
      "func:sign_voluntary_exit"
    ],
    "old_files": [
      "voluntary_exits.py_o1_mini_0e4efd57.py"
    ],
    "new_files": [
      "voluntary_exits_96290c.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseFavoriteFilter",
      "class:BaseSupersetApi",
      "class:BaseSupersetApiMixin",
      "class:BaseSupersetModelRestApi",
      "class:DistincResponseSchema",
      "class:DistinctResultResponseSchema",
      "class:RelatedFieldFilter",
      "class:RelatedResponseSchema",
      "class:RelatedResultResponseSchema",
      "func:__init__",
      "func:_add_extra_ids_to_result",
      "func:_get_distinct_filter",
      "func:_get_extra_field_for_model",
      "func:_get_related_filter",
      "func:_get_result_from_rows",
      "func:_get_text_for_model",
      "func:_init_properties",
      "func:apply",
      "func:decorate",
      "func:delete_headless",
      "func:distinct",
      "func:get_headless",
      "func:get_list_headless",
      "func:incr_stats",
      "func:info_headless",
      "func:post_headless",
      "func:put_headless",
      "func:related",
      "func:requires_form_data",
      "func:requires_json",
      "func:send_stats_metrics",
      "func:statsd_metrics",
      "func:timing_stats",
      "func:validate_feature_flags",
      "func:wrapper",
      "func:wraps"
    ],
    "old_files": [
      "base_api.py_o1_mini_025b2fa5.py"
    ],
    "new_files": [
      "base_api_2a8768.py"
    ]
  },
  {
    "file_signature": [
      "class:TestCode",
      "class:TestSeededCode",
      "func:c1",
      "func:c2",
      "func:code",
      "func:test_ean",
      "func:test_ean_non_enum",
      "func:test_imei",
      "func:test_isbn",
      "func:test_isbn_non_enum",
      "func:test_issn",
      "func:test_locale_code",
      "func:test_pin",
      "func:test_str"
    ],
    "old_files": [
      "test_code.py_o1_mini_2489a7f4.py"
    ],
    "new_files": [
      "test_code_d994fc.py"
    ]
  },
  {
    "file_signature": [
      "class:B",
      "class:EnvCase",
      "class:OtherSchedulingStrategy",
      "class:test_BootStrategy",
      "class:test_settings",
      "func:App",
      "func:_dummy_partitioner",
      "func:assert_config_equivalent",
      "func:assert_expected",
      "func:test_app_config",
      "func:test_broker_as_URL",
      "func:test_broker_with_no_scheme_set",
      "func:test_cache_as_URL",
      "func:test_compat_client_id",
      "func:test_compat_commit_interval",
      "func:test_compat_create_reply_topic",
      "func:test_compat_default_partitions",
      "func:test_compat_num_standby_replicas",
      "func:test_compat_replication_factor",
      "func:test_compat_stream_ack_cancelled_tasks",
      "func:test_compat_stream_ack_exceptions",
      "func:test_compat_url",
      "func:test_consumer_api_version__defaults_to_broker",
      "func:test_custom_host_port_to_canonical",
      "func:test_datadir_as_Path",
      "func:test_defaults",
      "func:test_disable_kafka",
      "func:test_disable_kafka_consumer",
      "func:test_env",
      "func:test_env_with_prefix",
      "func:test_id_no_version",
      "func:test_init",
      "func:test_kafka_consumer",
      "func:test_kafka_producer",
      "func:test_producer_api_version__defaults_to_broker",
      "func:test_producer_linger_ms__compat",
      "func:test_reply_prefix_unique",
      "func:test_sensors",
      "func:test_store_as_URL",
      "func:test_tabledir_is_relative_to_path",
      "func:test_version_cannot_be_zero",
      "func:test_warns_when_key_already_configured",
      "func:test_web_as_URL",
      "func:test_web_server"
    ],
    "old_files": [
      "test_app.py_o3_mini_7045e04c.py"
    ],
    "new_files": [
      "test_app_e3d659.py"
    ]
  },
  {
    "file_signature": [
      "class:KedroSession",
      "class:KedroSessionError",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_describe_git",
      "func:_get_config_loader",
      "func:_init_store",
      "func:_jsonify_cli_context",
      "func:_log_exception",
      "func:_logger",
      "func:close",
      "func:create",
      "func:load_context",
      "func:run",
      "func:store"
    ],
    "old_files": [
      "session.py_o3_mini_ce61005a.py"
    ],
    "new_files": [
      "session_127286.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPStreamClosedError",
      "class:HTTPTimeoutError",
      "class:SimpleAsyncHTTPClient",
      "class:_HTTPConnection",
      "func:__init__",
      "func:__str__",
      "func:_connection_class",
      "func:_create_connection",
      "func:_get_ssl_options",
      "func:_handle_exception",
      "func:_handle_request",
      "func:_on_end_request",
      "func:_on_timeout",
      "func:_process_queue",
      "func:_release",
      "func:_release_fetch",
      "func:_remove_timeout",
      "func:_run_callback",
      "func:_should_follow_redirect",
      "func:close",
      "func:data_received",
      "func:fetch_impl",
      "func:finish",
      "func:initialize",
      "func:on_connection_close"
    ],
    "old_files": [
      "simple_httpclient.py_o1_mini_bded0281.py"
    ],
    "new_files": [
      "simple_httpclient_5928fa.py"
    ]
  },
  {
    "file_signature": [
      "class:T5",
      "class:T5Block",
      "class:T5BlockOutput",
      "class:T5DecoderStack",
      "class:T5DenseGatedGeluDense",
      "class:T5DenseReluDense",
      "class:T5EncoderStack",
      "class:T5FeedForwardProjection",
      "class:T5LayerCrossAttention",
      "class:T5LayerCrossAttentionOutput",
      "class:T5LayerFF",
      "class:T5LayerNorm",
      "class:T5LayerSelfAttention",
      "class:T5LayerSelfAttentionOutput",
      "class:T5Output",
      "class:T5Stack",
      "class:T5StackOutput",
      "func:__init__",
      "func:_decoder_cache_to_dict",
      "func:_dict_to_decoder_cache",
      "func:_from_config",
      "func:_get_lm_logits",
      "func:_post_load_state_dict",
      "func:_shift_right",
      "func:basic_decoder",
      "func:basic_encoder",
      "func:forward",
      "func:get_head_mask",
      "func:hidden_size",
      "func:num_blocks",
      "func:resize_token_embeddings",
      "func:take_search_step"
    ],
    "old_files": [
      "t5.py_o3_mini_d3f65209.py"
    ],
    "new_files": [
      "t5_f23eca.py"
    ]
  },
  {
    "file_signature": [
      "class:Worker",
      "func:__init__",
      "func:_disable_spinner_if_level_below_WARN",
      "func:_flag_as_shutdown_by_signal",
      "func:_iter_consecutive_numbers",
      "func:_on_shutdown_immediately",
      "func:_on_sigint",
      "func:_on_sigterm",
      "func:_on_startup_end_spinner",
      "func:_partition_set_logtable",
      "func:_proc_ident",
      "func:_proc_web_ident",
      "func:_repr_partition_set",
      "func:_setproctitle",
      "func:_setup_spinner_handler",
      "func:autodiscover",
      "func:change_workdir",
      "func:format_log_arguments",
      "func:on_init_dependencies",
      "func:on_setup_root_logger",
      "func:on_worker_shutdown",
      "func:setproctitle"
    ],
    "old_files": [
      "worker.py_o3_mini_28c15399.py"
    ],
    "new_files": [
      "worker_083662.py"
    ]
  },
  {
    "file_signature": [
      "class:BondEntity",
      "func:__init__",
      "func:_apply_state",
      "func:_async_bpup_callback",
      "func:_async_schedule_bpup_alive_or_poll",
      "func:_async_state_callback",
      "func:_async_update_if_bpup_not_alive",
      "func:device_info"
    ],
    "old_files": [
      "entity.py_o1_mini_2738fb31.py"
    ],
    "new_files": [
      "entity_f58cea.py"
    ]
  },
  {
    "file_signature": [
      "func:test__analyze_ticker_internal_skip_analyze",
      "func:test_advise_all_indicators",
      "func:test_advise_all_indicators_copy",
      "func:test_analyze_pair_empty",
      "func:test_analyze_ticker_default",
      "func:test_assert_df",
      "func:test_assert_df_raise",
      "func:test_auto_hyperopt_interface",
      "func:test_auto_hyperopt_interface_loadparams",
      "func:test_custom_exit",
      "func:test_freqai_not_initialized",
      "func:test_ft_stoploss_reached",
      "func:test_get_signal_empty",
      "func:test_get_signal_exception_valueerror",
      "func:test_get_signal_no_sell_column",
      "func:test_get_signal_old_dataframe",
      "func:test_hyperopt_parameters",
      "func:test_ignore_expired_candle",
      "func:test_is_informative_pairs_callback",
      "func:test_is_pair_locked",
      "func:test_leverage_callback",
      "func:test_min_roi_reached",
      "func:test_min_roi_reached2",
      "func:test_min_roi_reached3",
      "func:test_pandas_warning_direct",
      "func:test_pandas_warning_through_analyze_pair",
      "func:test_returns_latest_signal",
      "func:test_should_sell"
    ],
    "old_files": [
      "test_interface.py_o3_mini_c697fae0.py"
    ],
    "new_files": [
      "test_interface_94cb57.py"
    ]
  },
  {
    "file_signature": [
      "func:billing_page",
      "func:remote_realm_billing_page",
      "func:remote_server_billing_page",
      "func:remote_server_deactivate_page",
      "func:update_plan",
      "func:update_plan_for_remote_realm",
      "func:update_plan_for_remote_server"
    ],
    "old_files": [
      "billing_page.py_o1_mini_1f301ace.py"
    ],
    "new_files": [
      "billing_page_c98d2b.py"
    ]
  },
  {
    "file_signature": [
      "class:DatetimeIndex",
      "func:__getattr__",
      "func:__new__",
      "func:ceil",
      "func:day",
      "func:day_name",
      "func:day_of_week",
      "func:day_of_year",
      "func:dayofweek",
      "func:dayofyear",
      "func:days_in_month",
      "func:daysinmonth",
      "func:disallow_nanoseconds",
      "func:floor",
      "func:hour",
      "func:indexer_at_time",
      "func:indexer_between_time",
      "func:is_leap_year",
      "func:is_month_end",
      "func:is_month_start",
      "func:is_quarter_end",
      "func:is_quarter_start",
      "func:is_year_end",
      "func:is_year_start",
      "func:microsecond",
      "func:minute",
      "func:month",
      "func:month_name",
      "func:normalize",
      "func:pandas_at_time",
      "func:pandas_between_time",
      "func:quarter",
      "func:round",
      "func:second",
      "func:strftime",
      "func:week",
      "func:weekday",
      "func:weekofyear",
      "func:year"
    ],
    "old_files": [
      "datetimes.py_o3_mini_289303b4.py"
    ],
    "new_files": [
      "datetimes_c4b343.py"
    ]
  },
  {
    "file_signature": [
      "class:ModelConfigData",
      "class:PydanticModelClassVar",
      "class:PydanticModelField",
      "class:PydanticModelTransformer",
      "class:PydanticPlugin",
      "class:PydanticPluginConfig",
      "func:__init__",
      "func:_get_assignment_statements_from_block",
      "func:_get_assignment_statements_from_if_statement",
      "func:_infer_dataclass_attr_init_type",
      "func:_pydantic_model_class_maker_callback",
      "func:_pydantic_model_metaclass_marker_callback",
      "func:add_initializer",
      "func:add_method",
      "func:add_model_construct_method",
      "func:adjust_decorator_signatures",
      "func:collect_config",
      "func:collect_field_or_class_var_from_stmt",
      "func:collect_fields_and_class_vars",
      "func:deserialize",
      "func:error_extra_fields_on_root_model",
      "func:error_from_attributes",
      "func:error_invalid_config_value",
      "func:error_required_dynamic_aliases",
      "func:error_unexpected_behavior",
      "func:error_untyped_fields",
      "func:expand_type",
      "func:expand_typevar_from_subtype",
      "func:from_attributes_callback",
      "func:get_alias_info",
      "func:get_base_class_hook",
      "func:get_config_update",
      "func:get_field_arguments",
      "func:get_has_default",
      "func:get_metaclass_hook",
      "func:get_method_hook",
      "func:get_strict",
      "func:get_values_dict",
      "func:is_dynamic_alias_present",
      "func:is_field_frozen",
      "func:is_root_model",
      "func:parse_toml",
      "func:plugin",
      "func:report_config_data",
      "func:serialize",
      "func:set_frozen",
      "func:setdefault",
      "func:should_init_forbid_extra",
      "func:to_argument",
      "func:to_data",
      "func:to_var",
      "func:transform",
      "func:update"
    ],
    "old_files": [
      "mypy.py_o3_mini_6c8d5216.py"
    ],
    "new_files": [
      "mypy_a965ef.py"
    ]
  },
  {
    "file_signature": [
      "class:EventIssueRegistryUpdatedData",
      "class:IssueEntry",
      "class:IssueRegistry",
      "class:IssueRegistryStore",
      "class:IssueSeverity",
      "func:__init__",
      "func:_data_to_save",
      "func:async_create_issue",
      "func:async_delete",
      "func:async_delete_issue",
      "func:async_get",
      "func:async_get_issue",
      "func:async_get_or_create",
      "func:async_ignore",
      "func:async_ignore_issue",
      "func:create_issue",
      "func:delete_issue",
      "func:make_read_only",
      "func:to_json"
    ],
    "old_files": [
      "issue_registry.py_o3_mini_0619e3d4.py"
    ],
    "new_files": [
      "issue_registry_f55ae7.py"
    ]
  },
  {
    "file_signature": [
      "class:QueryCacheManager",
      "func:__init__",
      "func:delete",
      "func:get",
      "func:has",
      "func:set",
      "func:set_query_result"
    ],
    "old_files": [
      "query_cache_manager.py_o3_mini_92c9b95d.py"
    ],
    "new_files": [
      "query_cache_manager_f69be4.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_marker_compat",
      "func:andrews_curves",
      "func:autocorrelation_plot",
      "func:bootstrap_plot",
      "func:f",
      "func:function",
      "func:lag_plot",
      "func:normalize",
      "func:parallel_coordinates",
      "func:r",
      "func:radviz",
      "func:scatter_matrix",
      "func:unpack_single_str_list"
    ],
    "old_files": [
      "misc.py_o3_mini_3b346c4e.py"
    ],
    "new_files": [
      "misc_23de87.py"
    ]
  },
  {
    "file_signature": [
      "func:cancel_github_workflows",
      "func:cancel_run",
      "func:get_pull_request",
      "func:get_runs",
      "func:list_runs",
      "func:print_commit",
      "func:request"
    ],
    "old_files": [
      "cancel_github_workflows.py_o1_mini_775bcb94.py"
    ],
    "new_files": [
      "cancel_github_workflows_0b6cfa.py"
    ]
  },
  {
    "file_signature": [
      "func:build_reactions",
      "func:check_user_in_team",
      "func:convert_channel_data",
      "func:convert_direct_message_group_data",
      "func:convert_user_data",
      "func:create_username_to_user_mapping",
      "func:do_convert_data",
      "func:fix_mentions",
      "func:get_full_name",
      "func:get_invite_only_value_from_channel_type",
      "func:get_mentioned_user_ids",
      "func:get_recipient_id_from_channel_name",
      "func:get_recipient_id_from_direct_message_group_members",
      "func:get_recipient_id_from_username",
      "func:initialize_stream_membership_dicts",
      "func:is_team_admin",
      "func:is_team_guest",
      "func:label_mirror_dummy_users",
      "func:make_realm",
      "func:mattermost_data_file_to_dict",
      "func:message_to_dict",
      "func:process",
      "func:process_batch",
      "func:process_message_attachments",
      "func:process_posts",
      "func:process_raw_message_batch",
      "func:process_user",
      "func:reset_mirror_dummy_users",
      "func:write_emoticon_data",
      "func:write_message_data"
    ],
    "old_files": [
      "mattermost.py_o1_mini_6dd6ba56.py"
    ],
    "new_files": [
      "mattermost_5a1f15.py"
    ]
  },
  {
    "file_signature": [
      "class:ISYAuxControlIndexSelectEntity",
      "class:ISYBacklightSelectEntity",
      "class:ISYRampRateSelectEntity",
      "func:__init__",
      "func:async_on_memory_write",
      "func:current_option",
      "func:time_string"
    ],
    "old_files": [
      "select.py_o1_mini_1d2f97a4.py"
    ],
    "new_files": [
      "select_d2495d.py"
    ]
  },
  {
    "file_signature": [
      "class:LiveCheck",
      "class:LiveCheckSensor",
      "func:__init__",
      "func:_apply_monkeypatches",
      "func:_can_resolve",
      "func:_connect_signals",
      "func:_contribute_to_app",
      "func:_extract_signals",
      "func:_inner",
      "func:_install_bus_agent",
      "func:_install_test_execution_agent",
      "func:_prepare_case_name",
      "func:add_case",
      "func:bus",
      "func:case",
      "func:current_test",
      "func:for_app",
      "func:on_produce_attach_test_headers",
      "func:on_stream_event_in",
      "func:on_stream_event_out",
      "func:pending_tests",
      "func:reports"
    ],
    "old_files": [
      "app.py_o3_mini_4fbf6d96.py"
    ],
    "new_files": [
      "app_986ad6.py"
    ]
  },
  {
    "file_signature": [
      "class:GatedCnnEncoder",
      "class:ResidualBlock",
      "func:__init__",
      "func:forward",
      "func:get_input_dim",
      "func:get_output_dim",
      "func:is_bidirectional"
    ],
    "old_files": [
      "gated_cnn_encoder.py_o1_mini_3d4edbef.py"
    ],
    "new_files": [
      "gated_cnn_encoder_38b825.py"
    ]
  },
  {
    "file_signature": [
      "class:HpIloData",
      "class:HpIloSensor",
      "func:__init__",
      "func:extra_state_attributes",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_o1_mini_9cbe391f.py"
    ],
    "new_files": [
      "sensor_a7ec9e.py"
    ]
  },
  {
    "file_signature": [
      "class:MultiProcessDataLoader",
      "class:WorkerError",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_batch_worker",
      "func:_gather_instances",
      "func:_index_instance",
      "func:_instance_worker",
      "func:_instances_to_batches",
      "func:_iter_batches",
      "func:_join_workers",
      "func:_maybe_tqdm",
      "func:_safe_queue_put",
      "func:_start_batch_workers",
      "func:_start_instance_workers",
      "func:index_with",
      "func:iter_instances",
      "func:set_target_device"
    ],
    "old_files": [
      "multiprocess_data_loader.py_o3_mini_59f32091.py"
    ],
    "new_files": [
      "multiprocess_data_loader_8b38d9.py"
    ]
  },
  {
    "file_signature": [
      "class:TimedeltaIndex",
      "func:__new__",
      "func:_engine_type",
      "func:_is_comparable_dtype",
      "func:_parse_with_reso",
      "func:_parsed_string_to_bounds",
      "func:_resolution_obj",
      "func:get_loc",
      "func:inferred_type",
      "func:timedelta_range"
    ],
    "old_files": [
      "timedeltas.py_o1_mini_4ca19268.py"
    ],
    "new_files": [
      "timedeltas_44fa81.py"
    ]
  },
  {
    "file_signature": [
      "class:TestArgmaxArgmin",
      "class:TestMinMax",
      "class:TestReductions",
      "func:test_all",
      "func:test_any",
      "func:test_argmax_argmin",
      "func:test_bool_sum_min_count",
      "func:test_empty_array",
      "func:test_fill_value",
      "func:test_mean",
      "func:test_na_value_if_no_valid_values",
      "func:test_nan_fill_value",
      "func:test_numpy_all",
      "func:test_numpy_any",
      "func:test_numpy_mean",
      "func:test_numpy_sum",
      "func:test_only_fill_value",
      "func:test_sum",
      "func:test_sum_min_count"
    ],
    "old_files": [
      "test_reductions.py_o1_mini_d69cbad3.py"
    ],
    "new_files": [
      "test_reductions_ebf449.py"
    ]
  },
  {
    "file_signature": [
      "class:AirzoneBaseSelect",
      "class:AirzoneSelectDescription",
      "class:AirzoneZoneSelect",
      "func:__init__",
      "func:_async_entity_listener",
      "func:_async_update_attrs",
      "func:_get_current_option",
      "func:_handle_coordinator_update",
      "func:main_zone_options"
    ],
    "old_files": [
      "select.py_o1_mini_167ca258.py"
    ],
    "new_files": [
      "select_ce6a0c.py"
    ]
  },
  {
    "file_signature": [
      "class:EntityFilter",
      "func:__call__",
      "func:__init__",
      "func:_convert_globs_to_pattern",
      "func:_generate_filter_from_sets_and_pattern_lists",
      "func:convert_filter",
      "func:convert_include_exclude_filter",
      "func:entity_filter_4a",
      "func:entity_filter_4b",
      "func:entity_included",
      "func:entity_not_excluded",
      "func:explicitly_excluded",
      "func:explicitly_included",
      "func:generate_filter",
      "func:get_filter"
    ],
    "old_files": [
      "entityfilter.py_o1_mini_351ebdc4.py"
    ],
    "new_files": [
      "entityfilter_421d82.py"
    ]
  },
  {
    "file_signature": [
      "class:Importer",
      "class:ModuleCache",
      "func:__init__",
      "func:_add_error",
      "func:_get_module_names",
      "func:_level_to_base_import_path",
      "func:_load_builtin_module",
      "func:_load_python_module",
      "func:_prepare_infer_import",
      "func:_str_import_path",
      "func:_sys_path_with_modifications",
      "func:add",
      "func:completion_names",
      "func:follow",
      "func:follow_error_node_imports_if_possible",
      "func:get",
      "func:goto_import",
      "func:import_module",
      "func:import_module_by_names",
      "func:infer_import",
      "func:iter_module_names",
      "func:load_module_from_path",
      "func:load_namespace_from_path"
    ],
    "old_files": [
      "imports.py_o1_mini_95ae2396.py"
    ],
    "new_files": [
      "imports_c4205d.py"
    ]
  },
  {
    "file_signature": [
      "func:build_custom_emoji",
      "func:build_reactions",
      "func:categorize_channels_and_map_with_id",
      "func:convert_channel_data",
      "func:convert_direct_message_group_data",
      "func:convert_stream_subscription_data",
      "func:do_convert_data",
      "func:fix_mentions",
      "func:get_stream_name",
      "func:get_topic_name",
      "func:list_reactions",
      "func:make_realm",
      "func:map_receiver_id_to_recipient_id",
      "func:map_upload_id_to_upload_data",
      "func:map_user_id_to_user",
      "func:map_username_to_user_id",
      "func:message_to_dict",
      "func:process_batch",
      "func:process_message_attachment",
      "func:process_messages",
      "func:process_raw_message_batch",
      "func:process_users",
      "func:rocketchat_data_to_dict",
      "func:separate_channel_private_and_livechat_messages",
      "func:truncate_name"
    ],
    "old_files": [
      "rocketchat.py_o3_mini_a96c37a4.py"
    ],
    "new_files": [
      "rocketchat_52a9b8.py"
    ]
  },
  {
    "file_signature": [
      "class:NoCiphersAvailableBugInSSlyze",
      "class:SslConnection",
      "class:_ConnectionToHttpProxyFailed",
      "class:_ConnectionToHttpProxyTimedOut",
      "class:_HttpProxyRejectedConnection",
      "func:__init__",
      "func:_do_pre_handshake",
      "func:_open_socket",
      "func:_open_socket_for_connection_via_http_proxy",
      "func:_open_socket_for_direct_connection",
      "func:close",
      "func:connect"
    ],
    "old_files": [
      "tls_connection.py_o1_mini_b52e6e1b.py"
    ],
    "new_files": [
      "tls_connection_607baf.py"
    ]
  },
  {
    "file_signature": [
      "func:_create_installed_app",
      "func:_create_location",
      "func:_factory",
      "func:app_oauth_client_fixture",
      "func:app_settings_fixture",
      "func:config_entry_fixture",
      "func:config_file_fixture",
      "func:device_factory_fixture",
      "func:device_fixture",
      "func:event_factory_fixture",
      "func:event_request_factory_fixture",
      "func:installed_app_fixture",
      "func:installed_apps_fixture",
      "func:location_fixture",
      "func:locations_fixture",
      "func:scene_factory_fixture",
      "func:scene_fixture",
      "func:smartthings_mock_fixture",
      "func:subscription_factory_fixture"
    ],
    "old_files": [
      "conftest.py_o1_mini_63dfd35f.py"
    ],
    "new_files": [
      "conftest_823740.py"
    ]
  },
  {
    "file_signature": [
      "class:DynamicFeePayloadDecoder",
      "class:DynamicFeeTransaction",
      "class:LondonLegacyTransaction",
      "class:LondonTransactionBuilder",
      "class:LondonTypedTransaction",
      "class:LondonUnsignedLegacyTransaction",
      "class:UnsignedDynamicFeeTransaction",
      "func:_type_byte",
      "func:as_signed_transaction",
      "func:blob_versioned_hashes",
      "func:check_signature_validity",
      "func:decode",
      "func:encode",
      "func:gas_price",
      "func:gas_used_by",
      "func:get_intrinsic_gas",
      "func:get_message_for_signing",
      "func:get_sender",
      "func:hash",
      "func:intrinsic_gas",
      "func:make_receipt",
      "func:max_fee_per_blob_gas",
      "func:new_dynamic_fee_transaction",
      "func:new_unsigned_dynamic_fee_transaction",
      "func:validate"
    ],
    "old_files": [
      "transactions.py_o3_mini_125a38fe.py"
    ],
    "new_files": [
      "transactions_8ddaaa.py"
    ]
  },
  {
    "file_signature": [
      "class:HomeKit",
      "class:HomeKitPairingQRView",
      "func:__init__",
      "func:_async_all_homekit_instances",
      "func:_async_configure_linked_sensors",
      "func:_async_create_single_accessory",
      "func:_async_get_imported_entries_indices",
      "func:_async_import_options_from_data_if_missing",
      "func:_async_purge_old_bridges",
      "func:_async_register_bridge",
      "func:_async_register_events_and_services",
      "func:_async_remove_accessories_by_entity_id",
      "func:_async_show_setup_message",
      "func:_async_shutdown_accessory",
      "func:_async_update_accessories_hash",
      "func:_async_update_config_entry_from_yaml",
      "func:_fill_config_from_device_registry_entry",
      "func:_has_all_unique_names_and_ports",
      "func:_would_exceed_max_devices",
      "func:add_bridge_accessory",
      "func:async_remove_bridge_accessory",
      "func:async_unpair",
      "func:setup"
    ],
    "old_files": [
      "__init__.py_o3_mini_ef619f13.py"
    ],
    "new_files": [
      "__init___b0eb15.py"
    ]
  },
  {
    "file_signature": [
      "class:EventManager",
      "class:PullPointManager",
      "class:WebHookManager",
      "func:__init__",
      "func:_async_background_pull_messages_or_reschedule",
      "func:_async_register_webhook",
      "func:_async_unregister_webhook",
      "func:async_add_listener",
      "func:async_callback_listeners",
      "func:async_cancel_pull_messages",
      "func:async_mark_events_stale",
      "func:async_pause",
      "func:async_remove_listener",
      "func:async_resume",
      "func:async_schedule_pull_messages",
      "func:async_webhook_failed",
      "func:async_webhook_working",
      "func:get_platform",
      "func:get_uid",
      "func:get_uids_by_platform",
      "func:remove_listener",
      "func:started"
    ],
    "old_files": [
      "event.py_o1_mini_d71a1ed0.py"
    ],
    "new_files": [
      "event_0577a3.py"
    ]
  },
  {
    "file_signature": [
      "class:KoalasUsageLogger",
      "func:__init__",
      "func:_format_signature",
      "func:get_logger",
      "func:log_failure",
      "func:log_missing",
      "func:log_success"
    ],
    "old_files": [
      "usage_logger.py_o1_mini_ca12d5e0.py"
    ],
    "new_files": [
      "usage_logger_0d0a99.py"
    ]
  },
  {
    "file_signature": [
      "class:AioSqliteQueryComponents",
      "class:AsyncPostgresQueryComponents",
      "class:BaseQueryComponents",
      "class:FlowRunGraphV2Node",
      "class:FlowRunNotificationsFromQueue",
      "class:UUIDList",
      "func:_build_flow_run_graph_v2_query",
      "func:_flow_run_graph_v2_query",
      "func:_get_scheduled_flow_runs_from_work_pool_template_path",
      "func:_get_scheduled_flow_runs_join",
      "func:as_array",
      "func:build_json_object",
      "func:cast_to_json",
      "func:clear_configuration_value_cache_for_key",
      "func:get_scheduled_flow_runs_from_work_queues",
      "func:insert",
      "func:json_arr_agg",
      "func:make_timestamp_intervals",
      "func:process_result_value",
      "func:set_state_id_on_inserted_flow_runs_statement",
      "func:unique_key",
      "func:uses_json_strings"
    ],
    "old_files": [
      "query_components.py_o1_mini_366ac32e.py"
    ],
    "new_files": [
      "query_components_beb202.py"
    ]
  },
  {
    "file_signature": [
      "class:TestRank",
      "func:_check2d",
      "func:test_df_series_inf_nan_consistency",
      "func:test_pct_max_many_rows",
      "func:test_rank",
      "func:test_rank2",
      "func:test_rank_2d_tie_methods",
      "func:test_rank_axis",
      "func:test_rank_both_inf",
      "func:test_rank_descending",
      "func:test_rank_does_not_mutate",
      "func:test_rank_inf_and_nan",
      "func:test_rank_inf_nans_na_option",
      "func:test_rank_methods_frame",
      "func:test_rank_mixed_axis_zero",
      "func:test_rank_mixed_frame",
      "func:test_rank_na_option",
      "func:test_rank_object_first",
      "func:test_rank_pct_true",
      "func:test_rank_string_dtype"
    ],
    "old_files": [
      "test_rank.py_o1_mini_20a76f80.py"
    ],
    "new_files": [
      "test_rank_19ec93.py"
    ]
  },
  {
    "file_signature": [
      "class:TestAsArray",
      "class:TestToIterable",
      "func:test_array",
      "func:test_array_multiindex_raises",
      "func:test_asarray_object_dt64",
      "func:test_asarray_tz_aware",
      "func:test_asarray_tz_naive",
      "func:test_categorial_datetimelike",
      "func:test_iter_box_dt64",
      "func:test_iter_box_dt64tz",
      "func:test_iter_box_period",
      "func:test_iter_box_timedelta64",
      "func:test_iterable",
      "func:test_iterable_items",
      "func:test_iterable_map",
      "func:test_iterable_object_and_category",
      "func:test_numpy_array",
      "func:test_numpy_array_all_dtypes",
      "func:test_to_numpy",
      "func:test_to_numpy_copy",
      "func:test_to_numpy_dataframe_na_value",
      "func:test_to_numpy_dataframe_single_block",
      "func:test_to_numpy_dataframe_single_block_no_mutate",
      "func:test_to_numpy_dtype",
      "func:test_to_numpy_kwargs_raises",
      "func:test_to_numpy_multiindex_series_na_value",
      "func:test_to_numpy_na_value_numpy_dtype",
      "func:test_values_consistent"
    ],
    "old_files": [
      "test_conversion.py_o1_mini_43da3ab9.py"
    ],
    "new_files": [
      "test_conversion_928a39.py"
    ]
  },
  {
    "file_signature": [
      "class:EtherscanSensor",
      "func:__init__",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_o1_mini_58abeff6.py"
    ],
    "new_files": [
      "sensor_f62020.py"
    ]
  },
  {
    "file_signature": [
      "class:ArrowTemporalProperties",
      "class:CombinedDatetimelikeProperties",
      "class:DatetimeProperties",
      "class:PeriodProperties",
      "class:Properties",
      "class:TimedeltaProperties",
      "func:__init__",
      "func:__new__",
      "func:_delegate_method",
      "func:_delegate_property_get",
      "func:_delegate_property_set",
      "func:_get_values",
      "func:components",
      "func:freq",
      "func:isocalendar",
      "func:to_pydatetime",
      "func:to_pytimedelta"
    ],
    "old_files": [
      "accessors.py_o1_mini_836896e7.py"
    ],
    "new_files": [
      "accessors_5aa969.py"
    ]
  },
  {
    "file_signature": [
      "class:NswRuralFireServiceFeedEntityManager",
      "class:NswRuralFireServiceLocationEvent",
      "func:__init__",
      "func:_delete_callback",
      "func:_update_callback",
      "func:_update_from_feed",
      "func:extra_state_attributes",
      "func:get_entry",
      "func:icon"
    ],
    "old_files": [
      "geo_location.py_o1_mini_553a1686.py"
    ],
    "new_files": [
      "geo_location_c45ba4.py"
    ]
  },
  {
    "file_signature": [
      "class:BadNarrowOperatorError",
      "class:FetchedMessages",
      "class:InvalidOperatorCombinationError",
      "class:LimitedMessages",
      "class:NarrowBuilder",
      "class:NarrowParameter",
      "func:__init__",
      "func:_by_search_pgroonga",
      "func:_by_search_tsearch",
      "func:_get_direct_message_group_recipients",
      "func:_pg_re_escape",
      "func:add_narrow_conditions",
      "func:add_term",
      "func:by_channel",
      "func:by_channels",
      "func:by_dm",
      "func:by_dm_including",
      "func:by_group_pm_with",
      "func:by_has",
      "func:by_id",
      "func:by_in",
      "func:by_is",
      "func:by_near",
      "func:by_search",
      "func:by_sender",
      "func:by_topic",
      "func:can_narrow_define_conversation",
      "func:check_not_both_channel_and_dm_narrow",
      "func:clean_narrow_for_message_fetch",
      "func:convert_term",
      "func:exclude_muting_conditions",
      "func:fetch_messages",
      "func:find_first_unread_anchor",
      "func:get_base_query_for_search",
      "func:get_channel_from_narrow_access_unchecked",
      "func:is_spectator_compatible",
      "func:is_web_public_narrow",
      "func:limit_query_to_range",
      "func:msg_format",
      "func:ok_to_include_history",
      "func:parse_anchor_value",
      "func:post_process_limited_query",
      "func:ts_locs_array",
      "func:update_narrow_terms_containing_empty_topic_fallback_name",
      "func:update_narrow_terms_containing_with_operator",
      "func:validate_terms"
    ],
    "old_files": [
      "narrow.py_o1_mini_1f6de723.py"
    ],
    "new_files": [
      "narrow_5a6ea2.py"
    ]
  },
  {
    "file_signature": [
      "class:MockChainState",
      "class:MockChannelState",
      "class:MockEth",
      "class:MockJSONRPCClient",
      "class:MockPaymentChannel",
      "class:MockProxyManager",
      "class:MockRaidenService",
      "class:MockTokenNetwork",
      "class:MockTokenNetworkProxy",
      "class:MockTokenNetworkRegistry",
      "class:MockWeb3",
      "class:PFSMock",
      "func:__del__",
      "func:__init__",
      "func:_get_app_address_metadata",
      "func:add_apps",
      "func:add_notification",
      "func:balance",
      "func:can_query_state_for_block",
      "func:chainId",
      "func:detail_participants",
      "func:gas_price",
      "func:get_best_routes_pfs",
      "func:get_block",
      "func:get_pfs_info",
      "func:handle_and_track_state_changes",
      "func:handle_state_changes",
      "func:make_pfs_config",
      "func:make_raiden_service_mock",
      "func:mocked_failed_response",
      "func:mocked_json_response",
      "func:monitoring_service",
      "func:on_messages",
      "func:on_new_block",
      "func:one_to_n",
      "func:payment_channel",
      "func:query_address_metadata",
      "func:reset_routes",
      "func:secret_registry",
      "func:service_registry",
      "func:set_route",
      "func:sign",
      "func:stop",
      "func:token_network_registry",
      "func:update_info",
      "func:user_deposit"
    ],
    "old_files": [
      "mocks.py_o3_mini_852f4d73.py"
    ],
    "new_files": [
      "mocks_d2ab6d.py"
    ]
  },
  {
    "file_signature": [
      "class:FilteredStrategy",
      "class:MappedStrategy",
      "class:OneOfStrategy",
      "class:SampledFromStrategy",
      "class:SearchStrategy",
      "func:__bool__",
      "func:__init__",
      "func:__or__",
      "func:__repr__",
      "func:_collection_ish_functions",
      "func:_filter_for_filtered_draw",
      "func:_list_strategy_type",
      "func:_transform",
      "func:available",
      "func:branches",
      "func:calc_has_reusable_values",
      "func:calc_is_cacheable",
      "func:calc_is_empty",
      "func:calc_label",
      "func:check_strategy",
      "func:class_label",
      "func:condition",
      "func:do_draw",
      "func:do_filtered_draw",
      "func:do_validate",
      "func:element_strategies",
      "func:example",
      "func:example_generating_inner_function",
      "func:filter",
      "func:flatmap",
      "func:forced_value",
      "func:get_element",
      "func:has_reusable_values",
      "func:is_cacheable",
      "func:is_empty",
      "func:is_simple_data",
      "func:label",
      "func:map",
      "func:one_of",
      "func:recur",
      "func:recur2",
      "func:recur_inner",
      "func:recursive_property",
      "func:validate"
    ],
    "old_files": [
      "strategies.py_o1_mini_b0598ec2.py"
    ],
    "new_files": [
      "strategies_b10d9c.py"
    ]
  },
  {
    "file_signature": [
      "class:IFTTTAlarmPanel",
      "func:__init__",
      "func:_check_code",
      "func:alarm_arm_away",
      "func:alarm_arm_home",
      "func:alarm_arm_night",
      "func:alarm_disarm",
      "func:code_format",
      "func:push_alarm_state",
      "func:set_alarm_state",
      "func:setup_platform"
    ],
    "old_files": [
      "alarm_control_panel.py_o1_mini_074d971d.py"
    ],
    "new_files": [
      "alarm_control_panel_0476ed.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoRequestForm",
      "class:SalesRequestForm",
      "class:SupportRequestForm",
      "class:SupportSelectOption",
      "func:check_update_max_invites",
      "func:demo_request",
      "func:get_confirmations",
      "func:get_default_max_invites_for_plan_type",
      "func:get_plan_type_string",
      "func:get_realm_admin_emails_as_string",
      "func:get_realm_owner_emails_as_string",
      "func:get_realm_plan_type_options",
      "func:get_realm_plan_type_options_for_discount",
      "func:get_remote_plan_tier_options",
      "func:get_remote_realm_billing_user_emails_as_string",
      "func:get_remote_server_billing_user_emails_as_string",
      "func:get_remote_servers_for_support",
      "func:remote_servers_support",
      "func:sales_support_request",
      "func:shared_support_context",
      "func:support",
      "func:support_request"
    ],
    "old_files": [
      "support.py_o3_mini_13ee2db1.py"
    ],
    "new_files": [
      "support_f17c76.py"
    ]
  },
  {
    "file_signature": [
      "class:CustAckPlugin1",
      "class:CustActionPlugin1",
      "class:CustActionPlugin2",
      "class:CustActionPlugin3",
      "class:CustDeletePlugin1",
      "class:CustDeletePlugin2",
      "class:CustNotePlugin1",
      "class:CustPlugin1",
      "class:CustPlugin2",
      "class:CustPlugin3",
      "class:OldPlugin1",
      "class:PluginsTestCase",
      "class:Teapot",
      "func:delete",
      "func:post_action",
      "func:post_receive",
      "func:pre_receive",
      "func:setUp",
      "func:status_change",
      "func:take_action",
      "func:take_note",
      "func:tearDown",
      "func:test_add_and_remove_tags",
      "func:test_custom_ack",
      "func:test_delete",
      "func:test_im_a_teapot",
      "func:test_invalid_action",
      "func:test_status_update",
      "func:test_take_action",
      "func:test_take_note"
    ],
    "old_files": [
      "test_plugins.py_o1_mini_e2ab7a56.py"
    ],
    "new_files": [
      "test_plugins_493c2b.py"
    ]
  },
  {
    "file_signature": [
      "class:AioSqliteConfiguration",
      "class:AsyncPostgresConfiguration",
      "class:BaseDatabaseConfiguration",
      "class:ConnectionTracker",
      "func:__init__",
      "func:begin_sqlite_conn",
      "func:begin_sqlite_stmt",
      "func:begin_transaction",
      "func:clear",
      "func:is_inmemory",
      "func:on_close",
      "func:on_close_detached",
      "func:on_connect",
      "func:setup_sqlite",
      "func:track_pool",
      "func:unique_key"
    ],
    "old_files": [
      "configurations.py_o1_mini_daf9c686.py"
    ],
    "new_files": [
      "configurations_98b5ec.py"
    ]
  },
  {
    "file_signature": [
      "func:test_transition_with_attester_slashing_right_after_fork",
      "func:test_transition_with_attester_slashing_right_before_fork",
      "func:test_transition_with_deposit_right_after_fork",
      "func:test_transition_with_deposit_right_before_fork",
      "func:test_transition_with_proposer_slashing_right_after_fork",
      "func:test_transition_with_proposer_slashing_right_before_fork",
      "func:test_transition_with_voluntary_exit_right_after_fork",
      "func:test_transition_with_voluntary_exit_right_before_fork"
    ],
    "old_files": [
      "test_operations.py_o1_mini_b340ef92.py"
    ],
    "new_files": [
      "test_operations_088d14.py"
    ]
  },
  {
    "file_signature": [
      "class:EnvelopeMessage",
      "class:Lock",
      "class:LockExpired",
      "class:LockedTransfer",
      "class:LockedTransferBase",
      "class:RefundTransfer",
      "class:RevealSecret",
      "class:SecretRequest",
      "class:Unlock",
      "func:__post_init__",
      "func:_data_to_sign",
      "func:_pack_locked_transfer_data",
      "func:_packed_data",
      "func:as_bytes",
      "func:assert_envelope_values",
      "func:assert_transfer_values",
      "func:from_bytes",
      "func:from_event",
      "func:lockhash",
      "func:message_hash",
      "func:secrethash"
    ],
    "old_files": [
      "transfers.py_o1_mini_9cc081e0.py"
    ],
    "new_files": [
      "transfers_b8ecf0.py"
    ]
  },
  {
    "file_signature": [
      "class:EvolutionStrategy",
      "class:_EvolutionStrategy",
      "func:__init__",
      "func:_internal_ask_candidate",
      "func:_internal_tell_candidate",
      "func:_select"
    ],
    "old_files": [
      "es.py_o1_mini_3c66939c.py"
    ],
    "new_files": [
      "es_85f924.py"
    ]
  },
  {
    "file_signature": [
      "func:_async_discovered_device",
      "func:_get_manager",
      "func:async_address_present",
      "func:async_ble_device_from_address",
      "func:async_discovered_service_info",
      "func:async_get_advertisement_callback",
      "func:async_get_fallback_availability_interval",
      "func:async_get_learned_advertising_interval",
      "func:async_get_scanner",
      "func:async_last_service_info",
      "func:async_rediscover_address",
      "func:async_register_callback",
      "func:async_register_scanner",
      "func:async_remove_scanner",
      "func:async_scanner_by_source",
      "func:async_scanner_count",
      "func:async_scanner_devices_by_address",
      "func:async_set_fallback_availability_interval",
      "func:async_track_unavailable"
    ],
    "old_files": [
      "api.py_o1_mini_cfe233ea.py"
    ],
    "new_files": [
      "api_cbdcbd.py"
    ]
  },
  {
    "file_signature": [
      "func:add_new_user_history",
      "func:created_bot_event",
      "func:do_activate_mirror_dummy_user",
      "func:do_create_user",
      "func:do_reactivate_user",
      "func:notify_created_bot",
      "func:notify_created_user",
      "func:notify_new_user",
      "func:process_new_human_user",
      "func:send_group_direct_message_to_admins",
      "func:send_message_to_signup_notification_stream",
      "func:set_up_streams_and_groups_for_new_human_user",
      "func:stream_name"
    ],
    "old_files": [
      "create_user.py_o3_mini_46a62a4c.py"
    ],
    "new_files": [
      "create_user_36a545.py"
    ]
  },
  {
    "file_signature": [
      "class:ExecutionContext",
      "func:__init__",
      "func:base_fee_per_gas",
      "func:block_number",
      "func:chain_id",
      "func:coinbase",
      "func:difficulty",
      "func:excess_blob_gas",
      "func:gas_limit",
      "func:mix_hash",
      "func:prev_hashes",
      "func:timestamp"
    ],
    "old_files": [
      "execution_context.py_o3_mini_71a45ddd.py"
    ],
    "new_files": [
      "execution_context_61aa2e.py"
    ]
  },
  {
    "file_signature": [
      "class:DeprecatedField",
      "class:QueryObject",
      "func:__init__",
      "func:__repr__",
      "func:_init_series_columns",
      "func:_move_deprecated_extra_fields",
      "func:_rename_deprecated_fields",
      "func:_sanitize_filters",
      "func:_set_annotation_layers",
      "func:_set_is_timeseries",
      "func:_set_metrics",
      "func:_set_post_processing",
      "func:_validate_no_have_duplicate_labels",
      "func:_validate_there_are_no_missing_series",
      "func:cache_key",
      "func:column_names",
      "func:exec_post_processing",
      "func:is_str_or_adhoc",
      "func:metric_names",
      "func:to_dict",
      "func:validate"
    ],
    "old_files": [
      "query_object.py_o3_mini_3172d101.py"
    ],
    "new_files": [
      "query_object_6550f7.py"
    ]
  },
  {
    "file_signature": [
      "class:SupersetMetastoreCache",
      "func:__init__",
      "func:_get_expiry",
      "func:add",
      "func:delete",
      "func:factory",
      "func:get",
      "func:get_key",
      "func:has",
      "func:set"
    ],
    "old_files": [
      "metastore_cache.py_o1_mini_4531bf2e.py"
    ],
    "new_files": [
      "metastore_cache_b6b4a1.py"
    ]
  },
  {
    "file_signature": [
      "class:AirzoneAidooSensor",
      "class:AirzoneSensor",
      "class:AirzoneWebServerSensor",
      "class:AirzoneZoneSensor",
      "func:__init__",
      "func:_async_update_attrs",
      "func:_handle_coordinator_update",
      "func:available"
    ],
    "old_files": [
      "sensor.py_o1_mini_9758832d.py"
    ],
    "new_files": [
      "sensor_31ba0c.py"
    ]
  },
  {
    "file_signature": [
      "class:Embedding",
      "class:EmbeddingsFileURI",
      "class:EmbeddingsTextFile",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__next__",
      "func:_get_num_tokens_from_first_line",
      "func:_get_the_only_file_in_the_archive",
      "func:_open_inside_tar",
      "func:_open_inside_zip",
      "func:_read_embeddings_from_hdf5",
      "func:_read_embeddings_from_text_file",
      "func:_read_pretrained_embeddings_file",
      "func:close",
      "func:extend_vocab",
      "func:format_embeddings_file_uri",
      "func:forward",
      "func:get_output_dim",
      "func:parse_embeddings_file_uri",
      "func:read",
      "func:readline"
    ],
    "old_files": [
      "embedding.py_o3_mini_64e6a5c5.py"
    ],
    "new_files": [
      "embedding_8c6937.py"
    ]
  },
  {
    "file_signature": [
      "class:AttentionModule",
      "class:AttentionOutput",
      "class:SelfAttention",
      "class:T5Attention",
      "func:__init__",
      "func:_from_config",
      "func:_get_attention_probs",
      "func:_get_lengths",
      "func:_normalize",
      "func:_output_layer",
      "func:_position_bias",
      "func:_project",
      "func:_query_layer",
      "func:_relative_position_bucket",
      "func:_transpose_for_scores",
      "func:compute_bias",
      "func:forward"
    ],
    "old_files": [
      "attention_module.py_o3_mini_e99ef20b.py"
    ],
    "new_files": [
      "attention_module_7f6559.py"
    ]
  },
  {
    "file_signature": [
      "class:AddressType",
      "class:ChainChoiceType",
      "class:ConfigParser",
      "class:Context",
      "class:EnumChoiceType",
      "class:ExpandableFile",
      "class:ExpandablePath",
      "class:GasPriceChoiceType",
      "class:GroupableOption",
      "class:GroupableOptionCommand",
      "class:GroupableOptionCommandGroup",
      "class:HelpFormatter",
      "class:HypenTemplate",
      "class:LogLevelConfigType",
      "class:MatrixServerType",
      "class:Parser",
      "class:PathRelativePath",
      "class:SkipParsing",
      "func:__eq__",
      "func:__init__",
      "func:__lt__",
      "func:_process_parse_result",
      "func:command",
      "func:convert",
      "func:decorator",
      "func:default_priority",
      "func:expand_default",
      "func:fixed_gas_price_strategy",
      "func:format_options",
      "func:get_internal_name",
      "func:get_matrix_servers",
      "func:group",
      "func:invoke",
      "func:keyfunc",
      "func:option",
      "func:option_group",
      "func:parse",
      "func:register_param",
      "func:write_dl"
    ],
    "old_files": [
      "cli.py_o3_mini_72c847be.py"
    ],
    "new_files": [
      "cli_800977.py"
    ]
  },
  {
    "file_signature": [
      "func:compute_amount_to_withdraw",
      "func:run_withdrawal_request_processing",
      "func:test_activation_epoch_less_than_shard_committee_period",
      "func:test_basic_partial_withdrawal_request",
      "func:test_basic_partial_withdrawal_request_higher_excess_balance",
      "func:test_basic_partial_withdrawal_request_lower_than_excess_balance",
      "func:test_basic_withdrawal_request",
      "func:test_basic_withdrawal_request_with_compounding_credentials",
      "func:test_basic_withdrawal_request_with_first_validator",
      "func:test_basic_withdrawal_request_with_full_partial_withdrawal_queue",
      "func:test_full_exit_request_has_partial_withdrawal",
      "func:test_incorrect_inactive_validator",
      "func:test_incorrect_source_address",
      "func:test_incorrect_withdrawal_credential_prefix",
      "func:test_insufficient_balance",
      "func:test_insufficient_effective_balance",
      "func:test_no_compounding_credentials",
      "func:test_no_excess_balance",
      "func:test_on_withdrawal_request_initiated_exit_validator",
      "func:test_partial_withdrawal_activation_epoch_less_than_shard_committee_period",
      "func:test_partial_withdrawal_incorrect_source_address",
      "func:test_partial_withdrawal_incorrect_withdrawal_credential_prefix",
      "func:test_partial_withdrawal_on_exit_initiated_validator",
      "func:test_partial_withdrawal_queue_full",
      "func:test_partial_withdrawal_request_with_high_amount",
      "func:test_partial_withdrawal_request_with_high_balance",
      "func:test_partial_withdrawal_request_with_low_amount",
      "func:test_partial_withdrawal_request_with_pending_withdrawals",
      "func:test_partial_withdrawal_request_with_pending_withdrawals_and_high_amount",
      "func:test_pending_withdrawals_consume_all_excess_balance",
      "func:test_unknown_pubkey"
    ],
    "old_files": [
      "test_process_withdrawal_request.py_o1_mini_8cc09c9a.py"
    ],
    "new_files": [
      "test_process_withdrawal_request_9f973e.py"
    ]
  },
  {
    "file_signature": [
      "func:device_json",
      "func:firmware_json",
      "func:home_json",
      "func:mock_hunterdouglas_hub",
      "func:mock_setup_entry",
      "func:rooms_json",
      "func:scenes_json",
      "func:shades_json"
    ],
    "old_files": [
      "conftest.py_o1_mini_48227454.py"
    ],
    "new_files": [
      "conftest_ca8ed3.py"
    ]
  },
  {
    "file_signature": [
      "class:PathName",
      "func:_add_os_path_join",
      "func:_add_strings",
      "func:_get_string_additions",
      "func:check",
      "func:complete_file_name",
      "func:iterate_nodes"
    ],
    "old_files": [
      "file_name.py_o1_mini_3fa33654.py"
    ],
    "new_files": [
      "file_name_dac33e.py"
    ]
  },
  {
    "file_signature": [
      "class:Evaluator",
      "class:SimpleEvaluator",
      "func:__call__",
      "func:__init__",
      "func:_to_params"
    ],
    "old_files": [
      "evaluator.py_o1_mini_8288a291.py"
    ],
    "new_files": [
      "evaluator_beeb92.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseMergeExcludeColumns",
      "class:TestMergeExcludeColumns",
      "func:check_scenario_correctness",
      "func:get_test_fields",
      "func:models",
      "func:seeds",
      "func:test__merge_exclude_columns",
      "func:update_incremental_model"
    ],
    "old_files": [
      "test_incremental_merge_exclude_columns.py_o1_mini_28e2cf52.py"
    ],
    "new_files": [
      "test_incremental_merge_exclude_columns_c80032.py"
    ]
  },
  {
    "file_signature": [
      "class:TransformerModule",
      "func:_from_config",
      "func:_get_mapped_state_dict",
      "func:_get_mapping",
      "func:_get_pretrained_state_dict",
      "func:_get_relevant_submodule_state",
      "func:from_pretrained_module"
    ],
    "old_files": [
      "transformer_module.py_o3_mini_54125978.py"
    ],
    "new_files": [
      "transformer_module_941d3c.py"
    ]
  },
  {
    "file_signature": [
      "class:Any",
      "class:ArgumentParser",
      "class:CommandArgs",
      "class:CommandArgsError",
      "class:CommandArgsExit",
      "class:Error",
      "func:__init__",
      "func:__pragma__",
      "func:__str__",
      "func:create",
      "func:digestJavascript",
      "func:enhanceException",
      "func:error",
      "func:exit",
      "func:formatted",
      "func:log",
      "func:logAndExit",
      "func:parse",
      "func:passable",
      "func:set",
      "func:setProgram",
      "func:stripSingleLineComments",
      "func:tryRemove"
    ],
    "old_files": [
      "utils.py_o1_mini_312ee288.py"
    ],
    "new_files": [
      "utils_0e78a9.py"
    ]
  },
  {
    "file_signature": [
      "class:MultiTaskDataLoader",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_get_instances_for_epoch",
      "func:_make_data_loader",
      "func:index_with",
      "func:iter_instances",
      "func:maybe_shuffle_instances",
      "func:set_target_device"
    ],
    "old_files": [
      "multitask_data_loader.py_o3_mini_52d22210.py"
    ],
    "new_files": [
      "multitask_data_loader_4fc11f.py"
    ]
  },
  {
    "file_signature": [
      "class:AioHTTPTestCase",
      "class:BaseTestServer",
      "class:RawTestServer",
      "class:TestClient",
      "class:TestServer",
      "func:__init__",
      "func:_create_app_mock",
      "func:_create_transport",
      "func:app",
      "func:closed",
      "func:delete",
      "func:get",
      "func:get_dict",
      "func:get_extra_info",
      "func:get_port_socket",
      "func:get_unused_port_socket",
      "func:handler",
      "func:head",
      "func:host",
      "func:loop_context",
      "func:make_mocked_coro",
      "func:make_mocked_request",
      "func:make_url",
      "func:options",
      "func:patch",
      "func:port",
      "func:post",
      "func:put",
      "func:request",
      "func:scheme",
      "func:server",
      "func:session",
      "func:set_dict",
      "func:setup_test_loop",
      "func:started",
      "func:teardown_test_loop",
      "func:unused_port",
      "func:ws_connect"
    ],
    "old_files": [
      "test_utils.py_o3_mini_1803dff5.py"
    ],
    "new_files": [
      "test_utils_46addc.py"
    ]
  },
  {
    "file_signature": [
      "class:RedisMessagingSettings",
      "func:_running_loop",
      "func:async_redis_from_settings",
      "func:cached",
      "func:cached_fn",
      "func:close_all_cached_connections",
      "func:get_async_redis_client"
    ],
    "old_files": [
      "client.py_o1_mini_1aba9681.py"
    ],
    "new_files": [
      "client_391ffa.py"
    ]
  },
  {
    "file_signature": [
      "class:JoinableT",
      "class:StreamT",
      "class:_AppT",
      "class:_JoinT",
      "class:_SchemaT",
      "func:__aiter__",
      "func:__and__",
      "func:__copy__",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:_human_channel",
      "func:add_processor",
      "func:clone",
      "func:combine",
      "func:contribute_to_stream",
      "func:derive_topic",
      "func:echo",
      "func:enumerate",
      "func:get_active_stream",
      "func:group_by",
      "func:info",
      "func:inner_join",
      "func:join",
      "func:left_join",
      "func:outer_join",
      "func:through"
    ],
    "old_files": [
      "streams.py_o3_mini_4c29e46e.py"
    ],
    "new_files": [
      "streams_a2a52b.py"
    ]
  },
  {
    "file_signature": [
      "func:base_extractor",
      "func:eval_fn",
      "func:holdout_df",
      "func:logs",
      "func:metric_name",
      "func:parallel_logs",
      "func:split_fn",
      "func:test_backward_subset_feature_selection",
      "func:test_feature_importance_backward_selection",
      "func:test_poor_man_boruta_selection",
      "func:train_df",
      "func:train_fn"
    ],
    "old_files": [
      "test_selectors.py_o1_mini_f5780403.py"
    ],
    "new_files": [
      "test_selectors_267ea0.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseAdditiveNoiseAttack",
      "class:BaseRepeatedAdditiveNoiseAttack",
      "class:GaussianMixin",
      "class:L2AdditiveGaussianNoiseAttack",
      "class:L2AdditiveUniformNoiseAttack",
      "class:L2ClippingAwareAdditiveGaussianNoiseAttack",
      "class:L2ClippingAwareAdditiveUniformNoiseAttack",
      "class:L2ClippingAwareMixin",
      "class:L2ClippingAwareRepeatedAdditiveGaussianNoiseAttack",
      "class:L2ClippingAwareRepeatedAdditiveUniformNoiseAttack",
      "class:L2Mixin",
      "class:L2RepeatedAdditiveGaussianNoiseAttack",
      "class:L2RepeatedAdditiveUniformNoiseAttack",
      "class:LinfAdditiveUniformNoiseAttack",
      "class:LinfMixin",
      "class:LinfRepeatedAdditiveUniformNoiseAttack",
      "class:UniformMixin",
      "func:__init__",
      "func:distance",
      "func:get_epsilons",
      "func:run",
      "func:sample_noise"
    ],
    "old_files": [
      "additive_noise.py_o1_mini_36b830d2.py"
    ],
    "new_files": [
      "additive_noise_84a712.py"
    ]
  },
  {
    "file_signature": [
      "class:Config",
      "class:MessagePartial",
      "func:__init__",
      "func:_get_exported_s3_record",
      "func:_save_s3_object_to_file",
      "func:add_user_profile_child_configs",
      "func:chunkify",
      "func:create_soft_link",
      "func:custom_fetch_direct_message_groups",
      "func:custom_fetch_onboarding_usermessage",
      "func:custom_fetch_realm_audit_logs_for_realm",
      "func:custom_fetch_realm_audit_logs_for_user",
      "func:custom_fetch_scheduled_messages",
      "func:custom_fetch_user_profile",
      "func:custom_fetch_user_profile_cross_realm",
      "func:do_common_export_processes",
      "func:do_export_realm",
      "func:do_export_user",
      "func:do_write_stats_file_for_realm_export",
      "func:export_analytics_tables",
      "func:export_attachment_table",
      "func:export_avatars_from_local",
      "func:export_emoji_from_local",
      "func:export_files_from_s3",
      "func:export_from_config",
      "func:export_messages_single_user",
      "func:export_migration_status",
      "func:export_partial_message_files",
      "func:export_realm_icons",
      "func:export_realm_wrapper",
      "func:export_single_user",
      "func:export_uploads_and_avatars",
      "func:export_uploads_from_local",
      "func:export_usermessages_batch",
      "func:fetch_attachment_data",
      "func:fetch_reaction_data",
      "func:fetch_usermessages",
      "func:floatify_datetime_fields",
      "func:get_analytics_config",
      "func:get_consented_user_ids",
      "func:get_emoji_path",
      "func:get_exportable_scheduled_message_ids",
      "func:get_id_list_gently_from_database",
      "func:get_ids",
      "func:get_realm_config",
      "func:get_realm_exports_serialized",
      "func:get_recipient",
      "func:get_single_user_config",
      "func:launch_user_message_subprocesses",
      "func:make_raw",
      "func:sanity_check_output",
      "func:write_data_to_file",
      "func:write_message_partials",
      "func:write_records_json_file",
      "func:write_table_data"
    ],
    "old_files": [
      "export.py_o1_mini_d1196801.py"
    ],
    "new_files": [
      "export_6707ca.py"
    ]
  },
  {
    "file_signature": [
      "class:Train",
      "class:TrainModel",
      "func:__init__",
      "func:_train_worker",
      "func:add_subparser",
      "func:finish",
      "func:from_partial_objects",
      "func:run",
      "func:train_model",
      "func:train_model_from_args",
      "func:train_model_from_file"
    ],
    "old_files": [
      "train.py_o3_mini_bd12c8b9.py"
    ],
    "new_files": [
      "train_17392c.py"
    ]
  },
  {
    "file_signature": [
      "class:StdoutRefactoringTool",
      "func:__init__",
      "func:diff_texts",
      "func:log_error",
      "func:main",
      "func:print_output",
      "func:warn",
      "func:write_file"
    ],
    "old_files": [
      "main.py_o1_mini_3f8c7064.py"
    ],
    "new_files": [
      "main_be1d12.py"
    ]
  },
  {
    "file_signature": [
      "class:MySQLEngineSpec",
      "func:_extract_error_message",
      "func:adjust_engine_params",
      "func:cancel_query",
      "func:convert_dttm",
      "func:epoch_to_dttm",
      "func:get_cancel_query_id",
      "func:get_datatype",
      "func:get_schema_from_engine_params"
    ],
    "old_files": [
      "mysql.py_o1_mini_dab081cc.py"
    ],
    "new_files": [
      "mysql_113041.py"
    ]
  },
  {
    "file_signature": [
      "class:TestCCXTExchange",
      "func:ccxt__async_get_candle_history",
      "func:test_ccxt__async_get_candle_history",
      "func:test_ccxt__async_get_candle_history_futures",
      "func:test_ccxt__async_get_trade_history",
      "func:test_ccxt__calculate_funding_fees",
      "func:test_ccxt_balances_parse",
      "func:test_ccxt_dry_run_liquidation_price",
      "func:test_ccxt_fetch_funding_rate_history",
      "func:test_ccxt_fetch_l2_orderbook",
      "func:test_ccxt_fetch_mark_price_history",
      "func:test_ccxt_fetch_ohlcv",
      "func:test_ccxt_fetch_ohlcv_startdate",
      "func:test_ccxt_fetch_ticker",
      "func:test_ccxt_fetch_tickers",
      "func:test_ccxt_fetch_tickers_futures",
      "func:test_ccxt_get_contract_size",
      "func:test_ccxt_get_fee",
      "func:test_ccxt_get_max_leverage_futures",
      "func:test_ccxt_get_max_leverage_spot",
      "func:test_ccxt_get_max_pair_stake_amount",
      "func:test_ccxt_load_leverage_tiers",
      "func:test_ccxt_my_trades_parse",
      "func:test_ccxt_order_parse",
      "func:test_has_validations",
      "func:test_load_markets",
      "func:test_load_markets_futures",
      "func:test_ohlcv_limit",
      "func:test_ohlcv_limit_futures",
      "func:test_private_method_presence"
    ],
    "old_files": [
      "test_ccxt_compat.py_o1_mini_e12831bd.py"
    ],
    "new_files": [
      "test_ccxt_compat_f96503.py"
    ]
  },
  {
    "file_signature": [
      "class:NotModifiedResponse",
      "class:StaticFiles",
      "func:__init__",
      "func:file_response",
      "func:get_directories",
      "func:get_path",
      "func:is_not_modified",
      "func:lookup_path"
    ],
    "old_files": [
      "staticfiles.py_o1_mini_afa0015f.py"
    ],
    "new_files": [
      "staticfiles_164434.py"
    ]
  },
  {
    "file_signature": [
      "class:TestProjInfo",
      "func:__init__",
      "func:adapter",
      "func:analyses",
      "func:clean_up_logging",
      "func:create_test_schema",
      "func:dbt_profile_data",
      "func:dbt_profile_target",
      "func:dbt_project_yml",
      "func:dependencies",
      "func:dependencies_yml",
      "func:drop_test_schema",
      "func:environment",
      "func:get_tables_in_schema",
      "func:initialization",
      "func:logs_dir",
      "func:macros",
      "func:models",
      "func:packages",
      "func:packages_yml",
      "func:prefix",
      "func:profile_user",
      "func:profiles_config_update",
      "func:profiles_root",
      "func:profiles_yml",
      "func:project",
      "func:project_config_update",
      "func:project_files",
      "func:project_root",
      "func:project_setup",
      "func:properties",
      "func:run_sql",
      "func:run_sql_file",
      "func:seeds",
      "func:selectors",
      "func:selectors_yml",
      "func:shared_data_dir",
      "func:snapshots",
      "func:test_config",
      "func:test_data_dir",
      "func:tests",
      "func:unique_schema",
      "func:write_project_files",
      "func:write_project_files_recursively"
    ],
    "old_files": [
      "project.py_o3_mini_a2c4245c.py"
    ],
    "new_files": [
      "project_72b75e.py"
    ]
  },
  {
    "file_signature": [
      "class:AssistantPreferences",
      "class:ExposedEntities",
      "class:ExposedEntity",
      "class:SerializedExposedEntities",
      "func:__init__",
      "func:_async_schedule_save",
      "func:_async_set_legacy_assistant_option",
      "func:_async_should_expose_legacy_entity",
      "func:_data_to_save",
      "func:_is_default_exposed",
      "func:_new_exposed_entity",
      "func:_update_exposed_entity",
      "func:async_expose_entity",
      "func:async_get_assistant_settings",
      "func:async_get_entity_settings",
      "func:async_get_expose_new_entities",
      "func:async_listen_entity_updates",
      "func:async_set_assistant_option",
      "func:async_set_expose_new_entities",
      "func:async_should_expose",
      "func:to_json",
      "func:unsubscribe",
      "func:ws_expose_entity",
      "func:ws_expose_new_entities_get",
      "func:ws_expose_new_entities_set",
      "func:ws_list_exposed_entities"
    ],
    "old_files": [
      "exposed_entities.py_o1_mini_94c60445.py"
    ],
    "new_files": [
      "exposed_entities_a550ba.py"
    ]
  },
  {
    "file_signature": [
      "class:Application",
      "class:CleanupContext",
      "class:CleanupError",
      "func:__bool__",
      "func:__call__",
      "func:__delitem__",
      "func:__eq__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:_add_subapp",
      "func:_build_middlewares",
      "func:_check_frozen",
      "func:_prepare_middleware",
      "func:_reg_subapp_signals",
      "func:_set_loop",
      "func:add_domain",
      "func:add_routes",
      "func:add_subapp",
      "func:cleanup_ctx",
      "func:debug",
      "func:exceptions",
      "func:freeze",
      "func:frozen",
      "func:get",
      "func:middlewares",
      "func:on_cleanup",
      "func:on_response_prepare",
      "func:on_shutdown",
      "func:on_startup",
      "func:pre_freeze",
      "func:pre_frozen",
      "func:reg_handler",
      "func:router"
    ],
    "old_files": [
      "web_app.py_o1_mini_64311f2a.py"
    ],
    "new_files": [
      "web_app_e61508.py"
    ]
  },
  {
    "file_signature": [
      "class:RussoundRNETDevice",
      "func:__init__",
      "func:mute_volume",
      "func:select_source",
      "func:set_volume_level",
      "func:setup_platform",
      "func:turn_off",
      "func:turn_on",
      "func:update"
    ],
    "old_files": [
      "media_player.py_o1_mini_66456322.py"
    ],
    "new_files": [
      "media_player_f3d659.py"
    ]
  },
  {
    "file_signature": [
      "func:test_bins",
      "func:test_bins_from_interval_index",
      "func:test_bins_from_interval_index_doc_example",
      "func:test_bins_monotonic_not_overflowing",
      "func:test_bins_not_monotonic",
      "func:test_bins_not_overlapping_from_interval_index",
      "func:test_cut_bins_datetime_intervalindex",
      "func:test_cut_bool_coercion_to_int",
      "func:test_cut_corner",
      "func:test_cut_datetime_array_no_attributeerror",
      "func:test_cut_duplicates_bin",
      "func:test_cut_incorrect_labels",
      "func:test_cut_no_warnings",
      "func:test_cut_non_unique_labels",
      "func:test_cut_not_1d_arg",
      "func:test_cut_nullable_integer",
      "func:test_cut_out_of_bounds",
      "func:test_cut_out_of_range_more",
      "func:test_cut_pass_labels",
      "func:test_cut_pass_labels_compat",
      "func:test_cut_pass_series_name_to_factor",
      "func:test_cut_read_only",
      "func:test_cut_return_intervals",
      "func:test_cut_unordered_labels",
      "func:test_cut_unordered_with_missing_labels_raises_error",
      "func:test_cut_unordered_with_series_labels",
      "func:test_cut_with_duplicated_index_lowest_included",
      "func:test_cut_with_nonexact_categorical_indices",
      "func:test_cut_with_nullable_int64",
      "func:test_cut_with_timestamp_tuple_labels",
      "func:test_datetime_bin",
      "func:test_datetime_cut",
      "func:test_datetime_cut_roundtrip",
      "func:test_datetime_nan_error",
      "func:test_datetime_nan_mask",
      "func:test_datetime_tz_cut",
      "func:test_datetime_tz_cut_mismatched_tzawareness",
      "func:test_inf_handling",
      "func:test_int_bins_with_inf",
      "func:test_label_precision",
      "func:test_labels",
      "func:test_na_handling",
      "func:test_no_right",
      "func:test_right",
      "func:test_round_frac",
      "func:test_round_frac_just_works",
      "func:test_series_ret_bins",
      "func:test_simple",
      "func:test_single_bin",
      "func:test_timedelta_cut_roundtrip",
      "func:test_wrong_num_labels"
    ],
    "old_files": [
      "test_cut.py_o1_mini_f5c488ac.py"
    ],
    "new_files": [
      "test_cut_a5ac0a.py"
    ]
  },
  {
    "file_signature": [
      "class:OpenHardwareMonitorData",
      "class:OpenHardwareMonitorDevice",
      "func:__init__",
      "func:extra_state_attributes",
      "func:initialize",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:parse_children",
      "func:parse_number",
      "func:refresh",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_o1_mini_9555a383.py"
    ],
    "new_files": [
      "sensor_6b9561.py"
    ]
  },
  {
    "file_signature": [
      "class:ImageProcessingAlprEntity",
      "class:OpenAlprCloudEntity",
      "func:__init__",
      "func:async_process_plates",
      "func:camera_entity",
      "func:confidence",
      "func:extra_state_attributes",
      "func:name",
      "func:process_plates",
      "func:state"
    ],
    "old_files": [
      "image_processing.py_o1_mini_e6e8e925.py"
    ],
    "new_files": [
      "image_processing_dff0c0.py"
    ]
  },
  {
    "file_signature": [
      "func:_mocked_execute_query",
      "func:test_execute_query_as_report_executor",
      "func:test_execute_query_failed_max_retries",
      "func:test_execute_query_failed_no_retry",
      "func:test_execute_query_mutate_query_disabled",
      "func:test_execute_query_mutate_query_enabled",
      "func:test_execute_query_succeeded_no_retry",
      "func:test_execute_query_succeeded_with_retries",
      "func:test_get_alert_metadata_from_object"
    ],
    "old_files": [
      "alert_tests.py_o1_mini_d23b3a38.py"
    ],
    "new_files": [
      "alert_tests_e8cf0b.py"
    ]
  },
  {
    "file_signature": [
      "class:TestAsyncQueries",
      "func:test_load_chart_data_into_cache",
      "func:test_load_chart_data_into_cache_error",
      "func:test_load_explore_json_into_cache",
      "func:test_load_explore_json_into_cache_error",
      "func:test_soft_timeout_load_chart_data_into_cache",
      "func:test_soft_timeout_load_explore_json_into_cache"
    ],
    "old_files": [
      "async_queries_tests.py_o1_mini_49fe6885.py"
    ],
    "new_files": [
      "async_queries_tests_ab1690.py"
    ]
  },
  {
    "file_signature": [
      "class:ExchangeWS",
      "func:__init__",
      "func:_continuous_stopped",
      "func:_pop_history",
      "func:_start_forever",
      "func:cleanup",
      "func:cleanup_expired",
      "func:ohlcvs",
      "func:reset_connections",
      "func:schedule_ohlcv"
    ],
    "old_files": [
      "exchange_ws.py_o1_mini_8ac84de1.py"
    ],
    "new_files": [
      "exchange_ws_9ca098.py"
    ]
  },
  {
    "file_signature": [
      "class:App",
      "class:BootStrategy",
      "class:_AppCommand",
      "class:_Fetcher",
      "class:_LiveCheck",
      "class:_Worker",
      "func:FlowControlQueue",
      "func:GlobalTable",
      "func:LiveCheck",
      "func:SetGlobalTable",
      "func:SetTable",
      "func:Table",
      "func:Worker",
      "func:__init__",
      "func:__repr__",
      "func:_chain",
      "func:_configure",
      "func:_create_directories",
      "func:_decorator",
      "func:_discovery_modules",
      "func:_fetcher",
      "func:_init_fixups",
      "func:_init_signals",
      "func:_inner",
      "func:_leader_assignor",
      "func:_load_settings",
      "func:_load_settings_from_source",
      "func:_new_cache_backend",
      "func:_new_conductor",
      "func:_new_consumer",
      "func:_new_producer",
      "func:_new_producer_transport",
      "func:_new_transport",
      "func:_new_web",
      "func:_on_autodiscovery_error",
      "func:_on_rebalance_when_stopped",
      "func:_prepare_compat_settings",
      "func:_prepare_subservice",
      "func:_reply_consumer",
      "func:_should_enable_kafka_consumer",
      "func:_should_enable_kafka_producer",
      "func:_should_enable_web",
      "func:_span_add_default_tags",
      "func:_start_span_from_rebalancing",
      "func:_task",
      "func:_update_assignment",
      "func:agent",
      "func:agents",
      "func:assignor",
      "func:cache",
      "func:channel",
      "func:client_only",
      "func:command",
      "func:conf",
      "func:config_from_object",
      "func:consumer",
      "func:create_event",
      "func:crontab",
      "func:discover",
      "func:finalize",
      "func:flow_control",
      "func:http_client",
      "func:in_transaction",
      "func:is_leader",
      "func:kafka_client_consumer",
      "func:kafka_conductor",
      "func:kafka_consumer",
      "func:kafka_producer",
      "func:label",
      "func:main",
      "func:monitor",
      "func:on_init_dependencies",
      "func:on_rebalance_end",
      "func:on_rebalance_return",
      "func:on_rebalance_start",
      "func:on_webserver_init",
      "func:page",
      "func:producer",
      "func:producer_only",
      "func:producer_transport",
      "func:router",
      "func:sensors",
      "func:serializers",
      "func:server",
      "func:service",
      "func:shortlabel",
      "func:stream",
      "func:table_route",
      "func:tables",
      "func:task",
      "func:timer",
      "func:topic",
      "func:topics",
      "func:trace",
      "func:traced",
      "func:transport",
      "func:web",
      "func:web_components",
      "func:web_server",
      "func:worker_init",
      "func:worker_init_post_autodiscover",
      "func:wrapped"
    ],
    "old_files": [
      "base.py_o3_mini_41047fae.py"
    ],
    "new_files": [
      "base_6106b5.py"
    ]
  },
  {
    "file_signature": [
      "class:Channel",
      "class:SerializedChannel",
      "func:__aiter__",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:_clone",
      "func:_clone_args",
      "func:_compile_deliver",
      "func:_contribute_to_schema",
      "func:_create_event",
      "func:_future_message_to_event",
      "func:_get_default_schema",
      "func:_object_id_as_hex",
      "func:_throw",
      "func:as_future_message",
      "func:clone",
      "func:clone_using_queue",
      "func:derive",
      "func:empty",
      "func:get_topic_name",
      "func:label",
      "func:on_stop_iteration",
      "func:prepare_headers",
      "func:prepare_key",
      "func:prepare_value",
      "func:queue",
      "func:send_soon",
      "func:stream",
      "func:subscriber_count"
    ],
    "old_files": [
      "channels.py_o3_mini_adb5b020.py"
    ],
    "new_files": [
      "channels_8e6ab8.py"
    ]
  },
  {
    "file_signature": [
      "class:Test2DCompat",
      "class:TestStringArray",
      "func:_cast_pointwise_result",
      "func:_get_expected_exception",
      "func:_supports_accumulation",
      "func:_supports_reduction",
      "func:arrow_not_supported",
      "func:chunked",
      "func:data",
      "func:data_for_grouping",
      "func:data_for_sorting",
      "func:data_missing",
      "func:data_missing_for_sorting",
      "func:dtype",
      "func:maybe_split_array",
      "func:test_arith_series_with_array",
      "func:test_combine_add",
      "func:test_compare_scalar",
      "func:test_construct_from_string_own_name",
      "func:test_dropna_array",
      "func:test_eq_with_str",
      "func:test_fillna_no_op_returns_copy",
      "func:test_from_dtype",
      "func:test_groupby_extension_apply",
      "func:test_is_dtype_from_name",
      "func:test_is_not_string_type",
      "func:test_searchsorted_with_na_raises",
      "func:test_setitem_preserves_views",
      "func:test_transpose",
      "func:test_view"
    ],
    "old_files": [
      "test_string.py_o1_mini_7c5cc6f9.py"
    ],
    "new_files": [
      "test_string_c0dad8.py"
    ]
  },
  {
    "file_signature": [
      "class:BrowseMedia",
      "func:__init__",
      "func:__repr__",
      "func:as_dict",
      "func:async_process_play_media_url",
      "func:calculate_children_class"
    ],
    "old_files": [
      "browse_media.py_o3_mini_a771928a.py"
    ],
    "new_files": [
      "browse_media_2e1817.py"
    ]
  },
  {
    "file_signature": [
      "class:EnvisalinkAlarm",
      "func:__init__",
      "func:alarm_state",
      "func:async_alarm_keypress",
      "func:async_alarm_keypress_handler",
      "func:async_update_callback"
    ],
    "old_files": [
      "alarm_control_panel.py_o1_mini_8577ea27.py"
    ],
    "new_files": [
      "alarm_control_panel_7f2de8.py"
    ]
  },
  {
    "file_signature": [
      "class:ConnectionPool",
      "class:HTTPConnectionPool",
      "class:HTTPSConnectionPool",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__str__",
      "func:_absolute_url",
      "func:_add_transport_headers",
      "func:_build_context",
      "func:_get_conn",
      "func:_get_timeout",
      "func:_ipv6_host",
      "func:_make_request",
      "func:_new_conn",
      "func:_put_conn",
      "func:_raise_timeout",
      "func:_start_conn",
      "func:close",
      "func:connection_from_url",
      "func:drain_and_release_conn",
      "func:is_same_host",
      "func:urlopen"
    ],
    "old_files": [
      "connectionpool.py_o3_mini_8473b69a.py"
    ],
    "new_files": [
      "connectionpool_96094f.py"
    ]
  },
  {
    "file_signature": [
      "func:all_setup_requests",
      "func:disable_security_filter",
      "func:hassio_client",
      "func:hassio_env",
      "func:hassio_handler",
      "func:hassio_noauth_client",
      "func:hassio_stubs",
      "func:mock_addon_info"
    ],
    "old_files": [
      "conftest.py_o1_mini_a2345090.py"
    ],
    "new_files": [
      "conftest_3e1e08.py"
    ]
  },
  {
    "file_signature": [
      "class:AlarmDecoderBinarySensor",
      "func:__init__",
      "func:_fault_callback",
      "func:_rel_message_callback",
      "func:_restore_callback",
      "func:_rfx_message_callback"
    ],
    "old_files": [
      "binary_sensor.py_o1_mini_ff3ffe74.py"
    ],
    "new_files": [
      "binary_sensor_25691a.py"
    ]
  },
  {
    "file_signature": [
      "class:DashboardEncoder",
      "func:__init__",
      "func:base_json_conv",
      "func:default",
      "func:dumps",
      "func:format_timedelta",
      "func:json_dumps_w_dates",
      "func:json_int_dttm_ser",
      "func:json_iso_dttm_ser",
      "func:loads",
      "func:pessimistic_json_iso_dttm_ser",
      "func:redact_sensitive",
      "func:reveal_sensitive",
      "func:validate_json"
    ],
    "old_files": [
      "json.py_o1_mini_2fb641a5.py"
    ],
    "new_files": [
      "json_5bd122.py"
    ]
  },
  {
    "file_signature": [
      "class:RflinkCommand",
      "class:RflinkDevice",
      "class:SwitchableRflinkDevice",
      "func:__init__",
      "func:_availability_callback",
      "func:_handle_event",
      "func:assumed_state",
      "func:available",
      "func:cancel_queued_send_commands",
      "func:handle_event_callback",
      "func:is_connected",
      "func:is_on",
      "func:name",
      "func:set_rflink_protocol"
    ],
    "old_files": [
      "entity.py_o1_mini_98842845.py"
    ],
    "new_files": [
      "entity_543df3.py"
    ]
  },
  {
    "file_signature": [
      "class:FluxSwitch",
      "func:__init__",
      "func:find_start_time",
      "func:find_stop_time",
      "func:is_on",
      "func:name"
    ],
    "old_files": [
      "switch.py_o3_mini_e0aed1a2.py"
    ],
    "new_files": [
      "switch_67758e.py"
    ]
  },
  {
    "file_signature": [
      "class:Array",
      "class:Data",
      "class:Log",
      "class:Scalar",
      "func:__add__",
      "func:__init__",
      "func:__mod__",
      "func:__mul__",
      "func:__neg__",
      "func:__pow__",
      "func:__radd__",
      "func:__rmul__",
      "func:__rpow__",
      "func:__rtruediv__",
      "func:__sub__",
      "func:__truediv__",
      "func:_fix_legacy",
      "func:_get_name",
      "func:_internal_get_standardized_data",
      "func:_internal_set_standardized_data",
      "func:_layered_get_value",
      "func:_layered_recombine",
      "func:_layered_sample",
      "func:_layered_set_value",
      "func:_new_with_data_layer",
      "func:_param_string",
      "func:_to_reduced_space",
      "func:bounds",
      "func:copy",
      "func:dimension",
      "func:integer",
      "func:set_bounds",
      "func:set_integer_casting",
      "func:set_mutation",
      "func:sigma"
    ],
    "old_files": [
      "data.py_o1_mini_3ace3d6d.py"
    ],
    "new_files": [
      "data_9f84cd.py"
    ]
  },
  {
    "file_signature": [
      "func:test_drop_empty_list",
      "func:test_drop_exception_raised",
      "func:test_drop_index_ea_dtype",
      "func:test_drop_non_empty_list",
      "func:test_drop_unique_and_non_unique_index",
      "func:test_drop_with_ignore_errors"
    ],
    "old_files": [
      "test_drop.py_o1_mini_10334641.py"
    ],
    "new_files": [
      "test_drop_537b51.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractRouteDef",
      "class:RouteDef",
      "class:RouteTableDef",
      "class:StaticDef",
      "func:__contains__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:delete",
      "func:get",
      "func:head",
      "func:inner",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:register",
      "func:route",
      "func:static",
      "func:view"
    ],
    "old_files": [
      "web_routedef.py_o1_mini_dfa030b5.py"
    ],
    "new_files": [
      "web_routedef_a1a149.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_index_map",
      "func:broadcast",
      "func:column_name",
      "func:concat",
      "func:date_range",
      "func:from_pandas",
      "func:get_dummies",
      "func:isna",
      "func:melt",
      "func:merge",
      "func:notna",
      "func:output_func",
      "func:pandas_to_datetime",
      "func:pd_read_excel",
      "func:range",
      "func:read_clipboard",
      "func:read_csv",
      "func:read_delta",
      "func:read_excel",
      "func:read_excel_on_spark",
      "func:read_html",
      "func:read_index_metadata",
      "func:read_json",
      "func:read_orc",
      "func:read_parquet",
      "func:read_spark_io",
      "func:read_sql",
      "func:read_sql_query",
      "func:read_sql_table",
      "func:read_table",
      "func:resolve_func",
      "func:to_datetime",
      "func:to_numeric"
    ],
    "old_files": [
      "namespace.py_o3_mini_3e6b5858.py"
    ],
    "new_files": [
      "namespace_67e527.py"
    ]
  },
  {
    "file_signature": [
      "func:any_allowed_skipna_inferred_dtype",
      "func:test_api",
      "func:test_api_for_categorical",
      "func:test_api_mi_raises",
      "func:test_api_per_dtype",
      "func:test_api_per_method",
      "func:test_no_circular_reference"
    ],
    "old_files": [
      "test_api.py_o1_mini_72187cdc.py"
    ],
    "new_files": [
      "test_api_6f44ac.py"
    ]
  },
  {
    "file_signature": [
      "class:QueryContext",
      "func:__init__",
      "func:get_cache_timeout",
      "func:get_data",
      "func:get_df_payload",
      "func:get_payload",
      "func:get_query_result",
      "func:processing_time_offsets",
      "func:query_cache_key",
      "func:raise_for_access"
    ],
    "old_files": [
      "query_context.py_o1_mini_a08b53c3.py"
    ],
    "new_files": [
      "query_context_ca911d.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncHTMLSession",
      "class:BaseParser",
      "class:BaseSession",
      "class:Element",
      "class:HTML",
      "class:HTMLResponse",
      "class:HTMLSession",
      "class:MaxRetries",
      "func:__aiter__",
      "func:__convert",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:__repr__",
      "func:_convert_cookiejar_to_render",
      "func:_convert_cookiesjar_to_render",
      "func:_from_response",
      "func:_get_first_or_list",
      "func:_make_absolute",
      "func:absolute_links",
      "func:add_next_symbol",
      "func:attrs",
      "func:base_url",
      "func:browser",
      "func:close",
      "func:encoding",
      "func:find",
      "func:full_text",
      "func:gen",
      "func:get_next",
      "func:html",
      "func:links",
      "func:lxml",
      "func:next",
      "func:pq",
      "func:raw_html",
      "func:render",
      "func:request",
      "func:response_hook",
      "func:run",
      "func:search",
      "func:search_all",
      "func:text",
      "func:user_agent",
      "func:xpath"
    ],
    "old_files": [
      "requests_html.py_o3_mini_7179eafa.py"
    ],
    "new_files": [
      "requests_html_b5031b.py"
    ]
  },
  {
    "file_signature": [
      "class:TibberDataSensor",
      "class:TibberRtDataCoordinator",
      "class:TibberRtEntityCreator",
      "class:TibberSensor",
      "class:TibberSensorElPrice",
      "class:TibberSensorRT",
      "func:__init__",
      "func:_data_updated",
      "func:_handle_coordinator_update",
      "func:_handle_ha_stop",
      "func:_migrate_unique_id",
      "func:add_sensors",
      "func:available",
      "func:device_info",
      "func:get_live_measurement",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_o1_mini_6e033d18.py"
    ],
    "new_files": [
      "sensor_010a2f.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseNLPLabelingFunction",
      "class:NLPLabelingFunction",
      "class:SpacyPreprocessorConfig",
      "class:SpacyPreprocessorParameters",
      "class:base_nlp_labeling_function",
      "class:nlp_labeling_function",
      "func:__call__",
      "func:__init__",
      "func:_create_or_check_preprocessor",
      "func:_create_preprocessor"
    ],
    "old_files": [
      "nlp.py_o3_mini_c6f6e77f.py"
    ],
    "new_files": [
      "nlp_fe0862.py"
    ]
  },
  {
    "file_signature": [
      "class:AssertTuple",
      "class:BreakOutsideLoop",
      "class:CommentAnnotationSyntaxError",
      "class:ContinueInFinally",
      "class:ContinueOutsideLoop",
      "class:DefaultExceptNotLast",
      "class:DoctestSyntaxError",
      "class:DuplicateArgument",
      "class:FStringMissingPlaceholders",
      "class:ForwardAnnotationSyntaxError",
      "class:FutureFeatureNotDefined",
      "class:IfTuple",
      "class:ImportShadowedByLoopVar",
      "class:ImportStarNotPermitted",
      "class:ImportStarUsage",
      "class:ImportStarUsed",
      "class:InvalidPrintSyntax",
      "class:IsLiteral",
      "class:LateFutureImport",
      "class:Message",
      "class:MultiValueRepeatedKeyLiteral",
      "class:MultiValueRepeatedKeyVariable",
      "class:PercentFormatExpectedMapping",
      "class:PercentFormatExpectedSequence",
      "class:PercentFormatExtraNamedArguments",
      "class:PercentFormatInvalidFormat",
      "class:PercentFormatMissingArgument",
      "class:PercentFormatMixedPositionalAndNamed",
      "class:PercentFormatPositionalCountMismatch",
      "class:PercentFormatStarRequiresSequence",
      "class:PercentFormatUnsupportedFormatCharacter",
      "class:RaiseNotImplemented",
      "class:RedefinedInListComp",
      "class:RedefinedWhileUnused",
      "class:ReturnOutsideFunction",
      "class:ReturnWithArgsInsideGenerator",
      "class:StringDotFormatExtraNamedArguments",
      "class:StringDotFormatExtraPositionalArguments",
      "class:StringDotFormatInvalidFormat",
      "class:StringDotFormatMissingArgument",
      "class:StringDotFormatMixingAutomatic",
      "class:TooManyExpressionsInStarredAssignment",
      "class:TwoStarredExpressions",
      "class:UndefinedExport",
      "class:UndefinedLocal",
      "class:UndefinedName",
      "class:UnusedImport",
      "class:UnusedVariable",
      "class:YieldOutsideFunction",
      "func:__init__",
      "func:__str__"
    ],
    "old_files": [
      "messages.py_o1_mini_30e9304b.py"
    ],
    "new_files": [
      "messages_bf1e5c.py"
    ]
  },
  {
    "file_signature": [
      "class:BP",
      "class:BoxPlot",
      "func:__init__",
      "func:_boxes_c",
      "func:_caps_c",
      "func:_color_attrs",
      "func:_get_colors",
      "func:_grouped_plot_by_column",
      "func:_kind",
      "func:_make_legend",
      "func:_make_plot",
      "func:_medians_c",
      "func:_plot",
      "func:_post_plot_logic",
      "func:_set_ticklabels",
      "func:_validate_color_args",
      "func:_whiskers_c",
      "func:boxplot",
      "func:boxplot_frame",
      "func:boxplot_frame_groupby",
      "func:maybe_color_bp",
      "func:orientation",
      "func:plot_group",
      "func:result"
    ],
    "old_files": [
      "boxplot.py_o3_mini_8e4f22bc.py"
    ],
    "new_files": [
      "boxplot_5aedc4.py"
    ]
  },
  {
    "file_signature": [
      "class:CanaryCamera",
      "func:__init__",
      "func:is_recording",
      "func:location",
      "func:motion_detection_enabled",
      "func:renew_live_stream_session"
    ],
    "old_files": [
      "camera.py_o1_mini_5a120736.py"
    ],
    "new_files": [
      "camera_4dd787.py"
    ]
  },
  {
    "file_signature": [
      "func:send_request",
      "func:test_api_payments",
      "func:test_api_payments_conflicts",
      "func:test_api_payments_post_without_required_params",
      "func:test_api_payments_secret_hash_errors",
      "func:test_api_payments_target_error",
      "func:test_api_payments_with_hash_no_secret",
      "func:test_api_payments_with_invalid_input",
      "func:test_api_payments_with_lock_timeout",
      "func:test_api_payments_with_resolver",
      "func:test_api_payments_with_secret_and_hash",
      "func:test_api_payments_with_secret_no_hash",
      "func:test_api_payments_without_pfs",
      "func:test_api_payments_without_pfs_failure"
    ],
    "old_files": [
      "test_payments.py_o1_mini_803e9f61.py"
    ],
    "new_files": [
      "test_payments_dde789.py"
    ]
  },
  {
    "file_signature": [
      "func:foo1",
      "func:foo2",
      "func:foo3",
      "func:foo4"
    ],
    "old_files": [
      "line_ranges_exceeding_end.py_o1_mini_27d93dc8.py"
    ],
    "new_files": [
      "line_ranges_exceeding_end_de8e88.py"
    ]
  },
  {
    "file_signature": [
      "class:ConnectionPool",
      "class:HTTPConnectionPool",
      "class:HTTPSConnectionPool",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__str__",
      "func:_absolute_url",
      "func:_add_transport_headers",
      "func:_build_context",
      "func:_get_timeout",
      "func:_ipv6_host",
      "func:_new_conn",
      "func:_raise_timeout",
      "func:close",
      "func:connection_from_url",
      "func:drain_and_release_conn",
      "func:is_same_host"
    ],
    "old_files": [
      "connectionpool.py_o3_mini_4740ff85.py"
    ],
    "new_files": [
      "connectionpool_8dc770.py"
    ]
  },
  {
    "file_signature": [
      "class:RfxtrxSwitch",
      "func:__init__",
      "func:_apply_event",
      "func:_apply_event_lighting4",
      "func:_apply_event_standard",
      "func:_constructor",
      "func:_handle_event",
      "func:supported"
    ],
    "old_files": [
      "switch.py_o1_mini_2d748893.py"
    ],
    "new_files": [
      "switch_fa31bd.py"
    ]
  },
  {
    "file_signature": [
      "class:TestJoin",
      "func:_assert_all_na",
      "func:_assert_same_contents",
      "func:_check_diff_index",
      "func:_check_join",
      "func:_join_by_hand",
      "func:_restrict_to_columns",
      "func:df",
      "func:df2",
      "func:get_test_data",
      "func:target_source",
      "func:test_full_outer_join",
      "func:test_handle_overlap",
      "func:test_handle_overlap_arbitrary_key",
      "func:test_inner_join",
      "func:test_join_cross",
      "func:test_join_datetime_string",
      "func:test_join_dups",
      "func:test_join_empty",
      "func:test_join_empty_bug",
      "func:test_join_empty_uncomparable_columns",
      "func:test_join_float64_float32",
      "func:test_join_hierarchical_mixed_raises",
      "func:test_join_index_mixed",
      "func:test_join_index_mixed_overlap",
      "func:test_join_inner_multiindex",
      "func:test_join_inner_multiindex_deterministic_order",
      "func:test_join_many",
      "func:test_join_many_mixed",
      "func:test_join_many_non_unique_index",
      "func:test_join_mixed_non_unique_index",
      "func:test_join_multi_to_multi",
      "func:test_join_multiindex",
      "func:test_join_multiindex_categorical_output_index_dtype",
      "func:test_join_multiindex_not_alphabetical_categorical",
      "func:test_join_multiindex_one_level",
      "func:test_join_multiindex_with_none_as_label",
      "func:test_join_non_unique_period_index",
      "func:test_join_on",
      "func:test_join_on_fails_with_different_column_counts",
      "func:test_join_on_fails_with_different_left_index",
      "func:test_join_on_fails_with_different_right_index",
      "func:test_join_on_fails_with_wrong_object_type",
      "func:test_join_on_inner",
      "func:test_join_on_pass_vector",
      "func:test_join_on_series",
      "func:test_join_on_series_buglet",
      "func:test_join_on_singlekey_list",
      "func:test_join_on_tz_aware_datetimeindex",
      "func:test_join_sort",
      "func:test_join_unconsolidated",
      "func:test_join_with_categorical_index",
      "func:test_join_with_len0",
      "func:test_left_outer_join",
      "func:test_mixed_type_join_with_suffix",
      "func:test_right_outer_join"
    ],
    "old_files": [
      "test_join.py_o1_mini_e60c6bc0.py"
    ],
    "new_files": [
      "test_join_48601a.py"
    ]
  },
  {
    "file_signature": [
      "func:append_candles_to_dataframe",
      "func:chunks",
      "func:dataframe_to_json",
      "func:deep_merge_dicts",
      "func:dump_json_to_file",
      "func:file_dump_json",
      "func:file_load_json",
      "func:is_file_in_dir",
      "func:json_load",
      "func:json_to_dataframe",
      "func:pair_to_filename",
      "func:parse_db_uri_for_logging",
      "func:plural",
      "func:remove_entry_exit_signals",
      "func:round_dict",
      "func:safe_value_fallback",
      "func:safe_value_fallback2"
    ],
    "old_files": [
      "misc.py_o1_mini_7bcd439d.py"
    ],
    "new_files": [
      "misc_7d75ac.py"
    ]
  },
  {
    "file_signature": [
      "class:PrettyDict",
      "class:TableSchemaFormatter",
      "class:_EastAsianTextAdjustment",
      "class:_TextAdjustment",
      "func:__init__",
      "func:__repr__",
      "func:_adj_justify",
      "func:_extend_line",
      "func:_get_pad",
      "func:_justify",
      "func:_pprint_dict",
      "func:_pprint_seq",
      "func:adjoin",
      "func:as_escaped_string",
      "func:best_len",
      "func:default_pprint",
      "func:enable_data_resource_formatter",
      "func:format_object_summary",
      "func:get_adjustment",
      "func:justify",
      "func:len",
      "func:pprint_thing",
      "func:pprint_thing_encoded"
    ],
    "old_files": [
      "printing.py_o1_mini_91cbf2a2.py"
    ],
    "new_files": [
      "printing_6fb550.py"
    ]
  },
  {
    "file_signature": [
      "func:_wrap_function",
      "func:_wrap_missing_function",
      "func:_wrap_missing_property",
      "func:_wrap_property",
      "func:attach",
      "func:wrapper"
    ],
    "old_files": [
      "__init__.py_o1_mini_a887f810.py"
    ],
    "new_files": [
      "__init___000e4c.py"
    ]
  },
  {
    "file_signature": [
      "class:Storage",
      "func:__init__",
      "func:load",
      "func:login",
      "func:logout",
      "func:save"
    ],
    "old_files": [
      "storage.py_o1_mini_a492ec7a.py"
    ],
    "new_files": [
      "storage_ecdafa.py"
    ]
  },
  {
    "file_signature": [
      "class:Record",
      "class:Row",
      "func:__getattr__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_mapping",
      "func:create_column_maps",
      "func:keys",
      "func:values"
    ],
    "old_files": [
      "records.py_o1_mini_2fe49890.py"
    ],
    "new_files": [
      "records_1f490a.py"
    ]
  },
  {
    "file_signature": [
      "class:TestInterval",
      "func:interval",
      "func:test_hash",
      "func:test_is_empty",
      "func:test_length",
      "func:test_length_timestamp",
      "func:test_properties"
    ],
    "old_files": [
      "test_interval.py_o1_mini_d06ae045.py"
    ],
    "new_files": [
      "test_interval_aba39a.py"
    ]
  },
  {
    "file_signature": [
      "class:HealthCheck",
      "class:HealthCheckMeta",
      "class:Phase",
      "class:Setting",
      "class:Verbosity",
      "class:duration",
      "class:settings",
      "class:settingsMeta",
      "class:settingsProperty",
      "func:__call__",
      "func:__delete__",
      "func:__doc__",
      "func:__get__",
      "func:__getattr__",
      "func:__init__",
      "func:__iter__",
      "func:__repr__",
      "func:__set__",
      "func:__setattr__",
      "func:_assign_default_internal",
      "func:_backend_validator",
      "func:_define_setting",
      "func:_max_examples_validator",
      "func:_validate_database",
      "func:_validate_deadline",
      "func:_validate_phases",
      "func:_validate_stateful_step_count",
      "func:all",
      "func:default",
      "func:get_profile",
      "func:is_in_ci",
      "func:load_profile",
      "func:local_settings",
      "func:lock_further_definitions",
      "func:note_deprecation",
      "func:register_profile",
      "func:show_changed",
      "func:validate_health_check_suppressions",
      "func:validator_inner"
    ],
    "old_files": [
      "_settings.py_o3_mini_461b9e31.py"
    ],
    "new_files": [
      "_settings_351566.py"
    ]
  },
  {
    "file_signature": [
      "class:TadoClimate",
      "func:__init__",
      "func:_async_update_zone_callback",
      "func:_async_update_zone_data",
      "func:_handle_coordinator_update",
      "func:_is_current_setting_supported_by_current_hvac_mode",
      "func:_is_valid_setting_for_hvac_mode",
      "func:_normalize_target_temp_for_hvac_mode",
      "func:adjust_temp",
      "func:available",
      "func:current_humidity",
      "func:current_temperature",
      "func:extra_state_attributes",
      "func:fan_mode",
      "func:hvac_action",
      "func:hvac_mode",
      "func:max_temp",
      "func:min_temp",
      "func:preset_mode",
      "func:preset_modes",
      "func:swing_mode",
      "func:target_temperature",
      "func:target_temperature_step"
    ],
    "old_files": [
      "climate.py_o3_mini_542d0e90.py"
    ],
    "new_files": [
      "climate_d27245.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncHTTPTransport",
      "class:AsyncResponseStream",
      "class:HTTPTransport",
      "class:ResponseStream",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__iter__",
      "func:_load_httpcore_exceptions",
      "func:close",
      "func:handle_request",
      "func:map_httpcore_exceptions"
    ],
    "old_files": [
      "default.py_o3_mini_fe677019.py"
    ],
    "new_files": [
      "default_bb0007.py"
    ]
  },
  {
    "file_signature": [
      "class:FixerError",
      "class:MultiprocessRefactoringTool",
      "class:MultiprocessingUnsupported",
      "class:RefactoringTool",
      "class:_EveryNode",
      "func:__init__",
      "func:_child",
      "func:_detect_future_features",
      "func:_from_system_newlines",
      "func:_get_head_types",
      "func:_get_headnode_dict",
      "func:_identity",
      "func:_read_python_source",
      "func:_to_system_newlines",
      "func:advance",
      "func:gen_lines",
      "func:get_all_fix_names",
      "func:get_fixers",
      "func:get_fixers_from_package",
      "func:log_debug",
      "func:log_error",
      "func:log_message",
      "func:parse_block",
      "func:print_output",
      "func:processed_file",
      "func:refactor",
      "func:refactor_dir",
      "func:refactor_docstring",
      "func:refactor_doctest",
      "func:refactor_file",
      "func:refactor_stdin",
      "func:refactor_string",
      "func:refactor_tree",
      "func:summarize",
      "func:traverse_by",
      "func:wrap_toks",
      "func:write_file"
    ],
    "old_files": [
      "refactor.py_o1_mini_d1039c8d.py"
    ],
    "new_files": [
      "refactor_3077ca.py"
    ]
  },
  {
    "file_signature": [
      "class:DatetimeConverter",
      "class:MilliSecondLocator",
      "class:PandasAutoDateFormatter",
      "class:PandasAutoDateLocator",
      "class:PeriodConverter",
      "class:TimeConverter",
      "class:TimeFormatter",
      "class:TimeSeries_DateFormatter",
      "class:TimeSeries_DateLocator",
      "class:TimeSeries_TimedeltaFormatter",
      "func:__call__",
      "func:__init__",
      "func:_annual_finder",
      "func:_convert_1d",
      "func:_daily_finder",
      "func:_get_default_annual_spacing",
      "func:_get_default_locs",
      "func:_get_interval",
      "func:_get_periods_per_ymd",
      "func:_get_unit",
      "func:_hour_finder",
      "func:_minute_finder",
      "func:_monthly_finder",
      "func:_period_break",
      "func:_period_break_mask",
      "func:_quarterly_finder",
      "func:_second_finder",
      "func:_set_default_format",
      "func:_to_ordinalf",
      "func:autoscale",
      "func:axisinfo",
      "func:convert",
      "func:default_units",
      "func:deregister",
      "func:first_label",
      "func:format_timedelta_ticks",
      "func:get_datevalue",
      "func:get_finder",
      "func:get_locator",
      "func:get_pairs",
      "func:get_unit_generic",
      "func:has_level_label",
      "func:pandas_converters",
      "func:register",
      "func:register_pandas_matplotlib_converters",
      "func:set_locs",
      "func:time2num",
      "func:try_parse",
      "func:wrapper"
    ],
    "old_files": [
      "converter.py_o1_mini_e8b3c829.py"
    ],
    "new_files": [
      "converter_d3febb.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_layout",
      "func:_has_externally_shared_axis",
      "func:_remove_labels_from_axis",
      "func:create_subplots",
      "func:do_adjust_figure",
      "func:flatten_axes",
      "func:format_date_labels",
      "func:get_all_lines",
      "func:get_xlim",
      "func:handle_shared_axes",
      "func:maybe_adjust_figure",
      "func:set_ticks_props",
      "func:table"
    ],
    "old_files": [
      "tools.py_o1_mini_d6227bc0.py"
    ],
    "new_files": [
      "tools_6a9569.py"
    ]
  },
  {
    "file_signature": [
      "class:ZulipRedisError",
      "class:ZulipRedisKeyOfWrongFormatError",
      "class:ZulipRedisKeyTooLongError",
      "func:bounce_redis_key_prefix_for_testing",
      "func:get_dict_from_redis",
      "func:get_redis_client",
      "func:put_dict_in_redis",
      "func:validate_key_fits_format"
    ],
    "old_files": [
      "redis_utils.py_o1_mini_ae329a40.py"
    ],
    "new_files": [
      "redis_utils_abe297.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockRelaySwitch",
      "class:BlockSleepingMotionSwitch",
      "class:BlockSwitchDescription",
      "class:RpcRelaySwitch",
      "class:RpcScriptSwitch",
      "class:RpcSwitchDescription",
      "class:RpcVirtualSwitch",
      "func:__init__",
      "func:_update_callback",
      "func:async_setup_block_entry",
      "func:async_setup_rpc_entry",
      "func:is_on"
    ],
    "old_files": [
      "switch.py_o1_mini_b6956ac1.py"
    ],
    "new_files": [
      "switch_5474d5.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncSeeCallback",
      "class:Device",
      "class:DeviceScanner",
      "class:DeviceTracker",
      "class:DeviceTrackerPlatform",
      "class:SeeCallback",
      "func:__call__",
      "func:__init__",
      "func:_load_device_names_and_attributes",
      "func:_on_hass_stop",
      "func:async_setup_integration",
      "func:async_setup_scanner_platform",
      "func:async_update_stale",
      "func:entity_picture",
      "func:extra_state_attributes",
      "func:get_device_name",
      "func:get_extra_attributes",
      "func:get_gravatar_for_email",
      "func:icon",
      "func:mark_stale",
      "func:name",
      "func:remove_device_from_config",
      "func:scan_devices",
      "func:see",
      "func:stale",
      "func:state",
      "func:state_attributes",
      "func:type",
      "func:update_config"
    ],
    "old_files": [
      "legacy.py_o3_mini_a4564019.py"
    ],
    "new_files": [
      "legacy_d0ef53.py"
    ]
  },
  {
    "file_signature": [
      "class:CheckAttribute",
      "class:CompiledModule",
      "class:CompiledName",
      "class:CompiledValue",
      "class:CompiledValueFilter",
      "class:CompiledValueName",
      "class:EmptyCompiledName",
      "class:SignatureParamName",
      "class:UnresolvableParamName",
      "func:__call__",
      "func:__get__",
      "func:__init__",
      "func:__repr__",
      "func:_as_context",
      "func:_create_name",
      "func:_ensure_one_filter",
      "func:_execute_function",
      "func:_get",
      "func:_get_cached_name",
      "func:_get_qualified_names",
      "func:_normalize_create_args",
      "func:_parse_function_doc",
      "func:api_type",
      "func:array_type",
      "func:change_options",
      "func:create_cached_compiled_value",
      "func:create_from_access_path",
      "func:create_from_name",
      "func:execute_annotation",
      "func:execute_operation",
      "func:get",
      "func:get_defining_qualified_value",
      "func:get_filters",
      "func:get_key_values",
      "func:get_kind",
      "func:get_metaclasses",
      "func:get_param_names",
      "func:get_qualified_names",
      "func:get_safe_value",
      "func:get_signatures",
      "func:get_type_hint",
      "func:infer",
      "func:infer_compiled_value",
      "func:is_class",
      "func:is_compiled",
      "func:is_function",
      "func:is_instance",
      "func:is_module",
      "func:is_package",
      "func:is_stub",
      "func:name",
      "func:negate",
      "func:py__bases__",
      "func:py__bool__",
      "func:py__call__",
      "func:py__class__",
      "func:py__doc__",
      "func:py__file__",
      "func:py__getitem__",
      "func:py__iter__",
      "func:py__mro__",
      "func:py__name__",
      "func:py__path__",
      "func:py__simple_getitem__",
      "func:string_name",
      "func:string_names",
      "func:to_string",
      "func:values",
      "func:wrapper"
    ],
    "old_files": [
      "temp_file.py",
      "value.py_o1_mini_6a3b30ed.py"
    ],
    "new_files": [
      "value_05eb19.py"
    ]
  },
  {
    "file_signature": [
      "class:AnotherClassWithReallyLongConstructor",
      "class:ClassWithDecorator",
      "class:SomeClass",
      "class:_PrivateClass",
      "func:__init__",
      "func:_private_method",
      "func:func_with_args",
      "func:func_with_no_args",
      "func:method_with_alternative_return_section",
      "func:method_with_alternative_return_section3",
      "func:public_method_on_private_class",
      "func:some_method"
    ],
    "old_files": [
      "basic_example.py_o1_mini_81ec62eb.py"
    ],
    "new_files": [
      "basic_example_9b8645.py"
    ]
  },
  {
    "file_signature": [
      "class:InComfortClimate",
      "func:__init__",
      "func:current_temperature",
      "func:extra_state_attributes",
      "func:hvac_action",
      "func:target_temperature"
    ],
    "old_files": [
      "climate.py_o1_mini_9cd55e31.py"
    ],
    "new_files": [
      "climate_9505f4.py"
    ]
  },
  {
    "file_signature": [
      "class:Model",
      "class:ModelWithPreprocessing",
      "class:TransformBoundsWrapper",
      "func:__call__",
      "func:__init__",
      "func:_preprocess",
      "func:_process_preprocessing",
      "func:apply_axis",
      "func:bounds",
      "func:data_format",
      "func:dummy",
      "func:to_tensor",
      "func:transform_bounds"
    ],
    "old_files": [
      "base.py_o1_mini_67e6ca5f.py"
    ],
    "new_files": [
      "base_41a673.py"
    ]
  },
  {
    "file_signature": [
      "func:_clean_keys_and_objs",
      "func:_concat_indexes",
      "func:_get_concat_axis_dataframe",
      "func:_get_concat_axis_series",
      "func:_get_result",
      "func:_get_sample_object",
      "func:_make_concat_multiindex",
      "func:_sanitize_mixed_ndim",
      "func:concat",
      "func:new_axes",
      "func:validate_unique_levels"
    ],
    "old_files": [
      "concat.py_o3_mini_b116fbaa.py"
    ],
    "new_files": [
      "concat_31a224.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_last_state_changes_stmt",
      "func:_get_rows_with_session",
      "func:_get_single_entity_states_stmt",
      "func:_get_states_for_entities_stmt",
      "func:_lambda_stmt_and_join_attributes",
      "func:_significant_states_stmt",
      "func:_sorted_states_to_dict",
      "func:_state_changed_during_period_stmt",
      "func:get_full_significant_states_with_session",
      "func:get_last_state_changes",
      "func:get_significant_states",
      "func:get_significant_states_with_session",
      "func:state_changes_during_period"
    ],
    "old_files": [
      "legacy.py_o3_mini_b246523a.py"
    ],
    "new_files": [
      "legacy_583497.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseScreenshotConfig",
      "class:BotIntegration",
      "class:EmbeddedBotIntegration",
      "class:HubotIntegration",
      "class:Integration",
      "class:ScreenshotConfig",
      "class:WebhookIntegration",
      "func:__init__",
      "func:get_all_event_types_for_integration",
      "func:get_bot_avatar_path",
      "func:get_fixture_and_image_paths",
      "func:get_function",
      "func:get_logo_path",
      "func:get_logo_url",
      "func:get_translated_categories",
      "func:is_enabled",
      "func:split_fixture_path",
      "func:url_object",
      "func:view"
    ],
    "old_files": [
      "integrations.py_o1_mini_b64115f4.py"
    ],
    "new_files": [
      "integrations_55ac12.py"
    ]
  },
  {
    "file_signature": [
      "class:StrategyTestV3",
      "class:StrategyTestV3Futures",
      "func:adjust_trade_position",
      "func:bot_start",
      "func:informative_pairs",
      "func:leverage",
      "func:populate_entry_trend",
      "func:populate_exit_trend",
      "func:populate_indicators",
      "func:protections"
    ],
    "old_files": [
      "strategy_test_v3.py_o3_mini_49c159a8.py"
    ],
    "new_files": [
      "strategy_test_v3_251abc.py"
    ]
  },
  {
    "file_signature": [
      "class:TestDST",
      "func:_make_timestamp",
      "func:_test_all_offsets",
      "func:_test_offset",
      "func:get_utc_offset_hours",
      "func:test_all_offset_classes",
      "func:test_fallback_singular",
      "func:test_nontick_offset_with_ambiguous_time_error",
      "func:test_springforward_plural",
      "func:test_springforward_singular"
    ],
    "old_files": [
      "test_dst.py_o1_mini_d15dd87c.py"
    ],
    "new_files": [
      "test_dst_22fce9.py"
    ]
  },
  {
    "file_signature": [
      "class:test_Monitor",
      "func:assert_on_web_request_end",
      "func:create_monitor",
      "func:create_populated_monitor",
      "func:event",
      "func:message",
      "func:mon",
      "func:on_sample",
      "func:stream",
      "func:table",
      "func:test_TableState_asdict",
      "func:test__sample",
      "func:test_asdict",
      "func:test_init_max_assignment_latency_history",
      "func:test_init_max_assignment_latency_history__default",
      "func:test_init_max_avg_history",
      "func:test_init_max_avg_history__default",
      "func:test_init_max_commit_latency_history",
      "func:test_init_max_commit_latency_history__default",
      "func:test_init_max_send_latency_history",
      "func:test_init_max_send_latency_history__default",
      "func:test_init_rebalances",
      "func:test_on_assignment_completed",
      "func:test_on_assignment_error",
      "func:test_on_assignment_start",
      "func:test_on_commit_completed",
      "func:test_on_commit_initiated",
      "func:test_on_message_in",
      "func:test_on_message_out",
      "func:test_on_rebalance_end",
      "func:test_on_rebalance_return",
      "func:test_on_rebalance_start",
      "func:test_on_send_completed",
      "func:test_on_send_error",
      "func:test_on_send_initiated",
      "func:test_on_stream_event_in",
      "func:test_on_stream_event_out",
      "func:test_on_stream_event_out__missing_state",
      "func:test_on_table_del",
      "func:test_on_table_get",
      "func:test_on_table_set",
      "func:test_on_topic_buffer_full",
      "func:test_on_tp_commit",
      "func:test_on_web_request_end",
      "func:test_on_web_request_end__None_response",
      "func:test_on_web_request_start",
      "func:test_track_tp_end_offsets",
      "func:time",
      "func:topic"
    ],
    "old_files": [
      "test_monitor.py_o3_mini_0fe2bb6f.py"
    ],
    "new_files": [
      "test_monitor_31e01e.py"
    ]
  },
  {
    "file_signature": [
      "class:WriteBack",
      "func:_black_info",
      "func:_contains_asexpr",
      "func:_format_str_once",
      "func:assert_equivalent",
      "func:assert_stable",
      "func:check_stability_and_equivalence",
      "func:decode_bytes",
      "func:detect_target_versions",
      "func:enable_unstable_feature_callback",
      "func:format_cell",
      "func:format_file_contents",
      "func:format_file_in_place",
      "func:format_ipynb_string",
      "func:format_stdin_to_stdout",
      "func:format_str",
      "func:from_configuration",
      "func:get_features_used",
      "func:get_future_imports",
      "func:get_imports_from_children",
      "func:get_sources",
      "func:main",
      "func:nullcontext",
      "func:patched_main",
      "func:path_empty",
      "func:re_compile_maybe_verbose",
      "func:read_pyproject_toml",
      "func:reformat_code",
      "func:reformat_one",
      "func:spellcheck_pyproject_toml_keys",
      "func:target_version_option_callback",
      "func:validate_metadata",
      "func:validate_regex"
    ],
    "old_files": [
      "__init__.py_o3_mini_e23044c8.py"
    ],
    "new_files": [
      "__init___b65f90.py"
    ]
  },
  {
    "file_signature": [
      "class:ApiKeyAuth",
      "class:Client",
      "class:CustomJsonEncoder",
      "class:HTTPClient",
      "class:TokenAuth",
      "func:__call__",
      "func:__init__",
      "func:action",
      "func:default",
      "func:default_headers",
      "func:delete",
      "func:delete_alert",
      "func:get",
      "func:post",
      "func:put",
      "func:send_alert"
    ],
    "old_files": [
      "client.py_o3_mini_1a527a58.py"
    ],
    "new_files": [
      "client_8529a4.py"
    ]
  },
  {
    "file_signature": [
      "class:IrishRailTransportData",
      "class:IrishRailTransportSensor",
      "func:__init__",
      "func:_empty_train_data",
      "func:extra_state_attributes",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_o1_mini_12d1e163.py"
    ],
    "new_files": [
      "sensor_20a298.py"
    ]
  },
  {
    "file_signature": [
      "class:A",
      "func:post_convert_style",
      "func:post_handle_nopinyin",
      "func:post_pinyin",
      "func:pre_convert_style",
      "func:pre_handle_nopinyin",
      "func:test_post_convert_style_return_value",
      "func:test_post_handle_nopinyin_return_value",
      "func:test_post_pinyin_return_value_phrase_pinyin",
      "func:test_post_pinyin_return_value_single_pinyin",
      "func:test_pre_convert_style_return_value",
      "func:test_pre_handle_nopinyin_return_value"
    ],
    "old_files": [
      "test_converter.py_o1_mini_e9c33d06.py"
    ],
    "new_files": [
      "test_converter_703ec2.py"
    ]
  },
  {
    "file_signature": [
      "class:MotionEyeEntity",
      "func:__init__",
      "func:available",
      "func:device_info",
      "func:get_motioneye_entity_unique_id",
      "func:unique_id"
    ],
    "old_files": [
      "entity.py_o1_mini_5b068941.py"
    ],
    "new_files": [
      "entity_deba6b.py"
    ]
  },
  {
    "file_signature": [
      "func:_decorate_class_members_with_logs",
      "func:_get_logger",
      "func:_is_debug_enable",
      "func:_is_log_info",
      "func:_is_under_info",
      "func:_log_debug",
      "func:_log_enter_to_function",
      "func:_log_exit_of_function",
      "func:_make_decorator",
      "func:_wrapper_func",
      "func:decorator",
      "func:decorator_class",
      "func:decorator_func",
      "func:log"
    ],
    "old_files": [
      "logger_utils.py_o1_mini_240f4189.py"
    ],
    "new_files": [
      "logger_utils_ef5455.py"
    ]
  },
  {
    "file_signature": [
      "class:Project",
      "func:__init__",
      "func:__repr__",
      "func:_get_base_sys_path",
      "func:_get_config_folder_path",
      "func:_get_json_path",
      "func:_get_sys_path",
      "func:_is_django_path",
      "func:_is_potential_project",
      "func:_remove_duplicates_from_path",
      "func:_remove_imports",
      "func:_search_func",
      "func:_try_to_skip_duplicates",
      "func:complete_search",
      "func:get_default_project",
      "func:get_environment",
      "func:load",
      "func:load_unsafe_extensions",
      "func:path",
      "func:save",
      "func:search",
      "func:smart_sys_path",
      "func:sys_path",
      "func:wrapper"
    ],
    "old_files": [
      "project.py_o1_mini_e708b8cd.py"
    ],
    "new_files": [
      "project_2d0af1.py"
    ]
  },
  {
    "file_signature": [
      "class:TadoHomeSensor",
      "class:TadoSensorEntityDescription",
      "class:TadoZoneSensor",
      "func:__init__",
      "func:_handle_coordinator_update",
      "func:format_condition",
      "func:get_automatic_geofencing",
      "func:get_geofencing_mode",
      "func:get_tado_mode"
    ],
    "old_files": [
      "sensor.py_o1_mini_ff20edd2.py"
    ],
    "new_files": [
      "sensor_152d62.py"
    ]
  },
  {
    "file_signature": [
      "class:IResolver",
      "class:PathModifier",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_build_rel_location",
      "func:_get_valid_object",
      "func:_load_object",
      "func:_search_all_objects",
      "func:_search_object",
      "func:build_search_paths",
      "func:is_valid_class",
      "func:load_object",
      "func:search_all_objects"
    ],
    "old_files": [
      "iresolver.py_o1_mini_3877b365.py"
    ],
    "new_files": [
      "iresolver_51e6b1.py"
    ]
  },
  {
    "file_signature": [
      "class:TestImportExport",
      "func:_create_dashboard_for_import",
      "func:assert_dash_equals",
      "func:assert_datasource_equals",
      "func:assert_only_exported_slc_fields",
      "func:assert_slice_equals",
      "func:assert_table_equals",
      "func:clean_imports",
      "func:create_dashboard",
      "func:create_slice",
      "func:create_table",
      "func:delete_imports",
      "func:get_dash",
      "func:get_slice",
      "func:get_slice_by_name",
      "func:test_export_1_dashboard",
      "func:test_export_2_dashboards",
      "func:test_import_1_slice",
      "func:test_import_2_slices_for_same_table",
      "func:test_import_dashboard_1_slice",
      "func:test_import_dashboard_2_slices",
      "func:test_import_empty_dashboard",
      "func:test_import_new_dashboard_slice_reset_ownership",
      "func:test_import_override_dashboard_2_slices",
      "func:test_import_override_dashboard_slice_reset_ownership",
      "func:test_import_slices_override",
      "func:test_import_table_1_col_1_met",
      "func:test_import_table_2_col_2_met",
      "func:test_import_table_no_metadata",
      "func:test_import_table_override",
      "func:test_import_table_override_identical"
    ],
    "old_files": [
      "import_export_tests.py_o1_mini_faca9124.py"
    ],
    "new_files": [
      "import_export_tests_dc500f.py"
    ]
  },
  {
    "file_signature": [
      "class:AccessLoggerWrapper",
      "class:PayloadAccessError",
      "class:RequestHandler",
      "class:RequestPayloadError",
      "class:_ErrInfo",
      "func:__init__",
      "func:__repr__",
      "func:_make_error_handler",
      "func:_process_keepalive",
      "func:close",
      "func:connection_lost",
      "func:connection_made",
      "func:data_received",
      "func:enabled",
      "func:eof_received",
      "func:force_close",
      "func:handle_error",
      "func:keep_alive",
      "func:keepalive_timeout",
      "func:log_debug",
      "func:log_exception",
      "func:set_parser"
    ],
    "old_files": [
      "web_protocol.py_o3_mini_4cc42b10.py"
    ],
    "new_files": [
      "web_protocol_b74f41.py"
    ]
  },
  {
    "file_signature": [
      "func:CompareMethod",
      "func:EqMethod",
      "func:Function",
      "func:GeMethod",
      "func:GtMethod",
      "func:HashMethod",
      "func:InitMethod",
      "func:LeMethod",
      "func:LtMethod",
      "func:Method",
      "func:NeMethod",
      "func:build_closure",
      "func:build_closure_source",
      "func:build_function",
      "func:build_function_source",
      "func:obj_attrs_tuple",
      "func:reprcall",
      "func:reprkwargs"
    ],
    "old_files": [
      "codegen.py_o1_mini_a45badd3.py"
    ],
    "new_files": [
      "codegen_d06b21.py"
    ]
  },
  {
    "file_signature": [
      "class:EvalbBracketingScorerTest",
      "func:multiple_runs",
      "func:setup_method",
      "func:tearDown",
      "func:test_distributed_evalb",
      "func:test_evalb_correctly_calculates_bracketing_metrics_over_multiple_trees",
      "func:test_evalb_correctly_scores_identical_trees",
      "func:test_evalb_correctly_scores_imperfect_trees",
      "func:test_evalb_with_terrible_trees_handles_nan_f1",
      "func:test_multiple_distributed_runs"
    ],
    "old_files": [
      "evalb_bracketing_scorer_test.py_o1_mini_12a3ec63.py"
    ],
    "new_files": [
      "evalb_bracketing_scorer_test_a77d39.py"
    ]
  },
  {
    "file_signature": [
      "class:Decoder",
      "class:TransformerDecoder",
      "func:__init__",
      "func:decode_seq",
      "func:forward",
      "func:get_decoder",
      "func:get_num_hidden",
      "func:init_state_from_encoder",
      "func:register",
      "func:set_inference_only",
      "func:state_structure",
      "func:wrapper"
    ],
    "old_files": [
      "decoder.py_o1_mini_b90fbe5f.py"
    ],
    "new_files": [
      "decoder_5a1e74.py"
    ]
  },
  {
    "file_signature": [
      "class:ActorT",
      "class:AgentManagerT",
      "class:AgentT",
      "class:AgentTestWrapperT",
      "class:AsyncIterableActorT",
      "class:AwaitableActorT",
      "class:_AppT",
      "func:__call__",
      "func:__init__",
      "func:_agent_label",
      "func:actor_tracebacks",
      "func:add_sink",
      "func:cancel",
      "func:channel",
      "func:channel_iterator",
      "func:clone",
      "func:get_topic_names",
      "func:human_tracebacks",
      "func:info",
      "func:stream",
      "func:test_context",
      "func:to_message",
      "func:traceback"
    ],
    "old_files": [
      "agents.py_o3_mini_7fcf219e.py"
    ],
    "new_files": [
      "agents_3f7d1d.py"
    ]
  },
  {
    "file_signature": [
      "class:SonosMediaPlayerEntity",
      "func:__hash__",
      "func:__init__",
      "func:_play_favorite",
      "func:_play_favorite_by_name",
      "func:_play_media",
      "func:_play_media_queue",
      "func:_update",
      "func:async_create_entities",
      "func:async_write_media_state",
      "func:available",
      "func:clear_playlist",
      "func:clear_sleep_timer",
      "func:coordinator",
      "func:extra_state_attributes",
      "func:get_queue",
      "func:group_members",
      "func:is_volume_muted",
      "func:media",
      "func:media_album_name",
      "func:media_artist",
      "func:media_channel",
      "func:media_content_id",
      "func:media_duration",
      "func:media_image_url",
      "func:media_next_track",
      "func:media_pause",
      "func:media_play",
      "func:media_playlist",
      "func:media_position",
      "func:media_position_updated_at",
      "func:media_previous_track",
      "func:media_seek",
      "func:media_stop",
      "func:media_title",
      "func:mute_volume",
      "func:play_queue",
      "func:remove_from_queue",
      "func:repeat",
      "func:select_source",
      "func:set_alarm",
      "func:set_repeat",
      "func:set_shuffle",
      "func:set_sleep_timer",
      "func:set_volume_level",
      "func:shuffle",
      "func:source",
      "func:source_list",
      "func:state",
      "func:volume_down",
      "func:volume_level",
      "func:volume_up"
    ],
    "old_files": [
      "media_player.py_o1_mini_f9147e0c.py"
    ],
    "new_files": [
      "media_player_b4a5f5.py"
    ]
  },
  {
    "file_signature": [
      "class:TestFeather",
      "func:check_error_on_write",
      "func:check_external_error_on_write",
      "func:check_round_trip",
      "func:test_basic",
      "func:test_duplicate_columns",
      "func:test_error",
      "func:test_http_path",
      "func:test_int_columns_and_index",
      "func:test_invalid_dtype_backend",
      "func:test_out_of_bounds_datetime_to_feather",
      "func:test_passthrough_keywords",
      "func:test_path_pathlib",
      "func:test_read_columns",
      "func:test_read_columns_different_order",
      "func:test_read_feather_dtype_backend",
      "func:test_rw_use_threads",
      "func:test_string_inference",
      "func:test_string_inference_string_view_type",
      "func:test_unsupported_other"
    ],
    "old_files": [
      "test_feather.py_o1_mini_8185cc8e.py"
    ],
    "new_files": [
      "test_feather_09566a.py"
    ]
  },
  {
    "file_signature": [
      "class:Flags",
      "class:NestedDict",
      "class:Output",
      "class:TOMLDecodeError",
      "func:__init__",
      "func:append_nest_to_list",
      "func:coord_repr",
      "func:create_dict_rule",
      "func:create_list_rule",
      "func:get_or_create_nest",
      "func:is_",
      "func:is_unicode_scalar_value",
      "func:key_value_rule",
      "func:load",
      "func:loads",
      "func:parse_array",
      "func:parse_basic_str",
      "func:parse_basic_str_escape",
      "func:parse_basic_str_escape_multiline",
      "func:parse_hex_char",
      "func:parse_inline_table",
      "func:parse_key",
      "func:parse_key_part",
      "func:parse_key_value_pair",
      "func:parse_literal_str",
      "func:parse_multiline_str",
      "func:parse_one_line_basic_str",
      "func:parse_value",
      "func:set",
      "func:set_for_relative_key",
      "func:skip_chars",
      "func:skip_comment",
      "func:skip_comments_and_array_ws",
      "func:skip_until",
      "func:suffixed_err",
      "func:unset_all"
    ],
    "old_files": [
      "_parser.py_o1_mini_187c4b71.py"
    ],
    "new_files": [
      "_parser_ad554d.py"
    ]
  },
  {
    "file_signature": [
      "class:SensiboDeviceBinarySensorEntityDescription",
      "class:SensiboDeviceSensor",
      "class:SensiboMotionBinarySensorEntityDescription",
      "class:SensiboMotionSensor",
      "func:__init__",
      "func:_add_remove_devices",
      "func:is_on"
    ],
    "old_files": [
      "binary_sensor.py_o1_mini_c19b27d0.py"
    ],
    "new_files": [
      "binary_sensor_b660c7.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoLight",
      "func:__init__",
      "func:available",
      "func:brightness",
      "func:color_mode",
      "func:color_temp_kelvin",
      "func:effect",
      "func:effect_list",
      "func:hs_color",
      "func:is_on",
      "func:rgbw_color",
      "func:rgbww_color",
      "func:supported_color_modes",
      "func:unique_id"
    ],
    "old_files": [
      "light.py_o3_mini_d56e7802.py"
    ],
    "new_files": [
      "light_41b89c.py"
    ]
  },
  {
    "file_signature": [
      "class:TestSeriesCumulativeOps",
      "func:test_cum_methods_pyarrow_strings",
      "func:test_cummax_cummin_on_ordered_categorical",
      "func:test_cummax_cummin_ordered_categorical_nan",
      "func:test_cummethods_bool",
      "func:test_cummethods_bool_in_object_dtype",
      "func:test_cummin_cummax",
      "func:test_cummin_cummax_datetimelike",
      "func:test_cummin_cummax_period",
      "func:test_cumprod_pyarrow_strings",
      "func:test_cumprod_timedelta",
      "func:test_cumsum_datetimelike",
      "func:test_datetime_series"
    ],
    "old_files": [
      "test_cumulative.py_o1_mini_ebaa2a0a.py"
    ],
    "new_files": [
      "test_cumulative_8df6e0.py"
    ]
  },
  {
    "file_signature": [
      "class:InternalServerError",
      "class:SmokeTestApplication",
      "func:__init__",
      "func:_assert_contains_access_control_allow_methods",
      "func:_create_wrapped_retry_function",
      "func:_delete_app",
      "func:_deploy_app",
      "func:_deploy_with_retries",
      "func:_get_error_code_from_exception",
      "func:_get_json",
      "func:_get_resource_id",
      "func:_inject_app_name",
      "func:_send_request",
      "func:_wait_for_stablize",
      "func:_wrapped_with_retry",
      "func:apig_client",
      "func:get_json",
      "func:get_response",
      "func:options_response",
      "func:post_response",
      "func:put_response",
      "func:redeploy_once",
      "func:rest_api_id",
      "func:retry",
      "func:smoke_test_app",
      "func:test_api_key_required_fails_with_no_key",
      "func:test_can_handle_charset",
      "func:test_can_have_nested_routes",
      "func:test_can_raise_bad_request",
      "func:test_can_raise_not_found",
      "func:test_can_read_json_body_on_post",
      "func:test_can_return_default_binary_data_to_a_browser",
      "func:test_can_round_trip_binary",
      "func:test_can_round_trip_binary_custom_content_type",
      "func:test_can_route_multiple_methods_in_one_view",
      "func:test_can_support_cors",
      "func:test_can_support_custom_cors",
      "func:test_can_use_builtin_custom_auth",
      "func:test_can_use_shared_auth",
      "func:test_custom_response",
      "func:test_empty_raw_body",
      "func:test_form_encoded_content_type",
      "func:test_multi_doc_mapped_in_api",
      "func:test_multifile_support",
      "func:test_path_params_mapped_in_api",
      "func:test_redeploy_change_route_info",
      "func:test_redeploy_changed_function",
      "func:test_redeploy_new_function",
      "func:test_redeploy_no_change_view",
      "func:test_redeploy_view_deleted",
      "func:test_returns_simple_response",
      "func:test_single_doc_mapped_in_api",
      "func:test_supports_path_params",
      "func:test_supports_post",
      "func:test_supports_put",
      "func:test_supports_shared_routes",
      "func:test_to_dict_is_also_json_serializable",
      "func:test_unexpected_error_raises_500_in_prod_mode",
      "func:test_websocket_lifecycle",
      "func:url",
      "func:websocket_api_id",
      "func:websocket_connect_url"
    ],
    "old_files": [
      "test_features.py_o1_mini_6df2353e.py"
    ],
    "new_files": [
      "test_features_a57fa5.py"
    ]
  },
  {
    "file_signature": [
      "func:add_mock_attestations",
      "func:finalize_on_12",
      "func:finalize_on_123",
      "func:finalize_on_23",
      "func:finalize_on_234",
      "func:get_checkpoints",
      "func:put_checkpoints_in_block_roots",
      "func:run_process_just_and_fin",
      "func:test_123_ok_support",
      "func:test_123_poor_support",
      "func:test_12_ok_support",
      "func:test_12_ok_support_messed_target",
      "func:test_12_poor_support",
      "func:test_234_ok_support",
      "func:test_234_poor_support",
      "func:test_23_ok_support",
      "func:test_23_poor_support",
      "func:test_balance_threshold_with_exited_validators"
    ],
    "old_files": [
      "test_process_justification_and_finalization.py_o1_mini_5ded0881.py"
    ],
    "new_files": [
      "test_process_justification_and_finalization_fc33da.py"
    ]
  },
  {
    "file_signature": [
      "class:DataProvider",
      "func:__init__",
      "func:_add_external_df",
      "func:_emit_df",
      "func:_replace_external_df",
      "func:_set_cached_df",
      "func:_set_dataframe_max_date",
      "func:_set_dataframe_max_index",
      "func:_set_producer_pairs",
      "func:add_pairlisthandler",
      "func:available_pairs",
      "func:clear_cache",
      "func:current_whitelist",
      "func:get_analyzed_dataframe",
      "func:get_pair_dataframe",
      "func:get_producer_df",
      "func:get_producer_pairs",
      "func:get_required_startup",
      "func:historic_ohlcv",
      "func:market",
      "func:ohlcv",
      "func:orderbook",
      "func:refresh",
      "func:refresh_latest_trades",
      "func:runmode",
      "func:send_msg",
      "func:ticker",
      "func:trades"
    ],
    "old_files": [
      "dataprovider.py_o1_mini_db0d12a8.py"
    ],
    "new_files": [
      "dataprovider_a0d211.py"
    ]
  },
  {
    "file_signature": [
      "class:Base64VlqConverter",
      "class:SourceMapper",
      "func:__init__",
      "func:cascadeAndSaveMiniMap",
      "func:decode",
      "func:dumpDeltaMap",
      "func:dumpMap",
      "func:encode",
      "func:generateAndSavePrettyMap",
      "func:generateMultilevelMap",
      "func:getCascadedMapping",
      "func:loadShrinkMap",
      "func:save"
    ],
    "old_files": [
      "sourcemaps.py_o1_mini_938a58a8.py"
    ],
    "new_files": [
      "sourcemaps_0942d0.py"
    ]
  },
  {
    "file_signature": [
      "class:XueQiuFollower",
      "func:__init__",
      "func:_adjust_sell_amount",
      "func:_get_portfolio_info",
      "func:_get_portfolio_net_value",
      "func:calculate_assets",
      "func:create_query_transaction_params",
      "func:extract_strategy_id",
      "func:extract_strategy_name",
      "func:extract_transactions",
      "func:follow",
      "func:login",
      "func:none_to_zero",
      "func:project_transactions"
    ],
    "old_files": [
      "xq_follower.py_o1_mini_cbbc76a8.py"
    ],
    "new_files": [
      "xq_follower_0c252a.py"
    ]
  },
  {
    "file_signature": [
      "class:GenericThermostat",
      "func:__init__",
      "func:_async_startup",
      "func:_async_switch_changed",
      "func:_async_update_temp",
      "func:_is_device_active",
      "func:current_temperature",
      "func:hvac_action",
      "func:hvac_mode",
      "func:max_temp",
      "func:min_temp",
      "func:precision",
      "func:target_temperature",
      "func:target_temperature_step"
    ],
    "old_files": [
      "climate.py_o3_mini_e4d16686.py"
    ],
    "new_files": [
      "climate_588757.py"
    ]
  },
  {
    "file_signature": [
      "class:ErrorFinder",
      "class:ErrorFinderConfig",
      "class:IndentationRule",
      "class:SyntaxRule",
      "class:_AnnotatorRule",
      "class:_ArglistRule",
      "class:_ArgumentRule",
      "class:_AwaitOutsideAsync",
      "class:_BreakOutsideLoop",
      "class:_BytesAndStringMix",
      "class:_CheckAssignmentRule",
      "class:_CompForRule",
      "class:_Context",
      "class:_ContinueChecks",
      "class:_DelStmtRule",
      "class:_ExpectIndentedBlock",
      "class:_ExprListRule",
      "class:_ExprStmtRule",
      "class:_FStringRule",
      "class:_ForStmtRule",
      "class:_FutureImportRule",
      "class:_ImportStarInFunction",
      "class:_InvalidSyntaxRule",
      "class:_NameChecks",
      "class:_NamedExprRule",
      "class:_NonlocalModuleLevelRule",
      "class:_ParameterRule",
      "class:_ReturnAndYieldChecks",
      "class:_StarCheck",
      "class:_StarExprParentRule",
      "class:_StarExprRule",
      "class:_StarStarCheck",
      "class:_StringChecks",
      "class:_TrailingImportComma",
      "class:_TryStmtRule",
      "class:_WithItemRule",
      "class:_YieldFromCheck",
      "func:__init__",
      "func:_add_indentation_error",
      "func:_add_syntax_error",
      "func:_analyze_names",
      "func:_any_fstring_error",
      "func:_check_assignment",
      "func:_check_format_spec",
      "func:_check_fstring_contents",
      "func:_check_fstring_expr",
      "func:_get_comprehension_type",
      "func:_get_expr_stmt_definition_exprs",
      "func:_get_for_stmt_definition_exprs",
      "func:_get_message",
      "func:_get_rhs_name",
      "func:_is_argument_comprehension",
      "func:_is_bytes_literal",
      "func:_is_future_import",
      "func:_is_future_import_first",
      "func:_iter_definition_exprs_from_lists",
      "func:_iter_params",
      "func:_iter_stmts",
      "func:_remove_parens",
      "func:_skip_parens_bottom_up",
      "func:add_block",
      "func:add_context",
      "func:add_issue",
      "func:add_name",
      "func:check_delete_starred",
      "func:check_expr",
      "func:close_child_context",
      "func:create_context",
      "func:finalize",
      "func:get_error_node",
      "func:get_node",
      "func:initialize",
      "func:is_async_funcdef",
      "func:is_definition",
      "func:is_function",
      "func:is_issue",
      "func:message",
      "func:process_comp_for",
      "func:raise_",
      "func:search_all_comp_ancestors",
      "func:search_namedexpr_in_comp_for",
      "func:visit",
      "func:visit_leaf",
      "func:visit_node"
    ],
    "old_files": [
      "errors.py_o1_mini_cba819bf.py"
    ],
    "new_files": [
      "errors_7ed27c.py"
    ]
  },
  {
    "file_signature": [
      "class:PushsaferNotificationService",
      "func:__init__",
      "func:get_base64",
      "func:get_service",
      "func:load_from_file",
      "func:load_from_url",
      "func:send_message"
    ],
    "old_files": [
      "notify.py_o1_mini_e9e02ff6.py"
    ],
    "new_files": [
      "notify_b3032a.py"
    ]
  },
  {
    "file_signature": [
      "class:RootModel",
      "class:_RootModelMetaclass",
      "func:__copy__",
      "func:__deepcopy__",
      "func:__eq__",
      "func:__getstate__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__repr_args__",
      "func:__setstate__",
      "func:model_construct",
      "func:model_dump"
    ],
    "old_files": [
      "root_model.py_o3_mini_5117385a.py"
    ],
    "new_files": [
      "root_model_c9296c.py"
    ]
  },
  {
    "file_signature": [
      "class:Settings",
      "class:_WorkerT",
      "func:Agent",
      "func:ConsumerScheduler",
      "func:Event",
      "func:GlobalTable",
      "func:HttpClient",
      "func:LeaderAssignor",
      "func:MY_SETTING",
      "func:Monitor",
      "func:PartitionAssignor",
      "func:Router",
      "func:Schema",
      "func:Serializers",
      "func:SetGlobalTable",
      "func:SetTable",
      "func:Stream",
      "func:Table",
      "func:TableManager",
      "func:Topic",
      "func:Worker",
      "func:__init__",
      "func:__repr__",
      "func:_init_env_prefix",
      "func:_prepare_broker",
      "func:_prepare_datadir",
      "func:_prepare_id",
      "func:_prepare_producer_linger",
      "func:_prepare_reply_to_default",
      "func:_prepare_tabledir",
      "func:agent_supervisor",
      "func:appdir",
      "func:autodiscover",
      "func:blocking_timeout",
      "func:broker",
      "func:broker_api_version",
      "func:broker_check_crcs",
      "func:broker_client_id",
      "func:broker_commit_every",
      "func:broker_commit_interval",
      "func:broker_commit_livelock_soft_timeout",
      "func:broker_consumer",
      "func:broker_credentials",
      "func:broker_heartbeat_interval",
      "func:broker_max_poll_interval",
      "func:broker_max_poll_records",
      "func:broker_producer",
      "func:broker_rebalance_timeout",
      "func:broker_request_timeout",
      "func:broker_session_timeout",
      "func:cache",
      "func:canonical_url",
      "func:consumer_api_version",
      "func:consumer_auto_offset_reset",
      "func:consumer_group_instance_id",
      "func:consumer_max_fetch_size",
      "func:data_directory_for_version",
      "func:datadir",
      "func:debug",
      "func:env_prefix",
      "func:find_old_versiondirs",
      "func:getenv",
      "func:id",
      "func:id_format",
      "func:key_serializer",
      "func:logging_config",
      "func:loghandlers",
      "func:name",
      "func:on_init",
      "func:origin",
      "func:processing_guarantee",
      "func:producer_acks",
      "func:producer_api_version",
      "func:producer_compression_type",
      "func:producer_linger",
      "func:producer_linger_ms",
      "func:producer_max_batch_size",
      "func:producer_max_request_size",
      "func:producer_partitioner",
      "func:producer_request_timeout",
      "func:relative_to_appdir",
      "func:reply_create_topic",
      "func:reply_expires",
      "func:reply_to",
      "func:reply_to_prefix",
      "func:ssl_context",
      "func:store",
      "func:stream_ack_cancelled_tasks",
      "func:stream_ack_exceptions",
      "func:stream_buffer_maxsize",
      "func:stream_processing_timeout",
      "func:stream_publish_on_commit",
      "func:stream_recovery_delay",
      "func:stream_wait_empty",
      "func:table_cleanup_interval",
      "func:table_key_index_size",
      "func:table_standby_replicas",
      "func:tabledir",
      "func:timezone",
      "func:topic_allow_declare",
      "func:topic_disable_leader",
      "func:topic_partitions",
      "func:topic_replication_factor",
      "func:url",
      "func:value_serializer",
      "func:version",
      "func:web",
      "func:web_bind",
      "func:web_cors_options",
      "func:web_enabled",
      "func:web_host",
      "func:web_in_thread",
      "func:web_port",
      "func:web_transport",
      "func:worker_redirect_stdouts",
      "func:worker_redirect_stdouts_level"
    ],
    "old_files": [
      "settings.py_o3_mini_ce5a6ab4.py"
    ],
    "new_files": [
      "settings_902e0a.py"
    ]
  },
  {
    "file_signature": [
      "class:AdsCover",
      "func:__init__",
      "func:available",
      "func:close_cover",
      "func:current_cover_position",
      "func:is_closed",
      "func:open_cover",
      "func:set_cover_position",
      "func:setup_platform",
      "func:stop_cover"
    ],
    "old_files": [
      "cover.py_o1_mini_b6c0275f.py"
    ],
    "new_files": [
      "cover_1e7e0c.py"
    ]
  },
  {
    "file_signature": [
      "func:controller",
      "func:controller_water_use_summary",
      "func:mock_auth",
      "func:mock_config_entry",
      "func:mock_config_entry_legacy",
      "func:mock_legacy_pydrawise",
      "func:mock_pydrawise",
      "func:mock_setup_entry",
      "func:sensors",
      "func:user",
      "func:zones"
    ],
    "old_files": [
      "conftest.py_o1_mini_d36a556c.py"
    ],
    "new_files": [
      "conftest_bc6db5.py"
    ]
  },
  {
    "file_signature": [
      "class:BufferingFormatter",
      "class:ConsoleLogStream",
      "class:FileHandler",
      "class:Filter",
      "class:Filterer",
      "class:Formatter",
      "class:Handler",
      "class:LogRecord",
      "class:Logger",
      "class:LoggerAdapter",
      "class:Manager",
      "class:NullHandler",
      "class:PercentStyle",
      "class:PlaceHolder",
      "class:RootLogger",
      "class:StrFormatStyle",
      "class:StreamHandler",
      "class:StringTemplateStyle",
      "class:_StderrHandler",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:_acquireLock",
      "func:_addHandlerRef",
      "func:_checkLevel",
      "func:_fixupChildren",
      "func:_fixupParents",
      "func:_getStream",
      "func:_log",
      "func:_releaseLock",
      "func:_removeHandlerRef",
      "func:_resetLogging",
      "func:_showwarning",
      "func:acquire",
      "func:addFilter",
      "func:addHandler",
      "func:addLevelName",
      "func:append",
      "func:basicConfig",
      "func:callHandlers",
      "func:captureWarnings",
      "func:close",
      "func:createLock",
      "func:critical",
      "func:currentframe",
      "func:debug",
      "func:disable",
      "func:emit",
      "func:error",
      "func:exception",
      "func:filter",
      "func:findCaller",
      "func:flush",
      "func:format",
      "func:formatException",
      "func:formatFooter",
      "func:formatHeader",
      "func:formatMessage",
      "func:formatStack",
      "func:formatTime",
      "func:getChild",
      "func:getEffectiveLevel",
      "func:getLevelName",
      "func:getLogRecordFactory",
      "func:getLogger",
      "func:getLoggerClass",
      "func:getMessage",
      "func:get_name",
      "func:handle",
      "func:handleError",
      "func:hasHandlers",
      "func:info",
      "func:isEnabledFor",
      "func:log",
      "func:makeLogRecord",
      "func:makeRecord",
      "func:process",
      "func:release",
      "func:removeFilter",
      "func:removeHandler",
      "func:setFormatter",
      "func:setLevel",
      "func:setLogRecordFactory",
      "func:setLoggerClass",
      "func:set_name",
      "func:shutdown",
      "func:toDict",
      "func:usesTime",
      "func:warn",
      "func:warning",
      "func:write"
    ],
    "old_files": [
      "__init__.py_o3_mini_13fc3f16.py"
    ],
    "new_files": [
      "__init___892eae.py"
    ]
  },
  {
    "file_signature": [
      "class:TopicT",
      "class:_AppT",
      "class:_ModelArg",
      "class:_SchemaT",
      "func:__init__",
      "func:derive",
      "func:derive_topic",
      "func:partitions",
      "func:pattern"
    ],
    "old_files": [
      "topics.py_o3_mini_f327fa7b.py"
    ],
    "new_files": [
      "topics_fc6164.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockingResolver",
      "class:DefaultExecutorResolver",
      "class:DefaultLoopResolver",
      "class:ExecutorResolver",
      "class:OverrideResolver",
      "class:Resolver",
      "class:ThreadedResolver",
      "func:_create_threadpool",
      "func:_resolve_addr",
      "func:accept_handler",
      "func:add_accept_handler",
      "func:bind_sockets",
      "func:bind_unix_socket",
      "func:close",
      "func:configurable_base",
      "func:configurable_default",
      "func:initialize",
      "func:is_valid_ip",
      "func:remove_handler",
      "func:resolve",
      "func:ssl_options_to_context",
      "func:ssl_wrap_socket"
    ],
    "old_files": [
      "netutil.py_o1_mini_19142369.py"
    ],
    "new_files": [
      "netutil_1c2f9b.py"
    ]
  },
  {
    "file_signature": [
      "class:TestOperations",
      "func:dbt_profile_data",
      "func:macros",
      "func:models",
      "func:run_operation",
      "func:test_access_graph",
      "func:test_cannot_connect",
      "func:test_macro_args",
      "func:test_macro_exception",
      "func:test_macro_missing",
      "func:test_macro_noargs",
      "func:test_print",
      "func:test_run_operation_local_macro",
      "func:test_select",
      "func:test_vacuum",
      "func:test_vacuum_ref"
    ],
    "old_files": [
      "test_run_operations.py_o1_mini_cef6908a.py"
    ],
    "new_files": [
      "test_run_operations_c6edf5.py"
    ]
  },
  {
    "file_signature": [
      "func:_call_initvar",
      "func:create_dataclass",
      "func:dataclass",
      "func:is_pydantic_dataclass",
      "func:make_pydantic_fields_compatible",
      "func:rebuild_dataclass"
    ],
    "old_files": [
      "dataclasses.py_o3_mini_f70d3a68.py"
    ],
    "new_files": [
      "dataclasses_968ced.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseCall",
      "class:Call",
      "class:CallByzantium",
      "class:CallCode",
      "class:CallCodeEIP150",
      "class:CallEIP150",
      "class:CallEIP161",
      "class:DelegateCall",
      "class:DelegateCallEIP150",
      "class:StaticCall",
      "func:__call__",
      "func:compute_eip150_msg_gas",
      "func:compute_msg_extra_gas",
      "func:compute_msg_gas",
      "func:get_account_load_fee",
      "func:get_call_params",
      "func:max_child_gas_eip150"
    ],
    "old_files": [
      "call.py_o1_mini_0cbb2796.py"
    ],
    "new_files": [
      "call_824067.py"
    ]
  },
  {
    "file_signature": [
      "class:Runnable",
      "func:__bool__",
      "func:__init__",
      "func:_run",
      "func:_schedule_new_greenlet",
      "func:is_running",
      "func:on_error",
      "func:on_success",
      "func:rawlink",
      "func:start",
      "func:stop"
    ],
    "old_files": [
      "runnable.py_o1_mini_2f8337f9.py"
    ],
    "new_files": [
      "runnable_108c88.py"
    ]
  },
  {
    "file_signature": [
      "class:PretrainedTransformerEmbedder",
      "func:__init__",
      "func:_fold_long_sequences",
      "func:_number_of_token_type_embeddings",
      "func:_unfold_long_sequences",
      "func:fold",
      "func:forward",
      "func:get_output_dim",
      "func:lengths_to_mask",
      "func:train"
    ],
    "old_files": [
      "pretrained_transformer_embedder.py_o3_mini_193bb568.py"
    ],
    "new_files": [
      "pretrained_transformer_embedder_dde022.py"
    ]
  },
  {
    "file_signature": [
      "func:_one_pos_required_arg_one_optional",
      "func:_three_pos_required_args",
      "func:_two_pos_required_args",
      "func:_two_pos_required_args_extra_optional",
      "func:serializer",
      "func:test_inspect_annotated_serializer",
      "func:test_inspect_annotated_serializer_invalid_number_of_arguments",
      "func:test_inspect_validator",
      "func:test_inspect_validator_error",
      "func:test_inspect_validator_error_wrap",
      "func:validator",
      "func:validator1",
      "func:validator3",
      "func:validator4"
    ],
    "old_files": [
      "test_decorators.py_o1_mini_065626f4.py"
    ],
    "new_files": [
      "test_decorators_98d50d.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncResponse",
      "class:PreparedRequest",
      "class:Request",
      "class:RequestEncodingMixin",
      "class:RequestHooksMixin",
      "class:Response",
      "func:__enter__",
      "func:__exit__",
      "func:__getstate__",
      "func:__init__",
      "func:__iter__",
      "func:__repr__",
      "func:__setstate__",
      "func:_encode_files",
      "func:_encode_params",
      "func:_get_idna_encoded_host",
      "func:apparent_encoding",
      "func:close",
      "func:content",
      "func:copy",
      "func:deregister_hook",
      "func:generate",
      "func:is_permanent_redirect",
      "func:is_redirect",
      "func:iter_content",
      "func:iter_lines",
      "func:json",
      "func:links",
      "func:next",
      "func:ok",
      "func:path_url",
      "func:prepare",
      "func:prepare_auth",
      "func:prepare_body",
      "func:prepare_content_length",
      "func:prepare_cookies",
      "func:prepare_headers",
      "func:prepare_hooks",
      "func:prepare_method",
      "func:prepare_url",
      "func:raise_for_status",
      "func:register_hook",
      "func:send",
      "func:text",
      "func:uri"
    ],
    "old_files": [
      "http_models.py_o3_mini_cc140ed5.py"
    ],
    "new_files": [
      "http_models_d4e52a.py"
    ]
  },
  {
    "file_signature": [
      "class:FrameParser",
      "class:FrameWriter",
      "class:JSONTableWriter",
      "class:JsonReader",
      "class:Parser",
      "class:SeriesParser",
      "class:SeriesWriter",
      "class:Writer",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:_combine_lines",
      "func:_convert_axes",
      "func:_format_axes",
      "func:_get_data_from_filepath",
      "func:_get_object_parser",
      "func:_parse",
      "func:_should_convert_dates",
      "func:_try_convert_data",
      "func:_try_convert_to_date",
      "func:_try_convert_types",
      "func:check_keys_split",
      "func:close",
      "func:obj_to_write",
      "func:parse",
      "func:read",
      "func:read_json",
      "func:to_json",
      "func:write"
    ],
    "old_files": [
      "_json.py_o3_mini_09ea9ba0.py"
    ],
    "new_files": [
      "_json_57f411.py"
    ]
  },
  {
    "file_signature": [
      "class:BalanceProof",
      "func:__init__",
      "func:balance_hash",
      "func:hash_balance_data",
      "func:serialize_bin"
    ],
    "old_files": [
      "__init__.py_o1_mini_bfd62efe.py"
    ],
    "new_files": [
      "__init___81f696.py"
    ]
  },
  {
    "file_signature": [
      "class:MacroNamespace",
      "class:MacroNamespaceBuilder",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_add_macro_to",
      "func:_keys",
      "func:_search_order",
      "func:add_macro",
      "func:add_macros",
      "func:build_namespace",
      "func:get_from_package"
    ],
    "old_files": [
      "macros.py_o1_mini_6497df06.py"
    ],
    "new_files": [
      "macros_10e8dd.py"
    ]
  },
  {
    "file_signature": [
      "class:CallTraceRow",
      "func:__eq__",
      "func:__init__",
      "func:arg_types_from_json",
      "func:arg_types_to_json",
      "func:from_trace",
      "func:maybe_decode_type",
      "func:maybe_encode_type",
      "func:serialize_traces",
      "func:to_trace",
      "func:type_from_dict",
      "func:type_from_json",
      "func:type_to_dict",
      "func:type_to_json",
      "func:typed_dict_from_dict",
      "func:typed_dict_to_dict"
    ],
    "old_files": [
      "encoding.py_o1_mini_632614ee.py"
    ],
    "new_files": [
      "encoding_93b3e1.py"
    ]
  },
  {
    "file_signature": [
      "class:Benchmark",
      "func:__init__",
      "func:create_benchmark_agent",
      "func:create_produce_command",
      "func:generate_values",
      "func:install",
      "func:on_published"
    ],
    "old_files": [
      "base.py_o1_mini_c6d6bede.py"
    ],
    "new_files": [
      "base_ef8405.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseDeployStep",
      "class:BuildStage",
      "class:ChaliceDeploymentError",
      "class:Deployer",
      "class:DeploymentPackager",
      "class:DeploymentReporter",
      "class:InjectDefaults",
      "class:LambdaEventSourcePolicyInjector",
      "class:ManagedLayerDeploymentPackager",
      "class:NoopResultsRecorder",
      "class:PolicyGenerator",
      "class:ResultsRecorder",
      "class:SwaggerBuilder",
      "class:WebsocketPolicyInjector",
      "func:__init__",
      "func:_create_deployer",
      "func:_default_report",
      "func:_deploy",
      "func:_get_error_location",
      "func:_get_error_message",
      "func:_get_error_message_for_connection_error",
      "func:_get_error_suggestion",
      "func:_get_mb",
      "func:_get_verb_from_client_method",
      "func:_inject_into_function",
      "func:_inject_policy",
      "func:_inject_trigger_policy",
      "func:_needs_policy_injected",
      "func:_read_document_from_file",
      "func:_report_domain_name",
      "func:_report_lambda_function",
      "func:_report_lambda_layer",
      "func:_report_rest_api",
      "func:_report_websocket_api",
      "func:_validate_config",
      "func:_wrap_text",
      "func:create_build_stage",
      "func:create_default_deployer",
      "func:create_deletion_deployer",
      "func:create_plan_only_deployer",
      "func:deploy",
      "func:display_report",
      "func:execute",
      "func:generate_report",
      "func:handle",
      "func:handle_autogeniampolicy",
      "func:handle_deploymentpackage",
      "func:handle_domainname",
      "func:handle_dynamodbeventsource",
      "func:handle_filebasediampolicy",
      "func:handle_kinesiseventsource",
      "func:handle_lambdafunction",
      "func:handle_lambdalayer",
      "func:handle_restapi",
      "func:handle_sqseventsource",
      "func:handle_websocketapi",
      "func:record_results"
    ],
    "old_files": [
      "deployer.py_o1_mini_4d988565.py"
    ],
    "new_files": [
      "deployer_c2beb1.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncHTTPSession",
      "class:HTTPSession",
      "class:SessionRedirectMixin",
      "func:__enter__",
      "func:__exit__",
      "func:__getstate__",
      "func:__init__",
      "func:__setstate__",
      "func:close",
      "func:get",
      "func:get_adapter",
      "func:get_redirect_target",
      "func:head",
      "func:merge_environment_settings",
      "func:merge_hooks",
      "func:merge_setting",
      "func:mount",
      "func:prepare_request",
      "func:rebuild_auth",
      "func:rebuild_method",
      "func:rebuild_proxies",
      "func:request",
      "func:resolve_redirects",
      "func:send"
    ],
    "old_files": [
      "http_sessions.py_o3_mini_83f5c553.py"
    ],
    "new_files": [
      "http_sessions_1ab9ee.py"
    ]
  },
  {
    "file_signature": [
      "class:QNAPCPUSensor",
      "class:QNAPDriveSensor",
      "class:QNAPMemorySensor",
      "class:QNAPNetworkSensor",
      "class:QNAPSensor",
      "class:QNAPSystemSensor",
      "class:QNAPVolumeSensor",
      "func:__init__",
      "func:extra_state_attributes",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_o1_mini_21456fb9.py"
    ],
    "new_files": [
      "sensor_e4b539.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseActions",
      "class:BaseEnvironment",
      "class:Positions",
      "func:__init__",
      "func:_get_observation",
      "func:_is_valid",
      "func:_update_history",
      "func:_update_total_profit",
      "func:_update_unrealized_total_profit",
      "func:action_masks",
      "func:add_entry_fee",
      "func:add_exit_fee",
      "func:calculate_reward",
      "func:current_price",
      "func:get_actions",
      "func:get_attr",
      "func:get_trade_duration",
      "func:get_unrealized_profit",
      "func:is_tradesignal",
      "func:opposite",
      "func:reset",
      "func:reset_env",
      "func:reset_tensorboard_log",
      "func:seed",
      "func:set_action_space",
      "func:step",
      "func:tensorboard_log"
    ],
    "old_files": [
      "BaseEnvironment.py_o3_mini_5f8d69fa.py"
    ],
    "new_files": [
      "BaseEnvironment_875d27.py"
    ]
  },
  {
    "file_signature": [
      "class:SpuriousDragonTransaction",
      "class:SpuriousDragonUnsignedTransaction",
      "func:as_signed_transaction",
      "func:chain_id",
      "func:create_unsigned_transaction",
      "func:get_message_for_signing",
      "func:v_max",
      "func:v_min",
      "func:y_parity"
    ],
    "old_files": [
      "transactions.py_o1_mini_5c5a8715.py"
    ],
    "new_files": [
      "transactions_dad89f.py"
    ]
  },
  {
    "file_signature": [
      "class:OldImageFeatureEmbeddings",
      "class:TextEmbeddings",
      "func:__init__",
      "func:forward",
      "func:get_modules",
      "func:image_embeddings",
      "func:image_params",
      "func:image_params_dict",
      "func:params",
      "func:params_dict",
      "func:test_can_construct_from_params",
      "func:test_can_construct_image_embeddings_from_params",
      "func:test_forward_against_huggingface_output",
      "func:test_forward_runs_with_inputs",
      "func:test_image_embedding_forward_runs_with_inputs",
      "func:test_image_embeddings_sanity",
      "func:test_loading_albert",
      "func:test_loading_from_pretrained_module",
      "func:test_no_token_type_layer",
      "func:test_output_size",
      "func:test_sanity",
      "func:transformer_embeddings"
    ],
    "old_files": [
      "transformer_embeddings_test.py_o1_mini_7e8d35e5.py"
    ],
    "new_files": [
      "transformer_embeddings_test_676185.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseProvider",
      "class:MockSTTPlatform",
      "class:MockSTTProvider",
      "class:MockSTTProviderEntity",
      "func:__init__",
      "func:mock_stt_entity_platform",
      "func:mock_stt_platform",
      "func:supported_bit_rates",
      "func:supported_channels",
      "func:supported_codecs",
      "func:supported_formats",
      "func:supported_languages",
      "func:supported_sample_rates"
    ],
    "old_files": [
      "common.py_o1_mini_ac85683f.py"
    ],
    "new_files": [
      "common_dde807.py"
    ]
  },
  {
    "file_signature": [
      "func:run_custody_slashing_processing",
      "func:run_standard_custody_slashing_test",
      "func:test_custody_slashing",
      "func:test_incorrect_custody_slashing",
      "func:test_invalid_custody_slashing",
      "func:test_many_epochs_custody",
      "func:test_multiple_epochs_custody"
    ],
    "old_files": [
      "test_process_custody_slashing.py_o1_mini_01b6d00e.py"
    ],
    "new_files": [
      "test_process_custody_slashing_e5de54.py"
    ]
  },
  {
    "file_signature": [
      "class:Align",
      "class:Concat",
      "class:ConcatDataFrames",
      "class:ConcatIndexDtype",
      "class:I8Merge",
      "class:Join",
      "class:JoinEmpty",
      "class:JoinIndex",
      "class:JoinMultiindexSubset",
      "class:JoinNonUnique",
      "class:Merge",
      "class:MergeAsof",
      "class:MergeCategoricals",
      "class:MergeDatetime",
      "class:MergeEA",
      "class:MergeMultiIndex",
      "class:MergeOrdered",
      "class:UniqueMerge",
      "func:setup",
      "func:time_by_int",
      "func:time_by_object",
      "func:time_c_ordered",
      "func:time_concat_empty_left",
      "func:time_concat_empty_right",
      "func:time_concat_mixed_ndims",
      "func:time_concat_series",
      "func:time_concat_small_frames",
      "func:time_f_ordered",
      "func:time_i8merge",
      "func:time_inner_join_left_empty",
      "func:time_inner_join_right_empty",
      "func:time_join_dataframe_index_multi",
      "func:time_join_dataframe_index_shuffle_key_bigger_sort",
      "func:time_join_dataframe_index_single_key_bigger",
      "func:time_join_dataframe_index_single_key_small",
      "func:time_join_dataframes_cross",
      "func:time_join_multiindex_subset",
      "func:time_join_non_unique_equal",
      "func:time_left_outer_join_index",
      "func:time_merge",
      "func:time_merge_2intkey",
      "func:time_merge_cat",
      "func:time_merge_dataframe_empty_left",
      "func:time_merge_dataframe_empty_right",
      "func:time_merge_dataframe_integer_2key",
      "func:time_merge_dataframe_integer_key",
      "func:time_merge_dataframes_cross",
      "func:time_merge_object",
      "func:time_merge_on_cat_col",
      "func:time_merge_on_cat_idx",
      "func:time_merge_ordered",
      "func:time_merge_sorted_multiindex",
      "func:time_multiby",
      "func:time_on_int",
      "func:time_on_int32",
      "func:time_on_uint64",
      "func:time_series_align_int64_index",
      "func:time_series_align_left_monotonic",
      "func:time_unique_merge"
    ],
    "old_files": [
      "join_merge.py_o1_mini_26247bf6.py"
    ],
    "new_files": [
      "join_merge_5c5786.py"
    ]
  },
  {
    "file_signature": [
      "class:LoggingDataset",
      "class:TestInvalidThreadRunner",
      "class:TestIsAsync",
      "class:TestMaxWorkers",
      "class:TestSuggestResumeScenario",
      "class:TestThreadRunnerRelease",
      "class:TestValidThreadRunner",
      "func:__init__",
      "func:_describe",
      "func:_load",
      "func:_release",
      "func:_save",
      "func:test_count_multiple_loads",
      "func:test_does_not_log_not_using_async",
      "func:test_dont_release_inputs_and_outputs",
      "func:test_init_with_negative_process_count",
      "func:test_memory_dataset_input",
      "func:test_node_returning_none",
      "func:test_release_at_earliest_opportunity",
      "func:test_release_transcoded",
      "func:test_specified_max_workers",
      "func:test_stricter_suggest_resume_scenario",
      "func:test_suggest_resume_scenario",
      "func:test_task_exception",
      "func:test_thread_run",
      "func:test_thread_run_with_patterns",
      "func:test_thread_run_with_plugin_manager"
    ],
    "old_files": [
      "test_thread_runner.py_o1_mini_d2ca7599.py"
    ],
    "new_files": [
      "test_thread_runner_e54f5d.py"
    ]
  },
  {
    "file_signature": [
      "class:Reporter",
      "func:__init__",
      "func:_makeDefaultReporter",
      "func:flake",
      "func:syntaxError",
      "func:unexpectedError"
    ],
    "old_files": [
      "reporter.py_o1_mini_bfbe984b.py"
    ],
    "new_files": [
      "reporter_7fc9be.py",
      "reporter_4f7bfa.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPExecutor",
      "class:JSONRPCExecutor",
      "class:TimeoutHTTPAdapter",
      "func:__init__",
      "func:_send_request",
      "func:_validate_response",
      "func:after_start_check",
      "func:kill",
      "func:running",
      "func:send",
      "func:split_endpoint",
      "func:start",
      "func:stop",
      "func:wait_for"
    ],
    "old_files": [
      "http.py_o3_mini_98a64c7a.py"
    ],
    "new_files": [
      "http_b073d4.py"
    ]
  },
  {
    "file_signature": [
      "class:ChartDataRestApi",
      "func:_create_query_context_from_form",
      "func:_get_data_response",
      "func:_load_query_context_form_from_cache",
      "func:_map_form_data_datasource_to_dataset_id",
      "func:_process_data",
      "func:_run_async",
      "func:_send_chart_response",
      "func:data",
      "func:data_from_cache",
      "func:get_data"
    ],
    "old_files": [
      "api.py_o1_mini_18d40e57.py"
    ],
    "new_files": [
      "api_fb33d1.py"
    ]
  },
  {
    "file_signature": [
      "class:SynoDSMBinarySensor",
      "class:SynoDSMSecurityBinarySensor",
      "class:SynoDSMStorageBinarySensor",
      "class:SynologyDSMBinarySensorEntityDescription",
      "func:__init__",
      "func:available",
      "func:extra_state_attributes",
      "func:is_on"
    ],
    "old_files": [
      "binary_sensor.py_o1_mini_ab852f85.py"
    ],
    "new_files": [
      "binary_sensor_66e712.py"
    ]
  },
  {
    "file_signature": [
      "class:ConfigurationMethod",
      "class:CssTemplate",
      "class:Database",
      "class:DatabaseUserOAuth2Tokens",
      "class:FavStar",
      "class:FavStarClassName",
      "class:KeyValue",
      "class:Log",
      "func:__repr__",
      "func:_convert",
      "func:_get_sqla_engine",
      "func:_log_query",
      "func:add_database_to_signature",
      "func:allow_multi_catalog",
      "func:allows_cost_estimate",
      "func:allows_subquery",
      "func:allows_virtual_table_explore",
      "func:apply_limit_to_sql",
      "func:backend",
      "func:catalog_cache_enabled",
      "func:catalog_cache_timeout",
      "func:column_needs_conversion",
      "func:compile_sqla_query",
      "func:connect_args",
      "func:data",
      "func:db_engine_spec",
      "func:default_schemas",
      "func:disable_data_preview",
      "func:disable_drill_to_detail",
      "func:driver",
      "func:engine_information",
      "func:explore_database_id",
      "func:fetch_rows",
      "func:function_names",
      "func:get_all_catalog_names",
      "func:get_all_schema_names",
      "func:get_all_table_names_in_schema",
      "func:get_all_view_names_in_schema",
      "func:get_columns",
      "func:get_db_engine_spec",
      "func:get_default_catalog",
      "func:get_default_schema",
      "func:get_default_schema_for_query",
      "func:get_df",
      "func:get_dialect",
      "func:get_effective_user",
      "func:get_encrypted_extra",
      "func:get_extra",
      "func:get_foreign_keys",
      "func:get_indexes",
      "func:get_inspector",
      "func:get_metrics",
      "func:get_oauth2_config",
      "func:get_password_masked_url",
      "func:get_password_masked_url_from_uri",
      "func:get_perm",
      "func:get_pk_constraint",
      "func:get_raw_connection",
      "func:get_reserved_words",
      "func:get_schema_access_for_file_upload",
      "func:get_sqla_engine",
      "func:get_table",
      "func:get_table_comment",
      "func:grains",
      "func:has_table",
      "func:has_view",
      "func:is_oauth2_enabled",
      "func:load_into_dataframe",
      "func:make_sqla_column_compatible",
      "func:masked_encrypted_extra",
      "func:metadata_cache_timeout",
      "func:mutate_sql_based_on_config",
      "func:name",
      "func:parameters",
      "func:parameters_schema",
      "func:perm",
      "func:post_process_df",
      "func:purge_oauth2_tokens",
      "func:quote_identifier",
      "func:safe_sqlalchemy_uri",
      "func:schema_cache_enabled",
      "func:schema_cache_timeout",
      "func:schema_options",
      "func:select_star",
      "func:set_sqlalchemy_uri",
      "func:sql_url",
      "func:sqlalchemy_uri_decrypted",
      "func:start_oauth2_dance",
      "func:table_cache_enabled",
      "func:table_cache_timeout",
      "func:unique_name",
      "func:update_params_from_encrypted_extra",
      "func:url_object"
    ],
    "old_files": [
      "core.py_o1_mini_bbc8c7d0.py"
    ],
    "new_files": [
      "core_880b1d.py"
    ]
  },
  {
    "file_signature": [
      "class:TestRegistryDescribeCommand",
      "func:pipelines_dict",
      "func:test_describe_registered_pipeline",
      "func:test_describe_registered_pipeline_default",
      "func:test_list_registered_pipelines",
      "func:test_registered_pipeline_not_found",
      "func:yaml_dump_mock"
    ],
    "old_files": [
      "test_registry.py_o1_mini_d5122d7f.py"
    ],
    "new_files": [
      "test_registry_31caeb.py"
    ]
  },
  {
    "file_signature": [
      "class:MicrosoftProvider",
      "func:__init__",
      "func:default_language",
      "func:default_options",
      "func:get_engine",
      "func:get_tts_audio",
      "func:supported_languages",
      "func:supported_options"
    ],
    "old_files": [
      "tts.py_o1_mini_ffb74244.py"
    ],
    "new_files": [
      "tts_37e6e2.py"
    ]
  },
  {
    "file_signature": [
      "class:ContractTestCase",
      "class:Obj",
      "class:TestAdapterConversions",
      "func:MockDocumentation",
      "func:MockGenerateMacro",
      "func:MockMacro",
      "func:MockMaterialization",
      "func:MockNode",
      "func:MockSource",
      "func:_get_tester_for",
      "func:_make_table_of",
      "func:assert_fails_validation",
      "func:assert_from_dict",
      "func:assert_symmetric",
      "func:assert_to_dict",
      "func:clear_plugin",
      "func:compare_dicts",
      "func:config_from_parts_or_dicts",
      "func:dict_replace",
      "func:generate_name_macros",
      "func:inject_adapter",
      "func:inject_plugin",
      "func:inject_plugin_for",
      "func:load_internal_manifest_macros",
      "func:make_manifest",
      "func:mock_connection",
      "func:normalize",
      "func:profile_from_dict",
      "func:project_from_dict",
      "func:replace_config",
      "func:setUp"
    ],
    "old_files": [
      "__init__.py_o1_mini_38e75939.py"
    ],
    "new_files": [
      "__init___d345bd.py"
    ]
  },
  {
    "file_signature": [
      "class:AppEngineAdapter",
      "class:AppEngineMROHack",
      "class:InsecureAppEngineAdapter",
      "class:_AppEngineConnection",
      "class:_AppEnginePoolManager",
      "func:__init__",
      "func:_check_version",
      "func:clear",
      "func:connection_from_url",
      "func:init_poolmanager",
      "func:monkeypatch",
      "func:urlopen"
    ],
    "old_files": [
      "appengine.py_o3_mini_3880ff96.py"
    ],
    "new_files": [
      "appengine_f79cd5.py"
    ]
  },
  {
    "file_signature": [
      "func:assert_balances",
      "func:calc_fees",
      "func:set_fee_schedule",
      "func:test_locked_transfer_secret_registered_onchain",
      "func:test_max_locks_reached",
      "func:test_mediated_transfer",
      "func:test_mediated_transfer_calls_pfs",
      "func:test_mediated_transfer_messages_out_of_order",
      "func:test_mediated_transfer_with_entire_deposit",
      "func:test_mediated_transfer_with_fees",
      "func:test_mediated_transfer_with_node_consuming_more_than_allocated_fee",
      "func:test_transfer_with_secret"
    ],
    "old_files": [
      "test_mediatedtransfer.py_o1_mini_7c40676c.py"
    ],
    "new_files": [
      "test_mediatedtransfer_b63130.py"
    ]
  },
  {
    "file_signature": [
      "class:AugmentedLSTMCell",
      "class:AugmentedLstm",
      "class:BiAugmentedLstm",
      "func:__init__",
      "func:_forward_bidirectional",
      "func:_forward_unidirectional",
      "func:forward",
      "func:reset_parameters"
    ],
    "old_files": [
      "augmented_lstm.py_o1_mini_cedcc40b.py"
    ],
    "new_files": [
      "augmented_lstm_c8e957.py"
    ]
  },
  {
    "file_signature": [
      "class:DeflateDecoder",
      "class:GzipDecoder",
      "class:HTTPResponse",
      "func:__getattr__",
      "func:__init__",
      "func:_decode",
      "func:_error_catcher",
      "func:_flush_decoder",
      "func:_get_decoder",
      "func:_init_decoder",
      "func:close",
      "func:closed",
      "func:connection",
      "func:data",
      "func:decompress",
      "func:fileno",
      "func:from_base",
      "func:get_redirect_location",
      "func:getheader",
      "func:getheaders",
      "func:info",
      "func:readable",
      "func:readinto",
      "func:tell"
    ],
    "old_files": [
      "response.py_o3_mini_bf44d9fe.py"
    ],
    "new_files": [
      "response_563505.py"
    ]
  },
  {
    "file_signature": [
      "class:BinOp",
      "class:ConditionBinOp",
      "class:Constant",
      "class:FilterBinOp",
      "class:JointConditionBinOp",
      "class:JointFilterBinOp",
      "class:PyTablesExpr",
      "class:PyTablesExprVisitor",
      "class:PyTablesScope",
      "class:Term",
      "class:TermValue",
      "class:UnaryOp",
      "func:__init__",
      "func:__new__",
      "func:__repr__",
      "func:_disallow_scalar_only_bool_ops",
      "func:_resolve_name",
      "func:_rewrite_membership_op",
      "func:_validate_where",
      "func:conform",
      "func:convert_value",
      "func:convert_values",
      "func:evaluate",
      "func:format",
      "func:generate",
      "func:generate_filter_op",
      "func:invert",
      "func:is_in_table",
      "func:is_valid",
      "func:kind",
      "func:maybe_expression",
      "func:meta",
      "func:metadata",
      "func:pr",
      "func:prune",
      "func:stringify",
      "func:tostring",
      "func:translate_In",
      "func:value",
      "func:visit_Assign",
      "func:visit_Attribute",
      "func:visit_Index",
      "func:visit_Subscript",
      "func:visit_UnaryOp"
    ],
    "old_files": [
      "pytables.py_o1_mini_6772b0ba.py"
    ],
    "new_files": [
      "pytables_63fc81.py"
    ]
  },
  {
    "file_signature": [
      "class:PeriodIndex",
      "func:__new__",
      "func:_cast_partial_indexing_scalar",
      "func:_convert_tolerance",
      "func:_disallow_mismatched_indexing",
      "func:_engine_type",
      "func:_is_comparable_dtype",
      "func:_maybe_cast_slice_bound",
      "func:_maybe_convert_timedelta",
      "func:_new_PeriodIndex",
      "func:_parsed_string_to_bounds",
      "func:_resolution_obj",
      "func:asfreq",
      "func:asof_locs",
      "func:from_fields",
      "func:from_ordinals",
      "func:get_loc",
      "func:hour",
      "func:inferred_type",
      "func:is_full",
      "func:minute",
      "func:period_range",
      "func:second",
      "func:shift",
      "func:to_timestamp",
      "func:values"
    ],
    "old_files": [
      "period.py_o1_mini_290b79c9.py"
    ],
    "new_files": [
      "period_85d698.py"
    ]
  },
  {
    "file_signature": [
      "class:BadTranslatorInput",
      "class:IndexedTranslation",
      "class:IndexedTranslatorInput",
      "class:NBestTranslations",
      "class:Translation",
      "class:Translator",
      "class:TranslatorInput",
      "class:TranslatorOutput",
      "func:__init__",
      "func:__len__",
      "func:__str__",
      "func:_assemble_translation",
      "func:_bad_input",
      "func:_concat_nbest_translations",
      "func:_concat_translations",
      "func:_expand_nbest_translation",
      "func:_get_best_translations",
      "func:_get_best_word_indices_for_kth_hypotheses",
      "func:_get_inference_input",
      "func:_get_translation_tokens_and_factors",
      "func:_make_result",
      "func:_reduce_nbest_translations",
      "func:_remove_target_prefix_tokens",
      "func:_translate_batch",
      "func:_translate_np",
      "func:_unshift_target_factors",
      "func:chunks",
      "func:empty_translation",
      "func:eop_id",
      "func:get_max_input_output_length",
      "func:get_max_output_length",
      "func:get_source_prefix_tokens",
      "func:get_target_prefix_factors",
      "func:get_target_prefix_tokens",
      "func:json",
      "func:make_input_from_dict",
      "func:make_input_from_factored_string",
      "func:make_input_from_json_string",
      "func:make_input_from_multiple_strings",
      "func:make_input_from_plain_string",
      "func:max_batch_size",
      "func:max_input_length",
      "func:models_max_input_output_length",
      "func:num_factors",
      "func:num_source_factors",
      "func:num_source_prefix_tokens",
      "func:num_target_factors",
      "func:num_target_prefix_factors",
      "func:num_target_prefix_tokens",
      "func:translate",
      "func:with_eos"
    ],
    "old_files": [
      "inference.py_o3_mini_11291039.py"
    ],
    "new_files": [
      "inference_7e0d57.py"
    ]
  },
  {
    "file_signature": [
      "class:BiasMitigator",
      "class:HardBiasMitigator",
      "class:INLPBiasMitigator",
      "class:LinearBiasMitigator",
      "class:OSCaRBiasMitigator",
      "func:__call__",
      "func:__init__",
      "func:_get_rowspace_proj",
      "func:_proj",
      "func:_remove_component"
    ],
    "old_files": [
      "bias_mitigators.py_o1_mini_294de2be.py"
    ],
    "new_files": [
      "bias_mitigators_adad59.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockchainServices",
      "class:SimplePFSProxy",
      "func:__init__",
      "func:check_channel",
      "func:create_all_channels_for_network",
      "func:create_apps",
      "func:create_network_channels",
      "func:create_sequential_channels",
      "func:jsonrpc_services",
      "func:network_with_minimum_channels",
      "func:parallel_start_apps",
      "func:payment_channel_open_and_deposit",
      "func:query_address_metadata",
      "func:set_services",
      "func:wait_for_alarm_start",
      "func:wait_for_channels",
      "func:wait_for_token_networks",
      "func:wait_for_usable_channel"
    ],
    "old_files": [
      "network.py_o3_mini_8d1b1d1c.py"
    ],
    "new_files": [
      "network_7ec1c6.py"
    ]
  },
  {
    "file_signature": [
      "func:get_rest_client",
      "func:log_has_re",
      "func:test_FtRestClient_call",
      "func:test_FtRestClient_call_explicit_methods",
      "func:test_FtRestClient_call_invalid",
      "func:test_FtRestClient_init",
      "func:test_ft_client",
      "func:test_ft_client_argparsing"
    ],
    "old_files": [
      "test_rest_client.py_o1_mini_dc7c7675.py"
    ],
    "new_files": [
      "test_rest_client_6dfb62.py"
    ]
  },
  {
    "file_signature": [
      "func:_async_get_allowed_states",
      "func:_cached_template",
      "func:_error_listener",
      "func:_forward_entity_changes",
      "func:_forward_events_check_permissions",
      "func:_forward_events_unconditional",
      "func:_send_handle_entities_init_response",
      "func:_send_handle_get_states_response",
      "func:_serialize_entity_sources",
      "func:_template_listener",
      "func:_thread_safe_error_listener",
      "func:async_register_commands",
      "func:forward_bootstrap_integrations",
      "func:forward_triggers",
      "func:handle_entity_source",
      "func:handle_fire_event",
      "func:handle_get_config",
      "func:handle_get_states",
      "func:handle_integration_setup_info",
      "func:handle_ping",
      "func:handle_subscribe_bootstrap_integrations",
      "func:handle_subscribe_entities",
      "func:handle_subscribe_events",
      "func:handle_supported_features",
      "func:handle_unsubscribe_events",
      "func:pong_message"
    ],
    "old_files": [
      "commands.py_o1_mini_472ecc5a.py"
    ],
    "new_files": [
      "commands_33f6b3.py"
    ]
  },
  {
    "file_signature": [
      "class:SensorTrend",
      "func:__init__",
      "func:_calculate_gradient",
      "func:_validate_min_max",
      "func:extra_state_attributes",
      "func:trend_sensor_state_listener"
    ],
    "old_files": [
      "binary_sensor.py_o3_mini_866a4655.py"
    ],
    "new_files": [
      "binary_sensor_8bad86.py"
    ]
  },
  {
    "file_signature": [
      "func:test_analyze_trade_parallelism",
      "func:test_calculate_cagr",
      "func:test_calculate_calmar",
      "func:test_calculate_csum",
      "func:test_calculate_expectancy",
      "func:test_calculate_market_change",
      "func:test_calculate_max_drawdown",
      "func:test_calculate_max_drawdown2",
      "func:test_calculate_max_drawdown_abs",
      "func:test_calculate_sharpe",
      "func:test_calculate_sortino",
      "func:test_combine_dataframes_with_mean",
      "func:test_combine_dataframes_with_mean_no_data",
      "func:test_combined_dataframes_with_rel_mean",
      "func:test_create_cum_profit",
      "func:test_create_cum_profit1",
      "func:test_extract_trades_of_period",
      "func:test_get_latest_backtest_filename",
      "func:test_get_latest_hyperopt_file",
      "func:test_load_backtest_data_multi",
      "func:test_load_backtest_data_new_format",
      "func:test_load_backtest_data_old_format",
      "func:test_load_backtest_metadata",
      "func:test_load_file_from_zip",
      "func:test_load_trades",
      "func:test_load_trades_from_db"
    ],
    "old_files": [
      "test_btanalysis.py_o1_mini_5d81f97b.py"
    ],
    "new_files": [
      "test_btanalysis_4aed6c.py"
    ]
  },
  {
    "file_signature": [
      "func:f",
      "func:test_bool_and_nan_to_bool",
      "func:test_bool_and_nan_to_float",
      "func:test_bool_and_nan_to_int",
      "func:test_bool_na_values",
      "func:test_cast_NA_to_bool_raises_error",
      "func:test_custom_na_values",
      "func:test_default_na_values",
      "func:test_detect_string_na",
      "func:test_empty_na_values_no_default_with_index",
      "func:test_inf_na_values_with_int_index",
      "func:test_na_trailing_columns",
      "func:test_na_value_dict",
      "func:test_na_value_dict_multi_index",
      "func:test_na_values_dict_aliasing",
      "func:test_na_values_dict_col_index",
      "func:test_na_values_dict_null_column_name",
      "func:test_na_values_dict_without_dtype",
      "func:test_na_values_keep_default",
      "func:test_na_values_na_filter_override",
      "func:test_na_values_scalar",
      "func:test_na_values_uint64",
      "func:test_na_values_with_dtype_str_and_na_filter",
      "func:test_nan_multi_index",
      "func:test_no_keep_default_na_dict_na_scalar_values",
      "func:test_no_keep_default_na_dict_na_values",
      "func:test_no_keep_default_na_dict_na_values_diff_reprs",
      "func:test_no_na_filter_on_index",
      "func:test_no_na_values_no_keep_default",
      "func:test_non_string_na_values",
      "func:test_str_nan_dropped",
      "func:test_string_nas"
    ],
    "old_files": [
      "test_na_values.py_o1_mini_038f7719.py"
    ],
    "new_files": [
      "test_na_values_e137af.py"
    ]
  },
  {
    "file_signature": [
      "class:FrozenNodeIterator",
      "class:NodeIterator",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:_query",
      "func:_query_doc_id",
      "func:_query_query_hash",
      "func:count",
      "func:first_item",
      "func:freeze",
      "func:magic",
      "func:page_length",
      "func:resumable_iteration",
      "func:thaw",
      "func:total_index"
    ],
    "old_files": [
      "nodeiterator.py_o1_mini_5b1db7d4.py"
    ],
    "new_files": [
      "nodeiterator_94d3a3.py"
    ]
  },
  {
    "file_signature": [
      "class:TestEngine",
      "func:run_execution_payload_processing",
      "func:test_incorrect_blob_tx_type",
      "func:test_incorrect_block_hash",
      "func:test_incorrect_commitment",
      "func:test_incorrect_commitments_order",
      "func:test_incorrect_transaction_length_1_byte_short",
      "func:test_incorrect_transaction_length_1_extra_byte",
      "func:test_incorrect_transaction_length_32_extra_bytes",
      "func:test_incorrect_transaction_length_empty",
      "func:test_incorrect_transaction_no_blobs_but_with_commitments",
      "func:test_invalid_correct_input__execution_invalid",
      "func:test_invalid_exceed_max_blobs_per_block",
      "func:test_no_commitments_for_transactions",
      "func:test_no_transactions_with_commitments",
      "func:test_zeroed_commitment",
      "func:verify_and_notify_new_payload"
    ],
    "old_files": [
      "test_process_execution_payload.py_o1_mini_14242ef6.py"
    ],
    "new_files": [
      "test_process_execution_payload_bd0176.py"
    ]
  },
  {
    "file_signature": [],
    "old_files": [
      "Generate_mypy_results_summary.py"
    ],
    "new_files": [
      "diff_65255d.py"
    ]
  },
  {
    "file_signature": [
      "class:MyClass",
      "func:foo1",
      "func:foo2",
      "func:foo3",
      "func:foo4",
      "func:my_func"
    ],
    "old_files": [
      "line_ranges_basic.py_o1_mini_995f874f.py"
    ],
    "new_files": [
      "line_ranges_basic_766e5e.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockBinarySensor",
      "class:BlockBinarySensorDescription",
      "class:BlockSleepingBinarySensor",
      "class:RestBinarySensor",
      "class:RestBinarySensorDescription",
      "class:RpcBinarySensor",
      "class:RpcBinarySensorDescription",
      "class:RpcBluTrvBinarySensor",
      "class:RpcSleepingBinarySensor",
      "func:__init__",
      "func:is_on"
    ],
    "old_files": [
      "binary_sensor.py_o1_mini_3cc050f1.py"
    ],
    "new_files": [
      "binary_sensor_88cfce.py"
    ]
  },
  {
    "file_signature": [
      "class:BlueprintException",
      "class:BlueprintInUse",
      "class:BlueprintWithNameException",
      "class:FailedToLoad",
      "class:FileAlreadyExists",
      "class:InvalidBlueprint",
      "class:InvalidBlueprintInputs",
      "class:MissingInput",
      "func:__init__"
    ],
    "old_files": [
      "errors.py_o1_mini_32f81b16.py"
    ],
    "new_files": [
      "errors_174875.py"
    ]
  },
  {
    "file_signature": [
      "class:TestCategoricalAPI",
      "class:TestCategoricalAPIWithFactor",
      "class:TestPrivateCategoricalAPI",
      "func:test_add_categories",
      "func:test_add_categories_existing_raises",
      "func:test_add_categories_losing_dtype_information",
      "func:test_codes_immutable",
      "func:test_describe",
      "func:test_ordered_api",
      "func:test_recode_to_categories",
      "func:test_recode_to_categories_large",
      "func:test_remove_categories",
      "func:test_remove_categories_raises",
      "func:test_remove_unused_categories",
      "func:test_rename_categories",
      "func:test_rename_categories_dict",
      "func:test_rename_categories_series",
      "func:test_rename_categories_wrong_length_raises",
      "func:test_reorder_categories",
      "func:test_reorder_categories_raises",
      "func:test_set_categories",
      "func:test_set_categories_many",
      "func:test_set_categories_private",
      "func:test_set_categories_rename_less",
      "func:test_set_ordered"
    ],
    "old_files": [
      "test_api.py_o1_mini_9fa83db7.py"
    ],
    "new_files": [
      "test_api_125d2c.py"
    ]
  },
  {
    "file_signature": [
      "class:TestQueryApi",
      "func:create_queries",
      "func:get_random_string",
      "func:insert_query",
      "func:test_get_list_query",
      "func:test_get_list_query_filter_changed_on",
      "func:test_get_list_query_filter_database",
      "func:test_get_list_query_filter_sql",
      "func:test_get_list_query_filter_user",
      "func:test_get_list_query_no_data_access",
      "func:test_get_list_query_order",
      "func:test_get_query",
      "func:test_get_query_no_data_access",
      "func:test_get_query_not_found",
      "func:test_get_updated_since",
      "func:test_stop_query",
      "func:test_stop_query_not_found"
    ],
    "old_files": [
      "api_tests.py_o3_mini_7e37d3ea.py"
    ],
    "new_files": [
      "api_tests_76e6db.py"
    ]
  },
  {
    "file_signature": [
      "class:TransportProtocol",
      "func:account_genesis_eth_balance",
      "func:blockchain_extra_config",
      "func:blockchain_key_seed",
      "func:blockchain_number_of_nodes",
      "func:blockchain_query_interval",
      "func:blockchain_type",
      "func:chain_id",
      "func:channels_per_node",
      "func:deploy_key",
      "func:deposit",
      "func:enable_rest_api",
      "func:environment_type",
      "func:escape_for_format",
      "func:eth_nodes_configuration",
      "func:logs_storage",
      "func:network_wait",
      "func:number_of_nodes",
      "func:number_of_tokens",
      "func:port_generator",
      "func:private_keys",
      "func:privatekey_seed",
      "func:random_marker",
      "func:register_tokens",
      "func:retries_before_backoff",
      "func:retry_interval_initial",
      "func:retry_interval_max",
      "func:retry_timeout",
      "func:reveal_timeout",
      "func:settle_timeout",
      "func:settle_timeout_max",
      "func:settle_timeout_min",
      "func:skip_if_not_geth",
      "func:skip_if_not_parity",
      "func:skip_if_parity",
      "func:start_raiden_apps",
      "func:token_amount",
      "func:transport",
      "func:transport_protocol",
      "func:unrecoverable_error_should_crash"
    ],
    "old_files": [
      "variables.py_o1_mini_a4df8a65.py"
    ],
    "new_files": [
      "variables_c92b2f.py"
    ]
  },
  {
    "file_signature": [
      "class:SensiboDeviceSensor",
      "class:SensiboDeviceSensorEntityDescription",
      "class:SensiboMotionSensor",
      "class:SensiboMotionSensorEntityDescription",
      "func:__init__",
      "func:_add_remove_devices",
      "func:_smart_type_name",
      "func:extra_state_attributes",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_o1_mini_b8180821.py"
    ],
    "new_files": [
      "sensor_fdf575.py"
    ]
  },
  {
    "file_signature": [
      "class:TestDataFrameToCSV",
      "func:_make_frame",
      "func:_return_result_expected",
      "func:_to_uni",
      "func:create_cols",
      "func:make_dtnat_arr",
      "func:read_csv",
      "func:test_gz_lineend",
      "func:test_multi_index_header",
      "func:test_period_index_date_overflow",
      "func:test_to_csv_bug",
      "func:test_to_csv_categorical_and_ea",
      "func:test_to_csv_categorical_and_interval",
      "func:test_to_csv_chunking",
      "func:test_to_csv_chunksize",
      "func:test_to_csv_cols_reordering",
      "func:test_to_csv_compression",
      "func:test_to_csv_date_format",
      "func:test_to_csv_dtnat",
      "func:test_to_csv_dup_cols",
      "func:test_to_csv_dups_cols",
      "func:test_to_csv_dups_cols2",
      "func:test_to_csv_empty",
      "func:test_to_csv_float32_nanrep",
      "func:test_to_csv_float_format",
      "func:test_to_csv_float_format_over_decimal",
      "func:test_to_csv_from_csv1",
      "func:test_to_csv_from_csv1_corner_case",
      "func:test_to_csv_from_csv1_datetime",
      "func:test_to_csv_from_csv2",
      "func:test_to_csv_from_csv3",
      "func:test_to_csv_from_csv4",
      "func:test_to_csv_from_csv5",
      "func:test_to_csv_from_csv_categorical",
      "func:test_to_csv_from_csv_w_all_infs",
      "func:test_to_csv_from_csv_w_some_infs",
      "func:test_to_csv_headers",
      "func:test_to_csv_idx_ncols",
      "func:test_to_csv_idx_types",
      "func:test_to_csv_index_no_leading_comma",
      "func:test_to_csv_interval_index",
      "func:test_to_csv_lineterminators",
      "func:test_to_csv_lineterminators2",
      "func:test_to_csv_lineterminators3",
      "func:test_to_csv_mixed",
      "func:test_to_csv_multiindex",
      "func:test_to_csv_na_quoting",
      "func:test_to_csv_new_dupe_cols",
      "func:test_to_csv_no_index",
      "func:test_to_csv_nrows",
      "func:test_to_csv_numpy_16_bug",
      "func:test_to_csv_params",
      "func:test_to_csv_path_is_none",
      "func:test_to_csv_quote_none",
      "func:test_to_csv_quoting",
      "func:test_to_csv_single_level_multi_index",
      "func:test_to_csv_stringio",
      "func:test_to_csv_unicode",
      "func:test_to_csv_unicode_index_col",
      "func:test_to_csv_unicodewriter_quoting",
      "func:test_to_csv_warn_when_zip_tar_and_append_mode",
      "func:test_to_csv_wide_frame_formatting",
      "func:test_to_csv_with_dst_transitions",
      "func:test_to_csv_with_dst_transitions_with_pickle",
      "func:test_to_csv_with_mix_columns",
      "func:test_to_csv_withcommas"
    ],
    "old_files": [
      "test_to_csv.py_o1_mini_920b90ae.py"
    ],
    "new_files": [
      "test_to_csv_e7f2e8.py"
    ]
  },
  {
    "file_signature": [
      "class:AutomowerNumberEntity",
      "class:AutomowerNumberEntityDescription",
      "class:WorkAreaNumberEntity",
      "class:WorkAreaNumberEntityDescription",
      "func:__init__",
      "func:_async_add_new_devices",
      "func:_async_add_new_work_areas",
      "func:_async_get_cutting_height",
      "func:native_value",
      "func:translation_key"
    ],
    "old_files": [
      "number.py_o1_mini_6c29ede1.py"
    ],
    "new_files": [
      "number_537226.py"
    ]
  },
  {
    "file_signature": [
      "class:RememberTheMilkEntity",
      "func:__init__",
      "func:_check_token",
      "func:complete_task",
      "func:create_task",
      "func:name",
      "func:state"
    ],
    "old_files": [
      "entity.py_o1_mini_54769d24.py"
    ],
    "new_files": [
      "entity_7a1eb0.py"
    ]
  },
  {
    "file_signature": [
      "class:ConcurrencyLimitAsyncClient",
      "class:ConcurrencyLimitClient",
      "func:create_concurrency_limit",
      "func:create_global_concurrency_limit",
      "func:decrement_v1_concurrency_slots",
      "func:delete_concurrency_limit_by_tag",
      "func:delete_global_concurrency_limit_by_name",
      "func:increment_concurrency_slots",
      "func:increment_v1_concurrency_slots",
      "func:read_concurrency_limit_by_tag",
      "func:read_concurrency_limits",
      "func:read_global_concurrency_limit_by_name",
      "func:read_global_concurrency_limits",
      "func:release_concurrency_slots",
      "func:reset_concurrency_limit_by_tag",
      "func:update_global_concurrency_limit",
      "func:upsert_global_concurrency_limit_by_name"
    ],
    "old_files": [
      "client.py_o1_mini_73b83f9f.py"
    ],
    "new_files": [
      "client_aeeaee.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_catboost_shap_values",
      "func:catboost_classification_learner",
      "func:lgbm_classification_learner",
      "func:logistic_classification_learner",
      "func:nlp_logistic_classification_learner",
      "func:p",
      "func:xgb_classification_learner"
    ],
    "old_files": [
      "classification.py_o3_mini_554b95c0.py"
    ],
    "new_files": [
      "classification_92cb06.py"
    ]
  },
  {
    "file_signature": [
      "class:RPC",
      "class:RPCException",
      "class:RPCHandler",
      "func:__balance_get_est_stake",
      "func:__exec_force_exit",
      "func:__init__",
      "func:__json__",
      "func:__rpc_analysed_dataframe_raw",
      "func:__str__",
      "func:_convert_dataframe_to_dict",
      "func:_force_entry_validations",
      "func:_get_market_direction",
      "func:_rpc_add_lock",
      "func:_rpc_analysed_dataframe",
      "func:_rpc_analysed_history_full",
      "func:_rpc_balance",
      "func:_rpc_blacklist",
      "func:_rpc_blacklist_delete",
      "func:_rpc_cancel_open_order",
      "func:_rpc_count",
      "func:_rpc_delete",
      "func:_rpc_delete_lock",
      "func:_rpc_edge",
      "func:_rpc_enter_tag_performance",
      "func:_rpc_exit_reason_performance",
      "func:_rpc_force_entry",
      "func:_rpc_force_exit",
      "func:_rpc_get_logs",
      "func:_rpc_list_custom_data",
      "func:_rpc_locks",
      "func:_rpc_mix_tag_performance",
      "func:_rpc_performance",
      "func:_rpc_plot_config",
      "func:_rpc_plot_config_with_strategy",
      "func:_rpc_reload_config",
      "func:_rpc_reload_trade_from_exchange",
      "func:_rpc_show_config",
      "func:_rpc_start",
      "func:_rpc_stats",
      "func:_rpc_status_table",
      "func:_rpc_stop",
      "func:_rpc_stopentry",
      "func:_rpc_sysinfo",
      "func:_rpc_timeunit_profit",
      "func:_rpc_trade_history",
      "func:_rpc_trade_statistics",
      "func:_rpc_trade_status",
      "func:_rpc_whitelist",
      "func:_update_market_direction",
      "func:_ws_all_analysed_dataframes",
      "func:_ws_request_analyzed_df",
      "func:_ws_request_whitelist",
      "func:cleanup",
      "func:health",
      "func:name",
      "func:send_msg",
      "func:time_offset",
      "func:trade_win_loss"
    ],
    "old_files": [
      "rpc.py_o1_mini_dcc2e54a.py"
    ],
    "new_files": [
      "rpc_0d6cda.py"
    ]
  },
  {
    "file_signature": [
      "class:TestAstype",
      "class:TestAstypeAPI",
      "class:TestAstypeCategorical",
      "class:TestAstypeString",
      "func:cmp",
      "func:rand_str",
      "func:test_arg_for_errors_in_astype",
      "func:test_astype",
      "func:test_astype_bool_missing_to_categorical",
      "func:test_astype_bytes",
      "func:test_astype_cast_nan_inf_int",
      "func:test_astype_cast_object_int",
      "func:test_astype_cast_object_int_fail",
      "func:test_astype_categorical_invalid_conversions",
      "func:test_astype_categorical_to_categorical",
      "func:test_astype_categorical_to_other",
      "func:test_astype_categoricaldtype",
      "func:test_astype_categories_raises",
      "func:test_astype_datetime",
      "func:test_astype_datetime64tz",
      "func:test_astype_dict_like",
      "func:test_astype_dt64_to_str",
      "func:test_astype_dt64tz_to_str",
      "func:test_astype_ea_to_datetimetzdtype",
      "func:test_astype_empty_constructor_equality",
      "func:test_astype_float_to_period",
      "func:test_astype_float_to_uint_negatives_raise",
      "func:test_astype_from_categorical",
      "func:test_astype_from_categorical_with_keywords",
      "func:test_astype_from_float_to_str",
      "func:test_astype_generic_timestamp_no_frequency",
      "func:test_astype_ignores_errors_for_extension_dtypes",
      "func:test_astype_int_na_string",
      "func:test_astype_mixed_object_to_dt64tz",
      "func:test_astype_nan_to_bool",
      "func:test_astype_no_pandas_dtype",
      "func:test_astype_object_to_dt64_non_nano",
      "func:test_astype_retain_attrs",
      "func:test_astype_str_cast_dt64",
      "func:test_astype_str_cast_td64",
      "func:test_astype_str_map",
      "func:test_astype_string_to_extension_dtype_roundtrip",
      "func:test_astype_timedelta64_with_np_nan",
      "func:test_astype_to_str_preserves_na",
      "func:test_astype_unicode",
      "func:test_astype_unitless_dt64_raises",
      "func:test_dt64_series_astype_object",
      "func:test_td64_series_astype_object"
    ],
    "old_files": [
      "test_astype.py_o1_mini_52463ffb.py"
    ],
    "new_files": [
      "test_astype_5e9cc9.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractFilter",
      "class:AnonymousFunctionExecutionFilter",
      "class:AttributeOverwrite",
      "class:DictFilter",
      "class:FilterWrapper",
      "class:FunctionExecutionFilter",
      "class:GlobalNameFilter",
      "class:LazyAttributeOverwrite",
      "class:MergedFilter",
      "class:ParserTreeFilter",
      "class:SpecialMethodFilter",
      "class:SpecialMethodName",
      "class:_AbstractUsedNamesFilter",
      "class:_AttributeOverwriteMixin",
      "class:_BuiltinMappedMethod",
      "class:_FunctionExecutionFilter",
      "class:_OverwriteMeta",
      "func:__init__",
      "func:__repr__",
      "func:_check_flows",
      "func:_convert",
      "func:_convert_names",
      "func:_convert_param",
      "func:_filter",
      "func:_get_definition_names",
      "func:_is_name_reachable",
      "func:decorator",
      "func:get",
      "func:get_filters",
      "func:infer",
      "func:publish_method",
      "func:py__call__",
      "func:values",
      "func:wrap_names",
      "func:yielder"
    ],
    "old_files": [
      "filters.py_o1_mini_ab9e6ca6.py"
    ],
    "new_files": [
      "filters_ba549f.py"
    ]
  },
  {
    "file_signature": [
      "class:Model",
      "func:_BUILD_eq",
      "func:_BUILD_ge",
      "func:_BUILD_gt",
      "func:_BUILD_hash",
      "func:_BUILD_init",
      "func:_BUILD_le",
      "func:_BUILD_lt",
      "func:_BUILD_ne",
      "func:__abstract_init__",
      "func:__init_subclass__",
      "func:__repr__",
      "func:_contribute_field_descriptors",
      "func:_contribute_methods",
      "func:_contribute_to_options",
      "func:_derive",
      "func:_from_data_field",
      "func:_humanize",
      "func:_init_subclass",
      "func:_itervalidate",
      "func:_maybe_namespace",
      "func:_maybe_reconstruct",
      "func:derive",
      "func:dumps",
      "func:is_valid",
      "func:loads",
      "func:make_final",
      "func:maybe_model",
      "func:to_representation",
      "func:validate",
      "func:validate_or_raise",
      "func:validation_errors"
    ],
    "old_files": [
      "base.py_o3_mini_80b07b73.py"
    ],
    "new_files": [
      "base_4b5828.py"
    ]
  },
  {
    "file_signature": [
      "class:SpanBasedF1Measure",
      "func:__call__",
      "func:__init__",
      "func:_compute_metrics",
      "func:_handle_continued_spans",
      "func:get_metric",
      "func:reset"
    ],
    "old_files": [
      "span_based_f1_measure.py_o1_mini_e66cb97e.py"
    ],
    "new_files": [
      "span_based_f1_measure_cf6fc9.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseRequest",
      "class:FileField",
      "class:Request",
      "func:__bool__",
      "func:__delitem__",
      "func:__eq__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:_cancel",
      "func:_etag_values",
      "func:_finish",
      "func:_if_match_or_none_impl",
      "func:app",
      "func:body_exists",
      "func:can_read_body",
      "func:client_max_size",
      "func:clone",
      "func:config_dict",
      "func:content",
      "func:cookies",
      "func:forwarded",
      "func:get_extra_info",
      "func:headers",
      "func:host",
      "func:http_range",
      "func:if_match",
      "func:if_modified_since",
      "func:if_none_match",
      "func:if_range",
      "func:if_unmodified_since",
      "func:keep_alive",
      "func:match_info",
      "func:method",
      "func:path",
      "func:path_qs",
      "func:protocol",
      "func:query",
      "func:query_string",
      "func:raw_headers",
      "func:raw_path",
      "func:rel_url",
      "func:remote",
      "func:scheme",
      "func:secure",
      "func:task",
      "func:transport",
      "func:url",
      "func:version",
      "func:writer"
    ],
    "old_files": [
      "web_request.py_o3_mini_90f82707.py"
    ],
    "new_files": [
      "web_request_930455.py"
    ]
  },
  {
    "file_signature": [
      "class:DatadogMonitor",
      "class:DatadogStatsClient",
      "class:DogStatsD",
      "func:__init__",
      "func:_encode_labels",
      "func:_format_label",
      "func:_format_stream_label",
      "func:_format_table_label",
      "func:_format_tp_label",
      "func:_new_datadog_stats_client",
      "func:_stream_label",
      "func:client",
      "func:count",
      "func:decr",
      "func:decrement",
      "func:gauge",
      "func:histogram",
      "func:incr",
      "func:increment",
      "func:on_assignment_completed",
      "func:on_assignment_error",
      "func:on_commit_completed",
      "func:on_message_in",
      "func:on_message_out",
      "func:on_rebalance_end",
      "func:on_rebalance_return",
      "func:on_rebalance_start",
      "func:on_send_completed",
      "func:on_send_error",
      "func:on_send_initiated",
      "func:on_stream_event_in",
      "func:on_stream_event_out",
      "func:on_table_del",
      "func:on_table_get",
      "func:on_table_set",
      "func:on_tp_commit",
      "func:on_web_request_end",
      "func:sanitize",
      "func:timed",
      "func:timing",
      "func:track_tp_end_offset"
    ],
    "old_files": [
      "datadog.py_o1_mini_f9a76ff1.py"
    ],
    "new_files": [
      "datadog_c5ba7b.py"
    ]
  },
  {
    "file_signature": [
      "class:TestPrefectDbtRunnerEvents",
      "class:TestPrefectDbtRunnerInitialization",
      "class:TestPrefectDbtRunnerInvoke",
      "class:TestPrefectDbtRunnerLineage",
      "class:TestPrefectDbtRunnerLogging",
      "class:TestPrefectDbtRunnerParse",
      "func:mock_dbt_runner",
      "func:mock_manifest",
      "func:mock_manifest_with_nodes",
      "func:mock_nodes",
      "func:settings",
      "func:side_effect",
      "func:test_emit_lineage_events",
      "func:test_events_callback_node_finished",
      "func:test_events_callback_with_all_events_disabled",
      "func:test_events_callback_with_emit_events_false",
      "func:test_events_callback_with_emit_lineage_events_false",
      "func:test_events_callback_with_emit_node_events_false",
      "func:test_failure_result_types",
      "func:test_flow",
      "func:test_invoke_command_return_types",
      "func:test_invoke_debug_command",
      "func:test_invoke_multiple_failures",
      "func:test_invoke_no_raise_on_failure",
      "func:test_invoke_raises_on_failure",
      "func:test_invoke_with_custom_kwargs",
      "func:test_invoke_with_manifest_requiring_commands",
      "func:test_invoke_with_parsing",
      "func:test_invoke_with_preloaded_manifest",
      "func:test_logging_callback",
      "func:test_logging_callback_no_flow",
      "func:test_parse_failure",
      "func:test_parse_success",
      "func:test_runner_default_initialization",
      "func:test_runner_initialization"
    ],
    "old_files": [
      "test_runner.py_o1_mini_2ebfc9a0.py"
    ],
    "new_files": [
      "test_runner_4222e5.py"
    ]
  },
  {
    "file_signature": [
      "func:check_lc_bootstrap_equal",
      "func:check_lc_finality_update_equal",
      "func:check_lc_header_equal",
      "func:check_lc_store_equal",
      "func:check_lc_update_equal",
      "func:check_merkle_branch_equal",
      "func:compute_start_slot_at_next_sync_committee_period",
      "func:compute_start_slot_at_sync_committee_period",
      "func:create_update",
      "func:get_sync_aggregate",
      "func:latest_current_sync_committee_gindex",
      "func:latest_finalized_root_gindex",
      "func:latest_next_sync_committee_gindex",
      "func:latest_normalize_merkle_branch",
      "func:needs_upgrade_to_capella",
      "func:needs_upgrade_to_deneb",
      "func:needs_upgrade_to_electra",
      "func:upgrade_lc_bootstrap_to_new_spec",
      "func:upgrade_lc_finality_update_to_new_spec",
      "func:upgrade_lc_header_to_new_spec",
      "func:upgrade_lc_store_to_new_spec",
      "func:upgrade_lc_update_to_new_spec"
    ],
    "old_files": [
      "light_client.py_o1_mini_99eb3f39.py"
    ],
    "new_files": [
      "light_client_9189e8.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseWindow",
      "class:BaseWindowGroupby",
      "class:Rolling",
      "class:RollingAndExpandingMixin",
      "class:RollingGroupby",
      "class:Window",
      "func:__getattr__",
      "func:__init__",
      "func:__iter__",
      "func:__repr__",
      "func:_apply",
      "func:_apply_columnwise",
      "func:_apply_pairwise",
      "func:_apply_series",
      "func:_apply_tablewise",
      "func:_center_window",
      "func:_check_window_bounds",
      "func:_create_data",
      "func:_dir_additions",
      "func:_generate_cython_apply_func",
      "func:_get_window_indexer",
      "func:_gotitem",
      "func:_index_array",
      "func:_insert_on_column",
      "func:_make_numeric_only",
      "func:_numba_apply",
      "func:_prep_values",
      "func:_raise_monotonic_error",
      "func:_resolve_output",
      "func:_slice_axis_for_step",
      "func:_validate",
      "func:_validate_datetimelike_monotonic",
      "func:_validate_numeric_only",
      "func:aggregate",
      "func:apply",
      "func:apply_func",
      "func:calc",
      "func:corr",
      "func:corr_func",
      "func:count",
      "func:cov",
      "func:cov_func",
      "func:first",
      "func:homogeneous_func",
      "func:kurt",
      "func:last",
      "func:max",
      "func:mean",
      "func:median",
      "func:min",
      "func:pipe",
      "func:quantile",
      "func:rank",
      "func:sem",
      "func:skew",
      "func:std",
      "func:sum",
      "func:var",
      "func:zsqrt_func"
    ],
    "old_files": [
      "rolling.py_o3_mini_ef1f5619.py"
    ],
    "new_files": [
      "rolling_dcc27f.py"
    ]
  },
  {
    "file_signature": [
      "class:ASGIApp",
      "class:PrefectHttpxAsyncClient",
      "class:PrefectHttpxSyncClient",
      "class:PrefectResponse",
      "class:ServerType",
      "func:__init__",
      "func:_add_csrf_headers",
      "func:_send_with_retry",
      "func:determine_server_type",
      "func:from_httpx_response",
      "func:raise_for_status",
      "func:send"
    ],
    "old_files": [
      "base.py_o1_mini_82f0cf98.py"
    ],
    "new_files": [
      "base_a7536d.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseTypingClassWithGenerics",
      "class:BaseTypingInstance",
      "class:BaseTypingValue",
      "class:DefineGenericBaseClass",
      "class:EmptyFilter",
      "class:GenericClass",
      "class:_AnnotatedClassContext",
      "class:_BoundTypeVarName",
      "class:_GenericInstanceWrapper",
      "class:_LazyGenericBaseClass",
      "class:_PseudoTreeNameClass",
      "class:_TypeVarFilter",
      "func:__init__",
      "func:__repr__",
      "func:_as_context",
      "func:_create_instance_with_generics",
      "func:_get_wrapped_value",
      "func:_remap_type_vars",
      "func:define_generics",
      "func:get",
      "func:get_annotated_class_object",
      "func:get_filters",
      "func:get_generics",
      "func:get_qualified_names",
      "func:get_signatures",
      "func:get_type_hint",
      "func:get_type_var_filter",
      "func:infer",
      "func:infer_type_vars",
      "func:is_same_class",
      "func:is_sub_class_of",
      "func:iter_",
      "func:name",
      "func:py__bases__",
      "func:py__call__",
      "func:py__class__",
      "func:py__name__",
      "func:py__stop_iteration_returns",
      "func:tree_node",
      "func:values",
      "func:with_generics"
    ],
    "old_files": [
      "base.py_o1_mini_432e748f.py"
    ],
    "new_files": [
      "base_c73d2b.py"
    ]
  },
  {
    "file_signature": [
      "class:DoubledEmailArgumentError",
      "class:EmailNotDeliveredError",
      "class:FromAddress",
      "class:NoEmailArgumentError",
      "func:__init__",
      "func:build_email",
      "func:clear_scheduled_emails",
      "func:clear_scheduled_invitation_emails",
      "func:custom_email_sender",
      "func:deliver_scheduled_emails",
      "func:get_header",
      "func:get_inlined_template",
      "func:get_inliner_instance",
      "func:handle_send_email_format_changes",
      "func:initialize_connection",
      "func:log_email_config_errors",
      "func:render_templates",
      "func:security_email_from_name",
      "func:send_custom_email",
      "func:send_custom_server_email",
      "func:send_email",
      "func:send_email_to_admins",
      "func:send_email_to_billing_admins_and_realm_owners",
      "func:send_future_email",
      "func:send_one_email",
      "func:tokenized_no_reply_address"
    ],
    "old_files": [
      "send_email.py_o1_mini_a689bab8.py"
    ],
    "new_files": [
      "send_email_8ce2b6.py"
    ]
  },
  {
    "file_signature": [
      "class:MediaContent",
      "func:__init__",
      "func:base_owntone_library",
      "func:convert_to_owntone_uri",
      "func:create_browse_media_response",
      "func:create_media_content_id",
      "func:create_owntone_uri",
      "func:is_owntone_media_content_id",
      "func:library"
    ],
    "old_files": [
      "browse_media.py_o1_mini_6be19dc8.py"
    ],
    "new_files": [
      "browse_media_f0c649.py"
    ]
  },
  {
    "file_signature": [
      "func:cases_fn",
      "func:check_mods",
      "func:combine_mods",
      "func:create_provider",
      "func:generate_case_fn",
      "func:generate_from_tests",
      "func:get_create_provider_fn",
      "func:get_expected_modules",
      "func:get_provider",
      "func:prepare_fn",
      "func:run_state_test_generators"
    ],
    "old_files": [
      "gen.py_o1_mini_1e5c7057.py"
    ],
    "new_files": [
      "gen_afcffc.py"
    ]
  },
  {
    "file_signature": [
      "func:create_node_from_fixture",
      "func:load_and_parse_node_fixture",
      "func:load_node_fixture",
      "func:set_node_attribute",
      "func:snapshot_matter_entities"
    ],
    "old_files": [
      "common.py_o1_mini_25a8206c.py"
    ],
    "new_files": [
      "common_d0ad99.py"
    ]
  },
  {
    "file_signature": [
      "class:Control4Light",
      "func:__init__",
      "func:_create_api_object",
      "func:brightness",
      "func:is_on",
      "func:supported_features"
    ],
    "old_files": [
      "light.py_o1_mini_ef965547.py"
    ],
    "new_files": [
      "light_7b6626.py"
    ]
  },
  {
    "file_signature": [
      "class:ClientWSTimeout",
      "class:ClientWebSocketResponse",
      "func:__aiter__",
      "func:__init__",
      "func:_cancel_heartbeat",
      "func:_cancel_pong_response_cb",
      "func:_handle_ping_pong_exception",
      "func:_ping_task_done",
      "func:_pong_not_received",
      "func:_reset_heartbeat",
      "func:_send_heartbeat",
      "func:_set_closed",
      "func:_set_closing",
      "func:client_notakeover",
      "func:close_code",
      "func:closed",
      "func:compress",
      "func:exception",
      "func:get_extra_info",
      "func:protocol"
    ],
    "old_files": [
      "client_ws.py_o3_mini_3e5e5648.py"
    ],
    "new_files": [
      "client_ws_7f7caf.py"
    ]
  },
  {
    "file_signature": [
      "class:OmadaDevicePortSwitchEntity",
      "class:OmadaDevicePortSwitchEntityDescription",
      "class:OmadaGatewayPortConfigSwitchEntityDescription",
      "class:OmadaGatewayPortStatusSwitchEntityDescription",
      "class:OmadaSwitchPortSwitchEntityDescription",
      "func:__init__",
      "func:_do_update",
      "func:_get_switch_port_base_name",
      "func:_handle_coordinator_update",
      "func:available"
    ],
    "old_files": [
      "switch.py_o1_mini_05bbc9bf.py"
    ],
    "new_files": [
      "switch_e3332d.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseReinforcementLearningModel",
      "class:MyRLEnv",
      "func:__init__",
      "func:_init",
      "func:_on_stop",
      "func:_predict",
      "func:build_ohlc_price_dataframes",
      "func:calculate_reward",
      "func:drop_ohlc_from_df",
      "func:fit",
      "func:get_state_info",
      "func:load_model_from_disk",
      "func:make_env",
      "func:pack_env_dict",
      "func:predict",
      "func:rl_model_predict",
      "func:set_train_and_eval_environments",
      "func:train",
      "func:unset_outlier_removal"
    ],
    "old_files": [
      "BaseReinforcementLearningModel.py_o1_mini_dcfc684b.py"
    ],
    "new_files": [
      "BaseReinforcementLearningModel_998089.py"
    ]
  },
  {
    "file_signature": [
      "func:filter_by_topic_name_via_message",
      "func:generate_topic_history_from_db_rows",
      "func:get_first_message_for_user_in_topic",
      "func:get_topic_display_name",
      "func:get_topic_from_message_info",
      "func:get_topic_history_for_public_stream",
      "func:get_topic_history_for_stream",
      "func:get_topic_resolution_and_bare_name",
      "func:maybe_rename_empty_topic_to_general_chat",
      "func:maybe_rename_general_chat_to_empty_topic",
      "func:messages_for_topic",
      "func:participants_for_topic",
      "func:propagate",
      "func:save_message_for_edit_use_case",
      "func:update_edit_history",
      "func:update_messages_for_topic_edit",
      "func:user_message_exists_for_topic"
    ],
    "old_files": [
      "topic.py_o1_mini_5018cdae.py"
    ],
    "new_files": [
      "topic_6b7f8d.py"
    ]
  },
  {
    "file_signature": [
      "class:Target",
      "func:__init__",
      "func:_closedCallback",
      "func:_initializedCallback",
      "func:_targetInfoChanged",
      "func:browser",
      "func:browserContext",
      "func:opener",
      "func:type",
      "func:url"
    ],
    "old_files": [
      "target.py_o1_mini_5c0a10ab.py"
    ],
    "new_files": [
      "target_8f735b.py"
    ]
  },
  {
    "file_signature": [
      "func:clean_ohlcv_dataframe",
      "func:convert_ohlcv_format",
      "func:ohlcv_fill_up_missing_data",
      "func:ohlcv_to_dataframe",
      "func:order_book_to_dataframe",
      "func:reduce_dataframe_footprint",
      "func:trim_dataframe",
      "func:trim_dataframes"
    ],
    "old_files": [
      "converter.py_o1_mini_ff859105.py"
    ],
    "new_files": [
      "converter_489a6d.py"
    ]
  },
  {
    "file_signature": [
      "class:ExponentialMovingAverage",
      "class:MovingAverage",
      "func:__init__",
      "func:apply",
      "func:assign_average_value",
      "func:load_state_dict",
      "func:restore",
      "func:state_dict"
    ],
    "old_files": [
      "moving_average.py_o1_mini_3b341955.py"
    ],
    "new_files": [
      "moving_average_64416a.py"
    ]
  },
  {
    "file_signature": [
      "func:_patched_path_is_dir",
      "func:_patched_path_is_file",
      "func:_patched_path_read_text",
      "func:remove_restore_result_file",
      "func:restore_result_file_content",
      "func:test_aborting_for_older_versions",
      "func:test_extracting_the_contents_of_a_backup_file",
      "func:test_pw_to_key",
      "func:test_pw_to_key_none",
      "func:test_reading_the_instruction_contents",
      "func:test_removal_of_current_configuration_when_restoring",
      "func:test_remove_backup_file_after_restore",
      "func:test_restoring_backup_that_does_not_exist",
      "func:test_restoring_backup_that_is_not_a_file",
      "func:test_restoring_backup_when_instructions_can_not_be_read"
    ],
    "old_files": [
      "test_backup_restore.py_o1_mini_873b7064.py"
    ],
    "new_files": [
      "test_backup_restore_171613.py"
    ]
  },
  {
    "file_signature": [
      "func:get_time",
      "func:get_train_route",
      "func:mock_config_entry",
      "func:mock_israelrail",
      "func:mock_setup_entry"
    ],
    "old_files": [
      "conftest.py_o1_mini_3e1f3d3a.py"
    ],
    "new_files": [
      "conftest_0f5d02.py"
    ]
  },
  {
    "file_signature": [
      "class:StreamingSourceWithSize",
      "class:ZulipUploadBackend",
      "func:all_message_attachments",
      "func:attachment_vips_source",
      "func:delete_avatar_image",
      "func:delete_export_tarball",
      "func:delete_message_attachment",
      "func:delete_message_attachments",
      "func:generate_message_upload_path",
      "func:get_avatar_contents",
      "func:get_avatar_path",
      "func:get_avatar_url",
      "func:get_emoji_url",
      "func:get_export_tarball_url",
      "func:get_public_upload_root_url",
      "func:get_realm_icon_url",
      "func:get_realm_logo_url",
      "func:realm_avatar_and_logo_path",
      "func:save_attachment_contents",
      "func:upload_export_tarball",
      "func:upload_message_attachment",
      "func:upload_realm_icon_image",
      "func:upload_realm_logo_image",
      "func:upload_single_avatar_image",
      "func:upload_single_emoji_image"
    ],
    "old_files": [
      "base.py_o1_mini_195feea3.py"
    ],
    "new_files": [
      "base_6a0ea7.py"
    ]
  },
  {
    "file_signature": [
      "class:FeatureFlags",
      "class:FeatureStrategy",
      "func:__init__",
      "func:__repr__",
      "func:do_draw",
      "func:is_enabled"
    ],
    "old_files": [
      "featureflags.py_o1_mini_7d9b2b1c.py"
    ],
    "new_files": [
      "featureflags_544034.py"
    ]
  },
  {
    "file_signature": [
      "func:fetch_funding_rates",
      "func:get_historic_ohlcv",
      "func:get_maint_ratio",
      "func:make_storage",
      "func:patch_binance_vision_ohlcv",
      "func:test__get_params_binance",
      "func:test__set_leverage_binance",
      "func:test_additional_exchange_init_binance",
      "func:test_create_stoploss_order_binance",
      "func:test_create_stoploss_order_dry_run_binance",
      "func:test_fill_leverage_tiers_binance",
      "func:test_fill_leverage_tiers_binance_dryrun",
      "func:test_get_historic_ohlcv_binance",
      "func:test_get_maintenance_ratio_and_amt_binance",
      "func:test_liquidation_price_binance",
      "func:test_stoploss_adjust_binance"
    ],
    "old_files": [
      "test_binance.py_o3_mini_cc31d283.py"
    ],
    "new_files": [
      "test_binance_2f9760.py"
    ]
  },
  {
    "file_signature": [
      "class:Worker",
      "func:__init__",
      "func:_executionContextCallback",
      "func:jsHandleFactory",
      "func:onConsoleAPICalled",
      "func:onExecutionContentCreated",
      "func:url"
    ],
    "old_files": [
      "worker.py_o1_mini_223fa64d.py"
    ],
    "new_files": [
      "worker_c5c26f.py"
    ]
  },
  {
    "file_signature": [
      "class:TagPlugin",
      "class:TagsTestCase",
      "func:post_receive",
      "func:pre_receive",
      "func:setUp",
      "func:status_change",
      "func:take_action",
      "func:tearDown",
      "func:test_tag_alert"
    ],
    "old_files": [
      "test_tags.py_o1_mini_b57b2b15.py"
    ],
    "new_files": [
      "test_tags_ccc8b0.py"
    ]
  },
  {
    "file_signature": [
      "class:CreateUserParameters",
      "class:HandleMethod",
      "class:ZulipBaseCommand",
      "func:__call__",
      "func:abort_unless_locked",
      "func:add_create_user_args",
      "func:add_realm_args",
      "func:add_user_list_args",
      "func:check_config",
      "func:create_parser",
      "func:execute",
      "func:get_client",
      "func:get_create_user_params",
      "func:get_realm",
      "func:get_user",
      "func:get_users",
      "func:is_integer_string",
      "func:our_handle"
    ],
    "old_files": [
      "management.py_o1_mini_0bb55999.py"
    ],
    "new_files": [
      "management_f4942e.py"
    ]
  },
  {
    "file_signature": [
      "class:FixtureSmartContracts",
      "class:ServicesSmartContracts",
      "func:deploy_monitoring_service",
      "func:deploy_one_to_n",
      "func:deploy_secret_registry",
      "func:deploy_service_registry",
      "func:deploy_smart_contract_bundle_concurrently",
      "func:deploy_token_network_registry",
      "func:deploy_user_deposit",
      "func:fund_node",
      "func:max_token_networks_fixture",
      "func:monitoring_service_address_fixture",
      "func:one_to_n_address_fixture",
      "func:register_token",
      "func:secret_registry_address_fixture",
      "func:secret_registry_proxy_fixture",
      "func:service_registry_address_fixture",
      "func:token_addresses_fixture",
      "func:token_contract_name_fixture",
      "func:token_network_proxy_fixture",
      "func:token_network_registry_address_fixture",
      "func:token_proxy_fixture",
      "func:transfer_user_deposit_tokens",
      "func:user_deposit_address_fixture"
    ],
    "old_files": [
      "smartcontracts.py_o3_mini_a6a2c765.py"
    ],
    "new_files": [
      "smartcontracts_989d9a.py"
    ]
  },
  {
    "file_signature": [
      "class:InfinityType",
      "class:InvalidVersion",
      "class:NegativeInfinityType",
      "class:Version",
      "class:_BaseVersion",
      "class:_Version",
      "func:__eq__",
      "func:__ge__",
      "func:__gt__",
      "func:__hash__",
      "func:__init__",
      "func:__le__",
      "func:__lt__",
      "func:__ne__",
      "func:__neg__",
      "func:__repr__",
      "func:__str__",
      "func:_cmpkey",
      "func:_parse_letter_version",
      "func:_parse_local_version",
      "func:base_version",
      "func:dev",
      "func:epoch",
      "func:is_devrelease",
      "func:is_postrelease",
      "func:is_prerelease",
      "func:local",
      "func:major",
      "func:micro",
      "func:minor",
      "func:parse",
      "func:post",
      "func:pre",
      "func:public",
      "func:release"
    ],
    "old_files": [
      "__init__.py_o1_mini_4e0d6b53.py"
    ],
    "new_files": [
      "__init___733adb.py"
    ]
  },
  {
    "file_signature": [
      "class:HistPlot",
      "class:KdePlot",
      "func:__init__",
      "func:_adjust_bins",
      "func:_calculate_bins",
      "func:_get_column_weights",
      "func:_get_ind",
      "func:_grouped_hist",
      "func:_grouped_plot",
      "func:_kind",
      "func:_make_plot",
      "func:_make_plot_keywords",
      "func:_plot",
      "func:_post_plot_logic",
      "func:hist_frame",
      "func:hist_series",
      "func:orientation",
      "func:plot_group"
    ],
    "old_files": [
      "hist.py_o3_mini_971ebb25.py"
    ],
    "new_files": [
      "hist_13f59f.py"
    ]
  },
  {
    "file_signature": [
      "class:StreamDict",
      "class:StreamsCategorizedByPermissions",
      "class:UserGroupMembershipDetails",
      "func:access_default_stream_group_by_id",
      "func:access_stream_by_id",
      "func:access_stream_by_id_for_message",
      "func:access_stream_by_name",
      "func:access_stream_common",
      "func:access_stream_for_delete_or_update_requiring_metadata_access",
      "func:access_stream_for_send_message",
      "func:access_stream_to_remove_visibility_policy_by_id",
      "func:access_stream_to_remove_visibility_policy_by_name",
      "func:access_web_public_stream",
      "func:add_filter_option",
      "func:bulk_can_remove_subscribers_from_streams",
      "func:can_access_stream_history",
      "func:can_access_stream_history_by_id",
      "func:can_access_stream_history_by_name",
      "func:can_access_stream_metadata_user_ids",
      "func:can_administer_accessible_channel",
      "func:check_basic_stream_access",
      "func:check_for_exactly_one_stream_arg",
      "func:check_stream_access_based_on_can_send_message_group",
      "func:check_stream_access_for_delete_or_update_requiring_metadata_access",
      "func:check_stream_name_available",
      "func:check_update_all_streams_active_status",
      "func:create_stream_if_needed",
      "func:create_streams_if_needed",
      "func:do_get_streams",
      "func:ensure_stream",
      "func:filter_stream_authorization",
      "func:get_default_value_for_history_public_to_subscribers",
      "func:get_default_values_for_stream_permission_group_settings",
      "func:get_group_setting_value_dict_for_streams",
      "func:get_occupied_streams",
      "func:get_public_streams_queryset",
      "func:get_setting_values_for_group_settings",
      "func:get_stream_by_narrow_operand_access_unchecked",
      "func:get_stream_permission_default_group",
      "func:get_stream_permission_policy_name",
      "func:get_stream_post_policy_value_based_on_group_setting",
      "func:get_streams_for_user",
      "func:get_streams_to_which_user_cannot_add_subscribers",
      "func:get_subscribed_private_streams_for_user",
      "func:get_user_ids_with_metadata_access_via_permission_groups",
      "func:get_web_public_streams",
      "func:get_web_public_streams_queryset",
      "func:has_metadata_access_to_channel_via_groups",
      "func:is_user_in_can_add_subscribers_group",
      "func:is_user_in_can_administer_channel_group",
      "func:is_user_in_can_remove_subscribers_group",
      "func:list_to_streams",
      "func:notify_stream_is_recently_active_update",
      "func:private_stream_user_ids",
      "func:public_stream_user_ids",
      "func:render_stream_description",
      "func:send_stream_creation_event",
      "func:send_stream_deletion_event",
      "func:stream_to_dict",
      "func:subscribed_to_stream",
      "func:update_stream_active_status_for_realm",
      "func:user_has_content_access"
    ],
    "old_files": [
      "streams.py_o1_mini_5c0ba455.py"
    ],
    "new_files": [
      "streams_748e41.py"
    ]
  },
  {
    "file_signature": [
      "class:TestIpythonCommand",
      "class:TestPackageCommand",
      "func:call_mock",
      "func:fake_copyfile",
      "func:test_env",
      "func:test_fail_no_ipython",
      "func:test_happy_path",
      "func:test_no_pyproject_toml"
    ],
    "old_files": [
      "test_project.py_o1_mini_5bb02c4d.py"
    ],
    "new_files": [
      "test_project_1f989e.py"
    ]
  },
  {
    "file_signature": [
      "class:WandBCallback",
      "func:__init__",
      "func:_log",
      "func:close",
      "func:load_state_dict",
      "func:log_scalars",
      "func:log_tensors",
      "func:on_start",
      "func:state_dict"
    ],
    "old_files": [
      "wandb.py_o3_mini_0759ce02.py"
    ],
    "new_files": [
      "wandb_4a4375.py"
    ]
  },
  {
    "file_signature": [
      "class:KoalasAreaPlot",
      "class:KoalasBarPlot",
      "class:KoalasBarhPlot",
      "class:KoalasBoxPlot",
      "class:KoalasHistPlot",
      "class:KoalasKdePlot",
      "class:KoalasLinePlot",
      "class:KoalasPiePlot",
      "class:KoalasScatterPlot",
      "func:__init__",
      "func:_args_adjust",
      "func:_compute_plot_data",
      "func:_get_ind",
      "func:_make_plot",
      "func:_plot",
      "func:boxplot",
      "func:plot_frame",
      "func:plot_koalas",
      "func:plot_series",
      "func:rc_defaults",
      "func:update_dict"
    ],
    "old_files": [
      "matplotlib.py_o3_mini_714edf47.py"
    ],
    "new_files": [
      "matplotlib_5964e7.py"
    ]
  },
  {
    "file_signature": [
      "class:ModelMetaclass",
      "class:_DeprecatedFieldDescriptor",
      "class:_ModelNamespaceDict",
      "class:_PydanticWeakRef",
      "func:NoInitField",
      "func:__call__",
      "func:__dir__",
      "func:__fields__",
      "func:__get__",
      "func:__getattr__",
      "func:__init__",
      "func:__instancecheck__",
      "func:__new__",
      "func:__prepare__",
      "func:__pydantic_fields_complete__",
      "func:__reduce__",
      "func:__set__",
      "func:__set_name__",
      "func:__setitem__",
      "func:__subclasscheck__",
      "func:_collect_bases_data",
      "func:build_lenient_weakvaluedict",
      "func:complete_model_class",
      "func:default_ignored_types",
      "func:get_model_post_init",
      "func:hash_func",
      "func:init_private_attributes",
      "func:inspect_namespace",
      "func:make_hash_func",
      "func:set_default_hash_func",
      "func:set_deprecated_descriptors",
      "func:set_model_fields",
      "func:unpack_lenient_weakvaluedict",
      "func:wrapped_model_post_init"
    ],
    "old_files": [
      "_model_construction.py_o1_mini_47462748.py"
    ],
    "new_files": [
      "_model_construction_47e7ac.py"
    ]
  },
  {
    "file_signature": [
      "class:PublicTransportData",
      "class:TransportNSWSensor",
      "func:__init__",
      "func:_get_value",
      "func:extra_state_attributes",
      "func:icon",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_o1_mini_dab7cb1b.py"
    ],
    "new_files": [
      "sensor_cdccc8.py"
    ]
  },
  {
    "file_signature": [
      "class:CSVFormatter",
      "func:__init__",
      "func:_generate_multiindex_header_rows",
      "func:_get_index_label_flat",
      "func:_get_index_label_from_obj",
      "func:_get_index_label_multiindex",
      "func:_has_aliases",
      "func:_initialize_chunksize",
      "func:_initialize_columns",
      "func:_initialize_index_label",
      "func:_initialize_quotechar",
      "func:_need_to_save_header",
      "func:_number_format",
      "func:_save",
      "func:_save_body",
      "func:_save_chunk",
      "func:_save_header",
      "func:data_index",
      "func:decimal",
      "func:encoded_labels",
      "func:float_format",
      "func:has_mi_columns",
      "func:header",
      "func:index",
      "func:na_rep",
      "func:nlevels",
      "func:save",
      "func:write_cols"
    ],
    "old_files": [
      "csvs.py_o3_mini_c26b4e7f.py"
    ],
    "new_files": [
      "csvs_0376ba.py"
    ]
  },
  {
    "file_signature": [
      "class:InstrumentedMigration",
      "func:_instrument_apply_update",
      "func:_instrument_migrate_schema",
      "func:_instrument_migrate_schema_live",
      "func:_instrument_migrate_schema_non_live",
      "func:instrument_migration",
      "func:instrument_migration_fixture",
      "func:pytest_configure",
      "func:recorder_dialect_name",
      "func:skip_by_db_engine"
    ],
    "old_files": [
      "conftest.py_o1_mini_02cc8c72.py"
    ],
    "new_files": [
      "conftest_81d476.py"
    ]
  },
  {
    "file_signature": [
      "class:InsteonEntity",
      "func:__hash__",
      "func:__init__",
      "func:_get_label",
      "func:_print_aldb",
      "func:address",
      "func:async_entity_update",
      "func:device_info",
      "func:extra_state_attributes",
      "func:get_device_property",
      "func:group",
      "func:name",
      "func:unique_id"
    ],
    "old_files": [
      "entity.py_o1_mini_a795742b.py"
    ],
    "new_files": [
      "entity_27a2b6.py"
    ]
  },
  {
    "file_signature": [
      "class:ElkAttachedEntity",
      "class:ElkEntity",
      "func:__init__",
      "func:_element_callback",
      "func:_element_changed",
      "func:available",
      "func:create_elk_entities",
      "func:device_info",
      "func:extra_state_attributes",
      "func:initial_attrs",
      "func:unique_id"
    ],
    "old_files": [
      "entity.py_o1_mini_120bd541.py"
    ],
    "new_files": [
      "entity_e12cd0.py"
    ]
  },
  {
    "file_signature": [
      "class:SatelIntegraBinarySensor",
      "func:__init__",
      "func:_devices_updated",
      "func:device_class",
      "func:icon",
      "func:is_on",
      "func:name"
    ],
    "old_files": [
      "binary_sensor.py_o1_mini_5476e462.py"
    ],
    "new_files": [
      "binary_sensor_f7efe0.py"
    ]
  },
  {
    "file_signature": [
      "class:Hyperliquid",
      "func:_adjust_hyperliquid_order",
      "func:_ccxt_config",
      "func:_lev_prep",
      "func:dry_run_liquidation_price",
      "func:fetch_order",
      "func:fetch_orders",
      "func:get_funding_fees",
      "func:get_max_leverage"
    ],
    "old_files": [
      "hyperliquid.py_o1_mini_bd07fd5a.py"
    ],
    "new_files": [
      "hyperliquid_da9881.py"
    ]
  },
  {
    "file_signature": [
      "class:EcobeeSensor",
      "class:EcobeeSensorEntityDescription",
      "func:__init__",
      "func:available",
      "func:device_info",
      "func:native_value",
      "func:unique_id"
    ],
    "old_files": [
      "sensor.py_o1_mini_975807de.py"
    ],
    "new_files": [
      "sensor_132dfc.py"
    ]
  },
  {
    "file_signature": [
      "func:add_sum",
      "func:grouped_kahan_sum",
      "func:grouped_sum",
      "func:remove_sum",
      "func:sliding_sum"
    ],
    "old_files": [
      "sum_.py_o1_mini_a6cae1fe.py"
    ],
    "new_files": [
      "sum__a10910.py"
    ]
  },
  {
    "file_signature": [
      "class:PeriodArray",
      "func:__array__",
      "func:__arrow_array__",
      "func:__init__",
      "func:_add_offset",
      "func:_add_timedelta_arraylike",
      "func:_add_timedeltalike_scalar",
      "func:_addsub_int_array_or_scalar",
      "func:_box_func",
      "func:_check_compatible_with",
      "func:_check_timedeltalike_freq_compat",
      "func:_field_accessor",
      "func:_format_native_types",
      "func:_formatter",
      "func:_from_datetime64",
      "func:_from_fields",
      "func:_from_sequence",
      "func:_from_sequence_of_strings",
      "func:_generate_range",
      "func:_get_ordinal_range",
      "func:_make_field_arrays",
      "func:_pad_or_backfill",
      "func:_range_from_fields",
      "func:_reduce",
      "func:_scalar_from_string",
      "func:_scalar_type",
      "func:_simple_new",
      "func:_unbox_scalar",
      "func:asfreq",
      "func:astype",
      "func:dt64arr_to_periodarr",
      "func:dtype",
      "func:f",
      "func:freq",
      "func:freqstr",
      "func:is_leap_year",
      "func:period_array",
      "func:raise_on_incompatible",
      "func:searchsorted",
      "func:to_timestamp",
      "func:validate_dtype_freq"
    ],
    "old_files": [
      "period.py_o1_mini_7e7817b6.py"
    ],
    "new_files": [
      "period_0be655.py"
    ]
  },
  {
    "file_signature": [
      "class:BytestringProvider",
      "class:HypothesisProvider",
      "class:PrimitiveProvider",
      "class:_BackendInfoMsg",
      "func:__init__",
      "func:_compute_draw_float_init_logic",
      "func:_draw_bits",
      "func:_draw_bounded_integer",
      "func:_draw_collection",
      "func:_draw_float",
      "func:_draw_float_init_logic",
      "func:_draw_unbounded_integer",
      "func:draw_boolean",
      "func:draw_bytes",
      "func:draw_float",
      "func:draw_integer",
      "func:draw_string",
      "func:observe_information_messages",
      "func:observe_test_case",
      "func:per_test_case_context_manager",
      "func:permitted",
      "func:realize",
      "func:span_end",
      "func:span_start"
    ],
    "old_files": [
      "providers.py_o1_mini_fbaf2da5.py"
    ],
    "new_files": [
      "providers_fc28a2.py"
    ]
  },
  {
    "file_signature": [
      "class:AirzoneAidooBinarySensor",
      "class:AirzoneBinarySensor",
      "class:AirzoneBinarySensorEntityDescription",
      "class:AirzoneSystemBinarySensor",
      "class:AirzoneZoneBinarySensor",
      "func:__init__",
      "func:_async_update_attrs",
      "func:_handle_coordinator_update",
      "func:available"
    ],
    "old_files": [
      "binary_sensor.py_o1_mini_a141e660.py"
    ],
    "new_files": [
      "binary_sensor_fae711.py"
    ]
  },
  {
    "file_signature": [
      "class:TestServicePrincipal",
      "func:awsclient",
      "func:non_iso_suffixes",
      "func:region",
      "func:test_codedeploy_and_logs",
      "func:test_defaults",
      "func:test_ec2",
      "func:test_endpoint_dns_suffix",
      "func:test_endpoint_dns_suffix_from_arn",
      "func:test_endpoint_from_arn",
      "func:test_iso_exceptions",
      "func:test_local_suffix",
      "func:test_others",
      "func:test_resolve_endpoint",
      "func:test_states",
      "func:test_states_iso",
      "func:test_states_isob",
      "func:test_unmatched_service",
      "func:url_suffix"
    ],
    "old_files": [
      "test_awsclient.py_o1_mini_2fbde922.py"
    ],
    "new_files": [
      "test_awsclient_21d219.py"
    ]
  },
  {
    "file_signature": [
      "class:SupersetTestCase",
      "func:create_app",
      "func:create_fake_db",
      "func:create_fake_db_for_macros",
      "func:create_user",
      "func:create_user_with_roles",
      "func:db_insert_temp_object",
      "func:delete_assert_metric",
      "func:delete_fake_db",
      "func:delete_fake_db_for_macros",
      "func:get_assert_metric",
      "func:get_birth_names_dataset",
      "func:get_dash_by_slug",
      "func:get_database_by_id",
      "func:get_database_by_name",
      "func:get_datasource_mock",
      "func:get_dttm",
      "func:get_json_resp",
      "func:get_list",
      "func:get_nonexistent_numeric_id",
      "func:get_or_create",
      "func:get_resp",
      "func:get_role",
      "func:get_slice",
      "func:get_table",
      "func:get_table_by_id",
      "func:get_user",
      "func:grant_public_access_to_table",
      "func:grant_role_access_to_table",
      "func:insert_dashboard",
      "func:is_module_installed",
      "func:login",
      "func:logout",
      "func:mock_get_dialect",
      "func:post_assert_metric",
      "func:put_assert_metric",
      "func:revoke_public_access_to_table",
      "func:revoke_role_access_to_table",
      "func:run_sql",
      "func:tearDown",
      "func:temporary_user"
    ],
    "old_files": [
      "base_tests.py_o3_mini_525dc3b2.py"
    ],
    "new_files": [
      "base_tests_a1e90e.py"
    ]
  },
  {
    "file_signature": [
      "class:TestPipelineCreateCommand",
      "class:TestPipelineDeleteCommand",
      "class:TestSyncDirs",
      "func:make_pipelines",
      "func:mock_click",
      "func:source",
      "func:test_bad_env",
      "func:test_bad_pipeline_name",
      "func:test_catalog_and_params",
      "func:test_create_pipeline",
      "func:test_create_pipeline_skip_config",
      "func:test_create_pipeline_template",
      "func:test_create_pipeline_template_command_line_override",
      "func:test_delete_pipeline",
      "func:test_delete_pipeline_fail",
      "func:test_delete_pipeline_skip",
      "func:test_duplicate_pipeline_name",
      "func:test_failed_copy",
      "func:test_no_pipeline_arg_error",
      "func:test_pipeline_delete_confirmation",
      "func:test_pipeline_delete_confirmation_skip",
      "func:test_pipeline_not_found",
      "func:test_skip_copy",
      "func:test_sync_no_target",
      "func:test_sync_target_exists"
    ],
    "old_files": [
      "test_pipeline.py_o1_mini_e758eb0d.py"
    ],
    "new_files": [
      "test_pipeline_ab4ea1.py"
    ]
  },
  {
    "file_signature": [
      "class:MicrobatchBuilder",
      "func:__init__",
      "func:batch_id",
      "func:build_batches",
      "func:build_end_time",
      "func:build_jinja_context_for_batch",
      "func:build_start_time",
      "func:ceiling_timestamp",
      "func:format_batch_start",
      "func:offset_timestamp",
      "func:truncate_timestamp"
    ],
    "old_files": [
      "microbatch.py_o1_mini_cb5cf043.py"
    ],
    "new_files": [
      "microbatch_743d2f.py"
    ]
  },
  {
    "file_signature": [
      "class:ImportDatasetsCommand",
      "func:__init__",
      "func:import_column",
      "func:import_dataset",
      "func:import_datasource",
      "func:import_from_dict",
      "func:import_metric",
      "func:import_simple_obj",
      "func:lookup_sqla_column",
      "func:lookup_sqla_database",
      "func:lookup_sqla_metric",
      "func:lookup_sqla_table",
      "func:run",
      "func:validate"
    ],
    "old_files": [
      "v0.py_o1_mini_d01b0a7c.py"
    ],
    "new_files": [
      "v0_fbd680.py"
    ]
  },
  {
    "file_signature": [
      "func:combined_evaluator_extractor",
      "func:evaluator_extractor",
      "func:extract",
      "func:extract_base_iteration",
      "func:extract_lc",
      "func:extract_param_tuning_iteration",
      "func:extract_reverse_lc",
      "func:extract_sc",
      "func:extract_tuning",
      "func:learning_curve_evaluator_extractor",
      "func:permutation_extractor",
      "func:repeat_split_log",
      "func:reverse_learning_curve_evaluator_extractor",
      "func:split_evaluator_extractor",
      "func:split_evaluator_extractor_iteration",
      "func:stability_curve_evaluator_extractor",
      "func:temporal_split_evaluator_extractor"
    ],
    "old_files": [
      "pd_extractors.py_o1_mini_89419367.py"
    ],
    "new_files": [
      "pd_extractors_601e06.py"
    ]
  },
  {
    "file_signature": [
      "func:cta_result",
      "func:delete_tmp_view_or_table",
      "func:drop_table_if_exists",
      "func:get_query_by_id",
      "func:get_select_star",
      "func:my_task",
      "func:quote_f",
      "func:run_sql",
      "func:setup_sqllab",
      "func:test_create_table_as",
      "func:test_default_data_serialization",
      "func:test_default_payload_serialization",
      "func:test_in_app_context",
      "func:test_msgpack_payload_serialization",
      "func:test_new_data_serialization",
      "func:test_run_async_cta_query",
      "func:test_run_async_cta_query_with_lower_limit",
      "func:test_run_async_query_cta_config",
      "func:test_run_sync_query_cta",
      "func:test_run_sync_query_cta_config",
      "func:test_run_sync_query_cta_no_data",
      "func:test_run_sync_query_dont_exist",
      "func:wait_for_success"
    ],
    "old_files": [
      "celery_tests.py_o1_mini_566861b3.py"
    ],
    "new_files": [
      "celery_tests_fc4a66.py"
    ]
  },
  {
    "file_signature": [
      "func:_normalise_json",
      "func:_normalise_json_ordered",
      "func:_pull_field",
      "func:_pull_records",
      "func:_recursive_extract",
      "func:_simple_json_normalize",
      "func:convert_to_line_delimits",
      "func:json_normalize",
      "func:nested_to_record"
    ],
    "old_files": [
      "_normalize.py_o1_mini_9c1856db.py"
    ],
    "new_files": [
      "_normalize_0877ea.py"
    ]
  },
  {
    "file_signature": [
      "func:test_eip1559_txn_rewards",
      "func:test_rewards",
      "func:test_rewards_nephew_uncle_different_vm",
      "func:test_rewards_uncle_created_at_different_generations",
      "func:test_uncle_block_inclusion_validity"
    ],
    "old_files": [
      "test_rewards.py_o1_mini_775a50b0.py"
    ],
    "new_files": [
      "test_rewards_83728f.py"
    ]
  },
  {
    "file_signature": [
      "func:dtypes",
      "func:get_dtype",
      "func:test_dataframe_dtypes",
      "func:test_series_dtypes",
      "func:test_series_nullable_int"
    ],
    "old_files": [
      "test_dtypes.py_o1_mini_4f82283d.py"
    ],
    "new_files": [
      "test_dtypes_1ace40.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_required_gas_estimate",
      "func:gas_required_for_channel_lifecycle_after_close",
      "func:gas_required_for_channel_lifecycle_after_open",
      "func:gas_required_for_channel_lifecycle_complete",
      "func:get_required_gas_estimate",
      "func:get_reserve_estimate",
      "func:has_enough_gas_reserve"
    ],
    "old_files": [
      "gas_reserve.py_o1_mini_44e8b0f7.py"
    ],
    "new_files": [
      "gas_reserve_f132a8.py"
    ]
  },
  {
    "file_signature": [
      "class:Filter",
      "class:FilterState",
      "class:LowPassFilter",
      "class:OutlierFilter",
      "class:RangeFilter",
      "class:SensorFilter",
      "class:ThrottleFilter",
      "class:TimeSMAFilter",
      "class:TimeThrottleFilter",
      "class:_State",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:_async_hass_started",
      "func:_filter_state",
      "func:_leak",
      "func:_update_filter_sensor_state",
      "func:_update_filter_sensor_state_event",
      "func:filter_state",
      "func:name",
      "func:native_value",
      "func:reset",
      "func:set_precision",
      "func:skip_processing",
      "func:window_size"
    ],
    "old_files": [
      "sensor.py_o1_mini_70b43782.py"
    ],
    "new_files": [
      "sensor_f004b2.py"
    ]
  },
  {
    "file_signature": [
      "class:AdhocFilterClause",
      "class:AdhocMetricExpressionType",
      "class:AnnotationType",
      "class:ColumnSpec",
      "class:ColumnTypeSource",
      "class:DashboardStatus",
      "class:DatasourceDict",
      "class:DatasourceName",
      "class:DatasourceType",
      "class:DateColumn",
      "class:ExtraFiltersReasonType",
      "class:ExtraFiltersTimeColumnType",
      "class:FilterOperator",
      "class:FilterStringOperators",
      "class:GenericDataType",
      "class:HeaderDataType",
      "class:LoggerLevel",
      "class:PostProcessingBoxplotWhiskerType",
      "class:PostProcessingContributionOrientation",
      "class:QueryObjectFilterClause",
      "class:QuerySource",
      "class:QueryStatus",
      "class:ReservedUrlParameters",
      "class:RowLevelSecurityFilterType",
      "class:SigalrmTimeout",
      "class:TimerTimeout",
      "func:LongText",
      "func:MediumText",
      "func:__enter__",
      "func:__eq__",
      "func:__exit__",
      "func:__hash__",
      "func:__init__",
      "func:apply_max_row_limit",
      "func:as_list",
      "func:backend",
      "func:cast_to_boolean",
      "func:cast_to_num",
      "func:check_is_safe_zip",
      "func:choicify",
      "func:convert_legacy_filters_into_adhoc",
      "func:create_ssl_cert_file",
      "func:create_zip",
      "func:ensure_path_exists",
      "func:error_msg_from_exception",
      "func:extract_column_dtype",
      "func:extract_dataframe_dtypes",
      "func:find_duplicates",
      "func:form_data_to_adhoc",
      "func:format_list",
      "func:generic_find_constraint_name",
      "func:generic_find_fk_constraint_name",
      "func:generic_find_fk_constraint_names",
      "func:generic_find_uq_constraint_name",
      "func:get_base_axis_columns",
      "func:get_base_axis_labels",
      "func:get_column_name",
      "func:get_column_name_from_column",
      "func:get_column_name_from_metric",
      "func:get_column_names",
      "func:get_column_names_from_columns",
      "func:get_column_names_from_metrics",
      "func:get_datasource_full_name",
      "func:get_email_address_list",
      "func:get_example_default_schema",
      "func:get_filter_key",
      "func:get_first_metric_name",
      "func:get_form_data_token",
      "func:get_legacy_time_column",
      "func:get_metric_name",
      "func:get_metric_names",
      "func:get_non_base_axis_columns",
      "func:get_stacktrace",
      "func:get_time_filter_status",
      "func:get_user",
      "func:get_user_email",
      "func:get_user_id",
      "func:get_username",
      "func:get_x_axis_label",
      "func:handle_timeout",
      "func:is_adhoc_column",
      "func:is_adhoc_metric",
      "func:is_base_axis",
      "func:is_standalone_mode",
      "func:is_test",
      "func:markdown",
      "func:merge_extra_filters",
      "func:merge_extra_form_data",
      "func:merge_request_params",
      "func:normalize_dttm_col",
      "func:override_user",
      "func:parse_boolean_string",
      "func:parse_js_uri_path_item",
      "func:parse_ssl_cert",
      "func:pessimistic_connection_handling",
      "func:ping_connection",
      "func:readfile",
      "func:remove_duplicates",
      "func:remove_extra_adhoc_filters",
      "func:send_email_smtp",
      "func:send_mime_email",
      "func:set_sqlite_pragma",
      "func:shortid",
      "func:simple_filter_to_adhoc",
      "func:split",
      "func:split_adhoc_filters_into_base_filters",
      "func:time_function",
      "func:to_int",
      "func:user_label",
      "func:zlib_compress",
      "func:zlib_decompress"
    ],
    "old_files": [
      "core.py_o3_mini_18a2c38d.py"
    ],
    "new_files": [
      "core_567450.py"
    ]
  },
  {
    "file_signature": [
      "class:ClientConnectionError",
      "class:ClientConnectionResetError",
      "class:ClientConnectorCertificateError",
      "class:ClientConnectorDNSError",
      "class:ClientConnectorError",
      "class:ClientConnectorSSLError",
      "class:ClientError",
      "class:ClientHttpProxyError",
      "class:ClientOSError",
      "class:ClientPayloadError",
      "class:ClientProxyConnectionError",
      "class:ClientResponseError",
      "class:ClientSSLError",
      "class:ConnectionTimeoutError",
      "class:ContentTypeError",
      "class:InvalidURL",
      "class:InvalidUrlClientError",
      "class:InvalidUrlRedirectClientError",
      "class:NonHttpUrlClientError",
      "class:NonHttpUrlRedirectClientError",
      "class:RedirectClientError",
      "class:ServerConnectionError",
      "class:ServerDisconnectedError",
      "class:ServerFingerprintMismatch",
      "class:ServerTimeoutError",
      "class:SocketTimeoutError",
      "class:TooManyRedirects",
      "class:UnixClientConnectorError",
      "class:WSMessageTypeError",
      "class:WSServerHandshakeError",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:certificate_error",
      "func:description",
      "func:host",
      "func:os_error",
      "func:path",
      "func:port",
      "func:ssl",
      "func:url"
    ],
    "old_files": [
      "client_exceptions.py_o1_mini_dce05f8f.py"
    ],
    "new_files": [
      "client_exceptions_dac1d7.py"
    ]
  },
  {
    "file_signature": [
      "func:_find_thresholds_with_same_risk",
      "func:find_thresholds_with_same_risk",
      "func:isotonic_calibration_learner",
      "func:p"
    ],
    "old_files": [
      "calibration.py_o1_mini_70684408.py"
    ],
    "new_files": [
      "calibration_d3fe81.py"
    ]
  },
  {
    "file_signature": [
      "class:NumericArray",
      "class:NumericDtype",
      "func:__from_arrow__",
      "func:__init__",
      "func:__repr__",
      "func:_coerce_to_array",
      "func:_coerce_to_data_and_mask",
      "func:_from_sequence_of_strings",
      "func:_get_dtype_mapping",
      "func:_is_numeric",
      "func:_safe_cast",
      "func:_standardize_dtype",
      "func:dtype",
      "func:is_signed_integer",
      "func:is_unsigned_integer"
    ],
    "old_files": [
      "numeric.py_o1_mini_35c894e6.py"
    ],
    "new_files": [
      "numeric_b9721d.py"
    ]
  },
  {
    "file_signature": [
      "class:TestComparison",
      "func:create_categorical_intervals",
      "func:create_series_categorical_intervals",
      "func:create_series_intervals",
      "func:elementwise_comparison",
      "func:interval_array",
      "func:interval_constructor",
      "func:left_right_dtypes",
      "func:op",
      "func:test_compare_length_mismatch_errors",
      "func:test_compare_list_like_interval",
      "func:test_compare_list_like_interval_mixed_closed",
      "func:test_compare_list_like_nan",
      "func:test_compare_list_like_object",
      "func:test_compare_list_like_other",
      "func:test_compare_scalar_interval",
      "func:test_compare_scalar_interval_mixed_closed",
      "func:test_compare_scalar_na",
      "func:test_compare_scalar_other",
      "func:test_comparison_operations",
      "func:test_index_series_compat"
    ],
    "old_files": [
      "test_interval.py_o1_mini_1837ee59.py"
    ],
    "new_files": [
      "test_interval_e04786.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractRunner",
      "func:__init__",
      "func:_enumerate_nodes_with_outputs",
      "func:_enumerate_non_persistent_inputs",
      "func:_find_all_nodes_for_resumed_pipeline",
      "func:_find_initial_node_group",
      "func:_find_nodes_to_resume_from",
      "func:_get_executor",
      "func:_get_required_workers_count",
      "func:_logger",
      "func:_nodes_with_external_inputs",
      "func:_raise_runtime_error",
      "func:_release_datasets",
      "func:_run",
      "func:_set_manager_datasets",
      "func:_suggest_resume_scenario",
      "func:_validate_catalog",
      "func:_validate_max_workers",
      "func:_validate_nodes",
      "func:run",
      "func:run_node",
      "func:run_only_missing"
    ],
    "old_files": [
      "runner.py_o1_mini_4e8f976c.py"
    ],
    "new_files": [
      "runner_7722d1.py"
    ]
  },
  {
    "file_signature": [
      "class:ClientCapabilities",
      "func:_draft_update_action",
      "func:add_realm_logo_fields",
      "func:always_want",
      "func:apply_event",
      "func:apply_events",
      "func:do_events_register",
      "func:fetch_initial_state_data",
      "func:post_process_state"
    ],
    "old_files": [
      "events.py_o1_mini_b136f42f.py"
    ],
    "new_files": [
      "events_b9f3ac.py"
    ]
  },
  {
    "file_signature": [
      "class:GradientDescentTrainer",
      "func:__init__",
      "func:_finalize_best_model_state",
      "func:_finalize_model",
      "func:_load_model_state",
      "func:_maybe_restore_checkpoint",
      "func:_pytorch_model",
      "func:_save_model_state",
      "func:_train_epoch",
      "func:_try_train",
      "func:_validation_loss",
      "func:batch_outputs",
      "func:clip_gradient",
      "func:from_partial_objects",
      "func:get_best_weights_path",
      "func:get_checkpoint_state",
      "func:rescale_gradients",
      "func:train"
    ],
    "old_files": [
      "gradient_descent_trainer.py_o3_mini_a4969319.py"
    ],
    "new_files": [
      "gradient_descent_trainer_096f6d.py"
    ]
  },
  {
    "file_signature": [
      "func:blockchain_services",
      "func:deploy_client",
      "func:proxy_manager",
      "func:unregistered_custom_token",
      "func:unregistered_token",
      "func:web3"
    ],
    "old_files": [
      "blockchain.py_o1_mini_8dc4e30c.py"
    ],
    "new_files": [
      "blockchain_37e43c.py"
    ]
  },
  {
    "file_signature": [
      "func:add_column",
      "func:clone_table",
      "func:delete_records",
      "func:get_records",
      "func:insert_records",
      "func:update_records"
    ],
    "old_files": [
      "common.py_o1_mini_c333ba96.py"
    ],
    "new_files": [
      "common_285794.py"
    ]
  },
  {
    "file_signature": [
      "class:Sensor",
      "class:SensorDelegate",
      "func:__init__",
      "func:__iter__",
      "func:__repr__",
      "func:add",
      "func:asdict",
      "func:on_assignment_completed",
      "func:on_assignment_error",
      "func:on_assignment_start",
      "func:on_commit_completed",
      "func:on_commit_initiated",
      "func:on_message_in",
      "func:on_message_out",
      "func:on_rebalance_end",
      "func:on_rebalance_return",
      "func:on_rebalance_start",
      "func:on_send_completed",
      "func:on_send_error",
      "func:on_send_initiated",
      "func:on_stream_event_in",
      "func:on_stream_event_out",
      "func:on_table_del",
      "func:on_table_get",
      "func:on_table_set",
      "func:on_topic_buffer_full",
      "func:on_web_request_end",
      "func:on_web_request_start",
      "func:remove"
    ],
    "old_files": [
      "base.py_o1_mini_49dec30f.py"
    ],
    "new_files": [
      "base_949c11.py"
    ]
  },
  {
    "file_signature": [
      "class:ChangeloggedSet",
      "class:ChangeloggedSetManager",
      "class:SetAction",
      "class:SetGlobalTable",
      "class:SetManagerOperation",
      "class:SetTable",
      "class:SetTableManager",
      "class:SetWindowSet",
      "class:SetWindowWrapper",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__post_init__",
      "func:_apply_set_operation",
      "func:_clear",
      "func:_difference_update",
      "func:_enable",
      "func:_intersection_update",
      "func:_new_store",
      "func:_symmetric_difference_update",
      "func:_update",
      "func:add",
      "func:apply_changelog_event",
      "func:as_stored_value",
      "func:discard",
      "func:on_add",
      "func:on_change",
      "func:on_discard",
      "func:sync_from_storage",
      "func:topic"
    ],
    "old_files": [
      "sets.py_o1_mini_3fd4987d.py"
    ],
    "new_files": [
      "sets_3f50ca.py"
    ]
  },
  {
    "file_signature": [
      "class:Pool",
      "class:ThreadException",
      "class:ThreadProxy",
      "class:ThreadResponse",
      "func:__getattr__",
      "func:__init__",
      "func:_identity",
      "func:_new_session",
      "func:exceptions",
      "func:from_exceptions",
      "func:from_urls",
      "func:get_exception",
      "func:get_response",
      "func:join_all",
      "func:responses"
    ],
    "old_files": [
      "pool.py_o1_mini_3b7661e7.py"
    ],
    "new_files": [
      "pool_9fd38f.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_sorted_source_vocab_fnames",
      "func:_get_sorted_target_vocab_fnames",
      "func:are_identical",
      "func:build_from_paths",
      "func:build_pruned_vocab",
      "func:build_vocab",
      "func:count_tokens",
      "func:count_tokens_for_path",
      "func:get_ordered_tokens_from_vocab",
      "func:is_valid_vocab",
      "func:load_or_create_vocab",
      "func:load_or_create_vocabs",
      "func:load_source_vocabs",
      "func:load_target_vocabs",
      "func:main",
      "func:prepare_vocab",
      "func:reverse_vocab",
      "func:save_source_vocabs",
      "func:save_target_vocabs",
      "func:vocab_from_json",
      "func:vocab_to_json"
    ],
    "old_files": [
      "vocab.py_o3_mini_aa60a35d.py"
    ],
    "new_files": [
      "vocab_563bd2.py"
    ]
  },
  {
    "file_signature": [
      "func:test_first_categorical_and_datetime_data_nat",
      "func:test_first_last_extension_array_keeps_dtype",
      "func:test_first_last_nth",
      "func:test_first_last_nth_dtypes",
      "func:test_first_last_nth_dtypes2",
      "func:test_first_last_nth_nan_dtype",
      "func:test_first_last_tz",
      "func:test_first_last_tz_multi_column",
      "func:test_first_last_with_None",
      "func:test_first_last_with_None_expanded",
      "func:test_first_last_with_na_object",
      "func:test_first_multi_key_groupby_categorical",
      "func:test_first_strings_timestamps",
      "func:test_group_selection_cache",
      "func:test_groupby_head_tail",
      "func:test_groupby_last_first_nth_with_none",
      "func:test_groupby_nth_int_like_precision",
      "func:test_groupby_nth_interval",
      "func:test_head_tail_dropna_false",
      "func:test_head_tail_dropna_true",
      "func:test_invalid_argument",
      "func:test_negative_step",
      "func:test_np_ints",
      "func:test_nth",
      "func:test_nth2",
      "func:test_nth3",
      "func:test_nth4",
      "func:test_nth5",
      "func:test_nth_after_selection",
      "func:test_nth_bdays",
      "func:test_nth_column_order",
      "func:test_nth_empty",
      "func:test_nth_indexed",
      "func:test_nth_multi_grouper",
      "func:test_nth_multi_index_as_expected",
      "func:test_nth_nan_in_grouper",
      "func:test_nth_nan_in_grouper_series",
      "func:test_nth_with_na_object",
      "func:test_slice"
    ],
    "old_files": [
      "test_nth.py_o1_mini_48be8cb9.py"
    ],
    "new_files": [
      "test_nth_cbbcbb.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseMapper",
      "class:LambdaMapper",
      "class:Mapper",
      "class:lambda_mapper",
      "func:__call__",
      "func:__init__",
      "func:__repr__",
      "func:_generate_mapped_data_point",
      "func:_update_fields",
      "func:get_hashable",
      "func:get_parameters",
      "func:is_hashable",
      "func:reset_cache",
      "func:run"
    ],
    "old_files": [
      "core.py_o1_mini_f5aee000.py"
    ],
    "new_files": [
      "core_b5776a.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoLock",
      "func:__init__",
      "func:is_jammed",
      "func:is_locked",
      "func:is_locking",
      "func:is_open",
      "func:is_opening",
      "func:is_unlocking"
    ],
    "old_files": [
      "lock.py_o1_mini_558432e9.py"
    ],
    "new_files": [
      "lock_c9b41d.py"
    ]
  },
  {
    "file_signature": [
      "class:AutomowerSensorEntity",
      "class:AutomowerSensorEntityDescription",
      "class:WorkAreaSensorEntity",
      "class:WorkAreaSensorEntityDescription",
      "func:__init__",
      "func:_async_add_new_devices",
      "func:_async_add_new_work_areas",
      "func:_get_current_work_area_dict",
      "func:_get_current_work_area_name",
      "func:_get_error_string",
      "func:_get_work_area_names",
      "func:extra_state_attributes",
      "func:native_value",
      "func:options",
      "func:translation_key"
    ],
    "old_files": [
      "sensor.py_o1_mini_d9eb2569.py"
    ],
    "new_files": [
      "sensor_457aac.py"
    ]
  },
  {
    "file_signature": [
      "class:CattTest",
      "class:CattTestError",
      "func:__init__",
      "func:_failure_test",
      "func:_get_val",
      "func:_regular_test",
      "func:_should_fail_test",
      "func:cli",
      "func:run",
      "func:run_tests",
      "func:set_cmd_base",
      "func:subp_run"
    ],
    "old_files": [
      "test_procedure.py_o1_mini_32a863d6.py"
    ],
    "new_files": [
      "test_procedure_3f923d.py"
    ]
  },
  {
    "file_signature": [
      "class:TikteckLight",
      "func:__init__",
      "func:set_state",
      "func:setup_platform",
      "func:turn_off",
      "func:turn_on"
    ],
    "old_files": [
      "light.py_o1_mini_36343c25.py"
    ],
    "new_files": [
      "light_1f4c8c.py"
    ]
  },
  {
    "file_signature": [
      "class:MyCoordinator",
      "func:__init__",
      "func:_async_handle_bluetooth_event",
      "func:_needs_poll"
    ],
    "old_files": [
      "test_active_update_coordinator.py_o1_mini_5b508df0.py"
    ],
    "new_files": [
      "test_active_update_coordinator_3372d9.py"
    ]
  },
  {
    "file_signature": [
      "func:check_remove_custom_profile_field_value",
      "func:do_remove_realm_custom_profile_field",
      "func:do_remove_realm_custom_profile_fields",
      "func:do_update_user_custom_profile_data_if_changed",
      "func:notify_realm_custom_profile_fields",
      "func:notify_user_update_custom_profile_data",
      "func:remove_custom_profile_field_value_if_required",
      "func:try_add_realm_custom_profile_field",
      "func:try_add_realm_default_custom_profile_field",
      "func:try_reorder_realm_custom_profile_fields",
      "func:try_update_realm_custom_profile_field"
    ],
    "old_files": [
      "custom_profile_fields.py_o1_mini_6cddb835.py"
    ],
    "new_files": [
      "custom_profile_fields_ccef17.py"
    ]
  },
  {
    "file_signature": [
      "class:ChannelUsability",
      "class:UnlockGain",
      "func:_del_lock",
      "func:_del_unclaimed_lock",
      "func:_get_balance",
      "func:_handle_action_close",
      "func:_handle_action_coop_settle",
      "func:_handle_action_set_reveal_timeout",
      "func:_handle_action_withdraw",
      "func:_handle_block",
      "func:_handle_channel_batch_unlock",
      "func:_handle_channel_closed",
      "func:_handle_channel_deposit",
      "func:_handle_channel_settled",
      "func:_handle_channel_updated_transfer",
      "func:_handle_channel_withdraw",
      "func:_handle_receive_withdraw_confirmation",
      "func:_handle_receive_withdraw_request",
      "func:compute_locks_with",
      "func:compute_locks_without",
      "func:compute_locksroot",
      "func:create_sendexpiredlock",
      "func:create_sendlockedtransfer",
      "func:create_unlock",
      "func:events_for_close",
      "func:events_for_coop_settle",
      "func:events_for_expired_withdraws",
      "func:get_amount_locked",
      "func:get_amount_unclaimed_onchain",
      "func:get_balance",
      "func:get_capacity",
      "func:get_current_balanceproof",
      "func:get_current_nonce",
      "func:get_distributable",
      "func:get_lock",
      "func:get_max_withdraw_amount",
      "func:get_next_nonce",
      "func:get_number_of_pending_transfers",
      "func:get_receiver_expiration_threshold",
      "func:get_safe_initial_expiration",
      "func:get_secret",
      "func:get_sender_expiration_threshold",
      "func:get_status",
      "func:handle_receive_lock_expired",
      "func:handle_receive_lockedtransfer",
      "func:handle_refundtransfer",
      "func:handle_state_transitions",
      "func:handle_unlock",
      "func:is_balance_proof_safe_for_onchain_operations",
      "func:is_balance_proof_usable_onchain",
      "func:is_channel_usable_for_mediation",
      "func:is_channel_usable_for_new_transfer",
      "func:is_lock_expired",
      "func:is_lock_locked",
      "func:is_lock_pending",
      "func:is_secret_known",
      "func:is_secret_known_offchain",
      "func:is_secret_known_onchain",
      "func:is_transfer_expired",
      "func:is_valid_action_coopsettle",
      "func:is_valid_amount",
      "func:is_valid_balanceproof_signature",
      "func:is_valid_channel_total_withdraw",
      "func:is_valid_lock_expired",
      "func:is_valid_lockedtransfer",
      "func:is_valid_refund",
      "func:is_valid_refundtransfer",
      "func:is_valid_signature",
      "func:is_valid_total_withdraw",
      "func:is_valid_unlock",
      "func:is_valid_withdraw",
      "func:is_valid_withdraw_confirmation",
      "func:is_valid_withdraw_expired",
      "func:is_valid_withdraw_request",
      "func:is_withdraw_expired",
      "func:lock_exists_in_either_channel_side",
      "func:refund_transfer_matches_transfer",
      "func:register_offchain_secret",
      "func:register_onchain_secret",
      "func:register_onchain_secret_endstate",
      "func:register_secret_endstate",
      "func:sanity_check",
      "func:send_lock_expired",
      "func:send_lockedtransfer",
      "func:send_unlock",
      "func:send_withdraw_request",
      "func:set_closed",
      "func:set_coop_settled",
      "func:set_settled",
      "func:state_transition",
      "func:transition_result_invalid",
      "func:update_contract_balance",
      "func:update_fee_schedule_after_balance_change",
      "func:valid_lockedtransfer_check"
    ],
    "old_files": [
      "channel.py_o3_mini_d20e5ead.py"
    ],
    "new_files": [
      "channel_43e477.py"
    ]
  },
  {
    "file_signature": [
      "class:FnClass",
      "func:__call__",
      "func:_create_series",
      "func:_ohlc",
      "func:_simple_date_range_series",
      "func:fn",
      "func:simple_date_range_series",
      "func:test_anchored_lowercase_buglet",
      "func:test_asfreq_non_unique",
      "func:test_corner_cases",
      "func:test_corner_cases_date",
      "func:test_custom_grouper",
      "func:test_custom_grouper_df",
      "func:test_downsample_across_dst",
      "func:test_downsample_across_dst_weekly",
      "func:test_downsample_across_dst_weekly_2",
      "func:test_downsample_non_unique",
      "func:test_how_lambda_functions",
      "func:test_monthly_resample_error",
      "func:test_nanosecond_resample_error",
      "func:test_nearest_upsample_with_limit",
      "func:test_ohlc_5min",
      "func:test_period_with_agg",
      "func:test_resample_across_dst",
      "func:test_resample_anchored_intraday",
      "func:test_resample_anchored_intraday2",
      "func:test_resample_anchored_intraday3",
      "func:test_resample_anchored_monthstart",
      "func:test_resample_anchored_multiday",
      "func:test_resample_anchored_ticks",
      "func:test_resample_bad_offset",
      "func:test_resample_bad_origin",
      "func:test_resample_basic",
      "func:test_resample_basic_from_daily",
      "func:test_resample_basic_grouper",
      "func:test_resample_daily_anchored",
      "func:test_resample_dst_midnight_last_nonexistent",
      "func:test_resample_dtype_coercion",
      "func:test_resample_dtype_preservation",
      "func:test_resample_extra_index_point",
      "func:test_resample_frame_basic_M_A",
      "func:test_resample_frame_basic_cy_funcs",
      "func:test_resample_group_info",
      "func:test_resample_how",
      "func:test_resample_how_callables",
      "func:test_resample_how_method",
      "func:test_resample_how_ohlc",
      "func:test_resample_integerarray",
      "func:test_resample_lowercase_freq",
      "func:test_resample_median_bug_1688",
      "func:test_resample_not_monotonic",
      "func:test_resample_nunique",
      "func:test_resample_nunique_preserves_column_level_names",
      "func:test_resample_nunique_with_date_gap",
      "func:test_resample_offset",
      "func:test_resample_ohlc",
      "func:test_resample_ohlc_dataframe",
      "func:test_resample_ohlc_result",
      "func:test_resample_ohlc_result_odd_period",
      "func:test_resample_origin",
      "func:test_resample_origin_epoch_with_tz_day_vs_24h",
      "func:test_resample_origin_prime_freq",
      "func:test_resample_origin_with_day_freq_on_dst",
      "func:test_resample_origin_with_day_freq_on_dst_double",
      "func:test_resample_origin_with_tz",
      "func:test_resample_origin_with_tz_day_vs_24h",
      "func:test_resample_reresample",
      "func:test_resample_rounding",
      "func:test_resample_segfault",
      "func:test_resample_single_group",
      "func:test_resample_single_group_std",
      "func:test_resample_size",
      "func:test_resample_string_kwargs",
      "func:test_resample_timegrouper",
      "func:test_resample_timegrouper2",
      "func:test_resample_timestamp_to_period",
      "func:test_resample_to_period_monthly_buglet",
      "func:test_resample_unequal_times",
      "func:test_resample_upsample",
      "func:test_resample_upsample_picked_but_not_correct",
      "func:test_upsample_apply_functions",
      "func:test_upsample_with_limit",
      "func:test_weekly_resample_buglet"
    ],
    "old_files": [
      "test_datetime_index.py_o1_mini_37e0476b.py"
    ],
    "new_files": [
      "test_datetime_index_0892c0.py"
    ]
  },
  {
    "file_signature": [
      "class:SlackBotEmail",
      "func:build_avatar_url",
      "func:build_customprofile_field",
      "func:build_customprofilefields_values",
      "func:build_reactions",
      "func:build_realmemoji",
      "func:build_uploads",
      "func:channel_message_to_zerver_message",
      "func:channels_to_zerver_stream",
      "func:check_token_access",
      "func:convert_bot_info_to_slack_user",
      "func:convert_slack_workspace_messages",
      "func:do_convert_directory",
      "func:do_convert_zipfile",
      "func:fetch_shared_channel_users",
      "func:fetch_team_icons",
      "func:get_admin",
      "func:get_attachment_path_and_content",
      "func:get_data_file",
      "func:get_email",
      "func:get_emoji_code",
      "func:get_guest",
      "func:get_message_sending_user",
      "func:get_messages_iterator",
      "func:get_owner",
      "func:get_slack_api_data",
      "func:get_subscription",
      "func:get_timestamp_from_message",
      "func:get_user_email",
      "func:get_user_timezone",
      "func:is_integration_bot_message",
      "func:process_channels",
      "func:process_customprofilefields",
      "func:process_dms",
      "func:process_long_term_idle_users",
      "func:process_message_files",
      "func:process_mpims",
      "func:process_slack_custom_fields",
      "func:rm_tree",
      "func:slack_workspace_to_realm",
      "func:users_to_zerver_userprofile"
    ],
    "old_files": [
      "slack.py_o1_mini_8cc09ada.py"
    ],
    "new_files": [
      "slack_98777b.py"
    ]
  },
  {
    "file_signature": [
      "class:BasePlannerTests",
      "class:FakeConfig",
      "class:Foo",
      "class:InMemoryRemoteState",
      "class:TestKeyVariable",
      "class:TestPlanCloudWatchEvent",
      "class:TestPlanCreateUpdateAPIMapping",
      "class:TestPlanCreateUpdateDomainName",
      "class:TestPlanDynamoDBSubscription",
      "class:TestPlanKinesisSubscription",
      "class:TestPlanLambdaFunction",
      "class:TestPlanLogGroup",
      "class:TestPlanManagedRole",
      "class:TestPlanRestAPI",
      "class:TestPlanS3Events",
      "class:TestPlanSNSSubscription",
      "class:TestPlanSQSSubscription",
      "class:TestPlanScheduledEvent",
      "class:TestPlanWebsocketAPI",
      "class:TestRemoteState",
      "class:TestRemoteStateDeletion",
      "class:TestUnreferencedResourcePlanner",
      "func:__init__",
      "func:assert_apicall_equals",
      "func:assert_loads_needed_variables",
      "func:assert_recorded_values",
      "func:create_api_mapping",
      "func:create_domain_name",
      "func:create_function_resource",
      "func:create_http_domain_name",
      "func:create_managed_layer",
      "func:create_rest_api_model",
      "func:create_websocket_api_model",
      "func:create_websocket_domain_name",
      "func:declare_no_resources_exists",
      "func:declare_resource_exists",
      "func:deployed_resources",
      "func:determine_plan",
      "func:execute",
      "func:filter_api_calls",
      "func:function_resource",
      "func:get_remote_model",
      "func:lambda_function",
      "func:no_deployed_values",
      "func:one_deployed_lambda_function",
      "func:resource_deployed_values",
      "func:resource_exists",
      "func:setup_method",
      "func:test_api_gateway_domain_name_exists",
      "func:test_can_create_api_mapping",
      "func:test_can_create_domain_name",
      "func:test_can_create_function",
      "func:test_can_create_function_with_reserved_concurrency",
      "func:test_can_create_layer",
      "func:test_can_create_log_group",
      "func:test_can_create_plan_for_filebased_role",
      "func:test_can_create_websocket_api_mapping_with_path",
      "func:test_can_delete_api_mapping",
      "func:test_can_delete_api_mapping_none",
      "func:test_can_delete_domain_name",
      "func:test_can_delete_iam_role",
      "func:test_can_delete_lambda_layer",
      "func:test_can_delete_log_group",
      "func:test_can_delete_rest_api",
      "func:test_can_delete_s3_event",
      "func:test_can_delete_scheduled_event",
      "func:test_can_delete_sns_subscription",
      "func:test_can_delete_sqs_subscription",
      "func:test_can_delete_websocket_api",
      "func:test_can_get_deployed_values",
      "func:test_can_handle_domain_name_without_api_mapping",
      "func:test_can_handle_when_resource_changes_values",
      "func:test_can_handle_when_topic_name_change",
      "func:test_can_plan_cloudwatch_event",
      "func:test_can_plan_dynamodb_event_source",
      "func:test_can_plan_dynamodb_event_source_update",
      "func:test_can_plan_for_iam_role_creation",
      "func:test_can_plan_kinesis_event_source",
      "func:test_can_plan_rest_api",
      "func:test_can_plan_s3_event",
      "func:test_can_plan_scheduled_event",
      "func:test_can_plan_scheduled_event_can_omit_description",
      "func:test_can_plan_sns_arn_subscription",
      "func:test_can_plan_sns_subscription",
      "func:test_can_plan_sqs_event_source",
      "func:test_can_plan_websocket_api",
      "func:test_can_set_variables_when_needed",
      "func:test_can_update_domain_name",
      "func:test_can_update_file_based_policy",
      "func:test_can_update_kinesis_event_source",
      "func:test_can_update_lambda_function_code",
      "func:test_can_update_lambda_function_with_managed_layer",
      "func:test_can_update_layer",
      "func:test_can_update_log_group",
      "func:test_can_update_managed_role",
      "func:test_can_update_rest_api",
      "func:test_can_update_rest_api_with_policy",
      "func:test_can_update_sqs_event_with_queue_arn",
      "func:test_can_update_websocket_api",
      "func:test_correct_deletion_order_for_dependencies",
      "func:test_create_function_with_layers",
      "func:test_domain_name_does_not_exist",
      "func:test_dynamically_lookup_iam_role",
      "func:test_exists_check_is_cached",
      "func:test_exists_check_is_cached_api_mapping",
      "func:test_handles_when_queue_name_change",
      "func:test_handles_when_topic_name_change",
      "func:test_key_variable_str",
      "func:test_key_variables_equal",
      "func:test_kinesis_event_source_exists",
      "func:test_kinesis_event_source_not_exists",
      "func:test_lambda_function_does_not_exist",
      "func:test_lambda_function_exists",
      "func:test_lambda_layer_exists",
      "func:test_lambda_layer_not_exists",
      "func:test_no_deletion_when_no_changes",
      "func:test_no_sqs_deletion_when_no_changes",
      "func:test_no_sweeping_when_resource_value_unchanged",
      "func:test_no_update_for_non_managed_role",
      "func:test_none_api_mapping_exists",
      "func:test_noop_when_all_resources_accounted_for",
      "func:test_path_api_mapping_exists",
      "func:test_path_api_mapping_exists_with_slash",
      "func:test_raise_error_not_existed_resource_delete",
      "func:test_rest_api_exists_no_deploy",
      "func:test_rest_api_exists_with_existing_deploy",
      "func:test_rest_api_not_exists_with_preexisting_deploy",
      "func:test_role_does_not_exist",
      "func:test_role_exists",
      "func:test_sns_subscription_exists",
      "func:test_sns_subscription_exists_is_noop_for_planner",
      "func:test_sns_subscription_not_in_deployed_values",
      "func:test_sqs_event_source_exists",
      "func:test_sqs_event_source_exists_updates_batch_size",
      "func:test_sqs_event_source_exists_updates_maximum_concurrency",
      "func:test_sqs_event_supports_maximum_concurrency",
      "func:test_sqs_event_supports_queue_arn",
      "func:test_store_api_mapping_if_already_exists",
      "func:test_store_api_mapping_none_if_already_exists",
      "func:test_supports_multiple_unreferenced_and_unchanged",
      "func:test_unknown_model_type_raises_error",
      "func:test_update_plan_with_insert_without_message",
      "func:test_value_error_raised_for_unknown_resource_name",
      "func:test_value_error_raised_on_no_deployed_values",
      "func:test_websocket_api_exists_no_deploy",
      "func:test_websocket_api_exists_with_existing_deploy",
      "func:test_websocket_api_not_exists_with_preexisting_deploy",
      "func:test_websocket_api_plan_omits_unused_lambdas",
      "func:test_websocket_domain_name_exists",
      "func:test_will_delete_log_group",
      "func:test_will_delete_unreferenced_resource"
    ],
    "old_files": [
      "test_planner.py_o3_mini_8f4efc62.py"
    ],
    "new_files": [
      "test_planner_aec317.py"
    ]
  },
  {
    "file_signature": [
      "class:MockExecutor",
      "class:Test",
      "func:__init__",
      "func:_drop_table",
      "func:_last_run_was_recently_clean",
      "func:_make_cursor_mock",
      "func:all",
      "func:execute_mock",
      "func:fetchall_mock",
      "func:job",
      "func:setup_recorder",
      "func:test_build_mysqldb_conv",
      "func:test_database_job_retry_wrapper",
      "func:test_fail_outdated_mysql",
      "func:test_fail_outdated_pgsql",
      "func:test_fail_outdated_sqlite",
      "func:test_is_second_sunday",
      "func:test_retryable_database_job",
      "func:test_retryable_database_job_method",
      "func:test_setup_connection_for_dialect_mysql",
      "func:test_setup_connection_for_dialect_sqlite",
      "func:test_supported_mysql",
      "func:test_supported_pgsql",
      "func:test_supported_sqlite",
      "func:test_validate_or_move_away_sqlite_database",
      "func:test_warn_unsupported_dialect",
      "func:to_native"
    ],
    "old_files": [
      "test_util.py_o1_mini_ae6f0f72.py"
    ],
    "new_files": [
      "test_util_8bae1f.py"
    ]
  },
  {
    "file_signature": [
      "class:ClientRequest",
      "class:ClientResponse",
      "class:ConnectionKey",
      "class:ContentDisposition",
      "class:Fingerprint",
      "class:RequestInfo",
      "class:_RequestInfo",
      "func:__del__",
      "func:__init__",
      "func:__new__",
      "func:__repr__",
      "func:__reset_writer",
      "func:_cleanup_writer",
      "func:_gen_default_accept_encoding",
      "func:_notify_content",
      "func:_release_connection",
      "func:_response_eof",
      "func:_writer_task",
      "func:check",
      "func:close",
      "func:closed",
      "func:connection",
      "func:connection_key",
      "func:content_disposition",
      "func:cookies",
      "func:fingerprint",
      "func:get_encoding",
      "func:headers",
      "func:history",
      "func:host",
      "func:is_ssl",
      "func:links",
      "func:ok",
      "func:port",
      "func:raise_for_status",
      "func:raw_headers",
      "func:real_url",
      "func:release",
      "func:request_info",
      "func:request_info_obj",
      "func:skip_auto_headers",
      "func:ssl_context",
      "func:terminate",
      "func:update_auth",
      "func:update_auto_headers",
      "func:update_body_from_data",
      "func:update_content_encoding",
      "func:update_cookies",
      "func:update_expect_continue",
      "func:update_headers",
      "func:update_host",
      "func:update_proxy",
      "func:update_transfer_encoding",
      "func:update_version",
      "func:url"
    ],
    "old_files": [
      "client_reqrep.py_o3_mini_5e3d3a57.py"
    ],
    "new_files": [
      "client_reqrep_ca32d6.py"
    ]
  },
  {
    "file_signature": [
      "class:SkipField",
      "func:__init__",
      "func:_apply_modify_schema",
      "func:add_field_type_to_schema",
      "func:constraint_func",
      "func:encode_default",
      "func:enum_process_schema",
      "func:field_schema",
      "func:field_singleton_schema",
      "func:field_singleton_sub_fields_schema",
      "func:field_type_schema",
      "func:get_annotation_from_field_info",
      "func:get_annotation_with_constraints",
      "func:get_field_info_schema",
      "func:get_field_schema_validations",
      "func:get_flat_models_from_field",
      "func:get_flat_models_from_fields",
      "func:get_flat_models_from_model",
      "func:get_flat_models_from_models",
      "func:get_long_model_name",
      "func:get_model_name_map",
      "func:get_schema_ref",
      "func:go",
      "func:model_process_schema",
      "func:model_schema",
      "func:model_type_schema",
      "func:multitypes_literal_field_for_schema",
      "func:normalize_name",
      "func:schema"
    ],
    "old_files": [
      "schema.py_o1_mini_fb9fdc0b.py"
    ],
    "new_files": [
      "schema_8a7298.py"
    ]
  },
  {
    "file_signature": [
      "class:BouncerTestCase",
      "class:EmptyResponseError",
      "class:MigrationsTestCase",
      "class:UploadSerializeMixin",
      "class:WebhookTestCase",
      "class:ZulipClientHandler",
      "class:ZulipTestCase",
      "class:ZulipTestCaseMixin",
      "class:ZulipTestClient",
      "class:ZulipTransactionTestCase",
      "func:__init__",
      "func:_assert_long_term_idle",
      "func:_get_page_params",
      "func:_get_sentry_params",
      "func:add_mock_response",
      "func:api_channel_message",
      "func:api_delete",
      "func:api_get",
      "func:api_patch",
      "func:api_post",
      "func:app",
      "func:assertEqual",
      "func:assert_channel_message",
      "func:assert_database_query_count",
      "func:assert_in_response",
      "func:assert_in_success_response",
      "func:assert_json_error",
      "func:assert_json_error_contains",
      "func:assert_json_success",
      "func:assert_length",
      "func:assert_logged_in_user_id",
      "func:assert_login_failure",
      "func:assert_memcached_count",
      "func:assert_message_stream_name",
      "func:assert_not_in_success_response",
      "func:build_webhook_url",
      "func:capture_send_event_calls",
      "func:change_ldap_user_attr",
      "func:check_rendered_logged_in_app",
      "func:check_user_added_in_system_group",
      "func:check_user_subscribed_only_to_streams",
      "func:check_webhook",
      "func:client_delete",
      "func:client_get",
      "func:client_head",
      "func:client_options",
      "func:client_patch",
      "func:client_patch_multipart",
      "func:client_post",
      "func:client_post_request",
      "func:client_put",
      "func:create_attachment_helper",
      "func:create_default_device",
      "func:create_or_update_anonymous_group_for_setting",
      "func:create_test_bot",
      "func:create_user_notifications_data_object",
      "func:email_display_from",
      "func:email_envelope_from",
      "func:encode_credentials",
      "func:encode_email",
      "func:encode_user",
      "func:encode_uuid",
      "func:example_email",
      "func:example_user",
      "func:expect_soft_reactivation",
      "func:expect_to_stay_long_term_idle",
      "func:fail_to_create_test_bot",
      "func:find_by_id",
      "func:fixture_data",
      "func:fixture_file_name",
      "func:get_body",
      "func:get_confirmation_url_from_outbox",
      "func:get_generic_payload",
      "func:get_json_error",
      "func:get_last_message",
      "func:get_maybe_enqueue_notifications_parameters",
      "func:get_messages",
      "func:get_messages_response",
      "func:get_payload",
      "func:get_response",
      "func:get_row_ids_in_all_tables",
      "func:get_second_to_last_message",
      "func:get_set",
      "func:get_stream_id",
      "func:get_streams",
      "func:get_topic_messages",
      "func:get_user_from_email",
      "func:handle_missedmessage_emails",
      "func:init_default_ldap_database",
      "func:json_patch",
      "func:json_put",
      "func:ldap_password",
      "func:ldap_username",
      "func:lear_user",
      "func:login",
      "func:login_2fa",
      "func:login_by_email",
      "func:login_user",
      "func:login_with_return",
      "func:logout",
      "func:make_import_output_dir",
      "func:make_stream",
      "func:mit_email",
      "func:mit_user",
      "func:nonreg_email",
      "func:nonreg_user",
      "func:not_long_term_idle_subscriber_ids",
      "func:notification_bot",
      "func:on_exception",
      "func:register",
      "func:remove_ldap_user_attr",
      "func:request_callback",
      "func:resolve_topic_containing_message",
      "func:rm_tree",
      "func:run",
      "func:send_and_test_private_message",
      "func:send_group_direct_message",
      "func:send_personal_message",
      "func:send_stream_message",
      "func:send_webhook_payload",
      "func:setUp",
      "func:setUpBeforeMigration",
      "func:setUpClass",
      "func:set_http_headers",
      "func:set_up_db_for_testing_user_access",
      "func:side_effect",
      "func:simulated_markdown_failure",
      "func:soft_deactivate_user",
      "func:submit_realm_creation_form",
      "func:submit_reg_form_for_user",
      "func:subscribe",
      "func:subscribe_realm_to_manual_license_management_plan",
      "func:subscribe_realm_to_monthly_plan_on_manual_license_management",
      "func:subscribe_via_post",
      "func:subscribed_stream_name_list",
      "func:tearDown",
      "func:test_user",
      "func:thumbnail_formats",
      "func:unsubscribe",
      "func:upload_and_thumbnail_image",
      "func:upload_image",
      "func:users_subscribed_to_stream",
      "func:uuid_get",
      "func:uuid_post",
      "func:verify_emoji_code_foreign_keys",
      "func:webhook_fixture_data"
    ],
    "old_files": [
      "test_classes.py_o1_mini_96b213d8.py"
    ],
    "new_files": [
      "test_classes_e83569.py"
    ]
  },
  {
    "file_signature": [
      "class:AlertWordNotificationProcessor",
      "class:AutoLink",
      "class:BacktickInlineProcessor",
      "class:BlockQuoteProcessor",
      "class:CompiledInlineProcessor",
      "class:CompiledPattern",
      "class:DbData",
      "class:ElementFamily",
      "class:ElementPair",
      "class:Emoji",
      "class:EmoticonTranslation",
      "class:Fence",
      "class:HashHeaderProcessor",
      "class:InlineImageProcessor",
      "class:InlineInterestingLinkProcessor",
      "class:InlineVideoProcessor",
      "class:LinkInfo",
      "class:LinkInlineProcessor",
      "class:LinkifierPattern",
      "class:ListIndentProcessor",
      "class:MarkdownListPreprocessor",
      "class:MessageRenderingResult",
      "class:OListProcessor",
      "class:OpenGraphSession",
      "class:ResultWithFamily",
      "class:StreamPattern",
      "class:StreamTopicMessagePattern",
      "class:StreamTopicMessageProcessor",
      "class:StreamTopicPattern",
      "class:Tex",
      "class:Timestamp",
      "class:TopicLinkMatch",
      "class:UListProcessor",
      "class:UnicodeEmoji",
      "class:UserGroupMentionPattern",
      "class:UserMentionPattern",
      "class:ZulipMarkdown",
      "func:__init__",
      "func:add_a",
      "func:add_embed",
      "func:add_oembed_data",
      "func:add_video",
      "func:are_matches_overlapping",
      "func:build_block_parser",
      "func:build_inlinepatterns",
      "func:build_parser",
      "func:build_postprocessors",
      "func:build_preprocessors",
      "func:build_treeprocessors",
      "func:check_valid_end_position",
      "func:check_valid_start_position",
      "func:clean",
      "func:clear_web_link_regex_for_testing",
      "func:content_has_emoji_syntax",
      "func:corrected_image_source",
      "func:do_convert",
      "func:dropbox_image",
      "func:fetch_open_graph_image",
      "func:fetch_tweet_data",
      "func:find_proper_insertion_index",
      "func:find_stream_id",
      "func:get_actual_image_url",
      "func:get_compiled_stream_link_regex",
      "func:get_compiled_stream_topic_link_regex",
      "func:get_compiled_stream_topic_message_link_regex",
      "func:get_inlining_information",
      "func:get_markdown_requests",
      "func:get_markdown_time",
      "func:get_tweet_id",
      "func:get_url_data",
      "func:get_web_link_regex",
      "func:get_with_operand",
      "func:handleMatch",
      "func:handle_image_inlining",
      "func:handle_tweet_inlining",
      "func:handle_video_inlining",
      "func:handle_youtube_url_inlining",
      "func:handle_zephyr_mirror",
      "func:has_blockquote_ancestor",
      "func:image_preview_enabled",
      "func:is_image",
      "func:list_of_tlds",
      "func:make_emoji",
      "func:make_md_engine",
      "func:make_realm_emoji",
      "func:markdown_convert",
      "func:markdown_stats_finish",
      "func:markdown_stats_start",
      "func:maybe_update_markdown_engines",
      "func:percent_escape_format_string",
      "func:possible_linked_stream_names",
      "func:possible_linked_topics",
      "func:privacy_clean_markdown",
      "func:register_linkifiers",
      "func:render_message_markdown",
      "func:rewrite_local_links_to_relative",
      "func:run",
      "func:sanitize_url",
      "func:set_text",
      "func:topic_links",
      "func:twitter_link",
      "func:twitter_text",
      "func:url_embed_preview_enabled",
      "func:url_to_a",
      "func:verbose_compile",
      "func:vimeo_id",
      "func:vimeo_title",
      "func:walk_tree",
      "func:walk_tree_with_family",
      "func:youtube_id",
      "func:youtube_image",
      "func:youtube_title",
      "func:zulip_message_has_image",
      "func:zulip_specific_link_changes"
    ],
    "old_files": [
      "__init__.py_o1_mini_e9d890fc.py"
    ],
    "new_files": [
      "__init___e1774c.py"
    ]
  },
  {
    "file_signature": [
      "class:A",
      "class:DictLike",
      "class:DtypeList",
      "class:Dummy",
      "class:HashableClass",
      "class:MockFile",
      "class:MockNumpyLikeArray",
      "class:MyDataFrame",
      "class:NotListLike",
      "class:Numeric",
      "class:TestInference",
      "class:TestIsScalar",
      "class:TestNumberScalar",
      "class:TestTypeInference",
      "class:UnhashableClass1",
      "class:UnhashableClass2",
      "func:__array__",
      "func:__contains__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__int__",
      "func:__iter__",
      "func:__len__",
      "func:coerce",
      "func:dtype",
      "func:it_outer",
      "func:keys",
      "func:list_like",
      "func:maybe_list_like",
      "func:ndim",
      "func:shape",
      "func:size",
      "func:test_bools",
      "func:test_complex",
      "func:test_convert_infs",
      "func:test_convert_int_overflow",
      "func:test_convert_non_hashable",
      "func:test_convert_numeric_int64_uint64",
      "func:test_convert_numeric_string_uint64",
      "func:test_convert_numeric_uint64",
      "func:test_convert_numeric_uint64_nan",
      "func:test_convert_numeric_uint64_nan_values",
      "func:test_datetime",
      "func:test_datetimeindex_from_empty_datetime64_array",
      "func:test_decimals",
      "func:test_ensure_int32",
      "func:test_find_result_type_floats",
      "func:test_find_result_type_int_int",
      "func:test_find_result_type_uint_int",
      "func:test_floats",
      "func:test_infer_datetimelike_dtype_mixed",
      "func:test_infer_dtype_bytes",
      "func:test_infer_dtype_datetime",
      "func:test_infer_dtype_datetime64",
      "func:test_infer_dtype_datetime64_with_na",
      "func:test_infer_dtype_datetime_with_na",
      "func:test_infer_dtype_mixed_integer",
      "func:test_infer_dtype_period",
      "func:test_infer_dtype_period_array",
      "func:test_infer_dtype_period_mixed",
      "func:test_infer_dtype_skipna_default",
      "func:test_infer_dtype_timedelta",
      "func:test_infer_dtype_timedelta_with_na",
      "func:test_inferred_dtype_fixture",
      "func:test_integer_na",
      "func:test_integers",
      "func:test_is_array_like",
      "func:test_is_bool",
      "func:test_is_datetime_dtypes",
      "func:test_is_datetime_dtypes_with_tz",
      "func:test_is_dict_like_duck_type",
      "func:test_is_dict_like_fails",
      "func:test_is_dict_like_passes",
      "func:test_is_file_like",
      "func:test_is_float",
      "func:test_is_hashable",
      "func:test_is_integer",
      "func:test_is_list_like",
      "func:test_is_list_like_disallow_sets",
      "func:test_is_list_like_generic",
      "func:test_is_list_like_iter_is_none",
      "func:test_is_list_like_recursion",
      "func:test_is_names_tuple_fails",
      "func:test_is_names_tuple_passes",
      "func:test_is_nested_list_like_fails",
      "func:test_is_nested_list_like_passes",
      "func:test_is_number",
      "func:test_is_re_fails",
      "func:test_is_re_passes",
      "func:test_is_recompilable_fails",
      "func:test_is_recompilable_passes",
      "func:test_is_scalar_builtin_nonscalars",
      "func:test_is_scalar_builtin_scalars",
      "func:test_is_scalar_number",
      "func:test_is_scalar_numpy_array_scalars",
      "func:test_is_scalar_numpy_arrays",
      "func:test_is_scalar_numpy_zerodim_arrays",
      "func:test_is_scalar_pandas_containers",
      "func:test_is_scalar_pandas_scalars",
      "func:test_is_scipy_sparse",
      "func:test_is_sequence",
      "func:test_is_timedelta",
      "func:test_isneginf_scalar",
      "func:test_isposinf_scalar",
      "func:test_length_zero",
      "func:test_maybe_convert_nullable_boolean",
      "func:test_maybe_convert_numeric_floating_array",
      "func:test_maybe_convert_numeric_infinities",
      "func:test_maybe_convert_numeric_infinities_raises",
      "func:test_maybe_convert_numeric_nullable_integer",
      "func:test_maybe_convert_numeric_post_floatify_nan",
      "func:test_maybe_convert_objects_bool_nan",
      "func:test_maybe_convert_objects_datetime",
      "func:test_maybe_convert_objects_datetime_overflow_safe",
      "func:test_maybe_convert_objects_dtype_if_all_nat",
      "func:test_maybe_convert_objects_dtype_if_all_nat_invalid",
      "func:test_maybe_convert_objects_ea",
      "func:test_maybe_convert_objects_itemsize",
      "func:test_maybe_convert_objects_mixed_datetimes",
      "func:test_maybe_convert_objects_nat_inference",
      "func:test_maybe_convert_objects_nullable_boolean",
      "func:test_maybe_convert_objects_nullable_boolean_na",
      "func:test_maybe_convert_objects_nullable_integer",
      "func:test_maybe_convert_objects_nullable_none",
      "func:test_maybe_convert_objects_timedelta64_nat",
      "func:test_maybe_convert_objects_uint",
      "func:test_mixed_dtypes_remain_object_array",
      "func:test_nan_to_nat_conversions",
      "func:test_object_empty",
      "func:test_scientific_no_exponent",
      "func:test_string",
      "func:test_unicode"
    ],
    "old_files": [
      "test_inference.py_o1_mini_8132a8ce.py"
    ],
    "new_files": [
      "test_inference_83c9ac.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseDatabaseWrapper",
      "class:BaseMetricResolver",
      "class:BaseRefResolver",
      "class:BaseResolver",
      "class:BaseSourceResolver",
      "class:Config",
      "class:ExposureMetricResolver",
      "class:ExposureRefResolver",
      "class:ExposureSourceResolver",
      "class:GenerateNameProvider",
      "class:MacroContext",
      "class:ModelConfiguredVar",
      "class:ModelContext",
      "class:OperationProvider",
      "class:OperationRefResolver",
      "class:ParseConfigObject",
      "class:ParseDatabaseWrapper",
      "class:ParseMetricResolver",
      "class:ParseProvider",
      "class:ParseRefResolver",
      "class:ParseSourceResolver",
      "class:ParseVar",
      "class:Provider",
      "class:ProviderContext",
      "class:RelationProxy",
      "class:RuntimeConfigObject",
      "class:RuntimeDatabaseWrapper",
      "class:RuntimeMetricResolver",
      "class:RuntimeProvider",
      "class:RuntimeRefResolver",
      "class:RuntimeSourceResolver",
      "class:RuntimeUnitTestProvider",
      "class:RuntimeUnitTestRefResolver",
      "class:RuntimeUnitTestSourceResolver",
      "class:RuntimeVar",
      "class:SemanticModelRefResolver",
      "class:SourceContext",
      "class:SourceQuotingBaseConfig",
      "class:TestContext",
      "class:UnitTestContext",
      "class:UnitTestVar",
      "func:Relation",
      "func:__call__",
      "func:__getattr__",
      "func:__init__",
      "func:_build_namespace",
      "func:_build_test_namespace",
      "func:_generate_merged",
      "func:_get_adapter_macro_prefixes",
      "func:_get_namespace_builder",
      "func:_get_search_packages",
      "func:_lookup",
      "func:_repack_args",
      "func:_sql_results",
      "func:_transform_config",
      "func:_validate",
      "func:adapter_macro",
      "func:api",
      "func:column",
      "func:commit",
      "func:compiled_code",
      "func:config",
      "func:create",
      "func:create_relation",
      "func:ctx_adapter",
      "func:ctx_config",
      "func:ctx_model",
      "func:current_project",
      "func:database",
      "func:dbt_metadata_envs",
      "func:defer_relation",
      "func:dispatch",
      "func:env",
      "func:env_var",
      "func:exceptions",
      "func:execute",
      "func:generate_generate_name_macro_context",
      "func:generate_parse_exposure",
      "func:generate_parse_semantic_models",
      "func:generate_parser_model_context",
      "func:generate_runtime_macro_context",
      "func:generate_runtime_model_context",
      "func:generate_runtime_unit_test_context",
      "func:generate_test_context",
      "func:get",
      "func:get_missing_var",
      "func:graph",
      "func:inner",
      "func:invocation_args_dict",
      "func:load_agate_table",
      "func:load_result",
      "func:metric",
      "func:packages_for_node",
      "func:persist_column_docs",
      "func:persist_relation_docs",
      "func:post_hooks",
      "func:pre_hooks",
      "func:ref",
      "func:render",
      "func:require",
      "func:resolve",
      "func:resolve_event_time_filter",
      "func:resolve_limit",
      "func:schema",
      "func:selected_resources",
      "func:set",
      "func:source",
      "func:source_node",
      "func:sql",
      "func:sql_now",
      "func:store_raw_result",
      "func:store_result",
      "func:submit_python_job",
      "func:this",
      "func:try_or_compiler_error",
      "func:type",
      "func:validate",
      "func:validate_any",
      "func:validate_args",
      "func:validation",
      "func:var",
      "func:write"
    ],
    "old_files": [
      "providers.py_o1_mini_5c8bb950.py"
    ],
    "new_files": [
      "providers_d61054.py"
    ]
  },
  {
    "file_signature": [
      "class:StringMethods",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:_forbid_nonstring_types",
      "func:_get_group_names",
      "func:_get_series_list",
      "func:_get_single_group_name",
      "func:_map_and_wrap",
      "func:_result_dtype",
      "func:_validate",
      "func:_wrap_result",
      "func:cat",
      "func:cat_core",
      "func:cat_safe",
      "func:center",
      "func:cons_row",
      "func:contains",
      "func:forbid_nonstring_types",
      "func:fullmatch",
      "func:get",
      "func:index",
      "func:isalnum",
      "func:join",
      "func:len",
      "func:ljust",
      "func:match",
      "func:normalize",
      "func:pad",
      "func:partition",
      "func:removeprefix",
      "func:removesuffix",
      "func:repeat",
      "func:replace",
      "func:rindex",
      "func:rjust",
      "func:rpartition",
      "func:rsplit",
      "func:split",
      "func:str_extractall",
      "func:wrapper",
      "func:zfill"
    ],
    "old_files": [
      "accessor.py_o3_mini_04ffbbba.py"
    ],
    "new_files": [
      "accessor_9a03f0.py"
    ]
  },
  {
    "file_signature": [
      "class:CounterOnBatchCallback",
      "class:MockLRScheduler",
      "class:TestDryRun",
      "class:TestTrain",
      "class:TrainingDataLoggerOnBatchCallback",
      "class:TrainingDeviceLoggerOnBatchCallback",
      "class:TrainingPrimaryCheckCallback",
      "func:__init__",
      "func:on_batch",
      "func:on_start",
      "func:setup_method",
      "func:test_detect_gpu",
      "func:test_distributed_raises_error_with_no_gpus",
      "func:test_dry_run_doesnt_overwrite_vocab",
      "func:test_dry_run_makes_vocab",
      "func:test_dry_run_with_extension",
      "func:test_dry_run_without_extension",
      "func:test_error_is_throw_when_cuda_device_is_not_available",
      "func:test_force_cpu",
      "func:test_force_gpu",
      "func:test_make_vocab_args",
      "func:test_train_args",
      "func:test_train_can_fine_tune_model_from_archive",
      "func:test_train_model",
      "func:test_train_model_can_instantiate_from_params",
      "func:test_train_model_distributed",
      "func:test_train_model_distributed_with_gradient_accumulation",
      "func:test_train_model_distributed_with_sharded_reader",
      "func:test_train_model_distributed_without_sharded_reader",
      "func:test_train_nograd_regex",
      "func:test_train_number_of_steps",
      "func:test_train_saves_all_keys_in_config",
      "func:test_train_with_test_set",
      "func:test_warn_validation_loader_batches_per_epoch"
    ],
    "old_files": [
      "train_test.py_o3_mini_f735c70e.py"
    ],
    "new_files": [
      "train_test_b790e4.py"
    ]
  },
  {
    "file_signature": [
      "class:ShanghaiBackwardsHeader",
      "class:ShanghaiBlock",
      "class:ShanghaiBlockHeader",
      "func:__init__",
      "func:__str__",
      "func:blob_gas_used",
      "func:deserialize",
      "func:excess_blob_gas",
      "func:from_header",
      "func:get_receipt_builder",
      "func:get_receipts",
      "func:get_transaction_builder",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash",
      "func:number",
      "func:parent_beacon_block_root",
      "func:serialize"
    ],
    "old_files": [
      "blocks.py_o3_mini_073555f1.py"
    ],
    "new_files": [
      "blocks_219fd5.py"
    ]
  },
  {
    "file_signature": [
      "class:StringMethods",
      "func:__init__",
      "func:capitalize",
      "func:cat",
      "func:center",
      "func:contains",
      "func:count",
      "func:decode",
      "func:encode",
      "func:endswith",
      "func:extract",
      "func:extractall",
      "func:find",
      "func:findall",
      "func:get",
      "func:get_dummies",
      "func:index",
      "func:isalnum",
      "func:isalpha",
      "func:isdecimal",
      "func:isdigit",
      "func:islower",
      "func:isnumeric",
      "func:isspace",
      "func:istitle",
      "func:isupper",
      "func:join",
      "func:len",
      "func:ljust",
      "func:lower",
      "func:lstrip",
      "func:match",
      "func:normalize",
      "func:pad",
      "func:pandas_capitalize",
      "func:pandas_center",
      "func:pandas_contains",
      "func:pandas_count",
      "func:pandas_endswith",
      "func:pandas_find",
      "func:pandas_get",
      "func:pandas_index",
      "func:pandas_isalnum",
      "func:pandas_isalpha",
      "func:pandas_isdecimal",
      "func:pandas_isdigit",
      "func:pandas_islower",
      "func:pandas_isnumeric",
      "func:pandas_isspace",
      "func:pandas_istitle",
      "func:pandas_isupper",
      "func:pandas_join",
      "func:pandas_ljust",
      "func:pandas_lstrip",
      "func:pandas_match",
      "func:pandas_normalize",
      "func:pandas_pad",
      "func:pandas_replace",
      "func:pandas_rfind",
      "func:pandas_rindex",
      "func:pandas_rjust",
      "func:pandas_rstrip",
      "func:pandas_slice",
      "func:pandas_slice_replace",
      "func:pandas_startswith",
      "func:pandas_strip",
      "func:pandas_swapcase",
      "func:pandas_title",
      "func:pandas_translate",
      "func:pandas_wrap",
      "func:pandas_zfill",
      "func:partition",
      "func:repeat",
      "func:replace",
      "func:rfind",
      "func:rindex",
      "func:rjust",
      "func:rpartition",
      "func:rsplit",
      "func:rsplit_pandas_udf",
      "func:rstrip",
      "func:slice",
      "func:slice_replace",
      "func:split",
      "func:split_pandas_udf",
      "func:startswith",
      "func:strip",
      "func:swapcase",
      "func:title",
      "func:translate",
      "func:upper",
      "func:wrap",
      "func:zfill"
    ],
    "old_files": [
      "strings.py_o1_mini_2861ee22.py"
    ],
    "new_files": [
      "strings_8fc975.py"
    ]
  },
  {
    "file_signature": [
      "class:APILogHandler",
      "class:APILogWorker",
      "class:PrefectConsoleHandler",
      "class:WorkerAPILogHandler",
      "func:__init__",
      "func:_get_payload_size",
      "func:_get_size",
      "func:_max_batch_size",
      "func:_min_interval",
      "func:emit",
      "func:flush",
      "func:handleError",
      "func:instance",
      "func:prepare"
    ],
    "old_files": [
      "handlers.py_o1_mini_9ad132ce.py"
    ],
    "new_files": [
      "handlers_890c61.py"
    ]
  },
  {
    "file_signature": [
      "class:BalanceProofData",
      "class:ChainStateStateMachine",
      "class:Client",
      "class:DirectTransfersStateMachine",
      "class:InitiatorMixin",
      "class:MediatorMixin",
      "class:MediatorStateMachine",
      "class:MultiChannelMediatorStateMachine",
      "class:OnChainMixin",
      "class:OnChainStateMachine",
      "class:Route",
      "class:TargetMixin",
      "class:TransferOrder",
      "class:WithOurAddress",
      "func:__init__",
      "func:_action_init_initiator",
      "func:_action_init_mediator",
      "func:_available_amount",
      "func:_get_balance_proof_data",
      "func:_is_expired",
      "func:_is_removed",
      "func:_new_channel_state",
      "func:_new_channel_transaction",
      "func:_new_mediator_transfer",
      "func:_new_transfer_description",
      "func:_unwrap",
      "func:_update_balance_proof_data",
      "func:address",
      "func:assert_channel_state_invariants",
      "func:assert_monotonicity_invariants",
      "func:chain_state_invariants",
      "func:channel_opened",
      "func:create_network",
      "func:event",
      "func:event_types_match",
      "func:exceeded_capacity_init_initiator",
      "func:initialize_all",
      "func:initiator",
      "func:make_tokenamount_defaultdict",
      "func:new_address",
      "func:new_blocks",
      "func:new_channel",
      "func:new_channel_with_transaction",
      "func:new_client",
      "func:open_channel",
      "func:payment_id",
      "func:process_secret_request_with_wrong_amount",
      "func:process_secret_request_with_wrong_payment_identifier",
      "func:process_secret_request_with_wrong_secrethash",
      "func:process_secret_reveal_as_initiator",
      "func:process_secret_reveal_as_target",
      "func:process_secret_reveal_with_mismatched_secret_as_initiator",
      "func:process_secret_reveal_with_mismatched_secret_as_target",
      "func:process_secret_reveal_with_unknown_secrethash_as_initiator",
      "func:process_secret_reveal_with_unknown_secrethash_as_target",
      "func:process_secret_reveal_with_wrong_channel_identifier_as_initiator",
      "func:process_secret_reveal_with_wrong_channel_identifier_as_target",
      "func:process_secret_reveal_with_wrong_queue_identifier_as_initiator",
      "func:process_secret_reveal_with_wrong_queue_identifier_as_target",
      "func:process_send_locked_transfer",
      "func:process_send_locked_transfer_with_scrambled_balance_proof",
      "func:process_send_locked_transfer_with_scrambled_hash_time_lock_state",
      "func:process_send_locked_transfer_with_scrambled_locked_transfer_parameter",
      "func:process_unlock",
      "func:process_unlock_with_mismatched_secret",
      "func:process_unlock_with_scrambled_balance_proof",
      "func:process_unlock_with_unknown_secrethash",
      "func:process_valid_secret_request",
      "func:replay_init_initiator",
      "func:replay_receive_secret_reveal",
      "func:replay_receive_secret_reveal_scrambled_sender",
      "func:routes_for_new_channel",
      "func:secret",
      "func:settle_channel",
      "func:target",
      "func:test_regression_malicious_secret_request_handled_properly",
      "func:transferred_amount",
      "func:unwrap_multiple",
      "func:update",
      "func:used_secret_init_initiator",
      "func:valid_init_initiator",
      "func:valid_init_mediator",
      "func:valid_receive_secret_reveal",
      "func:wrong_address_receive_secret_reveal",
      "func:wrong_secret_receive_secret_reveal"
    ],
    "old_files": [
      "test_state_changes.py_o1_mini_d9be5670.py"
    ],
    "new_files": [
      "test_state_changes_e74ee9.py"
    ]
  },
  {
    "file_signature": [
      "class:MatrixTransport",
      "class:MessagesQueue",
      "class:_MessageData",
      "class:_RetryQueue",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:_broadcast_worker",
      "func:_check_and_send",
      "func:_expiration_generator",
      "func:_get_retrier",
      "func:_handle_messages",
      "func:_http_retry_delay",
      "func:_initialize_first_sync",
      "func:_initialize_sync",
      "func:_metadata_key_func",
      "func:_multicast_services",
      "func:_node_address",
      "func:_process_call_messages",
      "func:_process_messages",
      "func:_process_raiden_messages",
      "func:_query_metadata",
      "func:_queueids_to_queues",
      "func:_run",
      "func:_send_raw",
      "func:_send_signaling_message",
      "func:_send_to_device_raw",
      "func:_send_with_retry",
      "func:_set_presence",
      "func:_user_id",
      "func:_validate_matrix_messages",
      "func:address_metadata",
      "func:broadcast",
      "func:chain_id",
      "func:checksummed_address",
      "func:displayname",
      "func:enqueue",
      "func:enqueue_unordered",
      "func:expire_services_addresses",
      "func:health_check_web_rtc",
      "func:is_idle",
      "func:log",
      "func:message_is_in_queue",
      "func:notify",
      "func:on_success",
      "func:populate_services_addresses",
      "func:send_async",
      "func:start",
      "func:started",
      "func:stop",
      "func:update_services_addresses",
      "func:user_id"
    ],
    "old_files": [
      "transport.py_o1_mini_53dfa0bc.py"
    ],
    "new_files": [
      "transport_58bb8a.py"
    ]
  },
  {
    "file_signature": [
      "class:Image",
      "class:ImageAdversarial",
      "class:ImageFromPGAN",
      "class:Normalize",
      "class:Resnet50",
      "class:TestClassifier",
      "func:__init__",
      "func:_generate_images",
      "func:_get_classifier_output",
      "func:_loss",
      "func:_loss_with_pgan",
      "func:evaluation_function",
      "func:export_to_images",
      "func:forward",
      "func:interpolate",
      "func:make_folder_functions"
    ],
    "old_files": [
      "core.py_o1_mini_f4b14b2e.py"
    ],
    "new_files": [
      "core_06066e.py"
    ]
  },
  {
    "file_signature": [
      "class:ConnectionPool",
      "class:HTTPConnectionPool",
      "class:HTTPSConnectionPool",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__str__",
      "func:_absolute_url",
      "func:_add_transport_headers",
      "func:_build_context",
      "func:_get_conn",
      "func:_get_timeout",
      "func:_ipv6_host",
      "func:_make_request",
      "func:_new_conn",
      "func:_put_conn",
      "func:_raise_timeout",
      "func:_start_conn",
      "func:close",
      "func:connection_from_url",
      "func:drain_and_release_conn",
      "func:is_same_host",
      "func:urlopen"
    ],
    "old_files": [
      "connectionpool.py_o3_mini_8473b69a.py"
    ],
    "new_files": [
      "connectionpool_8dc770.py"
    ]
  },
  {
    "file_signature": [
      "class:PlexServer",
      "func:__init__",
      "func:_connect_with_token",
      "func:_connect_with_url",
      "func:_fetch_platform_data",
      "func:_update_plexdirect_hostname",
      "func:account",
      "func:accounts",
      "func:async_refresh_entity",
      "func:connect",
      "func:connect_new_clients",
      "func:connect_to_client",
      "func:connect_to_resource",
      "func:create_playqueue",
      "func:create_station_playqueue",
      "func:fetch_item",
      "func:friendly_name",
      "func:get_playqueue",
      "func:has_token",
      "func:library",
      "func:lookup_media",
      "func:machine_identifier",
      "func:option_ignore_new_shared_users",
      "func:option_ignore_plexweb_clients",
      "func:option_monitored_users",
      "func:option_use_episode_art",
      "func:owner",
      "func:playlist",
      "func:playlists",
      "func:plex_server_instance",
      "func:plextv_clients",
      "func:process_device",
      "func:process_sessions",
      "func:sensor_attributes",
      "func:set_plex_server",
      "func:switch_user",
      "func:sync_tasks",
      "func:update_with_new_media",
      "func:url_in_use",
      "func:version"
    ],
    "old_files": [
      "server.py_o1_mini_36e5eabf.py"
    ],
    "new_files": [
      "server_80c298.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseMethodsTests",
      "func:_test_searchsorted_bool_dtypes",
      "func:test_apply_simple_series",
      "func:test_argmax_argmin_no_skipna_notimplemented",
      "func:test_argmin_argmax",
      "func:test_argmin_argmax_all_na",
      "func:test_argmin_argmax_empty_array",
      "func:test_argreduce_series",
      "func:test_argsort",
      "func:test_argsort_missing",
      "func:test_argsort_missing_array",
      "func:test_combine_add",
      "func:test_combine_first",
      "func:test_combine_le",
      "func:test_container_shift",
      "func:test_count",
      "func:test_delete",
      "func:test_diff",
      "func:test_duplicated",
      "func:test_equals",
      "func:test_equals_same_data_different_object",
      "func:test_factorize",
      "func:test_factorize_empty",
      "func:test_factorize_equivalence",
      "func:test_fillna_copy_frame",
      "func:test_fillna_copy_series",
      "func:test_fillna_length_mismatch",
      "func:test_fillna_limit_frame",
      "func:test_fillna_limit_series",
      "func:test_hash_pandas_object",
      "func:test_hash_pandas_object_works",
      "func:test_insert",
      "func:test_insert_invalid",
      "func:test_insert_invalid_loc",
      "func:test_map",
      "func:test_nargsort",
      "func:test_not_hashable",
      "func:test_repeat",
      "func:test_repeat_raises",
      "func:test_searchsorted",
      "func:test_series_count",
      "func:test_shift_0_periods",
      "func:test_shift_empty_array",
      "func:test_shift_fill_value",
      "func:test_shift_non_empty_array",
      "func:test_shift_zero_copies",
      "func:test_sort_values",
      "func:test_sort_values_frame",
      "func:test_sort_values_missing",
      "func:test_unique",
      "func:test_value_counts",
      "func:test_value_counts_default_dropna",
      "func:test_value_counts_with_normalize",
      "func:test_where_series"
    ],
    "old_files": [
      "methods.py_o1_mini_3d415f07.py"
    ],
    "new_files": [
      "methods_fdfe44.py"
    ]
  },
  {
    "file_signature": [
      "class:BuildsStrategy",
      "class:CompositeStrategy",
      "class:DataObject",
      "class:DataStrategy",
      "class:DrawFn",
      "class:OrderedStrategy",
      "class:PermutationStrategy",
      "class:PrettyIter",
      "class:RandomModule",
      "class:RunnerStrategy",
      "func:__call__",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:__not_a_first_class_strategy",
      "func:__repr__",
      "func:_as_finite_decimal",
      "func:_as_integer",
      "func:_composite",
      "func:_from_type",
      "func:_from_type_deferred",
      "func:_get_annotation_arg",
      "func:_get_typeddict_qualifiers",
      "func:_maybe_nil_uuids",
      "func:accept",
      "func:as_strategy",
      "func:binary",
      "func:booleans",
      "func:builds",
      "func:calc_label",
      "func:characters",
      "func:complex_numbers",
      "func:composite",
      "func:constrained_complex",
      "func:ctx",
      "func:data",
      "func:decimals",
      "func:deferred",
      "func:dictionaries",
      "func:dm_func",
      "func:do_draw",
      "func:domains",
      "func:draw",
      "func:emails",
      "func:example",
      "func:filter",
      "func:fixed_dictionaries",
      "func:flatmap",
      "func:fraction_to_decimal",
      "func:fractions",
      "func:from_regex",
      "func:from_type",
      "func:from_type_deferred",
      "func:from_type_guarded",
      "func:frozensets",
      "func:functions",
      "func:int_to_decimal",
      "func:iterables",
      "func:lists",
      "func:map",
      "func:permutations",
      "func:random_module",
      "func:randoms",
      "func:recursive",
      "func:register_type_strategy",
      "func:runner",
      "func:sampled_from",
      "func:sets",
      "func:shared",
      "func:slices",
      "func:text",
      "func:uuids",
      "func:validate"
    ],
    "old_files": [
      "core.py_o3_mini_e433c9e7.py"
    ],
    "new_files": [
      "core_336d4b.py"
    ]
  },
  {
    "file_signature": [
      "class:ModelConfigData",
      "class:PydanticModelField",
      "class:PydanticModelTransformer",
      "class:PydanticPlugin",
      "class:PydanticPluginConfig",
      "func:__init__",
      "func:_pydantic_field_callback",
      "func:_pydantic_model_class_maker_callback",
      "func:_pydantic_model_metaclass_marker_callback",
      "func:add_construct_method",
      "func:add_initializer",
      "func:add_method",
      "func:adjust_validator_signatures",
      "func:collect_config",
      "func:collect_fields",
      "func:deserialize",
      "func:error_default_and_default_factory_specified",
      "func:error_from_orm",
      "func:error_invalid_config_value",
      "func:error_required_dynamic_aliases",
      "func:error_unexpected_behavior",
      "func:error_untyped_fields",
      "func:from_orm_callback",
      "func:get_alias_info",
      "func:get_base_class_hook",
      "func:get_class_decorator_hook",
      "func:get_config_update",
      "func:get_field_arguments",
      "func:get_fullname",
      "func:get_function_hook",
      "func:get_is_required",
      "func:get_metaclass_hook",
      "func:get_method_hook",
      "func:get_name",
      "func:is_dynamic_alias_present",
      "func:parse_mypy_version",
      "func:parse_toml",
      "func:plugin",
      "func:report_config_data",
      "func:serialize",
      "func:set_frozen",
      "func:set_values_dict",
      "func:setdefault",
      "func:should_init_forbid_extra",
      "func:to_argument",
      "func:to_data",
      "func:to_var",
      "func:transform",
      "func:type_has_implicit_default",
      "func:update"
    ],
    "old_files": [
      "mypy.py_o1_mini_a4c2957f.py"
    ],
    "new_files": [
      "mypy_97629e.py"
    ]
  },
  {
    "file_signature": [
      "class:SimpleDataLoader",
      "class:SimpleDataLoaderConfig",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_iter_batches",
      "func:from_dataset_reader",
      "func:index_with",
      "func:iter_instances",
      "func:set_target_device"
    ],
    "old_files": [
      "simple_data_loader.py_o1_mini_259fcea8.py"
    ],
    "new_files": [
      "simple_data_loader_a4f8f3.py"
    ]
  },
  {
    "file_signature": [
      "class:TestDataFrameGroupByPlots",
      "class:TestDataFramePlots",
      "class:TestSeriesPlots",
      "func:test_axis_share_x",
      "func:test_axis_share_xy",
      "func:test_axis_share_y",
      "func:test_grouped_hist_layout_axes",
      "func:test_grouped_hist_layout_by_warning",
      "func:test_grouped_hist_layout_error",
      "func:test_grouped_hist_layout_figsize",
      "func:test_grouped_hist_layout_warning",
      "func:test_grouped_hist_legacy",
      "func:test_grouped_hist_legacy2",
      "func:test_grouped_hist_legacy_axes_shape_no_col",
      "func:test_grouped_hist_legacy_external_err",
      "func:test_grouped_hist_legacy_figsize_err",
      "func:test_grouped_hist_legacy_grouped_hist",
      "func:test_grouped_hist_legacy_grouped_hist_kwargs",
      "func:test_grouped_hist_legacy_single_key",
      "func:test_grouped_hist_multiple_axes",
      "func:test_grouped_hist_multiple_axes_error",
      "func:test_grouped_hist_multiple_axes_no_cols",
      "func:test_hist_bins_legacy",
      "func:test_hist_by_no_extra_plots",
      "func:test_hist_column_order_unchanged",
      "func:test_hist_df_kwargs",
      "func:test_hist_df_legacy",
      "func:test_hist_df_legacy_external_error",
      "func:test_hist_df_legacy_layout",
      "func:test_hist_df_legacy_layout2",
      "func:test_hist_df_legacy_layout3",
      "func:test_hist_df_legacy_layout_kwargs",
      "func:test_hist_df_legacy_layout_labelsize_rot",
      "func:test_hist_df_legacy_rectangles",
      "func:test_hist_df_legacy_scale",
      "func:test_hist_df_with_nonnumerics",
      "func:test_hist_df_with_nonnumerics_no_bins",
      "func:test_hist_kde",
      "func:test_hist_kde_color",
      "func:test_hist_kde_color_bins",
      "func:test_hist_kde_density_works",
      "func:test_hist_kde_logy",
      "func:test_hist_kde_plot_works",
      "func:test_hist_kwargs",
      "func:test_hist_kwargs_align",
      "func:test_hist_kwargs_horizontal",
      "func:test_hist_layout",
      "func:test_hist_layout_error",
      "func:test_hist_layout_with_by",
      "func:test_hist_layout_with_by_shape",
      "func:test_hist_legacy_ax",
      "func:test_hist_legacy_ax_and_fig",
      "func:test_hist_legacy_by_fig_error",
      "func:test_hist_legacy_fig",
      "func:test_hist_legacy_kwargs",
      "func:test_hist_legacy_kwargs_warning",
      "func:test_hist_legacy_multi_ax",
      "func:test_hist_no_overlap",
      "func:test_hist_non_numerical_or_datetime_raises",
      "func:test_hist_secondary_legend",
      "func:test_hist_secondary_primary",
      "func:test_hist_secondary_secondary",
      "func:test_hist_subplot_xrot",
      "func:test_hist_with_legend",
      "func:test_hist_with_legend_raises",
      "func:test_hist_with_nans_and_weights",
      "func:test_histtype_argument",
      "func:test_plot_fails_when_ax_differs_from_figure",
      "func:test_tight_layout",
      "func:ts"
    ],
    "old_files": [
      "test_hist_method.py_o1_mini_c8b56cbb.py"
    ],
    "new_files": [
      "test_hist_method_862ac9.py"
    ]
  },
  {
    "file_signature": [
      "class:InfluxFluxSensorData",
      "class:InfluxQLSensorData",
      "class:InfluxSensor",
      "func:__init__",
      "func:_merge_connection_config_into_query",
      "func:close_influx",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform",
      "func:update",
      "func:validate_query_format_for_version"
    ],
    "old_files": [
      "sensor.py_o1_mini_38c42a0d.py"
    ],
    "new_files": [
      "sensor_f9ca2f.py"
    ]
  },
  {
    "file_signature": [
      "class:MyStyler",
      "class:Styler",
      "func:__copy__",
      "func:__deepcopy__",
      "func:__init__",
      "func:_apply",
      "func:_apply_index",
      "func:_background_gradient",
      "func:_bar",
      "func:_copy",
      "func:_get_numeric_subset_default",
      "func:_highlight_between",
      "func:_highlight_value",
      "func:_map",
      "func:_repr_html_",
      "func:_repr_latex_",
      "func:_validate_apply_axis_arg",
      "func:apply",
      "func:apply_index",
      "func:background_gradient",
      "func:bar",
      "func:clear",
      "func:concat",
      "func:css",
      "func:css_bar",
      "func:css_calc",
      "func:export",
      "func:f",
      "func:from_custom_template",
      "func:highlight_between",
      "func:highlight_max",
      "func:highlight_min",
      "func:highlight_null",
      "func:highlight_quantile",
      "func:map",
      "func:map_index",
      "func:pipe",
      "func:relative_luminance",
      "func:set_caption",
      "func:set_properties",
      "func:set_sticky",
      "func:set_table_attributes",
      "func:set_tooltips",
      "func:set_uuid",
      "func:text_gradient",
      "func:to_excel",
      "func:to_latex",
      "func:use"
    ],
    "old_files": [
      "style.py_o3_mini_8ae42563.py"
    ],
    "new_files": [
      "style_5e569b.py"
    ]
  },
  {
    "file_signature": [
      "class:DatabricksBaseEngineSpec",
      "class:DatabricksBaseParametersType",
      "class:DatabricksBaseSchema",
      "class:DatabricksDynamicBaseEngineSpec",
      "class:DatabricksHiveEngineSpec",
      "class:DatabricksNativeEngineSpec",
      "class:DatabricksNativeParametersType",
      "class:DatabricksNativePropertiesSchema",
      "class:DatabricksNativePropertiesType",
      "class:DatabricksNativeSchema",
      "class:DatabricksODBCEngineSpec",
      "class:DatabricksPythonConnectorEngineSpec",
      "func:adjust_engine_params",
      "func:build_sqlalchemy_uri",
      "func:convert_dttm",
      "func:epoch_to_dttm",
      "func:extract_errors",
      "func:get_catalog_names",
      "func:get_default_catalog",
      "func:get_extra_params",
      "func:get_parameters_from_uri",
      "func:get_prequeries",
      "func:get_table_names",
      "func:parameters_json_schema",
      "func:validate_parameters"
    ],
    "old_files": [
      "databricks.py_o1_mini_7fb97399.py"
    ],
    "new_files": [
      "databricks_f5496f.py"
    ]
  },
  {
    "file_signature": [
      "class:TextFileReader",
      "class:_C_Parser_Defaults",
      "class:_Fwf_Defaults",
      "class:_read_shared",
      "func:TextParser",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__next__",
      "func:_check_file_or_buffer",
      "func:_clean_na_values",
      "func:_clean_options",
      "func:_extract_dialect",
      "func:_failover_to_python",
      "func:_floatify_na_values",
      "func:_get_options_with_defaults",
      "func:_make_engine",
      "func:_merge_with_dialect_properties",
      "func:_read",
      "func:_refine_defaults_read",
      "func:_stringify_na_values",
      "func:_validate_dialect",
      "func:_validate_names",
      "func:_validate_skipfooter",
      "func:close",
      "func:get_chunk",
      "func:read",
      "func:read_csv",
      "func:read_fwf",
      "func:read_table",
      "func:validate_integer"
    ],
    "old_files": [
      "readers.py_o3_mini_a025027f.py"
    ],
    "new_files": [
      "readers_9a2654.py"
    ]
  },
  {
    "file_signature": [
      "class:DHCPWatcher",
      "class:DeviceTrackerRegisteredWatcher",
      "class:DeviceTrackerWatcher",
      "class:DhcpMatchers",
      "class:NetworkWatcher",
      "class:RediscoveryWatcher",
      "class:WatcherBase",
      "func:__init__",
      "func:_async_process_device_data",
      "func:_async_process_device_event",
      "func:_async_process_device_state",
      "func:_async_process_dhcp_request",
      "func:_async_stop",
      "func:_compile_fnmatch",
      "func:_handle_config_entry_removed",
      "func:_memorized_fnmatch",
      "func:async_index_integration_matchers",
      "func:async_process_client",
      "func:async_start",
      "func:async_start_discover",
      "func:async_stop"
    ],
    "old_files": [
      "__init__.py_o1_mini_4cc6b6fa.py"
    ],
    "new_files": [
      "__init___7c4947.py"
    ]
  },
  {
    "file_signature": [
      "class:IndexingMixin",
      "class:_AtIndexer",
      "class:_IndexSlice",
      "class:_LocIndexer",
      "class:_LocationIndexer",
      "class:_ScalarAccessIndexer",
      "class:_iAtIndexer",
      "class:_iLocIndexer",
      "func:__call__",
      "func:__getitem__",
      "func:__setitem__",
      "func:_align_frame",
      "func:_align_series",
      "func:_axes_are_unique",
      "func:_contains_slice",
      "func:_convert_key",
      "func:_convert_to_indexer",
      "func:_convert_tuple",
      "func:_ensure_iterable_column_indexer",
      "func:_ensure_listlike_indexer",
      "func:_expand_ellipsis",
      "func:_get_label",
      "func:_get_list_axis",
      "func:_get_listlike_indexer",
      "func:_get_setitem_indexer",
      "func:_get_slice_axis",
      "func:_getbool_axis",
      "func:_getitem_axis",
      "func:_getitem_iterable",
      "func:_getitem_lowerdim",
      "func:_getitem_nested_tuple",
      "func:_getitem_tuple",
      "func:_getitem_tuple_same_dim",
      "func:_handle_lowerdim_multi_index_axis0",
      "func:_has_valid_setitem_indexer",
      "func:_is_nested_tuple_indexer",
      "func:_is_scalar_access",
      "func:_maybe_mask_setitem_value",
      "func:_multi_take",
      "func:_multi_take_opportunity",
      "func:_raise_callable_usage",
      "func:_raise_callable_usage_wrapper",
      "func:_setitem_single_column",
      "func:_setitem_with_indexer",
      "func:_setitem_with_indexer_2d_value",
      "func:_setitem_with_indexer_frame_value",
      "func:_setitem_with_indexer_split_path",
      "func:_validate_integer",
      "func:_validate_key",
      "func:_validate_key_length",
      "func:_validate_tuple_indexer",
      "func:at",
      "func:iat",
      "func:iloc",
      "func:loc",
      "func:ravel"
    ],
    "old_files": [
      "indexing.py_o1_mini_cbe93542.py"
    ],
    "new_files": [
      "indexing_d02a25.py"
    ]
  },
  {
    "file_signature": [
      "class:MapperReturnsNone",
      "class:SplitWordsMapper",
      "class:SplitWordsMapperDefaultArgs",
      "class:SquareHitTracker",
      "class:TestMapperCore",
      "func:__call__",
      "func:__init__",
      "func:_get_x",
      "func:_get_x_dict",
      "func:modify_in_place",
      "func:run",
      "func:square",
      "func:test_decorator_mapper_memoized",
      "func:test_decorator_mapper_memoized_none",
      "func:test_decorator_mapper_not_memoized",
      "func:test_mapper_default_args",
      "func:test_mapper_in_place",
      "func:test_mapper_returns_none",
      "func:test_mapper_same_field",
      "func:test_numeric_mapper",
      "func:test_text_mapper"
    ],
    "old_files": [
      "test_spark.py_o1_mini_4d095f34.py"
    ],
    "new_files": [
      "test_spark_0e0bdf.py"
    ]
  },
  {
    "file_signature": [
      "class:_AnnotationData",
      "func:_annotate_args",
      "func:_are_annotations_used",
      "func:_assert_eq",
      "func:_check_except",
      "func:_check_style",
      "func:_dedupe_exceptions",
      "func:_exception_string",
      "func:_exceptions_from_docstring",
      "func:_get_module",
      "func:_get_module_helper",
      "func:_get_params",
      "func:_get_params_builtin_fn",
      "func:_get_params_ufunc",
      "func:_get_qualname",
      "func:_get_strategies",
      "func:_get_testable_functions",
      "func:_get_varnames",
      "func:_guess_strategy_by_argname",
      "func:_imports_for_object",
      "func:_imports_for_strategy",
      "func:_is_probably_ufunc",
      "func:_join_argument_annotations",
      "func:_join_generics",
      "func:_make_equiv_body",
      "func:_make_equiv_errors_body",
      "func:_make_roundtrip_body",
      "func:_make_test",
      "func:_make_test_body",
      "func:_make_ufunc_body",
      "func:_parameter_to_annotation",
      "func:_parameters_to_annotation_name",
      "func:_params_to_dict",
      "func:_st_strategy_names",
      "func:_strategy_for",
      "func:_strip_typevars",
      "func:_type_from_doc_fragment",
      "func:_valid_syntax_repr",
      "func:_with_any_registered",
      "func:_write_call",
      "func:binary_operation",
      "func:equivalent",
      "func:fuzz",
      "func:idempotent",
      "func:magic",
      "func:make_",
      "func:roundtrip",
      "func:ufunc"
    ],
    "old_files": [
      "ghostwriter.py_o1_mini_6c9a4f12.py"
    ],
    "new_files": [
      "ghostwriter_f75a80.py"
    ]
  },
  {
    "file_signature": [
      "class:_EquivalentRequirement",
      "func:__eq__",
      "func:__hash__",
      "func:__str__",
      "func:_append_package_reqs",
      "func:_check_module_path",
      "func:_create_nested_package",
      "func:_drop_comment",
      "func:_find_config_files",
      "func:_generate_manifest_file",
      "func:_generate_pyproject_file",
      "func:_generate_sdist_file",
      "func:_get_all_library_reqs",
      "func:_get_default_version",
      "func:_get_fsspec_filesystem",
      "func:_get_package_artifacts",
      "func:_get_sdist_name",
      "func:_install_files",
      "func:_is_within_directory",
      "func:_iter_parts",
      "func:_make_install_requires",
      "func:_move_package",
      "func:_move_package_with_conflicting_name",
      "func:_package_micropkg",
      "func:_package_micropkgs_from_manifest",
      "func:_pull_package",
      "func:_pull_packages_from_manifest",
      "func:_refactor_code_for_package",
      "func:_refactor_code_for_unpacking",
      "func:_rename_files",
      "func:_rename_package",
      "func:_safe_parse_requirements",
      "func:_sync_path_list",
      "func:_unpack_sdist",
      "func:_validate_dir",
      "func:micropkg",
      "func:micropkg_cli",
      "func:package_micropkg",
      "func:pull_package",
      "func:safe_extract"
    ],
    "old_files": [
      "micropkg.py_o1_mini_8ed7f205.py"
    ],
    "new_files": [
      "micropkg_d259a6.py"
    ]
  },
  {
    "file_signature": [
      "class:AccountAPI",
      "class:AccountDatabaseAPI",
      "class:AccountStorageDatabaseAPI",
      "class:AtomicDatabaseAPI",
      "class:AtomicWriteBatchAPI",
      "class:BaseTransactionAPI",
      "class:BlockAPI",
      "class:BlockAndMetaWitness",
      "class:BlockHeaderAPI",
      "class:BlockHeaderSedesAPI",
      "class:BlockImportResult",
      "class:BlockPersistResult",
      "class:ChainAPI",
      "class:ChainContextAPI",
      "class:ChainDatabaseAPI",
      "class:CodeStreamAPI",
      "class:ComputationAPI",
      "class:ConfigurableAPI",
      "class:ConsensusAPI",
      "class:ConsensusContextAPI",
      "class:DatabaseAPI",
      "class:ExecutionContextAPI",
      "class:GasMeterAPI",
      "class:HeaderChainAPI",
      "class:HeaderDatabaseAPI",
      "class:LegacyTransactionFieldsAPI",
      "class:LogAPI",
      "class:MemoryAPI",
      "class:MessageAPI",
      "class:MetaWitnessAPI",
      "class:MiningChainAPI",
      "class:MiningHeaderAPI",
      "class:OpcodeAPI",
      "class:ReceiptAPI",
      "class:ReceiptBuilderAPI",
      "class:ReceiptDecoderAPI",
      "class:SchemaAPI",
      "class:SignedTransactionAPI",
      "class:StackAPI",
      "class:StackManipulationAPI",
      "class:StateAPI",
      "class:TransactionBuilderAPI",
      "class:TransactionContextAPI",
      "class:TransactionDecoderAPI",
      "class:TransactionExecutorAPI",
      "class:TransactionFieldsAPI",
      "class:TransientStorageAPI",
      "class:UnsignedTransactionAPI",
      "class:VirtualMachineAPI",
      "class:VirtualMachineModifierAPI",
      "class:WithdrawalAPI",
      "func:__call__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_configure_gas_meter",
      "func:access_list",
      "func:account_bytecodes_queried",
      "func:account_exists",
      "func:account_has_code_or_nonce",
      "func:account_is_empty",
      "func:accounts_queried",
      "func:add_child_computation",
      "func:add_log_entry",
      "func:add_receipt",
      "func:add_receipt_to_header",
      "func:add_transaction",
      "func:address",
      "func:amend_vm_configuration",
      "func:amount",
      "func:apply_all_transactions",
      "func:apply_all_withdrawals",
      "func:apply_child_computation",
      "func:apply_computation",
      "func:apply_create_message",
      "func:apply_message",
      "func:apply_transaction",
      "func:apply_withdrawal",
      "func:as_dict",
      "func:as_opcode",
      "func:as_signed_transaction",
      "func:atomic_batch",
      "func:base_fee",
      "func:base_fee_per_gas",
      "func:blob_base_fee",
      "func:blob_gas_used",
      "func:blob_versioned_hashes",
      "func:block_number",
      "func:bloom",
      "func:bloom_filter",
      "func:bloomables",
      "func:build_block_with_transactions_and_withdrawals",
      "func:build_changeset",
      "func:build_computation",
      "func:build_evm_message",
      "func:build_state",
      "func:calc_data_fee",
      "func:chain_id",
      "func:check_signature_validity",
      "func:clear",
      "func:clear_transient_storage",
      "func:code_address",
      "func:coinbase",
      "func:commit",
      "func:compute_difficulty",
      "func:configure",
      "func:configure_header",
      "func:consume_gas",
      "func:copy",
      "func:costless_execute_transaction",
      "func:create_execution_context",
      "func:create_genesis_header",
      "func:create_header_from_parent",
      "func:create_transaction",
      "func:create_unsigned_transaction",
      "func:data",
      "func:data_as_bytes",
      "func:decode",
      "func:delete",
      "func:delete_account",
      "func:delete_code",
      "func:delete_storage",
      "func:delta_balance",
      "func:deserialize",
      "func:difficulty",
      "func:discard",
      "func:dup",
      "func:encode",
      "func:error",
      "func:estimate_gas",
      "func:excess_blob_gas",
      "func:execute_bytecode",
      "func:exists",
      "func:extend",
      "func:extend_memory",
      "func:finalize_block",
      "func:finalize_computation",
      "func:from_genesis",
      "func:from_genesis_header",
      "func:from_header",
      "func:gas",
      "func:gas_limit",
      "func:gas_price",
      "func:gas_used",
      "func:gas_used_by",
      "func:generate_block_from_parent_header_and_coinbase",
      "func:generate_child_computation",
      "func:get",
      "func:get_accessed_slots",
      "func:get_account_db_class",
      "func:get_accounts_for_deletion",
      "func:get_ancestor_hash",
      "func:get_ancestors",
      "func:get_balance",
      "func:get_block",
      "func:get_block_by_hash",
      "func:get_block_by_header",
      "func:get_block_class",
      "func:get_block_header_by_hash",
      "func:get_block_reward",
      "func:get_block_transaction_hashes",
      "func:get_block_transactions",
      "func:get_block_uncles",
      "func:get_block_withdrawals",
      "func:get_canonical_block_by_number",
      "func:get_canonical_block_hash",
      "func:get_canonical_block_header_by_number",
      "func:get_canonical_head",
      "func:get_canonical_transaction",
      "func:get_canonical_transaction_by_index",
      "func:get_canonical_transaction_index",
      "func:get_chaindb_class",
      "func:get_changed_root",
      "func:get_code",
      "func:get_code_hash",
      "func:get_computation",
      "func:get_fee_recipient",
      "func:get_gas_meter",
      "func:get_gas_price",
      "func:get_gas_refund",
      "func:get_gas_remaining",
      "func:get_gas_used",
      "func:get_header",
      "func:get_header_chain_gaps",
      "func:get_headerdb_class",
      "func:get_intrinsic_gas",
      "func:get_log_entries",
      "func:get_message_for_signing",
      "func:get_nephew_reward",
      "func:get_next_log_counter",
      "func:get_nonce",
      "func:get_opcode_fn",
      "func:get_precompiles",
      "func:get_prev_hashes",
      "func:get_raw_log_entries",
      "func:get_receipt_builder",
      "func:get_receipt_by_index",
      "func:get_receipts",
      "func:get_score",
      "func:get_self_destruct_beneficiaries",
      "func:get_sender",
      "func:get_slots_queried",
      "func:get_storage",
      "func:get_tip",
      "func:get_transaction_builder",
      "func:get_transaction_by_index",
      "func:get_transaction_context",
      "func:get_transaction_context_class",
      "func:get_transaction_executor",
      "func:get_transaction_index",
      "func:get_transaction_receipt",
      "func:get_transaction_receipt_by_index",
      "func:get_transaction_result",
      "func:get_transient_storage",
      "func:get_uncle_reward",
      "func:get_vm",
      "func:get_vm_class",
      "func:get_vm_class_for_block_number",
      "func:has_changed_root",
      "func:has_code_or_nonce",
      "func:has_root",
      "func:hash",
      "func:hashes",
      "func:header_exists",
      "func:hex_hash",
      "func:import_block",
      "func:import_header",
      "func:increment_blob_gas_used",
      "func:increment_nonce",
      "func:index",
      "func:intrinsic_gas",
      "func:is_address_warm",
      "func:is_create",
      "func:is_error",
      "func:is_genesis",
      "func:is_origin_computation",
      "func:is_signature_valid",
      "func:is_storage_warm",
      "func:is_success",
      "func:is_valid_opcode",
      "func:lock_changes",
      "func:logger",
      "func:logs",
      "func:make_block_hash_to_score_lookup_key",
      "func:make_block_number_to_hash_lookup_key",
      "func:make_canonical_head_hash_lookup_key",
      "func:make_header_chain_gaps_lookup_key",
      "func:make_receipt",
      "func:make_state_root",
      "func:make_storage_root",
      "func:make_transaction_hash_to_block_lookup_key",
      "func:make_withdrawal_hash_to_block_lookup_key",
      "func:mark_address_warm",
      "func:mark_storage_warm",
      "func:max_fee_per_blob_gas",
      "func:max_fee_per_gas",
      "func:max_priority_fee_per_gas",
      "func:memory_copy",
      "func:memory_read_bytes",
      "func:memory_write",
      "func:mine_all",
      "func:mine_block",
      "func:mine_block_extended",
      "func:mining_hash",
      "func:mix_hash",
      "func:new_transaction",
      "func:nonce",
      "func:number",
      "func:origin",
      "func:output",
      "func:override_transaction_context",
      "func:pack_block",
      "func:parent_beacon_block_root",
      "func:peek",
      "func:persist",
      "func:persist_block",
      "func:persist_checkpoint_header",
      "func:persist_header",
      "func:persist_header_chain",
      "func:persist_trie_data_dict",
      "func:persist_uncles",
      "func:persist_unexecuted_block",
      "func:pop1_any",
      "func:pop1_bytes",
      "func:pop1_int",
      "func:pop_any",
      "func:pop_bytes",
      "func:pop_ints",
      "func:precompiles",
      "func:prepare_child_message",
      "func:prev_hashes",
      "func:previous_hashes",
      "func:push_bytes",
      "func:push_int",
      "func:r",
      "func:raise_if_error",
      "func:read",
      "func:read_bytes",
      "func:record",
      "func:refund_gas",
      "func:register_account_for_deletion",
      "func:return_gas",
      "func:revert",
      "func:s",
      "func:seek",
      "func:sender",
      "func:serialize",
      "func:set",
      "func:set_balance",
      "func:set_block_transactions_and_withdrawals",
      "func:set_code",
      "func:set_header_timestamp",
      "func:set_nonce",
      "func:set_storage",
      "func:set_transient_storage",
      "func:should_burn_gas",
      "func:should_erase_return_data",
      "func:should_return_gas",
      "func:snapshot",
      "func:stack_dup",
      "func:stack_pop1_any",
      "func:stack_pop1_bytes",
      "func:stack_pop1_int",
      "func:stack_pop_any",
      "func:stack_pop_bytes",
      "func:stack_pop_ints",
      "func:stack_push_bytes",
      "func:stack_push_int",
      "func:stack_swap",
      "func:state",
      "func:state_root",
      "func:storage_address",
      "func:swap",
      "func:timestamp",
      "func:to",
      "func:total_slots_queried",
      "func:touch_account",
      "func:transaction_applied_hook",
      "func:v",
      "func:validate",
      "func:validate_block",
      "func:validate_header",
      "func:validate_receipt",
      "func:validate_seal",
      "func:validate_seal_extension",
      "func:validate_transaction",
      "func:validate_transaction_against_header",
      "func:validate_uncle",
      "func:validator_index",
      "func:value",
      "func:withdrawals_root",
      "func:write",
      "func:y_parity"
    ],
    "old_files": [
      "abc.py_o1_mini_03d36ba4.py"
    ],
    "new_files": [
      "abc_4434cf.py"
    ]
  },
  {
    "file_signature": [
      "func:correct_function",
      "func:f",
      "func:func",
      "func:func_1",
      "func:func_2",
      "func:func_kwargs",
      "func:incorrect_function",
      "func:numba_func",
      "func:sum_last",
      "func:test_args_not_cached",
      "func:test_cache",
      "func:test_check_nopython_kwargs",
      "func:test_correct_function_signature",
      "func:test_engine_kwargs_not_cached",
      "func:test_index_data_correctly_passed",
      "func:test_index_order_consistency_preserved",
      "func:test_multiindex_multi_key_not_supported",
      "func:test_multiindex_one_key",
      "func:test_multilabel_numba_vs_cython",
      "func:test_multilabel_udf_numba_vs_cython",
      "func:test_numba_vs_cython",
      "func:test_string_cython_vs_numba",
      "func:test_use_global_config",
      "func:udf_numba"
    ],
    "old_files": [
      "test_numba.py_o1_mini_3164d287.py"
    ],
    "new_files": [
      "test_numba_b10ee7.py"
    ]
  },
  {
    "file_signature": [
      "class:DataFrameFormatter",
      "class:DataFrameRenderer",
      "class:EngFormatter",
      "class:FloatArrayFormatter",
      "class:SeriesFormatter",
      "class:_Datetime64Formatter",
      "class:_Datetime64TZFormatter",
      "class:_ExtensionArrayFormatter",
      "class:_GenericArrayFormatter",
      "class:_IntArrayFormatter",
      "class:_Timedelta64Formatter",
      "func:__call__",
      "func:__init__",
      "func:_adjust_max_rows",
      "func:_calc_max_cols_fitted",
      "func:_calc_max_rows_fitted",
      "func:_chk_truncate",
      "func:_format",
      "func:_format_datetime64",
      "func:_format_datetime64_dateonly",
      "func:_format_strings",
      "func:_formatter",
      "func:_get_buffer",
      "func:_get_column_name_list",
      "func:_get_footer",
      "func:_get_formatted_column_labels",
      "func:_get_formatted_index",
      "func:_get_formatted_values",
      "func:_get_formatter",
      "func:_get_number_of_auxiliary_rows",
      "func:_get_strcols_without_index",
      "func:_has_names",
      "func:_initialize_colspace",
      "func:_initialize_columns",
      "func:_initialize_formatters",
      "func:_initialize_justify",
      "func:_initialize_sparsify",
      "func:_is_in_terminal",
      "func:_is_screen_narrow",
      "func:_is_screen_short",
      "func:_make_fixed_width",
      "func:_trim_zeros_complex",
      "func:_trim_zeros_float",
      "func:_trim_zeros_single_float",
      "func:_truncate_horizontally",
      "func:_truncate_vertically",
      "func:_value_formatter",
      "func:base_formatter",
      "func:buffer_put_lines",
      "func:decimal_formatter",
      "func:dimensions_info",
      "func:format_array",
      "func:format_col",
      "func:format_complex_with_na_rep",
      "func:format_percentiles",
      "func:format_values_with",
      "func:format_with_na_rep",
      "func:formatter",
      "func:get_dataframe_repr_params",
      "func:get_format_datetime64",
      "func:get_format_timedelta64",
      "func:get_level_lengths",
      "func:get_precision",
      "func:get_result",
      "func:get_result_as_array",
      "func:get_series_repr_params",
      "func:get_strcols",
      "func:has_column_names",
      "func:has_index_names",
      "func:is_number_with_decimal",
      "func:is_truncated",
      "func:is_truncated_horizontally",
      "func:is_truncated_vertically",
      "func:just",
      "func:max_rows_displayed",
      "func:save_to_buffer",
      "func:set_eng_float_format",
      "func:should_show_dimensions",
      "func:should_trim",
      "func:show_col_idx_names",
      "func:show_row_idx_names",
      "func:to_csv",
      "func:to_html",
      "func:to_string",
      "func:truncate"
    ],
    "old_files": [
      "format.py_o3_mini_80a9d557.py"
    ],
    "new_files": [
      "format_84da8c.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPConnection",
      "class:HTTPFile",
      "class:HTTPHeaders",
      "class:HTTPInputError",
      "class:HTTPMessageDelegate",
      "class:HTTPOutputError",
      "class:HTTPServerConnectionDelegate",
      "class:HTTPServerRequest",
      "class:RequestStartLine",
      "class:ResponseStartLine",
      "func:__delitem__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:__str__",
      "func:_encode_header",
      "func:_get_content_range",
      "func:_int_or_none",
      "func:_normalize_header",
      "func:_parse_body",
      "func:_parse_header",
      "func:_parse_request_range",
      "func:_parseparam",
      "func:_unquote_cookie",
      "func:_unquote_replace",
      "func:add",
      "func:add_type_annotations",
      "func:cookies",
      "func:copy",
      "func:data_received",
      "func:doctests",
      "func:encode_username_password",
      "func:finish",
      "func:format_timestamp",
      "func:full_url",
      "func:get_all",
      "func:get_list",
      "func:get_ssl_certificate",
      "func:headers_received",
      "func:on_close",
      "func:on_connection_close",
      "func:parse",
      "func:parse_body_arguments",
      "func:parse_cookie",
      "func:parse_line",
      "func:parse_multipart_form_data",
      "func:parse_request_start_line",
      "func:parse_response_start_line",
      "func:qs_to_qsl",
      "func:request_time",
      "func:split_host_and_port",
      "func:start_request",
      "func:url_concat",
      "func:write",
      "func:write_headers"
    ],
    "old_files": [
      "httputil.py_o1_mini_f381cad3.py"
    ],
    "new_files": [
      "httputil_afd03a.py"
    ]
  },
  {
    "file_signature": [
      "class:ExecutionPayload",
      "class:PendingPartialWithdrawal",
      "class:Spec",
      "class:State",
      "class:Validator",
      "class:Withdrawal",
      "class:WithdrawalRequest",
      "func:copy",
      "func:get_current_epoch",
      "func:get_expected_withdrawals",
      "func:get_max_effective_balance",
      "func:has_compounding_withdrawal_credential",
      "func:has_execution_withdrawal_credential",
      "func:is_fully_withdrawable_validator",
      "func:is_partially_withdrawable_validator",
      "func:prepare_expected_withdrawals",
      "func:prepare_pending_withdrawal",
      "func:prepare_withdrawal_request",
      "func:process_withdrawals",
      "func:run_withdrawals_processing",
      "func:sample_withdrawal_indices",
      "func:set_compounding_withdrawal_credential",
      "func:set_compounding_withdrawal_credential_with_balance",
      "func:set_eth1_withdrawal_credential_with_balance",
      "func:set_validator_fully_withdrawable",
      "func:set_validator_partially_withdrawable",
      "func:verify_post_state"
    ],
    "old_files": [
      "withdrawals.py_o1_mini_68b4d798.py"
    ],
    "new_files": [
      "withdrawals_7e4651.py"
    ]
  },
  {
    "file_signature": [
      "class:ADBCDatabase",
      "class:BaseEngine",
      "class:PandasSQL",
      "class:SQLAlchemyEngine",
      "class:SQLDatabase",
      "class:SQLTable",
      "class:SQLiteDatabase",
      "class:SQLiteTable",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_adapt_time",
      "func:_convert_arrays_to_dataframe",
      "func:_create_sql_schema",
      "func:_create_table_setup",
      "func:_execute_create",
      "func:_execute_insert",
      "func:_execute_insert_multi",
      "func:_fetchall_as_list",
      "func:_get_column_names_and_types",
      "func:_get_dtype",
      "func:_get_unicode_name",
      "func:_get_valid_sqlite_name",
      "func:_handle_date_column",
      "func:_harmonize_columns",
      "func:_index_name",
      "func:_parse_date_columns",
      "func:_process_parse_dates_argument",
      "func:_query_iterator",
      "func:_register_date_adapters",
      "func:_sql_type_name",
      "func:_sqlalchemy_type",
      "func:_wrap_result",
      "func:_wrap_result_adbc",
      "func:check_case_sensitive",
      "func:create",
      "func:drop_table",
      "func:execute",
      "func:exists",
      "func:get_engine",
      "func:get_schema",
      "func:get_table",
      "func:has_table",
      "func:insert",
      "func:insert_data",
      "func:insert_records",
      "func:insert_statement",
      "func:pandasSQL_builder",
      "func:prep_table",
      "func:read",
      "func:read_query",
      "func:read_sql",
      "func:read_sql_query",
      "func:read_sql_table",
      "func:read_table",
      "func:run_transaction",
      "func:sql_schema",
      "func:tables",
      "func:to_sql"
    ],
    "old_files": [
      "sql.py_o3_mini_c9dcf5db.py"
    ],
    "new_files": [
      "sql_07b300.py"
    ]
  },
  {
    "file_signature": [
      "class:Backtesting",
      "func:__init__",
      "func:_call_adjust_stop",
      "func:_check_trade_exit",
      "func:_collate_rejected",
      "func:_enter_trade",
      "func:_exit_trade",
      "func:_get_adjust_trade_entry_for_candle",
      "func:_get_close_rate",
      "func:_get_close_rate_for_roi",
      "func:_get_close_rate_for_stoploss",
      "func:_get_exit_for_signal",
      "func:_get_min_cached_backtest_date",
      "func:_get_ohlcv_as_lists",
      "func:_get_order_filled",
      "func:_load_protections",
      "func:_process_exit_order",
      "func:_run_funding_fees",
      "func:_set_strategy",
      "func:_time_generator",
      "func:_time_generator_det",
      "func:_time_pair_generator_det",
      "func:_try_close_open_order",
      "func:_validate_pairlists_for_backtesting",
      "func:backtest",
      "func:backtest_loop",
      "func:backtest_one_strategy",
      "func:cancel_open_orders",
      "func:check_abort",
      "func:check_for_trade_entry",
      "func:check_order_cancel",
      "func:check_order_replace",
      "func:cleanup",
      "func:disable_database_use",
      "func:get_detail_data",
      "func:get_valid_price_and_stake",
      "func:handle_left_open",
      "func:handle_similar_order",
      "func:init_backtest",
      "func:init_backtest_detail",
      "func:load_bt_data",
      "func:load_bt_data_detail",
      "func:load_prior_backtest",
      "func:manage_open_orders",
      "func:prepare_backtest",
      "func:run_protections",
      "func:start",
      "func:time_pair_generator",
      "func:trade_slot_available",
      "func:validate_row"
    ],
    "old_files": [
      "backtesting.py_o3_mini_86bf3a7e.py"
    ],
    "new_files": [
      "backtesting_a4b109.py"
    ]
  },
  {
    "file_signature": [
      "class:ChannelT",
      "class:_AppT",
      "class:_EventT",
      "class:_ModelArg",
      "class:_SchemaT",
      "class:_StreamT",
      "func:__aiter__",
      "func:__anext__",
      "func:__init__",
      "func:_throw",
      "func:as_future_message",
      "func:clone",
      "func:clone_using_queue",
      "func:derive",
      "func:empty",
      "func:get_topic_name",
      "func:on_stop_iteration",
      "func:prepare_key",
      "func:prepare_value",
      "func:queue",
      "func:send_soon",
      "func:stream",
      "func:subscriber_count"
    ],
    "old_files": [
      "channels.py_o3_mini_d312aa75.py"
    ],
    "new_files": [
      "channels_7d2bb8.py"
    ]
  },
  {
    "file_signature": [
      "class:Base",
      "class:TestCategoricalDtype",
      "class:TestCategoricalDtypeParametrized",
      "class:TestDatetimeTZDtype",
      "class:TestIntervalDtype",
      "class:TestPeriodDtype",
      "func:dtype",
      "func:test_alias_to_unit_bad_alias_raises",
      "func:test_alias_to_unit_raises",
      "func:test_basic",
      "func:test_basic_dtype",
      "func:test_caching",
      "func:test_cannot_use_custom_businessday",
      "func:test_cast_string_to_complex",
      "func:test_categorical_categories",
      "func:test_categorical_complex",
      "func:test_categorical_dtype_equality_requires_categories",
      "func:test_categorical_equality",
      "func:test_categorical_equality_strings",
      "func:test_categorical_nan_no_dtype_conversion",
      "func:test_categories",
      "func:test_closed_invalid",
      "func:test_closed_mismatch",
      "func:test_compare_complex_dtypes",
      "func:test_compat",
      "func:test_construct_dtype_from_string_invalid_raises",
      "func:test_construct_from_string_invalid_raises",
      "func:test_construct_from_string_wrong_type_raises",
      "func:test_construction",
      "func:test_construction_allows_closed_none",
      "func:test_construction_errors",
      "func:test_construction_from_string",
      "func:test_construction_from_string_error_subtype",
      "func:test_construction_from_string_errors",
      "func:test_construction_generic",
      "func:test_construction_non_nanosecond",
      "func:test_construction_not_supported",
      "func:test_constructor_invalid",
      "func:test_day_not_supported",
      "func:test_dont_keep_ref_after_del",
      "func:test_dst",
      "func:test_dtype_specific_categorical_dtype",
      "func:test_empty",
      "func:test_equal_but_different",
      "func:test_equal_but_different_mixed_dtypes",
      "func:test_equal_empty_ordered",
      "func:test_equal_empty_unordered",
      "func:test_equality",
      "func:test_equality_generic",
      "func:test_equality_invalid",
      "func:test_freq_argument_required",
      "func:test_from_categorical_dtype_both",
      "func:test_from_categorical_dtype_categories",
      "func:test_from_categorical_dtype_identity",
      "func:test_from_categorical_dtype_ordered",
      "func:test_from_values_or_dtype",
      "func:test_from_values_or_dtype_invalid_dtype",
      "func:test_from_values_or_dtype_raises",
      "func:test_hash",
      "func:test_hash_vs_equality",
      "func:test_identity",
      "func:test_invalid_raises",
      "func:test_is_bool_dtype",
      "func:test_is_bool_dtype_sparse",
      "func:test_is_boolean",
      "func:test_is_dtype",
      "func:test_is_dtype_no_warning",
      "func:test_loc_setitem_empty_labels_no_dtype_conversion",
      "func:test_mixed",
      "func:test_multi_column_dtype_assignment",
      "func:test_name_repr",
      "func:test_name_repr_generic",
      "func:test_name_repr_non_generic",
      "func:test_nan_invalid",
      "func:test_non_unique_invalid",
      "func:test_not_string",
      "func:test_numpy_informed",
      "func:test_order_hashes_different",
      "func:test_order_matters",
      "func:test_parser",
      "func:test_period_dtype_compare_to_string",
      "func:test_perioddtype_caching_dateoffset_normalize",
      "func:test_pickle",
      "func:test_registry",
      "func:test_registry_find",
      "func:test_repr",
      "func:test_repr_range_categories",
      "func:test_same_categories_different_order",
      "func:test_str_vs_repr",
      "func:test_subclass",
      "func:test_tuple_categories",
      "func:test_tz_standardize",
      "func:test_unordered_same",
      "func:test_unpickling_without_closed",
      "func:test_update_dtype",
      "func:test_update_dtype_errors",
      "func:test_update_dtype_string"
    ],
    "old_files": [
      "test_dtypes.py_o1_mini_1306b831.py"
    ],
    "new_files": [
      "test_dtypes_c6ad71.py"
    ]
  },
  {
    "file_signature": [
      "class:_Constraint",
      "func:__call__",
      "func:__init__",
      "func:allegdbbob",
      "func:deceptive",
      "func:doe",
      "func:f",
      "func:fiveshots",
      "func:harderparallel",
      "func:hdbo4d",
      "func:instrum_discrete",
      "func:keras_tuning",
      "func:lowbudget",
      "func:make_ctr",
      "func:mltuning",
      "func:multimodal",
      "func:naive_seq_keras_tuning",
      "func:naive_seq_mltuning",
      "func:naive_veryseq_keras_tuning",
      "func:naivemltuning",
      "func:nano_naive_seq_mltuning",
      "func:nano_naive_veryseq_mltuning",
      "func:nano_seq_mltuning",
      "func:nano_veryseq_mltuning",
      "func:newdoe",
      "func:oneshot",
      "func:oneshot_mltuning",
      "func:parallel",
      "func:parallel_small_budget",
      "func:pbo_reduced_suite",
      "func:refactor_optims",
      "func:seq_keras_tuning",
      "func:seq_mltuning",
      "func:sequential_instrum_discrete",
      "func:skip_ci",
      "func:veryseq_keras_tuning",
      "func:yabbob",
      "func:yabigbbob",
      "func:yaboundedbbob",
      "func:yaboxbbob",
      "func:yaconstrainedbbob",
      "func:yahdbbob",
      "func:yahdnoisybbob",
      "func:yahdnoisysplitbbob",
      "func:yahdsplitbbob",
      "func:yamegapenbbob",
      "func:yamegapenbigbbob",
      "func:yamegapenboxbbob",
      "func:yamegapenhdbbob",
      "func:yanoisybbob",
      "func:yanoisysplitbbob",
      "func:yaonepenbigbbob",
      "func:yaparabbob",
      "func:yapenbbob",
      "func:yapenboundedbbob",
      "func:yapenboxbbob",
      "func:yapennoisybbob",
      "func:yapenparabbob",
      "func:yapensmallbbob",
      "func:yasmallbbob",
      "func:yasplitbbob",
      "func:yatinybbob",
      "func:yatuningbbob",
      "func:yawidebbob"
    ],
    "old_files": [
      "experiments.py_o1_mini_56dbe657.py"
    ],
    "new_files": [
      "experiments_a52bc9.py"
    ]
  },
  {
    "file_signature": [
      "class:AppendableTable",
      "class:BlockManagerFixed",
      "class:Fixed",
      "class:GenericFixed",
      "class:GenericIndexCol",
      "class:HDFStore",
      "class:IndexCol",
      "class:SeriesFixed",
      "class:TableIterator",
      "class:WORMTable",
      "func:__contains__",
      "func:__delitem__",
      "func:__enter__",
      "func:__eq__",
      "func:__exit__",
      "func:__fspath__",
      "func:__getattr__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__ne__",
      "func:__repr__",
      "func:__setitem__",
      "func:_alias_to_class",
      "func:_check_if_open",
      "func:_class_to_alias",
      "func:_complevel",
      "func:_create_axes",
      "func:_create_nodes_and_group",
      "func:_create_storer",
      "func:_ensure_encoding",
      "func:_ensure_str",
      "func:_ensure_term",
      "func:_filters",
      "func:_fletcher32",
      "func:_get_blocks_and_items",
      "func:_get_index_factory",
      "func:_handle",
      "func:_identify_group",
      "func:_is_metadata_of",
      "func:_read_group",
      "func:_tables",
      "func:_validate_format",
      "func:_write_to_group",
      "func:append",
      "func:append_to_multiple",
      "func:attrs",
      "func:close",
      "func:col",
      "func:convert",
      "func:copy",
      "func:create_table_index",
      "func:cvalues",
      "func:delete",
      "func:description",
      "func:f",
      "func:filename",
      "func:flush",
      "func:func",
      "func:get",
      "func:get_attrs",
      "func:get_blk_items",
      "func:get_node",
      "func:get_object",
      "func:get_result",
      "func:get_storer",
      "func:groups",
      "func:infer_axes",
      "func:info",
      "func:is_exists",
      "func:is_indexed",
      "func:is_old_version",
      "func:is_open",
      "func:items",
      "func:itemsize",
      "func:keys",
      "func:kind_attr",
      "func:maybe_set_size",
      "func:nrows",
      "func:open",
      "func:pandas_type",
      "func:pathname",
      "func:put",
      "func:read",
      "func:read_hdf",
      "func:remove",
      "func:root",
      "func:select",
      "func:select_as_coordinates",
      "func:select_as_multiple",
      "func:select_column",
      "func:set_attr",
      "func:set_attrs",
      "func:set_info",
      "func:set_object_info",
      "func:set_pos",
      "func:shape",
      "func:storable",
      "func:take_data",
      "func:to_hdf",
      "func:update_info",
      "func:validate",
      "func:validate_and_set",
      "func:validate_attr",
      "func:validate_col",
      "func:validate_data_columns",
      "func:validate_metadata",
      "func:validate_multiindex",
      "func:validate_names",
      "func:validate_read",
      "func:validate_version",
      "func:version",
      "func:walk",
      "func:write",
      "func:write_data",
      "func:write_data_chunk",
      "func:write_metadata"
    ],
    "old_files": [
      "pytables.py_o3_mini_a09fe49a.py"
    ],
    "new_files": [
      "pytables_a9636c.py"
    ]
  },
  {
    "file_signature": [
      "class:Application",
      "class:ErrorHandler",
      "class:FallbackHandler",
      "class:Finish",
      "class:GZipContentEncoding",
      "class:HTTPError",
      "class:MissingArgumentError",
      "class:OutputTransform",
      "class:RedirectHandler",
      "class:RequestHandler",
      "class:StaticFileHandler",
      "class:TemplateModule",
      "class:UIModule",
      "class:_ApplicationRouter",
      "class:_ArgDefaultMarker",
      "class:_HandlerDelegate",
      "class:_UIModuleNamespace",
      "class:_linkify",
      "class:_xsrf_form_html",
      "func:__call__",
      "func:__getattr__",
      "func:__getitem__",
      "func:__init__",
      "func:__str__",
      "func:_break_cycles",
      "func:_clear_representation_headers",
      "func:_compressible_type",
      "func:_consume_field",
      "func:_convert_header_value",
      "func:_create_signature_v1",
      "func:_create_signature_v2",
      "func:_decode_fields_v2",
      "func:_decode_signed_value_v1",
      "func:_decode_signed_value_v2",
      "func:_decode_xsrf_token",
      "func:_get_argument",
      "func:_get_arguments",
      "func:_get_cached_version",
      "func:_get_raw_xsrf_token",
      "func:_get_resources",
      "func:_get_version",
      "func:_handle_request_exception",
      "func:_has_stream_request_body",
      "func:_initialize",
      "func:_load_ui_methods",
      "func:_load_ui_modules",
      "func:_log",
      "func:_request_summary",
      "func:_ui_method",
      "func:_ui_module",
      "func:_unimplemented_method",
      "func:add_handlers",
      "func:add_header",
      "func:add_transform",
      "func:addslash",
      "func:authenticated",
      "func:check_etag_header",
      "func:check_xsrf_cookie",
      "func:clear",
      "func:clear_all_cookies",
      "func:clear_cookie",
      "func:clear_header",
      "func:compute_etag",
      "func:cookies",
      "func:create_signed_value",
      "func:create_template_loader",
      "func:css_files",
      "func:current_user",
      "func:data_received",
      "func:decode_argument",
      "func:decode_signed_value",
      "func:detach",
      "func:embedded_css",
      "func:embedded_javascript",
      "func:execute",
      "func:find_handler",
      "func:finish",
      "func:flush",
      "func:format_field",
      "func:get",
      "func:get_absolute_path",
      "func:get_argument",
      "func:get_arguments",
      "func:get_body_argument",
      "func:get_body_arguments",
      "func:get_browser_locale",
      "func:get_cache_time",
      "func:get_content",
      "func:get_content_size",
      "func:get_content_type",
      "func:get_cookie",
      "func:get_current_user",
      "func:get_handler_delegate",
      "func:get_login_url",
      "func:get_modified_time",
      "func:get_query_argument",
      "func:get_query_arguments",
      "func:get_signature_key_version",
      "func:get_signed_cookie",
      "func:get_signed_cookie_key_version",
      "func:get_status",
      "func:get_target_delegate",
      "func:get_template_namespace",
      "func:get_template_path",
      "func:get_user_locale",
      "func:get_version",
      "func:head",
      "func:headers_received",
      "func:html_body",
      "func:html_head",
      "func:initialize",
      "func:is_absolute",
      "func:javascript_files",
      "func:listen",
      "func:locale",
      "func:log_exception",
      "func:log_request",
      "func:make_static_url",
      "func:on_connection_close",
      "func:on_finish",
      "func:parse_url_path",
      "func:prepare",
      "func:process_rule",
      "func:redirect",
      "func:removeslash",
      "func:render",
      "func:render_embed_css",
      "func:render_embed_js",
      "func:render_linked_css",
      "func:render_linked_js",
      "func:render_string",
      "func:require_setting",
      "func:reset",
      "func:reverse_url",
      "func:send_error",
      "func:set_cookie",
      "func:set_default_headers",
      "func:set_etag_header",
      "func:set_extra_headers",
      "func:set_header",
      "func:set_headers",
      "func:set_resources",
      "func:set_signed_cookie",
      "func:set_status",
      "func:settings",
      "func:should_return_304",
      "func:static_url",
      "func:stream_request_body",
      "func:transform_chunk",
      "func:transform_first_chunk",
      "func:val",
      "func:validate_absolute_path",
      "func:wrapper",
      "func:write",
      "func:write_error",
      "func:xsrf_form_html",
      "func:xsrf_token"
    ],
    "old_files": [
      "web.py_o3_mini_5a5f7fa7.py"
    ],
    "new_files": [
      "web_779fc7.py"
    ]
  },
  {
    "file_signature": [
      "class:TestDatetime64NaNOps",
      "class:TestEnsureNumeric",
      "class:TestNankurtFixedValues",
      "class:TestNanskewFixedValues",
      "class:TestNanvarFixedValues",
      "class:TestnanopsDataFrame",
      "func:_argminmax_wrap",
      "func:_badobj_wrap",
      "func:_skew_kurt_wrap",
      "func:actual_kurt",
      "func:actual_skew",
      "func:arr_bool",
      "func:arr_complex",
      "func:arr_complex_nan",
      "func:arr_complex_nan_infj",
      "func:arr_date",
      "func:arr_float",
      "func:arr_float1_nan_1d",
      "func:arr_float_1d",
      "func:arr_float_inf",
      "func:arr_float_nan",
      "func:arr_float_nan_1d",
      "func:arr_float_nan_inf",
      "func:arr_inf",
      "func:arr_int",
      "func:arr_nan",
      "func:arr_nan_1d",
      "func:arr_nan_float1",
      "func:arr_nan_float1_1d",
      "func:arr_nan_inf",
      "func:arr_nan_infj",
      "func:arr_nan_nan",
      "func:arr_nan_nan_inf",
      "func:arr_nan_nanj",
      "func:arr_obj",
      "func:arr_shape",
      "func:arr_str",
      "func:arr_tdelta",
      "func:arr_utf",
      "func:check_fun",
      "func:check_fun_data",
      "func:check_funs",
      "func:check_nancorr_nancov_1d",
      "func:check_nancorr_nancov_2d",
      "func:check_results",
      "func:disable_bottleneck",
      "func:prng",
      "func:samples",
      "func:setup_method",
      "func:teardown_method",
      "func:test_all_finite",
      "func:test_axis",
      "func:test_bn_not_ok_dtype",
      "func:test_bn_ok_dtype",
      "func:test_check_below_min_count_large_shape",
      "func:test_check_below_min_count_negative_or_zero_min_count",
      "func:test_check_below_min_count_positive_min_count",
      "func:test_check_bottleneck_disallow",
      "func:test_constant_series",
      "func:test_convertable_values",
      "func:test_ground_truth",
      "func:test_has_infs_floats",
      "func:test_has_infs_non_float",
      "func:test_invalid_method",
      "func:test_nan_funcs",
      "func:test_nanargmax",
      "func:test_nanargmin",
      "func:test_nancorr",
      "func:test_nancorr_kendall",
      "func:test_nancorr_pearson",
      "func:test_nancorr_spearman",
      "func:test_nancov",
      "func:test_nankurt",
      "func:test_nanmean",
      "func:test_nanmean_overflow",
      "func:test_nanmean_skipna_false",
      "func:test_nanmedian",
      "func:test_nanops_independent_of_mask_param",
      "func:test_nanops_with_warnings",
      "func:test_nanprod",
      "func:test_nans",
      "func:test_nans_skipna",
      "func:test_nansem",
      "func:test_nanskew",
      "func:test_nanstd",
      "func:test_nanstd_nans",
      "func:test_nanstd_roundoff",
      "func:test_nansum",
      "func:test_nanvar",
      "func:test_nanvar_all_finite",
      "func:test_nanvar_axis",
      "func:test_nanvar_ddof",
      "func:test_nanvar_nans",
      "func:test_ndarray",
      "func:test_non_convertable_values",
      "func:test_numeric_values",
      "func:test_numpy_ops",
      "func:test_returned_dtype",
      "func:test_use_bottleneck",
      "func:variance"
    ],
    "old_files": [
      "test_nanops.py_o1_mini_1ad75e35.py"
    ],
    "new_files": [
      "test_nanops_cc7886.py"
    ]
  },
  {
    "file_signature": [
      "class:Child",
      "class:Config",
      "class:CustomClass",
      "class:Foo",
      "class:Inner",
      "class:M",
      "class:M1",
      "class:M2",
      "class:Mixin",
      "class:Model",
      "class:ModelNoArbitraryTypes",
      "class:ModelWithStrictConfig",
      "class:MyBaseModel",
      "class:MyConfig",
      "class:MyDataclass",
      "class:MyModel",
      "class:MyNestedModel",
      "class:Outer",
      "class:Parent",
      "class:TestsBaseConfig",
      "class:Tup",
      "func:__init__",
      "func:_equals",
      "func:check_foo",
      "func:create_partial",
      "func:model_with_strict_config",
      "func:my_function",
      "func:test_base_config_custom_init_signature",
      "func:test_base_config_custom_init_signature_with_no_var_kw",
      "func:test_base_config_does_not_use_reserved_word",
      "func:test_base_config_equality_defaults_of_config_dict_class",
      "func:test_base_config_extra_allow_conflict_custom_signature",
      "func:test_base_config_extra_allow_conflict_twice",
      "func:test_base_config_extra_allow_no_conflict",
      "func:test_base_config_parse_model_with_strict_config_disabled",
      "func:test_base_config_private_attribute_intersection_with_extra_field",
      "func:test_base_config_properly_converted_to_dict",
      "func:test_base_config_use_field_name",
      "func:test_config_and_module_config_cannot_be_used_together",
      "func:test_config_class_attributes_are_deprecated",
      "func:test_config_class_is_deprecated",
      "func:test_config_class_missing_attributes",
      "func:test_config_dataclass_defer_build",
      "func:test_config_defaults_match",
      "func:test_config_dict_missing_keys",
      "func:test_config_inf_nan_disabled",
      "func:test_config_inf_nan_enabled",
      "func:test_config_inheritance_with_annotations",
      "func:test_config_is_not_inherited_in_model_fields",
      "func:test_config_key_deprecation",
      "func:test_config_model_defer_build",
      "func:test_config_model_defer_build_nested",
      "func:test_config_model_defer_build_ser_first",
      "func:test_config_model_type_adapter_defer_build",
      "func:test_config_plain_type_adapter_defer_build",
      "func:test_config_validation_error_cause",
      "func:test_config_wrapper_get_item",
      "func:test_config_wrapper_match",
      "func:test_config_wrapper_repr",
      "func:test_dataclass_allows_model_config_as_model_field",
      "func:test_dataclass_defer_build_override_on_rebuild_dataclass",
      "func:test_defer_build_json_schema",
      "func:test_empty_config_with_annotations",
      "func:test_finite_float_config",
      "func:test_generate_schema_deprecation_warning",
      "func:test_hide_input_in_errors",
      "func:test_immutable_copy_with_frozen",
      "func:test_invalid_config_keys",
      "func:test_invalid_extra",
      "func:test_json_encoders_model",
      "func:test_json_encoders_type_adapter",
      "func:test_model_config_as_model_field_raises",
      "func:test_multiple_inheritance_config",
      "func:test_namedtuple_arbitrary_type",
      "func:test_partial_creation_with_defer_build",
      "func:test_populate_by_name_config",
      "func:test_str_strip_whitespace",
      "func:test_str_to_lower",
      "func:test_str_to_upper",
      "func:test_with_config_disallowed_with_model"
    ],
    "old_files": [
      "test_config.py_o1_mini_d58c5263.py"
    ],
    "new_files": [
      "test_config_d874f5.py"
    ]
  },
  {
    "file_signature": [
      "class:DataFrameInfo",
      "class:SeriesInfo",
      "class:_BaseInfo",
      "class:_DataFrameInfoPrinter",
      "class:_DataFrameTableBuilder",
      "class:_DataFrameTableBuilderNonVerbose",
      "class:_DataFrameTableBuilderVerbose",
      "class:_InfoPrinterAbstract",
      "class:_SeriesInfoPrinter",
      "class:_SeriesTableBuilder",
      "class:_SeriesTableBuilderNonVerbose",
      "class:_SeriesTableBuilderVerbose",
      "class:_TableBuilderAbstract",
      "class:_TableBuilderVerboseMixin",
      "func:__init__",
      "func:_create_table_builder",
      "func:_fill_empty_info",
      "func:_fill_non_empty_info",
      "func:_gen_columns",
      "func:_gen_dtypes",
      "func:_gen_line_numbers",
      "func:_gen_non_null_counts",
      "func:_gen_rows",
      "func:_gen_rows_with_counts",
      "func:_gen_rows_without_counts",
      "func:_get_body_column_widths",
      "func:_get_dataframe_dtype_counts",
      "func:_get_gross_column_widths",
      "func:_initialize_max_cols",
      "func:_initialize_memory_usage",
      "func:_initialize_show_counts",
      "func:_put_str",
      "func:_sizeof_fmt",
      "func:add_body_lines",
      "func:add_columns_summary_line",
      "func:add_dtypes_line",
      "func:add_header_line",
      "func:add_index_range_line",
      "func:add_memory_usage_line",
      "func:add_object_type_line",
      "func:add_separator_line",
      "func:add_series_name_line",
      "func:col_count",
      "func:data",
      "func:display_memory_usage",
      "func:dtype_counts",
      "func:dtypes",
      "func:exceeds_info_cols",
      "func:exceeds_info_rows",
      "func:get_lines",
      "func:header_column_widths",
      "func:headers",
      "func:ids",
      "func:max_rows",
      "func:memory_usage_bytes",
      "func:memory_usage_string",
      "func:non_null_counts",
      "func:render",
      "func:size_qualifier",
      "func:to_buffer"
    ],
    "old_files": [
      "info.py_o1_mini_361b7bf2.py"
    ],
    "new_files": [
      "info_58f159.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseMaskedArray",
      "func:T",
      "func:__abs__",
      "func:__array__",
      "func:__array_ufunc__",
      "func:__arrow_array__",
      "func:__contains__",
      "func:__getitem__",
      "func:__init__",
      "func:__invert__",
      "func:__iter__",
      "func:__len__",
      "func:__neg__",
      "func:__pos__",
      "func:__setitem__",
      "func:_accumulate",
      "func:_arith_method",
      "func:_cmp_method",
      "func:_coerce_to_array",
      "func:_concat_same_type",
      "func:_empty",
      "func:_formatter",
      "func:_from_sequence",
      "func:_groupby_op",
      "func:_hash_pandas_object",
      "func:_hasna",
      "func:_maybe_mask_result",
      "func:_mode",
      "func:_na_value",
      "func:_pad_or_backfill",
      "func:_propagate_mask",
      "func:_quantile",
      "func:_reduce",
      "func:_simple_new",
      "func:_validate_setitem_value",
      "func:_values_for_argsort",
      "func:_values_for_json",
      "func:_wrap_min_count_reduction_result",
      "func:_wrap_na_result",
      "func:_wrap_reduction_result",
      "func:all",
      "func:any",
      "func:astype",
      "func:copy",
      "func:delete",
      "func:dtype",
      "func:duplicated",
      "func:equals",
      "func:factorize",
      "func:fillna",
      "func:interpolate",
      "func:isin",
      "func:isna",
      "func:map",
      "func:max",
      "func:mean",
      "func:min",
      "func:nbytes",
      "func:ndim",
      "func:prod",
      "func:ravel",
      "func:reconstruct",
      "func:reshape",
      "func:round",
      "func:searchsorted",
      "func:shape",
      "func:std",
      "func:sum",
      "func:swapaxes",
      "func:take",
      "func:to_numpy",
      "func:tolist",
      "func:transpose_homogeneous_masked_arrays",
      "func:unique",
      "func:value_counts",
      "func:var"
    ],
    "old_files": [
      "masked.py_o1_mini_aa74e7e3.py"
    ],
    "new_files": [
      "masked_cd87cc.py"
    ]
  },
  {
    "file_signature": [
      "class:DeflateDecoder",
      "class:GzipDecoder",
      "class:HTTPResponse",
      "func:__getattr__",
      "func:__init__",
      "func:_decode",
      "func:_error_catcher",
      "func:_flush_decoder",
      "func:_get_decoder",
      "func:_init_decoder",
      "func:close",
      "func:closed",
      "func:connection",
      "func:data",
      "func:decompress",
      "func:fileno",
      "func:from_base",
      "func:get_redirect_location",
      "func:getheader",
      "func:getheaders",
      "func:info",
      "func:read",
      "func:readable",
      "func:readinto",
      "func:release_conn",
      "func:stream",
      "func:tell"
    ],
    "old_files": [
      "response.py_o3_mini_c8730d4d.py"
    ],
    "new_files": [
      "response_563505.py"
    ]
  },
  {
    "file_signature": [
      "class:UtilityMeterSensor",
      "class:UtilitySensorExtraStoredData",
      "func:__init__",
      "func:_change_status",
      "func:_config_scheduler",
      "func:_validate_state",
      "func:as_dict",
      "func:async_reading",
      "func:async_source_tracking",
      "func:async_tariff_change",
      "func:calculate_adjustment",
      "func:device_class",
      "func:extra_restore_state_data",
      "func:extra_state_attributes",
      "func:from_dict",
      "func:start",
      "func:state_class",
      "func:validate_is_number"
    ],
    "old_files": [
      "sensor.py_o3_mini_b87a0a59.py"
    ],
    "new_files": [
      "sensor_c48c5b.py"
    ]
  },
  {
    "file_signature": [
      "class:BackslashNode",
      "class:BlankLineAtEnd",
      "class:BracketNode",
      "class:ImplicitNode",
      "class:IndentationNode",
      "class:IndentationTypes",
      "class:PEP8Normalizer",
      "class:PEP8NormalizerConfig",
      "func:__init__",
      "func:__repr__",
      "func:_analyse_non_prefix",
      "func:_check_line_length",
      "func:_check_spacing",
      "func:_check_tabs_spaces",
      "func:_get_wanted_blank_lines_count",
      "func:_is_magic_name",
      "func:_reset_newlines",
      "func:_visit_node",
      "func:_visit_part",
      "func:add_if_spaces",
      "func:add_issue",
      "func:add_not_spaces",
      "func:get_latest_suite_node",
      "func:is_issue",
      "func:visit_leaf",
      "func:visit_node"
    ],
    "old_files": [
      "pep8.py_o1_mini_747b5b20.py"
    ],
    "new_files": [
      "pep8_82e145.py"
    ]
  },
  {
    "file_signature": [
      "class:FindGenerateMacroSpec",
      "class:FindMacroSpec",
      "class:FindMaterializationSpec",
      "class:FindNodeSpec",
      "class:ManifestTest",
      "class:MixedManifestTest",
      "class:TestDisabledLookup",
      "class:TestManifestFindNodeFromRefOrSource",
      "class:TestManifestSearch",
      "func:_ambiguous_ref_parameter_sets",
      "func:_docs_parameter_sets",
      "func:_materialization_parameter_sets",
      "func:_materialization_parameter_sets_legacy",
      "func:_refable_parameter_sets",
      "func:_source_parameter_sets",
      "func:docs",
      "func:id_macro",
      "func:id_mat",
      "func:id_nodes",
      "func:macros",
      "func:manifest",
      "func:mock_disabled_node",
      "func:mock_disabled_source",
      "func:mock_manifest",
      "func:mock_model",
      "func:mock_model_with_version",
      "func:mock_node",
      "func:mock_seed",
      "func:mock_source",
      "func:nodes",
      "func:setUp",
      "func:tearDown",
      "func:test_build_flat_graph",
      "func:test_deepcopy_copies_flat_graph",
      "func:test_find",
      "func:test_find_generate_macros_by_name",
      "func:test_find_macro_by_name",
      "func:test_find_materialization_by_name",
      "func:test_find_materialization_by_name_legacy",
      "func:test_find_multiple_nodes",
      "func:test_find_multiple_nodes_with_resource_types",
      "func:test_find_multiple_nodes_with_resource_types_empty",
      "func:test_find_multiple_nodes_with_wrong_resource_types",
      "func:test_find_no_package",
      "func:test_find_node_from_ref_or_source",
      "func:test_find_node_from_ref_or_source_invalid_expression",
      "func:test_find_versioned_node",
      "func:test_find_versioned_node_no_package",
      "func:test_find_versioned_node_no_version",
      "func:test_find_versioned_node_wrong_name",
      "func:test_find_versioned_node_wrong_package",
      "func:test_find_versioned_node_wrong_version",
      "func:test_find_wrong_name",
      "func:test_find_wrong_package",
      "func:test_find_wrong_resource_types",
      "func:test_find_wrong_version",
      "func:test_get_resource_fqns",
      "func:test_get_resource_fqns_empty",
      "func:test_merge_from_artifact",
      "func:test_nested_nodes",
      "func:test_no_nodes",
      "func:test_no_nodes_with_metadata",
      "func:test_resolve_doc",
      "func:test_resolve_ref",
      "func:test_resolve_ref_ambiguous_resource_name_across_packages",
      "func:test_resolve_source"
    ],
    "old_files": [
      "test_manifest.py_o1_mini_d5cde5aa.py"
    ],
    "new_files": [
      "test_manifest_b9e428.py"
    ]
  },
  {
    "file_signature": [
      "class:AirzoneBaseSelect",
      "class:AirzoneSelectDescription",
      "class:AirzoneZoneSelect",
      "func:__init__",
      "func:_async_entity_listener",
      "func:_async_update_attrs",
      "func:_get_current_option",
      "func:_handle_coordinator_update",
      "func:main_zone_options"
    ],
    "old_files": [
      "select.py_o1_mini_167ca258.py"
    ],
    "new_files": [
      "select_a77de5.py"
    ]
  },
  {
    "file_signature": [
      "class:Apply",
      "class:FrameApply",
      "class:FrameColumnApply",
      "class:FrameRowApply",
      "class:GroupByApply",
      "class:NDFrameApply",
      "class:ResamplerWindowApply",
      "class:SeriesApply",
      "func:__init__",
      "func:_make_unique_kwarg_list",
      "func:_managle_lambda_list",
      "func:agg",
      "func:agg_axis",
      "func:agg_dict_like",
      "func:agg_list_like",
      "func:agg_or_apply_dict_like",
      "func:agg_or_apply_list_like",
      "func:apply",
      "func:apply_broadcast",
      "func:apply_compat",
      "func:apply_empty_result",
      "func:apply_list_or_dict_like",
      "func:apply_raw",
      "func:apply_series_generator",
      "func:apply_series_numba",
      "func:apply_standard",
      "func:apply_str",
      "func:apply_with_numba",
      "func:columns",
      "func:compute_dict_like",
      "func:compute_list_like",
      "func:curried",
      "func:frame_apply",
      "func:generate_numba_apply_func",
      "func:include_axis",
      "func:index",
      "func:infer_to_same_shape",
      "func:is_multi_agg_with_relabel",
      "func:maybe_mangle_lambdas",
      "func:normalize_dictlike_arg",
      "func:normalize_keyword_aggregation",
      "func:numba_func",
      "func:reconstruct_and_relabel_result",
      "func:reconstruct_func",
      "func:relabel_result",
      "func:res_columns",
      "func:result_columns",
      "func:result_index",
      "func:series_generator",
      "func:transform",
      "func:transform_dict_like",
      "func:transform_str_or_callable",
      "func:validate_func_kwargs",
      "func:validate_values_for_numba",
      "func:values",
      "func:wrap_function",
      "func:wrap_results",
      "func:wrap_results_dict_like",
      "func:wrap_results_for_axis",
      "func:wrap_results_list_like",
      "func:wrapper"
    ],
    "old_files": [
      "apply.py_o1_mini_2c756d18.py"
    ],
    "new_files": [
      "apply_575d8e.py"
    ]
  },
  {
    "file_signature": [
      "class:ContextAugmenter",
      "class:EntityNameCache",
      "class:EventCache",
      "class:EventProcessor",
      "class:LogbookRun",
      "func:__init__",
      "func:_humanify",
      "func:_rows_ids_match",
      "func:augment",
      "func:clear",
      "func:get",
      "func:get_context",
      "func:get_events",
      "func:humanify",
      "func:limited_select",
      "func:switch_to_live"
    ],
    "old_files": [
      "processor.py_o1_mini_54497b7b.py"
    ],
    "new_files": [
      "processor_23c7a3.py"
    ]
  },
  {
    "file_signature": [
      "class:Monitor",
      "class:TableState",
      "func:__init__",
      "func:__reduce_keywords__",
      "func:_events_by_stream_dict",
      "func:_events_by_task_dict",
      "func:_http_response_codes_dict",
      "func:_metric_counts_dict",
      "func:_normalize",
      "func:_sample",
      "func:_table_or_create",
      "func:_topic_buffer_full_dict",
      "func:_tp_committed_offsets_dict",
      "func:_tp_end_offsets_dict",
      "func:_tp_offsets_as_dict",
      "func:_tp_read_offsets_dict",
      "func:asdict",
      "func:count",
      "func:ms_since",
      "func:on_assignment_completed",
      "func:on_assignment_error",
      "func:on_assignment_start",
      "func:on_commit_completed",
      "func:on_commit_initiated",
      "func:on_message_in",
      "func:on_message_out",
      "func:on_rebalance_end",
      "func:on_rebalance_return",
      "func:on_rebalance_start",
      "func:on_send_completed",
      "func:on_send_error",
      "func:on_send_initiated",
      "func:on_stream_event_in",
      "func:on_stream_event_out",
      "func:on_table_del",
      "func:on_table_get",
      "func:on_table_set",
      "func:on_topic_buffer_full",
      "func:on_tp_commit",
      "func:on_web_request_end",
      "func:on_web_request_start",
      "func:secs_since",
      "func:secs_to_ms",
      "func:track_tp_end_offset"
    ],
    "old_files": [
      "monitor.py_o3_mini_121c517b.py"
    ],
    "new_files": [
      "monitor_7b218d.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseModel",
      "class:ModelMetaclass",
      "func:__eq__",
      "func:__get_validators__",
      "func:__getstate__",
      "func:__init__",
      "func:__instancecheck__",
      "func:__iter__",
      "func:__new__",
      "func:__repr_args__",
      "func:__setattr__",
      "func:__setstate__",
      "func:__try_update_forward_refs__",
      "func:_calculate_keys",
      "func:_copy_and_set_values",
      "func:_decompose_class",
      "func:_enforce_dict_if_root",
      "func:_get_value",
      "func:_init_private_attributes",
      "func:_iter",
      "func:construct",
      "func:copy",
      "func:create_model",
      "func:dict",
      "func:from_orm",
      "func:generate_hash_function",
      "func:hash_function",
      "func:is_untouched",
      "func:json",
      "func:parse_file",
      "func:parse_obj",
      "func:parse_raw",
      "func:schema",
      "func:schema_json",
      "func:update_forward_refs",
      "func:validate",
      "func:validate_custom_root_type",
      "func:validate_model"
    ],
    "old_files": [
      "main.py_o3_mini_b2604fb7.py"
    ],
    "new_files": [
      "main_c8ac67.py"
    ]
  },
  {
    "file_signature": [
      "class:TestAlignment",
      "class:TestEval",
      "class:TestMath",
      "class:TestOperations",
      "class:TestScope",
      "class:TestTypeCasting",
      "func:_eval_single_bin",
      "func:engine",
      "func:eval",
      "func:idx_func_dict",
      "func:lhs",
      "func:local_func",
      "func:parser",
      "func:should_warn",
      "func:test_4d_ndarray_fails",
      "func:test_align_nested_unary_op",
      "func:test_and_logic_string_match",
      "func:test_assignment_column_invalid_assign",
      "func:test_assignment_column_invalid_assign_function_call",
      "func:test_assignment_column_multiple_raise",
      "func:test_assignment_explicit",
      "func:test_assignment_fails",
      "func:test_assignment_in_query",
      "func:test_assignment_multiple_raises",
      "func:test_assignment_not_inplace",
      "func:test_assignment_single_assign_existing",
      "func:test_assignment_single_assign_local_overlap",
      "func:test_assignment_single_assign_name",
      "func:test_assignment_single_assign_new",
      "func:test_attr_expression",
      "func:test_bad_resolver_raises",
      "func:test_basic_frame_alignment",
      "func:test_basic_frame_series_alignment",
      "func:test_basic_period_index_boolean_expression",
      "func:test_basic_period_index_subscript_expression",
      "func:test_basic_series_frame_alignment",
      "func:test_binary_arith_ops",
      "func:test_binary_functions",
      "func:test_binop_typecasting",
      "func:test_bool_ops_fails_on_scalars",
      "func:test_bool_ops_with_constants",
      "func:test_cannot_copy_item",
      "func:test_cannot_item_assign",
      "func:test_chained_cmp_op",
      "func:test_check_many_exprs",
      "func:test_check_single_invert_op",
      "func:test_column_in",
      "func:test_complex_cmp_ops",
      "func:test_complex_series_frame_alignment",
      "func:test_compound_invert_op",
      "func:test_constant",
      "func:test_date_boolean",
      "func:test_df_arithmetic_subexpression",
      "func:test_df_use_case",
      "func:test_disallow_python_keywords",
      "func:test_disallow_scalar_bool_ops",
      "func:test_disallowed_nodes",
      "func:test_empty_globals",
      "func:test_empty_locals",
      "func:test_empty_string_raises",
      "func:test_equals_various",
      "func:test_eval_keep_name",
      "func:test_eval_no_support_column_name",
      "func:test_eval_unmatching_names",
      "func:test_failing_subscript_with_name_error",
      "func:test_float_comparison_bin_op",
      "func:test_float_truncation",
      "func:test_floor_division",
      "func:test_frame_comparison",
      "func:test_frame_invert",
      "func:test_frame_negate",
      "func:test_frame_pos",
      "func:test_global_scope",
      "func:test_identical",
      "func:test_inf",
      "func:test_inplace_no_assignment",
      "func:test_invalid_engine",
      "func:test_invalid_local_variable_reference",
      "func:test_invalid_parser",
      "func:test_keyword_arg",
      "func:test_lhs_expression_subscript",
      "func:test_line_continuation",
      "func:test_medium_complex_frame_alignment",
      "func:test_modulus",
      "func:test_more_than_one_expression_raises",
      "func:test_multi_line_expression",
      "func:test_multi_line_expression_callable_local_variable",
      "func:test_multi_line_expression_callable_local_variable_with_kwargs",
      "func:test_multi_line_expression_local_variable",
      "func:test_multi_line_expression_not_inplace",
      "func:test_name_error_exprs",
      "func:test_nested_period_index_subscript_expression",
      "func:test_no_new_globals",
      "func:test_no_new_locals",
      "func:test_numexpr_builtin_raises",
      "func:test_numexpr_option_incompatible_op",
      "func:test_numexpr_option_respected",
      "func:test_performance_warning_for_poor_alignment",
      "func:test_pow",
      "func:test_query_inplace",
      "func:test_result_types",
      "func:test_scalar_unary",
      "func:test_series_frame_commutativity",
      "func:test_series_invert",
      "func:test_series_negate",
      "func:test_series_pos",
      "func:test_set_inplace",
      "func:test_simple_arith_ops",
      "func:test_simple_bool_ops",
      "func:test_simple_cmp_ops",
      "func:test_simple_in_ops",
      "func:test_single_variable",
      "func:test_syntax_error_exprs",
      "func:test_true_false_logic",
      "func:test_unary_functions",
      "func:test_unary_in_array",
      "func:test_unary_in_function",
      "func:test_undefined_func"
    ],
    "old_files": [
      "test_eval.py_o1_mini_4e632bc4.py"
    ],
    "new_files": [
      "test_eval_6a919b.py"
    ]
  },
  {
    "file_signature": [
      "class:Browser",
      "class:BrowserContext",
      "func:__init__",
      "func:_dummy_callback",
      "func:_getVersion",
      "func:browser",
      "func:browserContexts",
      "func:isIncognite",
      "func:isIncognito",
      "func:process",
      "func:targets",
      "func:wsEndpoint"
    ],
    "old_files": [
      "browser.py_o1_mini_d70c754b.py"
    ],
    "new_files": [
      "browser_8130a6.py"
    ]
  },
  {
    "file_signature": [
      "class:A",
      "class:DtypeStub",
      "class:ExtTypeStub",
      "class:TestDataFrameFormatting",
      "class:TestDatetime64Formatter",
      "class:TestFloatArrayFormatter",
      "class:TestFormatPercentiles",
      "class:TestGenericArrayFormatter",
      "class:TestSeriesFormatting",
      "class:TestTimedelta64Formatter",
      "func:__getitem__",
      "func:__len__",
      "func:_three_digit_exp",
      "func:chck_ncols",
      "func:dtype",
      "func:format_func",
      "func:gen_series_formatting",
      "func:getndots",
      "func:has_doubly_truncated_repr",
      "func:has_expanded_repr",
      "func:has_horizontally_truncated_repr",
      "func:has_info_repr",
      "func:has_non_verbose_info_repr",
      "func:has_truncated_repr",
      "func:has_vertically_truncated_repr",
      "func:mkframe",
      "func:name",
      "func:test_1d_array",
      "func:test_2d_array",
      "func:test_2d_extension_type",
      "func:test_3d_array",
      "func:test_auto_detect",
      "func:test_consistent_format",
      "func:test_date_nanos",
      "func:test_dates",
      "func:test_dates_display",
      "func:test_datetime64formatter_hoursecond",
      "func:test_datetime64formatter_tz_ms",
      "func:test_datetime64formatter_yearmonth",
      "func:test_datetimeindex_highprecision",
      "func:test_datetimelike_frame",
      "func:test_days",
      "func:test_days_neg",
      "func:test_east_asian_unicode_false",
      "func:test_east_asian_unicode_series",
      "func:test_east_asian_unicode_true",
      "func:test_error_format_percentiles",
      "func:test_expand_frame_repr",
      "func:test_filepath_or_buffer_arg",
      "func:test_filepath_or_buffer_bad_arg_raises",
      "func:test_float_trim_zeros",
      "func:test_format",
      "func:test_format_explicit",
      "func:test_format_percentiles",
      "func:test_format_percentiles_integer_idx",
      "func:test_freq_name_separation",
      "func:test_info_repr",
      "func:test_info_repr_max_cols",
      "func:test_long_series",
      "func:test_max_colwidth_negative_int_raises",
      "func:test_max_multi_index_display",
      "func:test_max_rows_eq_one",
      "func:test_max_rows_fitted",
      "func:test_misc",
      "func:test_mixed",
      "func:test_mixed_datetime64",
      "func:test_ncols",
      "func:test_output_display_precision_trailing_zeroes",
      "func:test_output_significant_digits",
      "func:test_period",
      "func:test_pprint_pathological_object",
      "func:test_repr_chop_threshold",
      "func:test_repr_chop_threshold_column_below",
      "func:test_repr_float_formatting_html_output",
      "func:test_repr_max_columns_max_rows",
      "func:test_repr_min_rows",
      "func:test_repr_no_backslash",
      "func:test_repr_non_interactive",
      "func:test_repr_truncates_terminal_size",
      "func:test_repr_truncates_terminal_size_full",
      "func:test_repr_truncation",
      "func:test_repr_truncation_column_size",
      "func:test_repr_truncation_dataframe_attrs",
      "func:test_repr_truncation_preserves_na",
      "func:test_repr_truncation_series_with_dataframe_attrs",
      "func:test_set_option_precision",
      "func:test_show_dimensions",
      "func:test_str_max_colwidth",
      "func:test_subdays",
      "func:test_subdays_neg",
      "func:test_to_string_ascii_error",
      "func:test_to_string_repr_unicode2",
      "func:test_to_string_unicode_error",
      "func:test_too_long",
      "func:test_truncate_ndots",
      "func:test_unicode_name_in_footer",
      "func:test_unit_truncation_is_consistent_with_format_float_signif",
      "func:test_wide_repr",
      "func:test_wide_repr_multiindex",
      "func:test_wide_repr_multiindex_cols",
      "func:test_wide_repr_named",
      "func:test_wide_repr_unicode",
      "func:test_wide_repr_wide_columns",
      "func:test_wide_repr_wide_long_columns",
      "func:test_zero",
      "func:type"
    ],
    "old_files": [
      "test_format.py_o1_mini_4e873e50.py"
    ],
    "new_files": [
      "test_format_849ee9.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseExcelReader",
      "class:ExcelFile",
      "class:ExcelWriter",
      "func:__enter__",
      "func:__exit__",
      "func:__fspath__",
      "func:__init__",
      "func:__new__",
      "func:_calc_rows",
      "func:_check_skiprows_func",
      "func:_get_sheet_name",
      "func:_parse_sheet",
      "func:_parse_specific_sheet",
      "func:_save",
      "func:_value_with_fmt",
      "func:_workbook_class",
      "func:_write_cells",
      "func:book",
      "func:check_extension",
      "func:close",
      "func:date_format",
      "func:datetime_format",
      "func:engine",
      "func:f",
      "func:get_sheet_by_index",
      "func:get_sheet_by_name",
      "func:get_sheet_data",
      "func:if_sheet_exists",
      "func:inspect_excel_format",
      "func:load_workbook",
      "func:parse",
      "func:raise_if_bad_sheet_by_index",
      "func:raise_if_bad_sheet_by_name",
      "func:read_excel",
      "func:sheet_names",
      "func:sheets",
      "func:supported_extensions"
    ],
    "old_files": [
      "_base.py_o3_mini_d134fb38.py"
    ],
    "new_files": [
      "_base_2ce4a7.py"
    ]
  },
  {
    "file_signature": [
      "class:Outlet",
      "class:SelectSwitch",
      "class:Switch",
      "class:Vacuum",
      "class:Valve",
      "class:ValveBase",
      "class:ValveInfo",
      "class:ValveSwitch",
      "func:__init__",
      "func:_create_setter",
      "func:async_update_state",
      "func:is_activate",
      "func:reset_switch",
      "func:select_option",
      "func:set_state",
      "func:setter"
    ],
    "old_files": [
      "type_switches.py_o1_mini_04095f11.py"
    ],
    "new_files": [
      "type_switches_069af3.py"
    ]
  },
  {
    "file_signature": [
      "class:NodeCacheItem",
      "func:__init__",
      "func:_get_cache_clear_lock_path",
      "func:_get_cache_directory_path",
      "func:_get_default_cache_path",
      "func:_get_hashed_path",
      "func:_load_from_file_system",
      "func:_remove_cache_and_update_lock",
      "func:_save_to_file_system",
      "func:_set_cache_item",
      "func:_touch",
      "func:clear_cache",
      "func:clear_inactive_cache",
      "func:load_module",
      "func:try_to_save_module"
    ],
    "old_files": [
      "cache.py_o1_mini_397aeb92.py"
    ],
    "new_files": [
      "cache_f3079a.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseGroupBy",
      "class:GroupBy",
      "class:GroupByPlot",
      "func:__call__",
      "func:__getattr__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:_agg_general",
      "func:_agg_py_fallback",
      "func:_aggregate_with_numba",
      "func:_apply_filter",
      "func:_concat_objects",
      "func:_cumcount_array",
      "func:_cython_agg_general",
      "func:_cython_transform",
      "func:_dir_additions",
      "func:_get_index",
      "func:_get_indices",
      "func:_idxmax_idxmin",
      "func:_insert_inaxis_grouper",
      "func:_insert_quantile_level",
      "func:_numba_agg_general",
      "func:_numba_prep",
      "func:_obj_1d_constructor",
      "func:_op_via_apply",
      "func:_python_apply_general",
      "func:_reduction_kernel_transform",
      "func:_selected_obj",
      "func:_set_result_index_ordered",
      "func:_transform",
      "func:_transform_with_numba",
      "func:_value_counts",
      "func:_wrap_agged_manager",
      "func:_wrap_aggregated_output",
      "func:_wrap_applied_output",
      "func:_wrap_idxmax_idxmin",
      "func:_wrap_transform_fast_result",
      "func:all",
      "func:any",
      "func:apply",
      "func:array_func",
      "func:attr",
      "func:count",
      "func:curried",
      "func:f",
      "func:get_converter",
      "func:get_group",
      "func:get_groupby",
      "func:groups",
      "func:hfunc",
      "func:indices",
      "func:mean",
      "func:median",
      "func:ngroups",
      "func:pipe",
      "func:prod",
      "func:sem",
      "func:size",
      "func:std",
      "func:sum",
      "func:var"
    ],
    "old_files": [
      "groupby.py_o3_mini_6ea92bf9.py"
    ],
    "new_files": [
      "groupby_4ba682.py"
    ]
  },
  {
    "file_signature": [
      "class:StataMissingValue",
      "class:StataNonCatValueLabel",
      "class:StataParser",
      "class:StataReader",
      "class:StataStrLWriter",
      "class:StataValueLabel",
      "class:StataWriter",
      "class:StataWriter117",
      "class:StataWriterUTF8",
      "func:__enter__",
      "func:__eq__",
      "func:__exit__",
      "func:__init__",
      "func:__next__",
      "func:__repr__",
      "func:__str__",
      "func:_cast_to_stata_types",
      "func:_check_column_names",
      "func:_close",
      "func:_convert_datetime_to_stata_type",
      "func:_convert_key",
      "func:_convert_strls",
      "func:_datetime_to_stata_elapsed_vec",
      "func:_decode",
      "func:_do_convert_categoricals",
      "func:_do_convert_missing",
      "func:_do_select_columns",
      "func:_dtype_to_default_stata_fmt",
      "func:_dtype_to_stata_type",
      "func:_dtype_to_stata_type_117",
      "func:_encode_strings",
      "func:_ensure_open",
      "func:_get_data_label",
      "func:_get_dtypes",
      "func:_get_fmtlist",
      "func:_get_lbllist",
      "func:_get_nobs",
      "func:_get_seek_variable_labels",
      "func:_get_time_stamp",
      "func:_get_variable_labels",
      "func:_get_varlist",
      "func:_insert_strls",
      "func:_maybe_convert_to_int_keys",
      "func:_null_terminate_bytes",
      "func:_null_terminate_str",
      "func:_open_file",
      "func:_pad_bytes",
      "func:_pad_bytes_new",
      "func:_prepare_categoricals",
      "func:_prepare_data",
      "func:_prepare_non_cat_value_labels",
      "func:_prepare_pandas",
      "func:_prepare_value_labels",
      "func:_read_char8",
      "func:_read_header",
      "func:_read_int16",
      "func:_read_int16_count",
      "func:_read_int32",
      "func:_read_int64",
      "func:_read_int8",
      "func:_read_new_header",
      "func:_read_new_value_labels",
      "func:_read_old_header",
      "func:_read_old_value_labels",
      "func:_read_strls",
      "func:_read_uint16",
      "func:_read_uint32",
      "func:_read_uint64",
      "func:_read_uint8",
      "func:_read_value_labels",
      "func:_replace_nans",
      "func:_set_encoding",
      "func:_set_endianness",
      "func:_set_formats_and_types",
      "func:_setup_dtype",
      "func:_stata_elapsed_date_to_datetime_vec",
      "func:_update_strl_names",
      "func:_validate_variable_name",
      "func:_write",
      "func:_write_bytes",
      "func:_write_characteristics",
      "func:_write_data",
      "func:_write_file_close_tag",
      "func:_write_formats",
      "func:_write_header",
      "func:_write_map",
      "func:_write_sortlist",
      "func:_write_strls",
      "func:_write_value_label_names",
      "func:_write_value_labels",
      "func:_write_variable_labels",
      "func:_write_variable_types",
      "func:_write_varnames",
      "func:data_label",
      "func:f",
      "func:g",
      "func:generate_blob",
      "func:generate_table",
      "func:generate_value_label",
      "func:get_base_missing_value",
      "func:get_chunk",
      "func:parse_dates_safe",
      "func:read",
      "func:read_stata",
      "func:string",
      "func:time_stamp",
      "func:value",
      "func:value_labels",
      "func:variable_labels",
      "func:write_file"
    ],
    "old_files": [
      "stata.py_o3_mini_07254f7d.py"
    ],
    "new_files": [
      "stata_4ae9e0.py"
    ]
  },
  {
    "file_signature": [
      "class:PrestoBaseEngineSpec",
      "class:PrestoEngineSpec",
      "func:_create_column_info",
      "func:_extract_error_message",
      "func:_get_fields",
      "func:_get_full_name",
      "func:_has_nested_data_types",
      "func:_is_column_name_quoted",
      "func:_latest_partition_from_df",
      "func:_parse_structural_column",
      "func:_partition_query",
      "func:_show_columns",
      "func:_split_data_type",
      "func:adjust_engine_params",
      "func:convert_dttm",
      "func:epoch_to_dttm",
      "func:estimate_statement_cost",
      "func:expand_data",
      "func:get_allow_cost_estimate",
      "func:get_catalog_names",
      "func:get_children",
      "func:get_columns",
      "func:get_create_view",
      "func:get_default_catalog",
      "func:get_extra_table_metadata",
      "func:get_function_names",
      "func:get_schema_from_engine_params",
      "func:get_table_names",
      "func:get_tracking_url",
      "func:get_view_names",
      "func:handle_cursor",
      "func:has_implicit_cancel",
      "func:humanize",
      "func:latest_partition",
      "func:latest_sub_partition",
      "func:query_cost_formatter",
      "func:select_star",
      "func:update_impersonation_config",
      "func:where_latest_partition"
    ],
    "old_files": [
      "presto.py_o1_mini_97549d25.py"
    ],
    "new_files": [
      "presto_08b2cb.py"
    ]
  },
  {
    "file_signature": [
      "class:ArestSwitchBase",
      "class:ArestSwitchFunction",
      "class:ArestSwitchPin",
      "func:__init__",
      "func:__set_pin_output",
      "func:setup_platform",
      "func:turn_off",
      "func:turn_on",
      "func:update"
    ],
    "old_files": [
      "switch.py_o1_mini_1c4fdced.py"
    ],
    "new_files": [
      "switch_9b7d9a.py"
    ]
  },
  {
    "file_signature": [
      "class:FakeDatasetReader",
      "class:FakeModel",
      "class:FakeModelNoLoss",
      "class:FakeOnBatchCallback",
      "class:FakeTrainerCallback",
      "class:RecordMetricLearningRateScheduler",
      "class:SecondBackwardCallback",
      "class:SlowDataLoader",
      "class:TestAmpTrainer",
      "class:TestSparseClipGrad",
      "class:TestTrainer",
      "class:TrainerTestBase",
      "class:ZeroGradientsBackwardCallback",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_read",
      "func:forward",
      "func:on_backward",
      "func:on_batch",
      "func:on_end",
      "func:on_epoch",
      "func:on_start",
      "func:set_target_device",
      "func:setup_method",
      "func:step",
      "func:test_confidence_check_callback",
      "func:test_confidence_check_default",
      "func:test_console_log_callback",
      "func:test_data_loader_lazy_epoch_size_correct",
      "func:test_data_loader_lazy_epoch_size_correct_custom_epoch_size",
      "func:test_metric_only_considered_best_so_far_when_strictly_better_than_those_before_it_decreasing_metric",
      "func:test_metric_only_considered_best_so_far_when_strictly_better_than_those_before_it_increasing_metric",
      "func:test_passing_trainer_multiple_gpus_raises_error",
      "func:test_restored_training_returns_best_epoch_metrics_even_if_no_better_epoch_is_found_after_restoring",
      "func:test_should_stop_early_with_decreasing_metric",
      "func:test_should_stop_early_with_early_stopping_disabled",
      "func:test_should_stop_early_with_flat_lining_metric",
      "func:test_should_stop_early_with_increasing_metric",
      "func:test_should_stop_early_with_invalid_patience",
      "func:test_should_validate_callback",
      "func:test_sparse_clip_grad",
      "func:test_total_loss_is_average_of_batch_loss",
      "func:test_track_epoch_callback",
      "func:test_train_zero_gradients",
      "func:test_trainer_callback_is_called_everywhere",
      "func:test_trainer_can_log_batch_inputs",
      "func:test_trainer_can_log_histograms",
      "func:test_trainer_can_log_learning_rates_tensorboard",
      "func:test_trainer_can_resume_training",
      "func:test_trainer_can_resume_training_for_exponential_moving_average",
      "func:test_trainer_can_resume_with_lr_scheduler",
      "func:test_trainer_can_run",
      "func:test_trainer_can_run_amp",
      "func:test_trainer_can_run_and_resume_with_momentum_scheduler",
      "func:test_trainer_can_run_cuda",
      "func:test_trainer_can_run_exponential_moving_average",
      "func:test_trainer_can_run_gradient_accumulation",
      "func:test_trainer_can_run_with_lr_scheduler",
      "func:test_trainer_raises_on_model_with_no_loss_key",
      "func:test_trainer_respects_epoch_size_equals_total",
      "func:test_trainer_respects_epoch_size_larger_tnan_total",
      "func:test_trainer_respects_epoch_size_smaller_tnan_total",
      "func:test_trainer_respects_keep_serialized_model_every_num_seconds",
      "func:test_trainer_respects_num_serialized_models_to_keep",
      "func:test_trainer_restores_and_makes_same_results",
      "func:test_trainer_saves_and_loads_best_validation_metrics_correctly_1",
      "func:test_trainer_saves_and_loads_best_validation_metrics_correctly_2",
      "func:test_trainer_saves_metrics_every_epoch",
      "func:test_trainer_sends_metric_to_lr_scheduler",
      "func:test_two_backward_callbacks",
      "func:text_to_instance"
    ],
    "old_files": [
      "trainer_test.py_o3_mini_cdc7ca6a.py"
    ],
    "new_files": [
      "trainer_test_f0df2a.py"
    ]
  },
  {
    "file_signature": [
      "class:FakeInfo",
      "func:_assert_subscription_order",
      "func:_callback",
      "func:_callback_a",
      "func:_callback_b",
      "func:_mock_ack",
      "func:help_assert_message",
      "func:mock_tls_insecure_set",
      "func:mock_tls_set"
    ],
    "old_files": [
      "test_client.py_o1_mini_9099e9b6.py"
    ],
    "new_files": [
      "test_client_1103c5.py"
    ]
  },
  {
    "file_signature": [
      "class:Cookies",
      "class:Headers",
      "class:Request",
      "class:Response",
      "class:_CookieCompatRequest",
      "class:_CookieCompatResponse",
      "func:__bool__",
      "func:__contains__",
      "func:__delitem__",
      "func:__eq__",
      "func:__getitem__",
      "func:__getstate__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:__setstate__",
      "func:_get_content_decoder",
      "func:_is_known_encoding",
      "func:_normalize_header_key",
      "func:_normalize_header_value",
      "func:_obfuscate_sensitive_headers",
      "func:_parse_content_type_charset",
      "func:_parse_header_links",
      "func:_prepare",
      "func:add_unredirected_header",
      "func:charset_encoding",
      "func:clear",
      "func:close",
      "func:content",
      "func:cookies",
      "func:copy",
      "func:delete",
      "func:elapsed",
      "func:encoding",
      "func:extract_cookies",
      "func:get",
      "func:get_list",
      "func:has_redirect_location",
      "func:http_version",
      "func:info",
      "func:is_client_error",
      "func:is_error",
      "func:is_informational",
      "func:is_redirect",
      "func:is_server_error",
      "func:is_success",
      "func:items",
      "func:iter_bytes",
      "func:iter_lines",
      "func:iter_raw",
      "func:iter_text",
      "func:json",
      "func:keys",
      "func:links",
      "func:num_bytes_downloaded",
      "func:raise_for_status",
      "func:raw",
      "func:read",
      "func:reason_phrase",
      "func:request",
      "func:set",
      "func:set_cookie_header",
      "func:text",
      "func:update",
      "func:url",
      "func:values"
    ],
    "old_files": [
      "_models.py_o3_mini_5798ddfd.py"
    ],
    "new_files": [
      "_models_dd672f.py"
    ]
  },
  {
    "file_signature": [
      "func:patch_RPCManager",
      "func:test_adjust_entry_replace_fail",
      "func:test_apply_fee_conditional",
      "func:test_bot_cleanup",
      "func:test_bot_cleanup_db_errors",
      "func:test_check_available_stake_amount",
      "func:test_check_depth_of_market",
      "func:test_close_trade",
      "func:test_create_trade_minimal_amount",
      "func:test_create_trade_no_signal",
      "func:test_create_trade_no_stake_amount",
      "func:test_create_trades_multiple_trades",
      "func:test_create_trades_preopen",
      "func:test_edge_called_in_process",
      "func:test_edge_overrides_stake_amount",
      "func:test_edge_overrides_stoploss",
      "func:test_enter_positions_global_pairlock",
      "func:test_enter_positions_no_pairs_left",
      "func:test_execute_entry",
      "func:test_execute_entry_confirm_error",
      "func:test_execute_entry_fully_canceled_on_create",
      "func:test_execute_entry_min_leverage",
      "func:test_execute_trade_exit",
      "func:test_execute_trade_exit_market_order",
      "func:test_exit_positions_exception",
      "func:test_freqtradebot_state",
      "func:test_get_real_amount_invalid_order",
      "func:test_get_real_amount_multi",
      "func:test_get_real_amount_no_trade",
      "func:test_get_real_amount_quote_dust",
      "func:test_get_trade_stake_amount",
      "func:test_handle_cancel_exit",
      "func:test_handle_cancel_exit_empty",
      "func:test_handle_cancel_exit_partial_fee",
      "func:test_handle_cancelled_buy",
      "func:test_handle_insufficient_funds",
      "func:test_handle_protections",
      "func:test_handle_trade_roi",
      "func:test_handle_trade_use_exit_signal",
      "func:test_load_strategy_no_keys",
      "func:test_manage_open_orders_entry",
      "func:test_manage_open_orders_partial",
      "func:test_manages_open_orders_entry_usercustom",
      "func:test_order_book_depth_of_market",
      "func:test_order_book_exit_pricing",
      "func:test_order_dict",
      "func:test_process_calls_sendmsg",
      "func:test_process_exchange_failures",
      "func:test_process_informative_pairs_added",
      "func:test_process_operational_exception",
      "func:test_process_stopped",
      "func:test_process_trade_creation",
      "func:test_process_trade_handling",
      "func:test_process_trade_no_whitelist_pair",
      "func:test_reupdate_enter_order_fees",
      "func:test_startup_backpopulate_precision",
      "func:test_startup_state",
      "func:test_sync_wallet_dry_run",
      "func:test_total_open_trades_stakes",
      "func:test_trailing_stop_loss",
      "func:test_trailing_stop_loss_positive",
      "func:test_update_funding_fees_schedule",
      "func:test_update_funding_fees_schedule_parameterized",
      "func:test_update_real_amount_quote",
      "func:test_update_trade_state_orderexception",
      "func:test_update_trade_state_withorderdict"
    ],
    "old_files": [
      "test_freqtradebot.py_o3_mini_2b80392e.py"
    ],
    "new_files": [
      "test_freqtradebot_64c23d.py"
    ]
  },
  {
    "file_signature": [
      "func:scipy_sem",
      "func:test_aggregate_numeric_object_dtype",
      "func:test_any",
      "func:test_apply_to_nullable_integer_returns_float",
      "func:test_basic_aggregations",
      "func:test_bool_aggs_dup_column_labels",
      "func:test_cython_median",
      "func:test_empty",
      "func:test_empty_categorical",
      "func:test_first_last_skipna",
      "func:test_groupby_aggregate_period_column",
      "func:test_groupby_aggregate_period_frame",
      "func:test_groupby_bool_aggs",
      "func:test_groupby_mean_no_overflow",
      "func:test_groupby_min_max_categorical",
      "func:test_groupby_min_max_nullable",
      "func:test_groupby_non_arithmetic_agg_int_like_precision",
      "func:test_groupby_non_arithmetic_agg_types",
      "func:test_groupby_prod_with_int64_dtype",
      "func:test_groupby_std_datetimelike",
      "func:test_groupby_sum_below_mincount_nullable_integer",
      "func:test_groupby_sum_mincount_boolean",
      "func:test_groupby_sum_timedelta_with_nat",
      "func:test_idxmin_idxmax_extremes",
      "func:test_idxmin_idxmax_extremes_skipna",
      "func:test_idxmin_idxmax_returns_int_types",
      "func:test_intercept_builtin_sum",
      "func:test_masked_bool_aggs_skipna",
      "func:test_masked_kleene_logic",
      "func:test_masked_mixed_types",
      "func:test_max_inat",
      "func:test_max_inat_not_all_na",
      "func:test_max_min_non_numeric",
      "func:test_max_min_object_multiple_columns",
      "func:test_max_nan_bug",
      "func:test_mean_on_timedelta",
      "func:test_mean_skipna",
      "func:test_mean_with_boolean",
      "func:test_median_empty_bins",
      "func:test_median_empty_bins_with_observed",
      "func:test_min_date_with_nans",
      "func:test_min_empty_string_dtype",
      "func:test_min_max_nullable_uint64_empty_group",
      "func:test_multifunc_skipna",
      "func:test_multifunc_var",
      "func:test_nunique",
      "func:test_nunique_preserves_column_level_names",
      "func:test_nunique_transform_with_datetime",
      "func:test_nunique_with_NaT",
      "func:test_nunique_with_empty_series",
      "func:test_nunique_with_object",
      "func:test_nunique_with_timegrouper",
      "func:test_object_NA_raises_with_skipna_false",
      "func:test_object_type_missing_vals",
      "func:test_ops_general",
      "func:test_prod_with_object_dtype",
      "func:test_regression_allowlist_methods",
      "func:test_regression_allowlist_methods_with_dtype",
      "func:test_series_groupby_nunique",
      "func:test_sum_skipna",
      "func:test_sum_skipna_object"
    ],
    "old_files": [
      "test_reductions.py_o1_mini_27076a84.py"
    ],
    "new_files": [
      "test_reductions_87ff0d.py"
    ]
  },
  {
    "file_signature": [
      "class:AWSClientError",
      "class:DeploymentPackageTooLargeError",
      "class:LambdaClientError",
      "class:LambdaErrorContext",
      "class:ReadTimeout",
      "class:ResourceDoesNotExistError",
      "class:TypedAWSClient",
      "func:__init__",
      "func:_add_lambda_permission_if_needed",
      "func:_add_missing_or_differing_value_requested_tags",
      "func:_add_missing_or_differing_value_resource_tags",
      "func:_build_source_arn_str",
      "func:_call_client_method_with_retries",
      "func:_client",
      "func:_convert_to_datetime",
      "func:_convert_types_on_response",
      "func:_create_api_mapping",
      "func:_create_base_path_mapping",
      "func:_create_domain_name",
      "func:_create_domain_name_v2",
      "func:_create_lambda_function",
      "func:_create_vpc_config",
      "func:_do_update_function_config",
      "func:_get_lambda_code_deployment_error",
      "func:_is_iam_role_related_error",
      "func:_is_settling_error",
      "func:_iter_log_messages",
      "func:_merge_s3_notification_config",
      "func:_policy_gives_access",
      "func:_random_id",
      "func:_remove_lambda_permission_if_needed",
      "func:_remove_unrequested_remote_tags",
      "func:_remove_unrequested_resource_tags",
      "func:_statement_gives_arn_access",
      "func:_update_domain_name",
      "func:_update_domain_name_v2",
      "func:_update_function_code",
      "func:_update_function_config",
      "func:_update_function_tags",
      "func:_update_resource_tags",
      "func:_wait_for_active",
      "func:_wait_for_function_update",
      "func:add_permission_for_apigateway",
      "func:add_permission_for_apigateway_v2",
      "func:add_permission_for_authorizer",
      "func:add_permission_for_cloudwatch_event",
      "func:add_permission_for_s3_event",
      "func:add_permission_for_sns_topic",
      "func:api_mapping_exists",
      "func:connect_rule_to_lambda",
      "func:connect_s3_bucket_to_lambda",
      "func:create_api_mapping",
      "func:create_base_path_mapping",
      "func:create_domain_name",
      "func:create_function",
      "func:create_lambda_event_source",
      "func:create_log_group",
      "func:create_role",
      "func:create_stage",
      "func:create_websocket_api",
      "func:create_websocket_integration",
      "func:create_websocket_route",
      "func:delete_api_mapping",
      "func:delete_domain_name",
      "func:delete_function",
      "func:delete_function_concurrency",
      "func:delete_layer_version",
      "func:delete_log_group",
      "func:delete_rest_api",
      "func:delete_retention_policy",
      "func:delete_role",
      "func:delete_role_policy",
      "func:delete_rule",
      "func:delete_websocket_api",
      "func:delete_websocket_integrations",
      "func:delete_websocket_routes",
      "func:deploy_rest_api",
      "func:deploy_websocket_api",
      "func:disconnect_s3_bucket_from_lambda",
      "func:domain_name_exists",
      "func:domain_name_exists_v2",
      "func:download_sdk",
      "func:endpoint_dns_suffix",
      "func:endpoint_dns_suffix_from_arn",
      "func:endpoint_from_arn",
      "func:filter_log_events",
      "func:get_custom_domain_params_v2",
      "func:get_custom_domain_patch_operations",
      "func:get_domain_name",
      "func:get_function_configuration",
      "func:get_function_policy",
      "func:get_layer_version",
      "func:get_or_create_rule_arn",
      "func:get_rest_api",
      "func:get_rest_api_id",
      "func:get_role",
      "func:get_role_arn_for_name",
      "func:get_sdk_download_stream",
      "func:get_websocket_api_id",
      "func:get_websocket_integrations",
      "func:get_websocket_routes",
      "func:import_rest_api",
      "func:invoke_function",
      "func:iter_log_events",
      "func:lambda_function_exists",
      "func:log_group_exists",
      "func:partition_name",
      "func:publish_layer",
      "func:put_function_concurrency",
      "func:put_retention_policy",
      "func:put_role_policy",
      "func:region_name",
      "func:remove_lambda_event_source",
      "func:remove_permission_for_s3_event",
      "func:remove_permission_for_sns_topic",
      "func:resolve_endpoint",
      "func:service_principal",
      "func:subscribe_function_to_topic",
      "func:unsubscribe_from_topic",
      "func:update_api_from_swagger",
      "func:update_domain_name",
      "func:update_function",
      "func:update_lambda_event_source",
      "func:update_rest_api",
      "func:verify_event_source_arn_current",
      "func:verify_event_source_current",
      "func:verify_sns_subscription_current",
      "func:websocket_api_exists"
    ],
    "old_files": [
      "awsclient.py_o3_mini_49cc8de2.py"
    ],
    "new_files": [
      "awsclient_860c67.py"
    ]
  },
  {
    "file_signature": [
      "class:ShrinkPass",
      "class:ShrinkPassDefinition",
      "class:Shrinker",
      "class:StopShrinking",
      "func:__attrs_post_init__",
      "func:__changed_nodes",
      "func:__init__",
      "func:accept",
      "func:add_new_pass",
      "func:boost",
      "func:cached",
      "func:cached_calculations",
      "func:cached_test_function_ir",
      "func:calls",
      "func:can_choose_node",
      "func:check_calls",
      "func:choices",
      "func:clear_change_tracking",
      "func:consider",
      "func:consider_new_nodes",
      "func:debug",
      "func:defines_shrink_pass",
      "func:derived_value",
      "func:descendants",
      "func:distinct_labels",
      "func:duplicated_nodes",
      "func:examples",
      "func:examples_by_label",
      "func:examples_starting_at",
      "func:explain",
      "func:first_example_after_node",
      "func:fixate_shrink_passes",
      "func:greedy_shrink",
      "func:incorporate_test_data",
      "func:initial_coarse_reduction",
      "func:lower_common_node_offset",
      "func:lower_integers_together",
      "func:mark_changed",
      "func:minimize_duplicated_nodes",
      "func:minimize_individual_nodes",
      "func:minimize_nodes",
      "func:misaligned",
      "func:name",
      "func:node_program",
      "func:nodes",
      "func:offset_left",
      "func:offset_node",
      "func:pass_to_descendant",
      "func:random",
      "func:redistribute_numeric_pairs",
      "func:reduce_each_alternative",
      "func:remove_discarded",
      "func:reorder_examples",
      "func:run",
      "func:run_node_program",
      "func:s",
      "func:shrink",
      "func:shrink_pass",
      "func:shrink_pass_choice_trees",
      "func:shrink_pass_family",
      "func:sort_key",
      "func:step",
      "func:try_lower_node_as_alternative",
      "func:try_shrinking_nodes",
      "func:try_trivial_examples",
      "func:update_shrink_target"
    ],
    "old_files": [
      "shrinker.py_o1_mini_76e39697.py"
    ],
    "new_files": [
      "shrinker_03130f.py"
    ]
  },
  {
    "file_signature": [
      "class:Color",
      "class:RGBA",
      "func:__eq__",
      "func:__get_validators__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__modify_schema__",
      "func:__repr_args__",
      "func:__str__",
      "func:_alpha_float",
      "func:as_hex",
      "func:as_hsl",
      "func:as_hsl_tuple",
      "func:as_named",
      "func:as_rgb",
      "func:as_rgb_tuple",
      "func:float_to_255",
      "func:ints_to_rgba",
      "func:original",
      "func:parse_color_value",
      "func:parse_float_alpha",
      "func:parse_hsl",
      "func:parse_str",
      "func:parse_tuple"
    ],
    "old_files": [
      "color.py_o1_mini_41c9bd2a.py"
    ],
    "new_files": [
      "color_ef70c6.py"
    ]
  },
  {
    "file_signature": [
      "class:GMatrixClient",
      "class:GMatrixHttpApi",
      "class:ReceivedCallMessage",
      "class:ReceivedRaidenMessage",
      "class:_ReceivedMessageBase",
      "func:__init__",
      "func:__repr__",
      "func:_handle_message",
      "func:_handle_responses",
      "func:_record_server_ident",
      "func:_send",
      "func:_sync",
      "func:blocking_sync",
      "func:create_room",
      "func:create_sync_filter",
      "func:disable_push_notifications",
      "func:get_aliases",
      "func:get_presence",
      "func:get_room_state_type",
      "func:get_user_presence",
      "func:listen_forever",
      "func:logout",
      "func:node_address_from_userid",
      "func:processed",
      "func:search_user_directory",
      "func:set_access_token",
      "func:set_presence_state",
      "func:set_sync_filter_id",
      "func:start_listener_thread",
      "func:stop",
      "func:stop_listener_thread",
      "func:sync_iteration",
      "func:synced",
      "func:user__repr"
    ],
    "old_files": [
      "client.py_o3_mini_f3bd83fd.py"
    ],
    "new_files": [
      "client_714ccb.py"
    ]
  },
  {
    "file_signature": [
      "class:AXP",
      "class:CMA",
      "class:ChoiceBase",
      "class:ContingentSearch",
      "class:EDA",
      "class:MEDA",
      "class:MPCEDA",
      "class:MetaCMA",
      "class:NoisyBandit",
      "class:PCEDA",
      "class:ParametrizedCMA",
      "class:ParametrizedOnePlusOne",
      "class:ParametrizedTBPSA",
      "class:SplitOptimizer",
      "class:_CMA",
      "class:_OnePlusOne",
      "class:_PSO",
      "class:_PopulationSizeController",
      "func:__init__",
      "func:_info",
      "func:_internal_ask_candidate",
      "func:_internal_provide_recommendation",
      "func:_internal_tell_candidate",
      "func:_internal_tell_not_asked",
      "func:_select_optimizer_cls",
      "func:add_value",
      "func:enable_pickling",
      "func:es",
      "func:invsig",
      "func:optim",
      "func:p_inner",
      "func:recommend",
      "func:smooth_copy"
    ],
    "old_files": [
      "optimizerlib.py_o3_mini_60df34c4.py"
    ],
    "new_files": [
      "optimizerlib_bb41e2.py"
    ]
  },
  {
    "file_signature": [
      "class:CustomBytesIO",
      "class:FileFromURLWrapper",
      "class:FileNotSupportedError",
      "class:FileWrapper",
      "class:MultipartEncoder",
      "class:MultipartEncoderMonitor",
      "class:Part",
      "func:IDENTITY",
      "func:__init__",
      "func:__repr__",
      "func:_calculate_length",
      "func:_calculate_load_amount",
      "func:_get_end",
      "func:_iter_fields",
      "func:_load",
      "func:_next_part",
      "func:_prepare_parts",
      "func:_request_for_file",
      "func:_write",
      "func:_write_boundary",
      "func:_write_closing_boundary",
      "func:_write_headers",
      "func:append",
      "func:bytes_left_to_write",
      "func:coerce_data",
      "func:content_type",
      "func:encode_with",
      "func:from_field",
      "func:from_fields",
      "func:len",
      "func:read",
      "func:readable_data",
      "func:reset",
      "func:smart_truncate",
      "func:to_list",
      "func:to_string",
      "func:total_len",
      "func:write_to"
    ],
    "old_files": [
      "encoder.py_o1_mini_84dbb2bd.py"
    ],
    "new_files": [
      "encoder_8f05c7.py"
    ]
  },
  {
    "file_signature": [
      "class:_BeautifulSoupHtml5LibFrameParser",
      "class:_HtmlFrameParser",
      "class:_LxmlFrameParser",
      "func:__init__",
      "func:_attr_getter",
      "func:_build_doc",
      "func:_build_xpath_expr",
      "func:_data_to_frame",
      "func:_equals_tag",
      "func:_expand_colspan_rowspan",
      "func:_expand_elements",
      "func:_get_skiprows",
      "func:_handle_hidden_tables",
      "func:_href_getter",
      "func:_parse",
      "func:_parse_tables",
      "func:_parse_tbody_tr",
      "func:_parse_td",
      "func:_parse_tfoot_tr",
      "func:_parse_thead_tbody_tfoot",
      "func:_parse_thead_tr",
      "func:_parser_dispatch",
      "func:_print_as_set",
      "func:_read",
      "func:_remove_whitespace",
      "func:_setup_build_doc",
      "func:_text_getter",
      "func:_validate_flavor",
      "func:_validate_header_arg",
      "func:parse_tables",
      "func:read_html",
      "func:row_is_all_th"
    ],
    "old_files": [
      "html.py_o3_mini_1065c3b5.py"
    ],
    "new_files": [
      "html_2728b0.py"
    ]
  },
  {
    "file_signature": [
      "class:OneShotOptimizer",
      "class:RandomSearchMaker",
      "class:SamplingSearch",
      "class:_RandomSearch",
      "class:_SamplingSearch",
      "func:__init__",
      "func:_internal_ask",
      "func:_internal_ask_candidate",
      "func:_internal_provide_recommendation",
      "func:avg_of_k_best",
      "func:convex_limit",
      "func:hull_center",
      "func:sampler"
    ],
    "old_files": [
      "oneshot.py_o3_mini_15f62085.py"
    ],
    "new_files": [
      "oneshot_b70888.py"
    ]
  },
  {
    "file_signature": [
      "class:ChunkState",
      "class:DeflateBuffer",
      "class:HeadersParser",
      "class:HttpParser",
      "class:HttpPayloadParser",
      "class:HttpRequestParser",
      "class:HttpResponseParser",
      "class:ParseState",
      "class:RawRequestMessage",
      "class:RawResponseMessage",
      "func:__init__",
      "func:__repr__",
      "func:_is_chunked_te",
      "func:_is_supported_upgrade",
      "func:begin_http_chunk_receiving",
      "func:end_http_chunk_receiving",
      "func:feed_data",
      "func:feed_eof",
      "func:get_content_length",
      "func:parse_headers",
      "func:parse_message",
      "func:set_exception",
      "func:set_upgraded"
    ],
    "old_files": [
      "http_parser.py_o3_mini_b7839247.py"
    ],
    "new_files": [
      "http_parser_0d16fa.py"
    ]
  },
  {
    "file_signature": [
      "func:_always_buy",
      "func:_make_backtest_conf",
      "func:_trend",
      "func:_trend_alternate",
      "func:_trend_alternate_hold",
      "func:adjust_trade_position",
      "func:advise_entry",
      "func:custom_entry_price",
      "func:custom_exit",
      "func:fun",
      "func:get_timerange",
      "func:load_data_test",
      "func:test_backtest_abort",
      "func:test_backtest_alternate_buy_sell",
      "func:test_backtest_clash_buy_sell",
      "func:test_backtest_multi_pair",
      "func:test_backtest_multi_pair_detail",
      "func:test_backtest_multi_pair_detail_simplified",
      "func:test_backtest_one",
      "func:test_backtest_one_detail",
      "func:test_backtest_one_detail_futures",
      "func:test_backtest_one_detail_futures_funding_fees",
      "func:test_backtest_only_sell",
      "func:test_backtest_pricecontours",
      "func:test_backtest_start_futures_noliq",
      "func:test_backtest_start_multi_strat",
      "func:test_backtest_start_multi_strat_caching",
      "func:test_backtest_start_multi_strat_nomock_detail",
      "func:test_backtest_start_multi_strat_nomock_futures",
      "func:test_backtest_start_nomock_futures",
      "func:test_backtest_start_timerange",
      "func:test_backtesting_init",
      "func:test_backtesting_init_no_timeframe",
      "func:test_backtesting_start",
      "func:test_data_to_dataframe_bt",
      "func:test_data_with_fee",
      "func:test_get_backtest_metadata_filename",
      "func:test_get_strategy_run_id",
      "func:test_setup_bt_configuration_with_arguments",
      "func:test_setup_optimize_configuration_stake_amount",
      "func:test_setup_optimize_configuration_without_arguments",
      "func:test_start",
      "func:trim_dictlist"
    ],
    "old_files": [
      "test_backtesting.py_o1_mini_46812840.py"
    ],
    "new_files": [
      "test_backtesting_c617d3.py"
    ]
  },
  {
    "file_signature": [
      "class:DataFrameGroupBy",
      "class:NamedAgg",
      "class:SeriesGroupBy",
      "func:_aggregate_frame",
      "func:_aggregate_multiple_funcs",
      "func:_choose_path",
      "func:_compare_results",
      "func:_cython_transform",
      "func:_define_paths",
      "func:_get_data_to_aggregate",
      "func:_python_agg_general",
      "func:_transform_general",
      "func:_wrap_agged_manager",
      "func:_wrap_applied_output",
      "func:_wrap_applied_output_series",
      "func:aggregate",
      "func:alt",
      "func:apply",
      "func:corr",
      "func:cov",
      "func:describe",
      "func:dtype",
      "func:filter",
      "func:hist",
      "func:idxmax",
      "func:idxmin",
      "func:is_monotonic_decreasing",
      "func:is_monotonic_increasing",
      "func:kurt",
      "func:nlargest",
      "func:nsmallest",
      "func:nunique",
      "func:plot",
      "func:skew",
      "func:take",
      "func:transform",
      "func:true_and_notna",
      "func:unique",
      "func:value_counts"
    ],
    "old_files": [
      "generic.py_o3_mini_4b81d00f.py"
    ],
    "new_files": [
      "generic_a07530.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockShellyValve",
      "class:BlockValveDescription",
      "func:__init__",
      "func:_update_callback",
      "func:async_setup_block_entry",
      "func:is_closing",
      "func:is_opening"
    ],
    "old_files": [
      "valve.py_o1_mini_276732a3.py"
    ],
    "new_files": [
      "valve_d875ca.py"
    ]
  },
  {
    "file_signature": [
      "class:StatisticsSensor",
      "func:__init__",
      "func:_add_state_to_queue",
      "func:_async_calculate_state",
      "func:_async_cancel_update_listener",
      "func:_async_handle_new_state",
      "func:_async_next_to_purge_timestamp",
      "func:_async_purge_update_and_schedule",
      "func:_async_scheduled_update",
      "func:_async_stats_sensor_state_change_listener",
      "func:_async_stats_sensor_state_report_listener",
      "func:_calculate_device_class",
      "func:_calculate_state_attributes",
      "func:_calculate_state_class",
      "func:_calculate_unit_of_measurement",
      "func:_callable_characteristic_fn",
      "func:_fetch_states_from_database",
      "func:_purge_old_states",
      "func:_stat_average_linear",
      "func:_stat_average_step",
      "func:_stat_average_timeless",
      "func:_stat_binary_average_step",
      "func:_stat_binary_average_timeless",
      "func:_stat_binary_count",
      "func:_stat_binary_count_off",
      "func:_stat_binary_count_on",
      "func:_stat_binary_datetime_newest",
      "func:_stat_binary_datetime_oldest",
      "func:_stat_binary_mean",
      "func:_stat_change",
      "func:_stat_change_sample",
      "func:_stat_change_second",
      "func:_stat_count",
      "func:_stat_datetime_newest",
      "func:_stat_datetime_oldest",
      "func:_stat_datetime_value_max",
      "func:_stat_datetime_value_min",
      "func:_stat_distance_95_percent_of_values",
      "func:_stat_distance_99_percent_of_values",
      "func:_stat_distance_absolute",
      "func:_stat_mean",
      "func:_stat_mean_circular",
      "func:_stat_median",
      "func:_stat_noisiness",
      "func:_stat_percentile",
      "func:_stat_standard_deviation",
      "func:_stat_sum",
      "func:_stat_sum_differences",
      "func:_stat_sum_differences_nonnegative",
      "func:_stat_total",
      "func:_stat_value_max",
      "func:_stat_value_min",
      "func:_stat_variance",
      "func:_update_extra_state_attributes",
      "func:_update_value",
      "func:extra_state_attributes",
      "func:should_poll",
      "func:valid_boundary_configuration",
      "func:valid_keep_last_sample",
      "func:valid_state_characteristic_configuration"
    ],
    "old_files": [
      "sensor.py_o3_mini_85e008f1.py"
    ],
    "new_files": [
      "sensor_594ee1.py"
    ]
  },
  {
    "file_signature": [
      "class:Backend",
      "class:HistoryAdapter",
      "class:Record",
      "func:__init__",
      "func:__str__",
      "func:_adapt_datetime",
      "func:_deleteall",
      "func:_deleteone",
      "func:_fetchall",
      "func:_fetchone",
      "func:_insert",
      "func:_log",
      "func:_updateall",
      "func:_updateone",
      "func:_upsert",
      "func:add_history",
      "func:add_user_to_group",
      "func:close",
      "func:connect",
      "func:correlate_alert",
      "func:create_alert",
      "func:create_blackout",
      "func:create_customer",
      "func:create_engine",
      "func:create_group",
      "func:create_key",
      "func:create_note",
      "func:create_perm",
      "func:create_user",
      "func:dedup_alert",
      "func:delete_alert",
      "func:delete_alerts",
      "func:delete_blackout",
      "func:delete_customer",
      "func:delete_group",
      "func:delete_heartbeat",
      "func:delete_key",
      "func:delete_note",
      "func:delete_perm",
      "func:delete_user",
      "func:destroy",
      "func:get_alert",
      "func:get_alert_groups",
      "func:get_alert_history",
      "func:get_alert_notes",
      "func:get_alert_tags",
      "func:get_alerts",
      "func:get_blackout",
      "func:get_blackouts",
      "func:get_blackouts_count",
      "func:get_count",
      "func:get_counts",
      "func:get_counts_by_severity",
      "func:get_counts_by_status",
      "func:get_customer",
      "func:get_customer_notes",
      "func:get_customers",
      "func:get_customers_by_match",
      "func:get_customers_count",
      "func:get_environments",
      "func:get_expired",
      "func:get_group",
      "func:get_group_users",
      "func:get_groups",
      "func:get_groups_by_user",
      "func:get_groups_count",
      "func:get_heartbeat",
      "func:get_heartbeats",
      "func:get_heartbeats_by_status",
      "func:get_heartbeats_count",
      "func:get_history",
      "func:get_key",
      "func:get_keys",
      "func:get_keys_by_user",
      "func:get_keys_count",
      "func:get_metrics",
      "func:get_note",
      "func:get_notes",
      "func:get_perm",
      "func:get_perms",
      "func:get_perms_count",
      "func:get_scopes_by_match",
      "func:get_services",
      "func:get_severity",
      "func:get_status",
      "func:get_topn_count",
      "func:get_topn_flapping",
      "func:get_topn_standing",
      "func:get_unack",
      "func:get_unshelve",
      "func:get_user",
      "func:get_user_by_email",
      "func:get_user_by_hash",
      "func:get_user_by_username",
      "func:get_users",
      "func:get_users_count",
      "func:getquoted",
      "func:inc_counter",
      "func:is_alive",
      "func:is_blackout_period",
      "func:is_correlated",
      "func:is_duplicate",
      "func:is_flapping",
      "func:name",
      "func:prepare",
      "func:quoted",
      "func:remove_user_from_group",
      "func:set_alert",
      "func:set_email_hash",
      "func:set_gauge",
      "func:set_status",
      "func:tag_alert",
      "func:tag_alerts",
      "func:untag_alert",
      "func:untag_alerts",
      "func:update_attributes",
      "func:update_attributes_by_query",
      "func:update_blackout",
      "func:update_customer",
      "func:update_group",
      "func:update_key",
      "func:update_key_last_used",
      "func:update_last_login",
      "func:update_note",
      "func:update_perm",
      "func:update_tags",
      "func:update_timer",
      "func:update_user",
      "func:update_user_attributes",
      "func:upsert_heartbeat",
      "func:version"
    ],
    "old_files": [
      "base.py_o1_mini_4f3ec3ad.py"
    ],
    "new_files": [
      "base_dfd9c5.py"
    ]
  },
  {
    "file_signature": [
      "class:TestDeflateBuffer",
      "class:TestParsePayload",
      "func:_gen_ids",
      "func:parser",
      "func:protocol",
      "func:request_cls",
      "func:response",
      "func:response_cls",
      "func:test_bad_chunked_c",
      "func:test_bad_chunked_py",
      "func:test_bad_header_name",
      "func:test_bad_headers",
      "func:test_bad_upgrade",
      "func:test_c_parser_loaded",
      "func:test_compression_brotli",
      "func:test_compression_deflate",
      "func:test_compression_empty",
      "func:test_compression_gzip",
      "func:test_compression_unknown",
      "func:test_conn_close",
      "func:test_conn_close_1_0",
      "func:test_conn_default_1_0",
      "func:test_conn_default_1_1",
      "func:test_conn_keep_alive_1_0",
      "func:test_conn_keep_alive_1_1",
      "func:test_conn_other_1_0",
      "func:test_conn_other_1_1",
      "func:test_conn_upgrade",
      "func:test_content_length_transfer_encoding",
      "func:test_cve_2023_37276",
      "func:test_empty_header_name",
      "func:test_headers_connect",
      "func:test_headers_content_length_err_1",
      "func:test_headers_content_length_err_2",
      "func:test_headers_multi_feed",
      "func:test_headers_old_websocket_key1",
      "func:test_headers_split_field",
      "func:test_http_request_bad_status_line",
      "func:test_http_request_bad_status_line_number",
      "func:test_http_request_bad_status_line_separator",
      "func:test_http_request_bad_status_line_whitespace",
      "func:test_http_request_max_status_line",
      "func:test_http_request_max_status_line_under_limit",
      "func:test_http_request_message_after_close",
      "func:test_http_request_parser",
      "func:test_http_request_parser_bad_ascii_uri",
      "func:test_http_request_parser_bad_method",
      "func:test_http_request_parser_bad_nonascii_uri",
      "func:test_http_request_parser_bad_version",
      "func:test_http_request_parser_bad_version_number",
      "func:test_http_request_parser_non_utf8",
      "func:test_http_request_parser_two_slashes",
      "func:test_http_request_parser_utf8",
      "func:test_http_request_parser_utf8_request_line",
      "func:test_http_request_upgrade",
      "func:test_http_response_parser_bad_crlf",
      "func:test_http_response_parser_bad_status_line_too_long",
      "func:test_http_response_parser_bad_version",
      "func:test_http_response_parser_bad_version_number",
      "func:test_http_response_parser_lenient_headers",
      "func:test_http_response_parser_no_reason",
      "func:test_http_response_parser_obs_line_folding",
      "func:test_http_response_parser_status_line_under_limit",
      "func:test_http_response_parser_strict_headers",
      "func:test_http_response_parser_strict_obs_line_folding",
      "func:test_http_response_parser_utf8",
      "func:test_http_response_parser_utf8_without_reason",
      "func:test_invalid_character",
      "func:test_invalid_header",
      "func:test_invalid_header_spacing",
      "func:test_invalid_linebreak",
      "func:test_invalid_name",
      "func:test_max_header_field_size",
      "func:test_max_header_field_size_under_limit",
      "func:test_max_header_value_size",
      "func:test_max_header_value_size_continuation",
      "func:test_max_header_value_size_continuation_under_limit",
      "func:test_max_header_value_size_under_limit",
      "func:test_parse",
      "func:test_parse_delayed",
      "func:test_parse_headers",
      "func:test_parse_headers_longline",
      "func:test_parse_headers_multi",
      "func:test_parse_unusual_request_line",
      "func:test_reject_obsolete_line_folding",
      "func:test_request_chunked",
      "func:test_request_te_chunked123",
      "func:test_request_te_chunked_with_content_length",
      "func:test_request_te_first_chunked",
      "func:test_unpaired_surrogate_in_header_py",
      "func:test_url_absolute",
      "func:test_url_connect",
      "func:test_whitespace_before_header",
      "func:xfail_c_parser_status",
      "func:xfail_c_parser_url"
    ],
    "old_files": [
      "test_http_parser.py_o1_mini_fc96f364.py"
    ],
    "new_files": [
      "test_http_parser_74f389.py"
    ]
  },
  {
    "file_signature": [
      "func:_frame_value_counts",
      "func:assert_categorical_single_grouper",
      "func:education_df",
      "func:rebuild_index",
      "func:seed_df",
      "func:test_against_frame_and_seriesgroupby",
      "func:test_ambiguous_grouping",
      "func:test_bad_subset",
      "func:test_basic",
      "func:test_categorical_multiple_groupers",
      "func:test_categorical_non_groupers",
      "func:test_categorical_single_grouper_observed_false",
      "func:test_categorical_single_grouper_observed_true",
      "func:test_categorical_single_grouper_with_only_observed_categories",
      "func:test_column_label_duplicates",
      "func:test_compound",
      "func:test_data_frame_value_counts",
      "func:test_data_frame_value_counts_dropna",
      "func:test_dropna_combinations",
      "func:test_mixed_groupings",
      "func:test_result_label_duplicates",
      "func:test_series_groupby_value_counts",
      "func:test_series_groupby_value_counts_empty",
      "func:test_series_groupby_value_counts_no_sort",
      "func:test_series_groupby_value_counts_on_categorical",
      "func:test_series_groupby_value_counts_one_row",
      "func:test_series_groupby_value_counts_with_grouper",
      "func:test_subset",
      "func:test_subset_doesnt_exist_in_frame",
      "func:test_subset_duplicate_columns",
      "func:test_subset_overlaps_gb_key_raises",
      "func:test_value_counts_integer_columns",
      "func:test_value_counts_sort",
      "func:test_value_counts_sort_categorical",
      "func:test_value_counts_time_grouper",
      "func:tests_value_counts_index_names_category_column"
    ],
    "old_files": [
      "test_value_counts.py_o3_mini_32e737e2.py"
    ],
    "new_files": [
      "test_value_counts_77b3d1.py"
    ]
  },
  {
    "file_signature": [
      "class:AnalyticsTestCase",
      "class:GetLastIdFromServerTest",
      "class:TestActiveUsersAudit",
      "class:TestCountStats",
      "class:TestDeleteStats",
      "class:TestDoAggregateToSummaryTable",
      "class:TestDoIncrementLoggingStat",
      "class:TestLoggingCountStats",
      "class:TestProcessCountStat",
      "class:TestRealmActiveHumans",
      "func:add_event",
      "func:assertFillStateEquals",
      "func:assertInviteCountEquals",
      "func:assertTableState",
      "func:create_attachment",
      "func:create_direct_message_group_with_recipient",
      "func:create_interval",
      "func:create_message",
      "func:create_stream_with_recipient",
      "func:create_user",
      "func:invite_context",
      "func:make_dummy_count_stat",
      "func:mark_15day_active",
      "func:setUp",
      "func:test_15day_actives",
      "func:test_15day_actives_realm_constraint",
      "func:test_1day_actives",
      "func:test_1day_actives_realm_constraint",
      "func:test_aggregation",
      "func:test_bad_fill_to_time",
      "func:test_basic_logic",
      "func:test_bots_not_counted",
      "func:test_do_drop_all_analytics_tables",
      "func:test_do_drop_single_stat",
      "func:test_do_increment_logging_start_query_count",
      "func:test_empty_realm_or_user_with_no_relevant_activity",
      "func:test_end_to_end",
      "func:test_event_types",
      "func:test_frequency",
      "func:test_get_last_id_from_server_ignores_null",
      "func:test_get_or_create",
      "func:test_increment",
      "func:test_invites_sent",
      "func:test_last_successful_fill",
      "func:test_max_audit_entry_is_unrelated",
      "func:test_max_audit_entry_is_unrelated_with_end_to_end_process",
      "func:test_messages_read_hour",
      "func:test_messages_sent_by_client",
      "func:test_messages_sent_by_client_realm_constraint",
      "func:test_messages_sent_by_is_bot",
      "func:test_messages_sent_by_is_bot_realm_constraint",
      "func:test_messages_sent_by_message_type",
      "func:test_messages_sent_by_message_type_realm_constraint",
      "func:test_messages_sent_to_recipients_with_same_id",
      "func:test_messages_sent_to_stream_by_is_bot",
      "func:test_messages_sent_to_stream_by_is_bot_realm_constraint",
      "func:test_minutes_active",
      "func:test_minutes_active_realm_constraint",
      "func:test_mobile_pushes_received_count",
      "func:test_multiple_users_realms_and_bots",
      "func:test_multiple_users_realms_and_times",
      "func:test_no_aggregated_zeros",
      "func:test_process_dependent_stat",
      "func:test_process_logging_stat",
      "func:test_process_stat",
      "func:test_simultaneous_max_audit_entries_of_different_users",
      "func:test_simultaneous_unrelated_audit_entry",
      "func:test_table_and_id_args",
      "func:test_update_from_two_days_ago",
      "func:test_upload_quota_used_bytes",
      "func:test_user_active_then_deactivated_same_day",
      "func:test_user_active_then_deactivated_with_day_gap",
      "func:test_user_deactivated_in_future",
      "func:test_user_deactivated_then_reactivated_with_day_gap",
      "func:test_user_inactive_then_activated_same_day",
      "func:test_user_reactivated_in_future"
    ],
    "old_files": [
      "test_counts.py_o1_mini_91638839.py"
    ],
    "new_files": [
      "test_counts_dbbc0a.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseConnector",
      "class:Connection",
      "class:NamedPipeConnector",
      "class:TCPConnector",
      "class:UnixConnector",
      "class:_DNSCacheTable",
      "class:_TransportPlaceholder",
      "func:__bool__",
      "func:__contains__",
      "func:__del__",
      "func:__init__",
      "func:__repr__",
      "func:_available_connections",
      "func:_cleanup",
      "func:_cleanup_closed",
      "func:_close_immediately",
      "func:_convert_hosts_to_addr_infos",
      "func:_get_fingerprint",
      "func:_get_ssl_context",
      "func:_make_ssl_context",
      "func:_notify_release",
      "func:_release",
      "func:_release_acquired",
      "func:_release_waiter",
      "func:_warn_about_tls_in_tls",
      "func:add",
      "func:add_callback",
      "func:clear",
      "func:clear_dns_cache",
      "func:close",
      "func:closed",
      "func:drop_exception",
      "func:expired",
      "func:family",
      "func:force_close",
      "func:limit",
      "func:limit_per_host",
      "func:next_addrs",
      "func:path",
      "func:protocol",
      "func:release",
      "func:remove",
      "func:transport",
      "func:use_dns_cache"
    ],
    "old_files": [
      "connector.py_o3_mini_468d87c7.py"
    ],
    "new_files": [
      "connector_bbd6dd.py"
    ]
  },
  {
    "file_signature": [
      "class:AssertingEventsClient",
      "class:AssertingPassthroughEventsClient",
      "class:EventsClient",
      "class:NullEventsClient",
      "class:PrefectCloudEventSubscriber",
      "class:PrefectCloudEventsClient",
      "class:PrefectEventSubscriber",
      "class:PrefectEventsClient",
      "class:WebsocketProxyConnect",
      "func:__aiter__",
      "func:__await__",
      "func:__init__",
      "func:_get_api_url_and_key",
      "func:_log_debug",
      "func:client_name",
      "func:events_in_socket_from_api_url",
      "func:events_out_socket_from_api_url",
      "func:get_events_client",
      "func:get_events_subscriber",
      "func:http_to_ws",
      "func:pop_events",
      "func:reset",
      "func:websocket_connect"
    ],
    "old_files": [
      "clients.py_o1_mini_0d12d2c8.py"
    ],
    "new_files": [
      "clients_e6ffbd.py"
    ]
  },
  {
    "file_signature": [
      "class:TestTimestampTZLocalize",
      "func:test_timestamp_tz_localize",
      "func:test_timestamp_tz_localize_nonexistent_NaT",
      "func:test_timestamp_tz_localize_nonexistent_raise",
      "func:test_timestamp_tz_localize_nonexistent_shift",
      "func:test_timestamp_tz_localize_nonexistent_shift_invalid",
      "func:test_tz_localize_ambiguous",
      "func:test_tz_localize_ambiguous_bool",
      "func:test_tz_localize_ambiguous_compat",
      "func:test_tz_localize_ambiguous_raise",
      "func:test_tz_localize_nonexistent",
      "func:test_tz_localize_nonexistent_invalid_arg",
      "func:test_tz_localize_nonexistent_shift",
      "func:test_tz_localize_pushes_out_of_bounds",
      "func:test_tz_localize_roundtrip"
    ],
    "old_files": [
      "test_tz_localize.py_o1_mini_89edad1f.py"
    ],
    "new_files": [
      "test_tz_localize_ae2d56.py"
    ]
  },
  {
    "file_signature": [
      "func:_check_isinstance",
      "func:_check_types",
      "func:_raise",
      "func:assert_almost_equal",
      "func:assert_attr_equal",
      "func:assert_categorical_equal",
      "func:assert_class_equal",
      "func:assert_contains_all",
      "func:assert_copy",
      "func:assert_datetime_array_equal",
      "func:assert_dict_equal",
      "func:assert_equal",
      "func:assert_extension_array_equal",
      "func:assert_frame_equal",
      "func:assert_index_equal",
      "func:assert_indexing_slices_equivalent",
      "func:assert_interval_array_equal",
      "func:assert_is_sorted",
      "func:assert_metadata_equivalent",
      "func:assert_numpy_array_equal",
      "func:assert_period_array_equal",
      "func:assert_series_equal",
      "func:assert_sp_array_equal",
      "func:assert_timedelta_array_equal",
      "func:is_class_equiv",
      "func:is_extension_array_dtype_and_needs_i8_conversion",
      "func:raise_assert_detail",
      "func:repr_class"
    ],
    "old_files": [
      "asserters.py_o3_mini_adee0207.py"
    ],
    "new_files": [
      "asserters_700def.py"
    ]
  },
  {
    "file_signature": [
      "class:TestIndexingWithPeriodIndex",
      "class:TestLoc",
      "class:TestLocBaseIndependent",
      "class:TestLocBooleanLabelsAndSlices",
      "class:TestLocBooleanMask",
      "class:TestLocCallable",
      "class:TestLocGetitemMultiIndexTupleLevel",
      "class:TestLocListlike",
      "class:TestLocNonUniqueIndex",
      "class:TestLocSetitemWithExpansion",
      "class:TestLocWithEllipsis",
      "class:TestLocWithMultiIndex",
      "class:TestPartialStringSlicing",
      "class:Test_setitem_getitem_related",
      "func:frame_for_consistency",
      "func:indexer",
      "func:obj",
      "func:test_additional_element_to_categorical_series_loc",
      "func:test_column_types_consistent",
      "func:test_contains_raise_error_if_period_index_is_in_multi_index",
      "func:test_frame_loc_getitem_callable",
      "func:test_frame_loc_getitem_callable_labels",
      "func:test_frame_loc_getitem_callable_mixture",
      "func:test_getitem_label_list_with_missing",
      "func:test_getitem_loc_str_periodindex",
      "func:test_identity_slice_returns_new_object",
      "func:test_loc_assign_dict_to_row",
      "func:test_loc_assign_non_ns_datetime",
      "func:test_loc_bool_incompatible_index_raises",
      "func:test_loc_bool_should_not_raise",
      "func:test_loc_bool_slice_raises",
      "func:test_loc_coercion",
      "func:test_loc_coercion2",
      "func:test_loc_coercion3",
      "func:test_loc_consistency_series_enlarge_set_into",
      "func:test_loc_copy_vs_view",
      "func:test_loc_empty_list_indexer_is_ok",
      "func:test_loc_general",
      "func:test_loc_getitem_bool",
      "func:test_loc_getitem_bool_diff_len",
      "func:test_loc_getitem_dups",
      "func:test_loc_getitem_dups2",
      "func:test_loc_getitem_int",
      "func:test_loc_getitem_int_slice",
      "func:test_loc_getitem_label",
      "func:test_loc_getitem_label_list",
      "func:test_loc_getitem_label_list_fails",
      "func:test_loc_getitem_label_list_integer_labels",
      "func:test_loc_getitem_label_list_with_missing",
      "func:test_loc_getitem_label_out_of_range",
      "func:test_loc_getitem_label_slice",
      "func:test_loc_getitem_list_of_labels_categoricalindex_with_na",
      "func:test_loc_getitem_list_with_fail",
      "func:test_loc_getitem_missing_unicode_key",
      "func:test_loc_getitem_multiindex_namedtuple",
      "func:test_loc_getitem_multiindex_tuple_level",
      "func:test_loc_getitem_multilevel_index_order",
      "func:test_loc_getitem_partial_string_slicing_datetimeindex",
      "func:test_loc_getitem_partial_string_slicing_with_periodindex",
      "func:test_loc_getitem_partial_string_slicing_with_timedeltaindex",
      "func:test_loc_getitem_single_boolean_arg",
      "func:test_loc_getitem_slice_datetime_objs_with_datetimeindex",
      "func:test_loc_getitem_slice_label_td64obj",
      "func:test_loc_getitem_slice_unordered_dt_index",
      "func:test_loc_getitem_slice_with_period_index",
      "func:test_loc_getitem_slicing_datetimes_frame",
      "func:test_loc_getitem_str_timedeltaindex",
      "func:test_loc_iloc_getitem_ellipses_only_one_ellipsis",
      "func:test_loc_iloc_getitem_ellipsis",
      "func:test_loc_iloc_getitem_leading_ellipses",
      "func:test_loc_index",
      "func:test_loc_index_alignment_for_series",
      "func:test_loc_modify_datetime",
      "func:test_loc_name",
      "func:test_loc_non_unique",
      "func:test_loc_non_unique_index_getitem",
      "func:test_loc_non_unique_index_setitem",
      "func:test_loc_non_unique_memory_error",
      "func:test_loc_npstr",
      "func:test_loc_periodindex_getitem",
      "func:test_loc_preserve_names",
      "func:test_loc_reindexing_of_empty_index",
      "func:test_loc_set_nan_in_categorical_series",
      "func:test_loc_setitem_bool_mask_timedeltaindex",
      "func:test_loc_setitem_boolean_and_column",
      "func:test_loc_setitem_categorical_additional_element",
      "func:test_loc_setitem_categorical_columns_retains_dtype",
      "func:test_loc_setitem_categorical_columns_retains_dtype_ordered",
      "func:test_loc_setitem_categorical_columns_retains_dtype_ordered_tie",
      "func:test_loc_setitem_categorical_value",
      "func:test_loc_setitem_consistency",
      "func:test_loc_setitem_consistency_dt64_to_float",
      "func:test_loc_setitem_consistency_dt64_to_str",
      "func:test_loc_setitem_consistency_empty",
      "func:test_loc_setitem_consistency_single_row",
      "func:test_loc_setitem_consistency_slice_column_len",
      "func:test_loc_setitem_dict_timedelta_multiple_set",
      "func:test_loc_setitem_dtype",
      "func:test_loc_setitem_dups",
      "func:test_loc_setitem_ea_not_full_column",
      "func:test_loc_setitem_empty_append_expands_rows",
      "func:test_loc_setitem_empty_append_expands_rows_mixed_dtype",
      "func:test_loc_setitem_empty_append_raises",
      "func:test_loc_setitem_empty_append_single_value",
      "func:test_loc_setitem_empty_frame",
      "func:test_loc_setitem_empty_series",
      "func:test_loc_setitem_empty_series_float",
      "func:test_loc_setitem_empty_series_str_idx",
      "func:test_loc_setitem_float_intindex",
      "func:test_loc_setitem_frame",
      "func:test_loc_setitem_frame_mixed_labels",
      "func:test_loc_setitem_frame_multiples",
      "func:test_loc_setitem_frame_nan_int_coercion_invalid",
      "func:test_loc_setitem_frame_with_inverted_slice",
      "func:test_loc_setitem_frame_with_reindex",
      "func:test_loc_setitem_frame_with_reindex_mixed",
      "func:test_loc_setitem_identity_slice_dtype_inferred_object",
      "func:test_loc_setitem_identity_slice_dtype_preserved",
      "func:test_loc_setitem_identity_slice_obj_type_preserved",
      "func:test_loc_setitem_label_slice_multiindex",
      "func:test_loc_setitem_labels_with_tz",
      "func:test_loc_setitem_listlike_with_timedelta64index",
      "func:test_loc_setitem_mask_td64_series_value",
      "func:test_loc_setitem_mask_with_datetimeindex_tz",
      "func:test_loc_setitem_missing_columns",
      "func:test_loc_setitem_multiindex_datetime_label",
      "func:test_loc_setitem_multiindex_nonunique_index",
      "func:test_loc_setitem_multiindex_slice_label_missing_levels",
      "func:test_loc_setitem_multiindex_timestamp",
      "func:test_loc_setitem_ndframe_values_alignment",
      "func:test_loc_setitem_slice",
      "func:test_loc_setitem_with_expansion_large_dataframe",
      "func:test_loc_setitem_with_expansion_nonunique_index",
      "func:test_loc_setitem_with_expansion_preserves_nullable_int",
      "func:test_loc_setitem_with_scalar_index",
      "func:test_loc_to_fail",
      "func:test_loc_to_fail2",
      "func:test_loc_to_fail3",
      "func:test_loc_uint64",
      "func:test_loc_uint64_disallow_negative",
      "func:test_loc_with_period_index",
      "func:test_none_values_on_string_columns",
      "func:test_not_change_nan_loc",
      "func:test_setitem_from_duplicate_axis",
      "func:test_setitem_new_key_tz",
      "func:test_setitem_roundtrip"
    ],
    "old_files": [
      "test_loc.py_o1_mini_dbb8c086.py"
    ],
    "new_files": [
      "test_loc_3f3aec.py"
    ]
  }
]