[
  {
    "file_signature": [
      "class:X",
      "class:test_ChangeloggedSet",
      "class:test_SetTable",
      "class:test_SetTableManager",
      "class:test_SetWindowSet",
      "func:cset",
      "func:key",
      "func:man",
      "func:manager",
      "func:stable",
      "func:table",
      "func:test_ChangeloggedSetManager",
      "func:test__apply_set_operation",
      "func:test__clear",
      "func:test__difference_update",
      "func:test__getitem__",
      "func:test__intersection_update",
      "func:test__new_store",
      "func:test__symmetric_difference_update",
      "func:test__update",
      "func:test_add",
      "func:test_apply_changelog_event__ADD",
      "func:test_apply_changelog_event__DISCARD",
      "func:test_apply_changelog_event__UPDATE",
      "func:test_apply_changelog_event__not_implemented",
      "func:test_as_stored_value",
      "func:test_constructor",
      "func:test_constructor__with_specific_name",
      "func:test_constructor__with_suffix",
      "func:test_constructor_disabled",
      "func:test_constructor_enabled",
      "func:test_discard",
      "func:test_on_add",
      "func:test_on_change__diff",
      "func:test_on_change__update",
      "func:test_on_discard",
      "func:test_sync_from_storage",
      "func:wrapper",
      "func:wset"
    ],
    "old_files": [
      "test_sets.py_gpt4_a2e17664.py"
    ],
    "new_files": [
      "test_sets_73d779.py"
    ]
  },
  {
    "file_signature": [
      "class:RestartNode",
      "func:__call__",
      "func:__init__",
      "func:adhoc_capability",
      "func:capabilities",
      "func:link_exception_to",
      "func:pfs_mock",
      "func:raiden_chain",
      "func:raiden_network",
      "func:resolvers",
      "func:restart_node",
      "func:routing_mode",
      "func:timeout"
    ],
    "old_files": [
      "raiden_network.py_gpt4_34be1bfe.py"
    ],
    "new_files": [
      "raiden_network_f4d23c.py"
    ]
  },
  {
    "file_signature": [
      "class:BiasDirectionWrapper",
      "class:ClassificationNormalBiasDirectionWrapper",
      "class:PCABiasDirectionWrapper",
      "class:PairedPCABiasDirectionWrapper",
      "class:TwoMeansBiasDirectionWrapper",
      "func:__call__",
      "func:__init__",
      "func:add_noise",
      "func:train"
    ],
    "old_files": [
      "bias_direction_wrappers.py_gpt4_a05e9eb9.py"
    ],
    "new_files": [
      "bias_direction_wrappers_2ab1fb.py"
    ]
  },
  {
    "file_signature": [
      "class:CountingMessageSender",
      "class:SmokeTestApplication",
      "class:Task",
      "func:__init__",
      "func:_create_dynamodb_table",
      "func:_create_wrapped_retry_function",
      "func:_create_ws_connection",
      "func:_delete_app",
      "func:_delete_dynamodb_table",
      "func:_deploy_app",
      "func:_deploy_with_retries",
      "func:_get_error_code_from_exception",
      "func:_inject_app_name",
      "func:_wrapped_with_retry",
      "func:counter",
      "func:find_skips_in_seq",
      "func:get_errors_from_dynamodb",
      "func:get_numbers_from_dynamodb",
      "func:last_sent",
      "func:redeploy_once",
      "func:region",
      "func:retry",
      "func:run",
      "func:send",
      "func:smoke_test_app_ws",
      "func:stop",
      "func:test_websocket_redployment_does_not_lose_messages",
      "func:websocket_api_id",
      "func:websocket_connect_url",
      "func:websocket_message_handler_arn"
    ],
    "old_files": [
      "test_websockets.py_gpt4_9d44913f.py"
    ],
    "new_files": [
      "test_websockets_059343.py"
    ]
  },
  {
    "file_signature": [
      "func:_cache_stub_file_map",
      "func:_create_stub_map",
      "func:_get_typeshed_directories",
      "func:_load_from_typeshed",
      "func:_merge_create_stub_map",
      "func:_try_to_load_stub",
      "func:_try_to_load_stub_from_file",
      "func:create_stub_module",
      "func:generate",
      "func:import_module_decorator",
      "func:parse_stub_module",
      "func:try_to_load_stub_cached",
      "func:wrapper"
    ],
    "old_files": [
      "typeshed.py_gpt4_219c0af4.py"
    ],
    "new_files": [
      "typeshed_1ff9b7.py"
    ]
  },
  {
    "file_signature": [
      "func:SimplePyFn",
      "func:a",
      "func:aaaaaaaaaaaaaaaaa",
      "func:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
      "func:foo",
      "func:thiiiiiiiiiiiiiiiiiis_iiiiiiiiiiiiiiiiiiiiiiiiiiiiiis_veeeeeeeeeeeeeeeeeeeeeeery_looooooong"
    ],
    "old_files": [
      "funcdef_return_type_trailing_comma.py_gpt4_9d900532.py"
    ],
    "new_files": [
      "funcdef_return_type_trailing_comma_6ef842.py"
    ]
  },
  {
    "file_signature": [
      "class:BeamSearch",
      "class:Constraint",
      "class:DeterministicSampler",
      "class:FinalSequenceScorer",
      "class:GumbelSampler",
      "class:LengthNormalizedSequenceLogProbabilityScorer",
      "class:MultinomialSampler",
      "class:RepeatedNGramBlockingConstraint",
      "class:Sampler",
      "class:SequenceLogProbabilityScorer",
      "class:TopKSampler",
      "class:TopPSampler",
      "func:__init__",
      "func:_copy_state",
      "func:_is_multilayer_rnn_decoder",
      "func:_reconstruct_sequences",
      "func:_search",
      "func:_update_initial_state",
      "func:_update_state",
      "func:apply",
      "func:gumbel",
      "func:gumbel_with_max",
      "func:init_state",
      "func:new_step",
      "func:sample_beams",
      "func:sample_nodes",
      "func:score",
      "func:search",
      "func:update_state"
    ],
    "old_files": [
      "beam_search.py_gpt4_11544983.py"
    ],
    "new_files": [
      "beam_search_b3623d.py"
    ]
  },
  {
    "file_signature": [
      "class:_EtreeFrameParser",
      "class:_LxmlFrameParser",
      "class:_XMLFrameParser",
      "func:__init__",
      "func:_data_to_frame",
      "func:_iterparse_nodes",
      "func:_parse",
      "func:_parse_doc",
      "func:_parse_nodes",
      "func:_transform_doc",
      "func:_validate_names",
      "func:_validate_path",
      "func:get_data_from_filepath",
      "func:parse_data",
      "func:preprocess_data",
      "func:read_xml"
    ],
    "old_files": [
      "xml.py_gpt4_792d4f4f.py"
    ],
    "new_files": [
      "xml_da8497.py"
    ]
  },
  {
    "file_signature": [
      "class:Catalog",
      "class:GenerateTask",
      "func:__init__",
      "func:_get_nodes_from_ids",
      "func:_get_selected_source_ids",
      "func:add_column",
      "func:build_catalog_table",
      "func:format_stats",
      "func:get_catalog_results",
      "func:get_node_selector",
      "func:get_stripped_prefix",
      "func:get_table",
      "func:get_unique_id_mapping",
      "func:interpret_results",
      "func:make_unique_id_map",
      "func:mapping_key",
      "func:run"
    ],
    "old_files": [
      "generate.py_gpt4_cae18f75.py"
    ],
    "new_files": [
      "generate_868fef.py"
    ]
  },
  {
    "file_signature": [
      "class:BlobPayloadDecoder",
      "class:BlobTransaction",
      "class:CancunLegacyTransaction",
      "class:CancunTransactionBuilder",
      "class:CancunTypedTransaction",
      "class:CancunUnsignedLegacyTransaction",
      "class:UnsignedBlobTransaction",
      "func:_type_byte",
      "func:as_signed_transaction",
      "func:blob_versioned_hashes",
      "func:check_signature_validity",
      "func:decode",
      "func:encode",
      "func:gas_price",
      "func:gas_used_by",
      "func:get_intrinsic_gas",
      "func:get_message_for_signing",
      "func:get_sender",
      "func:hash",
      "func:intrinsic_gas",
      "func:make_receipt",
      "func:max_fee_per_blob_gas",
      "func:new_blob_transaction",
      "func:new_unsigned_blob_transaction",
      "func:validate"
    ],
    "old_files": [
      "transactions.py_gpt4_8abeba06.py"
    ],
    "new_files": [
      "transactions_ca9596.py"
    ]
  },
  {
    "file_signature": [
      "class:Diff",
      "class:Insert",
      "class:Keep",
      "class:Modify",
      "class:Remove",
      "class:_Frontier",
      "func:_diff",
      "func:_finalize",
      "func:_get_checkpoint_path",
      "func:add_subparser",
      "func:checkpoint_diff",
      "func:display",
      "func:one"
    ],
    "old_files": [
      "diff.py_gpt4_01b3d5ad.py"
    ],
    "new_files": [
      "diff_65255d.py"
    ]
  },
  {
    "file_signature": [
      "class:Bool",
      "class:BrokerList",
      "class:Codec",
      "class:Credentials",
      "class:Dict",
      "class:EnumParam",
      "class:Int",
      "class:LogHandlers",
      "class:Number",
      "class:Param",
      "class:Path",
      "class:Port",
      "class:SSLContext",
      "class:Seconds",
      "class:Severity",
      "class:Str",
      "class:Timezone",
      "class:URL",
      "class:UnsignedInt",
      "class:Version",
      "class:_Int",
      "class:_Section",
      "class:_Settings",
      "class:_Symbol",
      "func:Enum",
      "func:Symbol",
      "func:__get__",
      "func:__init__",
      "func:__set__",
      "func:_init_options",
      "func:_out_of_range",
      "func:active",
      "func:broker_list",
      "func:build_deprecation_warning",
      "func:class_name",
      "func:convert",
      "func:deprecated",
      "func:on_get",
      "func:on_get_value",
      "func:on_init_set_default",
      "func:on_init_set_value",
      "func:on_set",
      "func:on_set_default",
      "func:prepare_get",
      "func:prepare_init_default",
      "func:prepare_path",
      "func:prepare_set",
      "func:set_class_default",
      "func:to_bool",
      "func:to_python",
      "func:validate_after",
      "func:validate_before"
    ],
    "old_files": [
      "params.py_gpt4_e6727dc5.py"
    ],
    "new_files": [
      "params_067b56.py"
    ]
  },
  {
    "file_signature": [
      "class:AugmentedLstmSeq2SeqEncoder",
      "class:GruSeq2SeqEncoder",
      "class:LstmSeq2SeqEncoder",
      "class:PytorchSeq2SeqWrapper",
      "class:RnnSeq2SeqEncoder",
      "class:StackedAlternatingLstmSeq2SeqEncoder",
      "class:StackedBidirectionalLstmSeq2SeqEncoder",
      "func:__init__",
      "func:forward",
      "func:get_input_dim",
      "func:get_output_dim",
      "func:is_bidirectional"
    ],
    "old_files": [
      "pytorch_seq2seq_wrapper.py_gpt4_2eda3bde.py"
    ],
    "new_files": [
      "pytorch_seq2seq_wrapper_f81fef.py"
    ]
  },
  {
    "file_signature": [
      "class:Cache",
      "class:Consumer",
      "class:Publisher",
      "class:RedisStreamsMessage",
      "class:Subscription",
      "func:__eq__",
      "func:__init__"
    ],
    "old_files": [
      "messaging.py_gpt4_c5025826.py"
    ],
    "new_files": [
      "messaging_30ade3.py"
    ]
  },
  {
    "file_signature": [
      "class:BiMpmMatching",
      "func:__init__",
      "func:create_parameter",
      "func:forward",
      "func:get_output_dim",
      "func:multi_perspective_match",
      "func:multi_perspective_match_pairwise",
      "func:share_or_create"
    ],
    "old_files": [
      "bimpm_matching.py_gpt4_70e09fb8.py"
    ],
    "new_files": [
      "bimpm_matching_1894c7.py"
    ]
  },
  {
    "file_signature": [
      "class:ChangedFile",
      "class:Refactoring",
      "func:__init__",
      "func:__repr__",
      "func:_calculate_rename",
      "func:_remove_indent_of_prefix",
      "func:apply",
      "func:calculate_to_path",
      "func:get_changed_files",
      "func:get_diff",
      "func:get_new_code",
      "func:get_renames",
      "func:inline",
      "func:rename"
    ],
    "old_files": [
      "__init__.py_gpt4_535e0013.py"
    ],
    "new_files": [
      "__init___886e1c.py"
    ]
  },
  {
    "file_signature": [
      "class:InvalidTagSequence",
      "func:__init__",
      "func:__str__",
      "func:_iob1_start_of_chunk",
      "func:bio_tags_to_spans",
      "func:bioul_tags_to_spans",
      "func:bmes_tags_to_spans",
      "func:enumerate_spans",
      "func:extract_bmes_tag_label",
      "func:iob1_tags_to_spans",
      "func:iob1_to_bioul",
      "func:pop_replace_append",
      "func:process_stack",
      "func:replace_label",
      "func:to_bioul"
    ],
    "old_files": [
      "span_utils.py_gpt4_841a1d72.py"
    ],
    "new_files": [
      "span_utils_b17f45.py"
    ]
  },
  {
    "file_signature": [
      "class:ProgressPrinter",
      "func:get_django_repo_object",
      "func:get_unused_ignores",
      "func:is_ignored",
      "func:is_pattern_fits",
      "func:line_dropped",
      "func:replace_with_clickable_location",
      "func:update"
    ],
    "old_files": [
      "typecheck_tests.py_gpt4_dd4ca18f.py"
    ],
    "new_files": [
      "typecheck_tests_125e9e.py"
    ]
  },
  {
    "file_signature": [
      "class:TestCheckForcingConcurrentBatches",
      "class:TestFailedPartialParse",
      "class:TestGetFullManifest",
      "class:TestPartialParse",
      "class:TestWarnUnusedConfigs",
      "func:event_catcher",
      "func:manifest_loader",
      "func:set_required_mocks",
      "func:test_check_forcing_concurrent_batches",
      "func:test_partial_parse_by_version",
      "func:test_partial_parse_file_diff_flag",
      "func:test_partial_parse_file_path",
      "func:test_partial_parse_safe_update_project_parser_files_partially",
      "func:test_profile_hash_change",
      "func:test_reset",
      "func:test_warn_for_unused_resource_config_paths",
      "func:test_write_perf_info"
    ],
    "old_files": [
      "test_manifest.py_gpt4_4664fd28.py"
    ],
    "new_files": [
      "test_manifest_190497.py"
    ]
  },
  {
    "file_signature": [
      "class:MailNotificationService",
      "func:__init__",
      "func:_attach_file",
      "func:_build_html_msg",
      "func:_build_multipart_msg",
      "func:_build_text_msg",
      "func:_send_email",
      "func:connect",
      "func:connection_is_valid",
      "func:get_service",
      "func:send_message"
    ],
    "old_files": [
      "notify.py_gpt4_79a4d062.py"
    ],
    "new_files": [
      "notify_74dbdd.py"
    ]
  },
  {
    "file_signature": [
      "class:TestProfiles",
      "class:TestProfilesMayNotExist",
      "func:_write_profiles_yml",
      "func:cleanup",
      "func:cwd",
      "func:cwd_child",
      "func:cwd_parent",
      "func:dbt_debug",
      "func:environ",
      "func:profiles_env_root",
      "func:profiles_flag_root",
      "func:profiles_home_root",
      "func:profiles_project_root",
      "func:profiles_yml",
      "func:test_debug",
      "func:test_deps",
      "func:test_profiles",
      "func:write_profiles_yml"
    ],
    "old_files": [
      "test_profile_dir.py_gpt4_ec19df54.py"
    ],
    "new_files": [
      "test_profile_dir_8b1317.py"
    ]
  },
  {
    "file_signature": [
      "class:FasterRcnnRegionDetector",
      "class:RandomRegionDetector",
      "class:RegionDetector",
      "class:RegionDetectorOutput",
      "func:__init__",
      "func:_postprocess_detections",
      "func:_seeded_random_tensor",
      "func:forward"
    ],
    "old_files": [
      "region_detector.py_gpt4_6c3cb449.py"
    ],
    "new_files": [
      "region_detector_fc1ccc.py"
    ]
  },
  {
    "file_signature": [
      "class:VagrantBase",
      "class:VagrantIPAddress",
      "class:VagrantIPAddressGlobal",
      "class:VagrantInit",
      "class:VagrantMachineGlobalInfo",
      "class:VagrantReload",
      "class:VagrantSSH",
      "class:VagrantStartMachine",
      "class:VagrantStatus",
      "class:VagrantUp",
      "func:__init__",
      "func:run",
      "func:wait_answer"
    ],
    "old_files": [
      "vagrant.py_gpt4_3baaf679.py"
    ],
    "new_files": [
      "vagrant_71cd9c.py"
    ]
  },
  {
    "file_signature": [
      "func:_akima_interpolate",
      "func:_backfill_1d",
      "func:_backfill_2d",
      "func:_cubicspline_interpolate",
      "func:_datetimelike_compat",
      "func:_fill_limit_area_1d",
      "func:_fill_limit_area_2d",
      "func:_fillna_prep",
      "func:_from_derivatives",
      "func:_index_to_interp_indices",
      "func:_interp_limit",
      "func:_interpolate_1d",
      "func:_interpolate_scipy_wrapper",
      "func:_pad_1d",
      "func:_pad_2d",
      "func:check_value_size",
      "func:clean_fill_method",
      "func:clean_interp_method",
      "func:clean_reindex_fill_method",
      "func:find_valid_index",
      "func:func",
      "func:get_fill_func",
      "func:get_interp_index",
      "func:infer_limit_direction",
      "func:inner",
      "func:interpolate_2d_inplace",
      "func:mask_missing",
      "func:new_func",
      "func:pad_or_backfill_inplace",
      "func:validate_limit_area",
      "func:validate_limit_direction"
    ],
    "old_files": [
      "missing.py_gpt4_68837e1d.py"
    ],
    "new_files": [
      "missing_3e0a9c.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseModel",
      "class:ModelMetaclass",
      "func:__eq__",
      "func:__get_validators__",
      "func:__getstate__",
      "func:__init__",
      "func:__instancecheck__",
      "func:__iter__",
      "func:__new__",
      "func:__repr_args__",
      "func:__setattr__",
      "func:__setstate__",
      "func:__try_update_forward_refs__",
      "func:_calculate_keys",
      "func:_copy_and_set_values",
      "func:_decompose_class",
      "func:_enforce_dict_if_root",
      "func:_get_value",
      "func:_init_private_attributes",
      "func:_iter",
      "func:construct",
      "func:copy",
      "func:create_model",
      "func:dict",
      "func:from_orm",
      "func:generate_hash_function",
      "func:hash_function",
      "func:is_untouched",
      "func:json",
      "func:parse_file",
      "func:parse_obj",
      "func:parse_raw",
      "func:schema",
      "func:schema_json",
      "func:update_forward_refs",
      "func:validate",
      "func:validate_custom_root_type",
      "func:validate_model"
    ],
    "old_files": [
      "main.py_gpt4_b2604fb7.py"
    ],
    "new_files": [
      "main_c8ac67.py"
    ]
  },
  {
    "file_signature": [
      "func:_avoid_recursions",
      "func:_check_name_for_execution",
      "func:_get_lambda_name",
      "func:_get_potential_nodes",
      "func:_search_function_arguments",
      "func:create_args",
      "func:dynamic_param_lookup",
      "func:wrapper"
    ],
    "old_files": [
      "dynamic_params.py_gpt4_4bb1022a.py"
    ],
    "new_files": [
      "dynamic_params_5296db.py"
    ]
  },
  {
    "file_signature": [
      "class:ContextualizedNode",
      "class:HasNoContext",
      "class:HelperValueMixin",
      "class:LazyValueWrapper",
      "class:TreeValue",
      "class:Value",
      "class:ValueSet",
      "class:ValueWrapper",
      "class:_ValueWrapperBase",
      "func:__and__",
      "func:__bool__",
      "func:__eq__",
      "func:__getattr__",
      "func:__hash__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__ne__",
      "func:__or__",
      "func:__repr__",
      "func:_as_context",
      "func:_from_frozen_set",
      "func:_get_value_filters",
      "func:_get_wrapped_value",
      "func:_getitem",
      "func:_wrapped_value",
      "func:as_context",
      "func:create_cached",
      "func:execute",
      "func:execute_annotation",
      "func:execute_operation",
      "func:execute_with_values",
      "func:filter",
      "func:from_sets",
      "func:gather_annotation_classes",
      "func:get_item",
      "func:get_qualified_names",
      "func:get_root_context",
      "func:get_safe_value",
      "func:get_signatures",
      "func:get_type_hint",
      "func:goto",
      "func:infer",
      "func:infer_type_vars",
      "func:is_bound_method",
      "func:is_builtins_module",
      "func:is_class",
      "func:is_class_mixin",
      "func:is_compiled",
      "func:is_function",
      "func:is_instance",
      "func:is_module",
      "func:is_namespace",
      "func:is_same_class",
      "func:is_stub",
      "func:is_sub_class_of",
      "func:iterate",
      "func:iterate_values",
      "func:iterator_to_value_set",
      "func:mapper",
      "func:merge_types_of_iterate",
      "func:name",
      "func:py__await__",
      "func:py__bool__",
      "func:py__call__",
      "func:py__class__",
      "func:py__doc__",
      "func:py__get__",
      "func:py__get__on_class",
      "func:py__getattribute__",
      "func:py__getattribute__alternatives",
      "func:py__getitem__",
      "func:py__iter__",
      "func:py__name__",
      "func:py__next__",
      "func:py__simple_getitem__",
      "func:py__stop_iteration_returns",
      "func:try_merge",
      "func:wrapper"
    ],
    "old_files": [
      "base_value.py_gpt4_c7caef3b.py"
    ],
    "new_files": [
      "base_value_caa0cc.py"
    ]
  },
  {
    "file_signature": [
      "class:_ResponseArgs",
      "func:_make_ssl_transport_dummy",
      "func:_patch_ssl_transport",
      "func:mock_is_file",
      "func:proxy_test_server",
      "func:secure_proxy_url",
      "func:web_server_endpoint_payload",
      "func:web_server_endpoint_type"
    ],
    "old_files": [
      "test_proxy_functional.py_gpt4_9569b1ca.py"
    ],
    "new_files": [
      "test_proxy_functional_150ce7.py"
    ]
  },
  {
    "file_signature": [
      "class:PythonLintHandler",
      "func:__init__",
      "func:_configure_linters",
      "func:_merge",
      "func:_normalize",
      "func:import_validator",
      "func:lint",
      "func:mypy",
      "func:pep257",
      "func:pep8",
      "func:pyflakes",
      "func:pylint"
    ],
    "old_files": [
      "python_lint_handler.py_gpt4_bc6a67c9.py"
    ],
    "new_files": [
      "python_lint_handler_d8f325.py"
    ]
  },
  {
    "file_signature": [
      "class:OneShotOptimizer",
      "class:RandomSearchMaker",
      "class:SamplingSearch",
      "class:_RandomSearch",
      "class:_SamplingSearch",
      "func:__init__",
      "func:_internal_ask",
      "func:_internal_ask_candidate",
      "func:_internal_provide_recommendation",
      "func:avg_of_k_best",
      "func:convex_limit",
      "func:hull_center",
      "func:sampler"
    ],
    "old_files": [
      "oneshot.py_gpt4_15f62085.py"
    ],
    "new_files": [
      "oneshot_b70888.py"
    ]
  },
  {
    "file_signature": [
      "class:ConsumerMessage",
      "class:FutureMessage",
      "class:Message",
      "class:PendingMessage",
      "class:RecordMetadata",
      "class:TP",
      "class:_ChannelT",
      "class:_ConsumerT",
      "func:_PendingMessage_to_Message",
      "func:__init__",
      "func:__repr__",
      "func:_get_len",
      "func:ack",
      "func:decref",
      "func:from_message",
      "func:incref",
      "func:on_final_ack",
      "func:set_result",
      "func:tp_set_to_map"
    ],
    "old_files": [
      "tuples.py_gpt4_03a2bff8.py"
    ],
    "new_files": [
      "tuples_43cb14.py"
    ]
  },
  {
    "file_signature": [
      "class:TestClient",
      "class:WebSocketDenialResponse",
      "class:WebSocketTestSession",
      "class:_AsyncBackend",
      "class:_TestClientTransport",
      "class:_Upgrade",
      "class:_WrapASGI2",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_is_asgi3",
      "func:_portal_factory",
      "func:_raise_on_close",
      "func:close",
      "func:delete",
      "func:get",
      "func:handle_request",
      "func:head",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:receive",
      "func:receive_bytes",
      "func:receive_json",
      "func:receive_text",
      "func:request",
      "func:reset_portal",
      "func:send",
      "func:send_bytes",
      "func:send_json",
      "func:send_text",
      "func:wait_shutdown",
      "func:websocket_connect"
    ],
    "old_files": [
      "testclient.py_gpt4_b53c0624.py"
    ],
    "new_files": [
      "testclient_6e1da5.py"
    ]
  },
  {
    "file_signature": [
      "class:StateMachine",
      "func:is_suppressed",
      "func:next_state",
      "func:register",
      "func:transition",
      "func:trend",
      "func:valid_severities"
    ],
    "old_files": [
      "alerta.py_gpt4_318d4d73.py"
    ],
    "new_files": [
      "alerta_4aa3fa.py"
    ]
  },
  {
    "file_signature": [
      "class:AssociationWithoutGroundTruth",
      "class:EmbeddingCoherenceTest",
      "class:NaturalLanguageInference",
      "class:WordEmbeddingAssociationTest",
      "func:__call__",
      "func:__init__",
      "func:_all_pmi_terms",
      "func:_get_ranks",
      "func:_ova_gap",
      "func:_pairwise_gaps",
      "func:get_metric",
      "func:reset",
      "func:spearman_correlation"
    ],
    "old_files": [
      "bias_metrics.py_gpt4_902c0530.py"
    ],
    "new_files": [
      "bias_metrics_5f20ad.py"
    ]
  },
  {
    "file_signature": [
      "class:RuntimeCheckableDimension",
      "class:RuntimeCheckableDimensionTypeParams",
      "class:RuntimeCheckableDimensionValidityParams",
      "class:RuntimeCheckableEntity",
      "class:RuntimeCheckableFileSlice",
      "class:RuntimeCheckableMeasure",
      "class:RuntimeCheckableMeasureAggregationParams",
      "class:RuntimeCheckableMetric",
      "class:RuntimeCheckableMetricInput",
      "class:RuntimeCheckableMetricInputMeasure",
      "class:RuntimeCheckableMetricTimeWindow",
      "class:RuntimeCheckableMetricTypeParams",
      "class:RuntimeCheckableNonAdditiveDimension",
      "class:RuntimeCheckableSavedQuery",
      "class:RuntimeCheckableSemanticModel",
      "class:RuntimeCheckableSemanticModelDefaults",
      "class:RuntimeCheckableSourceFileMetadata",
      "class:RuntimeCheckableWhereFilter",
      "func:complex_metric_input",
      "func:complex_metric_input_measure",
      "func:complex_metric_type_params",
      "func:conversion_type_params",
      "func:cumulative_type_params",
      "func:dimension_type_params",
      "func:dimension_validity_params",
      "func:file_slice",
      "func:measure_agg_params",
      "func:metric_time_window",
      "func:non_additive_dimension",
      "func:semantic_model_defaults",
      "func:simple_metric_input",
      "func:simple_metric_input_measure",
      "func:source_file_metadata",
      "func:test_defaults_obj_satisfies_protocol",
      "func:test_dimension_satisfies_protocol_optionals_specified",
      "func:test_dimension_satisfies_protocol_optionals_unspecified",
      "func:test_dimension_type_params_satisfies_protocol",
      "func:test_dimension_validity_params_satisfies_protocol",
      "func:test_entity_satisfies_protocol_optionals_specified",
      "func:test_entity_satisfies_protocol_optionals_unspecified",
      "func:test_file_slice_obj_satisfies_protocol",
      "func:test_measure_aggregation_params_satisfies_protocol",
      "func:test_measure_satisfies_protocol_optionals_specified",
      "func:test_measure_satisfies_protocol_optionals_unspecified",
      "func:test_metadata_obj_satisfies_protocol",
      "func:test_metric_input",
      "func:test_metric_input_measure",
      "func:test_metric_node_satisfies_protocol_optionals_specified",
      "func:test_metric_node_satisfies_protocol_optionals_unspecified",
      "func:test_metric_time_window",
      "func:test_metric_type_params_satisfies_protocol",
      "func:test_non_additive_dimension_satisfies_protocol",
      "func:test_saved_query_satisfies_protocol",
      "func:test_semantic_model_node_satisfies_protocol_optionals_specified",
      "func:test_semantic_model_node_satisfies_protocol_optionals_unspecified",
      "func:test_where_filter_satisfies_protocol",
      "func:where_filter"
    ],
    "old_files": [
      "test_semantic_layer_nodes_satisfy_protocols.py_gpt4_ba04deda.py"
    ],
    "new_files": [
      "test_semantic_layer_nodes_satisfy_protocols_5f3320.py"
    ]
  },
  {
    "file_signature": [
      "func:assign_customer",
      "func:process_action",
      "func:process_alert",
      "func:process_delete",
      "func:process_note",
      "func:process_status"
    ],
    "old_files": [
      "api.py_gpt4_a31f2df4.py"
    ],
    "new_files": [
      "api_1f14a8.py"
    ]
  },
  {
    "file_signature": [
      "class:Retry",
      "func:__init__",
      "func:__repr__",
      "func:_is_connection_error",
      "func:_is_method_retryable",
      "func:_is_read_error",
      "func:_sleep_backoff",
      "func:from_int",
      "func:get_backoff_time",
      "func:get_retry_after",
      "func:increment",
      "func:is_exhausted",
      "func:is_retry",
      "func:new",
      "func:parse_retry_after",
      "func:sleep",
      "func:sleep_for_retry"
    ],
    "old_files": [
      "retry.py_gpt4_09c31389.py"
    ],
    "new_files": [
      "retry_71dc8b.py"
    ]
  },
  {
    "file_signature": [
      "class:DeflateDecoder",
      "class:GzipDecoder",
      "class:HTTPResponse",
      "func:__getattr__",
      "func:__init__",
      "func:_decode",
      "func:_error_catcher",
      "func:_flush_decoder",
      "func:_get_decoder",
      "func:_init_decoder",
      "func:close",
      "func:closed",
      "func:connection",
      "func:data",
      "func:decompress",
      "func:fileno",
      "func:from_base",
      "func:get_redirect_location",
      "func:getheader",
      "func:getheaders",
      "func:info",
      "func:read",
      "func:readable",
      "func:readinto",
      "func:release_conn",
      "func:stream",
      "func:tell"
    ],
    "old_files": [
      "response.py_gpt4_c8730d4d.py"
    ],
    "new_files": [
      "response_365c37.py"
    ]
  },
  {
    "file_signature": [
      "class:AdjacencyField",
      "func:__init__",
      "func:__len__",
      "func:__str__",
      "func:_maybe_warn_for_namespace",
      "func:as_tensor",
      "func:count_vocab_items",
      "func:empty_field",
      "func:get_padding_lengths",
      "func:human_readable_repr",
      "func:index"
    ],
    "old_files": [
      "adjacency_field.py_gpt4_025db15b.py"
    ],
    "new_files": [
      "adjacency_field_20cd46.py"
    ]
  },
  {
    "file_signature": [
      "class:AppOnlyDeploymentPackager",
      "class:BaseLambdaDeploymentPackager",
      "class:DependencyBuilder",
      "class:EmptyPackageError",
      "class:InvalidSourceDistributionNameError",
      "class:LambdaDeploymentPackager",
      "class:LayerDeploymentPackager",
      "class:MissingDependencyError",
      "class:NoSuchPackageError",
      "class:Package",
      "class:PackageDownloadError",
      "class:PipRunner",
      "class:SDistMetadataFetcher",
      "class:SubprocessPip",
      "class:UnsupportedPackageError",
      "func:__eq__",
      "func:__hash__",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:_add_app_files",
      "func:_add_py_deps",
      "func:_add_vendor_files",
      "func:_apply_wheel_whitelist",
      "func:_build_python_dependencies",
      "func:_build_sdists",
      "func:_calculate_name_and_version",
      "func:_categorize_deps",
      "func:_categorize_wheel_files",
      "func:_check_valid_package",
      "func:_create_output_dir_if_needed",
      "func:_deployment_package_filename",
      "func:_download_all_dependencies",
      "func:_download_binary_wheels",
      "func:_download_dependencies",
      "func:_download_sdists",
      "func:_execute",
      "func:_find_sdists",
      "func:_get_pkg_info_filepath",
      "func:_get_requirements_filename",
      "func:_has_at_least_one_package",
      "func:_hash_project_dir",
      "func:_hash_vendor_dir",
      "func:_install_purelib_and_platlib",
      "func:_install_wheels",
      "func:_is_compatible_platform_tag",
      "func:_is_compatible_wheel_filename",
      "func:_iter_all_compatibility_tags",
      "func:_iter_app_filenames",
      "func:_iter_chalice_lib_if_needed",
      "func:_needs_latest_version",
      "func:_normalize_name",
      "func:_parse_pkg_info_file",
      "func:_unpack_sdist_into_dir",
      "func:build_site_packages",
      "func:build_wheel",
      "func:create_deployment_package",
      "func:data_dir",
      "func:deployment_package_filename",
      "func:download_all_dependencies",
      "func:download_manylinux_wheels",
      "func:download_sdists",
      "func:get_package_name_and_version",
      "func:identifier",
      "func:inject_latest_app",
      "func:main",
      "func:matches_data_dir",
      "func:name"
    ],
    "old_files": [
      "packager.py_gpt4_e50cfe74.py"
    ],
    "new_files": [
      "packager_d0d7be.py"
    ]
  },
  {
    "file_signature": [
      "class:TestChaliceZip",
      "class:TestPipeReader",
      "class:TestTimestampUtils",
      "class:TestUI",
      "func:set_now",
      "func:setup_method",
      "func:test_chalice_zip_file",
      "func:test_confirm_raises_own_exception",
      "func:test_confirm_returns_value",
      "func:test_error_goes_to_err_obj",
      "func:test_iso_no_timezone",
      "func:test_iso_with_timezone",
      "func:test_parse_iso8601_timestamp",
      "func:test_pipe_reader_does_not_read_tty",
      "func:test_pipe_reader_does_read_pipe",
      "func:test_serialize_json",
      "func:test_to_cfn_resource_name",
      "func:test_to_cfn_resource_name_properties",
      "func:test_to_datetime_relative_day",
      "func:test_to_datetime_relative_hour",
      "func:test_to_datetime_relative_minute",
      "func:test_to_datetime_relative_multiple_seconds",
      "func:test_to_datetime_relative_second",
      "func:test_to_datetime_relative_week",
      "func:test_write_goes_to_out_obj"
    ],
    "old_files": [
      "test_utils.py_gpt4_88405595.py"
    ],
    "new_files": [
      "test_utils_f58fb9.py"
    ]
  },
  {
    "file_signature": [
      "func:example",
      "func:func_no_args",
      "func:function_signature_stress_test",
      "func:import_as_names",
      "func:long_lines",
      "func:off_and_on_without_data",
      "func:on_and_off_broken",
      "func:single_literal_yapf_disable",
      "func:spaces",
      "func:spaces2",
      "func:spaces_types",
      "func:subscriptlist",
      "func:testlist_star_expr",
      "func:yield_expr"
    ],
    "old_files": [
      "fmtonoff.py_gpt4_2a9a416c.py"
    ],
    "new_files": [
      "fmtonoff_3a4c86.py"
    ]
  },
  {
    "file_signature": [
      "class:HttpVersion",
      "class:StreamWriter",
      "func:__init__",
      "func:_py_serialize_headers",
      "func:_safe_header",
      "func:_write",
      "func:_writelines",
      "func:enable_chunking",
      "func:enable_compression",
      "func:protocol",
      "func:set_eof",
      "func:transport"
    ],
    "old_files": [
      "http_writer.py_gpt4_59117046.py"
    ],
    "new_files": [
      "http_writer_4daf2a.py"
    ]
  },
  {
    "file_signature": [
      "class:ResolverSubclass",
      "class:TestBaseResolver",
      "class:TestRuntimeRefResolver",
      "class:TestRuntimeSourceResolver",
      "func:__call__",
      "func:resolver",
      "func:test_create_relation_with_empty",
      "func:test_resolve_event_time_filter",
      "func:test_resolve_limit"
    ],
    "old_files": [
      "test_providers.py_gpt4_7d8a7750.py"
    ],
    "new_files": [
      "test_providers_4601ba.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractEventLogger",
      "class:DBEventLogger",
      "class:StdOutEventLogger",
      "func:__call__",
      "func:__enter__",
      "func:__exit__",
      "func:_wrapper",
      "func:collect_request_payload",
      "func:curate_form_data",
      "func:curate_payload",
      "func:func",
      "func:get_event_logger_from_cfg_value",
      "func:get_logger_from_status",
      "func:log",
      "func:log_context",
      "func:log_this",
      "func:log_this_with_context",
      "func:log_this_with_extra_payload",
      "func:log_with_context",
      "func:wrapper"
    ],
    "old_files": [
      "log.py_gpt4_08a35b3f.py"
    ],
    "new_files": [
      "log_67c6cb.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseSampleMode",
      "class:TestBasicSampleMode",
      "class:TestIncrementalModelSampleModeRelative",
      "class:TestIncrementalModelSampleModeSpecific",
      "class:TestMicrobatchSampleMode",
      "class:TestSampleSeedRefs",
      "func:assert_row_count",
      "func:event_catcher",
      "func:event_time_end_catcher",
      "func:event_time_start_catcher",
      "func:models",
      "func:seeds",
      "func:test_incremental_model_sample",
      "func:test_sample_mode"
    ],
    "old_files": [
      "test_sample_mode.py_gpt4_40df71d0.py"
    ],
    "new_files": [
      "test_sample_mode_75a9c6.py"
    ]
  },
  {
    "file_signature": [
      "class:Token",
      "func:assert_tokenizes",
      "func:get_tokens",
      "func:test_fstring",
      "func:test_simple",
      "func:tokeneater"
    ],
    "old_files": [
      "test_tokenize.py_gpt4_f6c0a0ac.py"
    ],
    "new_files": [
      "test_tokenize_410db8.py"
    ]
  },
  {
    "file_signature": [
      "func:_function_is_x_method",
      "func:_get_parent_scope_cache",
      "func:clean_scope_docstring",
      "func:cut_value_at_position",
      "func:expr_is_dotted",
      "func:find_statement_documentation",
      "func:for_stmt_defines_one_name",
      "func:get_cached_code_lines",
      "func:get_executable_nodes",
      "func:get_flow_branch_keyword",
      "func:get_following_comment_same_line",
      "func:get_parent_scope",
      "func:get_parso_cache_node",
      "func:get_signature",
      "func:get_sync_comp_fors",
      "func:is_scope",
      "func:move",
      "func:safe_literal_eval",
      "func:wrapper"
    ],
    "old_files": [
      "parser_utils.py_gpt4_8eed369c.py"
    ],
    "new_files": [
      "parser_utils_3b717f.py"
    ]
  },
  {
    "file_signature": [
      "func:copy_default_settings",
      "func:create_user",
      "func:create_user_profile",
      "func:get_display_email_address",
      "func:get_dummy_email_address_for_display_regex"
    ],
    "old_files": [
      "create_user.py_gpt4_b066d983.py"
    ],
    "new_files": [
      "create_user_5beae0.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseTestPrePost",
      "class:PrePostModelHooksInConfigSetup",
      "class:TestDuplicateHooksInConfigs",
      "class:TestHookRefs",
      "class:TestHooksRefsOnSeeds",
      "class:TestPrePostModelHooks",
      "class:TestPrePostModelHooksInConfig",
      "class:TestPrePostModelHooksInConfigKwargs",
      "class:TestPrePostModelHooksInConfigWithCount",
      "class:TestPrePostModelHooksListWithMacros",
      "class:TestPrePostModelHooksOnSeeds",
      "class:TestPrePostModelHooksOnSeedsPlusPrefixed",
      "class:TestPrePostModelHooksOnSeedsPlusPrefixedWhitespace",
      "class:TestPrePostModelHooksOnSnapshots",
      "class:TestPrePostModelHooksUnderscores",
      "class:TestPrePostModelHooksWithMacros",
      "class:TestPrePostSnapshotHooksInConfigKwargs",
      "func:check_hooks",
      "func:get_ctx_vars",
      "func:macros",
      "func:models",
      "func:project_config_update",
      "func:seeds",
      "func:setUp",
      "func:test_hook_with_ref_on_seeds",
      "func:test_hooks_on_seeds",
      "func:test_hooks_on_snapshots",
      "func:test_pre_and_post_model_hooks_model",
      "func:test_pre_and_post_model_hooks_model_and_project",
      "func:test_pre_and_post_run_hooks",
      "func:test_pre_post_model_hooks_refed",
      "func:test_run_duplicate_hook_defs"
    ],
    "old_files": [
      "test_model_hooks.py_gpt4_30523da7.py"
    ],
    "new_files": [
      "test_model_hooks_850fc8.py"
    ]
  },
  {
    "file_signature": [
      "class:AppKey",
      "class:BaseTimerContext",
      "class:BasicAuth",
      "class:ChainMapProxy",
      "class:CookieMixin",
      "class:ETag",
      "class:ErrorableProtocol",
      "class:HeadersMixin",
      "class:MimeType",
      "class:ProxyInfo",
      "class:TimeoutHandle",
      "class:TimerContext",
      "class:TimerNoop",
      "func:__bool__",
      "func:__call__",
      "func:__contains__",
      "func:__enter__",
      "func:__exit__",
      "func:__getitem__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__iter__",
      "func:__len__",
      "func:__lt__",
      "func:__new__",
      "func:__repr__",
      "func:_parse_content_type",
      "func:_weakref_handle",
      "func:assert_timeout",
      "func:basicauth_from_netrc",
      "func:calculate_timeout_when",
      "func:call_later",
      "func:ceil_timeout",
      "func:charset",
      "func:close",
      "func:content_disposition_header",
      "func:content_length",
      "func:content_type",
      "func:cookies",
      "func:decode",
      "func:del_cookie",
      "func:encode",
      "func:from_url",
      "func:get",
      "func:get_env_proxy_for_url",
      "func:guess_filename",
      "func:is_expected_content_type",
      "func:is_ip_address",
      "func:must_be_empty_body",
      "func:netrc_from_env",
      "func:parse_http_date",
      "func:parse_mimetype",
      "func:populate_with_cookies",
      "func:proxies_from_env",
      "func:quoted_string",
      "func:register",
      "func:rfc822_formatted_time",
      "func:set_cookie",
      "func:set_exception",
      "func:set_result",
      "func:should_remove_content_length",
      "func:start",
      "func:strip_auth_from_url",
      "func:timeout",
      "func:timer",
      "func:validate_etag_value",
      "func:weakref_handle"
    ],
    "old_files": [
      "helpers.py_gpt4_ad3722ad.py"
    ],
    "new_files": [
      "helpers_5f1f91.py"
    ]
  },
  {
    "file_signature": [
      "class:StopTokenizing",
      "class:TokenError",
      "class:Untokenizer",
      "func:__init__",
      "func:_get_normal_name",
      "func:add_whitespace",
      "func:any",
      "func:compat",
      "func:detect_encoding",
      "func:find_cookie",
      "func:generate_tokens",
      "func:group",
      "func:maybe",
      "func:printtoken",
      "func:read_or_stop",
      "func:tokenize",
      "func:tokenize_loop",
      "func:untokenize"
    ],
    "old_files": [
      "tokenize.py_gpt4_37f27c2e.py"
    ],
    "new_files": [
      "tokenize_4942d9.py"
    ]
  },
  {
    "file_signature": [
      "class:SpacyTokenizer",
      "class:_WhitespaceSpacyTokenizer",
      "func:__call__",
      "func:__init__",
      "func:_remove_spaces",
      "func:_sanitize",
      "func:_to_params",
      "func:batch_tokenize",
      "func:tokenize"
    ],
    "old_files": [
      "spacy_tokenizer.py_gpt4_eef4338c.py"
    ],
    "new_files": [
      "spacy_tokenizer_edae48.py"
    ]
  },
  {
    "file_signature": [
      "class:EnumMeta",
      "class:IntEnum",
      "class:_EnumDict",
      "class:_RouteClassAttributeToGetattr",
      "func:__bool__",
      "func:__call__",
      "func:__cmp__",
      "func:__contains__",
      "func:__delattr__",
      "func:__delete__",
      "func:__dir__",
      "func:__eq__",
      "func:__format__",
      "func:__ge__",
      "func:__get__",
      "func:__getattr__",
      "func:__getitem__",
      "func:__gt__",
      "func:__hash__",
      "func:__init__",
      "func:__iter__",
      "func:__le__",
      "func:__len__",
      "func:__lt__",
      "func:__members__",
      "func:__ne__",
      "func:__new__",
      "func:__prepare__",
      "func:__reduce_ex__",
      "func:__repr__",
      "func:__reversed__",
      "func:__set__",
      "func:__setattr__",
      "func:__setitem__",
      "func:__str__",
      "func:_break_on_call_reduce",
      "func:_convert",
      "func:_create_",
      "func:_find_new_",
      "func:_get_mixins_",
      "func:_is_descriptor",
      "func:_is_dunder",
      "func:_is_sunder",
      "func:_make_class_unpicklable",
      "func:_reduce_ex_by_name",
      "func:any",
      "func:name",
      "func:unique",
      "func:value"
    ],
    "old_files": [
      "aenum.py_gpt4_c2f7f85e.py"
    ],
    "new_files": [
      "aenum_f94dc8.py"
    ]
  },
  {
    "file_signature": [
      "class:JSONEncoder",
      "func:default",
      "func:dumps",
      "func:loads",
      "func:on_default",
      "func:str_to_decimal"
    ],
    "old_files": [
      "json.py_gpt4_3bee49f9.py"
    ],
    "new_files": [
      "json_7b3477.py"
    ]
  },
  {
    "file_signature": [
      "class:HasBeenWarned",
      "func:create_serialization_dir",
      "func:data_loaders_from_params",
      "func:description_from_metrics",
      "func:enable_gradient_clipping",
      "func:evaluate",
      "func:get_batch_size",
      "func:get_metrics",
      "func:get_train_and_validation_metrics",
      "func:get_valid_tokens_mask",
      "func:make_vocab_from_params",
      "func:move_optimizer_to_cuda",
      "func:ngrams",
      "func:rescale_gradients",
      "func:str_to_time",
      "func:time_to_str"
    ],
    "old_files": [
      "util.py_gpt4_19495ecf.py"
    ],
    "new_files": [
      "util_a0ec0a.py"
    ]
  },
  {
    "file_signature": [
      "class:AccessHandle",
      "class:CompiledSubprocess",
      "class:InferenceStateSameProcess",
      "class:InferenceStateSubprocess",
      "class:Listener",
      "class:_InferenceStateProcess",
      "func:_GeneralizedPopen",
      "func:__del__",
      "func:__getattr__",
      "func:__getstate__",
      "func:__init__",
      "func:__repr__",
      "func:__setstate__",
      "func:_add_stderr_to_debug",
      "func:_cached_results",
      "func:_cleanup_process",
      "func:_convert_access_handles",
      "func:_enqueue_output",
      "func:_get_function",
      "func:_get_inference_state",
      "func:_get_process",
      "func:_kill",
      "func:_run",
      "func:_send",
      "func:_workaround",
      "func:add_subprocess",
      "func:delete_inference_state",
      "func:get_access_handle",
      "func:get_or_create_access_handle",
      "func:get_sys_path",
      "func:listen",
      "func:run",
      "func:set_access_handle",
      "func:wrapper"
    ],
    "old_files": [
      "__init__.py_gpt4_3224b089.py"
    ],
    "new_files": [
      "__init___e33fa3.py"
    ]
  },
  {
    "file_signature": [
      "class:ManagerTest",
      "func:setUp",
      "func:test_apply",
      "func:test_build",
      "func:test_cb_copy_all_not_enabled",
      "func:test_clone_rules",
      "func:test_commands",
      "func:test_compile_rules",
      "func:test_configure",
      "func:test_deploy",
      "func:test_destroy",
      "func:test_enqueue",
      "func:test_help",
      "func:test_live_test",
      "func:test_most_recent_manifest_found",
      "func:test_most_recent_manifest_not_found",
      "func:test_purge_queue",
      "func:test_retro_fast",
      "func:test_retro_fast_no_manifest",
      "func:test_retro_slow",
      "func:test_s3_batch_iterator",
      "func:test_s3_msg_summary"
    ],
    "old_files": [
      "manager_test.py_gpt4_84ad7741.py"
    ],
    "new_files": [
      "manager_test_d62131.py"
    ]
  },
  {
    "file_signature": [
      "func:_cached_resolve",
      "func:_load_toml",
      "func:_path_is_ignored",
      "func:best_effort_relative_path",
      "func:find_project_root",
      "func:find_pyproject_toml",
      "func:find_user_pyproject_toml",
      "func:gen_python_files",
      "func:get_gitignore",
      "func:infer_target_version",
      "func:parse_pyproject_toml",
      "func:parse_req_python_specifier",
      "func:parse_req_python_version",
      "func:path_is_excluded",
      "func:resolves_outside_root_or_cannot_stat",
      "func:strip_specifier_set",
      "func:wrap_stream_for_windows"
    ],
    "old_files": [
      "files.py_gpt4_7265589e.py"
    ],
    "new_files": [
      "files_a4064b.py"
    ]
  },
  {
    "file_signature": [
      "class:Forwarder",
      "func:append_to_header",
      "func:delete",
      "func:is_in_xloop",
      "func:post_receive",
      "func:pre_receive",
      "func:status_change",
      "func:take_action"
    ],
    "old_files": [
      "forwarder.py_gpt4_46b0ae59.py"
    ],
    "new_files": [
      "forwarder_298c02.py"
    ]
  },
  {
    "file_signature": [
      "class:ClientSession",
      "class:ClientTimeout",
      "class:_BaseRequestContextManager",
      "class:_RequestOptions",
      "class:_SessionRequestContextManager",
      "func:__await__",
      "func:__del__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__iter__",
      "func:_build_url",
      "func:_prepare_headers",
      "func:auth",
      "func:auto_decompress",
      "func:close",
      "func:closed",
      "func:connector",
      "func:connector_owner",
      "func:cookie_jar",
      "func:delete",
      "func:detach",
      "func:get",
      "func:head",
      "func:headers",
      "func:json_serialize",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:raise_for_status",
      "func:request",
      "func:requote_redirect_url",
      "func:send",
      "func:skip_auto_headers",
      "func:throw",
      "func:timeout",
      "func:trace_configs",
      "func:trust_env",
      "func:version",
      "func:ws_connect"
    ],
    "old_files": [
      "client.py_gpt4_e3fb94fd.py"
    ],
    "new_files": [
      "client_87f577.py"
    ]
  },
  {
    "file_signature": [
      "class:Alerts",
      "class:ApiKeys",
      "class:Base",
      "class:Blackouts",
      "class:Customers",
      "class:Database",
      "class:Groups",
      "class:Heartbeats",
      "class:Permissions",
      "class:Query",
      "class:QueryBuilder",
      "class:Users",
      "func:__init__",
      "func:add_history",
      "func:add_user_to_group",
      "func:close",
      "func:connect",
      "func:correlate_alert",
      "func:create_alert",
      "func:create_blackout",
      "func:create_customer",
      "func:create_engine",
      "func:create_group",
      "func:create_key",
      "func:create_note",
      "func:create_perm",
      "func:create_user",
      "func:dedup_alert",
      "func:delete_alert",
      "func:delete_alerts",
      "func:delete_blackout",
      "func:delete_customer",
      "func:delete_group",
      "func:delete_heartbeat",
      "func:delete_key",
      "func:delete_note",
      "func:delete_perm",
      "func:delete_user",
      "func:destroy",
      "func:from_params",
      "func:get_alert",
      "func:get_alert_groups",
      "func:get_alert_history",
      "func:get_alert_notes",
      "func:get_alert_tags",
      "func:get_alerts",
      "func:get_backend",
      "func:get_blackout",
      "func:get_blackouts",
      "func:get_blackouts_count",
      "func:get_count",
      "func:get_counts",
      "func:get_counts_by_severity",
      "func:get_counts_by_status",
      "func:get_customer",
      "func:get_customer_notes",
      "func:get_customers",
      "func:get_customers_by_match",
      "func:get_customers_count",
      "func:get_db",
      "func:get_environments",
      "func:get_expired",
      "func:get_group",
      "func:get_group_users",
      "func:get_groups",
      "func:get_groups_by_user",
      "func:get_groups_count",
      "func:get_heartbeat",
      "func:get_heartbeats",
      "func:get_heartbeats_by_status",
      "func:get_heartbeats_count",
      "func:get_history",
      "func:get_key",
      "func:get_keys",
      "func:get_keys_by_user",
      "func:get_keys_count",
      "func:get_metrics",
      "func:get_note",
      "func:get_notes",
      "func:get_perm",
      "func:get_perms",
      "func:get_perms_count",
      "func:get_scopes_by_match",
      "func:get_services",
      "func:get_severity",
      "func:get_status",
      "func:get_topn_count",
      "func:get_topn_flapping",
      "func:get_topn_standing",
      "func:get_unack",
      "func:get_unshelve",
      "func:get_user",
      "func:get_user_by_email",
      "func:get_user_by_hash",
      "func:get_user_by_username",
      "func:get_users",
      "func:get_users_count",
      "func:inc_counter",
      "func:init_app",
      "func:init_db",
      "func:is_alive",
      "func:is_blackout_period",
      "func:is_correlated",
      "func:is_duplicate",
      "func:is_flapping",
      "func:load_backend",
      "func:name",
      "func:remove_user_from_group",
      "func:set_alert",
      "func:set_email_hash",
      "func:set_gauge",
      "func:set_status",
      "func:tag_alert",
      "func:tag_alerts",
      "func:teardown_db",
      "func:untag_alert",
      "func:untag_alerts",
      "func:update_attributes",
      "func:update_attributes_by_query",
      "func:update_blackout",
      "func:update_customer",
      "func:update_group",
      "func:update_key",
      "func:update_key_last_used",
      "func:update_last_login",
      "func:update_note",
      "func:update_perm",
      "func:update_tags",
      "func:update_timer",
      "func:update_user",
      "func:update_user_attributes",
      "func:upsert_heartbeat",
      "func:version"
    ],
    "old_files": [
      "base.py_gpt4_1d275995.py"
    ],
    "new_files": [
      "base_eadd2e.py"
    ]
  },
  {
    "file_signature": [
      "class:ShanghaiBackwardsHeader",
      "class:ShanghaiBlock",
      "class:ShanghaiBlockHeader",
      "func:__init__",
      "func:__str__",
      "func:blob_gas_used",
      "func:deserialize",
      "func:excess_blob_gas",
      "func:from_header",
      "func:get_receipt_builder",
      "func:get_receipts",
      "func:get_transaction_builder",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash",
      "func:number",
      "func:parent_beacon_block_root",
      "func:serialize"
    ],
    "old_files": [
      "blocks.py_gpt4_073555f1.py"
    ],
    "new_files": [
      "blocks_219fd5.py"
    ]
  },
  {
    "file_signature": [
      "class:BrotliDecompressor",
      "class:ZLibCompressor",
      "class:ZLibDecompressor",
      "class:ZlibBaseHandler",
      "func:__init__",
      "func:compress_sync",
      "func:decompress_sync",
      "func:encoding_to_mode",
      "func:eof",
      "func:flush",
      "func:unconsumed_tail",
      "func:unused_data"
    ],
    "old_files": [
      "compression_utils.py_gpt4_33cdad47.py"
    ],
    "new_files": [
      "compression_utils_d50545.py"
    ]
  },
  {
    "file_signature": [
      "class:Dataclass",
      "class:DataclassProxy",
      "func:__call__",
      "func:__copy__",
      "func:__deepcopy__",
      "func:__get_validators__",
      "func:__getattr__",
      "func:__init__",
      "func:__instancecheck__",
      "func:__setattr__",
      "func:__validate__",
      "func:_add_pydantic_validation_attributes",
      "func:_dataclass_validate_assignment_setattr",
      "func:_dataclass_validate_values",
      "func:_get_validators",
      "func:_is_field_cached_property",
      "func:_validate_dataclass",
      "func:create_pydantic_model_from_dataclass",
      "func:dataclass",
      "func:handle_extra_init",
      "func:is_builtin_dataclass",
      "func:make_dataclass_validator",
      "func:new_init",
      "func:new_post_init",
      "func:set_validation",
      "func:wrap"
    ],
    "old_files": [
      "dataclasses.py_gpt4_312b2b6e.py"
    ],
    "new_files": [
      "dataclasses_a27d2a.py"
    ]
  },
  {
    "file_signature": [
      "class:JSONHandler",
      "class:JSONServer",
      "func:__init__",
      "func:collect_incoming_data",
      "func:fileno",
      "func:found_terminator",
      "func:get_log_traceback",
      "func:get_logger",
      "func:handle_accept",
      "func:handle_close",
      "func:handle_command",
      "func:log_traceback",
      "func:return_back",
      "func:serve_forever",
      "func:shutdown"
    ],
    "old_files": [
      "minserver.py_gpt4_71a7dccc.py"
    ],
    "new_files": [
      "minserver_4f13e8.py"
    ]
  },
  {
    "file_signature": [
      "class:ELMoCharacterMapper",
      "class:ELMoTokenCharactersIndexer",
      "func:__eq__",
      "func:__init__",
      "func:_make_bos_eos",
      "func:as_padded_tensor_dict",
      "func:convert_word_to_char_ids",
      "func:count_vocab_items",
      "func:get_empty_token_list",
      "func:padding_token",
      "func:tokens_to_indices"
    ],
    "old_files": [
      "elmo_indexer.py_gpt4_56f6acdb.py"
    ],
    "new_files": [
      "elmo_indexer_111385.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoWeather",
      "func:__init__",
      "func:condition",
      "func:humidity",
      "func:native_pressure",
      "func:native_pressure_unit",
      "func:native_temperature",
      "func:native_temperature_unit",
      "func:native_wind_speed",
      "func:native_wind_speed_unit"
    ],
    "old_files": [
      "weather.py_gpt4_206013a4.py",
      "weather.py_gpt4_4e219085.py"
    ],
    "new_files": [
      "weather_020398.py",
      "weather_6c1670.py"
    ]
  },
  {
    "file_signature": [
      "class:DatasetReader",
      "class:DistributedInfo",
      "class:WorkerInfo",
      "func:__init__",
      "func:_multi_worker_islice",
      "func:_read",
      "func:_set_distributed_info",
      "func:_set_worker_info",
      "func:apply_token_indexers",
      "func:get_distributed_info",
      "func:get_worker_info",
      "func:read",
      "func:shard_iterable",
      "func:text_to_instance"
    ],
    "old_files": [
      "dataset_reader.py_gpt4_c0f22f74.py"
    ],
    "new_files": [
      "dataset_reader_e7f129.py"
    ]
  },
  {
    "file_signature": [
      "class:SuccessfulSourcesTest",
      "class:TestBasicSource",
      "class:TestEmptySource",
      "class:TestMalformedSources",
      "class:TestRenderingInSourceTests",
      "class:TestSourceChildrenParents",
      "class:TestSourceDef",
      "class:TestSourceRunOperation",
      "class:TestSourceSelector",
      "class:TestUnquotedSources",
      "func:_create_schemas",
      "func:alternative_schema",
      "func:createDummyTables",
      "func:macros",
      "func:models",
      "func:run_dbt_with_vars",
      "func:setUp",
      "func:test_basic_source_def",
      "func:test_catalog",
      "func:test_empty_source_def",
      "func:test_malformed_schema_will_break_run",
      "func:test_render_in_source_tests",
      "func:test_run_operation_source",
      "func:test_source_childrens_parents",
      "func:test_source_only_def",
      "func:test_source_selector"
    ],
    "old_files": [
      "test_simple_source.py_gpt4_67af4ba3.py"
    ],
    "new_files": [
      "test_simple_source_67978c.py"
    ]
  },
  {
    "file_signature": [
      "class:DatetimeIndex",
      "func:__new__",
      "func:__reduce__",
      "func:_can_range_setop",
      "func:_disallow_mismatched_indexing",
      "func:_engine_type",
      "func:_formatter_func",
      "func:_get_time_micros",
      "func:_is_comparable_dtype",
      "func:_is_dates_only",
      "func:_maybe_cast_slice_bound",
      "func:_new_DatetimeIndex",
      "func:_parse_with_reso",
      "func:_parsed_string_to_bounds",
      "func:_resolution_obj",
      "func:_time_to_micros",
      "func:bdate_range",
      "func:check_str_or_none",
      "func:date_range",
      "func:get_loc",
      "func:indexer_at_time",
      "func:indexer_between_time",
      "func:inferred_type",
      "func:isocalendar",
      "func:slice_indexer",
      "func:snap",
      "func:strftime",
      "func:to_julian_date",
      "func:to_period",
      "func:tz_convert",
      "func:tz_localize"
    ],
    "old_files": [
      "datetimes.py_gpt4_b610e23a.py"
    ],
    "new_files": [
      "datetimes_224965.py"
    ]
  },
  {
    "file_signature": [
      "class:InputReduction",
      "func:__init__",
      "func:_attack_instance",
      "func:_get_ner_tags_and_mask",
      "func:_remove_one_token",
      "func:attack_from_json",
      "func:get_length"
    ],
    "old_files": [
      "input_reduction.py_gpt4_3f881361.py"
    ],
    "new_files": [
      "input_reduction_cfaaeb.py"
    ]
  },
  {
    "file_signature": [
      "class:InfluenceInterpreter",
      "class:InstanceInfluence",
      "class:InstanceWithGrads",
      "class:InterpretOutput",
      "func:__init__",
      "func:_calculate_influence_scores",
      "func:_gather_instances",
      "func:_gather_train_instances_and_compute_gradients",
      "func:from_archive",
      "func:from_path",
      "func:interpret",
      "func:interpret_from_file",
      "func:interpret_instances",
      "func:train_instances",
      "func:used_param_names",
      "func:used_params"
    ],
    "old_files": [
      "influence_interpreter.py_gpt4_c61f4344.py"
    ],
    "new_files": [
      "influence_interpreter_a2577a.py"
    ]
  },
  {
    "file_signature": [
      "class:ContextualizedSubscriptListNode",
      "func:_apply_decorators",
      "func:_bool_to_value",
      "func:_get_tuple_ints",
      "func:_infer_comparison",
      "func:_infer_comparison_part",
      "func:_infer_expr_stmt",
      "func:_infer_node",
      "func:_infer_node_cached",
      "func:_infer_node_if_inferred",
      "func:_infer_subscript_list",
      "func:_is_annotation_name",
      "func:_is_list",
      "func:_is_tuple",
      "func:_limit_value_infers",
      "func:_literals_to_types",
      "func:check",
      "func:check_setitem",
      "func:check_tuple_assignments",
      "func:infer",
      "func:infer_atom",
      "func:infer_expr_stmt",
      "func:infer_factor",
      "func:infer_node",
      "func:infer_or_test",
      "func:infer_trailer",
      "func:to_mod",
      "func:tree_name_to_values",
      "func:wrapper"
    ],
    "old_files": [
      "syntax_tree.py_gpt4_e67d5ced.py"
    ],
    "new_files": [
      "syntax_tree_78a1cf.py"
    ]
  },
  {
    "file_signature": [
      "func:gen_ws_headers",
      "func:test_handshake_compress_bad_ext",
      "func:test_handshake_compress_client_notakeover",
      "func:test_handshake_compress_multi_ext_bad",
      "func:test_handshake_compress_multi_ext_wbits",
      "func:test_handshake_compress_server_notakeover",
      "func:test_handshake_compress_wbits",
      "func:test_handshake_compress_wbits_error",
      "func:test_handshake_no_transfer_encoding"
    ],
    "old_files": [
      "test_websocket_handshake.py_gpt4_5fe4076a.py"
    ],
    "new_files": [
      "test_websocket_handshake_a4bf54.py"
    ]
  },
  {
    "file_signature": [
      "class:ModelTestCase",
      "func:assert_fields_equal",
      "func:check_model_computes_gradients_correctly",
      "func:ensure_batch_predictions_are_consistent",
      "func:ensure_model_can_train",
      "func:ensure_model_can_train_save_and_load",
      "func:set_up_model",
      "func:test_model_batch_norm_verification"
    ],
    "old_files": [
      "model_test_case.py_gpt4_462aa8c2.py"
    ],
    "new_files": [
      "model_test_case_905237.py"
    ]
  },
  {
    "file_signature": [
      "class:TestExternalModels",
      "class:TestModels",
      "class:TestNestedMacros",
      "class:TestPartialParsingDependency",
      "class:TestPortablePartialParsing",
      "class:TestProfileChanges",
      "class:TestSkipMacros",
      "class:TestSnapshots",
      "class:TestSources",
      "class:TestTests",
      "func:external_model_node",
      "func:external_model_node_depends_on",
      "func:external_model_node_depends_on_parent",
      "func:external_model_node_merge",
      "func:external_model_node_versioned",
      "func:initial_run_and_rename_project_dir",
      "func:local_dependency_files",
      "func:macros",
      "func:models",
      "func:normalize",
      "func:packages",
      "func:rename_project_root",
      "func:setUp",
      "func:test_nested_macros",
      "func:test_parsing_with_dependency",
      "func:test_pp_external_models",
      "func:test_pp_generic_tests",
      "func:test_pp_models",
      "func:test_pp_renamed_project_dir_changed_project_contents",
      "func:test_pp_renamed_project_dir_unchanged_project_contents",
      "func:test_pp_snapshots",
      "func:test_pp_sources",
      "func:test_profile_change",
      "func:test_skip_macros",
      "func:tests"
    ],
    "old_files": [
      "test_partial_parsing.py_gpt4_dd53b5fd.py"
    ],
    "new_files": [
      "test_partial_parsing_719695.py"
    ]
  },
  {
    "file_signature": [
      "class:Body",
      "class:Cookie",
      "class:Depends",
      "class:File",
      "class:Form",
      "class:Header",
      "class:Param",
      "class:ParamTypes",
      "class:Path",
      "class:Query",
      "class:Security",
      "func:__init__",
      "func:__repr__"
    ],
    "old_files": [
      "params.py_gpt4_5f47f3d9.py"
    ],
    "new_files": [
      "params_3f7432.py"
    ]
  },
  {
    "file_signature": [
      "class:GenericHygrostat",
      "func:__init__",
      "func:_async_switch_changed",
      "func:_async_switch_event",
      "func:_is_device_active",
      "func:_time_period_or_none",
      "func:available",
      "func:available_modes",
      "func:current_humidity",
      "func:device_class",
      "func:extra_state_attributes",
      "func:is_on",
      "func:max_humidity",
      "func:min_humidity",
      "func:mode",
      "func:name",
      "func:target_humidity"
    ],
    "old_files": [
      "humidifier.py_gpt4_0cbe9187.py"
    ],
    "new_files": [
      "humidifier_29087a.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockHeader",
      "class:MiningHeader",
      "func:__init__",
      "func:__str__",
      "func:base_fee_per_gas",
      "func:blob_gas_used",
      "func:excess_blob_gas",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash",
      "func:parent_beacon_block_root",
      "func:withdrawals_root"
    ],
    "old_files": [
      "headers.py_gpt4_a1534da1.py"
    ],
    "new_files": [
      "headers_cc92a5.py"
    ]
  },
  {
    "file_signature": [
      "class:AdversarialBiasMitigator",
      "class:AdversarialBiasMitigatorBackwardCallback",
      "class:FeedForwardRegressionAdversary",
      "class:_AdversaryLabelHook",
      "func:__call__",
      "func:__init__",
      "func:_get_prediction_device",
      "func:_maybe_warn_for_unseparable_batches",
      "func:extend_embedder_vocab",
      "func:forward",
      "func:forward_on_instance",
      "func:forward_on_instances",
      "func:get_metrics",
      "func:get_parameters_for_histogram_logging",
      "func:get_parameters_for_histogram_tensorboard_logging",
      "func:get_regularization_penalty",
      "func:make_output_human_readable",
      "func:on_backward",
      "func:train"
    ],
    "old_files": [
      "adversarial_bias_mitigator.py_gpt4_90b92542.py"
    ],
    "new_files": [
      "adversarial_bias_mitigator_3ad2a0.py"
    ]
  },
  {
    "file_signature": [
      "class:CommandWithOptionalPassword",
      "func:_create_app",
      "func:cli",
      "func:create_key",
      "func:create_user",
      "func:key",
      "func:keys",
      "func:parse_args",
      "func:user",
      "func:users"
    ],
    "old_files": [
      "commands.py_gpt4_df9e3a12.py"
    ],
    "new_files": [
      "commands_764f18.py"
    ]
  },
  {
    "file_signature": [
      "class:RedisCacheBackend",
      "class:RedisSentinelCacheBackend",
      "func:__init__",
      "func:from_config",
      "func:xadd",
      "func:xrange"
    ],
    "old_files": [
      "cache_backend.py_gpt4_421ef640.py"
    ],
    "new_files": [
      "cache_backend_1dcc35.py"
    ]
  },
  {
    "file_signature": [
      "class:HealthCheck",
      "class:HealthCheckMeta",
      "class:Phase",
      "class:Setting",
      "class:Verbosity",
      "class:duration",
      "class:settings",
      "class:settingsMeta",
      "class:settingsProperty",
      "func:__call__",
      "func:__delete__",
      "func:__doc__",
      "func:__get__",
      "func:__getattr__",
      "func:__init__",
      "func:__iter__",
      "func:__repr__",
      "func:__set__",
      "func:__setattr__",
      "func:_assign_default_internal",
      "func:_backend_validator",
      "func:_define_setting",
      "func:_max_examples_validator",
      "func:_validate_database",
      "func:_validate_deadline",
      "func:_validate_phases",
      "func:_validate_stateful_step_count",
      "func:all",
      "func:default",
      "func:get_profile",
      "func:is_in_ci",
      "func:load_profile",
      "func:local_settings",
      "func:lock_further_definitions",
      "func:note_deprecation",
      "func:register_profile",
      "func:show_changed",
      "func:validate_health_check_suppressions",
      "func:validator"
    ],
    "old_files": [
      "_settings.py_gpt4_461b9e31.py"
    ],
    "new_files": [
      "_settings_351566.py"
    ]
  },
  {
    "file_signature": [
      "func:_copy_tree",
      "func:_echo_error",
      "func:_encoding_from_filename",
      "func:_load_config",
      "func:cli",
      "func:docs",
      "func:request",
      "func:validate"
    ],
    "old_files": [
      "cli.py_gpt4_dd85cd69.py"
    ],
    "new_files": [
      "cli_d3e92b.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseRunner",
      "class:BaseTask",
      "class:ConfiguredTask",
      "class:ExecutionContext",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_build_run_result",
      "func:_handle_catchable_exception",
      "func:_handle_generic_exception",
      "func:_handle_internal_exception",
      "func:_node_build_path",
      "func:_safe_release_connection",
      "func:_skip_caused_by_ephemeral_failure",
      "func:after_execute",
      "func:before_execute",
      "func:compile",
      "func:compile_and_execute",
      "func:compile_manifest",
      "func:do_skip",
      "func:ephemeral_result",
      "func:error_result",
      "func:execute",
      "func:from_args",
      "func:from_run_result",
      "func:get_nearest_project_dir",
      "func:get_result_status",
      "func:handle_exception",
      "func:interpret_results",
      "func:move_to_nearest_project_dir",
      "func:on_skip",
      "func:read_profiles",
      "func:resource_types_from_args",
      "func:run",
      "func:run_with_hooks",
      "func:safe_run"
    ],
    "old_files": [
      "base.py_gpt4_61a41f9b.py"
    ],
    "new_files": [
      "base_b13513.py"
    ]
  },
  {
    "file_signature": [
      "class:FieldDescriptorT",
      "class:ModelOptions",
      "class:ModelT",
      "class:_InitSubclassCheck",
      "class:_UsingKwargsInNew",
      "func:__init__",
      "func:__init_subclass__",
      "func:as_dict",
      "func:clone",
      "func:clone_defaults",
      "func:derive",
      "func:dumps",
      "func:from_data",
      "func:getattr",
      "func:ident",
      "func:is_valid",
      "func:lazy_coercion",
      "func:loads",
      "func:on_model_attached",
      "func:prepare_value",
      "func:related_models",
      "func:should_coerce",
      "func:to_python",
      "func:to_representation",
      "func:validate",
      "func:validate_all",
      "func:validate_or_raise",
      "func:validation_error",
      "func:validation_errors"
    ],
    "old_files": [
      "models.py_gpt4_63b1f093.py"
    ],
    "new_files": [
      "models_25879e.py"
    ]
  },
  {
    "file_signature": [
      "class:ExposureParser",
      "class:GroupParser",
      "class:MetricParser",
      "class:SavedQueryParser",
      "class:SemanticModelParser",
      "func:__init__",
      "func:_create_metric",
      "func:_generate_exposure_config",
      "func:_generate_metric_config",
      "func:_generate_saved_query_config",
      "func:_generate_semantic_model_config",
      "func:_get_dimension_type_params",
      "func:_get_dimensions",
      "func:_get_entities",
      "func:_get_export",
      "func:_get_export_config",
      "func:_get_input_measure",
      "func:_get_input_measures",
      "func:_get_measures",
      "func:_get_metric_input",
      "func:_get_metric_inputs",
      "func:_get_metric_type_params",
      "func:_get_non_additive_dimension",
      "func:_get_optional_conversion_type_params",
      "func:_get_optional_cumulative_type_params",
      "func:_get_optional_input_measure",
      "func:_get_optional_metric_input",
      "func:_get_optional_time_window",
      "func:_get_period_agg",
      "func:_get_query_params",
      "func:parse",
      "func:parse_exposure",
      "func:parse_group",
      "func:parse_metric",
      "func:parse_saved_query",
      "func:parse_semantic_model",
      "func:parse_where_filter",
      "func:wrap_tags"
    ],
    "old_files": [
      "schema_yaml_readers.py_gpt4_f77f3b29.py"
    ],
    "new_files": [
      "schema_yaml_readers_9dabb0.py"
    ]
  },
  {
    "file_signature": [
      "class:TaskSuite",
      "func:__init__",
      "func:_contraction_test",
      "func:_default_tests",
      "func:_format_failing_examples",
      "func:_prediction_and_confidence_scores",
      "func:_punctuation_test",
      "func:_setup_editor",
      "func:_summary",
      "func:_typo_test",
      "func:add_test",
      "func:cap_order",
      "func:constructor",
      "func:contractions",
      "func:describe",
      "func:punctuation",
      "func:run",
      "func:save_suite",
      "func:summary",
      "func:typos"
    ],
    "old_files": [
      "task_suite.py_gpt4_7a891628.py"
    ],
    "new_files": [
      "task_suite_e75451.py"
    ]
  },
  {
    "file_signature": [
      "class:EarlyStoppingTrainer",
      "class:ModelWithLoss",
      "class:Speedometer",
      "class:TensorboardLogger",
      "class:TrainState",
      "class:TrainerConfig",
      "func:__call__",
      "func:__getstate__",
      "func:__init__",
      "func:__setstate__",
      "func:_adjust_learning_rate",
      "func:_cleanup",
      "func:_create_checkpoint",
      "func:_determine_convergence",
      "func:_determine_divergence",
      "func:_determine_improvement",
      "func:_evaluate",
      "func:_forward_backward",
      "func:_load_lr_scheduler",
      "func:_load_optimizer_state",
      "func:_load_training_state",
      "func:_save_lr_scheduler",
      "func:_save_optimizer_state",
      "func:_save_params",
      "func:_save_training_state",
      "func:_step",
      "func:_update_best_params",
      "func:_write_and_log_metrics",
      "func:best_lr_scheduler_fname",
      "func:best_optimizer_state_fname",
      "func:best_params_fname",
      "func:cleanup_params_files",
      "func:current_params_fname",
      "func:fit",
      "func:forward",
      "func:load",
      "func:log_metrics",
      "func:metrics_fname",
      "func:safe_custom_metrics_logger",
      "func:save",
      "func:time_elapsed",
      "func:training_state_dirname",
      "func:update_time_elapsed"
    ],
    "old_files": [
      "training.py_gpt4_79729440.py"
    ],
    "new_files": [
      "training_45f057.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoClimate",
      "func:__init__",
      "func:current_humidity",
      "func:current_temperature",
      "func:fan_mode",
      "func:fan_modes",
      "func:hvac_action",
      "func:hvac_mode",
      "func:hvac_modes",
      "func:preset_mode",
      "func:preset_modes",
      "func:swing_horizontal_mode",
      "func:swing_horizontal_modes",
      "func:swing_mode",
      "func:swing_modes",
      "func:target_humidity",
      "func:target_temperature",
      "func:target_temperature_high",
      "func:target_temperature_low",
      "func:temperature_unit",
      "func:unique_id"
    ],
    "old_files": [
      "climate.py_gpt4_645306d2.py"
    ],
    "new_files": [
      "climate_5f3cc6.py"
    ]
  },
  {
    "file_signature": [
      "class:GMatrixClient",
      "class:GMatrixHttpApi",
      "class:ReceivedCallMessage",
      "class:ReceivedRaidenMessage",
      "class:_ReceivedMessageBase",
      "func:__init__",
      "func:__repr__",
      "func:_handle_message",
      "func:_handle_responses",
      "func:_record_server_ident",
      "func:_send",
      "func:_sync",
      "func:blocking_sync",
      "func:create_room",
      "func:create_sync_filter",
      "func:disable_push_notifications",
      "func:get_aliases",
      "func:get_presence",
      "func:get_room_state_type",
      "func:get_user_presence",
      "func:listen_forever",
      "func:logout",
      "func:node_address_from_userid",
      "func:processed",
      "func:search_user_directory",
      "func:set_access_token",
      "func:set_presence_state",
      "func:set_sync_filter_id",
      "func:start_listener_thread",
      "func:stop",
      "func:stop_listener_thread",
      "func:sync_iteration",
      "func:synced",
      "func:user__repr__"
    ],
    "old_files": [
      "client.py_gpt4_f3bd83fd.py"
    ],
    "new_files": [
      "client_714ccb.py"
    ]
  },
  {
    "file_signature": [
      "class:test_StatsdMonitor",
      "func:assert_on_web_request",
      "func:event",
      "func:mon",
      "func:req",
      "func:response",
      "func:statsd",
      "func:stream",
      "func:table",
      "func:test_count",
      "func:test_on_assignment_start_completed",
      "func:test_on_assignment_start_failed",
      "func:test_on_commit_completed",
      "func:test_on_message_in_out",
      "func:test_on_rebalance",
      "func:test_on_send_initiated_completed",
      "func:test_on_stream_event_in_out",
      "func:test_on_table_del",
      "func:test_on_table_get",
      "func:test_on_table_set",
      "func:test_on_tp_commit",
      "func:test_on_web_request",
      "func:test_on_web_request__None_response",
      "func:test_raises_if_statsd_not_installed",
      "func:test_statsd",
      "func:test_track_tp_end_offsets",
      "func:time",
      "func:view"
    ],
    "old_files": [
      "test_statsd.py_gpt4_a00807bc.py"
    ],
    "new_files": [
      "test_statsd_afaa78.py"
    ]
  },
  {
    "file_signature": [
      "class:A",
      "class:B",
      "class:B1",
      "class:B2",
      "class:Bar",
      "class:Base",
      "class:BaseClass",
      "class:BaseClass2",
      "class:Baz",
      "class:C",
      "class:ConstructedObject",
      "class:D",
      "class:E",
      "class:F",
      "class:FloatInt",
      "class:Foo",
      "class:IntFloat",
      "class:MyClass",
      "class:NestedClass",
      "class:SomeClass",
      "class:TestFromParams",
      "class:TestLoader",
      "class:Testing",
      "class:WrapperClass",
      "func:__eq__",
      "func:__hash__",
      "func:__init__",
      "func:bar",
      "func:bare_function",
      "func:check_param",
      "func:from_params",
      "func:from_partial_objects",
      "func:set_total",
      "func:test_bare_string_params",
      "func:test_crazy_nested_union",
      "func:test_create_kwargs",
      "func:test_dict",
      "func:test_dict_not_params",
      "func:test_explicit_kwargs_always_passed_to_constructor",
      "func:test_extra_parameters_are_not_allowed_when_there_is_no_constructor",
      "func:test_extras",
      "func:test_extras_for_custom_classes",
      "func:test_from_params",
      "func:test_from_params_base_class_kwargs_crashes_if_params_not_handled",
      "func:test_from_params_child_has_kwargs_base_implicit_constructor",
      "func:test_from_params_does_not_pass_extras_to_non_from_params_registered_class",
      "func:test_from_params_handles_base_class_kwargs",
      "func:test_from_params_handles_kwargs_in_non_from_params_registered_class",
      "func:test_from_params_has_args",
      "func:test_from_params_raises_error_on_wrong_parameter_name_in_optional_union",
      "func:test_good_error_message_when_passing_non_params",
      "func:test_invalid_type_conversions",
      "func:test_iterable",
      "func:test_kwargs_are_passed_to_deeper_superclasses",
      "func:test_kwargs_are_passed_to_superclass",
      "func:test_kwargs_with_multiple_inheritance",
      "func:test_lazy_and_from_params_can_be_pickled",
      "func:test_lazy_construction_can_happen_multiple_times",
      "func:test_list",
      "func:test_mapping",
      "func:test_no_constructor",
      "func:test_only_infer_superclass_params_if_unknown",
      "func:test_optional_vs_required_lazy_objects",
      "func:test_raises_when_there_are_no_implementations",
      "func:test_remove_optional",
      "func:test_set",
      "func:test_takes_arg",
      "func:test_transferring_of_modules",
      "func:test_transferring_of_modules_ensures_type_consistency",
      "func:test_tuple",
      "func:test_union",
      "func:test_union_of_castable_types"
    ],
    "old_files": [
      "from_params_test.py_gpt4_9292ca91.py"
    ],
    "new_files": [
      "from_params_test_811442.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPFetcher",
      "class:ThreadedLocalServer",
      "func:__init__",
      "func:_assert_env_var_loaded",
      "func:_wait_for_server_ready",
      "func:basic_app",
      "func:cd",
      "func:config",
      "func:configure",
      "func:create_server",
      "func:get_record_counter",
      "func:http_session",
      "func:index",
      "func:index_view",
      "func:json_get",
      "func:local_server_factory",
      "func:make_call",
      "func:make_requests",
      "func:record_counter",
      "func:run",
      "func:sample_app",
      "func:shutdown",
      "func:test_can_accept_get_request",
      "func:test_can_accept_multiple_connections",
      "func:test_can_accept_multiple_options_request",
      "func:test_can_accept_options_request",
      "func:test_can_get_unicode_string_content_length",
      "func:test_can_import_env_vars",
      "func:test_can_reload_server",
      "func:test_cors",
      "func:test_has_thread_safe_current_request",
      "func:unused_tcp_port",
      "func:wait_for_server_ready"
    ],
    "old_files": [
      "test_local.py_gpt4_3856ab90.py"
    ],
    "new_files": [
      "test_local_0cfc7f.py"
    ]
  },
  {
    "file_signature": [
      "class:TomorrowioWeatherEntity",
      "func:__init__",
      "func:_async_forecast_daily",
      "func:_async_forecast_hourly",
      "func:_calculate_unique_id",
      "func:_forecast",
      "func:_forecast_dict",
      "func:_translate_condition",
      "func:condition",
      "func:humidity",
      "func:native_pressure",
      "func:native_temperature",
      "func:native_visibility",
      "func:native_wind_speed",
      "func:ozone",
      "func:wind_bearing"
    ],
    "old_files": [
      "weather.py_gpt4_80b5c19e.py"
    ],
    "new_files": [
      "weather_ac8565.py"
    ]
  },
  {
    "file_signature": [
      "class:EnvFilterSettingsSource",
      "class:FilteredDotEnvSettingsSource",
      "class:PrefectTomlConfigSettingsSource",
      "class:ProfileSettingsTomlLoader",
      "class:PyprojectTomlConfigSettingsSource",
      "class:TomlConfigSettingsSourceBase",
      "func:__call__",
      "func:__init__",
      "func:_get_default_profile",
      "func:_get_profiles_path",
      "func:_get_profiles_path_from_toml",
      "func:_is_test_mode",
      "func:_load_profile_settings",
      "func:_read_file",
      "func:get_field_value"
    ],
    "old_files": [
      "sources.py_gpt4_61b6f7ff.py"
    ],
    "new_files": [
      "sources_dfba5e.py"
    ]
  },
  {
    "file_signature": [
      "class:Case",
      "class:_LiveCheck",
      "func:__init__",
      "func:_failed_longer_than",
      "func:_maybe_recover_from_failed_state",
      "func:_now",
      "func:_set_pass_state",
      "func:current_execution",
      "func:current_test",
      "func:label",
      "func:seconds_since_last_fail"
    ],
    "old_files": [
      "case.py_gpt4_556666e4.py"
    ],
    "new_files": [
      "case_2f1853.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseConstraintQuotedColumn",
      "class:BaseConstraintsColumnsEqual",
      "class:BaseConstraintsRollback",
      "class:BaseConstraintsRuntimeDdlEnforcement",
      "class:BaseContractSqlHeader",
      "class:BaseIncrementalConstraintsColumnsEqual",
      "class:BaseIncrementalConstraintsRollback",
      "class:BaseIncrementalConstraintsRuntimeDdlEnforcement",
      "class:BaseIncrementalContractSqlHeader",
      "class:BaseModelConstraintsRuntimeEnforcement",
      "class:BaseTableConstraintsColumnsEqual",
      "class:BaseTableContractSqlHeader",
      "class:BaseViewConstraintsColumnsEqual",
      "class:TestConstraintQuotedColumn",
      "class:TestIncrementalConstraintsColumnsEqual",
      "class:TestIncrementalConstraintsRollback",
      "class:TestIncrementalConstraintsRuntimeDdlEnforcement",
      "class:TestIncrementalContractSqlHeader",
      "class:TestIncrementalForeignKeyConstraint",
      "class:TestModelConstraintsRuntimeEnforcement",
      "class:TestTableConstraintsColumnsEqual",
      "class:TestTableConstraintsRollback",
      "class:TestTableConstraintsRuntimeDdlEnforcement",
      "class:TestTableContractSqlHeader",
      "class:TestViewConstraintsColumnsEqual",
      "func:_find_and_replace",
      "func:_normalize_whitespace",
      "func:assert_expected_error_messages",
      "func:data_types",
      "func:expected_color",
      "func:expected_error_messages",
      "func:expected_sql",
      "func:int_type",
      "func:macros",
      "func:models",
      "func:null_model_sql",
      "func:schema_int_type",
      "func:schema_string_type",
      "func:string_type",
      "func:test__constraints_correct_column_data_types",
      "func:test__constraints_ddl",
      "func:test__constraints_enforcement_rollback",
      "func:test__constraints_wrong_column_data_types",
      "func:test__constraints_wrong_column_names",
      "func:test__constraints_wrong_column_order",
      "func:test__contract_sql_header",
      "func:test__model_constraints_ddl",
      "func:test_incremental_foreign_key_constraint"
    ],
    "old_files": [
      "test_constraints.py_gpt4_bd33987f.py"
    ],
    "new_files": [
      "test_constraints_cdcb72.py"
    ]
  },
  {
    "file_signature": [
      "class:ASTVisitor",
      "class:McCabeChecker",
      "class:PathGraph",
      "class:PathGraphingAstVisitor",
      "class:PathNode",
      "func:__init__",
      "func:_read",
      "func:_subgraph",
      "func:_subgraph_parse",
      "func:add_options",
      "func:appendPathNode",
      "func:complexity",
      "func:connect",
      "func:default",
      "func:dispatch",
      "func:dispatch_list",
      "func:dot_id",
      "func:get_code_complexity",
      "func:get_module_complexity",
      "func:main",
      "func:parse_options",
      "func:preorder",
      "func:reset",
      "func:run",
      "func:to_dot",
      "func:visitClassDef",
      "func:visitFunctionDef",
      "func:visitIf",
      "func:visitLoop",
      "func:visitSimpleStatement",
      "func:visitTryExcept",
      "func:visitWith"
    ],
    "old_files": [
      "mccabe.py_gpt4_ed0b9b04.py"
    ],
    "new_files": [
      "mccabe_5703d2.py"
    ]
  },
  {
    "file_signature": [
      "class:Independence",
      "class:Separation",
      "class:Sufficiency",
      "func:__call__",
      "func:__init__",
      "func:get_metric",
      "func:reset"
    ],
    "old_files": [
      "fairness_metrics.py_gpt4_a21ddbc3.py"
    ],
    "new_files": [
      "fairness_metrics_fcc9f2.py"
    ]
  },
  {
    "file_signature": [
      "class:AutomationEntity",
      "class:AutomationEntityConfig",
      "class:BaseAutomationEntity",
      "class:IfAction",
      "class:UnavailableAutomationEntity",
      "func:__call__",
      "func:__init__",
      "func:_automation_matches_config",
      "func:_automation_name",
      "func:_automations_with_x",
      "func:_log_callback",
      "func:_trigger_extract_devices",
      "func:_trigger_extract_entities",
      "func:_x_in_automation",
      "func:areas_in_automation",
      "func:automation_matches_config",
      "func:automations_with_area",
      "func:automations_with_blueprint",
      "func:automations_with_device",
      "func:automations_with_entity",
      "func:automations_with_floor",
      "func:automations_with_label",
      "func:blueprint_in_automation",
      "func:capability_attributes",
      "func:devices_in_automation",
      "func:entities_in_automation",
      "func:extra_state_attributes",
      "func:find_matches",
      "func:floors_in_automation",
      "func:is_on",
      "func:labels_in_automation",
      "func:referenced_areas",
      "func:referenced_blueprint",
      "func:referenced_devices",
      "func:referenced_entities",
      "func:referenced_floors",
      "func:referenced_labels",
      "func:reload_targets",
      "func:started_action",
      "func:websocket_config"
    ],
    "old_files": [
      "__init__.py_gpt4_1516527e.py"
    ],
    "new_files": [
      "__init___642017.py"
    ]
  },
  {
    "file_signature": [
      "class:GetUsers",
      "class:SubscriberHandler",
      "func:__call__",
      "func:__init__",
      "func:build_attachment",
      "func:build_avatar",
      "func:build_defaultstream",
      "func:build_direct_message_group",
      "func:build_direct_message_group_subscriptions",
      "func:build_message",
      "func:build_personal_subscriptions",
      "func:build_realm",
      "func:build_realm_emoji",
      "func:build_recipient",
      "func:build_recipients",
      "func:build_stream",
      "func:build_stream_subscriptions",
      "func:build_subscription",
      "func:build_user_message",
      "func:build_user_profile",
      "func:build_usermessages",
      "func:build_zerver_realm",
      "func:create_converted_data_files",
      "func:get_avatar",
      "func:get_emojis",
      "func:get_uploads",
      "func:get_users",
      "func:long_term_idle_helper",
      "func:make_subscriber_map",
      "func:make_user_messages",
      "func:process_avatars",
      "func:process_emojis",
      "func:process_uploads",
      "func:run_parallel_wrapper",
      "func:set_info",
      "func:validate_user_emails_for_import",
      "func:wrapping_function"
    ],
    "old_files": [
      "import_util.py_gpt4_1732c302.py"
    ],
    "new_files": [
      "import_util_c23496.py"
    ]
  },
  {
    "file_signature": [
      "class:CheckpointDecoder",
      "func:__init__",
      "func:decode_and_evaluate",
      "func:parallel_subsample",
      "func:warmup",
      "func:write_to_file"
    ],
    "old_files": [
      "checkpoint_decoder.py_gpt4_886fcce4.py"
    ],
    "new_files": [
      "checkpoint_decoder_4db09b.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseSelectionGroup",
      "class:IndirectSelection",
      "class:SelectionCriteria",
      "class:SelectionDifference",
      "class:SelectionIntersection",
      "class:SelectionUnion",
      "func:__init__",
      "func:__iter__",
      "func:__post_init__",
      "func:_match_to_int",
      "func:_probably_path",
      "func:combine_selections",
      "func:combined",
      "func:default_method",
      "func:dict_from_single_spec",
      "func:from_single_spec",
      "func:parse_method",
      "func:selection_criteria_from_dict"
    ],
    "old_files": [
      "selector_spec.py_gpt4_6d0aec14.py"
    ],
    "new_files": [
      "selector_spec_e2bf19.py"
    ]
  },
  {
    "file_signature": [
      "func:big_gym_multi",
      "func:conformant_gp",
      "func:conformant_ng_full_gym",
      "func:conformant_planning",
      "func:deterministic_gym_multi",
      "func:gp",
      "func:gym_budget_modifier",
      "func:gym_multifid_anm",
      "func:gym_optimizer_modifier",
      "func:gym_problem",
      "func:gym_problem_modifier",
      "func:multi_ng_full_gym",
      "func:multi_structured_ng_full_gym",
      "func:neuro_planning",
      "func:ng_full_gym",
      "func:ng_gym",
      "func:ng_stacking_gym",
      "func:small_deterministic_gym_multi",
      "func:sparse_gp",
      "func:tiny_deterministic_gym_multi"
    ],
    "old_files": [
      "gymexperiments.py_gpt4_116f21de.py"
    ],
    "new_files": [
      "gymexperiments_f3782d.py"
    ]
  },
  {
    "file_signature": [
      "class:AttachmentScoresTest",
      "func:_send_tensors_to_device",
      "func:multiple_runs",
      "func:setup_method",
      "func:test_attachment_scores_can_ignore_labels",
      "func:test_distributed_attachment_scores",
      "func:test_labeled_accuracy_is_affected_by_incorrect_heads",
      "func:test_multiple_distributed_runs",
      "func:test_perfect_scores",
      "func:test_unlabeled_accuracy_ignores_incorrect_labels"
    ],
    "old_files": [
      "attachment_scores_test.py_gpt4_84069daf.py"
    ],
    "new_files": [
      "attachment_scores_test_b605c1.py"
    ]
  },
  {
    "file_signature": [
      "class:Record",
      "func:_BUILD_asdict",
      "func:_BUILD_asdict_field",
      "func:_BUILD_eq",
      "func:_BUILD_ge",
      "func:_BUILD_gt",
      "func:_BUILD_hash",
      "func:_BUILD_init",
      "func:_BUILD_input_translate_fields",
      "func:_BUILD_le",
      "func:_BUILD_lt",
      "func:_BUILD_ne",
      "func:__eq__",
      "func:__ge__",
      "func:__gt__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__json__",
      "func:__le__",
      "func:__lt__",
      "func:__ne__",
      "func:_contribute_field_descriptors",
      "func:_contribute_methods",
      "func:_contribute_to_options",
      "func:_derive",
      "func:_humanize",
      "func:_kvrepr",
      "func:_prepare_dict",
      "func:add_related_to_tagged_indices",
      "func:add_to_tagged_indices",
      "func:asdict",
      "func:from_data",
      "func:generate_prepare_value",
      "func:generate_setter",
      "func:to_representation"
    ],
    "old_files": [
      "record.py_gpt4_e4228424.py"
    ],
    "new_files": [
      "record_c0e555.py"
    ]
  },
  {
    "file_signature": [
      "class:Elmo",
      "class:_ElmoBiLm",
      "class:_ElmoCharacterEncoder",
      "func:__init__",
      "func:_load_char_embedding",
      "func:_load_cnn_weights",
      "func:_load_highway",
      "func:_load_projection",
      "func:_load_weights",
      "func:batch_to_ids",
      "func:create_cached_cnn_embeddings",
      "func:forward",
      "func:get_output_dim"
    ],
    "old_files": [
      "elmo.py_gpt4_d981c2e3.py"
    ],
    "new_files": [
      "elmo_4ed8b3.py"
    ]
  },
  {
    "file_signature": [
      "class:AiohttpClientMockResponse",
      "class:AiohttpClientMocker",
      "class:MockLongPollSideEffect",
      "func:__init__",
      "func:call_count",
      "func:clear_requests",
      "func:close",
      "func:content",
      "func:content_type",
      "func:cookies",
      "func:create_session",
      "func:delete",
      "func:get",
      "func:headers",
      "func:match_request",
      "func:mock_aiohttp_client",
      "func:mock_stream",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:queue_response",
      "func:raise_for_status",
      "func:release",
      "func:request",
      "func:response",
      "func:stop",
      "func:url"
    ],
    "old_files": [
      "aiohttp.py_gpt4_5a9bb6c0.py"
    ],
    "new_files": [
      "aiohttp_4fe9b8.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseParser",
      "class:InternalParseError",
      "class:ParserSyntaxError",
      "class:Stack",
      "class:StackNode",
      "func:__init__",
      "func:__repr__",
      "func:_add_token",
      "func:_allowed_transition_names_and_token_types",
      "func:_pop",
      "func:_token_to_transition",
      "func:convert_leaf",
      "func:convert_node",
      "func:error_recovery",
      "func:iterate",
      "func:nonterminal",
      "func:parse"
    ],
    "old_files": [
      "parser.py_gpt4_1d5abd97.py"
    ],
    "new_files": [
      "parser_c026a4.py"
    ]
  },
  {
    "file_signature": [
      "func:client_label_map",
      "func:do_get_chart_data",
      "func:get_chart_data",
      "func:get_chart_data_for_installation",
      "func:get_chart_data_for_realm",
      "func:get_chart_data_for_remote_installation",
      "func:get_chart_data_for_remote_realm",
      "func:get_chart_data_for_stream",
      "func:get_time_series_by_subgroup",
      "func:is_analytics_ready",
      "func:render_stats",
      "func:rewrite_client_arrays",
      "func:sort_by_totals",
      "func:sort_client_labels",
      "func:stats",
      "func:stats_for_installation",
      "func:stats_for_realm",
      "func:stats_for_remote_installation",
      "func:stats_for_remote_realm",
      "func:table_filtered_to_id"
    ],
    "old_files": [
      "stats.py_gpt4_8c4e9045.py"
    ],
    "new_files": [
      "stats_691b29.py"
    ]
  },
  {
    "file_signature": [
      "class:_NodeCacheItem",
      "func:__init__",
      "func:_get_cache_clear_lock_path",
      "func:_get_cache_directory_path",
      "func:_get_default_cache_path",
      "func:_get_hashed_path",
      "func:_load_from_file_system",
      "func:_remove_cache_and_update_lock",
      "func:_save_to_file_system",
      "func:_set_cache_item",
      "func:_touch",
      "func:clear_cache",
      "func:clear_inactive_cache",
      "func:load_module",
      "func:try_to_save_module"
    ],
    "old_files": [
      "cache.py_gpt4_397aeb92.py"
    ],
    "new_files": [
      "cache_f3079a.py"
    ]
  },
  {
    "file_signature": [
      "class:TestLinker",
      "func:_get_graph_queue",
      "func:_mock_manifest",
      "func:assert_would_join",
      "func:linker",
      "func:test__find_cycles__cycles",
      "func:test__find_cycles__no_cycles",
      "func:test_linker_add_dependency",
      "func:test_linker_add_disjoint_dependencies",
      "func:test_linker_add_node",
      "func:test_linker_dependencies_limited_to_some_nodes",
      "func:test_linker_write_graph"
    ],
    "old_files": [
      "test_compilation.py_gpt4_c9741389.py"
    ],
    "new_files": [
      "test_compilation_513485.py"
    ]
  },
  {
    "file_signature": [
      "class:BooleanAccuracyTest",
      "func:multiple_runs",
      "func:test_accuracy_computation",
      "func:test_distributed_accuracy",
      "func:test_distributed_accuracy_unequal_batches",
      "func:test_does_not_divide_by_zero_with_no_count",
      "func:test_incorrect_gold_labels_shape_catches_exceptions",
      "func:test_incorrect_mask_shape_catches_exceptions",
      "func:test_multiple_distributed_runs",
      "func:test_skips_completely_masked_instances"
    ],
    "old_files": [
      "boolean_accuracy_test.py_gpt4_e4251148.py"
    ],
    "new_files": [
      "boolean_accuracy_test_a96780.py"
    ]
  },
  {
    "file_signature": [
      "class:BlackVersion",
      "func:black_runner",
      "func:download_and_extract",
      "func:download_and_extract_top_packages",
      "func:format_repo_with_version",
      "func:format_repos",
      "func:get_archive_manager",
      "func:get_first_archive_member",
      "func:get_package",
      "func:get_package_source",
      "func:get_pypi_download_url",
      "func:get_top_packages",
      "func:git_add_and_commit",
      "func:git_create_repository",
      "func:git_switch_branch",
      "func:init_repos",
      "func:main"
    ],
    "old_files": [
      "gallery.py_gpt4_281bac21.py"
    ],
    "new_files": [
      "gallery_2bb1c1.py"
    ]
  },
  {
    "file_signature": [
      "class:EtreeXMLFormatter",
      "class:LxmlXMLFormatter",
      "class:_BaseXMLFormatter",
      "func:__init__",
      "func:_build_attribs",
      "func:_build_elems",
      "func:_build_tree",
      "func:_convert_empty_str_key",
      "func:_get_flat_col_name",
      "func:_get_prefix_uri",
      "func:_handle_indexes",
      "func:_other_namespaces",
      "func:_prettify_tree",
      "func:_process_dataframe",
      "func:_sub_element_cls",
      "func:_transform_doc",
      "func:_validate_columns",
      "func:_validate_encoding",
      "func:write_output"
    ],
    "old_files": [
      "xml.py_gpt4_3e69baff.py"
    ],
    "new_files": [
      "xml_bf31a3.py"
    ]
  },
  {
    "file_signature": [
      "class:TestIncrementalSchemaChange",
      "func:models",
      "func:properties",
      "func:run_incremental_append_new_columns",
      "func:run_incremental_append_new_columns_remove_one",
      "func:run_incremental_sync_all_columns",
      "func:run_incremental_sync_remove_only",
      "func:run_twice_and_assert",
      "func:test_run_incremental_append_new_columns",
      "func:test_run_incremental_fail_on_schema_change",
      "func:test_run_incremental_ignore",
      "func:test_run_incremental_sync_all_columns",
      "func:tests"
    ],
    "old_files": [
      "test_incremental_schema.py_gpt4_dd73924f.py"
    ],
    "new_files": [
      "test_incremental_schema_fd049d.py"
    ]
  },
  {
    "file_signature": [
      "class:Grammar",
      "class:PythonGrammar",
      "func:__init__",
      "func:__repr__",
      "func:_get_normalizer",
      "func:_get_normalizer_issues",
      "func:_get_token_namespace",
      "func:_normalize",
      "func:_tokenize",
      "func:_tokenize_lines",
      "func:iter_errors",
      "func:load_grammar",
      "func:parse",
      "func:refactor"
    ],
    "old_files": [
      "grammar.py_gpt4_81ed9788.py"
    ],
    "new_files": [
      "grammar_96eff6.py"
    ]
  },
  {
    "file_signature": [
      "class:Model",
      "func:__init__",
      "func:_get_prediction_device",
      "func:_load",
      "func:_maybe_warn_for_unseparable_batches",
      "func:extend_embedder_vocab",
      "func:filter_out_authorized_missing_keys",
      "func:forward",
      "func:forward_on_instance",
      "func:forward_on_instances",
      "func:from_archive",
      "func:get_metrics",
      "func:get_parameters_for_histogram_logging",
      "func:get_parameters_for_histogram_tensorboard_logging",
      "func:get_regularization_penalty",
      "func:load",
      "func:make_output_human_readable",
      "func:remove_pretrained_embedding_params",
      "func:remove_weights_related_keys_from_params"
    ],
    "old_files": [
      "model.py_gpt4_1a9c1b3c.py"
    ],
    "new_files": [
      "model_d392e2.py"
    ]
  },
  {
    "file_signature": [
      "class:_EncoderBase",
      "func:__init__",
      "func:_get_initial_states",
      "func:_update_states",
      "func:reset_states",
      "func:sort_and_run_forward"
    ],
    "old_files": [
      "encoder_base.py_gpt4_aaa5df5f.py"
    ],
    "new_files": [
      "encoder_base_ec641d.py"
    ]
  },
  {
    "file_signature": [
      "class:AccessListPayloadDecoder",
      "class:AccessListTransaction",
      "class:AccountAccesses",
      "class:BerlinLegacyTransaction",
      "class:BerlinTransactionBuilder",
      "class:BerlinUnsignedLegacyTransaction",
      "class:TypedTransaction",
      "class:UnsignedAccessListTransaction",
      "func:__eq__",
      "func:__hash__",
      "func:__init__",
      "func:_calculate_txn_intrinsic_gas_berlin",
      "func:_type_byte",
      "func:access_list",
      "func:as_signed_transaction",
      "func:blob_versioned_hashes",
      "func:chain_id",
      "func:check_signature_validity",
      "func:copy",
      "func:create_unsigned_transaction",
      "func:data",
      "func:decode",
      "func:deserialize",
      "func:encode",
      "func:gas",
      "func:gas_price",
      "func:gas_used_by",
      "func:get_intrinsic_gas",
      "func:get_message_for_signing",
      "func:get_payload_codec",
      "func:get_sender",
      "func:hash",
      "func:intrinsic_gas",
      "func:make_receipt",
      "func:max_fee_per_blob_gas",
      "func:max_fee_per_gas",
      "func:max_priority_fee_per_gas",
      "func:new_access_list_transaction",
      "func:new_transaction",
      "func:new_unsigned_access_list_transaction",
      "func:nonce",
      "func:r",
      "func:s",
      "func:serialize",
      "func:to",
      "func:validate",
      "func:value",
      "func:y_parity"
    ],
    "old_files": [
      "transactions.py_gpt4_e917af4b.py"
    ],
    "new_files": [
      "transactions_635878.py"
    ]
  },
  {
    "file_signature": [
      "class:User",
      "class:UserStatus",
      "func:__init__",
      "func:__repr__",
      "func:_clear_email_hash",
      "func:_set_email_hash",
      "func:check_credentials",
      "func:count",
      "func:create",
      "func:delete",
      "func:domain",
      "func:find_all",
      "func:find_by_email",
      "func:find_by_id",
      "func:find_by_username",
      "func:from_db",
      "func:from_document",
      "func:from_record",
      "func:get_groups",
      "func:is_active",
      "func:parse",
      "func:reset_password",
      "func:send_confirmation",
      "func:send_password_reset",
      "func:serialize",
      "func:set_email_verified",
      "func:update",
      "func:update_attributes",
      "func:update_last_login",
      "func:verify_hash",
      "func:verify_password"
    ],
    "old_files": [
      "user.py_gpt4_e720dd47.py"
    ],
    "new_files": [
      "user_fbdb95.py"
    ]
  },
  {
    "file_signature": [
      "class:FBetaVerboseMeasureTest",
      "func:multiple_runs",
      "func:setup_method",
      "func:test_config_errors",
      "func:test_distributed_fbeta_measure",
      "func:test_fbeta_handles_batch_size_of_one",
      "func:test_fbeta_handles_no_prediction_false_last_class",
      "func:test_fbeta_handles_no_prediction_true_all_class",
      "func:test_fbeta_handles_no_prediction_true_last_class",
      "func:test_fbeta_handles_no_prediction_true_other_class",
      "func:test_fbeta_multiclass_macro_average_metric",
      "func:test_fbeta_multiclass_metric",
      "func:test_fbeta_multiclass_micro_average_metric",
      "func:test_fbeta_multiclass_state",
      "func:test_fbeta_multiclass_weighted_average_metric",
      "func:test_fbeta_multiclass_with_explicit_labels",
      "func:test_fbeta_multiclass_with_explicit_labels_macro",
      "func:test_fbeta_multiclass_with_explicit_labels_micro",
      "func:test_fbeta_multiclass_with_explicit_labels_weighted",
      "func:test_fbeta_multiclass_with_mask",
      "func:test_multiple_distributed_runs",
      "func:test_runtime_errors"
    ],
    "old_files": [
      "fbeta_verbose_measure_test.py_gpt4_de506267.py"
    ],
    "new_files": [
      "fbeta_verbose_measure_test_a08d84.py"
    ]
  },
  {
    "file_signature": [
      "class:CsvPredictor",
      "class:ExplicitPredictor",
      "class:ExtraArgsPredictor",
      "class:FakeDatasetReader",
      "class:TestPredict",
      "class:_TestPredictor",
      "func:__init__",
      "func:dump_line",
      "func:load_line",
      "func:predict_json",
      "func:setup_method",
      "func:test_add_predict_subparser",
      "func:test_alternative_file_formats",
      "func:test_base_predictor",
      "func:test_batch_prediction_works_with_known_model",
      "func:test_can_specify_extra_args",
      "func:test_can_specify_predictor",
      "func:test_fails_without_required_args",
      "func:test_other_modules",
      "func:test_uses_correct_dataset_reader",
      "func:test_using_dataset_reader_works_with_known_model",
      "func:test_works_with_known_model"
    ],
    "old_files": [
      "predict_test.py_gpt4_407f9b49.py"
    ],
    "new_files": [
      "predict_test_f04e35.py"
    ]
  },
  {
    "file_signature": [
      "class:ClientRequest",
      "class:ClientResponse",
      "class:ConnectionKey",
      "class:ContentDisposition",
      "class:Fingerprint",
      "class:RequestInfo",
      "class:_RequestInfo",
      "func:__del__",
      "func:__init__",
      "func:__new__",
      "func:__repr__",
      "func:__reset_writer",
      "func:_cleanup_writer",
      "func:_gen_default_accept_encoding",
      "func:_notify_content",
      "func:_release_connection",
      "func:_response_eof",
      "func:_writer",
      "func:check",
      "func:close",
      "func:closed",
      "func:connection",
      "func:connection_key",
      "func:content_disposition",
      "func:cookies",
      "func:fingerprint",
      "func:get_encoding",
      "func:headers",
      "func:history",
      "func:host",
      "func:is_ssl",
      "func:links",
      "func:ok",
      "func:port",
      "func:raise_for_status",
      "func:raw_headers",
      "func:real_url",
      "func:release",
      "func:request_info",
      "func:skip_auto_headers",
      "func:ssl",
      "func:terminate",
      "func:update_auth",
      "func:update_auto_headers",
      "func:update_body_from_data",
      "func:update_content_encoding",
      "func:update_cookies",
      "func:update_expect_continue",
      "func:update_headers",
      "func:update_host",
      "func:update_proxy",
      "func:update_transfer_encoding",
      "func:update_version",
      "func:url"
    ],
    "old_files": [
      "client_reqrep.py_gpt4_5e3d3a57.py"
    ],
    "new_files": [
      "client_reqrep_ca32d6.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseContextConfigGenerator",
      "class:ConfigSource",
      "class:ContextConfig",
      "class:ContextConfigGenerator",
      "class:ModelParts",
      "class:RenderedConfig",
      "class:UnrenderedConfig",
      "class:UnrenderedConfigGenerator",
      "func:__init__",
      "func:_active_project_configs",
      "func:_project_configs",
      "func:_update_from_config",
      "func:add_config_call",
      "func:add_unrendered_config_call",
      "func:build_config_dict",
      "func:calculate_node_config",
      "func:calculate_node_config_dict",
      "func:get_config_dict",
      "func:get_config_source",
      "func:get_node_project",
      "func:initial_result",
      "func:translate_hook_names"
    ],
    "old_files": [
      "context_config.py_gpt4_112f5411.py"
    ],
    "new_files": [
      "context_config_b7e80b.py"
    ]
  },
  {
    "file_signature": [
      "class:TestEmptyWarnError",
      "class:TestWarnErrorOptionsFromCLI",
      "class:TestWarnErrorOptionsFromProject",
      "func:assert_deprecation_error",
      "func:assert_deprecation_warning",
      "func:catcher",
      "func:clear_project_flags",
      "func:models",
      "func:runner",
      "func:test_can_exclude_specific_event",
      "func:test_can_raise_warning_to_error",
      "func:test_can_silence",
      "func:test_cant_set_both_exclude_and_warn",
      "func:test_cant_set_both_include_and_error",
      "func:test_project_flags"
    ],
    "old_files": [
      "test_warn_error_options.py_gpt4_9915cccb.py"
    ],
    "new_files": [
      "test_warn_error_options_be92d5.py"
    ]
  },
  {
    "file_signature": [
      "class:FromParams",
      "func:_to_params",
      "func:can_construct_from_params",
      "func:construct_arg",
      "func:create_extras",
      "func:create_kwargs",
      "func:from_params",
      "func:infer_constructor_params",
      "func:infer_method_params",
      "func:is_base_registrable",
      "func:pop_and_construct_arg",
      "func:remove_optional",
      "func:replace_object_with_params",
      "func:takes_arg",
      "func:takes_kwargs",
      "func:to_params"
    ],
    "old_files": [
      "from_params.py_gpt4_a2a891b9.py"
    ],
    "new_files": [
      "from_params_be1a87.py"
    ]
  },
  {
    "file_signature": [
      "class:Issue",
      "class:Normalizer",
      "class:NormalizerConfig",
      "class:RefactoringNormalizer",
      "class:Rule",
      "class:_NormalizerMeta",
      "func:__eq__",
      "func:__hash__",
      "func:__init__",
      "func:__ne__",
      "func:__new__",
      "func:__repr__",
      "func:_check_type_rules",
      "func:_get_message",
      "func:_instantiate_rules",
      "func:add_issue",
      "func:create_normalizer",
      "func:decorator",
      "func:feed_node",
      "func:finalize",
      "func:get_node",
      "func:initialize",
      "func:is_issue",
      "func:register_rule",
      "func:visit",
      "func:visit_leaf",
      "func:visit_node",
      "func:walk"
    ],
    "old_files": [
      "normalizer.py_gpt4_e04ed541.py"
    ],
    "new_files": [
      "normalizer_c4fa95.py"
    ]
  },
  {
    "file_signature": [
      "class:AppT",
      "class:BootStrategyT",
      "class:TracerT",
      "class:_AppCommand",
      "class:_EventT",
      "class:_LiveCheck",
      "class:_ModelArg",
      "class:_Monitor",
      "class:_SchemaT",
      "class:_Settings",
      "class:_Worker",
      "func:FlowControlQueue",
      "func:GlobalTable",
      "func:LiveCheck",
      "func:SetGlobalTable",
      "func:SetTable",
      "func:Table",
      "func:Worker",
      "func:__init__",
      "func:_span_add_default_tags",
      "func:_start_span_from_rebalancing",
      "func:agent",
      "func:assignor",
      "func:cache",
      "func:channel",
      "func:client_only",
      "func:command",
      "func:conf",
      "func:config_from_object",
      "func:consumer",
      "func:create_event",
      "func:crontab",
      "func:default_tracer",
      "func:discover",
      "func:finalize",
      "func:flow_control",
      "func:get_tracer",
      "func:http_client",
      "func:in_transaction",
      "func:is_leader",
      "func:main",
      "func:monitor",
      "func:on_rebalance_end",
      "func:on_rebalance_return",
      "func:on_rebalance_start",
      "func:on_webserver_init",
      "func:page",
      "func:producer",
      "func:producer_only",
      "func:producer_transport",
      "func:router",
      "func:serializers",
      "func:server",
      "func:service",
      "func:stream",
      "func:table_route",
      "func:tables",
      "func:task",
      "func:timer",
      "func:topic",
      "func:topics",
      "func:trace",
      "func:transport",
      "func:web",
      "func:worker_init",
      "func:worker_init_post_autodiscover"
    ],
    "old_files": [
      "app.py_gpt4_39324c85.py"
    ],
    "new_files": [
      "app_c89ec6.py"
    ]
  },
  {
    "file_signature": [
      "func:base_expected_catalog",
      "func:case",
      "func:expected_references_catalog",
      "func:no_stats"
    ],
    "old_files": [
      "expected_catalog.py_gpt4_a0db9c34.py"
    ],
    "new_files": [
      "expected_catalog_04b2bc.py"
    ]
  },
  {
    "file_signature": [
      "class:BinaryAlertConfigTestFakeFilesystem",
      "func:test_configure_with_defaults",
      "func:test_configure_with_no_defaults",
      "func:test_encrypt_cb_api_token",
      "func:test_invalid_aws_account_id",
      "func:test_invalid_aws_region",
      "func:test_invalid_carbon_black_url",
      "func:test_invalid_enable_carbon_black_downloader",
      "func:test_invalid_encrypted_carbon_black_api_token",
      "func:test_invalid_name_prefix",
      "func:test_property_accesses",
      "func:test_save",
      "func:test_validate_invalid",
      "func:test_validate_valid_with_downloader",
      "func:test_validate_valid_without_downloader",
      "func:test_variable_not_defined"
    ],
    "old_files": [
      "config_test.py_gpt4_76bfb2b7.py"
    ],
    "new_files": [
      "config_test_89096c.py"
    ]
  },
  {
    "file_signature": [
      "class:NoURLAvailableError",
      "func:_get_cloud_url",
      "func:_get_external_url",
      "func:_get_internal_url",
      "func:_get_request_host",
      "func:cloud_url",
      "func:get_supervisor_network_url",
      "func:get_url",
      "func:host_ip",
      "func:is_cloud_connection",
      "func:is_hass_url",
      "func:is_internal_request"
    ],
    "old_files": [
      "network.py_gpt4_b74d7a34.py"
    ],
    "new_files": [
      "network_55c06b.py"
    ]
  },
  {
    "file_signature": [
      "class:BucketBatchSampler",
      "func:__init__",
      "func:_argsort_by_padding",
      "func:_guess_sorting_keys",
      "func:add_noise_to_value",
      "func:get_batch_indices",
      "func:get_batch_size",
      "func:get_num_batches"
    ],
    "old_files": [
      "bucket_batch_sampler.py_gpt4_ef6e3a39.py"
    ],
    "new_files": [
      "bucket_batch_sampler_a1e388.py"
    ]
  },
  {
    "file_signature": [
      "class:Vocabulary",
      "class:_IndexToTokenDefaultDict",
      "class:_NamespaceDependentDefaultDict",
      "class:_TokenToIndexDefaultDict",
      "func:__eq__",
      "func:__getstate__",
      "func:__init__",
      "func:__missing__",
      "func:__repr__",
      "func:__setstate__",
      "func:__str__",
      "func:_extend",
      "func:_read_pretrained_tokens",
      "func:add_non_padded_namespaces",
      "func:add_token_to_namespace",
      "func:add_tokens_to_namespace",
      "func:add_transformer_vocab",
      "func:empty",
      "func:extend_from_instances",
      "func:extend_from_vocab",
      "func:from_files",
      "func:from_files_and_instances",
      "func:from_instances",
      "func:from_pretrained_transformer",
      "func:from_pretrained_transformer_and_instances",
      "func:get_index_to_token_vocabulary",
      "func:get_namespaces",
      "func:get_token_from_index",
      "func:get_token_index",
      "func:get_token_to_index_vocabulary",
      "func:get_vocab_size",
      "func:is_padded",
      "func:print_statistics",
      "func:save_to_files",
      "func:set_from_file"
    ],
    "old_files": [
      "vocabulary.py_gpt4_31e52c26.py"
    ],
    "new_files": [
      "vocabulary_89f8f0.py"
    ]
  },
  {
    "file_signature": [
      "class:NodeSelector",
      "class:ResourceTypeSelector",
      "func:__init__",
      "func:_is_empty_node",
      "func:_is_graph_member",
      "func:_is_match",
      "func:can_select_indirectly",
      "func:collect_specified_neighbors",
      "func:expand_selection",
      "func:filter_selection",
      "func:get_graph_queue",
      "func:get_nodes_from_criteria",
      "func:get_package_names",
      "func:get_selected",
      "func:incorporate_indirect_nodes",
      "func:node_is_match",
      "func:select_included",
      "func:select_nodes",
      "func:select_nodes_recursively"
    ],
    "old_files": [
      "selector.py_gpt4_132c2660.py"
    ],
    "new_files": [
      "selector_62ee5d.py"
    ]
  },
  {
    "file_signature": [
      "class:Monitor",
      "class:TableState",
      "func:__init__",
      "func:__reduce_keywords__",
      "func:_events_by_stream_dict",
      "func:_events_by_task_dict",
      "func:_http_response_codes_dict",
      "func:_metric_counts_dict",
      "func:_normalize",
      "func:_sample",
      "func:_table_or_create",
      "func:_topic_buffer_full_dict",
      "func:_tp_committed_offsets_dict",
      "func:_tp_end_offsets_dict",
      "func:_tp_offsets_as_dict",
      "func:_tp_read_offsets_dict",
      "func:asdict",
      "func:count",
      "func:ms_since",
      "func:on_assignment_completed",
      "func:on_assignment_error",
      "func:on_assignment_start",
      "func:on_commit_completed",
      "func:on_commit_initiated",
      "func:on_message_in",
      "func:on_message_out",
      "func:on_rebalance_end",
      "func:on_rebalance_return",
      "func:on_rebalance_start",
      "func:on_send_completed",
      "func:on_send_error",
      "func:on_send_initiated",
      "func:on_stream_event_in",
      "func:on_stream_event_out",
      "func:on_table_del",
      "func:on_table_get",
      "func:on_table_set",
      "func:on_topic_buffer_full",
      "func:on_tp_commit",
      "func:on_web_request_end",
      "func:on_web_request_start",
      "func:secs_since",
      "func:secs_to_ms",
      "func:track_tp_end_offset"
    ],
    "old_files": [
      "monitor.py_gpt4_121c517b.py"
    ],
    "new_files": [
      "monitor_7b218d.py"
    ]
  },
  {
    "file_signature": [
      "class:ExponentialMovingWindow",
      "class:ExponentialMovingWindowGroupby",
      "class:OnlineExponentialMovingWindow",
      "func:__init__",
      "func:_calculate_deltas",
      "func:_check_window_bounds",
      "func:_cov",
      "func:_get_window_indexer",
      "func:aggregate",
      "func:corr",
      "func:cov",
      "func:cov_func",
      "func:get_center_of_mass",
      "func:mean",
      "func:online",
      "func:reset",
      "func:std",
      "func:sum",
      "func:var",
      "func:var_func"
    ],
    "old_files": [
      "ewm.py_gpt4_64027fd2.py"
    ],
    "new_files": [
      "ewm_ef0fa0.py"
    ]
  },
  {
    "file_signature": [
      "class:Profile",
      "func:__eq__",
      "func:__init__",
      "func:_credentials_from_profile",
      "func:_get_profile_data",
      "func:default_profiles_dir",
      "func:from_credentials",
      "func:from_raw_profile_info",
      "func:from_raw_profiles",
      "func:pick_profile_name",
      "func:read_profile",
      "func:render",
      "func:render_profile",
      "func:to_profile_info",
      "func:to_target_dict",
      "func:validate"
    ],
    "old_files": [
      "profile.py_gpt4_40dc588b.py"
    ],
    "new_files": [
      "profile_77bd4f.py"
    ]
  },
  {
    "file_signature": [
      "class:Stream",
      "class:_LinkedListDirection",
      "func:__aiter__",
      "func:__and__",
      "func:__copy__",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:_chain",
      "func:_channel_stop_iteration",
      "func:_enable_passive",
      "func:_human_channel",
      "func:_iter_ll",
      "func:_iter_ll_backwards",
      "func:_iter_ll_forwards",
      "func:_join",
      "func:_repr_channel",
      "func:_repr_info",
      "func:_set_current_event",
      "func:add_processor",
      "func:clone",
      "func:combine",
      "func:contribute_to_stream",
      "func:current_event",
      "func:derive_topic",
      "func:echo",
      "func:enumerate",
      "func:filter",
      "func:get_active_stream",
      "func:get_root_stream",
      "func:group_by",
      "func:info",
      "func:inner_join",
      "func:join",
      "func:label",
      "func:left_join",
      "func:noack",
      "func:outer_join",
      "func:shortlabel",
      "func:through"
    ],
    "old_files": [
      "streams.py_gpt4_eb6777f4.py"
    ],
    "new_files": [
      "streams_3625c4.py"
    ]
  },
  {
    "file_signature": [
      "class:ValidationException",
      "func:friendly",
      "func:indent",
      "func:multi",
      "func:validate",
      "func:validate_ex",
      "func:vpformat"
    ],
    "old_files": [
      "validate.py_gpt4_93e898f1.py"
    ],
    "new_files": [
      "validate_a55939.py"
    ]
  },
  {
    "file_signature": [
      "func:mock_button",
      "func:mock_buttoncounter",
      "func:mock_controller",
      "func:mock_cover",
      "func:mock_cover_no_position",
      "func:mock_dimmer",
      "func:mock_lightsensor",
      "func:mock_module_no_subdevices",
      "func:mock_module_subdevices",
      "func:mock_relay",
      "func:mock_select",
      "func:mock_sensornumber",
      "func:mock_temperature"
    ],
    "old_files": [
      "conftest.py_gpt4_ef4e97b9.py"
    ],
    "new_files": [
      "conftest_976174.py"
    ]
  },
  {
    "file_signature": [
      "class:LogWriterCallback",
      "func:__init__",
      "func:_enable_activation_logging",
      "func:_log_activation_distribution",
      "func:_log_distributions",
      "func:_log_gradient_updates",
      "func:_log_learning_rates",
      "func:_log_parameter_and_gradient_statistics",
      "func:_should_log_distributions_next_batch",
      "func:_should_log_distributions_this_batch",
      "func:_should_log_this_batch",
      "func:close",
      "func:hook",
      "func:log_batch",
      "func:log_epoch",
      "func:log_inputs",
      "func:log_scalars",
      "func:log_tensors",
      "func:on_batch",
      "func:on_end",
      "func:on_epoch",
      "func:on_start"
    ],
    "old_files": [
      "log_writer.py_gpt4_6fa19710.py"
    ],
    "new_files": [
      "log_writer_c4397a.py"
    ]
  },
  {
    "file_signature": [
      "class:StateMachine",
      "func:is_suppressed",
      "func:next_state",
      "func:register",
      "func:transition",
      "func:trend"
    ],
    "old_files": [
      "isa_18_2.py_gpt4_21cb4e5b.py"
    ],
    "new_files": [
      "isa_18_2_b9e836.py"
    ]
  },
  {
    "file_signature": [
      "class:AugmentedLstmSeq2VecEncoder",
      "class:GruSeq2VecEncoder",
      "class:LstmSeq2VecEncoder",
      "class:PytorchSeq2VecWrapper",
      "class:RnnSeq2VecEncoder",
      "class:StackedAlternatingLstmSeq2VecEncoder",
      "class:StackedBidirectionalLstmSeq2VecEncoder",
      "func:__init__",
      "func:forward",
      "func:get_input_dim",
      "func:get_output_dim"
    ],
    "old_files": [
      "pytorch_seq2vec_wrapper.py_gpt4_0cdf5468.py"
    ],
    "new_files": [
      "pytorch_seq2vec_wrapper_ae605d.py"
    ]
  },
  {
    "file_signature": [
      "class:Check",
      "class:Condition",
      "class:Increasing",
      "class:Stationary",
      "class:SystemChecks",
      "func:__init__",
      "func:_transitioned_to_false",
      "func:add",
      "func:asdict",
      "func:color",
      "func:compare",
      "func:get_state_for_faults",
      "func:get_value",
      "func:label",
      "func:on_init_dependencies",
      "func:pause",
      "func:remove",
      "func:store_previous_value",
      "func:to_representation"
    ],
    "old_files": [
      "checks.py_gpt4_e16d1f4c.py"
    ],
    "new_files": [
      "checks_cda4fd.py"
    ]
  },
  {
    "file_signature": [
      "class:UnitSystem",
      "func:__init__",
      "func:_deprecated_unit_system",
      "func:_is_valid_unit",
      "func:accumulated_precipitation",
      "func:area",
      "func:as_dict",
      "func:get_converted_unit",
      "func:get_unit_system",
      "func:length",
      "func:pressure",
      "func:temperature",
      "func:volume",
      "func:wind_speed"
    ],
    "old_files": [
      "unit_system.py_gpt4_e74b9d39.py"
    ],
    "new_files": [
      "unit_system_a3b7c4.py"
    ]
  },
  {
    "file_signature": [
      "class:AttentionLayer",
      "class:TransformerLayer",
      "class:TransformerLayerOutput",
      "func:__init__",
      "func:_from_config",
      "func:forward",
      "func:get_output_dim"
    ],
    "old_files": [
      "transformer_layer.py_gpt4_238a1cf9.py"
    ],
    "new_files": [
      "transformer_layer_bf9c8e.py"
    ]
  },
  {
    "file_signature": [
      "class:TestMicrobatchBuilder",
      "func:microbatch_model",
      "func:test_build_batches",
      "func:test_build_end_time",
      "func:test_build_jinja_context_for_incremental_batch",
      "func:test_build_jinja_context_for_incremental_batch_false",
      "func:test_build_start_time",
      "func:test_ceiling_timestamp",
      "func:test_format_batch_start",
      "func:test_offset_timestamp",
      "func:test_truncate_timestamp"
    ],
    "old_files": [
      "test_microbatch.py_gpt4_7185f3ce.py"
    ],
    "new_files": [
      "test_microbatch_04817a.py"
    ]
  },
  {
    "file_signature": [
      "class:BlackBaseTestCase",
      "class:FormatFailure",
      "class:TestCaseArgs",
      "func:_assert_format_equal",
      "func:_assert_format_inner",
      "func:_parse_minimum_version",
      "func:all_data_cases",
      "func:assertFormatEqual",
      "func:assert_format",
      "func:change_directory",
      "func:dump_to_stderr",
      "func:get_base_dir",
      "func:get_case_path",
      "func:get_flags_parser",
      "func:parse_mode",
      "func:read_data",
      "func:read_data_from_file",
      "func:read_data_with_mode",
      "func:read_jupyter_notebook",
      "func:read_jupyter_notebook_from_file"
    ],
    "old_files": [
      "util.py_gpt4_9004c9d0.py"
    ],
    "new_files": [
      "util_c4e661.py"
    ]
  },
  {
    "file_signature": [
      "class:Cookies",
      "class:Headers",
      "class:Request",
      "class:Response",
      "class:_CookieCompatRequest",
      "class:_CookieCompatResponse",
      "func:__bool__",
      "func:__contains__",
      "func:__delitem__",
      "func:__eq__",
      "func:__getitem__",
      "func:__getstate__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:__setstate__",
      "func:_get_content_decoder",
      "func:_is_known_encoding",
      "func:_normalize_header_key",
      "func:_normalize_header_value",
      "func:_obfuscate_sensitive_headers",
      "func:_parse_content_type_charset",
      "func:_parse_header_links",
      "func:_prepare",
      "func:add_unredirected_header",
      "func:charset_encoding",
      "func:clear",
      "func:close",
      "func:content",
      "func:cookies",
      "func:copy",
      "func:delete",
      "func:elapsed",
      "func:encoding",
      "func:extract_cookies",
      "func:get",
      "func:get_list",
      "func:has_redirect_location",
      "func:http_version",
      "func:info",
      "func:is_client_error",
      "func:is_error",
      "func:is_informational",
      "func:is_redirect",
      "func:is_server_error",
      "func:is_success",
      "func:items",
      "func:iter_bytes",
      "func:iter_lines",
      "func:iter_raw",
      "func:iter_text",
      "func:json",
      "func:keys",
      "func:links",
      "func:multi_items",
      "func:num_bytes_downloaded",
      "func:raise_for_status",
      "func:raw",
      "func:read",
      "func:reason_phrase",
      "func:request",
      "func:set",
      "func:set_cookie_header",
      "func:text",
      "func:update",
      "func:url",
      "func:values"
    ],
    "old_files": [
      "_models.py_gpt4_5798ddfd.py"
    ],
    "new_files": [
      "_models_dd672f.py"
    ]
  },
  {
    "file_signature": [
      "class:TextualEntailmentSuite",
      "func:__init__",
      "func:_default_coreference_tests",
      "func:_default_fairness_tests",
      "func:_default_logic_tests",
      "func:_default_negation_tests",
      "func:_default_ner_tests",
      "func:_default_robustness_tests",
      "func:_default_taxonomy_tests",
      "func:_default_temporal_tests",
      "func:_default_tests",
      "func:_default_vocabulary_tests",
      "func:_format_failing_examples",
      "func:_prediction_and_confidence_scores",
      "func:_setup_editor",
      "func:_wrap_apply_to_each",
      "func:contractions",
      "func:new_fn",
      "func:preds_and_confs_fn",
      "func:punctuation",
      "func:typos"
    ],
    "old_files": [
      "textual_entailment_suite.py_gpt4_657c92f3.py"
    ],
    "new_files": [
      "textual_entailment_suite_19763e.py"
    ]
  },
  {
    "file_signature": [
      "class:TestGraph",
      "func:extra_parent_model",
      "func:graph",
      "func:local_manifest_extensions",
      "func:model_with_two_direct_parents",
      "func:non_shared_child_of_extra",
      "func:test_ancestors",
      "func:test_descendantcs",
      "func:test_exclude_edge_type",
      "func:test_nodes",
      "func:test_select_children",
      "func:test_select_childrens_parents",
      "func:test_select_parents"
    ],
    "old_files": [
      "test_graph.py_gpt4_2fea874f.py"
    ],
    "new_files": [
      "test_graph_69fed4.py"
    ]
  },
  {
    "file_signature": [
      "func:fetch_available_matrix_servers",
      "func:get_account_and_private_key",
      "func:get_min_reveal_timeout",
      "func:get_smart_contracts_start_at",
      "func:rpc_normalized_endpoint",
      "func:run_raiden_service",
      "func:setup_raiden_config",
      "func:start_api_server"
    ],
    "old_files": [
      "app.py_gpt4_147ce993.py"
    ],
    "new_files": [
      "app_e5f00c.py"
    ]
  },
  {
    "file_signature": [
      "class:SentimentAnalysisSuite",
      "func:__init__",
      "func:_add_phrase_function",
      "func:_default_fairness_tests",
      "func:_default_negation_tests",
      "func:_default_ner_tests",
      "func:_default_robustness_tests",
      "func:_default_temporal_tests",
      "func:_default_tests",
      "func:_default_vocabulary_tests",
      "func:_diff_down",
      "func:_diff_up",
      "func:_format_failing_examples",
      "func:_positive_change",
      "func:_prediction_and_confidence_scores",
      "func:_setup_editor",
      "func:perturb_fn",
      "func:preds_and_confs_fn"
    ],
    "old_files": [
      "sentiment_analysis_suite.py_gpt4_ad14d086.py"
    ],
    "new_files": [
      "sentiment_analysis_suite_5e67f5.py"
    ]
  },
  {
    "file_signature": [
      "class:FormData",
      "func:__call__",
      "func:__init__",
      "func:_gen_form_data",
      "func:_gen_form_urlencoded",
      "func:add_field",
      "func:add_fields",
      "func:is_multipart"
    ],
    "old_files": [
      "formdata.py_gpt4_c529f9fe.py"
    ],
    "new_files": [
      "formdata_aebdbf.py"
    ]
  },
  {
    "file_signature": [
      "class:PretrainedTransformerMismatchedIndexer",
      "func:__eq__",
      "func:__init__",
      "func:as_padded_tensor_dict",
      "func:count_vocab_items",
      "func:get_empty_token_list",
      "func:tokens_to_indices"
    ],
    "old_files": [
      "pretrained_transformer_mismatched_indexer.py_gpt4_718c7bc6.py"
    ],
    "new_files": [
      "pretrained_transformer_mismatched_indexer_f25f15.py"
    ]
  },
  {
    "file_signature": [
      "class:TestBuilder",
      "func:__init__",
      "func:_bad_type",
      "func:_process_legacy_args",
      "func:_render_values",
      "func:build_model_str",
      "func:build_raw_code",
      "func:construct_config",
      "func:extract_test_args",
      "func:get_synthetic_test_names",
      "func:macro_name",
      "func:synthesize_generic_test_names",
      "func:tags"
    ],
    "old_files": [
      "generic_test_builders.py_gpt4_dbe9f303.py"
    ],
    "new_files": [
      "generic_test_builders_3da473.py"
    ]
  },
  {
    "file_signature": [
      "class:RegistryT",
      "class:SchemaT",
      "class:_AppT",
      "class:_Message",
      "class:_ModelArg",
      "func:__init__",
      "func:dumps_key",
      "func:dumps_value",
      "func:loads_key",
      "func:loads_value",
      "func:on_dumps_key_prepare_headers",
      "func:on_dumps_value_prepare_headers",
      "func:update"
    ],
    "old_files": [
      "serializers.py_gpt4_d7b8c7c6.py"
    ],
    "new_files": [
      "serializers_307391.py"
    ]
  },
  {
    "file_signature": [
      "class:BleuTest",
      "func:multiple_runs",
      "func:setup_method",
      "func:test_bleu_computed_correctly",
      "func:test_bleu_computed_with_zero_counts",
      "func:test_distributed_bleu",
      "func:test_get_valid_tokens_mask",
      "func:test_multiple_distributed_runs",
      "func:test_ngrams"
    ],
    "old_files": [
      "bleu_test.py_gpt4_bbfdf5ba.py"
    ],
    "new_files": [
      "bleu_test_22d7f9.py"
    ]
  },
  {
    "file_signature": [
      "class:SerialSensor",
      "func:__init__",
      "func:extra_state_attributes",
      "func:name",
      "func:native_value",
      "func:stop_serial_read"
    ],
    "old_files": [
      "sensor.py_gpt4_6aacde5a.py"
    ],
    "new_files": [
      "sensor_c9d852.py"
    ]
  },
  {
    "file_signature": [
      "class:UnigramRecallTest",
      "func:multiple_runs",
      "func:test_distributed_accuracy",
      "func:test_get_metric_on_new_object_works",
      "func:test_multiple_distributed_runs",
      "func:test_sequence_recall",
      "func:test_sequence_recall_accumulates_and_resets_correctly",
      "func:test_sequence_recall_respects_mask"
    ],
    "old_files": [
      "unigram_recall_test.py_gpt4_10b745f1.py"
    ],
    "new_files": [
      "unigram_recall_test_83abd5.py"
    ]
  },
  {
    "file_signature": [
      "func:_load_feature_fixtures",
      "func:_mock_protocol",
      "func:_mocked_alarm_module",
      "func:_mocked_camera_module",
      "func:_mocked_clean_module",
      "func:_mocked_device",
      "func:_mocked_energy_features",
      "func:_mocked_fan_module",
      "func:_mocked_feature",
      "func:_mocked_light_effect_module",
      "func:_mocked_light_module",
      "func:_mocked_speaker_module",
      "func:_mocked_strip_children",
      "func:_mocked_thermostat_module",
      "func:_patch_connect",
      "func:_patch_discovery",
      "func:_patch_single_discovery"
    ],
    "old_files": [
      "__init__.py_gpt4_c8544535.py"
    ],
    "new_files": [
      "__init___bc9a6b.py"
    ]
  },
  {
    "file_signature": [
      "class:NetworkManager",
      "class:Request",
      "class:Response",
      "class:SecurityDetails",
      "func:__init__",
      "func:_bodyLoadedPromiseFulfill",
      "func:_handleRequestRedirect",
      "func:_handleRequestStart",
      "func:_onLoadingFailed",
      "func:_onLoadingFinished",
      "func:_onRequest",
      "func:_onRequestIntercepted",
      "func:_onRequestServedFromCache",
      "func:_onResponseReceived",
      "func:buffer",
      "func:extraHTTPHeaders",
      "func:failure",
      "func:frame",
      "func:fromCache",
      "func:fromServiceWorker",
      "func:generateRequestHash",
      "func:headers",
      "func:isNavigationRequest",
      "func:issuer",
      "func:method",
      "func:ok",
      "func:postData",
      "func:protocol",
      "func:redirectChain",
      "func:request",
      "func:resourceType",
      "func:response",
      "func:securityDetails",
      "func:status",
      "func:subjectName",
      "func:url",
      "func:validFrom",
      "func:validTo"
    ],
    "old_files": [
      "network_manager.py_gpt4_eaf8ec93.py"
    ],
    "new_files": [
      "network_manager_8c67f5.py"
    ]
  },
  {
    "file_signature": [
      "class:SingleIdTokenIndexer",
      "func:__init__",
      "func:_get_feature_value",
      "func:_to_params",
      "func:count_vocab_items",
      "func:get_empty_token_list",
      "func:tokens_to_indices"
    ],
    "old_files": [
      "single_id_token_indexer.py_gpt4_9a20ee2a.py"
    ],
    "new_files": [
      "single_id_token_indexer_c980de.py"
    ]
  },
  {
    "file_signature": [
      "class:ApplicationGraphBuilder",
      "class:ChaliceBuildError",
      "class:DependencyBuilder",
      "class:GraphPrettyPrint",
      "func:__init__",
      "func:_add_remaining_lines",
      "func:_build_lambda_function",
      "func:_create_api_mapping_model",
      "func:_create_bucket_notification",
      "func:_create_custom_domain_name",
      "func:_create_cwe_subscription",
      "func:_create_ddb_subscription",
      "func:_create_domain_name_model",
      "func:_create_kinesis_subscription",
      "func:_create_lambda_event_resources",
      "func:_create_lambda_model",
      "func:_create_log_group",
      "func:_create_rest_api_model",
      "func:_create_role_reference",
      "func:_create_scheduled_model",
      "func:_create_sns_subscription",
      "func:_create_sqs_subscription",
      "func:_create_websocket_api_model",
      "func:_get_default_private_api_policy",
      "func:_get_filtered_params",
      "func:_get_lambda_layers",
      "func:_get_managed_lambda_layer",
      "func:_get_model_text",
      "func:_get_role_identifier",
      "func:_get_role_reference",
      "func:_get_vpc_params",
      "func:_inject_role_traits",
      "func:_traverse",
      "func:build",
      "func:build_dependencies",
      "func:display_graph"
    ],
    "old_files": [
      "appgraph.py_gpt4_89925212.py"
    ],
    "new_files": [
      "appgraph_e5732d.py"
    ]
  },
  {
    "file_signature": [
      "class:Agent",
      "class:AgentTestWrapper",
      "class:_App",
      "func:__aiter__",
      "func:__call__",
      "func:__init__",
      "func:_agent_label",
      "func:_create_req",
      "func:_get_active_partitions",
      "func:_get_strtopic",
      "func:_get_supervisor_strategy",
      "func:_maybe_unwrap_reply_request",
      "func:_new_supervisor",
      "func:_on_first_isolated_partition_assigned",
      "func:_prepare_channel",
      "func:_repr_info",
      "func:_request_class",
      "func:_response_class",
      "func:actor_from_stream",
      "func:actor_tracebacks",
      "func:add_sink",
      "func:cancel",
      "func:channel",
      "func:channel_iterator",
      "func:clone",
      "func:current_agent",
      "func:get_topic_names",
      "func:info",
      "func:label",
      "func:on_init_dependencies",
      "func:shortlabel",
      "func:stream",
      "func:test_context",
      "func:to_message"
    ],
    "old_files": [
      "agent.py_gpt4_deba533c.py"
    ],
    "new_files": [
      "agent_c9999e.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_last_state_changes_multiple_stmt",
      "func:_get_last_state_changes_single_stmt",
      "func:_get_oldest_possible_ts",
      "func:_get_single_entity_start_time_stmt",
      "func:_get_start_time_state_for_entities_stmt",
      "func:_get_start_time_state_stmt",
      "func:_select_from_subquery",
      "func:_significant_states_stmt",
      "func:_sorted_states_to_dict",
      "func:_state_changed_during_period_stmt",
      "func:_stmt_and_join_attributes",
      "func:_stmt_and_join_attributes_for_start_state",
      "func:get_full_significant_states_with_session",
      "func:get_last_state_changes",
      "func:get_significant_states",
      "func:get_significant_states_with_session",
      "func:state_changes_during_period"
    ],
    "old_files": [
      "modern.py_gpt4_e73854b5.py"
    ],
    "new_files": [
      "modern_5fa600.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncHTTPClient",
      "class:HTTPClient",
      "class:HTTPClientError",
      "class:HTTPRequest",
      "class:HTTPResponse",
      "class:_RequestProxy",
      "func:__del__",
      "func:__getattr__",
      "func:__init__",
      "func:__new__",
      "func:__repr__",
      "func:__str__",
      "func:_async_clients",
      "func:body",
      "func:close",
      "func:configurable_base",
      "func:configurable_default",
      "func:configure",
      "func:fetch",
      "func:fetch_impl",
      "func:handle_response",
      "func:headers",
      "func:initialize",
      "func:main",
      "func:rethrow"
    ],
    "old_files": [
      "httpclient.py_gpt4_76d1a39b.py"
    ],
    "new_files": [
      "httpclient_e36adc.py"
    ]
  },
  {
    "file_signature": [
      "class:FindLearningRate",
      "func:_save_plot",
      "func:_smooth",
      "func:add_subparser",
      "func:find_learning_rate_from_args",
      "func:find_learning_rate_model",
      "func:search_learning_rate"
    ],
    "old_files": [
      "find_learning_rate.py_gpt4_5b4e5b17.py"
    ],
    "new_files": [
      "find_learning_rate_f33819.py"
    ]
  },
  {
    "file_signature": [
      "class:Topic",
      "class:_App",
      "func:__aiter__",
      "func:__init__",
      "func:__str__",
      "func:_clone_args",
      "func:_compile_decode",
      "func:_on_published",
      "func:_topic_name_or_default",
      "func:derive",
      "func:derive_topic",
      "func:get_topic_name",
      "func:partitions",
      "func:pattern",
      "func:send_soon"
    ],
    "old_files": [
      "topics.py_gpt4_fe9d0a1d.py"
    ],
    "new_files": [
      "topics_3a0e29.py"
    ]
  },
  {
    "file_signature": [
      "class:FastAPI",
      "func:__init__",
      "func:add_api_route",
      "func:add_api_websocket_route",
      "func:api_route",
      "func:decorator",
      "func:delete",
      "func:exception_handler",
      "func:get",
      "func:head",
      "func:include_router",
      "func:middleware",
      "func:on_event",
      "func:openapi",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:setup",
      "func:trace",
      "func:websocket",
      "func:websocket_route"
    ],
    "old_files": [
      "applications.py_gpt4_4361090c.py"
    ],
    "new_files": [
      "applications_016968.py"
    ]
  },
  {
    "file_signature": [
      "class:ManualMQTTAlarm",
      "func:__init__",
      "func:_active_state",
      "func:_async_update_state",
      "func:_async_validate_code",
      "func:_pending_time",
      "func:_state_schema",
      "func:_state_validator",
      "func:_within_pending_time",
      "func:alarm_state",
      "func:async_scheduled_update",
      "func:code_format",
      "func:extra_state_attributes"
    ],
    "old_files": [
      "alarm_control_panel.py_gpt4_e816d2fa.py"
    ],
    "new_files": [
      "alarm_control_panel_e80274.py"
    ]
  },
  {
    "file_signature": [
      "class:DeploymentAsyncClient",
      "class:DeploymentClient",
      "func:_create_deployment_from_schema",
      "func:create_deployment",
      "func:create_deployment_schedules",
      "func:create_flow_run_from_deployment",
      "func:delete_deployment",
      "func:delete_deployment_schedule",
      "func:get_scheduled_flow_runs_for_deployments",
      "func:read_deployment",
      "func:read_deployment_by_name",
      "func:read_deployment_schedules",
      "func:read_deployments",
      "func:set_deployment_paused_state",
      "func:update_deployment",
      "func:update_deployment_schedule"
    ],
    "old_files": [
      "client.py_gpt4_da9172a9.py"
    ],
    "new_files": [
      "client_1e3c0a.py"
    ]
  },
  {
    "file_signature": [
      "class:FileDiff",
      "class:InputFile",
      "class:ReadFiles",
      "class:ReadFilesFromDiff",
      "class:ReadFilesFromFileSystem",
      "func:generate_dbt_ignore_spec",
      "func:get_file_type_lookup",
      "func:get_file_types_for_project",
      "func:get_project_file_types",
      "func:get_project_name",
      "func:get_source_files",
      "func:load_seed_source_file",
      "func:load_source_file",
      "func:read_files",
      "func:read_files_for_parser",
      "func:read_files_for_project",
      "func:validate_yaml"
    ],
    "old_files": [
      "read_files.py_gpt4_374cf8d0.py"
    ],
    "new_files": [
      "read_files_0de626.py"
    ]
  },
  {
    "file_signature": [
      "class:ARNMatcher",
      "class:ChaliceRequestHandler",
      "class:Clock",
      "class:CustomLocalChalice",
      "class:ForbiddenError",
      "class:HTTPServerThread",
      "class:InvalidAuthorizerError",
      "class:LambdaContext",
      "class:LambdaEventConverter",
      "class:LocalARNBuilder",
      "class:LocalChalice",
      "class:LocalDevServer",
      "class:LocalGateway",
      "class:LocalGatewayAuthorizer",
      "class:LocalGatewayException",
      "class:NotAuthorizedError",
      "class:RouteMatcher",
      "class:ThreadedHTTPServer",
      "func:__init__",
      "func:_autogen_options_headers",
      "func:_base64_pad",
      "func:_check_can_invoke_view_function",
      "func:_current_time_millis",
      "func:_decode_jwt_payload",
      "func:_generate_lambda_context",
      "func:_generate_lambda_event",
      "func:_generic_handle",
      "func:_handle_binary",
      "func:_has_user_defined_options_method",
      "func:_is_binary",
      "func:_parse_payload",
      "func:_prepare_authorizer_event",
      "func:_resource_match",
      "func:_route_for_event",
      "func:_send_error_response",
      "func:_send_headers",
      "func:_send_http_response",
      "func:_send_http_response_no_body",
      "func:_send_http_response_with_body",
      "func:_update_lambda_event",
      "func:authorize",
      "func:build_arn",
      "func:create_lambda_event",
      "func:create_local_server",
      "func:current_request",
      "func:does_any_resource_match",
      "func:get_remaining_time_in_millis",
      "func:handle_request",
      "func:handle_single_request",
      "func:match_route",
      "func:run",
      "func:serve_forever",
      "func:shutdown",
      "func:time"
    ],
    "old_files": [
      "local.py_gpt4_15035cc4.py"
    ],
    "new_files": [
      "local_f7f151.py"
    ]
  },
  {
    "file_signature": [
      "class:MockMetadata",
      "class:MockRegistry",
      "class:TestGitPackage",
      "class:TestHubPackage",
      "class:TestLocalPackage",
      "class:TestPackageSpec",
      "class:TestTarballPackage",
      "func:__init__",
      "func:get_compatible_versions",
      "func:index_cached",
      "func:package",
      "func:package_version",
      "func:setUp",
      "func:tearDown",
      "func:test_default_revision",
      "func:test_dependency_resolution",
      "func:test_dependency_resolution_allow_prerelease",
      "func:test_deps_install",
      "func:test_fetch_metadata",
      "func:test_fetch_metadata_fails_on_incorrect_tar_folder_structure",
      "func:test_get_version_latest_prelease_false",
      "func:test_get_version_latest_prelease_true",
      "func:test_get_version_prerelease_explicitly_requested",
      "func:test_init",
      "func:test_init_with_unrendered",
      "func:test_invalid",
      "func:test_private_package_raise_error",
      "func:test_resolve_conflict",
      "func:test_resolve_fail",
      "func:test_resolve_missing_package",
      "func:test_resolve_missing_version",
      "func:test_resolve_ok",
      "func:test_resolve_ranges",
      "func:test_resolve_ranges_install_prerelease_default_false",
      "func:test_resolve_ranges_install_prerelease_true",
      "func:test_tarball_package_contract",
      "func:test_tarball_package_contract_fails_on_no_name",
      "func:test_tarball_pinned_package_contract_with_unrendered",
      "func:test_validation_error_when_namespace_is_missing_from_package_config",
      "func:test_validation_error_when_version_is_missing_from_package_config"
    ],
    "old_files": [
      "test_deps.py_gpt4_53ca3d12.py"
    ],
    "new_files": [
      "test_deps_61aa2a.py"
    ]
  },
  {
    "file_signature": [
      "class:SchemaGenericTestParser",
      "func:__init__",
      "func:_lookup_attached_node",
      "func:add_test_node",
      "func:create_test_node",
      "func:generate_unique_id",
      "func:get_compiled_path",
      "func:get_hashable_md",
      "func:parse_column_tests",
      "func:parse_file",
      "func:parse_from_dict",
      "func:parse_generic_test",
      "func:parse_node",
      "func:parse_test",
      "func:parse_tests",
      "func:parse_versioned_tests",
      "func:render_test_update",
      "func:render_with_context",
      "func:resource_type",
      "func:store_env_vars"
    ],
    "old_files": [
      "schema_generic_tests.py_gpt4_d32963a8.py"
    ],
    "new_files": [
      "schema_generic_tests_906d8a.py"
    ]
  },
  {
    "file_signature": [
      "func:_mock_blu_rtv_device",
      "func:_mock_rpc_device",
      "func:disconnected",
      "func:event",
      "func:events",
      "func:initialized",
      "func:mock_bluetooth",
      "func:mock_coap",
      "func:mock_light_set_state",
      "func:mock_white_light_set_state",
      "func:mock_ws_server",
      "func:online",
      "func:update",
      "func:update_reply"
    ],
    "old_files": [
      "conftest.py_gpt4_8f499602.py"
    ],
    "new_files": [
      "conftest_04471e.py"
    ]
  },
  {
    "file_signature": [
      "class:Error",
      "class:Warning",
      "func:__eq__",
      "func:__hash__",
      "func:__init__",
      "func:__ne__",
      "func:__repr__",
      "func:__str__",
      "func:_check_for_exception_catch",
      "func:_check_for_setattr",
      "func:add",
      "func:add_attribute_error",
      "func:check_hasattr",
      "func:check_match",
      "func:check_try_for_except",
      "func:code",
      "func:column",
      "func:line"
    ],
    "old_files": [
      "analysis.py_gpt4_7bc9f5b1.py"
    ],
    "new_files": [
      "analysis_98a850.py"
    ]
  },
  {
    "file_signature": [
      "func:ephemeral_model",
      "func:ext_model",
      "func:ext_source",
      "func:ext_source_2",
      "func:ext_source_id_unique",
      "func:ext_source_other",
      "func:ext_source_other_2",
      "func:files",
      "func:macro_default_test_not_null",
      "func:macro_default_test_unique",
      "func:macro_materialization_table_default",
      "func:macro_test_not_null",
      "func:macro_test_unique",
      "func:macros",
      "func:make_exposure",
      "func:make_generic_test",
      "func:make_group",
      "func:make_macro",
      "func:make_manifest",
      "func:make_metric",
      "func:make_model",
      "func:make_not_null_test",
      "func:make_saved_query",
      "func:make_seed",
      "func:make_semantic_model",
      "func:make_singular_test",
      "func:make_source",
      "func:make_unique_test",
      "func:make_unit_test",
      "func:manifest",
      "func:metric",
      "func:metricflow_time_spine_model",
      "func:metrics",
      "func:namespace_model",
      "func:namespaced_seed",
      "func:namespaced_union_model",
      "func:nodes",
      "func:saved_queries",
      "func:saved_query",
      "func:seed",
      "func:semantic_model",
      "func:semantic_models",
      "func:source",
      "func:sources",
      "func:table_id_not_null",
      "func:table_id_unique",
      "func:table_model",
      "func:table_model_csv",
      "func:table_model_py",
      "func:union_model",
      "func:unit_test_table_model",
      "func:unit_tests",
      "func:versioned_model_v1",
      "func:versioned_model_v12_string",
      "func:versioned_model_v2",
      "func:versioned_model_v3",
      "func:versioned_model_v4_nested_dir",
      "func:view_id_unique",
      "func:view_model",
      "func:view_test_nothing"
    ],
    "old_files": [
      "manifest.py_gpt4_c8979c4a.py"
    ],
    "new_files": [
      "manifest_87d3d1.py"
    ]
  },
  {
    "file_signature": [
      "class:ConditionalRandomField",
      "func:__init__",
      "func:_input_likelihood",
      "func:_joint_likelihood",
      "func:allowed_transitions",
      "func:forward",
      "func:is_transition_allowed",
      "func:reset_parameters",
      "func:viterbi_tags"
    ],
    "old_files": [
      "conditional_random_field.py_gpt4_b0709573.py"
    ],
    "new_files": [
      "conditional_random_field_4f2ecd.py"
    ]
  },
  {
    "file_signature": [
      "class:Crossover",
      "class:DifferentialEvolution",
      "class:_DE",
      "func:__init__",
      "func:_internal_ask_candidate",
      "func:_internal_tell_candidate",
      "func:_internal_tell_not_asked",
      "func:apply",
      "func:onepoint",
      "func:recommend",
      "func:rotated_twopoints",
      "func:set_objective_weights",
      "func:twopoints",
      "func:variablewise",
      "func:voronoi"
    ],
    "old_files": [
      "differentialevolution.py_gpt4_3f237df5.py"
    ],
    "new_files": [
      "differentialevolution_f6d97d.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncStreamIterator",
      "class:AsyncStreamReaderMixin",
      "class:ChunkTupleAsyncStreamIterator",
      "class:DataQueue",
      "class:EmptyStreamReader",
      "class:EofStream",
      "class:StreamReader",
      "func:__aiter__",
      "func:__init__",
      "func:__len__",
      "func:__repr__",
      "func:_read_nowait",
      "func:_read_nowait_chunk",
      "func:at_eof",
      "func:begin_http_chunk_receiving",
      "func:end_http_chunk_receiving",
      "func:exception",
      "func:feed_data",
      "func:feed_eof",
      "func:get_read_buffer_limits",
      "func:is_eof",
      "func:iter_any",
      "func:iter_chunked",
      "func:iter_chunks",
      "func:on_eof",
      "func:read_nowait",
      "func:set_exception",
      "func:unread_data"
    ],
    "old_files": [
      "streams.py_gpt4_06214fcc.py"
    ],
    "new_files": [
      "streams_d2f3a4.py"
    ]
  },
  {
    "file_signature": [
      "class:HomeAccessory",
      "class:HomeBridge",
      "class:HomeDriver",
      "class:HomeIIDManager",
      "func:__init__",
      "func:_update_available_from_state",
      "func:async_call_service",
      "func:async_reload",
      "func:async_stop",
      "func:async_update_battery",
      "func:async_update_event_state_callback",
      "func:async_update_linked_battery_callback",
      "func:async_update_linked_battery_charging_callback",
      "func:async_update_state",
      "func:async_update_state_callback",
      "func:available",
      "func:get_accessory",
      "func:get_iid_for_obj",
      "func:pair",
      "func:run",
      "func:setup_message",
      "func:unpair"
    ],
    "old_files": [
      "accessories.py_gpt4_99a8bc17.py"
    ],
    "new_files": [
      "accessories_b90bda.py"
    ]
  },
  {
    "file_signature": [
      "class:TestApplicationGraphBuilder",
      "func:bar",
      "func:connect",
      "func:create_config",
      "func:disconnect",
      "func:foo",
      "func:message",
      "func:new_handler",
      "func:second",
      "func:test_all_lambda_functions_share_managed_layer",
      "func:test_autogen_policy_for_function",
      "func:test_can_build_app_with_domain_name",
      "func:test_can_build_lambda_function_app_with_reserved_concurrency",
      "func:test_can_build_lambda_function_app_with_vpc_config",
      "func:test_can_build_lambda_function_with_layers",
      "func:test_can_build_private_rest_api",
      "func:test_can_build_private_rest_api_custom_policy",
      "func:test_can_build_rest_api",
      "func:test_can_build_rest_api_with_authorizer",
      "func:test_can_build_single_lambda_function_app",
      "func:test_can_build_single_lambda_function_app_with_log_retention",
      "func:test_can_build_single_lambda_function_app_with_managed_layer",
      "func:test_can_create_ddb_event_handler",
      "func:test_can_create_kinesis_event_handler",
      "func:test_can_create_s3_event_handler",
      "func:test_can_create_sns_event_handler",
      "func:test_can_create_sqs_event_handler",
      "func:test_can_create_sqs_handler_with_queue_arn",
      "func:test_can_create_websocket_api_with_domain_name",
      "func:test_can_create_websocket_app_missing_connect",
      "func:test_can_create_websocket_app_missing_disconnect",
      "func:test_can_create_websocket_app_missing_message",
      "func:test_can_create_websocket_event_handler",
      "func:test_cloudwatch_event_models",
      "func:test_exception_raised_when_missing_vpc_params",
      "func:test_multiple_lambda_functions_share_role_and_package",
      "func:test_scheduled_event_models",
      "func:test_vpc_trait_added_when_vpc_configured",
      "func:websocket_app_without_connect",
      "func:websocket_app_without_disconnect",
      "func:websocket_app_without_message"
    ],
    "old_files": [
      "test_appgraph.py_gpt4_d2cf8562.py"
    ],
    "new_files": [
      "test_appgraph_6f35e2.py"
    ]
  },
  {
    "file_signature": [
      "class:_Options",
      "func:__contains__",
      "func:__delitem__",
      "func:__getitem__",
      "func:__init__",
      "func:__setitem__",
      "func:_get_canonical_key",
      "func:andrews_curves",
      "func:autocorrelation_plot",
      "func:bootstrap_plot",
      "func:deregister",
      "func:lag_plot",
      "func:parallel_coordinates",
      "func:radviz",
      "func:register",
      "func:reset",
      "func:scatter_matrix",
      "func:table",
      "func:use"
    ],
    "old_files": [
      "_misc.py_gpt4_e437bff3.py"
    ],
    "new_files": [
      "_misc_3826f1.py"
    ]
  },
  {
    "file_signature": [
      "class:SerializedStore",
      "class:Store",
      "class:_SerializedStoreItemsView",
      "class:_SerializedStoreKeysView",
      "class:_SerializedStoreValuesView",
      "func:__contains__",
      "func:__delitem__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__setitem__",
      "func:_clear",
      "func:_contains",
      "func:_decode_key",
      "func:_decode_value",
      "func:_del",
      "func:_encode_key",
      "func:_encode_value",
      "func:_get",
      "func:_items_decoded",
      "func:_iteritems",
      "func:_iterkeys",
      "func:_itervalues",
      "func:_keys_decoded",
      "func:_repr_info",
      "func:_set",
      "func:_size",
      "func:_values_decoded",
      "func:apply_changelog_batch",
      "func:clear",
      "func:items",
      "func:keys",
      "func:label",
      "func:persisted_offset",
      "func:set_persisted_offset",
      "func:values"
    ],
    "old_files": [
      "base.py_gpt4_aafd8625.py"
    ],
    "new_files": [
      "base_ce86d4.py"
    ]
  },
  {
    "file_signature": [
      "class:AlmostRegularTransformer",
      "class:MediumTransformer",
      "class:SmallTransformer",
      "class:TestTransformerToolkit",
      "class:TinyTransformer",
      "func:__init__",
      "func:forward",
      "func:setup_method",
      "func:test_combination_of_two_different_berts",
      "func:test_create_embedder_using_toolkit",
      "func:test_end_to_end",
      "func:test_use_first_four_layers_of_pretrained",
      "func:test_use_selected_layers_of_bert_for_different_purposes"
    ],
    "old_files": [
      "toolkit_test.py_gpt4_4397b6b3.py"
    ],
    "new_files": [
      "toolkit_test_11b0e6.py"
    ]
  },
  {
    "file_signature": [
      "func:cleanup_report_schedule",
      "func:create_dashboard_report",
      "func:create_report_notification",
      "func:insert_report_schedule",
      "func:reset_key_values"
    ],
    "old_files": [
      "utils.py_gpt4_4ba154ec.py"
    ],
    "new_files": [
      "utils_9c5ea6.py"
    ]
  },
  {
    "file_signature": [
      "class:Iterator",
      "class:Module_six_moves_urllib",
      "class:Module_six_moves_urllib_error",
      "class:Module_six_moves_urllib_parse",
      "class:Module_six_moves_urllib_request",
      "class:Module_six_moves_urllib_response",
      "class:Module_six_moves_urllib_robotparser",
      "class:MovedAttribute",
      "class:MovedModule",
      "class:X",
      "class:_LazyDescr",
      "class:_LazyModule",
      "class:_MovedItems",
      "class:_SixMetaPathImporter",
      "class:metaclass",
      "func:__dir__",
      "func:__get__",
      "func:__get_module",
      "func:__getattr__",
      "func:__init__",
      "func:__len__",
      "func:__new__",
      "func:_add_doc",
      "func:_add_module",
      "func:_get_module",
      "func:_import_module",
      "func:_resolve",
      "func:add_metaclass",
      "func:add_move",
      "func:advance_iterator",
      "func:assertCountEqual",
      "func:assertRaisesRegex",
      "func:assertRegex",
      "func:b",
      "func:byte2int",
      "func:callable",
      "func:create_bound_method",
      "func:create_unbound_method",
      "func:exec_",
      "func:find_module",
      "func:get_code",
      "func:get_unbound_function",
      "func:indexbytes",
      "func:is_package",
      "func:iteritems",
      "func:iterkeys",
      "func:iterlists",
      "func:itervalues",
      "func:load_module",
      "func:next",
      "func:print_",
      "func:python_2_unicode_compatible",
      "func:raise_from",
      "func:remove_move",
      "func:reraise",
      "func:u",
      "func:with_metaclass",
      "func:wrapper",
      "func:wraps",
      "func:write"
    ],
    "old_files": [
      "six.py_gpt4_06ecd4c4.py"
    ],
    "new_files": [
      "six_75db7b.py",
      "six_36a467.py"
    ]
  },
  {
    "file_signature": [
      "func:collect_translate_output_and_scores",
      "func:generate_digits_file",
      "func:generate_fast_align_lex",
      "func:generate_json_input_file_with_tgt_prefix",
      "func:generate_low_high_factors",
      "func:generate_odd_even_factors",
      "func:run_train_translate",
      "func:run_translate_restrict",
      "func:tmp_digits_dataset"
    ],
    "old_files": [
      "test_utils.py_gpt4_ef0b5816.py"
    ],
    "new_files": [
      "test_utils_121373.py"
    ]
  },
  {
    "file_signature": [
      "class:Dataset",
      "class:EvaluationData",
      "class:Factors",
      "class:IntendedUse",
      "class:Metrics",
      "class:ModelCard",
      "class:ModelCardInfo",
      "class:ModelCaveatsAndRecommendations",
      "class:ModelDetails",
      "class:ModelEthicalConsiderations",
      "class:ModelUsage",
      "class:Paper",
      "class:QuantitativeAnalyses",
      "class:TrainingData",
      "func:__init__",
      "func:__str__",
      "func:get_description",
      "func:to_dict"
    ],
    "old_files": [
      "model_card.py_gpt4_55460c7b.py"
    ],
    "new_files": [
      "model_card_7b7f62.py"
    ]
  },
  {
    "file_signature": [
      "class:ResponseHandler",
      "func:__init__",
      "func:_drop_timeout",
      "func:_on_read_timeout",
      "func:_reschedule_timeout",
      "func:close",
      "func:connection_lost",
      "func:data_received",
      "func:eof_received",
      "func:force_close",
      "func:is_connected",
      "func:pause_reading",
      "func:read_timeout",
      "func:resume_reading",
      "func:set_exception",
      "func:set_parser",
      "func:set_response_params",
      "func:should_close",
      "func:start_timeout",
      "func:upgraded"
    ],
    "old_files": [
      "client_proto.py_gpt4_b5fecce6.py"
    ],
    "new_files": [
      "client_proto_8b80d0.py"
    ]
  },
  {
    "file_signature": [
      "class:test_Sensor",
      "class:test_SensorDelegate",
      "func:assignor",
      "func:consumer",
      "func:event",
      "func:message",
      "func:producer",
      "func:req",
      "func:response",
      "func:sensor",
      "func:sensors",
      "func:stream",
      "func:table",
      "func:test_asdict",
      "func:test_on_assignment",
      "func:test_on_commit",
      "func:test_on_commit_completed",
      "func:test_on_commit_initiated",
      "func:test_on_message_in",
      "func:test_on_message_out",
      "func:test_on_rebalance",
      "func:test_on_send",
      "func:test_on_send_completed",
      "func:test_on_send_error",
      "func:test_on_send_initiated",
      "func:test_on_stream_event_in",
      "func:test_on_stream_event_in_out",
      "func:test_on_stream_event_out",
      "func:test_on_table_del",
      "func:test_on_table_get",
      "func:test_on_table_set",
      "func:test_on_topic_buffer_full",
      "func:test_on_web_request",
      "func:test_remove",
      "func:test_repr",
      "func:topic",
      "func:view"
    ],
    "old_files": [
      "test_base.py_gpt4_6611b4aa.py"
    ],
    "new_files": [
      "test_base_299dbf.py"
    ]
  },
  {
    "file_signature": [
      "class:ArtificialFunction",
      "class:ArtificialVariable",
      "class:FarOptimumFunction",
      "func:__init__",
      "func:_initialize",
      "func:_monofunc",
      "func:_multifunc",
      "func:_noisy_call",
      "func:_short_repr",
      "func:_transform",
      "func:compute_pseudotime",
      "func:dimension",
      "func:evaluation_function",
      "func:function_from_transform",
      "func:itercases",
      "func:list_sorted_function_names",
      "func:noisy_function",
      "func:process"
    ],
    "old_files": [
      "functionlib.py_gpt4_9ac1b2ed.py"
    ],
    "new_files": [
      "functionlib_51de18.py"
    ]
  },
  {
    "file_signature": [
      "class:ApiKey",
      "class:ApiKeyStatus",
      "func:__init__",
      "func:__repr__",
      "func:count",
      "func:create",
      "func:delete",
      "func:find_all",
      "func:find_by_id",
      "func:find_by_user",
      "func:from_db",
      "func:from_document",
      "func:from_record",
      "func:parse",
      "func:serialize",
      "func:status",
      "func:type",
      "func:update",
      "func:verify_key"
    ],
    "old_files": [
      "key.py_gpt4_17750007.py"
    ],
    "new_files": [
      "key_d8a5a1.py"
    ]
  },
  {
    "file_signature": [
      "class:Alert",
      "func:__init__",
      "func:__repr__",
      "func:_get_hist_info",
      "func:add_note",
      "func:create",
      "func:deduplicate",
      "func:delete",
      "func:delete_find_all",
      "func:delete_note",
      "func:find_all",
      "func:find_by_id",
      "func:from_action",
      "func:from_db",
      "func:from_document",
      "func:from_expired",
      "func:from_record",
      "func:from_status",
      "func:from_timeout",
      "func:get_alert_history",
      "func:get_alert_notes",
      "func:get_body",
      "func:get_count",
      "func:get_counts_by_severity",
      "func:get_counts_by_status",
      "func:get_environments",
      "func:get_groups",
      "func:get_history",
      "func:get_id",
      "func:get_services",
      "func:get_status_and_value",
      "func:get_tags",
      "func:get_top10_count",
      "func:get_top10_flapping",
      "func:get_top10_standing",
      "func:get_topn_count",
      "func:get_topn_flapping",
      "func:get_topn_standing",
      "func:housekeeping",
      "func:is_blackout",
      "func:is_correlated",
      "func:is_duplicate",
      "func:is_flapping",
      "func:is_suppressed",
      "func:parse",
      "func:serialize",
      "func:set_status",
      "func:tag",
      "func:tag_find_all",
      "func:untag",
      "func:untag_find_all",
      "func:update",
      "func:update_attributes",
      "func:update_attributes_find_all",
      "func:update_tags"
    ],
    "old_files": [
      "alert.py_gpt4_b4a76035.py"
    ],
    "new_files": [
      "alert_f8da8a.py"
    ]
  },
  {
    "file_signature": [
      "func:get_all_committers",
      "func:get_assignee_string",
      "func:get_commits_comment_action_message",
      "func:get_commits_content",
      "func:get_create_branch_event_message",
      "func:get_force_push_commits_event_message",
      "func:get_issue_event_message",
      "func:get_issue_labeled_or_unlabeled_event_message",
      "func:get_issue_milestoned_or_demilestoned_event_message",
      "func:get_pull_request_event_message",
      "func:get_push_commits_event_message",
      "func:get_push_tag_event_message",
      "func:get_release_event_message",
      "func:get_remove_branch_event_message",
      "func:get_short_sha"
    ],
    "old_files": [
      "git.py_gpt4_e0829e70.py"
    ],
    "new_files": [
      "git_90c119.py"
    ]
  },
  {
    "file_signature": [
      "class:TextClassificationJsonReader",
      "func:__init__",
      "func:_read",
      "func:_truncate",
      "func:apply_token_indexers",
      "func:text_to_instance"
    ],
    "old_files": [
      "text_classification_json.py_gpt4_45388262.py"
    ],
    "new_files": [
      "text_classification_json_d0a412.py"
    ]
  },
  {
    "file_signature": [
      "func:_join_split_log",
      "func:clean_logs",
      "func:fold_iter",
      "func:get_perturbed_columns",
      "func:kwdissoc",
      "func:parallel_validator",
      "func:parallel_validator_iteration",
      "func:validator",
      "func:validator_iteration"
    ],
    "old_files": [
      "validator.py_gpt4_af420d1c.py"
    ],
    "new_files": [
      "validator_71103e.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPServer",
      "class:_CallableAdapter",
      "class:_HTTPRequestContext",
      "class:_ProxyAdapter",
      "func:__init__",
      "func:__str__",
      "func:_apply_xheaders",
      "func:_cleanup",
      "func:_unapply_xheaders",
      "func:configurable_base",
      "func:configurable_default",
      "func:data_received",
      "func:finish",
      "func:handle_stream",
      "func:headers_received",
      "func:initialize",
      "func:on_close",
      "func:on_connection_close",
      "func:start_request"
    ],
    "old_files": [
      "httpserver.py_gpt4_064c87b3.py"
    ],
    "new_files": [
      "httpserver_262275.py"
    ]
  },
  {
    "file_signature": [
      "class:GitPackageMixin",
      "class:GitPinnedPackage",
      "class:GitUnpinnedPackage",
      "func:__init__",
      "func:_checkout",
      "func:_fetch_metadata",
      "func:all_names",
      "func:from_contract",
      "func:get_subdirectory",
      "func:get_version",
      "func:incorporate",
      "func:install",
      "func:md5sum",
      "func:name",
      "func:nice_version_name",
      "func:resolved",
      "func:source_type",
      "func:to_dict"
    ],
    "old_files": [
      "git.py_gpt4_af760608.py"
    ],
    "new_files": [
      "git_adaf30.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractContext",
      "class:ClassContext",
      "class:CompForContext",
      "class:CompiledContext",
      "class:CompiledModuleContext",
      "class:FunctionContext",
      "class:ModuleContext",
      "class:NamespaceContext",
      "class:TreeContextMixin",
      "class:ValueContext",
      "func:__init__",
      "func:__repr__",
      "func:_check_for_additional_knowledge",
      "func:_get_global_filters_for_name",
      "func:code_lines",
      "func:create_context",
      "func:create_name",
      "func:create_value",
      "func:from_scope_node",
      "func:get_filters",
      "func:get_global_filter",
      "func:get_global_filters",
      "func:get_qualified_names",
      "func:get_root_context",
      "func:get_value",
      "func:goto",
      "func:infer_node",
      "func:is_bound_method",
      "func:is_builtins_module",
      "func:is_class",
      "func:is_compiled",
      "func:is_instance",
      "func:is_module",
      "func:is_stub",
      "func:name",
      "func:parent_context",
      "func:parent_scope",
      "func:predefine_names",
      "func:py__doc__",
      "func:py__file__",
      "func:py__getattribute__",
      "func:py__name__",
      "func:string_names",
      "func:tree_node"
    ],
    "old_files": [
      "context.py_gpt4_4ae68558.py"
    ],
    "new_files": [
      "context_48db84.py"
    ]
  },
  {
    "file_signature": [
      "class:CSSToExcelConverter",
      "class:CssExcelCell",
      "class:ExcelCell",
      "class:ExcelFormatter",
      "func:__call__",
      "func:__init__",
      "func:_border_style",
      "func:_call_uncached",
      "func:_convert_hex_to_excel",
      "func:_format_body",
      "func:_format_header",
      "func:_format_header_mi",
      "func:_format_header_regular",
      "func:_format_hierarchical_rows",
      "func:_format_regular_rows",
      "func:_format_value",
      "func:_generate_body",
      "func:_get_decoration",
      "func:_get_font_names",
      "func:_get_font_size",
      "func:_get_is_bold",
      "func:_get_is_italic",
      "func:_get_is_wrap_text",
      "func:_get_shadow",
      "func:_get_underline",
      "func:_get_vertical_alignment",
      "func:_get_width_name",
      "func:_has_aliases",
      "func:_is_hex_color",
      "func:_is_shorthand_color",
      "func:_pt_to_float",
      "func:_select_font_family",
      "func:_width_to_float",
      "func:build_alignment",
      "func:build_border",
      "func:build_fill",
      "func:build_font",
      "func:build_number_format",
      "func:build_xlstyle",
      "func:color_to_excel",
      "func:get_formatted_cells",
      "func:remove_none",
      "func:write"
    ],
    "old_files": [
      "excel.py_gpt4_a8ae7b91.py"
    ],
    "new_files": [
      "excel_26f18f.py"
    ]
  },
  {
    "file_signature": [
      "class:CallDetails",
      "class:EndMarkerReached",
      "class:OnErrorLeaf",
      "func:__init__",
      "func:_fuzzy_match",
      "func:_get_code",
      "func:_get_code_for_stack",
      "func:_get_index_and_key",
      "func:_get_signature_details_from_error_node",
      "func:_iter_arguments",
      "func:_list_arguments",
      "func:_start_match",
      "func:cache_signatures",
      "func:calculate_index",
      "func:count_positional_arguments",
      "func:def_ref_filter",
      "func:error_leaf",
      "func:filter_follow_imports",
      "func:get_module_names",
      "func:get_on_completion_name",
      "func:get_signature_details",
      "func:get_stack_at_position",
      "func:index",
      "func:infer",
      "func:is_module_scope_name",
      "func:iter_used_keyword_arguments",
      "func:keyword_name_str",
      "func:match",
      "func:remove_after_pos",
      "func:sorted_definitions",
      "func:split_search_string",
      "func:tokenize_without_endmarker",
      "func:validate_line_column",
      "func:wrapper"
    ],
    "old_files": [
      "helpers.py_gpt4_95f79f11.py"
    ],
    "new_files": [
      "helpers_4932dc.py"
    ]
  },
  {
    "file_signature": [
      "class:CollectionT",
      "class:GlobalTableT",
      "class:TableManagerT",
      "class:TableT",
      "class:WindowSetT",
      "class:WindowWrapperT",
      "class:WindowedItemsViewT",
      "class:WindowedValuesViewT",
      "class:_AppT",
      "class:_FieldDescriptorT",
      "class:_ModelArg",
      "class:_SchemaT",
      "func:__getitem__",
      "func:__iadd__",
      "func:__iand__",
      "func:__ifloordiv__",
      "func:__ilshift__",
      "func:__imod__",
      "func:__imul__",
      "func:__init__",
      "func:__ior__",
      "func:__ipow__",
      "func:__irshift__",
      "func:__isub__",
      "func:__iter__",
      "func:__itruediv__",
      "func:__ixor__",
      "func:_changelog_topic_name",
      "func:_relative_event",
      "func:_relative_field",
      "func:_relative_now",
      "func:_relative_timestamp",
      "func:_windowed_contains",
      "func:add",
      "func:apply",
      "func:apply_changelog_batch",
      "func:as_ansitable",
      "func:changelog_topic",
      "func:changelog_topics",
      "func:clone",
      "func:current",
      "func:delta",
      "func:get_relative_timestamp",
      "func:get_timestamp",
      "func:hopping",
      "func:keys",
      "func:name",
      "func:now",
      "func:on_commit",
      "func:on_del_key",
      "func:on_partitions_revoked",
      "func:on_rebalance_start",
      "func:on_recover",
      "func:on_set_key",
      "func:partition_for_key",
      "func:persist_offset_on_commit",
      "func:persisted_offset",
      "func:relative_to_field",
      "func:relative_to_now",
      "func:relative_to_stream",
      "func:reset_state",
      "func:send_changelog",
      "func:tumbling",
      "func:using_window",
      "func:value"
    ],
    "old_files": [
      "tables.py_gpt4_1d679a61.py"
    ],
    "new_files": [
      "tables_379478.py"
    ]
  },
  {
    "file_signature": [
      "class:CombinedLearningRateScheduler",
      "func:__init__",
      "func:current_scheduler",
      "func:get_values",
      "func:load_state_dict",
      "func:state_dict",
      "func:step",
      "func:step_batch"
    ],
    "old_files": [
      "combined.py_gpt4_3818a3a8.py"
    ],
    "new_files": [
      "combined_d7e31f.py"
    ]
  },
  {
    "file_signature": [
      "class:AbortedError",
      "class:ChaliceZipFile",
      "class:OSUtils",
      "class:PipeReader",
      "class:TimestampConverter",
      "class:UI",
      "func:__init__",
      "func:_create_zipinfo",
      "func:_relative_timestamp_to_datetime",
      "func:_validate_safe_extract",
      "func:_validate_single_tar_member",
      "func:abspath",
      "func:basename",
      "func:confirm",
      "func:copy",
      "func:copytree",
      "func:create_zip_file",
      "func:directory_exists",
      "func:dirname",
      "func:environ",
      "func:error",
      "func:extract_tarfile",
      "func:extract_zipfile",
      "func:file_exists",
      "func:get_directory_contents",
      "func:get_file_contents",
      "func:getting_started_prompt",
      "func:joinpath",
      "func:makedirs",
      "func:move",
      "func:mtime",
      "func:normalized_filename",
      "func:open",
      "func:open_zip",
      "func:parse_iso8601_timestamp",
      "func:pipe",
      "func:popen",
      "func:read",
      "func:record_deployed_values",
      "func:remove_file",
      "func:remove_stage_from_deployed_values",
      "func:rmtree",
      "func:serialize_to_json",
      "func:set_file_contents",
      "func:stat",
      "func:tempdir",
      "func:timestamp_to_datetime",
      "func:to_cfn_resource_name",
      "func:walk",
      "func:write"
    ],
    "old_files": [
      "utils.py_gpt4_e41edd61.py"
    ],
    "new_files": [
      "utils_51c496.py"
    ]
  },
  {
    "file_signature": [
      "class:OpenAPI",
      "func:_simple_slugify",
      "func:get_content",
      "func:get_field",
      "func:get_link",
      "func:get_schema_definitions",
      "func:load",
      "func:lookup"
    ],
    "old_files": [
      "openapi.py_gpt4_03accd2a.py"
    ],
    "new_files": [
      "openapi_a5fc11.py"
    ]
  },
  {
    "file_signature": [
      "class:MyTable",
      "class:User",
      "class:test_Collection",
      "func:__post_init__",
      "func:_del_key",
      "func:_get_key",
      "func:_has_key",
      "func:_set_key",
      "func:as_ansitable",
      "func:get_stale",
      "func:hopping",
      "func:is_stale",
      "func:mock_ranges",
      "func:on_sleep",
      "func:table",
      "func:test__human_channel",
      "func:test__join",
      "func:test__maybe_del_key_ttl",
      "func:test__maybe_set_key_ttl",
      "func:test__verify_source_topic_partitions",
      "func:test_and",
      "func:test_apply_changelog_batch",
      "func:test_apply_window_op",
      "func:test_clone",
      "func:test_combine",
      "func:test_contribute_to_stream",
      "func:test_copy",
      "func:test_hash",
      "func:test_info",
      "func:test_inner_join",
      "func:test_join",
      "func:test_key_type_bytes_implies_raw_serializer",
      "func:test_label",
      "func:test_left_join",
      "func:test_new_changelog_topic__default_compacting",
      "func:test_new_changelog_topic__default_deleting",
      "func:test_new_changelog_topic__window_expires",
      "func:test_on_changelog_sent",
      "func:test_on_changelog_sent__transactions",
      "func:test_outer_join",
      "func:test_partition_for_key__partitioner",
      "func:test_persisted_offset",
      "func:test_relative_event",
      "func:test_relative_event__raises_if_no_event",
      "func:test_relative_field",
      "func:test_relative_field__raises_if_no_event",
      "func:test_relative_now",
      "func:test_relative_now__no_event",
      "func:test_relative_timestamp",
      "func:test_repr_info",
      "func:test_reset_state",
      "func:test_send_changelog",
      "func:test_send_changelog__custom_serializers",
      "func:test_send_changelog__no_current_event",
      "func:test_set_del_windowed",
      "func:test_shortlabel",
      "func:test_should_expire_keys",
      "func:test_to_key",
      "func:test_to_value",
      "func:test_window_ranges",
      "func:test_windowed_delta",
      "func:test_windowed_now",
      "func:test_windowed_timestamp",
      "func:tumbling",
      "func:using_window"
    ],
    "old_files": [
      "test_base.py_gpt4_6c089270.py"
    ],
    "new_files": [
      "test_base_fc0d64.py"
    ]
  },
  {
    "file_signature": [
      "func:download_response",
      "func:format_certificate",
      "func:format_request_headers",
      "func:format_response_headers",
      "func:get_lexer_for_response",
      "func:handle_help",
      "func:main",
      "func:print_help",
      "func:print_request_headers",
      "func:print_response",
      "func:print_response_headers",
      "func:trace",
      "func:validate_auth",
      "func:validate_json"
    ],
    "old_files": [
      "_main.py_gpt4_93f26c03.py"
    ],
    "new_files": [
      "_main_43a52e.py"
    ]
  },
  {
    "file_signature": [
      "class:ComprehensionMixin",
      "class:DictComprehension",
      "class:DictLiteralValue",
      "class:FakeDict",
      "class:FakeList",
      "class:FakeTuple",
      "class:Generator",
      "class:GeneratorBase",
      "class:GeneratorComprehension",
      "class:IterableMixin",
      "class:ListComprehension",
      "class:MergedArray",
      "class:Sequence",
      "class:SequenceLiteralValue",
      "class:SetComprehension",
      "class:Slice",
      "class:_BaseComprehension",
      "class:_DictKeyMixin",
      "class:_DictMixin",
      "class:_FakeSequence",
      "func:__init__",
      "func:__repr__",
      "func:_cached_generics",
      "func:_dict_keys",
      "func:_dict_values",
      "func:_get_cls",
      "func:_get_comp_for_context",
      "func:_get_generics",
      "func:_get_wrapped_value",
      "func:_imitate_items",
      "func:_imitate_values",
      "func:_iter",
      "func:_iterate",
      "func:_nested",
      "func:_next",
      "func:_values",
      "func:comprehension_from_atom",
      "func:exact_key_items",
      "func:get",
      "func:get_annotated_class_object",
      "func:get_key_values",
      "func:get_mapping_item_values",
      "func:get_safe_value",
      "func:get_tree_entries",
      "func:name",
      "func:parent",
      "func:py__bool__",
      "func:py__getitem__",
      "func:py__iter__",
      "func:py__len__",
      "func:py__next__",
      "func:py__simple_getitem__",
      "func:py__stop_iteration_returns",
      "func:unpack_tuple_to_dict"
    ],
    "old_files": [
      "iterable.py_gpt4_6250a1ba.py"
    ],
    "new_files": [
      "iterable_71c277.py"
    ]
  },
  {
    "file_signature": [
      "class:UtilityMeterSensor",
      "class:UtilitySensorExtraStoredData",
      "func:__init__",
      "func:_change_status",
      "func:_config_scheduler",
      "func:_validate_state",
      "func:as_dict",
      "func:async_reading",
      "func:async_source_tracking",
      "func:async_tariff_change",
      "func:calculate_adjustment",
      "func:device_class",
      "func:extra_restore_state_data",
      "func:extra_state_attributes",
      "func:from_dict",
      "func:start",
      "func:state_class",
      "func:validate_is_number"
    ],
    "old_files": [
      "sensor.py_gpt4_b87a0a59.py"
    ],
    "new_files": [
      "sensor_c48c5b.py"
    ]
  },
  {
    "file_signature": [
      "class:AmqpDsn",
      "class:AnyHttpUrl",
      "class:AnyUrl",
      "class:CockroachDsn",
      "class:EmailStr",
      "class:FileUrl",
      "class:HostParts",
      "class:HttpUrl",
      "class:IPvAnyAddress",
      "class:IPvAnyInterface",
      "class:IPvAnyNetwork",
      "class:KafkaDsn",
      "class:MongoDsn",
      "class:MultiHostDsn",
      "class:NameEmail",
      "class:Parts",
      "class:PostgresDsn",
      "class:RedisDsn",
      "func:__eq__",
      "func:__get_validators__",
      "func:__init__",
      "func:__modify_schema__",
      "func:__new__",
      "func:__repr__",
      "func:__str__",
      "func:_build_url",
      "func:_match_url",
      "func:_validate_port",
      "func:apply_default_parts",
      "func:ascii_domain_regex",
      "func:build",
      "func:get_default_parts",
      "func:host_regex",
      "func:import_email_validator",
      "func:int_domain_regex",
      "func:multi_host_url_regex",
      "func:stricturl",
      "func:url_regex",
      "func:validate",
      "func:validate_email",
      "func:validate_host",
      "func:validate_parts"
    ],
    "old_files": [
      "networks.py_gpt4_5d69cfc5.py"
    ],
    "new_files": [
      "networks_4fcfb8.py"
    ]
  },
  {
    "file_signature": [
      "class:ChunkState",
      "class:DeflateBuffer",
      "class:HeadersParser",
      "class:HttpParser",
      "class:HttpPayloadParser",
      "class:HttpRequestParser",
      "class:HttpResponseParser",
      "class:ParseState",
      "class:RawRequestMessage",
      "class:RawResponseMessage",
      "func:__init__",
      "func:_is_chunked_te",
      "func:_is_supported_upgrade",
      "func:begin_http_chunk_receiving",
      "func:end_http_chunk_receiving",
      "func:feed_data",
      "func:feed_eof",
      "func:get_content_length",
      "func:parse_headers",
      "func:parse_message",
      "func:set_exception",
      "func:set_upgraded"
    ],
    "old_files": [
      "http_parser.py_gpt4_b7839247.py"
    ],
    "new_files": [
      "http_parser_0d16fa.py"
    ]
  },
  {
    "file_signature": [
      "func:get_full_significant_states_with_session",
      "func:get_last_state_changes",
      "func:get_significant_states",
      "func:get_significant_states_with_session",
      "func:state_changes_during_period"
    ],
    "old_files": [
      "__init__.py_gpt4_0ebca355.py"
    ],
    "new_files": [
      "__init___4bc6fc.py"
    ]
  },
  {
    "file_signature": [
      "class:ImplicitNSInfo",
      "func:__init__",
      "func:_find_module",
      "func:_find_module_py33",
      "func:_from_loader",
      "func:_get_init_path",
      "func:_get_source",
      "func:_iter_module_names",
      "func:_test_print",
      "func:_test_raise_error",
      "func:_zip_list_subdirectory",
      "func:create_simple_object",
      "func:get_builtin_module_names",
      "func:get_compiled_method_return",
      "func:get_module_info",
      "func:get_sys_path",
      "func:iter_module_names",
      "func:load_module",
      "func:safe_literal_eval"
    ],
    "old_files": [
      "functions.py_gpt4_02c2585e.py"
    ],
    "new_files": [
      "functions_b12404.py"
    ]
  },
  {
    "file_signature": [
      "func:_add_names_in_same_context",
      "func:_check_fs",
      "func:_dictionarize",
      "func:_find_defining_names",
      "func:_find_global_variables",
      "func:_find_names",
      "func:_find_project_modules",
      "func:_find_python_files_in_sys_path",
      "func:_resolve_names",
      "func:find_references",
      "func:get_module_contexts_containing_name",
      "func:gitignored_lines",
      "func:recurse_find_python_files",
      "func:recurse_find_python_folders_and_files",
      "func:search_in_file_ios"
    ],
    "old_files": [
      "references.py_gpt4_e8e53b01.py"
    ],
    "new_files": [
      "references_c4be98.py"
    ]
  },
  {
    "file_signature": [
      "func:_checkout",
      "func:_is_commit",
      "func:checkout",
      "func:clone",
      "func:clone_and_checkout",
      "func:get_current_sha",
      "func:list_tags",
      "func:remove_remote"
    ],
    "old_files": [
      "git.py_gpt4_08af83e3.py"
    ],
    "new_files": [
      "git_e2f7c0.py"
    ]
  },
  {
    "file_signature": [
      "func:album_fixture",
      "func:artist_albums_fixture",
      "func:children_200_fixture",
      "func:children_20_fixture",
      "func:children_300_fixture",
      "func:children_30_fixture",
      "func:empty_library_fixture",
      "func:empty_payload_fixture",
      "func:grandchildren_300_fixture",
      "func:hubs_fixture",
      "func:hubs_music_library_fixture",
      "func:library_fixture",
      "func:library_movies_all_fixture",
      "func:library_movies_collections_fixture",
      "func:library_movies_filtertypes_fixture",
      "func:library_movies_metadata_fixture",
      "func:library_movies_size_fixture",
      "func:library_movies_sort_fixture",
      "func:library_music_all_fixture",
      "func:library_music_collections_fixture",
      "func:library_music_metadata_fixture",
      "func:library_music_size_fixture",
      "func:library_music_sort_fixture",
      "func:library_sections_fixture",
      "func:library_tvshows_all_fixture",
      "func:library_tvshows_collections_fixture",
      "func:library_tvshows_metadata_fixture",
      "func:library_tvshows_size_episodes_fixture",
      "func:library_tvshows_size_fixture",
      "func:library_tvshows_size_seasons_fixture",
      "func:library_tvshows_sort_fixture",
      "func:livetv_sessions_fixture",
      "func:media_100_fixture",
      "func:media_1_fixture",
      "func:media_200_fixture",
      "func:media_30_fixture",
      "func:mock_plex_calls",
      "func:mock_setup_entry",
      "func:mock_websocket",
      "func:player_plexhtpc_resources_fixture",
      "func:player_plexweb_resources_fixture",
      "func:playlist_500_fixture",
      "func:playlists_fixture",
      "func:playqueue_1234_fixture",
      "func:playqueue_created_fixture",
      "func:plex_server_accounts_fixture",
      "func:plex_server_base_fixture",
      "func:plex_server_clients_fixture",
      "func:plex_server_default_fixture",
      "func:plex_server_url",
      "func:plextv_account_fixture",
      "func:plextv_resources_fixture",
      "func:plextv_resources_two_servers_fixture",
      "func:plextv_shared_users_fixture",
      "func:security_token_fixture",
      "func:session_base_fixture",
      "func:session_default_fixture",
      "func:session_live_tv_fixture",
      "func:session_new_user_fixture",
      "func:session_photo_fixture",
      "func:session_plexweb_fixture",
      "func:session_transient_fixture",
      "func:session_unknown_fixture",
      "func:setup_plex_server",
      "func:show_seasons_fixture",
      "func:sonos_resources_fixture",
      "func:update_check_fixture_new",
      "func:update_check_fixture_new_not_updatable",
      "func:update_check_fixture_nochange"
    ],
    "old_files": [
      "conftest.py_gpt4_27c9761e.py"
    ],
    "new_files": [
      "conftest_ca46fe.py"
    ]
  },
  {
    "file_signature": [
      "class:SimpleInfluence",
      "func:__init__",
      "func:_calculate_influence_scores",
      "func:_flatten_tensors",
      "func:get_hvp",
      "func:get_inverse_hvp_lissa"
    ],
    "old_files": [
      "simple_influence.py_gpt4_20464f95.py"
    ],
    "new_files": [
      "simple_influence_296df3.py"
    ]
  },
  {
    "file_signature": [
      "class:Model",
      "func:_BUILD_eq",
      "func:_BUILD_hash",
      "func:_BUILD_init",
      "func:__abstract_init__",
      "func:__init_subclass__",
      "func:__repr__",
      "func:_contribute_field_descriptors",
      "func:_contribute_methods",
      "func:_contribute_to_options",
      "func:_derive",
      "func:_from_data_field",
      "func:_humanize",
      "func:_init_subclass",
      "func:_itervalidate",
      "func:_maybe_namespace",
      "func:_maybe_reconstruct",
      "func:derive",
      "func:dumps",
      "func:is_valid",
      "func:loads",
      "func:make_final",
      "func:maybe_model",
      "func:to_representation",
      "func:validate",
      "func:validate_or_raise",
      "func:validation_errors"
    ],
    "old_files": [
      "base.py_gpt4_80b07b73.py"
    ],
    "new_files": [
      "base_4b5828.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractArguments",
      "class:ParamIssue",
      "class:TreeArguments",
      "class:TreeArgumentsWrapper",
      "class:ValuesArguments",
      "class:_AbstractArgumentsMixin",
      "func:__init__",
      "func:__repr__",
      "func:_as_tree_tuple_objects",
      "func:_iterate_star_args",
      "func:_parse_argument_clinic",
      "func:_star_star_dict",
      "func:argument_node",
      "func:context",
      "func:create_cached",
      "func:decorator",
      "func:get_calling_nodes",
      "func:iter_calling_names_with_star",
      "func:iterate_argument_clinic",
      "func:repack_with_argument_clinic",
      "func:trailer",
      "func:try_iter_content",
      "func:unpack",
      "func:unpack_arglist",
      "func:wrapper"
    ],
    "old_files": [
      "arguments.py_gpt4_8266a1b7.py"
    ],
    "new_files": [
      "arguments_a79ceb.py"
    ]
  },
  {
    "file_signature": [
      "class:FileResponse",
      "class:_FileResponseResult",
      "func:__init__",
      "func:_etag_match",
      "func:_get_file_path_stat_encoding",
      "func:_make_response",
      "func:_seek_and_read"
    ],
    "old_files": [
      "web_fileresponse.py_gpt4_f1957c13.py"
    ],
    "new_files": [
      "web_fileresponse_e008e1.py"
    ]
  },
  {
    "file_signature": [
      "class:MacroResolver",
      "class:TestMacroNamespace",
      "func:__init__",
      "func:_add_macro_to",
      "func:_build_internal_packages_namespace",
      "func:_build_macros_by_name",
      "func:add_macro",
      "func:add_macros",
      "func:get_from_package",
      "func:get_macro",
      "func:get_macro_id",
      "func:recursively_get_depends_on_macros"
    ],
    "old_files": [
      "macro_resolver.py_gpt4_62fd2587.py"
    ],
    "new_files": [
      "macro_resolver_ee125f.py"
    ]
  },
  {
    "file_signature": [
      "func:__internal_pivot_table",
      "func:_add_margins",
      "func:_all_key",
      "func:_build_names_mapper",
      "func:_compute_grand_margin",
      "func:_convert_by",
      "func:_generate_marginal_results",
      "func:_generate_marginal_results_without_values",
      "func:_get_names",
      "func:_normalize",
      "func:crosstab",
      "func:pivot",
      "func:pivot_table"
    ],
    "old_files": [
      "pivot.py_gpt4_366d7a7a.py"
    ],
    "new_files": [
      "pivot_1f30db.py"
    ]
  },
  {
    "file_signature": [
      "class:TestPreviousVersionState",
      "func:analyses",
      "func:compare_previous_results",
      "func:compare_previous_state",
      "func:generate_latest_manifest",
      "func:generate_latest_run_results",
      "func:macros",
      "func:models",
      "func:seeds",
      "func:snapshots",
      "func:test_backwards_compatible_run_results_versions",
      "func:test_backwards_compatible_versions",
      "func:test_compare_results_current",
      "func:test_compare_state_current",
      "func:test_get_manifest_schema_version",
      "func:test_nonbackwards_compatible_versions",
      "func:test_project",
      "func:tests"
    ],
    "old_files": [
      "test_previous_version_state.py_gpt4_89d24786.py"
    ],
    "new_files": [
      "test_previous_version_state_eb5537.py"
    ]
  },
  {
    "file_signature": [
      "class:Counter",
      "class:Gauge",
      "class:Timer",
      "func:__init__",
      "func:__repr__",
      "func:_time_in_millis",
      "func:decorated",
      "func:find_all",
      "func:from_db",
      "func:from_document",
      "func:from_record",
      "func:inc",
      "func:serialize",
      "func:set",
      "func:start_timer",
      "func:stop_timer",
      "func:timer",
      "func:wrapped"
    ],
    "old_files": [
      "metrics.py_gpt4_0e2b5a1a.py"
    ],
    "new_files": [
      "metrics_b562d7.py"
    ]
  },
  {
    "file_signature": [
      "class:CancunBackwardsHeader",
      "class:CancunBlock",
      "class:CancunBlockHeader",
      "func:__init__",
      "func:__str__",
      "func:deserialize",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash"
    ],
    "old_files": [
      "blocks.py_gpt4_5859508d.py"
    ],
    "new_files": [
      "blocks_abf4af.py"
    ]
  },
  {
    "file_signature": [
      "func:compute_gas_limit",
      "func:compute_gas_limit_bounds",
      "func:eth_now",
      "func:fill_header_params_from_parent",
      "func:new_timestamp_from_parent"
    ],
    "old_files": [
      "headers.py_gpt4_3581e504.py"
    ],
    "new_files": [
      "headers_8374b8.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPAccepted",
      "class:HTTPBadGateway",
      "class:HTTPBadRequest",
      "class:HTTPClientError",
      "class:HTTPConflict",
      "class:HTTPCreated",
      "class:HTTPError",
      "class:HTTPException",
      "class:HTTPExpectationFailed",
      "class:HTTPFailedDependency",
      "class:HTTPForbidden",
      "class:HTTPFound",
      "class:HTTPGatewayTimeout",
      "class:HTTPGone",
      "class:HTTPInsufficientStorage",
      "class:HTTPInternalServerError",
      "class:HTTPLengthRequired",
      "class:HTTPMethodNotAllowed",
      "class:HTTPMisdirectedRequest",
      "class:HTTPMove",
      "class:HTTPMovedPermanently",
      "class:HTTPMultipleChoices",
      "class:HTTPNetworkAuthenticationRequired",
      "class:HTTPNoContent",
      "class:HTTPNonAuthoritativeInformation",
      "class:HTTPNotAcceptable",
      "class:HTTPNotExtended",
      "class:HTTPNotFound",
      "class:HTTPNotImplemented",
      "class:HTTPNotModified",
      "class:HTTPOk",
      "class:HTTPPartialContent",
      "class:HTTPPaymentRequired",
      "class:HTTPPermanentRedirect",
      "class:HTTPPreconditionFailed",
      "class:HTTPPreconditionRequired",
      "class:HTTPProxyAuthenticationRequired",
      "class:HTTPRedirection",
      "class:HTTPRequestEntityTooLarge",
      "class:HTTPRequestHeaderFieldsTooLarge",
      "class:HTTPRequestRangeNotSatisfiable",
      "class:HTTPRequestTimeout",
      "class:HTTPRequestURITooLong",
      "class:HTTPResetContent",
      "class:HTTPSeeOther",
      "class:HTTPServerError",
      "class:HTTPServiceUnavailable",
      "class:HTTPSuccessful",
      "class:HTTPTemporaryRedirect",
      "class:HTTPTooManyRequests",
      "class:HTTPUnauthorized",
      "class:HTTPUnavailableForLegalReasons",
      "class:HTTPUnprocessableEntity",
      "class:HTTPUnsupportedMediaType",
      "class:HTTPUpgradeRequired",
      "class:HTTPUseProxy",
      "class:HTTPVariantAlsoNegotiates",
      "class:HTTPVersionNotSupported",
      "class:NotAppKeyWarning",
      "func:__bool__",
      "func:__getnewargs__",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:_initialize_default_reason",
      "func:allowed_methods",
      "func:headers",
      "func:link",
      "func:location",
      "func:method",
      "func:reason",
      "func:status",
      "func:text"
    ],
    "old_files": [
      "web_exceptions.py_gpt4_472a69e4.py"
    ],
    "new_files": [
      "web_exceptions_bbf405.py"
    ]
  },
  {
    "file_signature": [
      "class:MessageDict",
      "class:RawReactionRow",
      "class:ReactionDict",
      "func:build_dict_from_raw_db_row",
      "func:build_message_dict",
      "func:bulk_hydrate_recipient_info",
      "func:bulk_hydrate_sender_info",
      "func:extract_message_dict",
      "func:finalize_payload",
      "func:get_rendering_realm_id",
      "func:hydrate_recipient_info",
      "func:ids_to_dict",
      "func:message_to_encoded_cache",
      "func:messages_to_encoded_cache",
      "func:messages_to_encoded_cache_helper",
      "func:post_process_dicts",
      "func:save_message_rendered_content",
      "func:set_sender_avatar",
      "func:sew_messages_and_reactions",
      "func:sew_messages_and_submessages",
      "func:sew_submessages_and_reactions_to_msgs",
      "func:stringify_message_dict",
      "func:update_message_cache",
      "func:wide_dict"
    ],
    "old_files": [
      "message_cache.py_gpt4_ef44c5a4.py"
    ],
    "new_files": [
      "message_cache_dbda93.py"
    ]
  },
  {
    "file_signature": [
      "class:SequenceAccuracyTest",
      "func:multiple_runs",
      "func:test_distributed_sequence_accuracy",
      "func:test_get_metric_on_new_object_works",
      "func:test_multiple_distributed_runs",
      "func:test_sequence_accuracy",
      "func:test_sequence_accuracy_accumulates_and_resets_correctly",
      "func:test_sequence_accuracy_respects_mask"
    ],
    "old_files": [
      "sequence_accuracy_test.py_gpt4_9baac76e.py"
    ],
    "new_files": [
      "sequence_accuracy_test_b352af.py"
    ]
  },
  {
    "file_signature": [
      "class:IOU",
      "class:PFSConfig",
      "class:PFSInfo",
      "class:PFSProxy",
      "func:__init__",
      "func:_query_address_metadata",
      "func:_query_paths",
      "func:as_json",
      "func:check_pfs_for_production",
      "func:configure_pfs_or_exit",
      "func:create_current_iou",
      "func:get_last_iou",
      "func:get_pfs_info",
      "func:get_random_pfs",
      "func:get_valid_pfs_url",
      "func:make_iou",
      "func:post_pfs_feedback",
      "func:post_pfs_paths",
      "func:query_address_metadata",
      "func:query_paths",
      "func:sign",
      "func:update_iou"
    ],
    "old_files": [
      "pathfinding.py_gpt4_40519248.py"
    ],
    "new_files": [
      "pathfinding_7a5b8f.py"
    ]
  },
  {
    "file_signature": [
      "class:BooleanField",
      "class:BytesField",
      "class:CharField",
      "class:DatetimeField",
      "class:DecimalField",
      "class:FieldDescriptor",
      "class:FloatField",
      "class:IntegerField",
      "class:NumberField",
      "class:StringField",
      "func:__get__",
      "func:__init__",
      "func:__repr__",
      "func:__set__",
      "func:__set_name__",
      "func:_compile_type_expression",
      "func:_copy_descriptors",
      "func:_is_concrete_model",
      "func:_parents_path",
      "func:_prepare_type_expression",
      "func:as_dict",
      "func:clone",
      "func:field_for_type",
      "func:getattr",
      "func:ident",
      "func:lazy_coercion",
      "func:on_model_attached",
      "func:prepare_value",
      "func:related_models",
      "func:should_coerce",
      "func:to_python",
      "func:validate",
      "func:validate_all",
      "func:validation_error"
    ],
    "old_files": [
      "fields.py_gpt4_49602f5d.py"
    ],
    "new_files": [
      "fields_638399.py"
    ]
  },
  {
    "file_signature": [
      "class:LondonBackwardsHeader",
      "class:LondonBlock",
      "class:LondonBlockHeader",
      "class:LondonMiningHeader",
      "func:__init__",
      "func:__str__",
      "func:blob_gas_used",
      "func:deserialize",
      "func:excess_blob_gas",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash",
      "func:parent_beacon_block_root",
      "func:serialize",
      "func:withdrawals_root"
    ],
    "old_files": [
      "blocks.py_gpt4_268dfb6c.py"
    ],
    "new_files": [
      "blocks_a65ab4.py"
    ]
  },
  {
    "file_signature": [
      "class:RougeTest",
      "func:f1",
      "func:global_distributed_rouge",
      "func:setup_method",
      "func:test_distributed_rouge",
      "func:test_rouge",
      "func:test_rouge_with_zero_counts"
    ],
    "old_files": [
      "rouge_test.py_gpt4_057140f4.py"
    ],
    "new_files": [
      "rouge_test_960688.py"
    ]
  },
  {
    "file_signature": [
      "class:Loader",
      "class:NormDict",
      "func:SubLoader",
      "func:__contains__",
      "func:__delitem__",
      "func:__getitem__",
      "func:__init__",
      "func:__setitem__",
      "func:_add_properties",
      "func:add_context",
      "func:add_namespaces",
      "func:add_schemas",
      "func:check_file",
      "func:expand_url",
      "func:fetch",
      "func:fetch_text",
      "func:getid",
      "func:merge_properties",
      "func:resolve_all",
      "func:resolve_ref",
      "func:validate_link",
      "func:validate_links"
    ],
    "old_files": [
      "ref_resolver.py_gpt4_a5e6c61c.py"
    ],
    "new_files": [
      "ref_resolver_4b8223.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseParser",
      "class:ConfiguredParser",
      "class:Parser",
      "class:RelationUpdate",
      "class:SQLParser",
      "class:SimpleParser",
      "class:SimpleSQLParser",
      "func:__call__",
      "func:__init__",
      "func:_context_for",
      "func:_create_error_node",
      "func:_create_parsetime_node",
      "func:_mangle_hooks",
      "func:_update_node_relation_name",
      "func:add_result_node",
      "func:config_dict",
      "func:default_database",
      "func:default_schema",
      "func:generate_unique_id",
      "func:get_compiled_path",
      "func:get_fqn",
      "func:get_fqn_prefix",
      "func:initial_config",
      "func:parse_file",
      "func:parse_from_dict",
      "func:parse_node",
      "func:render_update",
      "func:render_with_context",
      "func:resource_type",
      "func:update_parsed_node_config",
      "func:update_parsed_node_config_dict",
      "func:update_parsed_node_relation_names"
    ],
    "old_files": [
      "base.py_gpt4_54c1c37b.py"
    ],
    "new_files": [
      "base_b5c467.py"
    ]
  },
  {
    "file_signature": [
      "func:_colorize_cache_key",
      "func:colorize_value",
      "func:filter_records",
      "func:get_time_display",
      "func:main",
      "func:nice_time_diff",
      "func:parse_log",
      "func:render",
      "func:render_fields",
      "func:replace",
      "func:rgb_color_picker",
      "func:transform_records",
      "func:truncate_logger_name"
    ],
    "old_files": [
      "json-log-to-html.py_gpt4_bd8f0d73.py"
    ],
    "new_files": [
      "json-log-to-html_6abdf7.py"
    ]
  },
  {
    "file_signature": [
      "class:MentionedUserGroup",
      "class:UserMessageNotificationsData",
      "func:__post_init__",
      "func:from_user_id_sets",
      "func:get_email_notification_trigger",
      "func:get_mentioned_user_group",
      "func:get_push_notification_trigger",
      "func:get_user_group_mentions_data",
      "func:is_email_notifiable",
      "func:is_notifiable",
      "func:is_push_notifiable",
      "func:trivially_should_not_notify",
      "func:user_allows_notifications_in_StreamTopic"
    ],
    "old_files": [
      "notification_data.py_gpt4_110f4c2c.py"
    ],
    "new_files": [
      "notification_data_d3e584.py"
    ]
  },
  {
    "file_signature": [
      "func:Body",
      "func:Cookie",
      "func:Depends",
      "func:File",
      "func:Form",
      "func:Header",
      "func:Path",
      "func:Query",
      "func:Security"
    ],
    "old_files": [
      "param_functions.py_gpt4_04bd1709.py"
    ],
    "new_files": [
      "param_functions_a348d9.py"
    ]
  },
  {
    "file_signature": [
      "class:Agent",
      "class:PowerSystem",
      "func:__init__",
      "func:_simulate_power_system",
      "func:block",
      "func:block24",
      "func:deblock24",
      "func:dimension",
      "func:get_num_vars",
      "func:get_output",
      "func:make_plots",
      "func:set_parameters"
    ],
    "old_files": [
      "core.py_gpt4_9f7a19d9.py"
    ],
    "new_files": [
      "core_a86387.py"
    ]
  },
  {
    "file_signature": [
      "class:TestPipelineGenLegacy",
      "class:TestPipelineGenV2",
      "func:generate_template",
      "func:pipeline_gen",
      "func:pipeline_params",
      "func:setup_method",
      "func:test_app_name_in_param_default",
      "func:test_build_extractor",
      "func:test_can_add_github_as_source_stage",
      "func:test_can_create_buildspec_v2",
      "func:test_can_extract_python_version",
      "func:test_can_generate_github_source",
      "func:test_can_provide_codebuild_image",
      "func:test_can_validate_python_version",
      "func:test_codebuild_resource",
      "func:test_codepipeline_resource",
      "func:test_default_version_range_locks_minor_version",
      "func:test_github_source_uses_secretsmanager_in_v2",
      "func:test_install_requirements_in_buildspec",
      "func:test_invalid_python_throws_error",
      "func:test_new_default_codebuild_image",
      "func:test_no_source_resource_when_using_github",
      "func:test_nonsense_py_version_throws_error",
      "func:test_python_36_in_param_default",
      "func:test_python_version_in_param_default",
      "func:test_source_repo_resource",
      "func:test_uses_v2_codebuild_spec",
      "func:test_validate_python_versions"
    ],
    "old_files": [
      "test_pipeline.py_gpt4_2e127b37.py"
    ],
    "new_files": [
      "test_pipeline_0fd84d.py"
    ]
  },
  {
    "file_signature": [
      "class:ExitCode",
      "class:TransformFilterAst",
      "func:_main",
      "func:filterfunc",
      "func:filterstr_to_filterfunc",
      "func:get_cookies_from_instagram",
      "func:http_status_code_list",
      "func:import_session",
      "func:main",
      "func:usage_string",
      "func:visit_Name"
    ],
    "old_files": [
      "__main__.py_gpt4_9161fe52.py"
    ],
    "new_files": [
      "__main___793293.py"
    ]
  },
  {
    "file_signature": [
      "class:Collection",
      "func:__and__",
      "func:__copy__",
      "func:__hash__",
      "func:__init__",
      "func:_apply_window_op",
      "func:_changelog_topic_name",
      "func:_del_key",
      "func:_del_windowed",
      "func:_get_key",
      "func:_has_key",
      "func:_human_channel",
      "func:_join",
      "func:_maybe_del_key_ttl",
      "func:_maybe_set_key_ttl",
      "func:_new_changelog_topic",
      "func:_new_store",
      "func:_new_store_by_url",
      "func:_on_changelog_sent",
      "func:_relative_event",
      "func:_relative_field",
      "func:_relative_now",
      "func:_relative_timestamp",
      "func:_repr_info",
      "func:_send_changelog",
      "func:_serializer_from_type",
      "func:_set_key",
      "func:_set_windowed",
      "func:_should_expire_keys",
      "func:_to_key",
      "func:_to_value",
      "func:_verify_source_topic_partitions",
      "func:_window_ranges",
      "func:_windowed_contains",
      "func:_windowed_delta",
      "func:_windowed_now",
      "func:_windowed_timestamp",
      "func:apply_changelog_batch",
      "func:changelog_topic",
      "func:changelog_topic_name",
      "func:clone",
      "func:combine",
      "func:contribute_to_stream",
      "func:data",
      "func:handler",
      "func:info",
      "func:inner_join",
      "func:join",
      "func:label",
      "func:left_join",
      "func:on_recover",
      "func:outer_join",
      "func:partition_for_key",
      "func:persisted_offset",
      "func:reset_state",
      "func:send_changelog",
      "func:shortlabel",
      "func:to_value"
    ],
    "old_files": [
      "base.py_gpt4_dfa8658b.py"
    ],
    "new_files": [
      "base_9c14fc.py"
    ]
  },
  {
    "file_signature": [
      "class:B",
      "class:EnvCase",
      "class:OtherSchedulingStrategy",
      "class:test_BootStrategy",
      "class:test_settings",
      "func:App",
      "func:_dummy_partitioner",
      "func:assert_config_equivalent",
      "func:assert_expected",
      "func:test_app_config",
      "func:test_broker_as_URL",
      "func:test_broker_with_no_scheme_set",
      "func:test_cache_as_URL",
      "func:test_compat_client_id",
      "func:test_compat_commit_interval",
      "func:test_compat_create_reply_topic",
      "func:test_compat_default_partitions",
      "func:test_compat_num_standby_replicas",
      "func:test_compat_replication_factor",
      "func:test_compat_stream_ack_cancelled_tasks",
      "func:test_compat_stream_ack_exceptions",
      "func:test_compat_url",
      "func:test_consumer_api_version__defaults_to_broker",
      "func:test_custom_host_port_to_canonical",
      "func:test_datadir_as_Path",
      "func:test_defaults",
      "func:test_disable_kafka",
      "func:test_disable_kafka_consumer",
      "func:test_env",
      "func:test_env_with_prefix",
      "func:test_id_no_version",
      "func:test_init",
      "func:test_kafka_consumer",
      "func:test_kafka_producer",
      "func:test_producer_api_version__defaults_to_broker",
      "func:test_producer_linger_ms__compat",
      "func:test_reply_prefix_unique",
      "func:test_sensors",
      "func:test_store_as_URL",
      "func:test_tabledir_is_relative_to_path",
      "func:test_version_cannot_be_zero",
      "func:test_warns_when_key_already_configured",
      "func:test_web_as_URL",
      "func:test_web_server"
    ],
    "old_files": [
      "test_app.py_gpt4_7045e04c.py"
    ],
    "new_files": [
      "test_app_e3d659.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseName",
      "class:BaseSignature",
      "class:Completion",
      "class:Name",
      "class:ParamName",
      "class:Signature",
      "func:__eq__",
      "func:__hash__",
      "func:__init__",
      "func:__ne__",
      "func:__repr__",
      "func:_complete",
      "func:_get_cache",
      "func:_get_docstring",
      "func:_get_docstring_signature",
      "func:_get_module_context",
      "func:_get_signatures",
      "func:_sort_names_by_start_pos",
      "func:_values_to_definitions",
      "func:bracket_start",
      "func:column",
      "func:complete",
      "func:defined_names",
      "func:description",
      "func:docstring",
      "func:execute",
      "func:full_name",
      "func:get_completion_prefix_length",
      "func:get_definition_end_position",
      "func:get_definition_start_position",
      "func:get_line_code",
      "func:get_signatures",
      "func:get_type_hint",
      "func:goto",
      "func:in_builtin_module",
      "func:index",
      "func:infer",
      "func:infer_annotation",
      "func:infer_default",
      "func:is_definition",
      "func:is_side_effect",
      "func:is_stub",
      "func:kind",
      "func:line",
      "func:module_name",
      "func:module_path",
      "func:name",
      "func:name_with_symbols",
      "func:params",
      "func:parent",
      "func:to_string",
      "func:type"
    ],
    "old_files": [
      "classes.py_gpt4_5a5bb443.py"
    ],
    "new_files": [
      "classes_29984e.py"
    ]
  },
  {
    "file_signature": [
      "class:KedroSession",
      "class:KedroSessionError",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_describe_git",
      "func:_get_config_loader",
      "func:_init_store",
      "func:_jsonify_cli_context",
      "func:_log_exception",
      "func:_logger",
      "func:close",
      "func:create",
      "func:load_context",
      "func:run",
      "func:store"
    ],
    "old_files": [
      "session.py_gpt4_ce61005a.py"
    ],
    "new_files": [
      "session_127286.py"
    ]
  },
  {
    "file_signature": [
      "class:DictRecordClear",
      "class:ServerWithRecordClear",
      "class:TestShutdown",
      "func:__init__",
      "func:base_runner_init_spy",
      "func:clear",
      "func:f",
      "func:patched_loop",
      "func:raiser",
      "func:run_app",
      "func:skip_if_on_windows",
      "func:stopper",
      "func:test_run_app_abstract_linux_socket",
      "func:test_run_app_cancels_all_pending_tasks",
      "func:test_run_app_cancels_done_tasks",
      "func:test_run_app_cancels_failed_tasks",
      "func:test_run_app_close_loop",
      "func:test_run_app_context_vars",
      "func:test_run_app_coro",
      "func:test_run_app_custom_backlog",
      "func:test_run_app_custom_backlog_unix",
      "func:test_run_app_default_logger",
      "func:test_run_app_default_logger_setup_only_if_unconfigured",
      "func:test_run_app_default_logger_setup_requires_debug",
      "func:test_run_app_default_logger_setup_requires_default_logger",
      "func:test_run_app_http",
      "func:test_run_app_http_unix_socket",
      "func:test_run_app_https",
      "func:test_run_app_https_unix_socket",
      "func:test_run_app_keepalive_timeout",
      "func:test_run_app_mixed_bindings",
      "func:test_run_app_multiple_hosts",
      "func:test_run_app_multiple_preexisting_sockets",
      "func:test_run_app_nondefault_host_port",
      "func:test_run_app_preexisting_inet6_socket",
      "func:test_run_app_preexisting_inet_socket",
      "func:test_run_app_preexisting_unix_socket",
      "func:test_run_app_raises_exception",
      "func:test_run_app_with_sock",
      "func:test_shutdown_close_idle_keepalive",
      "func:test_shutdown_close_websockets",
      "func:test_shutdown_handler_cancellation_suppressed",
      "func:test_shutdown_new_conn_rejected",
      "func:test_shutdown_pending_handler_responds",
      "func:test_shutdown_timeout_handler",
      "func:test_shutdown_timeout_not_reached",
      "func:test_shutdown_wait_for_handler",
      "func:test_sigint",
      "func:test_sigterm",
      "func:test_startup_cleanup_signals_even_on_failure"
    ],
    "old_files": [
      "test_run_app.py_gpt4_63bfbda1.py"
    ],
    "new_files": [
      "test_run_app_97664a.py"
    ]
  },
  {
    "file_signature": [
      "class:T5",
      "class:T5Block",
      "class:T5BlockOutput",
      "class:T5DecoderStack",
      "class:T5DenseGatedGeluDense",
      "class:T5DenseReluDense",
      "class:T5EncoderStack",
      "class:T5FeedForwardProjection",
      "class:T5LayerCrossAttention",
      "class:T5LayerCrossAttentionOutput",
      "class:T5LayerFF",
      "class:T5LayerNorm",
      "class:T5LayerSelfAttention",
      "class:T5LayerSelfAttentionOutput",
      "class:T5Output",
      "class:T5Stack",
      "class:T5StackOutput",
      "func:__init__",
      "func:_decoder_cache_to_dict",
      "func:_dict_to_decoder_cache",
      "func:_from_config",
      "func:_get_lm_logits",
      "func:_post_load_state_dict",
      "func:_shift_right",
      "func:basic_decoder",
      "func:basic_encoder",
      "func:forward",
      "func:get_head_mask",
      "func:hidden_size",
      "func:num_blocks",
      "func:resize_token_embeddings",
      "func:take_search_step"
    ],
    "old_files": [
      "t5.py_gpt4_d3f65209.py"
    ],
    "new_files": [
      "t5_f23eca.py"
    ]
  },
  {
    "file_signature": [
      "class:CheckTests",
      "class:IntegrationTests",
      "class:LoggingReporter",
      "class:Node",
      "class:SysStreamCapturing",
      "class:TestIterSourceCode",
      "class:TestMain",
      "class:TestReporter",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_create_StringIO",
      "func:assertHasErrors",
      "func:evaluate",
      "func:flake",
      "func:getErrors",
      "func:getPyflakesBinary",
      "func:makeEmptyFile",
      "func:makeTempFile",
      "func:runPyflakes",
      "func:setUp",
      "func:syntaxError",
      "func:tearDown",
      "func:test_CRLFLineEndings",
      "func:test_checkPathNonExisting",
      "func:test_checkRecursive",
      "func:test_emptyDirectory",
      "func:test_encodedFileUTF8",
      "func:test_eofSyntaxError",
      "func:test_eofSyntaxErrorWithTab",
      "func:test_errors_io",
      "func:test_errors_syntax",
      "func:test_explicitFiles",
      "func:test_fileWithFlakes",
      "func:test_flake",
      "func:test_goodFile",
      "func:test_invalidEscape",
      "func:test_legacyScript",
      "func:test_misencodedFileUTF16",
      "func:test_misencodedFileUTF8",
      "func:test_missingTrailingNewline",
      "func:test_multiLineSyntaxError",
      "func:test_multilineSyntaxError",
      "func:test_multipleDirectories",
      "func:test_nonDefaultFollowsDefaultSyntaxError",
      "func:test_nonKeywordAfterKeywordSyntaxError",
      "func:test_onlyPythonSource",
      "func:test_permissionDenied",
      "func:test_pyflakesWarning",
      "func:test_readFromStdin",
      "func:test_recurses",
      "func:test_shebang",
      "func:test_singleFile",
      "func:test_syntaxError",
      "func:test_syntaxErrorNoOffset",
      "func:test_unexpectedError",
      "func:unexpectedError",
      "func:withStderrTo"
    ],
    "old_files": [
      "test_api.py_gpt4_59b369c4.py"
    ],
    "new_files": [
      "test_api_917878.py"
    ]
  },
  {
    "file_signature": [
      "class:Worker",
      "func:__init__",
      "func:_disable_spinner_if_level_below_WARN",
      "func:_flag_as_shutdown_by_signal",
      "func:_iter_consecutive_numbers",
      "func:_on_shutdown_immediately",
      "func:_on_sigint",
      "func:_on_sigterm",
      "func:_on_startup_end_spinner",
      "func:_partition_set_logtable",
      "func:_proc_ident",
      "func:_proc_web_ident",
      "func:_repr_partition_set",
      "func:_setproctitle",
      "func:_setup_spinner_handler",
      "func:autodiscover",
      "func:change_workdir",
      "func:format_log_arguments",
      "func:on_init_dependencies",
      "func:on_setup_root_logger",
      "func:on_worker_shutdown",
      "func:setproctitle"
    ],
    "old_files": [
      "worker.py_gpt4_28c15399.py"
    ],
    "new_files": [
      "worker_083662.py"
    ]
  },
  {
    "file_signature": [
      "class:Swagger",
      "func:_simple_slugify",
      "func:get_content",
      "func:get_field",
      "func:get_link",
      "func:get_schema_definitions",
      "func:load",
      "func:lookup"
    ],
    "old_files": [
      "swagger.py_gpt4_de2853af.py"
    ],
    "new_files": [
      "swagger_c55f37.py"
    ]
  },
  {
    "file_signature": [
      "class:BiasMitigatorWrapper",
      "class:HardBiasMitigatorWrapper",
      "class:INLPBiasMitigatorWrapper",
      "class:LinearBiasMitigatorWrapper",
      "class:OSCaRBiasMitigatorWrapper",
      "func:__call__",
      "func:__init__",
      "func:train"
    ],
    "old_files": [
      "bias_mitigator_wrappers.py_gpt4_247c0727.py"
    ],
    "new_files": [
      "bias_mitigator_wrappers_4e83be.py"
    ]
  },
  {
    "file_signature": [
      "class:DatetimeIndex",
      "func:__getattr__",
      "func:__new__",
      "func:ceil",
      "func:day",
      "func:day_name",
      "func:day_of_week",
      "func:day_of_year",
      "func:dayofweek",
      "func:dayofyear",
      "func:days_in_month",
      "func:daysinmonth",
      "func:disallow_nanoseconds",
      "func:floor",
      "func:hour",
      "func:indexer_at_time",
      "func:indexer_between_time",
      "func:is_leap_year",
      "func:is_month_end",
      "func:is_month_start",
      "func:is_quarter_end",
      "func:is_quarter_start",
      "func:is_year_end",
      "func:is_year_start",
      "func:microsecond",
      "func:minute",
      "func:month",
      "func:month_name",
      "func:normalize",
      "func:pandas_at_time",
      "func:pandas_between_time",
      "func:quarter",
      "func:round",
      "func:second",
      "func:strftime",
      "func:week",
      "func:weekday",
      "func:weekofyear",
      "func:year"
    ],
    "old_files": [
      "datetimes.py_gpt4_289303b4.py"
    ],
    "new_files": [
      "datetimes_c4b343.py"
    ]
  },
  {
    "file_signature": [
      "class:EventIssueRegistryUpdatedData",
      "class:IssueEntry",
      "class:IssueRegistry",
      "class:IssueRegistryStore",
      "class:IssueSeverity",
      "func:__init__",
      "func:_data_to_save",
      "func:async_create_issue",
      "func:async_delete",
      "func:async_delete_issue",
      "func:async_get",
      "func:async_get_issue",
      "func:async_get_or_create",
      "func:async_ignore",
      "func:async_ignore_issue",
      "func:create_issue",
      "func:delete_issue",
      "func:make_read_only",
      "func:to_json"
    ],
    "old_files": [
      "issue_registry.py_gpt4_0619e3d4.py"
    ],
    "new_files": [
      "issue_registry_f55ae7.py"
    ]
  },
  {
    "file_signature": [
      "class:QueryCacheManager",
      "func:__init__",
      "func:delete",
      "func:get",
      "func:has",
      "func:set",
      "func:set_query_result"
    ],
    "old_files": [
      "query_cache_manager.py_gpt4_92c9b95d.py"
    ],
    "new_files": [
      "query_cache_manager_f69be4.py"
    ]
  },
  {
    "file_signature": [
      "class:FStringNode",
      "class:PythonToken",
      "class:Token",
      "class:TokenCollection",
      "func:__init__",
      "func:__repr__",
      "func:_all_string_prefixes",
      "func:_close_fstring_if_necessary",
      "func:_compile",
      "func:_create_token_collection",
      "func:_find_fstring_string",
      "func:_get_token_collection",
      "func:_print_tokens",
      "func:_split_illegal_unicode_name",
      "func:allow_multiline",
      "func:close_parentheses",
      "func:create_token",
      "func:dedent_if_necessary",
      "func:different_case_versions",
      "func:end_pos",
      "func:group",
      "func:is_in_expr",
      "func:is_in_format_spec",
      "func:maybe",
      "func:open_parentheses",
      "func:tokenize",
      "func:tokenize_lines",
      "func:wrapper"
    ],
    "old_files": [
      "tokenize.py_gpt4_d744cf6b.py"
    ],
    "new_files": [
      "tokenize_204134.py"
    ]
  },
  {
    "file_signature": [
      "class:Chalice",
      "func:__init__",
      "func:_filter_resources",
      "func:_generate_sam_template_with_assets",
      "func:_package_app",
      "func:add_environment_variable",
      "func:get_function",
      "func:get_resource",
      "func:get_role"
    ],
    "old_files": [
      "construct.py_gpt4_36a4b076.py"
    ],
    "new_files": [
      "construct_bbdfda.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_marker_compat",
      "func:andrews_curves",
      "func:autocorrelation_plot",
      "func:bootstrap_plot",
      "func:f",
      "func:function",
      "func:lag_plot",
      "func:normalize",
      "func:parallel_coordinates",
      "func:r",
      "func:radviz",
      "func:scatter_matrix",
      "func:unpack_single_str_list"
    ],
    "old_files": [
      "misc.py_gpt4_3b346c4e.py"
    ],
    "new_files": [
      "misc_23de87.py"
    ]
  },
  {
    "file_signature": [
      "class:DiffParser",
      "class:_NodesTree",
      "class:_NodesTreeNode",
      "class:_PositionUpdatingFinished",
      "func:__init__",
      "func:__repr__",
      "func:_assert_nodes_are_equal",
      "func:_assert_valid_graph",
      "func:_copy_from_old_parser",
      "func:_copy_nodes",
      "func:_diff_tokenize",
      "func:_enabled_debugging",
      "func:_ends_with_newline",
      "func:_flows_finished",
      "func:_func_or_class_has_suite",
      "func:_get_debug_error_message",
      "func:_get_indentation",
      "func:_get_last_line",
      "func:_get_matching_indent_nodes",
      "func:_get_next_leaf_if_indentation",
      "func:_get_old_line_stmt",
      "func:_get_previous_leaf_if_indentation",
      "func:_get_suite_indentation",
      "func:_is_flow_node",
      "func:_is_indentation_error_leaf",
      "func:_parse",
      "func:_remove_endmarker",
      "func:_reset",
      "func:_skip_dedent_error_leaves",
      "func:_suite_or_file_input_is_valid",
      "func:_try_parse_part",
      "func:_update_insertion_node",
      "func:_update_parsed_node_tos",
      "func:_update_positions",
      "func:add_child_node",
      "func:add_parsed_nodes",
      "func:add_tree_nodes",
      "func:close",
      "func:copy_nodes",
      "func:finish",
      "func:get_last_line",
      "func:parsed_until_line",
      "func:update"
    ],
    "old_files": [
      "diff.py_gpt4_0c6e8009.py"
    ],
    "new_files": [
      "diff_011ffc.py"
    ]
  },
  {
    "file_signature": [
      "class:LiveCheck",
      "class:LiveCheckSensor",
      "func:__init__",
      "func:_apply_monkeypatches",
      "func:_can_resolve",
      "func:_connect_signals",
      "func:_contribute_to_app",
      "func:_extract_signals",
      "func:_inner",
      "func:_install_bus_agent",
      "func:_install_test_execution_agent",
      "func:_prepare_case_name",
      "func:add_case",
      "func:bus",
      "func:case",
      "func:current_test",
      "func:for_app",
      "func:on_produce_attach_test_headers",
      "func:on_stream_event_in",
      "func:on_stream_event_out",
      "func:pending_tests",
      "func:reports"
    ],
    "old_files": [
      "app.py_gpt4_4fbf6d96.py"
    ],
    "new_files": [
      "app_986ad6.py"
    ]
  },
  {
    "file_signature": [
      "class:GatedCnnEncoder",
      "class:ResidualBlock",
      "func:__init__",
      "func:forward",
      "func:get_input_dim",
      "func:get_output_dim",
      "func:is_bidirectional"
    ],
    "old_files": [
      "gated_cnn_encoder.py_gpt4_3d4edbef.py"
    ],
    "new_files": [
      "gated_cnn_encoder_38b825.py"
    ]
  },
  {
    "file_signature": [
      "class:MultiProcessDataLoader",
      "class:WorkerError",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_batch_worker",
      "func:_gather_instances",
      "func:_index_instance",
      "func:_instance_worker",
      "func:_instances_to_batches",
      "func:_iter_batches",
      "func:_join_workers",
      "func:_maybe_tqdm",
      "func:_safe_queue_put",
      "func:_start_batch_workers",
      "func:_start_instance_workers",
      "func:index_with",
      "func:iter_instances",
      "func:set_target_device"
    ],
    "old_files": [
      "multiprocess_data_loader.py_gpt4_59f32091.py"
    ],
    "new_files": [
      "multiprocess_data_loader_8b38d9.py"
    ]
  },
  {
    "file_signature": [
      "class:Consumer",
      "class:ConsumerThread",
      "class:Fetcher",
      "class:ThreadDelegateConsumer",
      "class:TopicPartitionGroup",
      "class:TransactionManager",
      "class:_App",
      "func:__init__",
      "func:_add_gap",
      "func:_clean_unacked_messages",
      "func:_filter_committable_offsets",
      "func:_filter_tps_with_pending_acks",
      "func:_get_active_partitions",
      "func:_is_changelog_tp",
      "func:_new_consumer_thread",
      "func:_new_offset",
      "func:_new_topicpartition",
      "func:_reset_state",
      "func:_set_active_tps",
      "func:_should_commit",
      "func:_to_message",
      "func:_tps_to_active_tpgs",
      "func:_tps_to_transactional_ids",
      "func:ack",
      "func:assignment",
      "func:close",
      "func:ensure_TP",
      "func:ensure_TPset",
      "func:highwater",
      "func:key_partition",
      "func:on_buffer_drop",
      "func:on_buffer_full",
      "func:on_init_dependencies",
      "func:pause_partitions",
      "func:resume_flow",
      "func:resume_partitions",
      "func:seek",
      "func:send_soon",
      "func:stop_flow",
      "func:supports_headers",
      "func:topic_partitions",
      "func:track_message",
      "func:unacked",
      "func:verify_event_path",
      "func:verify_recovery_event_path"
    ],
    "old_files": [
      "consumer.py_gpt4_67f75bdf.py"
    ],
    "new_files": [
      "consumer_fa3d87.py"
    ]
  },
  {
    "file_signature": [
      "func:build_custom_emoji",
      "func:build_reactions",
      "func:categorize_channels_and_map_with_id",
      "func:convert_channel_data",
      "func:convert_direct_message_group_data",
      "func:convert_stream_subscription_data",
      "func:do_convert_data",
      "func:fix_mentions",
      "func:get_stream_name",
      "func:get_topic_name",
      "func:list_reactions",
      "func:make_realm",
      "func:map_receiver_id_to_recipient_id",
      "func:map_upload_id_to_upload_data",
      "func:map_user_id_to_user",
      "func:map_username_to_user_id",
      "func:message_to_dict",
      "func:process_batch",
      "func:process_message_attachment",
      "func:process_messages",
      "func:process_raw_message_batch",
      "func:process_users",
      "func:rocketchat_data_to_dict",
      "func:separate_channel_private_and_livechat_messages",
      "func:truncate_name"
    ],
    "old_files": [
      "rocketchat.py_gpt4_a96c37a4.py"
    ],
    "new_files": [
      "rocketchat_52a9b8.py"
    ]
  },
  {
    "file_signature": [
      "class:Importer",
      "class:ModuleCache",
      "func:__init__",
      "func:_add_error",
      "func:_get_module_names",
      "func:_level_to_base_import_path",
      "func:_load_builtin_module",
      "func:_load_python_module",
      "func:_prepare_infer_import",
      "func:_str_import_path",
      "func:_sys_path_with_modifications",
      "func:add",
      "func:completion_names",
      "func:follow",
      "func:follow_error_node_imports_if_possible",
      "func:get",
      "func:goto_import",
      "func:import_module",
      "func:import_module_by_names",
      "func:infer_import",
      "func:iter_module_names",
      "func:load_module_from_path",
      "func:load_namespace_from_path"
    ],
    "old_files": [
      "imports.py_gpt4_95ae2396.py"
    ],
    "new_files": [
      "imports_c4205d.py"
    ]
  },
  {
    "file_signature": [
      "class:ContentCoding",
      "class:Response",
      "class:StreamResponse",
      "func:__bool__",
      "func:__delitem__",
      "func:__eq__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:_generate_content_type_header",
      "func:_set_status",
      "func:body",
      "func:body_length",
      "func:charset",
      "func:chunked",
      "func:compression",
      "func:content_length",
      "func:content_type",
      "func:enable_chunked_encoding",
      "func:enable_compression",
      "func:etag",
      "func:force_close",
      "func:headers",
      "func:json_response",
      "func:keep_alive",
      "func:last_modified",
      "func:prepared",
      "func:reason",
      "func:set_status",
      "func:status",
      "func:task",
      "func:text"
    ],
    "old_files": [
      "web_response.py_gpt4_8696927a.py"
    ],
    "new_files": [
      "web_response_49adee.py"
    ]
  },
  {
    "file_signature": [
      "class:DynamicFeePayloadDecoder",
      "class:DynamicFeeTransaction",
      "class:LondonLegacyTransaction",
      "class:LondonTransactionBuilder",
      "class:LondonTypedTransaction",
      "class:LondonUnsignedLegacyTransaction",
      "class:UnsignedDynamicFeeTransaction",
      "func:_type_byte",
      "func:as_signed_transaction",
      "func:blob_versioned_hashes",
      "func:check_signature_validity",
      "func:decode",
      "func:encode",
      "func:gas_price",
      "func:gas_used_by",
      "func:get_intrinsic_gas",
      "func:get_message_for_signing",
      "func:get_sender",
      "func:hash",
      "func:intrinsic_gas",
      "func:make_receipt",
      "func:max_fee_per_blob_gas",
      "func:new_dynamic_fee_transaction",
      "func:new_unsigned_dynamic_fee_transaction",
      "func:validate"
    ],
    "old_files": [
      "transactions.py_gpt4_125a38fe.py"
    ],
    "new_files": [
      "transactions_8ddaaa.py"
    ]
  },
  {
    "file_signature": [
      "class:HomeKit",
      "class:HomeKitPairingQRView",
      "func:__init__",
      "func:_async_all_homekit_instances",
      "func:_async_configure_linked_sensors",
      "func:_async_create_single_accessory",
      "func:_async_get_imported_entries_indices",
      "func:_async_import_options_from_data_if_missing",
      "func:_async_purge_old_bridges",
      "func:_async_register_bridge",
      "func:_async_register_events_and_services",
      "func:_async_remove_accessories_by_entity_id",
      "func:_async_show_setup_message",
      "func:_async_shutdown_accessory",
      "func:_async_update_accessories_hash",
      "func:_async_update_config_entry_from_yaml",
      "func:_fill_config_from_device_registry_entry",
      "func:_has_all_unique_names_and_ports",
      "func:_would_exceed_max_devices",
      "func:add_bridge_accessory",
      "func:async_remove_bridge_accessory",
      "func:async_unpair",
      "func:setup"
    ],
    "old_files": [
      "__init__.py_gpt4_ef619f13.py"
    ],
    "new_files": [
      "__init___b0eb15.py"
    ]
  },
  {
    "file_signature": [
      "class:PretrainedTransformerTokenizer",
      "func:__init__",
      "func:_estimate_character_indices",
      "func:_increment_offsets",
      "func:_intra_word_tokenize",
      "func:_reverse_engineer_special_tokens",
      "func:_to_params",
      "func:add_special_tokens",
      "func:intra_word_tokenize",
      "func:intra_word_tokenize_sentence_pair",
      "func:num_special_tokens_for_pair",
      "func:num_special_tokens_for_sequence",
      "func:tokenize",
      "func:tokenizer_lowercases",
      "func:with_new_type_id"
    ],
    "old_files": [
      "pretrained_transformer_tokenizer.py_gpt4_2ae9a1cc.py"
    ],
    "new_files": [
      "pretrained_transformer_tokenizer_f82621.py"
    ]
  },
  {
    "file_signature": [
      "class:Compiler",
      "class:Linker",
      "class:SeenDetails",
      "func:__init__",
      "func:_add_prepended_cte",
      "func:_compile_code",
      "func:_compile_relation_for_foreign_key_constraint_to",
      "func:_create_node_context",
      "func:_extend_prepended_ctes",
      "func:_generate_stats",
      "func:_get_multi_test_edges",
      "func:_get_test_edges_2",
      "func:_get_tests_for_node",
      "func:_node_enabled",
      "func:_recursively_prepend_ctes",
      "func:_write_node",
      "func:add_ephemeral_prefix",
      "func:add_node",
      "func:add_test_edges",
      "func:add_test_edges_1",
      "func:add_test_edges_2",
      "func:compile",
      "func:compile_node",
      "func:dependency",
      "func:edges",
      "func:find_cycles",
      "func:get_graph",
      "func:get_graph_summary",
      "func:initialize",
      "func:inject_ctes_into_sql",
      "func:link_graph",
      "func:link_node",
      "func:nodes",
      "func:print_compile_stats",
      "func:write_graph",
      "func:write_graph_file"
    ],
    "old_files": [
      "compilation.py_gpt4_d99c29f7.py"
    ],
    "new_files": [
      "compilation_283ca2.py"
    ]
  },
  {
    "file_signature": [
      "class:AppRunner",
      "class:BaseRunner",
      "class:BaseSite",
      "class:GracefulExit",
      "class:NamedPipeSite",
      "class:ServerRunner",
      "class:SockSite",
      "class:TCPSite",
      "class:UnixSite",
      "func:__init__",
      "func:_check_site",
      "func:_make_request",
      "func:_raise_graceful_exit",
      "func:_reg_site",
      "func:_unreg_site",
      "func:addresses",
      "func:app",
      "func:name",
      "func:server",
      "func:sites"
    ],
    "old_files": [
      "web_runner.py_gpt4_51d64d7d.py"
    ],
    "new_files": [
      "web_runner_bbf044.py"
    ]
  },
  {
    "file_signature": [
      "class:MockChainState",
      "class:MockChannelState",
      "class:MockEth",
      "class:MockJSONRPCClient",
      "class:MockPaymentChannel",
      "class:MockProxyManager",
      "class:MockRaidenService",
      "class:MockTokenNetwork",
      "class:MockTokenNetworkProxy",
      "class:MockTokenNetworkRegistry",
      "class:MockWeb3",
      "class:PFSMock",
      "func:__del__",
      "func:__init__",
      "func:_get_app_address_metadata",
      "func:add_apps",
      "func:add_notification",
      "func:balance",
      "func:can_query_state_for_block",
      "func:chainId",
      "func:detail_participants",
      "func:gas_price",
      "func:get_best_routes_pfs",
      "func:get_block",
      "func:get_pfs_info",
      "func:handle_and_track_state_changes",
      "func:handle_state_changes",
      "func:make_pfs_config",
      "func:make_raiden_service_mock",
      "func:mocked_failed_response",
      "func:mocked_json_response",
      "func:monitoring_service",
      "func:on_messages",
      "func:on_new_block",
      "func:one_to_n",
      "func:payment_channel",
      "func:query_address_metadata",
      "func:reset_routes",
      "func:secret_registry",
      "func:service_registry",
      "func:set_route",
      "func:sign",
      "func:stop",
      "func:token_network_registry",
      "func:update_info",
      "func:user_deposit"
    ],
    "old_files": [
      "mocks.py_gpt4_852f4d73.py"
    ],
    "new_files": [
      "mocks_d2ab6d.py"
    ]
  },
  {
    "file_signature": [
      "class:AIOKafkaConsumerThread",
      "class:Consumer",
      "class:ConsumerRebalanceListener",
      "class:LazySpan",
      "class:Producer",
      "class:Transport",
      "func:__init__",
      "func:__post_init__",
      "func:_create_client_consumer",
      "func:_create_consumer",
      "func:_create_worker_consumer",
      "func:_ensure_consumer",
      "func:_ensure_producer",
      "func:_log_slow_processing",
      "func:_log_slow_processing_commit",
      "func:_log_slow_processing_stream",
      "func:_make_slow_processing_error",
      "func:_new_consumer_thread",
      "func:_new_producer",
      "func:_new_topicpartition",
      "func:_on_span_cancelled_early",
      "func:_on_span_generation_known",
      "func:_on_span_generation_pending",
      "func:_producer_type",
      "func:_settings_auth",
      "func:_settings_default",
      "func:_settings_extra",
      "func:_span_finish",
      "func:_start_span",
      "func:_to_message",
      "func:_topic_config",
      "func:_transform_span_lazy",
      "func:_verify_aiokafka_event_path",
      "func:assignment",
      "func:close",
      "func:credentials_to_aiokafka_auth",
      "func:finish",
      "func:flush_spans",
      "func:highwater",
      "func:key_partition",
      "func:on_generation_id_known",
      "func:on_partitions_revoked",
      "func:seek",
      "func:server_list",
      "func:start_coordinator_span",
      "func:start_rebalancing_span",
      "func:supports_headers",
      "func:topic_partitions",
      "func:trace_category",
      "func:traced_from_parent_span",
      "func:verify_event_path",
      "func:verify_recovery_event_path"
    ],
    "old_files": [
      "aiokafka.py_gpt4_3e910cf4.py"
    ],
    "new_files": [
      "aiokafka_d62f1d.py"
    ]
  },
  {
    "file_signature": [
      "class:Base",
      "class:BasePattern",
      "class:Leaf",
      "class:LeafPattern",
      "class:NegatedPattern",
      "class:Node",
      "class:NodePattern",
      "class:WildcardPattern",
      "func:__deepcopy__",
      "func:__eq__",
      "func:__init__",
      "func:__new__",
      "func:__repr__",
      "func:__str__",
      "func:_bare_name_matches",
      "func:_eq",
      "func:_iterative_matches",
      "func:_recursive_matches",
      "func:_submatch",
      "func:append_child",
      "func:changed",
      "func:clone",
      "func:convert",
      "func:depth",
      "func:generate_matches",
      "func:get_lineno",
      "func:get_suffix",
      "func:insert_child",
      "func:invalidate_sibling_maps",
      "func:leaves",
      "func:match",
      "func:match_seq",
      "func:next_sibling",
      "func:optimize",
      "func:post_order",
      "func:pre_order",
      "func:prefix",
      "func:prev_sibling",
      "func:remove",
      "func:replace",
      "func:set_child",
      "func:type_repr",
      "func:update_sibling_maps"
    ],
    "old_files": [
      "pytree.py_gpt4_4384c707.py"
    ],
    "new_files": [
      "pytree_adefa1.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoRequestForm",
      "class:SalesRequestForm",
      "class:SupportRequestForm",
      "class:SupportSelectOption",
      "func:check_update_max_invites",
      "func:demo_request",
      "func:get_confirmations",
      "func:get_default_max_invites_for_plan_type",
      "func:get_plan_type_string",
      "func:get_realm_admin_emails_as_string",
      "func:get_realm_owner_emails_as_string",
      "func:get_realm_plan_type_options",
      "func:get_realm_plan_type_options_for_discount",
      "func:get_remote_plan_tier_options",
      "func:get_remote_realm_billing_user_emails_as_string",
      "func:get_remote_server_billing_user_emails_as_string",
      "func:get_remote_servers_for_support",
      "func:remote_servers_support",
      "func:sales_support_request",
      "func:shared_support_context",
      "func:support",
      "func:support_request"
    ],
    "old_files": [
      "support.py_gpt4_13ee2db1.py"
    ],
    "new_files": [
      "support_f17c76.py"
    ]
  },
  {
    "file_signature": [
      "class:CustAckPlugin1",
      "class:CustActionPlugin1",
      "class:CustActionPlugin2",
      "class:CustActionPlugin3",
      "class:CustDeletePlugin1",
      "class:CustDeletePlugin2",
      "class:CustNotePlugin1",
      "class:CustPlugin1",
      "class:CustPlugin2",
      "class:CustPlugin3",
      "class:OldPlugin1",
      "class:PluginsTestCase",
      "class:Teapot",
      "func:delete",
      "func:post_action",
      "func:post_receive",
      "func:pre_receive",
      "func:setUp",
      "func:status_change",
      "func:take_action",
      "func:take_note",
      "func:tearDown",
      "func:test_add_and_remove_tags",
      "func:test_custom_ack",
      "func:test_delete",
      "func:test_im_a_teapot",
      "func:test_invalid_action",
      "func:test_status_update",
      "func:test_take_action",
      "func:test_take_note"
    ],
    "old_files": [
      "test_plugins.py_gpt4_e2ab7a56.py"
    ],
    "new_files": [
      "test_plugins_493c2b.py"
    ]
  },
  {
    "file_signature": [
      "func:__await__",
      "func:example",
      "func:f",
      "func:func_no_args",
      "func:function_signature_stress_test",
      "func:long_lines",
      "func:spaces",
      "func:spaces2",
      "func:spaces_types",
      "func:trailing_comma"
    ],
    "old_files": [
      "function.py_gpt4_6a4281c5.py"
    ],
    "new_files": [
      "function_98f82d.py"
    ]
  },
  {
    "file_signature": [
      "class:Conll2003DatasetReader",
      "func:__init__",
      "func:_is_divider",
      "func:_read",
      "func:apply_token_indexers",
      "func:text_to_instance"
    ],
    "old_files": [
      "conll2003.py_gpt4_c0cefa4c.py"
    ],
    "new_files": [
      "conll2003_71bf0e.py"
    ]
  },
  {
    "file_signature": [
      "func:add_new_user_history",
      "func:created_bot_event",
      "func:do_activate_mirror_dummy_user",
      "func:do_create_user",
      "func:do_reactivate_user",
      "func:notify_created_bot",
      "func:notify_created_user",
      "func:notify_new_user",
      "func:process_new_human_user",
      "func:send_group_direct_message_to_admins",
      "func:send_message_to_signup_notification_stream",
      "func:set_up_streams_and_groups_for_new_human_user",
      "func:stream_name"
    ],
    "old_files": [
      "create_user.py_gpt4_46a62a4c.py"
    ],
    "new_files": [
      "create_user_36a545.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseNode",
      "class:ErrorLeaf",
      "class:ErrorNode",
      "class:Leaf",
      "class:Node",
      "class:NodeOrLeaf",
      "class:TypedLeaf",
      "func:__init__",
      "func:__repr__",
      "func:_format_dump",
      "func:_get_code_for_children",
      "func:binary_search",
      "func:dump",
      "func:end_pos",
      "func:get_code",
      "func:get_first_leaf",
      "func:get_last_leaf",
      "func:get_leaf_for_position",
      "func:get_next_leaf",
      "func:get_next_sibling",
      "func:get_previous_leaf",
      "func:get_previous_sibling",
      "func:get_root_node",
      "func:get_start_pos_of_prefix",
      "func:search_ancestor",
      "func:start_pos"
    ],
    "old_files": [
      "tree.py_gpt4_18330a9c.py"
    ],
    "new_files": [
      "tree_5abf79.py"
    ]
  },
  {
    "file_signature": [
      "class:_BeautifulSoupHtml5LibFrameParser",
      "class:_HtmlFrameParser",
      "class:_LxmlFrameParser",
      "func:__init__",
      "func:_attr_getter",
      "func:_build_doc",
      "func:_build_xpath_expr",
      "func:_data_to_frame",
      "func:_equals_tag",
      "func:_expand_colspan_rowspan",
      "func:_expand_elements",
      "func:_get_skiprows",
      "func:_handle_hidden_tables",
      "func:_href_getter",
      "func:_parse",
      "func:_parse_tables",
      "func:_parse_tbody_tr",
      "func:_parse_td",
      "func:_parse_tfoot_tr",
      "func:_parse_thead_tbody_tfoot",
      "func:_parse_thead_tr",
      "func:_parser_dispatch",
      "func:_print_as_set",
      "func:_read",
      "func:_remove_whitespace",
      "func:_setup_build_doc",
      "func:_text_getter",
      "func:_validate_flavor",
      "func:parse_tables",
      "func:read_html",
      "func:row_is_all_th"
    ],
    "old_files": [
      "html.py_gpt4_1065c3b5.py"
    ],
    "new_files": [
      "html_2728b0.py"
    ]
  },
  {
    "file_signature": [
      "class:DeprecatedField",
      "class:QueryObject",
      "func:__init__",
      "func:__repr__",
      "func:_init_series_columns",
      "func:_move_deprecated_extra_fields",
      "func:_rename_deprecated_fields",
      "func:_sanitize_filters",
      "func:_set_annotation_layers",
      "func:_set_is_timeseries",
      "func:_set_metrics",
      "func:_set_post_processing",
      "func:_validate_no_have_duplicate_labels",
      "func:_validate_there_are_no_missing_series",
      "func:cache_key",
      "func:column_names",
      "func:exec_post_processing",
      "func:is_str_or_adhoc",
      "func:metric_names",
      "func:to_dict",
      "func:validate"
    ],
    "old_files": [
      "query_object.py_gpt4_3172d101.py"
    ],
    "new_files": [
      "query_object_6550f7.py"
    ]
  },
  {
    "file_signature": [
      "class:Embedding",
      "class:EmbeddingsFileURI",
      "class:EmbeddingsTextFile",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__next__",
      "func:_get_num_tokens_from_first_line",
      "func:_get_the_only_file_in_the_archive",
      "func:_open_inside_tar",
      "func:_open_inside_zip",
      "func:_read_embeddings_from_hdf5",
      "func:_read_embeddings_from_text_file",
      "func:_read_pretrained_embeddings_file",
      "func:close",
      "func:extend_vocab",
      "func:format_embeddings_file_uri",
      "func:forward",
      "func:get_output_dim",
      "func:parse_embeddings_file_uri",
      "func:read",
      "func:readline"
    ],
    "old_files": [
      "embedding.py_gpt4_64e6a5c5.py"
    ],
    "new_files": [
      "embedding_8c6937.py"
    ]
  },
  {
    "file_signature": [
      "class:AttentionModule",
      "class:AttentionOutput",
      "class:SelfAttention",
      "class:T5Attention",
      "func:__init__",
      "func:_from_config",
      "func:_get_attention_probs",
      "func:_get_lengths",
      "func:_normalize",
      "func:_output_layer",
      "func:_position_bias",
      "func:_project",
      "func:_query_layer",
      "func:_relative_position_bucket",
      "func:_transpose_for_scores",
      "func:compute_bias",
      "func:forward"
    ],
    "old_files": [
      "attention_module.py_gpt4_e99ef20b.py",
      "temp_file.py"
    ],
    "new_files": [
      "attention_module_7f6559.py"
    ]
  },
  {
    "file_signature": [
      "class:ChannelT",
      "class:_AppT",
      "class:_EventT",
      "class:_ModelArg",
      "class:_SchemaT",
      "class:_StreamT",
      "func:__aiter__",
      "func:__anext__",
      "func:__init__",
      "func:_throw",
      "func:as_future_message",
      "func:clone",
      "func:clone_using_queue",
      "func:derive",
      "func:empty",
      "func:get_topic_name",
      "func:on_stop_iteration",
      "func:prepare_key",
      "func:prepare_value",
      "func:queue",
      "func:send_soon",
      "func:stream",
      "func:subscriber_count"
    ],
    "old_files": [
      "channels.py_gpt4_d312aa75.py"
    ],
    "new_files": [
      "channels_7d2bb8.py"
    ]
  },
  {
    "file_signature": [
      "class:App",
      "class:CastController",
      "class:CastState",
      "class:CastStatusListener",
      "class:CattStore",
      "class:DashCastController",
      "class:DefaultCastController",
      "class:MediaControllerMixin",
      "class:MediaStatusListener",
      "class:PlaybackBaseMixin",
      "class:SimpleListener",
      "class:StateMode",
      "class:YoutubeCastController",
      "func:__init__",
      "func:_create_store_dir",
      "func:_is_app_ready",
      "func:_is_audiovideo",
      "func:_is_idle",
      "func:_is_seekable",
      "func:_read_store",
      "func:_supports_google_media_namespace",
      "func:_update_status",
      "func:_write_store",
      "func:add",
      "func:add_next",
      "func:block_until_status_received",
      "func:cast_info",
      "func:cc_name",
      "func:clear",
      "func:ffwd",
      "func:get_app",
      "func:get_controller",
      "func:get_data",
      "func:info",
      "func:is_streaming_local_file",
      "func:kill",
      "func:load_url",
      "func:media_info",
      "func:new_cast_status",
      "func:new_media_status",
      "func:pause",
      "func:play",
      "func:play_media_id",
      "func:play_media_url",
      "func:play_playlist",
      "func:play_toggle",
      "func:prep_app",
      "func:prep_control",
      "func:prep_info",
      "func:remove",
      "func:restore",
      "func:rewind",
      "func:seek",
      "func:set_data",
      "func:setup_cast",
      "func:skip",
      "func:update",
      "func:volume",
      "func:volumedown",
      "func:volumemute",
      "func:volumeup",
      "func:wait_for",
      "func:wait_for_states"
    ],
    "old_files": [
      "controllers.py_gpt4_a277da66.py"
    ],
    "new_files": [
      "controllers_c0fa43.py"
    ]
  },
  {
    "file_signature": [
      "class:AddressType",
      "class:ChainChoiceType",
      "class:ConfigParser",
      "class:Context",
      "class:EnumChoiceType",
      "class:ExpandableFile",
      "class:ExpandablePath",
      "class:GasPriceChoiceType",
      "class:GroupableOption",
      "class:GroupableOptionCommand",
      "class:GroupableOptionCommandGroup",
      "class:HelpFormatter",
      "class:HypenTemplate",
      "class:LogLevelConfigType",
      "class:MatrixServerType",
      "class:Parser",
      "class:PathRelativePath",
      "class:SkipParsing",
      "func:__eq__",
      "func:__init__",
      "func:__lt__",
      "func:_process_parse_result",
      "func:command",
      "func:convert",
      "func:decorator",
      "func:default_priority",
      "func:expand_default",
      "func:fixed_gas_price_strategy",
      "func:format_options",
      "func:get_internal_name",
      "func:get_matrix_servers",
      "func:group",
      "func:invoke",
      "func:keyfunc",
      "func:option",
      "func:option_group",
      "func:parse",
      "func:register_param",
      "func:write_dl"
    ],
    "old_files": [
      "cli.py_gpt4_72c847be.py"
    ],
    "new_files": [
      "cli_800977.py"
    ]
  },
  {
    "file_signature": [
      "class:PathName",
      "func:_add_os_path_join",
      "func:_add_strings",
      "func:_get_string_additions",
      "func:check",
      "func:complete_file_name",
      "func:iterate_nodes"
    ],
    "old_files": [
      "file_name.py_gpt4_3fa33654.py"
    ],
    "new_files": [
      "file_name_dac33e.py"
    ]
  },
  {
    "file_signature": [
      "class:Evaluator",
      "class:SimpleEvaluator",
      "func:__call__",
      "func:__init__",
      "func:_to_params"
    ],
    "old_files": [
      "evaluator.py_gpt4_8288a291.py"
    ],
    "new_files": [
      "evaluator_beeb92.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseEndpointResolver",
      "class:EndpointResolver",
      "func:__init__",
      "func:_endpoint_for_partition",
      "func:_expand_template",
      "func:_merge_keys",
      "func:_region_match",
      "func:_resolve",
      "func:construct_endpoint",
      "func:get_available_endpoints",
      "func:get_available_partitions"
    ],
    "old_files": [
      "regions.py_gpt4_08792844.py"
    ],
    "new_files": [
      "regions_ce690d.py"
    ]
  },
  {
    "file_signature": [
      "class:TransformerModule",
      "func:_from_config",
      "func:_get_mapped_state_dict",
      "func:_get_mapping",
      "func:_get_pretrained_state_dict",
      "func:_get_relevant_submodule_state",
      "func:from_pretrained_module"
    ],
    "old_files": [
      "transformer_module.py_gpt4_54125978.py"
    ],
    "new_files": [
      "transformer_module_941d3c.py"
    ]
  },
  {
    "file_signature": [
      "class:MultiTaskDataLoader",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_get_instances_for_epoch",
      "func:_make_data_loader",
      "func:index_with",
      "func:iter_instances",
      "func:maybe_shuffle_instances",
      "func:set_target_device"
    ],
    "old_files": [
      "multitask_data_loader.py_gpt4_52d22210.py"
    ],
    "new_files": [
      "multitask_data_loader_4fc11f.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseIncrementalUniqueKey",
      "class:TestIncrementalUniqueKey",
      "func:check_scenario_correctness",
      "func:clean_up",
      "func:fail_to_build_inc_missing_unique_key_column",
      "func:get_expected_fields",
      "func:get_test_fields",
      "func:models",
      "func:seeds",
      "func:test__bad_unique_key",
      "func:test__bad_unique_key_list",
      "func:test__duplicated_unary_unique_key_list",
      "func:test__empty_str_unique_key",
      "func:test__empty_unique_key_list",
      "func:test__no_unique_keys",
      "func:test__one_unique_key",
      "func:test__trinary_unique_key_list",
      "func:test__trinary_unique_key_list_no_update",
      "func:test__unary_unique_key_list",
      "func:update_incremental_model"
    ],
    "old_files": [
      "test_incremental_unique_id.py_gpt4_5edd8e87.py"
    ],
    "new_files": [
      "test_incremental_unique_id_a93cab.py"
    ]
  },
  {
    "file_signature": [
      "class:AioHTTPTestCase",
      "class:BaseTestServer",
      "class:RawTestServer",
      "class:TestClient",
      "class:TestServer",
      "func:__init__",
      "func:_create_app_mock",
      "func:_create_transport",
      "func:app",
      "func:closed",
      "func:delete",
      "func:get",
      "func:get_dict",
      "func:get_extra_info",
      "func:get_port_socket",
      "func:get_unused_port_socket",
      "func:handler",
      "func:head",
      "func:host",
      "func:loop_context",
      "func:make_mocked_coro",
      "func:make_mocked_request",
      "func:make_url",
      "func:options",
      "func:patch",
      "func:port",
      "func:post",
      "func:put",
      "func:request",
      "func:scheme",
      "func:server",
      "func:session",
      "func:set_dict",
      "func:setup_test_loop",
      "func:started",
      "func:teardown_test_loop",
      "func:unused_port",
      "func:ws_connect"
    ],
    "old_files": [
      "test_utils.py_gpt4_1803dff5.py"
    ],
    "new_files": [
      "test_utils_46addc.py"
    ]
  },
  {
    "file_signature": [
      "class:JoinableT",
      "class:StreamT",
      "class:_AppT",
      "class:_JoinT",
      "class:_SchemaT",
      "func:__aiter__",
      "func:__and__",
      "func:__copy__",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:_human_channel",
      "func:add_processor",
      "func:clone",
      "func:combine",
      "func:contribute_to_stream",
      "func:derive_topic",
      "func:echo",
      "func:enumerate",
      "func:get_active_stream",
      "func:group_by",
      "func:info",
      "func:inner_join",
      "func:join",
      "func:left_join",
      "func:outer_join",
      "func:through"
    ],
    "old_files": [
      "streams.py_gpt4_4c29e46e.py"
    ],
    "new_files": [
      "streams_a2a52b.py"
    ]
  },
  {
    "file_signature": [
      "class:TestParseWrapper",
      "class:TestRuntimeWrapper",
      "class:TestVar",
      "func:assert_has_keys",
      "func:config",
      "func:config_postgres",
      "func:context",
      "func:get_adapter",
      "func:get_include_paths",
      "func:gmbp",
      "func:manifest_fx",
      "func:mock_adapter",
      "func:mock_macro",
      "func:mock_manifest",
      "func:mock_model",
      "func:mock_unit_test_node",
      "func:model",
      "func:postgres_adapter",
      "func:provider",
      "func:responder",
      "func:test_base_context",
      "func:test_dbt_metadata_envs",
      "func:test_docs_runtime_context",
      "func:test_invocation_args_to_dict_in_macro_runtime_context",
      "func:test_macro_namespace",
      "func:test_macro_namespace_duplicates",
      "func:test_macro_runtime_context",
      "func:test_model_parse_context",
      "func:test_model_runtime_context",
      "func:test_parser_var_default_none",
      "func:test_parser_var_default_something",
      "func:test_parser_var_not_defined",
      "func:test_query_header_context",
      "func:test_unit_test_runtime_context",
      "func:test_unit_test_runtime_context_macro_overrides_dbt_macro",
      "func:test_unit_test_runtime_context_macro_overrides_global",
      "func:test_unit_test_runtime_context_macro_overrides_package",
      "func:test_unwrapped_method",
      "func:test_var_default_none",
      "func:test_var_default_something",
      "func:test_var_not_defined",
      "func:test_wrapped_method",
      "func:wrapper"
    ],
    "old_files": [
      "test_context.py_gpt4_2fdf0e1c.py"
    ],
    "new_files": [
      "test_context_0bb4b5.py"
    ]
  },
  {
    "file_signature": [
      "class:Train",
      "class:TrainModel",
      "func:__init__",
      "func:_train_worker",
      "func:add_subparser",
      "func:finish",
      "func:from_partial_objects",
      "func:run",
      "func:train_model",
      "func:train_model_from_args",
      "func:train_model_from_file"
    ],
    "old_files": [
      "train.py_gpt4_bd12c8b9.py"
    ],
    "new_files": [
      "train_17392c.py"
    ]
  },
  {
    "file_signature": [
      "class:StdoutRefactoringTool",
      "func:__init__",
      "func:diff_texts",
      "func:log_error",
      "func:main",
      "func:print_output",
      "func:warn",
      "func:write_file"
    ],
    "old_files": [
      "main.py_gpt4_3f8c7064.py"
    ],
    "new_files": [
      "main_be1d12.py"
    ]
  },
  {
    "file_signature": [
      "class:CattTimeParamType",
      "class:YtdlOptParamType",
      "func:add",
      "func:cast",
      "func:cast_site",
      "func:clear",
      "func:cli",
      "func:convert",
      "func:create_server_thread",
      "func:del_alias",
      "func:del_default",
      "func:fail_if_no_ip",
      "func:ffwd",
      "func:get_alias_from_config",
      "func:get_config_as_dict",
      "func:get_device_from_settings",
      "func:info",
      "func:main",
      "func:pause",
      "func:play",
      "func:play_toggle",
      "func:process_device",
      "func:process_path",
      "func:process_subtitles",
      "func:process_url",
      "func:readconfig",
      "func:remove",
      "func:restore",
      "func:rewind",
      "func:save",
      "func:scan",
      "func:seek",
      "func:set_alias",
      "func:set_default",
      "func:skip",
      "func:status",
      "func:stop",
      "func:volume",
      "func:volumedown",
      "func:volumemute",
      "func:volumeup",
      "func:write_config",
      "func:writeconfig"
    ],
    "old_files": [
      "cli.py_gpt4_889e5fba.py"
    ],
    "new_files": [
      "cli_605725.py"
    ]
  },
  {
    "file_signature": [
      "class:TestProjInfo",
      "func:__init__",
      "func:adapter",
      "func:analyses",
      "func:clean_up_logging",
      "func:create_test_schema",
      "func:dbt_profile_data",
      "func:dbt_profile_target",
      "func:dbt_project_yml",
      "func:dependencies",
      "func:dependencies_yml",
      "func:drop_test_schema",
      "func:environment",
      "func:get_tables_in_schema",
      "func:initialization",
      "func:logs_dir",
      "func:macros",
      "func:models",
      "func:packages",
      "func:packages_yml",
      "func:prefix",
      "func:profile_user",
      "func:profiles_config_update",
      "func:profiles_root",
      "func:profiles_yml",
      "func:project",
      "func:project_config_update",
      "func:project_files",
      "func:project_root",
      "func:project_setup",
      "func:properties",
      "func:run_sql",
      "func:run_sql_file",
      "func:seeds",
      "func:selectors",
      "func:selectors_yml",
      "func:shared_data_dir",
      "func:snapshots",
      "func:test_config",
      "func:test_data_dir",
      "func:tests",
      "func:unique_schema",
      "func:write_project_files",
      "func:write_project_files_recursively"
    ],
    "old_files": [
      "project.py_gpt4_a2c4245c.py"
    ],
    "new_files": [
      "project_72b75e.py"
    ]
  },
  {
    "file_signature": [
      "class:Application",
      "class:CleanupContext",
      "class:CleanupError",
      "func:__bool__",
      "func:__call__",
      "func:__delitem__",
      "func:__eq__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:_add_subapp",
      "func:_build_middlewares",
      "func:_check_frozen",
      "func:_prepare_middleware",
      "func:_reg_subapp_signals",
      "func:_set_loop",
      "func:add_domain",
      "func:add_routes",
      "func:add_subapp",
      "func:cleanup_ctx",
      "func:debug",
      "func:exceptions",
      "func:freeze",
      "func:frozen",
      "func:get",
      "func:middlewares",
      "func:on_cleanup",
      "func:on_response_prepare",
      "func:on_shutdown",
      "func:on_startup",
      "func:pre_freeze",
      "func:pre_frozen",
      "func:reg_handler",
      "func:router"
    ],
    "old_files": [
      "web_app.py_gpt4_64311f2a.py"
    ],
    "new_files": [
      "web_app_e61508.py"
    ]
  },
  {
    "file_signature": [
      "class:Interpreter",
      "class:Script",
      "func:__init__",
      "func:__repr__",
      "func:_analysis",
      "func:_get_module",
      "func:_get_module_context",
      "func:_names",
      "func:_references",
      "func:_search_func",
      "func:complete",
      "func:complete_search",
      "func:extract_function",
      "func:extract_variable",
      "func:get_context",
      "func:get_names",
      "func:get_references",
      "func:get_signatures",
      "func:get_syntax_errors",
      "func:goto",
      "func:help",
      "func:infer",
      "func:inline",
      "func:need_pydoc",
      "func:preload_module",
      "func:rename",
      "func:search",
      "func:set_debug_function"
    ],
    "old_files": [
      "__init__.py_gpt4_f3813224.py"
    ],
    "new_files": [
      "__init___14fc3d.py"
    ]
  },
  {
    "file_signature": [
      "class:CacheBackend",
      "class:RedisScheme",
      "class:_RedisClientT",
      "func:__init__",
      "func:_as_cluster_kwargs",
      "func:_client_from_url_and_query",
      "func:_db_from_path",
      "func:_float_from_str",
      "func:_init_schemes",
      "func:_int_from_str",
      "func:_new_client",
      "func:_prepare_client_kwargs",
      "func:client"
    ],
    "old_files": [
      "redis.py_gpt4_a3218d12.py"
    ],
    "new_files": [
      "redis_925650.py"
    ]
  },
  {
    "file_signature": [
      "class:Parser",
      "func:__init__",
      "func:_recovery_tokenize",
      "func:_stack_removal",
      "func:convert_leaf",
      "func:convert_node",
      "func:current_suite",
      "func:error_recovery",
      "func:parse"
    ],
    "old_files": [
      "parser.py_gpt4_d4af11f1.py"
    ],
    "new_files": [
      "parser_deb8f1.py"
    ]
  },
  {
    "file_signature": [
      "class:ClassMethodArguments",
      "class:ClassMethodGet",
      "class:ClassMethodObject",
      "class:DataclassParamName",
      "class:DataclassSignature",
      "class:DataclassWrapper",
      "class:EnumInstance",
      "class:ItemGetterCallable",
      "class:MergedPartialArguments",
      "class:PartialMethodObject",
      "class:PartialObject",
      "class:PartialSignature",
      "class:PropertyObject",
      "class:ReversedObject",
      "class:StaticMethodObject",
      "class:SuperInstance",
      "class:Wrapped",
      "class:WrapsCallable",
      "func:__init__",
      "func:_create_string_input_function",
      "func:_dataclass",
      "func:_follow_param",
      "func:_functools_wraps",
      "func:_get_bases",
      "func:_get_functions",
      "func:_get_wrapped_value",
      "func:_next",
      "func:_operator_itemgetter",
      "func:_os_path_join",
      "func:_random_choice",
      "func:_return_first_param",
      "func:_return_self",
      "func:argument_clinic",
      "func:builtins_classmethod",
      "func:builtins_getattr",
      "func:builtins_isinstance",
      "func:builtins_iter",
      "func:builtins_next",
      "func:builtins_property",
      "func:builtins_reversed",
      "func:builtins_staticmethod",
      "func:builtins_super",
      "func:builtins_type",
      "func:call",
      "func:collections_namedtuple",
      "func:execute",
      "func:f",
      "func:functools_partial",
      "func:functools_partialmethod",
      "func:get_filters",
      "func:get_kind",
      "func:get_metaclass_filters",
      "func:get_param_names",
      "func:get_signature_functions",
      "func:get_signatures",
      "func:infer",
      "func:iterate",
      "func:name",
      "func:py__call__",
      "func:py__doc__",
      "func:py__get__",
      "func:py__iter__",
      "func:tree_name_to_values",
      "func:unpack",
      "func:wrapper"
    ],
    "old_files": [
      "stdlib.py_gpt4_26ba7adc.py"
    ],
    "new_files": [
      "stdlib_4fd1ea.py"
    ]
  },
  {
    "file_signature": [
      "class:CattDevice",
      "func:__init__",
      "func:__repr__",
      "func:_create_cast",
      "func:_create_controller",
      "func:controller",
      "func:discover",
      "func:ffwd",
      "func:pause",
      "func:play",
      "func:play_url",
      "func:rewind",
      "func:seek",
      "func:stop",
      "func:volume",
      "func:volumedown",
      "func:volumemute",
      "func:volumeup"
    ],
    "old_files": [
      "api.py_gpt4_f7c97dc8.py"
    ],
    "new_files": [
      "api_88b699.py"
    ]
  },
  {
    "file_signature": [
      "class:StreamInfo",
      "func:__init__",
      "func:_get_stream_info",
      "func:_get_stream_preinfo",
      "func:_get_stream_url",
      "func:_is_direct_link",
      "func:extractor",
      "func:guessed_content_category",
      "func:guessed_content_type",
      "func:is_playlist",
      "func:is_playlist_with_active_entry",
      "func:is_remote_file",
      "func:playlist_all_ids",
      "func:playlist_id",
      "func:playlist_length",
      "func:playlist_title",
      "func:set_playlist_entry",
      "func:video_id",
      "func:video_thumbnail",
      "func:video_title",
      "func:video_url"
    ],
    "old_files": [
      "stream_info.py_gpt4_1936bbf7.py"
    ],
    "new_files": [
      "stream_info_00b540.py"
    ]
  },
  {
    "file_signature": [
      "class:Channel",
      "class:SerializedChannel",
      "func:__aiter__",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:_clone",
      "func:_clone_args",
      "func:_compile_deliver",
      "func:_contribute_to_schema",
      "func:_create_event",
      "func:_future_message_to_event",
      "func:_get_default_schema",
      "func:_object_id_as_hex",
      "func:_throw",
      "func:as_future_message",
      "func:clone",
      "func:clone_using_queue",
      "func:derive",
      "func:empty",
      "func:get_topic_name",
      "func:label",
      "func:on_stop_iteration",
      "func:prepare_headers",
      "func:prepare_key",
      "func:prepare_value",
      "func:queue",
      "func:send_soon",
      "func:stream",
      "func:subscriber_count"
    ],
    "old_files": [
      "channels.py_gpt4_adb5b020.py"
    ],
    "new_files": [
      "channels_8e6ab8.py"
    ]
  },
  {
    "file_signature": [
      "class:Registry",
      "func:Model",
      "func:__init__",
      "func:_loads",
      "func:_prepare_payload",
      "func:_serializer",
      "func:dumps_key",
      "func:dumps_value",
      "func:loads_key",
      "func:loads_value"
    ],
    "old_files": [
      "registry.py_gpt4_41523333.py"
    ],
    "new_files": [
      "registry_e23820.py"
    ]
  },
  {
    "file_signature": [
      "class:Callback",
      "class:CallbackStatus",
      "func:__call__",
      "func:__init__",
      "func:_fire_callback",
      "func:_infere_status_from_data",
      "func:_on_timeout",
      "func:_panic",
      "func:_timeout_callback",
      "func:hexid",
      "func:id",
      "func:initialize_timeout",
      "func:on",
      "func:status",
      "func:timeout"
    ],
    "old_files": [
      "callback.py_gpt4_1996b486.py"
    ],
    "new_files": [
      "callback_14d3b1.py"
    ]
  },
  {
    "file_signature": [
      "class:ConnectionPool",
      "class:HTTPConnectionPool",
      "class:HTTPSConnectionPool",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__str__",
      "func:_absolute_url",
      "func:_add_transport_headers",
      "func:_build_context",
      "func:_get_conn",
      "func:_get_timeout",
      "func:_ipv6_host",
      "func:_make_request",
      "func:_new_conn",
      "func:_put_conn",
      "func:_raise_timeout",
      "func:_start_conn",
      "func:close",
      "func:connection_from_url",
      "func:drain_and_release_conn",
      "func:is_same_host",
      "func:urlopen"
    ],
    "old_files": [
      "connectionpool.py_gpt4_8473b69a.py"
    ],
    "new_files": [
      "connectionpool_96094f.py"
    ]
  },
  {
    "file_signature": [
      "class:Driver",
      "class:ReleaseRange",
      "class:TokenProxy",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:_generate_pickle_name",
      "func:_newer",
      "func:_partially_consume_prefix",
      "func:can_advance",
      "func:eat",
      "func:load_grammar",
      "func:load_packaged_grammar",
      "func:lock",
      "func:main",
      "func:parse_file",
      "func:parse_stream",
      "func:parse_stream_raw",
      "func:parse_string",
      "func:parse_tokens",
      "func:release"
    ],
    "old_files": [
      "driver.py_gpt4_a019dddb.py"
    ],
    "new_files": [
      "driver_354fe6.py"
    ]
  },
  {
    "file_signature": [
      "class:FluxSwitch",
      "func:__init__",
      "func:find_start_time",
      "func:find_stop_time",
      "func:is_on",
      "func:name"
    ],
    "old_files": [
      "switch.py_gpt4_e0aed1a2.py"
    ],
    "new_files": [
      "switch_67758e.py"
    ]
  },
  {
    "file_signature": [
      "class:GraphQueue",
      "func:__init__",
      "func:__len__",
      "func:_already_known",
      "func:_find_new_additions",
      "func:_get_scores",
      "func:_grouped_topological_sort",
      "func:_include_in_cost",
      "func:_mark_in_progress",
      "func:empty",
      "func:get",
      "func:get_selected_nodes",
      "func:join",
      "func:mark_done",
      "func:wait_until_something_was_done"
    ],
    "old_files": [
      "queue.py_gpt4_cdaf5dd8.py"
    ],
    "new_files": [
      "queue_9bbba9.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractRouteDef",
      "class:RouteDef",
      "class:RouteTableDef",
      "class:StaticDef",
      "func:__contains__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:delete",
      "func:get",
      "func:head",
      "func:inner",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:register",
      "func:route",
      "func:static",
      "func:view"
    ],
    "old_files": [
      "web_routedef.py_gpt4_dfa030b5.py"
    ],
    "new_files": [
      "web_routedef_a1a149.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncIterablePayload",
      "class:BufferedReaderPayload",
      "class:BytesIOPayload",
      "class:BytesPayload",
      "class:IOBasePayload",
      "class:JsonPayload",
      "class:LookupError",
      "class:Order",
      "class:Payload",
      "class:PayloadRegistry",
      "class:StreamReaderPayload",
      "class:StringIOPayload",
      "class:StringPayload",
      "class:TextIOPayload",
      "class:payload_type",
      "func:__call__",
      "func:__init__",
      "func:_binary_headers",
      "func:content_type",
      "func:decode",
      "func:encoding",
      "func:filename",
      "func:get",
      "func:get_payload",
      "func:headers",
      "func:register",
      "func:register_payload",
      "func:set_content_disposition",
      "func:size"
    ],
    "old_files": [
      "payload.py_gpt4_0648dc16.py"
    ],
    "new_files": [
      "payload_c043e8.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncHTMLSession",
      "class:BaseParser",
      "class:BaseSession",
      "class:Element",
      "class:HTML",
      "class:HTMLResponse",
      "class:HTMLSession",
      "class:MaxRetries",
      "func:__aiter__",
      "func:__convert",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:__repr__",
      "func:_convert_cookiejar_to_render",
      "func:_convert_cookiesjar_to_render",
      "func:_from_response",
      "func:_get_first_or_list",
      "func:_make_absolute",
      "func:absolute_links",
      "func:add_next_symbol",
      "func:attrs",
      "func:base_url",
      "func:browser",
      "func:close",
      "func:encoding",
      "func:find",
      "func:full_text",
      "func:gen",
      "func:get_next",
      "func:html",
      "func:links",
      "func:lxml",
      "func:next",
      "func:pq",
      "func:raw_html",
      "func:render",
      "func:request",
      "func:response_hook",
      "func:run",
      "func:search",
      "func:search_all",
      "func:text",
      "func:user_agent",
      "func:xpath"
    ],
    "old_files": [
      "requests_html.py_gpt4_7179eafa.py"
    ],
    "new_files": [
      "requests_html_b5031b.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseNLPLabelingFunction",
      "class:NLPLabelingFunction",
      "class:SpacyPreprocessorConfig",
      "class:SpacyPreprocessorParameters",
      "class:base_nlp_labeling_function",
      "class:nlp_labeling_function",
      "func:__call__",
      "func:__init__",
      "func:_create_or_check_preprocessor",
      "func:_create_preprocessor"
    ],
    "old_files": [
      "nlp.py_gpt4_c6f6e77f.py"
    ],
    "new_files": [
      "nlp_fe0862.py"
    ]
  },
  {
    "file_signature": [
      "class:AssertTuple",
      "class:BreakOutsideLoop",
      "class:CommentAnnotationSyntaxError",
      "class:ContinueInFinally",
      "class:ContinueOutsideLoop",
      "class:DefaultExceptNotLast",
      "class:DoctestSyntaxError",
      "class:DuplicateArgument",
      "class:FStringMissingPlaceholders",
      "class:ForwardAnnotationSyntaxError",
      "class:FutureFeatureNotDefined",
      "class:IfTuple",
      "class:ImportShadowedByLoopVar",
      "class:ImportStarNotPermitted",
      "class:ImportStarUsage",
      "class:ImportStarUsed",
      "class:InvalidPrintSyntax",
      "class:IsLiteral",
      "class:LateFutureImport",
      "class:Message",
      "class:MultiValueRepeatedKeyLiteral",
      "class:MultiValueRepeatedKeyVariable",
      "class:PercentFormatExpectedMapping",
      "class:PercentFormatExpectedSequence",
      "class:PercentFormatExtraNamedArguments",
      "class:PercentFormatInvalidFormat",
      "class:PercentFormatMissingArgument",
      "class:PercentFormatMixedPositionalAndNamed",
      "class:PercentFormatPositionalCountMismatch",
      "class:PercentFormatStarRequiresSequence",
      "class:PercentFormatUnsupportedFormatCharacter",
      "class:RaiseNotImplemented",
      "class:RedefinedInListComp",
      "class:RedefinedWhileUnused",
      "class:ReturnOutsideFunction",
      "class:ReturnWithArgsInsideGenerator",
      "class:StringDotFormatExtraNamedArguments",
      "class:StringDotFormatExtraPositionalArguments",
      "class:StringDotFormatInvalidFormat",
      "class:StringDotFormatMissingArgument",
      "class:StringDotFormatMixingAutomatic",
      "class:TooManyExpressionsInStarredAssignment",
      "class:TwoStarredExpressions",
      "class:UndefinedExport",
      "class:UndefinedLocal",
      "class:UndefinedName",
      "class:UnusedImport",
      "class:UnusedVariable",
      "class:YieldOutsideFunction",
      "func:__init__",
      "func:__str__"
    ],
    "old_files": [
      "messages.py_gpt4_30e9304b.py"
    ],
    "new_files": [
      "messages_bf1e5c.py"
    ]
  },
  {
    "file_signature": [
      "class:BP",
      "class:BoxPlot",
      "func:__init__",
      "func:_boxes_c",
      "func:_caps_c",
      "func:_color_attrs",
      "func:_get_colors",
      "func:_grouped_plot_by_column",
      "func:_kind",
      "func:_make_legend",
      "func:_make_plot",
      "func:_medians_c",
      "func:_plot",
      "func:_post_plot_logic",
      "func:_set_ticklabels",
      "func:_validate_color_args",
      "func:_whiskers_c",
      "func:boxplot",
      "func:boxplot_frame",
      "func:boxplot_frame_groupby",
      "func:maybe_color_bp",
      "func:orientation",
      "func:plot_group",
      "func:result"
    ],
    "old_files": [
      "boxplot.py_gpt4_8e4f22bc.py"
    ],
    "new_files": [
      "boxplot_5aedc4.py"
    ]
  },
  {
    "file_signature": [
      "class:ConnectionPool",
      "class:HTTPConnectionPool",
      "class:HTTPSConnectionPool",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__str__",
      "func:_absolute_url",
      "func:_add_transport_headers",
      "func:_build_context",
      "func:_get_timeout",
      "func:_ipv6_host",
      "func:_new_conn",
      "func:_raise_timeout",
      "func:close",
      "func:connection_from_url",
      "func:drain_and_release_conn",
      "func:is_same_host"
    ],
    "old_files": [
      "connectionpool.py_gpt4_4740ff85.py"
    ],
    "new_files": [
      "connectionpool_8dc770.py"
    ]
  },
  {
    "file_signature": [
      "class:Document",
      "class:Field",
      "class:Link",
      "class:Response",
      "class:Section",
      "func:__init__",
      "func:get_body_field",
      "func:get_expanded_body",
      "func:get_links",
      "func:get_path_fields",
      "func:get_query_fields",
      "func:get_sections",
      "func:walk_links"
    ],
    "old_files": [
      "document.py_gpt4_99eb2cc1.py"
    ],
    "new_files": [
      "document_48bf0e.py"
    ]
  },
  {
    "file_signature": [
      "class:Plugin1",
      "class:PluginsTestCase",
      "func:delete",
      "func:post_receive",
      "func:pre_receive",
      "func:setUp",
      "func:status_change",
      "func:take_action",
      "func:take_note",
      "func:tearDown",
      "func:test_run_hooks"
    ],
    "old_files": [
      "test_hooks.py_gpt4_80a9401d.py"
    ],
    "new_files": [
      "test_hooks_5c2427.py"
    ]
  },
  {
    "file_signature": [
      "class:Config",
      "class:DeployedResources",
      "func:__init__",
      "func:_chain_lookup",
      "func:_chain_merge",
      "func:_load_json_file",
      "func:_try_old_deployer_values",
      "func:_upgrade_deployed_values",
      "func:_upgrade_lambda_functions",
      "func:_upgrade_rest_api",
      "func:api_gateway_custom_domain",
      "func:api_gateway_endpoint_type",
      "func:api_gateway_endpoint_vpce",
      "func:api_gateway_policy_file",
      "func:api_gateway_stage",
      "func:app_name",
      "func:autogen_policy",
      "func:automatic_layer",
      "func:chalice_app",
      "func:config_file_version",
      "func:config_from_disk",
      "func:create",
      "func:deployed_resources",
      "func:empty",
      "func:environment_variables",
      "func:iam_policy_file",
      "func:iam_role_arn",
      "func:lambda_memory_size",
      "func:lambda_python_version",
      "func:lambda_timeout",
      "func:layers",
      "func:log_retention_in_days",
      "func:manage_iam_role",
      "func:minimum_compression_size",
      "func:profile",
      "func:project_dir",
      "func:reserved_concurrency",
      "func:resource_names",
      "func:resource_values",
      "func:scope",
      "func:security_group_ids",
      "func:subnet_ids",
      "func:tags",
      "func:websocket_api_custom_domain",
      "func:xray_enabled"
    ],
    "old_files": [
      "config.py_gpt4_dded29bd.py"
    ],
    "new_files": [
      "config_93e34f.py"
    ]
  },
  {
    "file_signature": [
      "class:StatisticsSensor",
      "func:__init__",
      "func:_add_state_to_queue",
      "func:_async_cancel_update_listener",
      "func:_async_handle_new_state",
      "func:_async_next_to_purge_timestamp",
      "func:_async_purge_update_and_schedule",
      "func:_async_scheduled_update",
      "func:_async_stats_sensor_state_change_listener",
      "func:_async_stats_sensor_state_report_listener",
      "func:_calculate_device_class",
      "func:_calculate_state_attributes",
      "func:_calculate_state_class",
      "func:_calculate_unit_of_measurement",
      "func:_callable_characteristic_fn",
      "func:_fetch_states_from_database",
      "func:_purge_old_states",
      "func:_stat_average_linear",
      "func:_stat_average_step",
      "func:_stat_average_timeless",
      "func:_stat_binary_average_step",
      "func:_stat_binary_average_timeless",
      "func:_stat_binary_count",
      "func:_stat_binary_count_off",
      "func:_stat_binary_count_on",
      "func:_stat_binary_datetime_newest",
      "func:_stat_binary_datetime_oldest",
      "func:_stat_binary_mean",
      "func:_stat_change",
      "func:_stat_change_sample",
      "func:_stat_change_second",
      "func:_stat_count",
      "func:_stat_datetime_newest",
      "func:_stat_datetime_oldest",
      "func:_stat_datetime_value_max",
      "func:_stat_datetime_value_min",
      "func:_stat_distance_95_percent_of_values",
      "func:_stat_distance_99_percent_of_values",
      "func:_stat_distance_absolute",
      "func:_stat_mean",
      "func:_stat_mean_circular",
      "func:_stat_median",
      "func:_stat_noisiness",
      "func:_stat_percentile",
      "func:_stat_standard_deviation",
      "func:_stat_sum",
      "func:_stat_sum_differences",
      "func:_stat_sum_differences_nonnegative",
      "func:_stat_total",
      "func:_stat_value_max",
      "func:_stat_value_min",
      "func:_stat_variance",
      "func:_update_extra_state_attributes",
      "func:_update_value",
      "func:valid_boundary_configuration",
      "func:valid_keep_last_sample",
      "func:valid_state_characteristic_configuration"
    ],
    "old_files": [
      "sensor.py_gpt4_85e008f1.py"
    ],
    "new_files": [
      "sensor_594ee1.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_openapi_operation_parameters",
      "func:generate_operation_id",
      "func:generate_operation_summary",
      "func:get_fields_from_routes",
      "func:get_openapi",
      "func:get_openapi_operation_metadata",
      "func:get_openapi_operation_request_body",
      "func:get_openapi_path",
      "func:get_openapi_security_definitions"
    ],
    "old_files": [
      "utils.py_gpt4_e1caf7be.py"
    ],
    "new_files": [
      "utils_3fa178.py"
    ]
  },
  {
    "file_signature": [
      "class:TadoClimate",
      "func:__init__",
      "func:_async_update_zone_callback",
      "func:_async_update_zone_data",
      "func:_handle_coordinator_update",
      "func:_is_current_setting_supported_by_current_hvac_mode",
      "func:_is_valid_setting_for_hvac_mode",
      "func:_normalize_target_temp_for_hvac_mode",
      "func:adjust_temp",
      "func:available",
      "func:current_humidity",
      "func:current_temperature",
      "func:extra_state_attributes",
      "func:fan_mode",
      "func:hvac_action",
      "func:hvac_mode",
      "func:max_temp",
      "func:min_temp",
      "func:preset_mode",
      "func:preset_modes",
      "func:swing_mode",
      "func:target_temperature",
      "func:target_temperature_step"
    ],
    "old_files": [
      "climate.py_gpt4_542d0e90.py"
    ],
    "new_files": [
      "climate_d27245.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseSourceFile",
      "class:FilePath",
      "class:FixtureSourceFile",
      "class:ParseFileType",
      "class:RemoteFile",
      "class:SchemaSourceFile",
      "class:SourceFile",
      "func:__init__",
      "func:__post_serialize__",
      "func:_deserialize",
      "func:_serialize",
      "func:absolute_path",
      "func:add_env_var",
      "func:add_metrics_from_measures",
      "func:add_node",
      "func:add_test",
      "func:add_unit_test",
      "func:add_unrendered_config",
      "func:add_unrendered_database",
      "func:add_unrendered_schema",
      "func:append_patch",
      "func:big_seed",
      "func:delete_from_env_vars",
      "func:delete_from_unrendered_configs",
      "func:dict_from_yaml",
      "func:file_id",
      "func:fix_metrics_from_measures",
      "func:full_path",
      "func:get_all_test_ids",
      "func:get_key_and_name_for_test",
      "func:get_tests",
      "func:get_unrendered_config",
      "func:get_unrendered_database",
      "func:get_unrendered_schema",
      "func:macro_patches",
      "func:modification_time",
      "func:node_patches",
      "func:original_file_path",
      "func:relative_path",
      "func:remote",
      "func:remove_tests",
      "func:search_key",
      "func:searched_path",
      "func:seed_too_large",
      "func:source_patches"
    ],
    "old_files": [
      "files.py_gpt4_18460f97.py"
    ],
    "new_files": [
      "files_2ab065.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncHTTPTransport",
      "class:AsyncResponseStream",
      "class:HTTPTransport",
      "class:ResponseStream",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__iter__",
      "func:_load_httpcore_exceptions",
      "func:close",
      "func:handle_request",
      "func:map_httpcore_exceptions"
    ],
    "old_files": [
      "default.py_gpt4_fe677019.py"
    ],
    "new_files": [
      "default_bb0007.py"
    ]
  },
  {
    "file_signature": [
      "class:FixerError",
      "class:MultiprocessRefactoringTool",
      "class:MultiprocessingUnsupported",
      "class:RefactoringTool",
      "class:_EveryNode",
      "func:__init__",
      "func:_child",
      "func:_detect_future_features",
      "func:_from_system_newlines",
      "func:_get_head_types",
      "func:_get_headnode_dict",
      "func:_identity",
      "func:_read_python_source",
      "func:_to_system_newlines",
      "func:advance",
      "func:gen_lines",
      "func:get_all_fix_names",
      "func:get_fixers",
      "func:get_fixers_from_package",
      "func:log_debug",
      "func:log_error",
      "func:log_message",
      "func:parse_block",
      "func:print_output",
      "func:processed_file",
      "func:refactor",
      "func:refactor_dir",
      "func:refactor_docstring",
      "func:refactor_doctest",
      "func:refactor_file",
      "func:refactor_stdin",
      "func:refactor_string",
      "func:refactor_tree",
      "func:summarize",
      "func:traverse_by",
      "func:wrap_toks",
      "func:write_file"
    ],
    "old_files": [
      "refactor.py_gpt4_d1039c8d.py"
    ],
    "new_files": [
      "refactor_3077ca.py"
    ]
  },
  {
    "file_signature": [
      "class:PatchableWebSocketReader",
      "class:TestWebSocketError",
      "func:build_close_frame",
      "func:build_frame",
      "func:out",
      "func:out_low_limit",
      "func:parser",
      "func:parser_low_limit",
      "func:protocol",
      "func:test_close_frame",
      "func:test_close_frame_info",
      "func:test_close_frame_invalid",
      "func:test_close_frame_invalid_2",
      "func:test_close_frame_unicode_err",
      "func:test_compressed_msg_too_large",
      "func:test_continuation",
      "func:test_continuation_err",
      "func:test_continuation_with_close",
      "func:test_continuation_with_close_bad_code",
      "func:test_continuation_with_close_bad_payload",
      "func:test_continuation_with_close_empty",
      "func:test_continuation_with_close_unicode_err",
      "func:test_continuation_with_ping",
      "func:test_ctor",
      "func:test_feed_data_remembers_exception",
      "func:test_flow_control_binary",
      "func:test_flow_control_multi_byte_text",
      "func:test_fragmentation_header",
      "func:test_msg_too_large",
      "func:test_msg_too_large_not_fin",
      "func:test_parse_compress_error_frame",
      "func:test_parse_compress_frame_multi",
      "func:test_parse_compress_frame_single",
      "func:test_parse_frame",
      "func:test_parse_frame_header_control_frame",
      "func:test_parse_frame_header_new_data_err",
      "func:test_parse_frame_header_payload_size",
      "func:test_parse_frame_header_reversed_bits",
      "func:test_parse_frame_length0",
      "func:test_parse_frame_length2",
      "func:test_parse_frame_length2_multi_byte",
      "func:test_parse_frame_length2_multi_byte_multi_packet",
      "func:test_parse_frame_length4",
      "func:test_parse_frame_mask",
      "func:test_parse_no_compress_frame_single",
      "func:test_pickle",
      "func:test_ping_frame",
      "func:test_pong_frame",
      "func:test_simple_binary",
      "func:test_simple_text",
      "func:test_simple_text_unicode_err",
      "func:test_unknown_frame",
      "func:test_websocket_mask_cython",
      "func:test_websocket_mask_cython_empty",
      "func:test_websocket_mask_python",
      "func:test_websocket_mask_python_empty"
    ],
    "old_files": [
      "test_websocket_parser.py_gpt4_a8778b95.py"
    ],
    "new_files": [
      "test_websocket_parser_3e2e83.py"
    ]
  },
  {
    "file_signature": [
      "class:CheckAttribute",
      "class:CompiledModule",
      "class:CompiledName",
      "class:CompiledValue",
      "class:CompiledValueFilter",
      "class:CompiledValueName",
      "class:EmptyCompiledName",
      "class:SignatureParamName",
      "class:UnresolvableParamName",
      "func:__call__",
      "func:__get__",
      "func:__init__",
      "func:__repr__",
      "func:_as_context",
      "func:_create_name",
      "func:_ensure_one_filter",
      "func:_execute_function",
      "func:_get",
      "func:_get_cached_name",
      "func:_get_qualified_names",
      "func:_normalize_create_args",
      "func:_parse_function_doc",
      "func:api_type",
      "func:array_type",
      "func:change_options",
      "func:create_cached_compiled_value",
      "func:create_from_access_path",
      "func:create_from_name",
      "func:execute_annotation",
      "func:execute_operation",
      "func:get",
      "func:get_defining_qualified_value",
      "func:get_filters",
      "func:get_key_values",
      "func:get_kind",
      "func:get_metaclasses",
      "func:get_param_names",
      "func:get_qualified_names",
      "func:get_safe_value",
      "func:get_signatures",
      "func:get_type_hint",
      "func:infer",
      "func:infer_compiled_value",
      "func:is_class",
      "func:is_compiled",
      "func:is_function",
      "func:is_instance",
      "func:is_module",
      "func:is_package",
      "func:is_stub",
      "func:name",
      "func:negate",
      "func:py__bases__",
      "func:py__bool__",
      "func:py__call__",
      "func:py__class__",
      "func:py__doc__",
      "func:py__file__",
      "func:py__getitem__",
      "func:py__iter__",
      "func:py__mro__",
      "func:py__name__",
      "func:py__path__",
      "func:py__simple_getitem__",
      "func:string_name",
      "func:string_names",
      "func:to_string",
      "func:values",
      "func:wrapper"
    ],
    "old_files": [
      "value.py_gpt4_6a3b30ed.py"
    ],
    "new_files": [
      "value_05eb19.py"
    ]
  },
  {
    "file_signature": [
      "class:StrategyTestV3",
      "class:StrategyTestV3Futures",
      "func:adjust_trade_position",
      "func:bot_start",
      "func:informative_pairs",
      "func:leverage",
      "func:populate_entry_trend",
      "func:populate_exit_trend",
      "func:populate_indicators",
      "func:protections"
    ],
    "old_files": [
      "strategy_test_v3.py_gpt4_49c159a8.py"
    ],
    "new_files": [
      "strategy_test_v3_251abc.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseClient",
      "class:Client",
      "class:FunctionNotFoundError",
      "class:HTTPResponse",
      "class:InvokeResponse",
      "class:TestEventsClient",
      "class:TestHTTPClient",
      "class:TestLambdaClient",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_chalice_config",
      "func:_error_response",
      "func:_patched_env_vars",
      "func:create_from_dict",
      "func:delete",
      "func:events",
      "func:generate_cw_event",
      "func:generate_kinesis_event",
      "func:generate_s3_event",
      "func:generate_sns_event",
      "func:generate_sqs_event",
      "func:get",
      "func:head",
      "func:http",
      "func:invoke",
      "func:json_body",
      "func:lambda_",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:request"
    ],
    "old_files": [
      "test.py_gpt4_89891a2f.py"
    ],
    "new_files": [
      "test_2a092a.py"
    ]
  },
  {
    "file_signature": [
      "func:_clean_keys_and_objs",
      "func:_concat_indexes",
      "func:_get_concat_axis_dataframe",
      "func:_get_concat_axis_series",
      "func:_get_result",
      "func:_get_sample_object",
      "func:_make_concat_multiindex",
      "func:_sanitize_mixed_ndim",
      "func:concat",
      "func:new_axes",
      "func:validate_unique_levels"
    ],
    "old_files": [
      "concat.py_gpt4_b116fbaa.py"
    ],
    "new_files": [
      "concat_31a224.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_last_state_changes_stmt",
      "func:_get_rows_with_session",
      "func:_get_single_entity_states_stmt",
      "func:_get_states_for_entities_stmt",
      "func:_lambda_stmt_and_join_attributes",
      "func:_significant_states_stmt",
      "func:_sorted_states_to_dict",
      "func:_state_changed_during_period_stmt",
      "func:get_full_significant_states_with_session",
      "func:get_last_state_changes",
      "func:get_significant_states",
      "func:get_significant_states_with_session",
      "func:state_changes_during_period"
    ],
    "old_files": [
      "legacy.py_gpt4_b246523a.py"
    ],
    "new_files": [
      "legacy_583497.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseScreenshotConfig",
      "class:BotIntegration",
      "class:EmbeddedBotIntegration",
      "class:HubotIntegration",
      "class:Integration",
      "class:ScreenshotConfig",
      "class:WebhookIntegration",
      "func:__init__",
      "func:get_all_event_types_for_integration",
      "func:get_bot_avatar_path",
      "func:get_fixture_and_image_paths",
      "func:get_function",
      "func:get_logo_path",
      "func:get_logo_url",
      "func:get_translated_categories",
      "func:is_enabled",
      "func:split_fixture_path",
      "func:url_object",
      "func:view"
    ],
    "old_files": [
      "integrations.py_gpt4_b64115f4.py"
    ],
    "new_files": [
      "integrations_55ac12.py"
    ]
  },
  {
    "file_signature": [
      "class:test_Monitor",
      "func:assert_on_web_request_end",
      "func:create_monitor",
      "func:create_populated_monitor",
      "func:event",
      "func:message",
      "func:mon",
      "func:on_sample",
      "func:stream",
      "func:table",
      "func:test_TableState_asdict",
      "func:test__sample",
      "func:test_asdict",
      "func:test_init_max_assignment_latency_history",
      "func:test_init_max_assignment_latency_history__default",
      "func:test_init_max_avg_history",
      "func:test_init_max_avg_history__default",
      "func:test_init_max_commit_latency_history",
      "func:test_init_max_commit_latency_history__default",
      "func:test_init_max_send_latency_history",
      "func:test_init_max_send_latency_history__default",
      "func:test_init_rebalances",
      "func:test_on_assignment_completed",
      "func:test_on_assignment_error",
      "func:test_on_assignment_start",
      "func:test_on_commit_completed",
      "func:test_on_commit_initiated",
      "func:test_on_message_in",
      "func:test_on_message_out",
      "func:test_on_rebalance_end",
      "func:test_on_rebalance_return",
      "func:test_on_rebalance_start",
      "func:test_on_send_completed",
      "func:test_on_send_error",
      "func:test_on_send_initiated",
      "func:test_on_stream_event_in",
      "func:test_on_stream_event_out",
      "func:test_on_stream_event_out__missing_state",
      "func:test_on_table_del",
      "func:test_on_table_get",
      "func:test_on_table_set",
      "func:test_on_topic_buffer_full",
      "func:test_on_tp_commit",
      "func:test_on_web_request_end",
      "func:test_on_web_request_end__None_response",
      "func:test_on_web_request_start",
      "func:test_track_tp_end_offsets",
      "func:time",
      "func:topic"
    ],
    "old_files": [
      "test_monitor.py_gpt4_0fe2bb6f.py"
    ],
    "new_files": [
      "test_monitor_31e01e.py"
    ]
  },
  {
    "file_signature": [
      "class:TestPackage",
      "func:_calculate_checksum",
      "func:_get_package_install_test_cases",
      "func:_get_random_package_name",
      "func:_run_package_cmd",
      "func:_verify_file_is_executable",
      "func:app_skeleton",
      "func:assert_can_package_dependency",
      "func:cd",
      "func:runner",
      "func:test_can_package_pandas",
      "func:test_can_package_simplejson",
      "func:test_can_package_sqlalchemy",
      "func:test_can_package_with_dashes_in_name",
      "func:test_does_not_package_bad_requirements_file",
      "func:test_package_install_smoke_tests",
      "func:test_packaging_requirements_keeps_same_hash",
      "func:test_preserves_executable_permissions"
    ],
    "old_files": [
      "test_package.py_gpt4_523b0cd1.py"
    ],
    "new_files": [
      "test_package_4421e1.py"
    ]
  },
  {
    "file_signature": [
      "class:MacroGenerator",
      "class:MacroStack",
      "class:UnitTestMacroGenerator",
      "func:__call__",
      "func:__init__",
      "func:_convert_function",
      "func:add_rendered_test_kwargs",
      "func:depth",
      "func:get_rendered",
      "func:get_supported_languages",
      "func:pop",
      "func:push",
      "func:track_call",
      "func:undefined_error"
    ],
    "old_files": [
      "jinja.py_gpt4_8f8d2bb4.py"
    ],
    "new_files": [
      "jinja_17d794.py"
    ]
  },
  {
    "file_signature": [
      "class:UnitTestManifestLoader",
      "class:UnitTestParser",
      "func:__init__",
      "func:_build_fixture_raw_code",
      "func:_build_fqn",
      "func:_build_unit_test_config",
      "func:_convert_csv_to_list_of_dicts",
      "func:_get_fixture",
      "func:_get_original_input_node",
      "func:_get_unit_test",
      "func:_load_rows_from_seed",
      "func:_promote_first_non_none_row",
      "func:_validate_and_normalize_expect",
      "func:_validate_and_normalize_given",
      "func:_validate_and_normalize_rows",
      "func:find_tested_model_node",
      "func:get_fixture_file_rows",
      "func:load",
      "func:parse",
      "func:parse_unit_test_case",
      "func:process_models_for_unit_test"
    ],
    "old_files": [
      "unit_tests.py_gpt4_77d66121.py"
    ],
    "new_files": [
      "unit_tests_627911.py"
    ]
  },
  {
    "file_signature": [
      "class:CookieJar",
      "class:DummyCookieJar",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_delete_cookies",
      "func:_do_expiration",
      "func:_expire_cookie",
      "func:_is_domain_match",
      "func:_parse_date",
      "func:clear",
      "func:clear_domain",
      "func:filter_cookies",
      "func:load",
      "func:quote_cookie",
      "func:save",
      "func:update_cookies"
    ],
    "old_files": [
      "cookiejar.py_gpt4_3ace996d.py"
    ],
    "new_files": [
      "cookiejar_1ce0bd.py"
    ]
  },
  {
    "file_signature": [
      "func:delete",
      "func:get",
      "func:head",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:request",
      "func:stream"
    ],
    "old_files": [
      "_api.py_gpt4_1352a98b.py"
    ],
    "new_files": [
      "_api_8facbb.py"
    ]
  },
  {
    "file_signature": [
      "class:ApiKeyAuth",
      "class:Client",
      "class:CustomJsonEncoder",
      "class:HTTPClient",
      "class:TokenAuth",
      "func:__call__",
      "func:__init__",
      "func:action",
      "func:default",
      "func:default_headers",
      "func:delete",
      "func:delete_alert",
      "func:get",
      "func:post",
      "func:put",
      "func:send_alert"
    ],
    "old_files": [
      "client.py_gpt4_1a527a58.py"
    ],
    "new_files": [
      "client_8529a4.py"
    ]
  },
  {
    "file_signature": [
      "class:MultiLabelField",
      "func:__init__",
      "func:__len__",
      "func:__str__",
      "func:_maybe_warn_for_namespace",
      "func:as_tensor",
      "func:count_vocab_items",
      "func:empty_field",
      "func:get_padding_lengths",
      "func:human_readable_repr",
      "func:index"
    ],
    "old_files": [
      "multilabel_field.py_gpt4_214590a4.py"
    ],
    "new_files": [
      "multilabel_field_d11efd.py"
    ]
  },
  {
    "file_signature": [
      "class:Decoder",
      "class:Encoder",
      "class:EncoderDecoderModel",
      "class:FeedForward",
      "class:TestFairScaleFsdpAccelerator",
      "func:__init__",
      "func:_dist_load_and_train",
      "func:forward",
      "func:test_distributed_loading_and_training",
      "func:tie_weights"
    ],
    "old_files": [
      "fairscale_fsdp_accelerator_test.py_gpt4_1b12340f.py"
    ],
    "new_files": [
      "fairscale_fsdp_accelerator_test_c1bd1f.py"
    ]
  },
  {
    "file_signature": [
      "class:RunExecutionResult",
      "class:RunResult",
      "class:RunResultOutput",
      "class:RunResultsArtifact",
      "class:RunResultsMetadata",
      "func:compatible_previous_versions",
      "func:from_execution_results",
      "func:from_node",
      "func:process_run_result",
      "func:skipped",
      "func:upgrade_schema_version",
      "func:write"
    ],
    "old_files": [
      "run.py_gpt4_b8f63494.py"
    ],
    "new_files": [
      "run_f6671c.py"
    ]
  },
  {
    "file_signature": [
      "class:Predict",
      "class:_PredictManager",
      "func:__init__",
      "func:_get_instance_data",
      "func:_get_json_data",
      "func:_get_predictor",
      "func:_maybe_print_to_console_and_file",
      "func:_predict",
      "func:_predict_instances",
      "func:_predict_json",
      "func:add_subparser",
      "func:run"
    ],
    "old_files": [
      "predict.py_gpt4_ba4516a8.py"
    ],
    "new_files": [
      "predict_dd3e15.py"
    ]
  },
  {
    "file_signature": [
      "class:Isa182TestCase",
      "class:NotificationBlackout",
      "func:post_receive",
      "func:pre_receive",
      "func:setUp",
      "func:status_change",
      "func:tearDown",
      "func:test_ack_active_alarm",
      "func:test_operator_shelve",
      "func:test_operator_unack",
      "func:test_out_of_service",
      "func:test_rtn_before_ack"
    ],
    "old_files": [
      "test_isa_18_2.py_gpt4_076df0d5.py"
    ],
    "new_files": [
      "test_isa_18_2_e8d887.py"
    ]
  },
  {
    "file_signature": [
      "class:BiggestName",
      "class:MicrobatchModelRunner",
      "class:ModelRunner",
      "class:RunTask",
      "func:__eq__",
      "func:__init__",
      "func:__lt__",
      "func:_build_failed_run_batch_result",
      "func:_build_run_microbatch_model_result",
      "func:_build_run_model_result",
      "func:_build_succesful_run_batch_result",
      "func:_execute_microbatch_materialization",
      "func:_execute_model",
      "func:_get_adapter_info",
      "func:_has_relation",
      "func:_hook_keyfunc",
      "func:_hook_list",
      "func:_is_incremental",
      "func:_materialization_relations",
      "func:_submit_batch",
      "func:_validate_materialization_relations_dict",
      "func:after_execute",
      "func:after_run",
      "func:batch_start",
      "func:before_execute",
      "func:before_run",
      "func:compile",
      "func:describe_batch",
      "func:describe_node",
      "func:execute",
      "func:get_execution_status",
      "func:get_hook",
      "func:get_hook_sql",
      "func:get_hooks_by_tags",
      "func:get_hooks_by_type",
      "func:get_node_representation",
      "func:get_node_selector",
      "func:get_runner_type",
      "func:handle_job_queue",
      "func:handle_microbatch_model",
      "func:merge_batch_results",
      "func:on_skip",
      "func:populate_microbatch_batches",
      "func:print_batch_result_line",
      "func:print_batch_start_line",
      "func:print_result_line",
      "func:print_results_line",
      "func:print_start_line",
      "func:raise_on_first_error",
      "func:safe_run_hooks",
      "func:set_batch_idx",
      "func:set_batches",
      "func:set_relation_exists",
      "func:should_run_in_parallel",
      "func:task_end_messages",
      "func:track_model_run"
    ],
    "old_files": [
      "run.py_gpt4_267c585a.py"
    ],
    "new_files": [
      "run_b777ab.py"
    ]
  },
  {
    "file_signature": [
      "class:Project",
      "func:__init__",
      "func:__repr__",
      "func:_get_base_sys_path",
      "func:_get_config_folder_path",
      "func:_get_json_path",
      "func:_get_sys_path",
      "func:_is_django_path",
      "func:_is_potential_project",
      "func:_remove_duplicates_from_path",
      "func:_remove_imports",
      "func:_search_func",
      "func:_try_to_skip_duplicates",
      "func:complete_search",
      "func:get_default_project",
      "func:get_environment",
      "func:load",
      "func:load_unsafe_extensions",
      "func:path",
      "func:save",
      "func:search",
      "func:smart_sys_path",
      "func:sys_path",
      "func:wrapper"
    ],
    "old_files": [
      "project.py_gpt4_e708b8cd.py"
    ],
    "new_files": [
      "project_2d0af1.py"
    ]
  },
  {
    "file_signature": [
      "class:ParseError",
      "class:Parser",
      "func:__init__",
      "func:addtoken",
      "func:classify",
      "func:pop",
      "func:push",
      "func:setup",
      "func:shift"
    ],
    "old_files": [
      "parse.py_gpt4_20a9738b.py"
    ],
    "new_files": [
      "parse_7b93d1.py"
    ]
  },
  {
    "file_signature": [
      "class:BackslashNode",
      "class:BlankLineAtEnd",
      "class:BracketNode",
      "class:ImplicitNode",
      "class:IndentationNode",
      "class:IndentationTypes",
      "class:PEP8Normalizer",
      "class:PEP8NormalizerConfig",
      "func:__init__",
      "func:__repr__",
      "func:_analyse_non_prefix",
      "func:_check_line_length",
      "func:_check_spacing",
      "func:_check_tabs_spaces",
      "func:_get_wanted_blank_lines_count",
      "func:_is_magic_name",
      "func:_reset_newlines",
      "func:_visit_node",
      "func:_visit_part",
      "func:add_if_spaces",
      "func:add_issue",
      "func:add_not_spaces",
      "func:get_latest_suite_node",
      "func:is_issue",
      "func:visit_leaf",
      "func:visit_node"
    ],
    "old_files": [
      "pep8.py_gpt4_747b5b20.py"
    ],
    "new_files": [
      "pep8_82e145.py"
    ]
  },
  {
    "file_signature": [
      "class:SampledSoftmaxLoss",
      "func:__init__",
      "func:_choice",
      "func:_forward_eval",
      "func:_forward_train",
      "func:forward",
      "func:get_buffer",
      "func:initialize_num_words",
      "func:log_uniform_candidate_sampler"
    ],
    "old_files": [
      "sampled_softmax_loss.py_gpt4_f091e779.py"
    ],
    "new_files": [
      "sampled_softmax_loss_ab8f9c.py"
    ]
  },
  {
    "file_signature": [
      "class:TestInitInsideOfProjectBase",
      "class:TestInitInsideProjectAndSkipProfileSetup",
      "class:TestInitInvalidProfileTemplate",
      "class:TestInitInvalidProjectNameCLI",
      "class:TestInitInvalidProjectNamePrompt",
      "class:TestInitOutsideOfProject",
      "class:TestInitOutsideOfProjectBase",
      "class:TestInitOutsideOfProjectSpecifyingInvalidProfile",
      "class:TestInitOutsideOfProjectSpecifyingProfileNoProfilesYml",
      "class:TestInitOutsideOfProjectWithSpecifiedProfile",
      "class:TestInitProjectWithExistingProfilesYml",
      "class:TestInitProjectWithProfileTemplateWithoutExistingProfilesYml",
      "class:TestInitProjectWithoutExistingProfilesYml",
      "class:TestInitProjectWithoutExistingProfilesYmlOrTemplate",
      "class:TestInitProvidedProjectNameAndSkipProfileSetup",
      "func:dbt_profile_data",
      "func:exists_side_effect",
      "func:project_name",
      "func:setup",
      "func:test_init_inside_project_and_skip_profile_setup",
      "func:test_init_invalid_project_name_cli",
      "func:test_init_invalid_project_name_prompt",
      "func:test_init_provided_project_name_and_skip_profile_setup",
      "func:test_init_task_in_project_specifying_profile_errors",
      "func:test_init_task_in_project_with_existing_profiles_yml",
      "func:test_init_task_in_project_with_invalid_profile_template",
      "func:test_init_task_in_project_with_profile_template_without_existing_profiles_yml",
      "func:test_init_task_in_project_without_existing_profiles_yml",
      "func:test_init_task_in_project_without_existing_profiles_yml_or_profile_template",
      "func:test_init_task_in_project_without_profile_yml_specifying_profile_errors",
      "func:test_init_task_outside_of_project",
      "func:test_init_task_outside_of_project_with_specified_profile",
      "func:test_init_task_outside_project_specifying_invalid_profile_errors",
      "func:test_init_task_outside_project_specifying_profile_no_profiles_yml_errors"
    ],
    "old_files": [
      "test_init.py_gpt4_870ad21b.py"
    ],
    "new_files": [
      "test_init_873ad0.py"
    ]
  },
  {
    "file_signature": [
      "class:AccessLoggerWrapper",
      "class:PayloadAccessError",
      "class:RequestHandler",
      "class:RequestPayloadError",
      "class:_ErrInfo",
      "func:__init__",
      "func:__repr__",
      "func:_make_error_handler",
      "func:_process_keepalive",
      "func:close",
      "func:connection_lost",
      "func:connection_made",
      "func:data_received",
      "func:enabled",
      "func:eof_received",
      "func:force_close",
      "func:handle_error",
      "func:keep_alive",
      "func:keepalive_timeout",
      "func:log_debug",
      "func:log_exception",
      "func:set_parser"
    ],
    "old_files": [
      "web_protocol.py_gpt4_4cc42b10.py"
    ],
    "new_files": [
      "web_protocol_b74f41.py"
    ]
  },
  {
    "file_signature": [
      "class:EvalbBracketingScorerTest",
      "func:multiple_runs",
      "func:setup_method",
      "func:tearDown",
      "func:test_distributed_evalb",
      "func:test_evalb_correctly_calculates_bracketing_metrics_over_multiple_trees",
      "func:test_evalb_correctly_scores_identical_trees",
      "func:test_evalb_correctly_scores_imperfect_trees",
      "func:test_evalb_with_terrible_trees_handles_nan_f1",
      "func:test_multiple_distributed_runs"
    ],
    "old_files": [
      "evalb_bracketing_scorer_test.py_gpt4_12a3ec63.py"
    ],
    "new_files": [
      "evalb_bracketing_scorer_test_a77d39.py"
    ]
  },
  {
    "file_signature": [
      "class:ActorT",
      "class:AgentManagerT",
      "class:AgentT",
      "class:AgentTestWrapperT",
      "class:AsyncIterableActorT",
      "class:AwaitableActorT",
      "class:_AppT",
      "func:__call__",
      "func:__init__",
      "func:_agent_label",
      "func:actor_tracebacks",
      "func:add_sink",
      "func:cancel",
      "func:channel",
      "func:channel_iterator",
      "func:clone",
      "func:get_topic_names",
      "func:human_tracebacks",
      "func:info",
      "func:stream",
      "func:test_context",
      "func:to_message",
      "func:traceback"
    ],
    "old_files": [
      "agents.py_gpt4_7fcf219e.py"
    ],
    "new_files": [
      "agents_3f7d1d.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoLight",
      "func:__init__",
      "func:available",
      "func:brightness",
      "func:color_mode",
      "func:color_temp_kelvin",
      "func:effect",
      "func:effect_list",
      "func:hs_color",
      "func:is_on",
      "func:rgbw_color",
      "func:rgbww_color",
      "func:supported_color_modes",
      "func:unique_id"
    ],
    "old_files": [
      "light.py_gpt4_d56e7802.py"
    ],
    "new_files": [
      "light_41b89c.py"
    ]
  },
  {
    "file_signature": [
      "class:TestExpansionWithSelectors",
      "class:TestSelectionExpansion",
      "func:list_tests_and_assert",
      "func:project_config_update",
      "func:run_tests_and_assert",
      "func:selectors",
      "func:test_all_tests_no_specifiers",
      "func:test_exclude_column_level_tag",
      "func:test_exclude_data_test_tag",
      "func:test_exclude_model_b",
      "func:test_model_a_alone",
      "func:test_model_a_exclude_specific_test",
      "func:test_model_a_exclude_specific_test_buildable",
      "func:test_model_a_exclude_specific_test_cautious",
      "func:test_model_a_indirect_selection",
      "func:test_model_a_indirect_selection_buildable",
      "func:test_model_a_indirect_selection_cautious",
      "func:test_model_a_indirect_selection_eager",
      "func:test_model_a_indirect_selection_empty",
      "func:test_model_a_indirect_selection_exclude_unique_tests",
      "func:test_model_a_model_b",
      "func:test_model_a_only_singular",
      "func:test_model_a_only_singular_cautious",
      "func:test_model_a_only_singular_eager",
      "func:test_model_a_only_singular_unset",
      "func:test_model_a_sources",
      "func:test_model_tag_test_name_intersection",
      "func:test_only_generic",
      "func:test_only_singular",
      "func:test_select_column_level_tag",
      "func:test_selector_model_a_buildable_indirect_selection",
      "func:test_selector_model_a_cautious_indirect_selection",
      "func:test_selector_model_a_eager_indirect_selection",
      "func:test_selector_model_a_unset_indirect_selection",
      "func:test_test_level_tag",
      "func:test_test_name_intersection"
    ],
    "old_files": [
      "test_selection_expansion.py_gpt4_7b9b0e02.py"
    ],
    "new_files": [
      "test_selection_expansion_cb0b69.py"
    ]
  },
  {
    "file_signature": [
      "class:InternalServerError",
      "class:SmokeTestApplication",
      "func:__init__",
      "func:_assert_contains_access_control_allow_methods",
      "func:_create_wrapped_retry_function",
      "func:_delete_app",
      "func:_deploy_app",
      "func:_deploy_with_retries",
      "func:_get_error_code_from_exception",
      "func:_get_json",
      "func:_get_resource_id",
      "func:_inject_app_name",
      "func:_send_request",
      "func:_wait_for_stablize",
      "func:_wrapped_with_retry",
      "func:apig_client",
      "func:get_json",
      "func:get_response",
      "func:options_response",
      "func:post_response",
      "func:put_response",
      "func:redeploy_once",
      "func:rest_api_id",
      "func:retry",
      "func:smoke_test_app",
      "func:test_api_key_required_fails_with_no_key",
      "func:test_can_handle_charset",
      "func:test_can_have_nested_routes",
      "func:test_can_raise_bad_request",
      "func:test_can_raise_not_found",
      "func:test_can_read_json_body_on_post",
      "func:test_can_return_default_binary_data_to_a_browser",
      "func:test_can_round_trip_binary",
      "func:test_can_round_trip_binary_custom_content_type",
      "func:test_can_route_multiple_methods_in_one_view",
      "func:test_can_support_cors",
      "func:test_can_support_custom_cors",
      "func:test_can_use_builtin_custom_auth",
      "func:test_can_use_shared_auth",
      "func:test_custom_response",
      "func:test_empty_raw_body",
      "func:test_form_encoded_content_type",
      "func:test_multi_doc_mapped_in_api",
      "func:test_multifile_support",
      "func:test_path_params_mapped_in_api",
      "func:test_redeploy_change_route_info",
      "func:test_redeploy_changed_function",
      "func:test_redeploy_new_function",
      "func:test_redeploy_no_change_view",
      "func:test_redeploy_view_deleted",
      "func:test_returns_simple_response",
      "func:test_single_doc_mapped_in_api",
      "func:test_supports_path_params",
      "func:test_supports_post",
      "func:test_supports_put",
      "func:test_supports_shared_routes",
      "func:test_to_dict_is_also_json_serializable",
      "func:test_unexpected_error_raises_500_in_prod_mode",
      "func:test_websocket_lifecycle",
      "func:url",
      "func:websocket_api_id",
      "func:websocket_connect_url"
    ],
    "old_files": [
      "test_features.py_gpt4_6df2353e.py"
    ],
    "new_files": [
      "test_features_a57fa5.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_graph",
      "func:_get_manifest",
      "func:graph",
      "func:id_macro",
      "func:manifest",
      "func:test_invalid_specs",
      "func:test_parse_specs",
      "func:test_run_specs"
    ],
    "old_files": [
      "test_graph_selection.py_gpt4_fdead4e1.py"
    ],
    "new_files": [
      "test_graph_selection_f68296.py"
    ]
  },
  {
    "file_signature": [
      "class:GenericThermostat",
      "func:__init__",
      "func:_async_startup",
      "func:_async_switch_changed",
      "func:_async_update_temp",
      "func:_is_device_active",
      "func:current_temperature",
      "func:hvac_action",
      "func:hvac_mode",
      "func:max_temp",
      "func:min_temp",
      "func:precision",
      "func:target_temperature",
      "func:target_temperature_step"
    ],
    "old_files": [
      "climate.py_gpt4_e4d16686.py"
    ],
    "new_files": [
      "climate_588757.py"
    ]
  },
  {
    "file_signature": [
      "class:RootModel",
      "class:_RootModelMetaclass",
      "func:__copy__",
      "func:__deepcopy__",
      "func:__eq__",
      "func:__getstate__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__repr_args__",
      "func:__setstate__",
      "func:model_construct",
      "func:model_dump"
    ],
    "old_files": [
      "root_model.py_gpt4_5117385a.py"
    ],
    "new_files": [
      "root_model_c9296c.py"
    ]
  },
  {
    "file_signature": [
      "class:ImageLoader",
      "class:TorchImageLoader",
      "func:__call__",
      "func:__init__",
      "func:_pack_image_list",
      "func:load"
    ],
    "old_files": [
      "image_loader.py_gpt4_e007d9e1.py"
    ],
    "new_files": [
      "image_loader_a0ea65.py"
    ]
  },
  {
    "file_signature": [
      "class:MockDatasetReader",
      "class:MockMdsDatasetReader",
      "class:MockMmpdsDatasetReader",
      "class:MockMmpsDatasetReader",
      "func:__init__",
      "func:_read",
      "func:test_instance_slicing",
      "func:text_to_instance"
    ],
    "old_files": [
      "dataset_reader_test.py_gpt4_85d3c85e.py"
    ],
    "new_files": [
      "dataset_reader_test_19a9b5.py"
    ]
  },
  {
    "file_signature": [
      "func:_call_initvar",
      "func:create_dataclass",
      "func:dataclass",
      "func:is_pydantic_dataclass",
      "func:make_pydantic_fields_compatible",
      "func:rebuild_dataclass"
    ],
    "old_files": [
      "dataclasses.py_gpt4_f70d3a68.py"
    ],
    "new_files": [
      "dataclasses_968ced.py"
    ]
  },
  {
    "file_signature": [
      "func:_extract_model_type_from_queryset",
      "func:determine_proper_manager_type",
      "func:extract_proper_type_queryset_values",
      "func:extract_proper_type_queryset_values_list",
      "func:get_field_type_from_lookup",
      "func:get_values_list_row_type",
      "func:resolve_field_lookups"
    ],
    "old_files": [
      "querysets.py_gpt4_1a705727.py"
    ],
    "new_files": [
      "querysets_ea35a5.py"
    ]
  },
  {
    "file_signature": [
      "class:PretrainedTransformerEmbedder",
      "func:__init__",
      "func:_fold_long_sequences",
      "func:_number_of_token_type_embeddings",
      "func:_unfold_long_sequences",
      "func:fold",
      "func:forward",
      "func:get_output_dim",
      "func:lengths_to_mask",
      "func:train"
    ],
    "old_files": [
      "pretrained_transformer_embedder.py_gpt4_193bb568.py"
    ],
    "new_files": [
      "pretrained_transformer_embedder_dde022.py"
    ]
  },
  {
    "file_signature": [
      "class:Checkpointer",
      "func:__init__",
      "func:_find_all_checkpoints",
      "func:_is_primary",
      "func:_model_state_path",
      "func:_parse_model_state_path",
      "func:_parse_training_state_path",
      "func:_remove_checkpoint",
      "func:_training_state_path",
      "func:find_latest_checkpoint",
      "func:load_checkpoint",
      "func:maybe_save_checkpoint",
      "func:save_checkpoint"
    ],
    "old_files": [
      "checkpointer.py_gpt4_94c98f2d.py"
    ],
    "new_files": [
      "checkpointer_2adffa.py"
    ]
  },
  {
    "file_signature": [
      "class:FrameParser",
      "class:FrameWriter",
      "class:JSONTableWriter",
      "class:JsonReader",
      "class:Parser",
      "class:SeriesParser",
      "class:SeriesWriter",
      "class:Writer",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:_combine_lines",
      "func:_convert_axes",
      "func:_format_axes",
      "func:_get_data_from_filepath",
      "func:_get_object_parser",
      "func:_parse",
      "func:_should_convert_dates",
      "func:_try_convert_data",
      "func:_try_convert_to_date",
      "func:_try_convert_types",
      "func:check_keys_split",
      "func:close",
      "func:obj_to_write",
      "func:parse",
      "func:read",
      "func:read_json",
      "func:to_json",
      "func:write"
    ],
    "old_files": [
      "_json.py_gpt4_09ea9ba0.py"
    ],
    "new_files": [
      "_json_57f411.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncResponse",
      "class:PreparedRequest",
      "class:Request",
      "class:RequestEncodingMixin",
      "class:RequestHooksMixin",
      "class:Response",
      "func:__enter__",
      "func:__exit__",
      "func:__getstate__",
      "func:__init__",
      "func:__iter__",
      "func:__repr__",
      "func:__setstate__",
      "func:_encode_files",
      "func:_encode_params",
      "func:_get_idna_encoded_host",
      "func:apparent_encoding",
      "func:close",
      "func:content",
      "func:copy",
      "func:deregister_hook",
      "func:generate",
      "func:is_permanent_redirect",
      "func:is_redirect",
      "func:iter_content",
      "func:iter_lines",
      "func:json",
      "func:links",
      "func:next",
      "func:ok",
      "func:path_url",
      "func:prepare",
      "func:prepare_auth",
      "func:prepare_body",
      "func:prepare_content_length",
      "func:prepare_cookies",
      "func:prepare_headers",
      "func:prepare_hooks",
      "func:prepare_method",
      "func:prepare_url",
      "func:raise_for_status",
      "func:register_hook",
      "func:send",
      "func:text",
      "func:uri"
    ],
    "old_files": [
      "http_models.py_gpt4_cc140ed5.py"
    ],
    "new_files": [
      "http_models_d4e52a.py"
    ]
  },
  {
    "file_signature": [
      "class:Embeddings",
      "class:ImageFeatureEmbeddings",
      "class:TransformerEmbeddings",
      "func:__init__",
      "func:_from_config",
      "func:forward"
    ],
    "old_files": [
      "transformer_embeddings.py_gpt4_ab63089b.py"
    ],
    "new_files": [
      "transformer_embeddings_ca9dbe.py"
    ]
  },
  {
    "file_signature": [
      "class:MacroNamespace",
      "class:MacroNamespaceBuilder",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_add_macro_to",
      "func:_keys",
      "func:_search_order",
      "func:add_macro",
      "func:add_macros",
      "func:build_namespace",
      "func:get_from_package"
    ],
    "old_files": [
      "macros.py_gpt4_6497df06.py"
    ],
    "new_files": [
      "macros_10e8dd.py"
    ]
  },
  {
    "file_signature": [
      "class:Linter",
      "func:__init__",
      "func:add_lint_marks",
      "func:add_message",
      "func:erase_lint_marks",
      "func:get_lineno_msgs",
      "func:get_mypy_settings",
      "func:get_outlines",
      "func:is_that_code",
      "func:last_selected_lineno",
      "func:parse_errors",
      "func:parse_results",
      "func:run_linter",
      "func:underline_range",
      "func:underline_regex",
      "func:update_statusbar"
    ],
    "old_files": [
      "sublime.py_gpt4_a94819a9.py"
    ],
    "new_files": [
      "sublime_b6199e.py"
    ]
  },
  {
    "file_signature": [
      "class:Benchmark",
      "func:__init__",
      "func:create_benchmark_agent",
      "func:create_produce_command",
      "func:generate_values",
      "func:install",
      "func:on_published"
    ],
    "old_files": [
      "base.py_gpt4_c6d6bede.py"
    ],
    "new_files": [
      "base_ef8405.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseDeployStep",
      "class:BuildStage",
      "class:ChaliceDeploymentError",
      "class:Deployer",
      "class:DeploymentPackager",
      "class:DeploymentReporter",
      "class:InjectDefaults",
      "class:LambdaEventSourcePolicyInjector",
      "class:ManagedLayerDeploymentPackager",
      "class:NoopResultsRecorder",
      "class:PolicyGenerator",
      "class:ResultsRecorder",
      "class:SwaggerBuilder",
      "class:WebsocketPolicyInjector",
      "func:__init__",
      "func:_create_deployer",
      "func:_default_report",
      "func:_deploy",
      "func:_get_error_location",
      "func:_get_error_message",
      "func:_get_error_message_for_connection_error",
      "func:_get_error_suggestion",
      "func:_get_mb",
      "func:_get_verb_from_client_method",
      "func:_inject_into_function",
      "func:_inject_policy",
      "func:_inject_trigger_policy",
      "func:_needs_policy_injected",
      "func:_read_document_from_file",
      "func:_report_domain_name",
      "func:_report_lambda_function",
      "func:_report_lambda_layer",
      "func:_report_rest_api",
      "func:_report_websocket_api",
      "func:_validate_config",
      "func:_wrap_text",
      "func:create_build_stage",
      "func:create_default_deployer",
      "func:create_deletion_deployer",
      "func:create_plan_only_deployer",
      "func:deploy",
      "func:display_report",
      "func:execute",
      "func:generate_report",
      "func:handle",
      "func:handle_autogeniampolicy",
      "func:handle_deploymentpackage",
      "func:handle_domainname",
      "func:handle_dynamodbeventsource",
      "func:handle_filebasediampolicy",
      "func:handle_kinesiseventsource",
      "func:handle_lambdafunction",
      "func:handle_lambdalayer",
      "func:handle_restapi",
      "func:handle_sqseventsource",
      "func:handle_websocketapi",
      "func:record_results"
    ],
    "old_files": [
      "deployer.py_gpt4_4d988565.py"
    ],
    "new_files": [
      "deployer_c2beb1.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncHTTPSession",
      "class:HTTPSession",
      "class:SessionRedirectMixin",
      "func:__enter__",
      "func:__exit__",
      "func:__getstate__",
      "func:__init__",
      "func:__setstate__",
      "func:close",
      "func:get",
      "func:get_adapter",
      "func:get_redirect_target",
      "func:head",
      "func:merge_environment_settings",
      "func:merge_hooks",
      "func:merge_setting",
      "func:mount",
      "func:prepare_request",
      "func:rebuild_auth",
      "func:rebuild_method",
      "func:rebuild_proxies",
      "func:request",
      "func:resolve_redirects",
      "func:send"
    ],
    "old_files": [
      "http_sessions.py_gpt4_83f5c553.py"
    ],
    "new_files": [
      "http_sessions_1ab9ee.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseActions",
      "class:BaseEnvironment",
      "class:Positions",
      "func:__init__",
      "func:_get_observation",
      "func:_is_valid",
      "func:_update_history",
      "func:_update_total_profit",
      "func:_update_unrealized_total_profit",
      "func:action_masks",
      "func:add_entry_fee",
      "func:add_exit_fee",
      "func:calculate_reward",
      "func:current_price",
      "func:get_actions",
      "func:get_attr",
      "func:get_trade_duration",
      "func:get_unrealized_profit",
      "func:is_tradesignal",
      "func:opposite",
      "func:reset",
      "func:reset_env",
      "func:reset_tensorboard_log",
      "func:seed",
      "func:set_action_space",
      "func:step",
      "func:tensorboard_log"
    ],
    "old_files": [
      "BaseEnvironment.py_gpt4_5f8d69fa.py"
    ],
    "new_files": [
      "BaseEnvironment_875d27.py"
    ]
  },
  {
    "file_signature": [
      "class:ParseError",
      "class:Parser",
      "class:Recorder",
      "func:__init__",
      "func:_addtoken",
      "func:add_token",
      "func:addtoken",
      "func:backtrack",
      "func:classify",
      "func:determine_route",
      "func:ilabels",
      "func:lam_sub",
      "func:pop",
      "func:push",
      "func:setup",
      "func:shift",
      "func:stack_copy",
      "func:switch_to"
    ],
    "old_files": [
      "parse.py_gpt4_b8cc2822.py"
    ],
    "new_files": [
      "parse_84003e.py"
    ]
  },
  {
    "file_signature": [
      "class:BeamSearchTest",
      "func:_check_results",
      "func:_step_function",
      "func:_step_function_with_timestep",
      "func:get_step_function",
      "func:setup_method",
      "func:test_batch_size_of_one",
      "func:test_catch_bad_config",
      "func:test_default_from_params_params",
      "func:test_diff_shape_state",
      "func:test_different_per_node_beam_size",
      "func:test_early_stopping",
      "func:test_empty_sequences",
      "func:test_finished_state",
      "func:test_greedy_search",
      "func:test_gumbel_sampler",
      "func:test_k_val",
      "func:test_length_normalized_sequence_log_prob_scorer",
      "func:test_min_steps",
      "func:test_multinomial_sampler",
      "func:test_p_val",
      "func:test_params_p_sampling",
      "func:test_params_sampling",
      "func:test_repeated_ngram_blocking_constraint_apply",
      "func:test_repeated_ngram_blocking_constraint_init_state",
      "func:test_repeated_ngram_blocking_constraint_update_state",
      "func:test_repeated_ngram_blocking_end_indices",
      "func:test_repeated_ngram_blocking_end_to_end_bigrams",
      "func:test_repeated_ngram_blocking_end_to_end_trigrams",
      "func:test_repeated_ngram_blocking_end_to_end_unigrams",
      "func:test_search",
      "func:test_single_step",
      "func:test_stochastic_beam_search",
      "func:test_take_repeated_ngram_step",
      "func:test_take_short_sequence_step",
      "func:test_top_k_sampler",
      "func:test_top_k_search",
      "func:test_top_p_sampler",
      "func:test_top_p_search",
      "func:test_warn_for_bad_log_probs"
    ],
    "old_files": [
      "beam_search_test.py_gpt4_e8e5dc23.py"
    ],
    "new_files": [
      "beam_search_test_a8133f.py"
    ]
  },
  {
    "file_signature": [
      "class:OldImageFeatureEmbeddings",
      "class:TextEmbeddings",
      "func:__init__",
      "func:forward",
      "func:get_modules",
      "func:image_embeddings",
      "func:image_params",
      "func:image_params_dict",
      "func:params",
      "func:params_dict",
      "func:test_can_construct_from_params",
      "func:test_can_construct_image_embeddings_from_params",
      "func:test_forward_against_huggingface_output",
      "func:test_forward_runs_with_inputs",
      "func:test_image_embedding_forward_runs_with_inputs",
      "func:test_image_embeddings_sanity",
      "func:test_loading_albert",
      "func:test_loading_from_pretrained_module",
      "func:test_no_token_type_layer",
      "func:test_output_size",
      "func:test_sanity",
      "func:transformer_embeddings"
    ],
    "old_files": [
      "transformer_embeddings_test.py_gpt4_7e8d35e5.py"
    ],
    "new_files": [
      "transformer_embeddings_test_676185.py"
    ]
  },
  {
    "file_signature": [
      "class:TestCompiler",
      "class:TestNodeSelector",
      "func:_get_graph",
      "func:_get_manifest",
      "func:graph",
      "func:id_macro",
      "func:mock_manifest_with_mock_graph",
      "func:test_dependency_list",
      "func:test_invalid_specs",
      "func:test_parse_specs",
      "func:test_run_specs",
      "func:test_select_downstream_of_empty_model",
      "func:test_single_model",
      "func:test_two_models_simple_ref"
    ],
    "old_files": [
      "test_selector.py_gpt4_a29e14e2.py"
    ],
    "new_files": [
      "test_selector_29872e.py"
    ]
  },
  {
    "file_signature": [
      "class:Heartbeat",
      "class:HeartbeatStatus",
      "func:__init__",
      "func:__repr__",
      "func:count",
      "func:create",
      "func:delete",
      "func:find_all",
      "func:find_all_by_status",
      "func:find_by_id",
      "func:from_db",
      "func:from_document",
      "func:from_record",
      "func:parse",
      "func:serialize",
      "func:status"
    ],
    "old_files": [
      "heartbeat.py_gpt4_3d4f9698.py"
    ],
    "new_files": [
      "heartbeat_5b669e.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPExecutor",
      "class:JSONRPCExecutor",
      "class:TimeoutHTTPAdapter",
      "func:__init__",
      "func:_send_request",
      "func:_validate_response",
      "func:after_start_check",
      "func:kill",
      "func:running",
      "func:send",
      "func:split_endpoint",
      "func:start",
      "func:stop",
      "func:wait_for"
    ],
    "old_files": [
      "http.py_gpt4_98a64c7a.py"
    ],
    "new_files": [
      "http_b073d4.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractResource",
      "class:AbstractRoute",
      "class:AbstractRuleMatching",
      "class:Domain",
      "class:DynamicResource",
      "class:MaskDomain",
      "class:MatchInfoError",
      "class:MatchedSubAppResource",
      "class:PlainResource",
      "class:PrefixResource",
      "class:PrefixedSubAppResource",
      "class:Resource",
      "class:ResourceRoute",
      "class:ResourcesView",
      "class:RoutesView",
      "class:StaticResource",
      "class:SystemRoute",
      "class:UrlDispatcher",
      "class:UrlMappingMatchInfo",
      "class:View",
      "class:_InfoDict",
      "func:__await__",
      "func:__contains__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:_add_prefix_to_resources",
      "func:_directory_as_html",
      "func:_get_file_hash",
      "func:_get_resource_index_key",
      "func:_match",
      "func:_quote_path",
      "func:_raise_allowed_methods",
      "func:_requote_path",
      "func:_resolve_path_to_response",
      "func:_unquote_path_safe",
      "func:add_app",
      "func:add_delete",
      "func:add_get",
      "func:add_head",
      "func:add_options",
      "func:add_patch",
      "func:add_post",
      "func:add_prefix",
      "func:add_put",
      "func:add_resource",
      "func:add_route",
      "func:add_routes",
      "func:add_static",
      "func:add_view",
      "func:apps",
      "func:canonical",
      "func:current_app",
      "func:expect_handler",
      "func:freeze",
      "func:get_info",
      "func:handler",
      "func:http_exception",
      "func:index_resource",
      "func:match_domain",
      "func:method",
      "func:name",
      "func:named_resources",
      "func:raw_match",
      "func:reason",
      "func:register_resource",
      "func:register_route",
      "func:resource",
      "func:resources",
      "func:route",
      "func:routes",
      "func:set_options_route",
      "func:status",
      "func:unindex_resource",
      "func:url_for",
      "func:validation"
    ],
    "old_files": [
      "web_urldispatcher.py_gpt4_639291e3.py"
    ],
    "new_files": [
      "web_urldispatcher_77a3cf.py"
    ]
  },
  {
    "file_signature": [
      "class:WebSocketReady",
      "class:WebSocketResponse",
      "func:__aiter__",
      "func:__bool__",
      "func:__init__",
      "func:_cancel",
      "func:_cancel_heartbeat",
      "func:_cancel_pong_response_cb",
      "func:_close_transport",
      "func:_handle_ping_pong_exception",
      "func:_handshake",
      "func:_ping_task_done",
      "func:_pong_not_received",
      "func:_post_start",
      "func:_pre_start",
      "func:_reset_heartbeat",
      "func:_send_heartbeat",
      "func:_set_closed",
      "func:_set_closing",
      "func:_set_code_close_transport",
      "func:can_prepare",
      "func:close_code",
      "func:closed",
      "func:compress",
      "func:exception",
      "func:get_extra_info",
      "func:ws_protocol"
    ],
    "old_files": [
      "web_ws.py_gpt4_78009767.py"
    ],
    "new_files": [
      "web_ws_e88d1e.py"
    ]
  },
  {
    "file_signature": [
      "class:AttrDict",
      "class:Error",
      "class:ErrorGroup",
      "class:ErrorRegistry",
      "func:__getattr__",
      "func:__init__",
      "func:__lt__",
      "func:__repr__",
      "func:__str__",
      "func:create_error",
      "func:create_group",
      "func:get_error_codes",
      "func:lines",
      "func:message",
      "func:set_context",
      "func:to_rst"
    ],
    "old_files": [
      "violations.py_gpt4_efcd158e.py"
    ],
    "new_files": [
      "violations_cd5822.py"
    ]
  },
  {
    "file_signature": [
      "class:AnonymousFunctionExecution",
      "class:BaseFunctionExecutionContext",
      "class:FunctionAndClassBase",
      "class:FunctionExecutionContext",
      "class:FunctionMixin",
      "class:FunctionNameInClass",
      "class:FunctionValue",
      "class:LambdaName",
      "class:MethodValue",
      "class:OverloadedFunctionValue",
      "func:__init__",
      "func:_as_context",
      "func:_find_overload_functions",
      "func:_get_yield_lazy_value",
      "func:_is_overload_decorated",
      "func:create",
      "func:from_context",
      "func:get_default_param_context",
      "func:get_defining_qualified_value",
      "func:get_filters",
      "func:get_param_names",
      "func:get_qualified_names",
      "func:get_return_values",
      "func:get_signature_functions",
      "func:get_signatures",
      "func:get_type_hint",
      "func:get_yield_lazy_values",
      "func:infer",
      "func:infer_annotations",
      "func:is_function",
      "func:is_generator",
      "func:merge_yield_values",
      "func:name",
      "func:param_name_to_str",
      "func:py__call__",
      "func:py__class__",
      "func:py__get__",
      "func:py__name__",
      "func:start_pos"
    ],
    "old_files": [
      "function.py_gpt4_0038d4cd.py"
    ],
    "new_files": [
      "function_707600.py"
    ]
  },
  {
    "file_signature": [
      "class:CLIFactory",
      "class:LargeRequestBodyFilter",
      "class:NoSuchFunctionError",
      "class:UnknownConfigFileVersion",
      "func:__init__",
      "func:_add_chalice_user_agent",
      "func:_inject_large_request_body_filter",
      "func:_validate_config_from_disk",
      "func:create_app_packager",
      "func:create_botocore_session",
      "func:create_config_obj",
      "func:create_default_deployer",
      "func:create_deletion_deployer",
      "func:create_deployment_reporter",
      "func:create_lambda_invoke_handler",
      "func:create_local_server",
      "func:create_log_retriever",
      "func:create_package_options",
      "func:create_plan_only_deployer",
      "func:create_stdin_reader",
      "func:filter",
      "func:load_chalice_app",
      "func:load_project_config"
    ],
    "old_files": [
      "factory.py_gpt4_53d9a29e.py"
    ],
    "new_files": [
      "factory_7a7586.py"
    ]
  },
  {
    "file_signature": [
      "class:AppEngineAdapter",
      "class:AppEngineMROHack",
      "class:InsecureAppEngineAdapter",
      "class:_AppEngineConnection",
      "class:_AppEnginePoolManager",
      "func:__init__",
      "func:_check_version",
      "func:clear",
      "func:connection_from_url",
      "func:init_poolmanager",
      "func:monkeypatch",
      "func:urlopen"
    ],
    "old_files": [
      "appengine.py_gpt4_3880ff96.py"
    ],
    "new_files": [
      "appengine_f79cd5.py"
    ]
  },
  {
    "file_signature": [
      "class:Hotflip",
      "func:__init__",
      "func:_construct_embedding_matrix",
      "func:_first_order_taylor",
      "func:_make_embedder_input",
      "func:attack_from_json",
      "func:attack_instance",
      "func:initialize"
    ],
    "old_files": [
      "hotflip.py_gpt4_89300a50.py"
    ],
    "new_files": [
      "hotflip_66083c.py"
    ]
  },
  {
    "file_signature": [
      "class:AugmentedLSTMCell",
      "class:AugmentedLstm",
      "class:BiAugmentedLstm",
      "func:__init__",
      "func:_forward_bidirectional",
      "func:_forward_unidirectional",
      "func:forward",
      "func:reset_parameters"
    ],
    "old_files": [
      "augmented_lstm.py_gpt4_cedcc40b.py"
    ],
    "new_files": [
      "augmented_lstm_c8e957.py"
    ]
  },
  {
    "file_signature": [
      "class:DeflateDecoder",
      "class:GzipDecoder",
      "class:HTTPResponse",
      "func:__getattr__",
      "func:__init__",
      "func:_decode",
      "func:_error_catcher",
      "func:_flush_decoder",
      "func:_get_decoder",
      "func:_init_decoder",
      "func:close",
      "func:closed",
      "func:connection",
      "func:data",
      "func:decompress",
      "func:fileno",
      "func:from_base",
      "func:get_redirect_location",
      "func:getheader",
      "func:getheaders",
      "func:info",
      "func:readable",
      "func:readinto",
      "func:tell"
    ],
    "old_files": [
      "response.py_gpt4_bf44d9fe.py"
    ],
    "new_files": [
      "response_563505.py"
    ]
  },
  {
    "file_signature": [
      "class:DdpAccelerator",
      "class:DdpWrappedModel",
      "class:LoadStateDictReturnType",
      "class:TorchDdpAccelerator",
      "func:__init__",
      "func:_add_torch_ddp_prefix",
      "func:_remove_torch_ddp_prefix",
      "func:clip_grad_norm_",
      "func:consolidate_sharded_state",
      "func:init_grad_scaler",
      "func:is_sharded",
      "func:load_state_dict",
      "func:state_dict",
      "func:wrap_model",
      "func:wrap_module"
    ],
    "old_files": [
      "ddp_accelerator.py_gpt4_890ec6c6.py"
    ],
    "new_files": [
      "ddp_accelerator_0b7bea.py"
    ]
  },
  {
    "file_signature": [
      "class:BiasMitigator",
      "class:HardBiasMitigator",
      "class:INLPBiasMitigator",
      "class:LinearBiasMitigator",
      "class:OSCaRBiasMitigator",
      "func:__call__",
      "func:__init__",
      "func:_get_rowspace_proj",
      "func:_proj",
      "func:_remove_component"
    ],
    "old_files": [
      "bias_mitigators.py_gpt4_294de2be.py"
    ],
    "new_files": [
      "bias_mitigators_adad59.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockchainServices",
      "class:SimplePFSProxy",
      "func:__init__",
      "func:check_channel",
      "func:create_all_channels_for_network",
      "func:create_apps",
      "func:create_network_channels",
      "func:create_sequential_channels",
      "func:jsonrpc_services",
      "func:network_with_minimum_channels",
      "func:parallel_start_apps",
      "func:payment_channel_open_and_deposit",
      "func:query_address_metadata",
      "func:set_services",
      "func:wait_for_alarm_start",
      "func:wait_for_channels",
      "func:wait_for_token_networks",
      "func:wait_for_usable_channel"
    ],
    "old_files": [
      "network.py_gpt4_8d1b1d1c.py"
    ],
    "new_files": [
      "network_7ec1c6.py"
    ]
  },
  {
    "file_signature": [
      "class:TestFlags",
      "func:_create_flags_from_dict",
      "func:make_dbt_context",
      "func:project_flags",
      "func:run_context",
      "func:test_anonymous_usage_state",
      "func:test_cli_args_unmodified",
      "func:test_cli_group_flags_from_params",
      "func:test_duplicate_flags_raises_error",
      "func:test_empty_project_flags_uses_default",
      "func:test_from_dict_0_value",
      "func:test_from_dict__build",
      "func:test_from_dict__run",
      "func:test_from_dict__seed",
      "func:test_from_dict__which_fails",
      "func:test_global_flag_at_child_context",
      "func:test_global_flag_with_env_var",
      "func:test_log_file_max_size_default",
      "func:test_log_file_settings_from_config",
      "func:test_log_format_interaction",
      "func:test_log_level_interaction",
      "func:test_log_path_default",
      "func:test_log_settings_from_config",
      "func:test_mutually_exclusive_options_from_cli",
      "func:test_mutually_exclusive_options_from_cli_and_envvar",
      "func:test_mutually_exclusive_options_from_cli_and_project_flags",
      "func:test_mutually_exclusive_options_from_envvar",
      "func:test_mutually_exclusive_options_from_project_flags",
      "func:test_mutually_exclusive_options_from_project_flags_and_envvar",
      "func:test_mutually_exclusive_options_passed_separately",
      "func:test_no_color_interaction",
      "func:test_none_project_flags_uses_default",
      "func:test_prefer_env_to_project_flags",
      "func:test_prefer_param_value_to_project_flags",
      "func:test_prefer_project_flags_to_default",
      "func:test_project_flag_defaults",
      "func:test_resource_types",
      "func:test_set_project_only_flags",
      "func:test_which"
    ],
    "old_files": [
      "test_flags.py_gpt4_205bc8a8.py"
    ],
    "new_files": [
      "test_flags_92e1da.py"
    ]
  },
  {
    "file_signature": [
      "class:SensorTrend",
      "func:__init__",
      "func:_calculate_gradient",
      "func:_validate_min_max",
      "func:extra_state_attributes",
      "func:trend_sensor_state_listener"
    ],
    "old_files": [
      "binary_sensor.py_gpt4_866a4655.py"
    ],
    "new_files": [
      "binary_sensor_8bad86.py"
    ]
  },
  {
    "file_signature": [
      "class:ExecutedParamName",
      "func:__init__",
      "func:__repr__",
      "func:_add_argument_issue",
      "func:_error_argument_count",
      "func:get_executed_param_names",
      "func:get_executed_param_names_and_issues",
      "func:infer",
      "func:matches_signature",
      "func:too_many_args"
    ],
    "old_files": [
      "param.py_gpt4_dca155b0.py"
    ],
    "new_files": [
      "param_cbed36.py"
    ]
  },
  {
    "file_signature": [
      "class:_RequestMaker",
      "func:__call__",
      "func:app",
      "func:make_request",
      "func:maker",
      "func:protocol",
      "func:test_bool_websocket_not_ready",
      "func:test_bool_websocket_ready",
      "func:test_can_prepare_ok",
      "func:test_can_prepare_unknown_protocol",
      "func:test_can_prepare_without_upgrade",
      "func:test_closed_after_ctor",
      "func:test_websocket_not_ready",
      "func:test_websocket_ready",
      "func:test_websocket_ready_unknown_protocol"
    ],
    "old_files": [
      "test_web_websocket.py_gpt4_18bcab25.py"
    ],
    "new_files": [
      "test_web_websocket_389e12.py"
    ]
  },
  {
    "file_signature": [
      "class:TestQueryApi",
      "func:create_queries",
      "func:get_random_string",
      "func:insert_query",
      "func:test_get_list_query",
      "func:test_get_list_query_filter_changed_on",
      "func:test_get_list_query_filter_database",
      "func:test_get_list_query_filter_sql",
      "func:test_get_list_query_filter_user",
      "func:test_get_list_query_no_data_access",
      "func:test_get_list_query_order",
      "func:test_get_query",
      "func:test_get_query_no_data_access",
      "func:test_get_query_not_found",
      "func:test_get_updated_since",
      "func:test_stop_query",
      "func:test_stop_query_not_found"
    ],
    "old_files": [
      "api_tests.py_gpt4_7e37d3ea.py"
    ],
    "new_files": [
      "api_tests_76e6db.py"
    ]
  },
  {
    "file_signature": [
      "class:TypeAdapter",
      "func:__init__",
      "func:__repr__",
      "func:_defer_build",
      "func:_fetch_parent_frame",
      "func:_getattr_no_parents",
      "func:_init_core_attrs",
      "func:_model_config",
      "func:_type_has_config",
      "func:dump_json",
      "func:dump_python",
      "func:get_default_value",
      "func:json_schema",
      "func:json_schemas",
      "func:rebuild",
      "func:validate_json",
      "func:validate_python",
      "func:validate_strings"
    ],
    "old_files": [
      "type_adapter.py_gpt4_7ba21e97.py"
    ],
    "new_files": [
      "type_adapter_c4334d.py"
    ]
  },
  {
    "file_signature": [
      "class:TokenCharactersIndexer",
      "func:__init__",
      "func:as_padded_tensor_dict",
      "func:count_vocab_items",
      "func:get_empty_token_list",
      "func:get_padding_lengths",
      "func:tokens_to_indices"
    ],
    "old_files": [
      "token_characters_indexer.py_gpt4_ea93cfc1.py"
    ],
    "new_files": [
      "token_characters_indexer_4a2ab1.py"
    ]
  },
  {
    "file_signature": [
      "class:AdadeltaOptimizer",
      "class:AdagradOptimizer",
      "class:AdamOptimizer",
      "class:AdamWOptimizer",
      "class:AdamaxOptimizer",
      "class:AveragedSgdOptimizer",
      "class:DenseSparseAdam",
      "class:HuggingfaceAdafactor",
      "class:HuggingfaceAdamWOptimizer",
      "class:MultiOptimizer",
      "class:Optimizer",
      "class:RmsPropOptimizer",
      "class:SgdOptimizer",
      "class:SparseAdamOptimizer",
      "func:__init__",
      "func:default",
      "func:load_state_dict",
      "func:make_parameter_groups",
      "func:make_sparse",
      "func:state_dict",
      "func:step",
      "func:zero_grad"
    ],
    "old_files": [
      "optimizers.py_gpt4_9ab847a5.py"
    ],
    "new_files": [
      "optimizers_03ae81.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_catboost_shap_values",
      "func:catboost_classification_learner",
      "func:lgbm_classification_learner",
      "func:logistic_classification_learner",
      "func:nlp_logistic_classification_learner",
      "func:p",
      "func:xgb_classification_learner"
    ],
    "old_files": [
      "classification.py_gpt4_554b95c0.py"
    ],
    "new_files": [
      "classification_92cb06.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPConnection",
      "class:HTTPFile",
      "class:HTTPHeaders",
      "class:HTTPInputError",
      "class:HTTPMessageDelegate",
      "class:HTTPOutputError",
      "class:HTTPServerConnectionDelegate",
      "class:HTTPServerRequest",
      "class:RequestStartLine",
      "class:ResponseStartLine",
      "func:__delitem__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:__str__",
      "func:_encode_header",
      "func:_get_content_range",
      "func:_int_or_none",
      "func:_normalize_header",
      "func:_parse_body",
      "func:_parse_header",
      "func:_parse_request_range",
      "func:_parseparam",
      "func:_unquote_cookie",
      "func:_unquote_replace",
      "func:add",
      "func:cookies",
      "func:copy",
      "func:data_received",
      "func:doctests",
      "func:encode_username_password",
      "func:finish",
      "func:format_timestamp",
      "func:full_url",
      "func:get_all",
      "func:get_list",
      "func:get_ssl_certificate",
      "func:headers_received",
      "func:on_close",
      "func:on_connection_close",
      "func:parse",
      "func:parse_body_arguments",
      "func:parse_cookie",
      "func:parse_line",
      "func:parse_multipart_form_data",
      "func:parse_request_start_line",
      "func:parse_response_start_line",
      "func:qs_to_qsl",
      "func:request_time",
      "func:split_host_and_port",
      "func:start_request",
      "func:url_concat",
      "func:write",
      "func:write_headers"
    ],
    "old_files": [
      "httputil.py_gpt4_f381cad3.py"
    ],
    "new_files": [
      "httputil_afd03a.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractFilter",
      "class:AnonymousFunctionExecutionFilter",
      "class:AttributeOverwrite",
      "class:DictFilter",
      "class:FilterWrapper",
      "class:FunctionExecutionFilter",
      "class:GlobalNameFilter",
      "class:LazyAttributeOverwrite",
      "class:MergedFilter",
      "class:ParserTreeFilter",
      "class:SpecialMethodFilter",
      "class:SpecialMethodName",
      "class:_AbstractUsedNamesFilter",
      "class:_AttributeOverwriteMixin",
      "class:_BuiltinMappedMethod",
      "class:_FunctionExecutionFilter",
      "class:_OverwriteMeta",
      "func:__init__",
      "func:__repr__",
      "func:_check_flows",
      "func:_convert",
      "func:_convert_names",
      "func:_convert_param",
      "func:_filter",
      "func:_get_definition_names",
      "func:_is_name_reachable",
      "func:decorator",
      "func:get",
      "func:get_filters",
      "func:infer",
      "func:publish_method",
      "func:py__call__",
      "func:values",
      "func:wrap_names",
      "func:yielder"
    ],
    "old_files": [
      "filters.py_gpt4_ab9e6ca6.py"
    ],
    "new_files": [
      "filters_ba549f.py"
    ]
  },
  {
    "file_signature": [
      "class:SpanBasedF1Measure",
      "func:__call__",
      "func:__init__",
      "func:_compute_metrics",
      "func:_handle_continued_spans",
      "func:get_metric",
      "func:reset"
    ],
    "old_files": [
      "span_based_f1_measure.py_gpt4_e66cb97e.py"
    ],
    "new_files": [
      "span_based_f1_measure_cf6fc9.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseRequest",
      "class:FileField",
      "class:Request",
      "func:__bool__",
      "func:__delitem__",
      "func:__eq__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:_cancel",
      "func:_etag_values",
      "func:_finish",
      "func:_if_match_or_none_impl",
      "func:app",
      "func:body_exists",
      "func:can_read_body",
      "func:client_max_size",
      "func:clone",
      "func:config_dict",
      "func:content",
      "func:cookies",
      "func:forwarded",
      "func:get_extra_info",
      "func:headers",
      "func:host",
      "func:http_range",
      "func:if_match",
      "func:if_modified_since",
      "func:if_none_match",
      "func:if_range",
      "func:if_unmodified_since",
      "func:keep_alive",
      "func:match_info",
      "func:method",
      "func:path",
      "func:path_qs",
      "func:protocol",
      "func:query",
      "func:query_string",
      "func:raw_headers",
      "func:raw_path",
      "func:rel_url",
      "func:remote",
      "func:scheme",
      "func:secure",
      "func:task",
      "func:transport",
      "func:url",
      "func:version",
      "func:writer"
    ],
    "old_files": [
      "web_request.py_gpt4_90f82707.py"
    ],
    "new_files": [
      "web_request_930455.py"
    ]
  },
  {
    "file_signature": [
      "class:CheckList",
      "class:_CheckListManager",
      "func:__init__",
      "func:_get_predictor",
      "func:_get_task_suite",
      "func:_run_suite",
      "func:add_subparser",
      "func:run"
    ],
    "old_files": [
      "_checklist_internal.py_gpt4_5ee44322.py"
    ],
    "new_files": [
      "_checklist_internal_2e9c80.py"
    ]
  },
  {
    "file_signature": [
      "class:FreshnessRunner",
      "class:FreshnessSelector",
      "class:FreshnessTask",
      "func:__init__",
      "func:_build_run_result",
      "func:after_execute",
      "func:before_execute",
      "func:before_run",
      "func:compile",
      "func:error_result",
      "func:execute",
      "func:from_run_result",
      "func:get_freshness_metadata_cache",
      "func:get_hooks_by_type",
      "func:get_node_selector",
      "func:get_result",
      "func:get_runner",
      "func:get_runner_type",
      "func:node_is_match",
      "func:on_skip",
      "func:populate_metadata_freshness_cache",
      "func:raise_on_first_error",
      "func:result_path",
      "func:set_metadata_freshness_cache",
      "func:task_end_messages"
    ],
    "old_files": [
      "freshness.py_gpt4_c430dfa0.py"
    ],
    "new_files": [
      "freshness_735399.py"
    ]
  },
  {
    "file_signature": [
      "class:DummyConfigPlugin",
      "class:DummyPagerDutyPlugin",
      "class:DummySlackPlugin",
      "class:RoutingTestCase",
      "func:post_receive",
      "func:pre_receive",
      "func:rules",
      "func:setUp",
      "func:status_change",
      "func:tearDown",
      "func:test_config",
      "func:test_config_precedence",
      "func:test_routing"
    ],
    "old_files": [
      "test_zrouting.py_gpt4_149302f7.py"
    ],
    "new_files": [
      "test_zrouting_59f6cb.py"
    ]
  },
  {
    "file_signature": [
      "func:_check_for_non_extractables",
      "func:_expression_nodes_to_string",
      "func:_find_inputs_and_outputs",
      "func:_find_needed_output_variables",
      "func:_find_nodes",
      "func:_find_non_global_names",
      "func:_get_code_insertion_node",
      "func:_get_indentation",
      "func:_get_parent_definition",
      "func:_is_expression_with_error",
      "func:_is_name_input",
      "func:_is_node_ending_return_stmt",
      "func:_is_not_extractable_syntax",
      "func:_remove_unwanted_expression_nodes",
      "func:_replace",
      "func:_split_prefix_at",
      "func:_suite_nodes_to_string",
      "func:extract_function",
      "func:extract_variable"
    ],
    "old_files": [
      "extract.py_gpt4_65e3a6aa.py"
    ],
    "new_files": [
      "extract_d1f231.py"
    ]
  },
  {
    "file_signature": [
      "class:DoubledEmailArgumentError",
      "class:EmailNotDeliveredError",
      "class:FromAddress",
      "class:NoEmailArgumentError",
      "func:__init__",
      "func:build_email",
      "func:clear_scheduled_emails",
      "func:clear_scheduled_invitation_emails",
      "func:custom_email_sender",
      "func:deliver_scheduled_emails",
      "func:get_header",
      "func:get_inlined_template",
      "func:get_inliner_instance",
      "func:handle_send_email_format_changes",
      "func:initialize_connection",
      "func:log_email_config_errors",
      "func:render_templates",
      "func:security_email_from_name",
      "func:send_custom_email",
      "func:send_custom_server_email",
      "func:send_email",
      "func:send_email_to_admins",
      "func:send_email_to_billing_admins_and_realm_owners",
      "func:send_future_email",
      "func:send_one_email",
      "func:tokenized_no_reply_address"
    ],
    "old_files": [
      "send_email.py_gpt4_a689bab8.py"
    ],
    "new_files": [
      "send_email_8ce2b6.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseTypingClassWithGenerics",
      "class:BaseTypingInstance",
      "class:BaseTypingValue",
      "class:DefineGenericBaseClass",
      "class:EmptyFilter",
      "class:GenericClass",
      "class:_AnnotatedClassContext",
      "class:_BoundTypeVarName",
      "class:_GenericInstanceWrapper",
      "class:_LazyGenericBaseClass",
      "class:_PseudoTreeNameClass",
      "class:_TypeVarFilter",
      "func:__init__",
      "func:__repr__",
      "func:_as_context",
      "func:_create_instance_with_generics",
      "func:_get_wrapped_value",
      "func:_remap_type_vars",
      "func:define_generics",
      "func:get",
      "func:get_annotated_class_object",
      "func:get_filters",
      "func:get_generics",
      "func:get_qualified_names",
      "func:get_signatures",
      "func:get_type_hint",
      "func:get_type_var_filter",
      "func:infer",
      "func:infer_type_vars",
      "func:is_same_class",
      "func:is_sub_class_of",
      "func:iter_",
      "func:name",
      "func:py__bases__",
      "func:py__call__",
      "func:py__class__",
      "func:py__name__",
      "func:py__stop_iteration_returns",
      "func:tree_node",
      "func:values",
      "func:with_generics"
    ],
    "old_files": [
      "base.py_gpt4_432e748f.py"
    ],
    "new_files": [
      "base_c73d2b.py"
    ]
  },
  {
    "file_signature": [
      "class:Relation",
      "class:RelationInfo",
      "class:TestMicrobatchModelRunner",
      "class:TestModelRunner",
      "class:TestRunTask",
      "func:hook_node",
      "func:log_model_result_catcher",
      "func:mock_run_queue",
      "func:model_runner",
      "func:run_result",
      "func:test__is_incremental",
      "func:test_adapter_info_tracking",
      "func:test_execute",
      "func:test_print_result_line",
      "func:test_run_task_cancel_connections",
      "func:test_run_task_preserve_edges",
      "func:test_safe_run_hooks",
      "func:test_should_run_in_parallel",
      "func:test_tracking_fails_safely_for_missing_adapter"
    ],
    "old_files": [
      "test_run.py_gpt4_3a6172d5.py"
    ],
    "new_files": [
      "test_run_e5cee0.py"
    ]
  },
  {
    "file_signature": [
      "class:Blackout",
      "class:BlackoutsTestCase",
      "class:CustomNotify",
      "func:post_receive",
      "func:pre_receive",
      "func:setUp",
      "func:status_change",
      "func:tearDown",
      "func:test_combination_blackout",
      "func:test_custom_notify",
      "func:test_edit_blackout",
      "func:test_notification_blackout",
      "func:test_origin_blackout",
      "func:test_previous_status",
      "func:test_suppress_blackout",
      "func:test_user_info",
      "func:test_whole_environment_blackout"
    ],
    "old_files": [
      "test_blackouts.py_gpt4_e962ce24.py"
    ],
    "new_files": [
      "test_blackouts_53e928.py"
    ]
  },
  {
    "file_signature": [
      "class:ClientWSTimeout",
      "class:ClientWebSocketResponse",
      "func:__aiter__",
      "func:__init__",
      "func:_cancel_heartbeat",
      "func:_cancel_pong_response_cb",
      "func:_handle_ping_pong_exception",
      "func:_ping_task_done",
      "func:_pong_not_received",
      "func:_reset_heartbeat",
      "func:_send_heartbeat",
      "func:_set_closed",
      "func:_set_closing",
      "func:client_notakeover",
      "func:close_code",
      "func:closed",
      "func:compress",
      "func:exception",
      "func:get_extra_info",
      "func:protocol"
    ],
    "old_files": [
      "client_ws.py_gpt4_3e5e5648.py"
    ],
    "new_files": [
      "client_ws_7f7caf.py"
    ]
  },
  {
    "file_signature": [
      "func:debias_column",
      "func:debias_with_double_ml",
      "func:debias_with_fixed_effects",
      "func:debias_with_regression",
      "func:debias_with_regression_formula",
      "func:get_cv_resid",
      "func:get_resid"
    ],
    "old_files": [
      "debias.py_gpt4_c4dc5d24.py"
    ],
    "new_files": [
      "debias_0a65ea.py"
    ]
  },
  {
    "file_signature": [
      "class:Checker",
      "class:JSONHandler",
      "class:JSONServer",
      "func:__init__",
      "func:_check",
      "func:_isprocessrunning",
      "func:collect_incoming_data",
      "func:fileno",
      "func:found_terminator",
      "func:get_logger",
      "func:handle_accept",
      "func:handle_close",
      "func:handle_command",
      "func:log_traceback",
      "func:return_back",
      "func:run",
      "func:serve_forever",
      "func:shutdown"
    ],
    "old_files": [
      "jsonserver.py_gpt4_e0d4315b.py"
    ],
    "new_files": [
      "jsonserver_34dd2d.py"
    ]
  },
  {
    "file_signature": [
      "func:_configure_cli_env_vars",
      "func:_configure_logging",
      "func:appgraph",
      "func:cli",
      "func:create_local_server",
      "func:delete",
      "func:deploy",
      "func:dev",
      "func:gen_policy",
      "func:generate_models",
      "func:generate_pipeline",
      "func:generate_sdk",
      "func:get_system_info",
      "func:invoke",
      "func:local",
      "func:logs",
      "func:main",
      "func:new_project",
      "func:package",
      "func:plan",
      "func:run_local_server",
      "func:url"
    ],
    "old_files": [
      "__init__.py_gpt4_5412f557.py"
    ],
    "new_files": [
      "__init___db92f1.py"
    ]
  },
  {
    "file_signature": [
      "class:FakeCol",
      "class:FakeLoc",
      "class:K",
      "class:LintError",
      "class:Linter",
      "class:OffsetError",
      "class:Pep8Error",
      "class:Pep8Warning",
      "class:PythonError",
      "class:SublimeLinterReport",
      "func:__eq__",
      "func:__ge__",
      "func:__gt__",
      "func:__hash__",
      "func:__init__",
      "func:__le__",
      "func:__lt__",
      "func:__ne__",
      "func:__str__",
      "func:_handle_syntactic_error",
      "func:cmp_to_key",
      "func:error",
      "func:parse_errors",
      "func:pep8_check",
      "func:prepare_error_level",
      "func:pyflakes_check",
      "func:run_linter",
      "func:sort_errors"
    ],
    "old_files": [
      "linter.py_gpt4_bb25f6eb.py"
    ],
    "new_files": [
      "linter_43a04e.py"
    ]
  },
  {
    "file_signature": [
      "class:ModuleMixin",
      "class:ModuleValue",
      "class:SubModuleDictMixin",
      "class:_ModuleAttributeName",
      "func:__init__",
      "func:__repr__",
      "func:_as_context",
      "func:_module_attributes_dict",
      "func:get_filters",
      "func:get_qualified_names",
      "func:infer",
      "func:is_module",
      "func:is_package",
      "func:is_stub",
      "func:iter_star_filters",
      "func:name",
      "func:py__class__",
      "func:py__file__",
      "func:py__name__",
      "func:py__package__",
      "func:py__path__",
      "func:star_imports",
      "func:sub_modules_dict"
    ],
    "old_files": [
      "module.py_gpt4_fb2f6031.py"
    ],
    "new_files": [
      "module_b33ece.py"
    ]
  },
  {
    "file_signature": [
      "class:RuntimeConfig",
      "class:UnsetCredentials",
      "class:UnsetProfile",
      "func:__getattribute__",
      "func:__init__",
      "func:__post_init__",
      "func:_connection_keys",
      "func:_get_config_paths",
      "func:_get_project_directories",
      "func:_get_v2_config_paths",
      "func:_is_config_used",
      "func:_project_quoting_dict",
      "func:clear_dependencies",
      "func:collect_parts",
      "func:connection_info",
      "func:from_args",
      "func:from_parts",
      "func:get_metadata",
      "func:get_profile",
      "func:get_resource_config_paths",
      "func:load_dependencies",
      "func:load_profile",
      "func:load_project",
      "func:load_projects",
      "func:new_project",
      "func:serialize",
      "func:to_target_dict",
      "func:type",
      "func:unique_field",
      "func:validate",
      "func:warn_for_unused_resource_config_paths"
    ],
    "old_files": [
      "runtime.py_gpt4_58146c86.py"
    ],
    "new_files": [
      "runtime_8a2834.py"
    ]
  },
  {
    "file_signature": [
      "class:BasePipelineTemplate",
      "class:BaseResource",
      "class:BuildSpecExtractor",
      "class:CodeBuild",
      "class:CodeCommitSourceRepository",
      "class:CodePipeline",
      "class:CreatePipelineTemplateLegacy",
      "class:CreatePipelineTemplateV2",
      "class:GithubSource",
      "class:InvalidCodeBuildPythonVersion",
      "class:PipelineParameters",
      "func:__init__",
      "func:_add_bucket_store",
      "func:_add_cfn_deploy_role",
      "func:_add_codebuild_policy",
      "func:_add_codebuild_role",
      "func:_add_codepipeline_role",
      "func:_add_package_build",
      "func:_add_pipeline",
      "func:_add_s3_bucket",
      "func:_code_commit_source",
      "func:_create_beta_stage",
      "func:_create_build_stage",
      "func:_create_pipeline_stages",
      "func:_create_source_stage",
      "func:_extract_version",
      "func:_get_codebuild_image",
      "func:_github_source",
      "func:_lock_to_minor_version",
      "func:_validate_python_version",
      "func:add_to_template",
      "func:create_buildspec_legacy",
      "func:create_buildspec_v2",
      "func:create_template",
      "func:extract_buildspec"
    ],
    "old_files": [
      "pipeline.py_gpt4_3c66a9fb.py"
    ],
    "new_files": [
      "pipeline_2e0d3e.py"
    ]
  },
  {
    "file_signature": [
      "func:fetch_funding_rates",
      "func:get_historic_ohlcv",
      "func:get_maint_ratio",
      "func:make_storage",
      "func:patch_binance_vision_ohlcv",
      "func:test__get_params_binance",
      "func:test__set_leverage_binance",
      "func:test_additional_exchange_init_binance",
      "func:test_create_stoploss_order_binance",
      "func:test_create_stoploss_order_dry_run_binance",
      "func:test_fill_leverage_tiers_binance",
      "func:test_fill_leverage_tiers_binance_dryrun",
      "func:test_get_historic_ohlcv_binance",
      "func:test_get_maintenance_ratio_and_amt_binance",
      "func:test_liquidation_price_binance",
      "func:test_stoploss_adjust_binance"
    ],
    "old_files": [
      "test_binance.py_gpt4_cc31d283.py"
    ],
    "new_files": [
      "test_binance_2f9760.py"
    ]
  },
  {
    "file_signature": [
      "class:FixtureSmartContracts",
      "class:ServicesSmartContracts",
      "func:deploy_monitoring_service",
      "func:deploy_one_to_n",
      "func:deploy_secret_registry",
      "func:deploy_service_registry",
      "func:deploy_smart_contract_bundle_concurrently",
      "func:deploy_token_network_registry",
      "func:deploy_user_deposit",
      "func:fund_node",
      "func:max_token_networks_fixture",
      "func:monitoring_service_address_fixture",
      "func:one_to_n_address_fixture",
      "func:register_token",
      "func:secret_registry_address_fixture",
      "func:secret_registry_proxy_fixture",
      "func:service_registry_address_fixture",
      "func:token_addresses_fixture",
      "func:token_contract_name_fixture",
      "func:token_network_proxy_fixture",
      "func:token_network_registry_address_fixture",
      "func:token_proxy_fixture",
      "func:transfer_user_deposit_tokens",
      "func:user_deposit_address_fixture"
    ],
    "old_files": [
      "smartcontracts.py_gpt4_a6a2c765.py"
    ],
    "new_files": [
      "smartcontracts_989d9a.py"
    ]
  },
  {
    "file_signature": [
      "class:HistPlot",
      "class:KdePlot",
      "func:__init__",
      "func:_adjust_bins",
      "func:_calculate_bins",
      "func:_get_column_weights",
      "func:_get_ind",
      "func:_grouped_hist",
      "func:_grouped_plot",
      "func:_kind",
      "func:_make_plot",
      "func:_make_plot_keywords",
      "func:_plot",
      "func:_post_plot_logic",
      "func:hist_frame",
      "func:hist_series",
      "func:orientation",
      "func:plot_group"
    ],
    "old_files": [
      "hist.py_gpt4_971ebb25.py"
    ],
    "new_files": [
      "hist_13f59f.py"
    ]
  },
  {
    "file_signature": [
      "class:AnyClass",
      "class:Callable",
      "class:CastFunction",
      "class:Generic",
      "class:NewType",
      "class:NewTypeFunction",
      "class:OverloadFunction",
      "class:Protocol",
      "class:ProxyTypingClassValue",
      "class:ProxyTypingValue",
      "class:ProxyWithGenerics",
      "class:Tuple",
      "class:TypeAlias",
      "class:TypedDict",
      "class:TypedDictClass",
      "class:TypingClassWithGenerics",
      "class:TypingModuleFilterWrapper",
      "class:TypingModuleName",
      "class:_TypingClassMixin",
      "func:__init__",
      "func:__repr__",
      "func:_create_instance_with_generics",
      "func:_get_wrapped_value",
      "func:_is_homogenous",
      "func:_remap",
      "func:execute_annotation",
      "func:gather_annotation_classes",
      "func:get_key_values",
      "func:get_metaclasses",
      "func:get_signatures",
      "func:infer",
      "func:infer_type_vars",
      "func:name",
      "func:py__bases__",
      "func:py__call__",
      "func:py__class__",
      "func:py__get__",
      "func:py__getitem__",
      "func:py__iter__",
      "func:py__name__",
      "func:py__simple_getitem__",
      "func:with_generics"
    ],
    "old_files": [
      "typing.py_gpt4_fde7d8f3.py"
    ],
    "new_files": [
      "typing_fe369a.py"
    ]
  },
  {
    "file_signature": [
      "class:WandBCallback",
      "func:__init__",
      "func:_log",
      "func:close",
      "func:load_state_dict",
      "func:log_scalars",
      "func:log_tensors",
      "func:on_start",
      "func:state_dict"
    ],
    "old_files": [
      "wandb.py_gpt4_0759ce02.py"
    ],
    "new_files": [
      "wandb_4a4375.py"
    ]
  },
  {
    "file_signature": [
      "class:KoalasAreaPlot",
      "class:KoalasBarPlot",
      "class:KoalasBarhPlot",
      "class:KoalasBoxPlot",
      "class:KoalasHistPlot",
      "class:KoalasKdePlot",
      "class:KoalasLinePlot",
      "class:KoalasPiePlot",
      "class:KoalasScatterPlot",
      "func:__init__",
      "func:_args_adjust",
      "func:_compute_plot_data",
      "func:_get_ind",
      "func:_make_plot",
      "func:_plot",
      "func:boxplot",
      "func:plot_frame",
      "func:plot_koalas",
      "func:plot_series",
      "func:rc_defaults",
      "func:update_dict"
    ],
    "old_files": [
      "matplotlib.py_gpt4_714edf47.py"
    ],
    "new_files": [
      "matplotlib_5964e7.py"
    ]
  },
  {
    "file_signature": [
      "class:Args",
      "class:BaseConfigTest",
      "func:__init__",
      "func:assertRaisesOrReturns",
      "func:empty_profile_renderer",
      "func:empty_project_renderer",
      "func:profile_path",
      "func:project_from_config_norender",
      "func:project_from_config_rendered",
      "func:project_path",
      "func:raises_nothing",
      "func:setUp",
      "func:tearDown",
      "func:temp_cd",
      "func:write_empty_profile",
      "func:write_packages",
      "func:write_profile",
      "func:write_project"
    ],
    "old_files": [
      "__init__.py_gpt4_8bb7c28f.py"
    ],
    "new_files": [
      "__init___c5e9e5.py"
    ]
  },
  {
    "file_signature": [
      "class:Completion",
      "class:ParamNameWithEquals",
      "func:__init__",
      "func:_complete_code_lines",
      "func:_complete_getattr",
      "func:_complete_global_scope",
      "func:_complete_in_string",
      "func:_complete_inherited",
      "func:_complete_keywords",
      "func:_complete_params",
      "func:_complete_python",
      "func:_complete_trailer",
      "func:_complete_trailer_for_values",
      "func:_extract_string_while_in_string",
      "func:_gather_nodes",
      "func:_get_importer_names",
      "func:_get_signature_param_names",
      "func:_is_parameter_completion",
      "func:_must_be_kwarg",
      "func:_remove_duplicates",
      "func:complete",
      "func:complete_param_names",
      "func:complete_trailer",
      "func:filter_names",
      "func:get_flow_scope_node",
      "func:get_public_name",
      "func:get_user_context",
      "func:iter_relevant_lines",
      "func:return_part_of_leaf",
      "func:search_in_module"
    ],
    "old_files": [
      "completion.py_gpt4_fabf7b75.py"
    ],
    "new_files": [
      "completion_8d3a60.py"
    ]
  },
  {
    "file_signature": [
      "class:CSVFormatter",
      "func:__init__",
      "func:_generate_multiindex_header_rows",
      "func:_get_index_label_flat",
      "func:_get_index_label_from_obj",
      "func:_get_index_label_multiindex",
      "func:_has_aliases",
      "func:_initialize_chunksize",
      "func:_initialize_columns",
      "func:_initialize_index_label",
      "func:_initialize_quotechar",
      "func:_need_to_save_header",
      "func:_number_format",
      "func:_save",
      "func:_save_body",
      "func:_save_chunk",
      "func:_save_header",
      "func:data_index",
      "func:decimal",
      "func:encoded_labels",
      "func:float_format",
      "func:has_mi_columns",
      "func:header",
      "func:index",
      "func:na_rep",
      "func:nlevels",
      "func:save",
      "func:write_cols"
    ],
    "old_files": [
      "csvs.py_gpt4_c26b4e7f.py"
    ],
    "new_files": [
      "csvs_0376ba.py"
    ]
  },
  {
    "file_signature": [
      "class:MultiTaskModel",
      "func:__init__",
      "func:_get_arguments",
      "func:forward",
      "func:get_forward_arguments",
      "func:get_metrics",
      "func:make_inputs_for_task",
      "func:make_output_human_readable"
    ],
    "old_files": [
      "multitask.py_gpt4_818caaf1.py"
    ],
    "new_files": [
      "multitask_24dbfa.py"
    ]
  },
  {
    "file_signature": [
      "class:TestModelNode",
      "class:TestParsedNode",
      "class:TestSemanticModel",
      "func:assertSameContents",
      "func:default_model_node",
      "func:default_semantic_model",
      "func:dimensions",
      "func:entities",
      "func:measures",
      "func:parsed_node",
      "func:test_all_constraints",
      "func:test_checked_agg_time_dimension_for_measure_exception",
      "func:test_checked_agg_time_dimension_for_measure_via_defaults",
      "func:test_checked_agg_time_dimension_for_measure_via_measure",
      "func:test_disabled_unique_combo_multiple",
      "func:test_disabled_unique_combo_single",
      "func:test_disabled_unique_multiple",
      "func:test_disabled_unique_single",
      "func:test_enabled_unique_combo_multiple",
      "func:test_enabled_unique_combo_single",
      "func:test_enabled_unique_multiple",
      "func:test_enabled_unique_single",
      "func:test_get_target_write_path",
      "func:test_get_target_write_path_split",
      "func:test_is_past_deprecation_date",
      "func:test_no_primary_key",
      "func:test_primary_key_column_constraint",
      "func:test_primary_key_model_constraint",
      "func:test_semantic_model_same_contents",
      "func:test_semantic_model_same_contents_different_node_relation",
      "func:test_semantic_model_same_contents_update_model",
      "func:test_unique_non_null_multiple",
      "func:test_unique_non_null_single"
    ],
    "old_files": [
      "test_nodes.py_gpt4_db0f5dea.py"
    ],
    "new_files": [
      "test_nodes_c6ed78.py"
    ]
  },
  {
    "file_signature": [
      "class:FStringState",
      "class:StopTokenizing",
      "class:TokenError",
      "class:Untokenizer",
      "func:__init__",
      "func:_combinations",
      "func:_get_normal_name",
      "func:_split_fstring_start_and_middle",
      "func:add_whitespace",
      "func:any",
      "func:compat",
      "func:consume_colon",
      "func:consume_lbrace",
      "func:consume_rbrace",
      "func:current",
      "func:detect_encoding",
      "func:enter_fstring",
      "func:find_cookie",
      "func:generate_tokens",
      "func:group",
      "func:is_fstring_start",
      "func:is_in_fstring_expression",
      "func:leave_fstring",
      "func:maybe",
      "func:printtoken",
      "func:read_or_stop",
      "func:tokenize",
      "func:tokenize_loop",
      "func:untokenize"
    ],
    "old_files": [
      "tokenize.py_gpt4_81bfde58.py"
    ],
    "new_files": [
      "tokenize_24b106.py"
    ]
  },
  {
    "file_signature": [
      "class:BadContentDispositionHeader",
      "class:BadContentDispositionParam",
      "class:BodyPartReader",
      "class:BodyPartReaderPayload",
      "class:MultipartPayloadWriter",
      "class:MultipartReader",
      "class:MultipartResponseWrapper",
      "class:MultipartWriter",
      "func:__aiter__",
      "func:__bool__",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_boundary_value",
      "func:_decode_content",
      "func:_decode_content_transfer",
      "func:_get_boundary",
      "func:_get_part_reader",
      "func:append",
      "func:append_form",
      "func:append_json",
      "func:append_payload",
      "func:at_eof",
      "func:boundary",
      "func:content_disposition_filename",
      "func:decode",
      "func:enable_compression",
      "func:enable_encoding",
      "func:filename",
      "func:from_response",
      "func:get_charset",
      "func:is_continuous_param",
      "func:is_extended_param",
      "func:is_quoted",
      "func:is_rfc5987",
      "func:is_token",
      "func:name",
      "func:parse_content_disposition",
      "func:size",
      "func:unescape"
    ],
    "old_files": [
      "multipart.py_gpt4_4b2b81d0.py"
    ],
    "new_files": [
      "multipart_07595c.py"
    ]
  },
  {
    "file_signature": [
      "class:TestServicePrincipal",
      "func:awsclient",
      "func:non_iso_suffixes",
      "func:region",
      "func:test_codedeploy_and_logs",
      "func:test_defaults",
      "func:test_ec2",
      "func:test_endpoint_dns_suffix",
      "func:test_endpoint_dns_suffix_from_arn",
      "func:test_endpoint_from_arn",
      "func:test_iso_exceptions",
      "func:test_local_suffix",
      "func:test_others",
      "func:test_resolve_endpoint",
      "func:test_states",
      "func:test_states_iso",
      "func:test_states_isob",
      "func:test_unmatched_service",
      "func:url_suffix"
    ],
    "old_files": [
      "test_awsclient.py_gpt4_2fbde922.py"
    ],
    "new_files": [
      "test_awsclient_21d219.py"
    ]
  },
  {
    "file_signature": [
      "class:AlertsTestCase",
      "class:DummyRemoteIPPlugin",
      "func:post_receive",
      "func:pre_receive",
      "func:setUp",
      "func:status_change",
      "func:tearDown",
      "func:test_alert",
      "func:test_alert_attributes",
      "func:test_alert_no_attributes",
      "func:test_alert_not_found",
      "func:test_alert_status",
      "func:test_alert_tagging",
      "func:test_alerts_show_fields",
      "func:test_closed_alerts",
      "func:test_duplicate_status",
      "func:test_duplicate_value",
      "func:test_expired_alerts",
      "func:test_filter_and_query_params",
      "func:test_filter_params",
      "func:test_get_alerts",
      "func:test_get_body",
      "func:test_history_limit",
      "func:test_query_param",
      "func:test_reopen_alerts",
      "func:test_timeout"
    ],
    "old_files": [
      "test_alerts.py_gpt4_048d9fde.py"
    ],
    "new_files": [
      "test_alerts_3e2087.py"
    ]
  },
  {
    "file_signature": [
      "class:SupersetTestCase",
      "func:create_app",
      "func:create_fake_db",
      "func:create_fake_db_for_macros",
      "func:create_user",
      "func:create_user_with_roles",
      "func:db_insert_temp_object",
      "func:delete_assert_metric",
      "func:delete_fake_db",
      "func:delete_fake_db_for_macros",
      "func:get_assert_metric",
      "func:get_birth_names_dataset",
      "func:get_dash_by_slug",
      "func:get_database_by_id",
      "func:get_database_by_name",
      "func:get_datasource_mock",
      "func:get_dttm",
      "func:get_json_resp",
      "func:get_list",
      "func:get_nonexistent_numeric_id",
      "func:get_or_create",
      "func:get_resp",
      "func:get_role",
      "func:get_slice",
      "func:get_table",
      "func:get_table_by_id",
      "func:get_user",
      "func:grant_public_access_to_table",
      "func:grant_role_access_to_table",
      "func:insert_dashboard",
      "func:is_module_installed",
      "func:login",
      "func:logout",
      "func:mock_get_dialect",
      "func:post_assert_metric",
      "func:put_assert_metric",
      "func:revoke_public_access_to_table",
      "func:revoke_role_access_to_table",
      "func:run_sql",
      "func:tearDown",
      "func:temporary_user"
    ],
    "old_files": [
      "base_tests.py_gpt4_525dc3b2.py"
    ],
    "new_files": [
      "base_tests_a1e90e.py"
    ]
  },
  {
    "file_signature": [
      "class:IsFQNResource",
      "class:PartialProject",
      "class:Project",
      "class:RenderComponents",
      "class:VarProvider",
      "func:__eq__",
      "func:__init__",
      "func:__str__",
      "func:_all_source_paths",
      "func:_get_required_version",
      "func:_load_yaml",
      "func:_parse_versions",
      "func:_query_comment_from_cfg",
      "func:all_source_paths",
      "func:check_config_path",
      "func:create_project",
      "func:fixture_paths",
      "func:flag_or",
      "func:from_dicts",
      "func:from_project_root",
      "func:generic_test_paths",
      "func:get_default_selector_name",
      "func:get_macro_search_order",
      "func:get_rendered",
      "func:get_selector",
      "func:hashed_name",
      "func:load_raw_project",
      "func:load_yml_dict",
      "func:package_and_project_data_from_root",
      "func:package_config_from_data",
      "func:project_target_path",
      "func:read_project_flags",
      "func:render",
      "func:render_package_metadata",
      "func:render_profile_name",
      "func:to_dict",
      "func:to_project_config",
      "func:validate",
      "func:validate_version",
      "func:value_or",
      "func:vars_for"
    ],
    "old_files": [
      "project.py_gpt4_bf7132a4.py"
    ],
    "new_files": [
      "project_7870ca.py"
    ]
  },
  {
    "file_signature": [
      "class:MicrobatchBuilder",
      "func:__init__",
      "func:batch_id",
      "func:build_batches",
      "func:build_end_time",
      "func:build_jinja_context_for_batch",
      "func:build_start_time",
      "func:ceiling_timestamp",
      "func:format_batch_start",
      "func:offset_timestamp",
      "func:truncate_timestamp"
    ],
    "old_files": [
      "microbatch.py_gpt4_cb5cf043.py"
    ],
    "new_files": [
      "microbatch_743d2f.py"
    ]
  },
  {
    "file_signature": [
      "class:InferenceState",
      "func:__init__",
      "func:builtins_module",
      "func:execute",
      "func:get_sys_path",
      "func:import_module",
      "func:infer",
      "func:parse",
      "func:parse_and_get_code",
      "func:reset_recursion_limitations",
      "func:typing_module"
    ],
    "old_files": [
      "__init__.py_gpt4_99e1ea12.py"
    ],
    "new_files": [
      "__init___417be1.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractInstanceValue",
      "class:AnonymousInstance",
      "class:AnonymousMethodExecutionContext",
      "class:AnonymousMethodExecutionFilter",
      "class:BoundMethod",
      "class:CompiledBoundMethod",
      "class:CompiledInstance",
      "class:CompiledInstanceClassFilter",
      "class:CompiledInstanceName",
      "class:InstanceArguments",
      "class:InstanceClassFilter",
      "class:InstanceExecutedParamName",
      "class:LazyInstanceClassName",
      "class:MethodExecutionContext",
      "class:SelfAttributeFilter",
      "class:SelfName",
      "class:TreeInstance",
      "class:_BaseTreeInstance",
      "func:__init__",
      "func:__repr__",
      "func:_as_context",
      "func:_check_flows",
      "func:_convert",
      "func:_convert_names",
      "func:_convert_param",
      "func:_filter",
      "func:_filter_self_names",
      "func:_get_annotated_class_object",
      "func:_get_arguments",
      "func:_is_in_right_scope",
      "func:array_type",
      "func:create_instance_context",
      "func:execute_function_slots",
      "func:get",
      "func:get_annotated_class_object",
      "func:get_defining_qualified_value",
      "func:get_filters",
      "func:get_function_slot_names",
      "func:get_key_values",
      "func:get_param_names",
      "func:get_qualified_names",
      "func:get_signature_functions",
      "func:get_signatures",
      "func:get_type_hint",
      "func:infer",
      "func:is_bound_method",
      "func:is_instance",
      "func:is_stub",
      "func:iterate",
      "func:matches_signature",
      "func:name",
      "func:parent_context",
      "func:py__bool__",
      "func:py__call__",
      "func:py__class__",
      "func:py__get__",
      "func:py__getattribute__alternatives",
      "func:py__getitem__",
      "func:py__iter__",
      "func:py__next__",
      "func:py__simple_getitem__",
      "func:unpack",
      "func:values"
    ],
    "old_files": [
      "instance.py_gpt4_866bad63.py"
    ],
    "new_files": [
      "instance_410c65.py"
    ]
  },
  {
    "file_signature": [
      "class:QuestionAnsweringSuite",
      "func:__init__",
      "func:_contractions",
      "func:_crossproduct",
      "func:_default_taxonomy_tests",
      "func:_default_tests",
      "func:_default_vocabulary_tests",
      "func:_format_failing_examples",
      "func:_prediction_and_confidence_scores",
      "func:_setup_editor",
      "func:context_punctuation",
      "func:contractions",
      "func:preds_and_confs_fn",
      "func:punctuation",
      "func:question_typo",
      "func:typos"
    ],
    "old_files": [
      "question_answering_suite.py_gpt4_d780ae69.py"
    ],
    "new_files": [
      "question_answering_suite_c14a3b.py"
    ]
  },
  {
    "file_signature": [
      "class:ClassFilter",
      "class:ClassMixin",
      "class:ClassName",
      "class:ClassValue",
      "func:__init__",
      "func:_access_possible",
      "func:_as_context",
      "func:_convert_names",
      "func:_equals_origin_scope",
      "func:_filter",
      "func:_get_bases_arguments",
      "func:api_type",
      "func:define_generics",
      "func:get_filters",
      "func:get_metaclass_filters",
      "func:get_metaclass_signatures",
      "func:get_metaclasses",
      "func:get_signatures",
      "func:get_type_hint",
      "func:infer",
      "func:is_class",
      "func:is_class_mixin",
      "func:is_typeddict",
      "func:list_type_vars",
      "func:name",
      "func:py__bases__",
      "func:py__call__",
      "func:py__class__",
      "func:py__getitem__",
      "func:py__mro__",
      "func:py__name__",
      "func:remap_type_vars",
      "func:with_generics"
    ],
    "old_files": [
      "klass.py_gpt4_e0e79924.py"
    ],
    "new_files": [
      "klass_d2a9d4.py"
    ]
  },
  {
    "file_signature": [
      "class:ClientConnectionError",
      "class:ClientConnectionResetError",
      "class:ClientConnectorCertificateError",
      "class:ClientConnectorDNSError",
      "class:ClientConnectorError",
      "class:ClientConnectorSSLError",
      "class:ClientError",
      "class:ClientHttpProxyError",
      "class:ClientOSError",
      "class:ClientPayloadError",
      "class:ClientProxyConnectionError",
      "class:ClientResponseError",
      "class:ClientSSLError",
      "class:ConnectionTimeoutError",
      "class:ContentTypeError",
      "class:InvalidURL",
      "class:InvalidUrlClientError",
      "class:InvalidUrlRedirectClientError",
      "class:NonHttpUrlClientError",
      "class:NonHttpUrlRedirectClientError",
      "class:RedirectClientError",
      "class:ServerConnectionError",
      "class:ServerDisconnectedError",
      "class:ServerFingerprintMismatch",
      "class:ServerTimeoutError",
      "class:SocketTimeoutError",
      "class:TooManyRedirects",
      "class:UnixClientConnectorError",
      "class:WSMessageTypeError",
      "class:WSServerHandshakeError",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:certificate_error",
      "func:description",
      "func:host",
      "func:os_error",
      "func:path",
      "func:port",
      "func:ssl",
      "func:url"
    ],
    "old_files": [
      "client_exceptions.py_gpt4_dce05f8f.py"
    ],
    "new_files": [
      "client_exceptions_dac1d7.py"
    ]
  },
  {
    "file_signature": [
      "class:Params",
      "func:__delitem__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__setitem__",
      "func:__str__",
      "func:_check_is_dict",
      "func:_environment_variables",
      "func:_is_dict_free",
      "func:_is_encodable",
      "func:_replace_none",
      "func:as_dict",
      "func:as_flat_dict",
      "func:as_ordered_dict",
      "func:assert_empty",
      "func:duplicate",
      "func:evaluate_file",
      "func:evaluate_snippet",
      "func:from_file",
      "func:get",
      "func:get_hash",
      "func:infer_and_cast",
      "func:log_recursively",
      "func:order_dict",
      "func:order_func",
      "func:parse_overrides",
      "func:pop",
      "func:pop_bool",
      "func:pop_choice",
      "func:pop_float",
      "func:pop_int",
      "func:recurse",
      "func:remove_keys_from_params",
      "func:to_file",
      "func:with_overrides"
    ],
    "old_files": [
      "params.py_gpt4_31063833.py"
    ],
    "new_files": [
      "params_226a6a.py"
    ]
  },
  {
    "file_signature": [
      "class:ConstantLearningRateScheduler",
      "class:ConstantWithWarmupLearningRateScheduler",
      "class:CosineHardRestartsWithWarmupLearningRateScheduler",
      "class:CosineWithWarmupLearningRateScheduler",
      "class:LearningRateScheduler",
      "class:_PyTorchLearningRateSchedulerWithMetricsWrapper",
      "class:_PyTorchLearningRateSchedulerWrapper",
      "func:__init__",
      "func:get_values",
      "func:load_state_dict",
      "func:state_dict",
      "func:step"
    ],
    "old_files": [
      "learning_rate_scheduler.py_gpt4_290a2bf8.py"
    ],
    "new_files": [
      "learning_rate_scheduler_b929ac.py"
    ]
  },
  {
    "file_signature": [
      "class:PretrainedTransformerIndexer",
      "func:__eq__",
      "func:__init__",
      "func:_add_encoding_to_vocabulary_if_needed",
      "func:_extract_token_and_type_ids",
      "func:_postprocess_output",
      "func:as_padded_tensor_dict",
      "func:count_vocab_items",
      "func:get_empty_token_list",
      "func:indices_to_tokens",
      "func:tokens_to_indices"
    ],
    "old_files": [
      "pretrained_transformer_indexer.py_gpt4_f8ddac69.py"
    ],
    "new_files": [
      "pretrained_transformer_indexer_c496a2.py"
    ]
  },
  {
    "file_signature": [
      "func:add_column",
      "func:clone_table",
      "func:delete_records",
      "func:get_records",
      "func:insert_records",
      "func:update_records"
    ],
    "old_files": [
      "common.py_gpt4_c333ba96.py"
    ],
    "new_files": [
      "common_285794.py"
    ]
  },
  {
    "file_signature": [
      "class:FBetaMultiLabelMeasureTest",
      "func:multiple_runs",
      "func:setup_method",
      "func:test_config_errors",
      "func:test_distributed_fbeta_multilabel_measure",
      "func:test_fbeta_multilabel_handles_batch_size_of_one",
      "func:test_fbeta_multilabel_handles_no_prediction_false_last_class",
      "func:test_fbeta_multilabel_handles_no_prediction_true_all_class",
      "func:test_fbeta_multilabel_handles_no_prediction_true_last_class",
      "func:test_fbeta_multilabel_handles_no_prediction_true_other_class",
      "func:test_fbeta_multilabel_macro_average_metric",
      "func:test_fbeta_multilabel_metric",
      "func:test_fbeta_multilabel_micro_average_metric",
      "func:test_fbeta_multilabel_state",
      "func:test_fbeta_multilabel_with_explicit_labels",
      "func:test_fbeta_multilabel_with_macro_average",
      "func:test_fbeta_multilabel_with_mask",
      "func:test_fbeta_multilabel_with_micro_average",
      "func:test_fbeta_multilabel_with_weighted_average",
      "func:test_fbeta_multilable_with_extra_dimensions",
      "func:test_multiple_distributed_runs",
      "func:test_runtime_errors"
    ],
    "old_files": [
      "fbeta_multi_label_measure_test.py_gpt4_c6fb8ff8.py"
    ],
    "new_files": [
      "fbeta_multi_label_measure_test_75eeda.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_sorted_source_vocab_fnames",
      "func:_get_sorted_target_vocab_fnames",
      "func:are_identical",
      "func:build_from_paths",
      "func:build_pruned_vocab",
      "func:build_vocab",
      "func:count_tokens",
      "func:count_tokens_for_path",
      "func:get_ordered_tokens_from_vocab",
      "func:is_valid_vocab",
      "func:load_or_create_vocab",
      "func:load_or_create_vocabs",
      "func:load_source_vocabs",
      "func:load_target_vocabs",
      "func:main",
      "func:prepare_vocab",
      "func:reverse_vocab",
      "func:save_source_vocabs",
      "func:save_target_vocabs",
      "func:vocab_from_json",
      "func:vocab_to_json"
    ],
    "old_files": [
      "vocab.py_gpt4_aa60a35d.py"
    ],
    "new_files": [
      "vocab_563bd2.py"
    ]
  },
  {
    "file_signature": [
      "class:CounterOnBatchCallback",
      "class:MockLRScheduler",
      "class:TestDryRun",
      "class:TestTrain",
      "class:TrainingDataLoggerOnBatchCallback",
      "class:TrainingDeviceLoggerOnBatchCallback",
      "class:TrainingPrimaryCheckCallback",
      "func:__init__",
      "func:on_batch",
      "func:on_start",
      "func:setup_method",
      "func:test_detect_gpu",
      "func:test_distributed_raises_error_with_no_gpus",
      "func:test_dry_run_doesnt_overwrite_vocab",
      "func:test_dry_run_makes_vocab",
      "func:test_dry_run_with_extension",
      "func:test_dry_run_without_extension",
      "func:test_error_is_throw_when_cuda_device_is_not_available",
      "func:test_force_cpu",
      "func:test_force_gpu",
      "func:test_make_vocab_args",
      "func:test_train_args",
      "func:test_train_can_fine_tune_model_from_archive",
      "func:test_train_model",
      "func:test_train_model_can_instantiate_from_params",
      "func:test_train_model_distributed",
      "func:test_train_model_distributed_with_gradient_accumulation",
      "func:test_train_model_distributed_with_sharded_reader",
      "func:test_train_model_distributed_without_sharded_reader",
      "func:test_train_nograd_regex",
      "func:test_train_number_of_steps",
      "func:test_train_saves_all_keys_in_config",
      "func:test_train_with_test_set",
      "func:test_warn_validation_loader_batches_per_epoch"
    ],
    "old_files": [
      "train_test.py_gpt4_f735c70e.py"
    ],
    "new_files": [
      "train_test_b790e4.py"
    ]
  },
  {
    "file_signature": [
      "class:CattTest",
      "class:CattTestError",
      "func:__init__",
      "func:_failure_test",
      "func:_get_val",
      "func:_regular_test",
      "func:_should_fail_test",
      "func:cli",
      "func:run",
      "func:run_tests",
      "func:set_cmd_base",
      "func:subp_run"
    ],
    "old_files": [
      "test_procedure.py_gpt4_32a863d6.py"
    ],
    "new_files": [
      "test_procedure_3f923d.py"
    ]
  },
  {
    "file_signature": [
      "class:Base",
      "class:BasePattern",
      "class:Leaf",
      "class:LeafPattern",
      "class:NegatedPattern",
      "class:Node",
      "class:NodePattern",
      "class:WildcardPattern",
      "func:__eq__",
      "func:__init__",
      "func:__ne__",
      "func:__new__",
      "func:__repr__",
      "func:__str__",
      "func:__unicode__",
      "func:_bare_name_matches",
      "func:_eq",
      "func:_iterative_matches",
      "func:_prefix_getter",
      "func:_prefix_setter",
      "func:_recursive_matches",
      "func:_submatch",
      "func:append_child",
      "func:changed",
      "func:clone",
      "func:convert",
      "func:depth",
      "func:generate_matches",
      "func:get_lineno",
      "func:get_prefix",
      "func:get_suffix",
      "func:insert_child",
      "func:leaves",
      "func:match",
      "func:match_seq",
      "func:next_sibling",
      "func:optimize",
      "func:post_order",
      "func:pre_order",
      "func:prev_sibling",
      "func:remove",
      "func:replace",
      "func:set_child",
      "func:set_prefix",
      "func:type_repr"
    ],
    "old_files": [
      "pytree.py_gpt4_3ec1b766.py"
    ],
    "new_files": [
      "pytree_2ac25d.py"
    ]
  },
  {
    "file_signature": [
      "class:FBetaMeasureTest",
      "func:multiple_runs",
      "func:setup_method",
      "func:test_config_errors",
      "func:test_distributed_fbeta_measure",
      "func:test_fbeta_handles_batch_size_of_one",
      "func:test_fbeta_handles_no_prediction_false_last_class",
      "func:test_fbeta_handles_no_prediction_true_all_class",
      "func:test_fbeta_handles_no_prediction_true_last_class",
      "func:test_fbeta_handles_no_prediction_true_other_class",
      "func:test_fbeta_multiclass_macro_average_metric",
      "func:test_fbeta_multiclass_metric",
      "func:test_fbeta_multiclass_micro_average_metric",
      "func:test_fbeta_multiclass_state",
      "func:test_fbeta_multiclass_with_explicit_labels",
      "func:test_fbeta_multiclass_with_macro_average",
      "func:test_fbeta_multiclass_with_mask",
      "func:test_fbeta_multiclass_with_micro_average",
      "func:test_fbeta_multiclass_with_weighted_average",
      "func:test_multiple_distributed_runs",
      "func:test_runtime_errors"
    ],
    "old_files": [
      "fbeta_measure_test.py_gpt4_2dbec3bd.py"
    ],
    "new_files": [
      "fbeta_measure_test_d2fc57.py"
    ]
  },
  {
    "file_signature": [
      "class:BinaryInfo",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__str__",
      "func:_download_from_s3",
      "func:filepath",
      "func:matched_rule_ids",
      "func:publish_negative_match_result",
      "func:save_matches_and_alert",
      "func:summary"
    ],
    "old_files": [
      "binary_info.py_gpt4_bb0701ae.py"
    ],
    "new_files": [
      "binary_info_b9349d.py"
    ]
  },
  {
    "file_signature": [
      "class:GenericTestBlock",
      "class:ParserRef",
      "class:TargetBlock",
      "class:TargetColumnsBlock",
      "class:TestBlock",
      "class:VersionedTestBlock",
      "class:YamlBlock",
      "func:__init__",
      "func:_add",
      "func:columns",
      "func:data_tests",
      "func:from_file_block",
      "func:from_target",
      "func:from_test_block",
      "func:from_versioned_target",
      "func:from_yaml_block",
      "func:name",
      "func:quote_columns",
      "func:tests",
      "func:trimmed"
    ],
    "old_files": [
      "common.py_gpt4_7d9ef597.py"
    ],
    "new_files": [
      "common_4aeea7.py"
    ]
  },
  {
    "file_signature": [
      "class:Match",
      "class:PyRegExp",
      "class:ReIndexError",
      "class:Regex",
      "class:error",
      "func:__init__",
      "func:_compileWrapper",
      "func:_convertFlags",
      "func:_findAllMatches",
      "func:_getTargetStr",
      "func:_lastMatchGroup",
      "func:_patternHasCaptures",
      "func:compile",
      "func:end",
      "func:endpos",
      "func:escape",
      "func:expand",
      "func:findall",
      "func:finditer",
      "func:flags",
      "func:fullmatch",
      "func:group",
      "func:groupdict",
      "func:groupindex",
      "func:groups",
      "func:lastgroup",
      "func:lastindex",
      "func:mSelect",
      "func:match",
      "func:pattern",
      "func:pos",
      "func:purge",
      "func:re",
      "func:replfunc",
      "func:search",
      "func:span",
      "func:split",
      "func:start",
      "func:string",
      "func:sub",
      "func:subn"
    ],
    "old_files": [
      "__init__.py_deepseek_7204dc3f.py"
    ],
    "new_files": [
      "__init___7ab01a.py"
    ]
  },
  {
    "file_signature": [
      "class:HiveEngineSpec",
      "func:_extract_error_message",
      "func:_get_fields",
      "func:_get_hive_type",
      "func:_latest_partition_from_df",
      "func:_partition_query",
      "func:adjust_engine_params",
      "func:convert_dttm",
      "func:df_to_sql",
      "func:execute",
      "func:fetch_data",
      "func:get_columns",
      "func:get_function_names",
      "func:get_schema_from_engine_params",
      "func:get_tracking_url_from_logs",
      "func:get_url_for_impersonation",
      "func:get_view_names",
      "func:handle_cursor",
      "func:has_implicit_cancel",
      "func:latest_sub_partition",
      "func:patch",
      "func:progress",
      "func:select_star",
      "func:update_impersonation_config",
      "func:upload_to_s3",
      "func:where_latest_partition"
    ],
    "old_files": [
      "hive.py_deepseek_5136cf5e.py"
    ],
    "new_files": [
      "hive_66cde7.py"
    ]
  },
  {
    "file_signature": [
      "class:SentimentAnalysisSuite",
      "func:__init__",
      "func:_add_phrase_function",
      "func:_default_fairness_tests",
      "func:_default_negation_tests",
      "func:_default_ner_tests",
      "func:_default_robustness_tests",
      "func:_default_temporal_tests",
      "func:_default_tests",
      "func:_default_vocabulary_tests",
      "func:_diff_down",
      "func:_diff_up",
      "func:_format_failing_examples",
      "func:_positive_change",
      "func:_prediction_and_confidence_scores",
      "func:_setup_editor",
      "func:perturb_fn",
      "func:preds_and_confs_fn"
    ],
    "old_files": [
      "sentiment_analysis_suite.py_deepseek_ad14d086.py"
    ],
    "new_files": [
      "sentiment_analysis_suite_5e67f5.py"
    ]
  },
  {
    "file_signature": [
      "class:ExposureParser",
      "class:GroupParser",
      "class:MetricParser",
      "class:SavedQueryParser",
      "class:SemanticModelParser",
      "func:__init__",
      "func:_create_metric",
      "func:_generate_exposure_config",
      "func:_generate_metric_config",
      "func:_generate_saved_query_config",
      "func:_generate_semantic_model_config",
      "func:_get_dimension_type_params",
      "func:_get_dimensions",
      "func:_get_entities",
      "func:_get_export",
      "func:_get_export_config",
      "func:_get_input_measure",
      "func:_get_input_measures",
      "func:_get_measures",
      "func:_get_metric_input",
      "func:_get_metric_inputs",
      "func:_get_metric_type_params",
      "func:_get_non_additive_dimension",
      "func:_get_optional_conversion_type_params",
      "func:_get_optional_cumulative_type_params",
      "func:_get_optional_input_measure",
      "func:_get_optional_metric_input",
      "func:_get_optional_time_window",
      "func:_get_period_agg",
      "func:_get_query_params",
      "func:parse",
      "func:parse_exposure",
      "func:parse_group",
      "func:parse_metric",
      "func:parse_saved_query",
      "func:parse_semantic_model",
      "func:parse_where_filter",
      "func:wrap_tags"
    ],
    "old_files": [
      "schema_yaml_readers.py_deepseek_f77f3b29.py"
    ],
    "new_files": [
      "schema_yaml_readers_9dabb0.py"
    ]
  },
  {
    "file_signature": [
      "class:FrameWriter",
      "class:JSONTableWriter",
      "class:JsonReader",
      "class:SeriesWriter",
      "class:Writer",
      "func:__init__",
      "func:_combine_lines",
      "func:_format_axes",
      "func:_get_data_from_filepath",
      "func:obj_to_write",
      "func:read",
      "func:read_json",
      "func:to_json",
      "func:write"
    ],
    "old_files": [
      "_json.py_deepseek_09ea9ba0.py"
    ],
    "new_files": [
      "_json_57f411.py"
    ]
  },
  {
    "file_signature": [
      "class:FlicButton",
      "func:__init__",
      "func:_connection_status_changed",
      "func:_create_channel",
      "func:_on_click",
      "func:_on_up_down",
      "func:_queued_event_check",
      "func:get_info_callback",
      "func:new_button_callback",
      "func:scan_completed_callback",
      "func:setup_button",
      "func:setup_platform",
      "func:start_scanning"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_1e3e2ae7.py"
    ],
    "new_files": [
      "binary_sensor_f0d918.py"
    ]
  },
  {
    "file_signature": [
      "class:TestLastWeekOfMonth",
      "class:TestWeek",
      "class:TestWeekOfMonth",
      "func:test_constructor",
      "func:test_corner",
      "func:test_is_on_offset",
      "func:test_is_on_offset_nanoseconds",
      "func:test_is_on_offset_weekday_none",
      "func:test_last_week_of_month_on_offset",
      "func:test_offset",
      "func:test_repr",
      "func:test_week_add_invalid"
    ],
    "old_files": [
      "test_week.py_deepseek_50adb609.py"
    ],
    "new_files": [
      "test_week_31892f.py"
    ]
  },
  {
    "file_signature": [
      "class:HypothesisSpec",
      "func:__init__",
      "func:adjust_float",
      "func:cat_tuples",
      "func:clear_database",
      "func:do_map",
      "func:filtered_strategy",
      "func:flatmapped_strategy",
      "func:float",
      "func:float_range",
      "func:get_example",
      "func:integer_range",
      "func:is_good",
      "func:just_strategy",
      "func:list_strategy",
      "func:or_strategy",
      "func:repr_is_good",
      "func:sampled_from_strategy",
      "func:set_database",
      "func:single_tuple",
      "func:strategy",
      "func:strategy_for_tupes",
      "func:teardown"
    ],
    "old_files": [
      "test_strategy_state.py_deepseek_f335305e.py"
    ],
    "new_files": [
      "test_strategy_state_127381.py"
    ]
  },
  {
    "file_signature": [
      "class:MockSamsungTVAsyncRest",
      "func:__init__",
      "func:_async_subscribe_services",
      "func:_async_unsubscribe_services",
      "func:_mock_ws_event_callback",
      "func:_raise_event",
      "func:_start_listening",
      "func:app_list_delay_fixture",
      "func:fake_host_fixture",
      "func:mac_address_fixture",
      "func:mock_now",
      "func:mock_setup_entry",
      "func:remote_fixture",
      "func:remoteencws_failing_fixture",
      "func:remoteencws_fixture",
      "func:remotews_fixture",
      "func:rest_api_failure_fixture",
      "func:rest_api_fixture",
      "func:rest_api_fixture_non_ssl_only",
      "func:samsungtv_mock_async_get_local_ip",
      "func:silent_ssdp_scanner",
      "func:upnp_factory_fixture"
    ],
    "old_files": [
      "conftest.py_deepseek_44964732.py"
    ],
    "new_files": [
      "conftest_cc5a31.py"
    ]
  },
  {
    "file_signature": [
      "class:AnotherClassWithReallyLongConstructor",
      "class:ClassWithDecorator",
      "class:SomeClass",
      "class:_PrivateClass",
      "func:__init__",
      "func:_private_method",
      "func:func_with_args",
      "func:func_with_no_args",
      "func:method_with_alternative_return_section",
      "func:method_with_alternative_return_section3",
      "func:public_method_on_private_class",
      "func:some_method"
    ],
    "old_files": [
      "basic_example.py_deepseek_81ec62eb.py"
    ],
    "new_files": [
      "basic_example_9b8645.py"
    ]
  },
  {
    "file_signature": [
      "class:JSONHandler",
      "class:JSONServer",
      "func:__init__",
      "func:collect_incoming_data",
      "func:fileno",
      "func:found_terminator",
      "func:get_log_traceback",
      "func:get_logger",
      "func:handle_accept",
      "func:handle_close",
      "func:handle_command",
      "func:log_traceback",
      "func:return_back",
      "func:serve_forever",
      "func:shutdown"
    ],
    "old_files": [
      "minserver.py_deepseek_71a7dccc.py"
    ],
    "new_files": [
      "minserver_4f13e8.py"
    ]
  },
  {
    "file_signature": [
      "class:GitlabIssue",
      "func:__init__",
      "func:post_receive",
      "func:pre_receive",
      "func:status_change",
      "func:take_action"
    ],
    "old_files": [
      "alerta_gitlab.py_deepseek_784d3636.py"
    ],
    "new_files": [
      "alerta_gitlab_b4eabf.py"
    ]
  },
  {
    "file_signature": [
      "class:BadNarrowOperatorError",
      "class:InvalidOperatorCombinationError",
      "class:NarrowBuilder",
      "class:NarrowParameter",
      "func:__init__",
      "func:_by_search_pgroonga",
      "func:_by_search_tsearch",
      "func:_get_direct_message_group_recipients",
      "func:_pg_re_escape",
      "func:add_term",
      "func:by_channel",
      "func:by_channels",
      "func:by_dm",
      "func:by_dm_including",
      "func:by_group_pm_with",
      "func:by_has",
      "func:by_id",
      "func:by_in",
      "func:by_is",
      "func:by_near",
      "func:by_search",
      "func:by_sender",
      "func:by_topic",
      "func:can_narrow_define_conversation",
      "func:check_not_both_channel_and_dm_narrow",
      "func:convert_term",
      "func:exclude_muting_conditions",
      "func:get_base_query_for_search",
      "func:get_channel_from_narrow_access_unchecked",
      "func:is_spectator_compatible",
      "func:is_web_public_narrow",
      "func:msg_format",
      "func:ok_to_include_history",
      "func:ts_locs_array",
      "func:update_narrow_terms_containing_empty_topic_fallback_name",
      "func:update_narrow_terms_containing_with_operator",
      "func:validate_terms"
    ],
    "old_files": [
      "narrow.py_deepseek_1f6de723.py"
    ],
    "new_files": [
      "narrow_5a6ea2.py"
    ]
  },
  {
    "file_signature": [
      "class:AuditTrail",
      "func:__init__",
      "func:_fmt",
      "func:_log_response",
      "func:_webhook_response",
      "func:admin_log_response",
      "func:admin_webhook_response",
      "func:auth_log_response",
      "func:auth_webhook_response",
      "func:get_redacted_data",
      "func:init_app",
      "func:write_log_response",
      "func:write_webhook_response"
    ],
    "old_files": [
      "audit.py_deepseek_9dfb954b.py"
    ],
    "new_files": [
      "audit_992d57.py"
    ]
  },
  {
    "file_signature": [
      "class:SensorTrend",
      "func:__init__",
      "func:_calculate_gradient",
      "func:_validate_min_max",
      "func:extra_state_attributes",
      "func:trend_sensor_state_listener"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_866a4655.py"
    ],
    "new_files": [
      "binary_sensor_8bad86.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseStatsLogger",
      "class:DummyStatsLogger",
      "class:StatsdStatsLogger",
      "func:__init__",
      "func:decr",
      "func:gauge",
      "func:incr",
      "func:key",
      "func:timing"
    ],
    "old_files": [
      "stats_logger.py_deepseek_9e1ae547.py"
    ],
    "new_files": [
      "stats_logger_411bed.py"
    ]
  },
  {
    "file_signature": [
      "class:TimedeltaIndex",
      "func:__new__",
      "func:_engine_type",
      "func:_is_comparable_dtype",
      "func:_parse_with_reso",
      "func:_parsed_string_to_bounds",
      "func:_resolution_obj",
      "func:get_loc",
      "func:inferred_type",
      "func:timedelta_range"
    ],
    "old_files": [
      "timedeltas.py_deepseek_4ca19268.py"
    ],
    "new_files": [
      "timedeltas_44fa81.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseHomeKitSelect",
      "class:EcobeeModeSelect",
      "class:HomeKitSelect",
      "class:HomeKitSelectEntityDescription",
      "func:__init__",
      "func:async_add_characteristic",
      "func:current_option",
      "func:get_characteristic_types",
      "func:name"
    ],
    "old_files": [
      "select.py_deepseek_fd861681.py"
    ],
    "new_files": [
      "select_c9b799.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPExecutor",
      "class:JSONRPCExecutor",
      "class:TimeoutHTTPAdapter",
      "func:__init__",
      "func:_send_request",
      "func:_validate_response",
      "func:after_start_check",
      "func:kill",
      "func:running",
      "func:send",
      "func:split_endpoint",
      "func:start",
      "func:stop",
      "func:wait_for"
    ],
    "old_files": [
      "http.py_deepseek_98a64c7a.py"
    ],
    "new_files": [
      "http_b073d4.py"
    ]
  },
  {
    "file_signature": [
      "class:InstrumentedMigration",
      "func:_instrument_apply_update",
      "func:_instrument_migrate_schema",
      "func:_instrument_migrate_schema_live",
      "func:_instrument_migrate_schema_non_live",
      "func:instrument_migration",
      "func:instrument_migration_fixture",
      "func:pytest_configure",
      "func:recorder_dialect_name",
      "func:skip_by_db_engine"
    ],
    "old_files": [
      "conftest.py_deepseek_02cc8c72.py"
    ],
    "new_files": [
      "conftest_81d476.py"
    ]
  },
  {
    "file_signature": [
      "class:SIABaseEntity",
      "class:SIAEntityDescription",
      "class:SIARequiredKeysMixin",
      "func:__init__",
      "func:_cancel_post_interval_update_cb",
      "func:async_create_post_interval_update_cb",
      "func:async_handle_event",
      "func:async_post_interval_update",
      "func:handle_last_state",
      "func:update_state"
    ],
    "old_files": [
      "entity.py_deepseek_8c4155c9.py"
    ],
    "new_files": [
      "entity_a0478b.py"
    ]
  },
  {
    "file_signature": [
      "class:Player",
      "func:__init__",
      "func:_need_to_shuffle",
      "func:_swap_song",
      "func:add_songs",
      "func:append_songs",
      "func:build_playinfo",
      "func:cache_song",
      "func:change_mode",
      "func:config_mpg123",
      "func:config_notifier",
      "func:current_song",
      "func:download_lyric",
      "func:download_song",
      "func:index",
      "func:info",
      "func:is_empty",
      "func:is_index_valid",
      "func:is_ordered_loop_mode",
      "func:is_ordered_mode",
      "func:is_random_loop_mode",
      "func:is_random_mode",
      "func:is_single_loop_mode",
      "func:list",
      "func:mode",
      "func:new_player_list",
      "func:next",
      "func:next_idx",
      "func:notify_copyright_issue",
      "func:notify_playing",
      "func:on_exit",
      "func:order",
      "func:play_or_pause",
      "func:playing_id",
      "func:playing_name",
      "func:prev",
      "func:prev_idx",
      "func:refresh_urls",
      "func:replay",
      "func:run_mpg123",
      "func:shuffle",
      "func:shuffle_order",
      "func:songs",
      "func:start_playing",
      "func:stop",
      "func:switch",
      "func:tune_volume",
      "func:update_size",
      "func:volume_down",
      "func:volume_up",
      "func:write_path"
    ],
    "old_files": [
      "player.py_deepseek_504483b4.py"
    ],
    "new_files": [
      "player_035866.py"
    ]
  },
  {
    "file_signature": [
      "class:Config",
      "class:EggBox",
      "class:X",
      "func:__init__",
      "func:__str__",
      "func:foo",
      "func:foo1",
      "func:foo2",
      "func:foo3",
      "func:foo4",
      "func:foo_bar",
      "func:func",
      "func:test_args",
      "func:test_args_name",
      "func:test_async",
      "func:test_class_method",
      "func:test_config_arbitrary_types_allowed",
      "func:test_config_fields",
      "func:test_config_title",
      "func:test_config_title_cls",
      "func:test_field_can_provide_factory",
      "func:test_item_method",
      "func:test_kwargs",
      "func:test_populate_by_name",
      "func:test_positional_only",
      "func:test_string_annotation",
      "func:test_untyped",
      "func:test_use_of_alias",
      "func:test_v_args",
      "func:test_validate",
      "func:test_var_args_kwargs",
      "func:test_wrap",
      "func:validate_arguments"
    ],
    "old_files": [
      "test_deprecated_validate_arguments.py_deepseek_fe17300b.py"
    ],
    "new_files": [
      "test_deprecated_validate_arguments_bca830.py"
    ]
  },
  {
    "file_signature": [
      "class:Train",
      "class:TrainModel",
      "func:__init__",
      "func:_train_worker",
      "func:add_subparser",
      "func:finish",
      "func:from_partial_objects",
      "func:run",
      "func:train_model",
      "func:train_model_from_args",
      "func:train_model_from_file"
    ],
    "old_files": [
      "train.py_deepseek_bd12c8b9.py"
    ],
    "new_files": [
      "train_17392c.py"
    ]
  },
  {
    "file_signature": [
      "class:PlexServer",
      "func:__init__",
      "func:_connect_with_token",
      "func:_connect_with_url",
      "func:_fetch_platform_data",
      "func:_update_plexdirect_hostname",
      "func:account",
      "func:accounts",
      "func:async_refresh_entity",
      "func:connect",
      "func:connect_new_clients",
      "func:connect_to_client",
      "func:connect_to_resource",
      "func:create_playqueue",
      "func:create_station_playqueue",
      "func:fetch_item",
      "func:friendly_name",
      "func:get_playqueue",
      "func:has_token",
      "func:library",
      "func:lookup_media",
      "func:machine_identifier",
      "func:option_ignore_new_shared_users",
      "func:option_ignore_plexweb_clients",
      "func:option_monitored_users",
      "func:option_use_episode_art",
      "func:owner",
      "func:playlist",
      "func:playlists",
      "func:plex_server",
      "func:plextv_clients",
      "func:process_device",
      "func:process_sessions",
      "func:sensor_attributes",
      "func:set_plex_server",
      "func:switch_user",
      "func:sync_tasks",
      "func:update_with_new_media",
      "func:url_in_use",
      "func:version"
    ],
    "old_files": [
      "server.py_deepseek_36e5eabf.py"
    ],
    "new_files": [
      "server_80c298.py"
    ]
  },
  {
    "file_signature": [
      "class:AttentionLayer",
      "class:TransformerLayer",
      "class:TransformerLayerOutput",
      "func:__init__",
      "func:_from_config",
      "func:forward",
      "func:get_output_dim"
    ],
    "old_files": [
      "transformer_layer.py_deepseek_238a1cf9.py"
    ],
    "new_files": [
      "transformer_layer_bf9c8e.py"
    ]
  },
  {
    "file_signature": [
      "class:MultiTaskDataLoader",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_get_instances_for_epoch",
      "func:_make_data_loader",
      "func:index_with",
      "func:iter_instances",
      "func:maybe_shuffle_instances",
      "func:set_target_device"
    ],
    "old_files": [
      "multitask_data_loader.py_deepseek_52d22210.py"
    ],
    "new_files": [
      "multitask_data_loader_4fc11f.py"
    ]
  },
  {
    "file_signature": [
      "class:FormattedError",
      "class:State",
      "class:TemplateParserError",
      "class:Token",
      "class:TokenizationError",
      "class:TokenizerState",
      "func:__init__",
      "func:__str__",
      "func:advance",
      "func:ensure_matching_indentation",
      "func:f",
      "func:get_code",
      "func:get_django_comment",
      "func:get_django_tag",
      "func:get_handlebars_comment",
      "func:get_handlebars_partial",
      "func:get_handlebars_tag",
      "func:get_html_comment",
      "func:get_html_tag",
      "func:get_spaces",
      "func:get_template_var",
      "func:get_text",
      "func:has_bad_indentation",
      "func:is_django_block_tag",
      "func:looking_at",
      "func:looking_at_django_else",
      "func:looking_at_django_end",
      "func:looking_at_django_start",
      "func:looking_at_djangocomment",
      "func:looking_at_handlebars_comment",
      "func:looking_at_handlebars_else",
      "func:looking_at_handlebars_end",
      "func:looking_at_handlebars_partial",
      "func:looking_at_handlebars_partial_block",
      "func:looking_at_handlebars_start",
      "func:looking_at_html_end",
      "func:looking_at_html_start",
      "func:looking_at_htmlcomment",
      "func:looking_at_jinja2_end_whitespace_stripped",
      "func:looking_at_jinja2_start_whitespace_stripped_type2",
      "func:looking_at_template_var",
      "func:looking_at_whitespace",
      "func:no_start_tag",
      "func:prevent_extra_newlines",
      "func:prevent_whitespace_violations",
      "func:report_problem",
      "func:start_tag_matcher",
      "func:tag_flavor",
      "func:tokenize",
      "func:validate"
    ],
    "old_files": [
      "template_parser.py_deepseek_d1d92522.py"
    ],
    "new_files": [
      "template_parser_ecf506.py"
    ]
  },
  {
    "file_signature": [
      "class:HomeAccessory",
      "class:HomeBridge",
      "class:HomeDriver",
      "class:HomeIIDManager",
      "func:__init__",
      "func:_update_available_from_state",
      "func:async_call_service",
      "func:async_reload",
      "func:async_stop",
      "func:async_update_battery",
      "func:async_update_event_state_callback",
      "func:async_update_linked_battery_callback",
      "func:async_update_linked_battery_charging_callback",
      "func:async_update_state",
      "func:async_update_state_callback",
      "func:available",
      "func:get_accessory",
      "func:get_iid_for_obj",
      "func:pair",
      "func:run",
      "func:setup_message",
      "func:unpair"
    ],
    "old_files": [
      "accessories.py_deepseek_99a8bc17.py"
    ],
    "new_files": [
      "accessories_b90bda.py"
    ]
  },
  {
    "file_signature": [
      "class:Topic",
      "class:_App",
      "func:__aiter__",
      "func:__init__",
      "func:__str__",
      "func:_clone_args",
      "func:_compile_decode",
      "func:_on_published",
      "func:_topic_name_or_default",
      "func:derive",
      "func:derive_topic",
      "func:get_topic_name",
      "func:partitions",
      "func:pattern",
      "func:send_soon"
    ],
    "old_files": [
      "topics.py_deepseek_fe9d0a1d.py"
    ],
    "new_files": [
      "topics_3a0e29.py"
    ]
  },
  {
    "file_signature": [
      "class:AccessListPayloadDecoder",
      "class:AccessListTransaction",
      "class:AccountAccesses",
      "class:BerlinLegacyTransaction",
      "class:BerlinTransactionBuilder",
      "class:BerlinUnsignedLegacyTransaction",
      "class:TypedTransaction",
      "class:UnsignedAccessListTransaction",
      "func:__eq__",
      "func:__hash__",
      "func:__init__",
      "func:_calculate_txn_intrinsic_gas_berlin",
      "func:_type_byte",
      "func:access_list",
      "func:as_signed_transaction",
      "func:blob_versioned_hashes",
      "func:chain_id",
      "func:check_signature_validity",
      "func:copy",
      "func:create_unsigned_transaction",
      "func:data",
      "func:decode",
      "func:deserialize",
      "func:encode",
      "func:gas",
      "func:gas_price",
      "func:gas_used_by",
      "func:get_intrinsic_gas",
      "func:get_message_for_signing",
      "func:get_payload_codec",
      "func:get_sender",
      "func:hash",
      "func:intrinsic_gas",
      "func:make_receipt",
      "func:max_fee_per_blob_gas",
      "func:max_fee_per_gas",
      "func:max_priority_fee_per_gas",
      "func:new_access_list_transaction",
      "func:new_transaction",
      "func:new_unsigned_access_list_transaction",
      "func:nonce",
      "func:r",
      "func:s",
      "func:serialize",
      "func:to",
      "func:validate",
      "func:value",
      "func:y_parity"
    ],
    "old_files": [
      "transactions.py_deepseek_e917af4b.py"
    ],
    "new_files": [
      "transactions_635878.py"
    ]
  },
  {
    "file_signature": [
      "func:all_setup_requests",
      "func:disable_security_filter",
      "func:hassio_client",
      "func:hassio_env",
      "func:hassio_handler",
      "func:hassio_noauth_client",
      "func:hassio_stubs",
      "func:mock_addon_info"
    ],
    "old_files": [
      "conftest.py_deepseek_a2345090.py"
    ],
    "new_files": [
      "conftest_3e1e08.py"
    ]
  },
  {
    "file_signature": [
      "class:BillingError",
      "class:BillingSession",
      "class:BillingSessionAuditLogEventError",
      "class:BillingSessionEventType",
      "class:EventStatusRequest",
      "class:InitialUpgradeRequest",
      "class:InvalidBillingScheduleError",
      "class:InvalidPlanUpgradeError",
      "class:InvalidTierError",
      "class:LicenseLimitError",
      "class:PlanTierChangeType",
      "class:PriceArgs",
      "class:ServerDeactivateWithExistingPlanError",
      "class:SponsorshipApplicantInfo",
      "class:SponsorshipRequestForm",
      "class:SponsorshipRequestSessionSpecificContext",
      "class:StripeCardError",
      "class:StripeConnectionError",
      "class:StripeCustomerData",
      "class:SupportRequestError",
      "class:SupportType",
      "class:SupportViewRequest",
      "class:UpdatePlanRequest",
      "class:UpgradePageContext",
      "class:UpgradePageParams",
      "class:UpgradePageSessionTypeSpecificContext",
      "class:UpgradeRequest",
      "class:UpgradeWithExistingPlanError",
      "func:__init__",
      "func:add_months",
      "func:add_org_type_data_to_sponsorship_context",
      "func:approve_sponsorship",
      "func:billing_base_url",
      "func:billing_entity_display_name",
      "func:billing_session_url",
      "func:build_support_url",
      "func:catch_stripe_errors",
      "func:cents_to_dollar_string",
      "func:check_plan_tier_is_billable",
      "func:check_upgrade_parameters",
      "func:current_count_for_billed_licenses",
      "func:customer_plan_exists",
      "func:do_change_plan_type",
      "func:format_discount_percentage",
      "func:format_money",
      "func:generate_invoice_for_upgrade",
      "func:get_amount_due_fixed_price_plan",
      "func:get_amount_to_credit_for_plan_tier_change",
      "func:get_audit_log_event",
      "func:get_cached_seat_count",
      "func:get_complimentary_access_next_plan",
      "func:get_complimentary_access_plan",
      "func:get_configured_fixed_price_plan_offer",
      "func:get_customer",
      "func:get_data_for_stripe_customer",
      "func:get_email",
      "func:get_formatted_complimentary_access_plan_end_date",
      "func:get_guest_user_count",
      "func:get_idempotency_key",
      "func:get_latest_seat_count",
      "func:get_metadata_for_stripe_update_card",
      "func:get_non_guest_user_count",
      "func:get_past_invoices_session_url",
      "func:get_seat_count",
      "func:get_sponsorship_request_session_specific_context",
      "func:get_stripe_customer_portal_url",
      "func:get_type_of_plan_tier_change",
      "func:get_upgrade_page_session_type_specific_context",
      "func:has_billing_access",
      "func:is_sponsored",
      "func:is_sponsored_or_pending",
      "func:next_invoice_date",
      "func:next_month",
      "func:on_paid_plan",
      "func:org_name",
      "func:payment_method_string",
      "func:process_downgrade",
      "func:save_org_type_from_request_sponsorship_session",
      "func:sign_string",
      "func:sponsorship_org_type_key_helper",
      "func:start_of_next_billing_cycle",
      "func:stripe_get_customer",
      "func:support_url",
      "func:sync_license_ledger_if_needed",
      "func:unsign_seat_count",
      "func:unsign_string",
      "func:update_data_for_checkout_session_and_invoice_payment",
      "func:update_or_create_customer",
      "func:validate_licenses",
      "func:wrapped",
      "func:write_to_audit_log"
    ],
    "old_files": [
      "stripe.py_deepseek_68c08fad.py"
    ],
    "new_files": [
      "stripe_8fa3cb.py"
    ]
  },
  {
    "file_signature": [
      "func:_patched_path_is_dir",
      "func:_patched_path_is_file",
      "func:_patched_path_read_text",
      "func:remove_restore_result_file",
      "func:restore_result_file_content",
      "func:test_aborting_for_older_versions",
      "func:test_extracting_the_contents_of_a_backup_file",
      "func:test_pw_to_key",
      "func:test_pw_to_key_none",
      "func:test_reading_the_instruction_contents",
      "func:test_removal_of_current_configuration_when_restoring",
      "func:test_remove_backup_file_after_restore",
      "func:test_restoring_backup_that_does_not_exist",
      "func:test_restoring_backup_that_is_not_a_file",
      "func:test_restoring_backup_when_instructions_can_not_be_read"
    ],
    "old_files": [
      "test_backup_restore.py_deepseek_873b7064.py"
    ],
    "new_files": [
      "test_backup_restore_171613.py"
    ]
  },
  {
    "file_signature": [
      "class:TestImportExport",
      "func:_create_dashboard_for_import",
      "func:assert_dash_equals",
      "func:assert_datasource_equals",
      "func:assert_only_exported_slc_fields",
      "func:assert_slice_equals",
      "func:assert_table_equals",
      "func:clean_imports",
      "func:create_dashboard",
      "func:create_slice",
      "func:create_table",
      "func:delete_imports",
      "func:get_dash",
      "func:get_slice",
      "func:get_slice_by_name",
      "func:test_export_1_dashboard",
      "func:test_export_2_dashboards",
      "func:test_import_1_slice",
      "func:test_import_2_slices_for_same_table",
      "func:test_import_dashboard_1_slice",
      "func:test_import_dashboard_2_slices",
      "func:test_import_empty_dashboard",
      "func:test_import_new_dashboard_slice_reset_ownership",
      "func:test_import_override_dashboard_2_slices",
      "func:test_import_override_dashboard_slice_reset_ownership",
      "func:test_import_slices_override",
      "func:test_import_table_1_col_1_met",
      "func:test_import_table_2_col_2_met",
      "func:test_import_table_no_metadata",
      "func:test_import_table_override",
      "func:test_import_table_override_identical"
    ],
    "old_files": [
      "import_export_tests.py_deepseek_faca9124.py"
    ],
    "new_files": [
      "import_export_tests_dc500f.py"
    ]
  },
  {
    "file_signature": [
      "class:Apply",
      "class:FrameApply",
      "class:NDFrameApply",
      "func:__init__",
      "func:_apply_str",
      "func:agg",
      "func:agg_axis",
      "func:agg_dict_like",
      "func:agg_list_like",
      "func:agg_or_apply_dict_like",
      "func:agg_or_apply_list_like",
      "func:apply",
      "func:apply_broadcast",
      "func:apply_empty_result",
      "func:apply_list_or_dict_like",
      "func:apply_raw",
      "func:apply_series_generator",
      "func:apply_standard",
      "func:apply_str",
      "func:apply_with_numba",
      "func:columns",
      "func:compute_dict_like",
      "func:compute_list_like",
      "func:frame_apply",
      "func:generate_numba_apply_func",
      "func:index",
      "func:normalize_dictlike_arg",
      "func:res_columns",
      "func:result_columns",
      "func:result_index",
      "func:series_generator",
      "func:transform",
      "func:transform_dict_like",
      "func:transform_str_or_callable",
      "func:validate_values_for_numba",
      "func:values",
      "func:wrap_function",
      "func:wrap_results_dict_like",
      "func:wrap_results_for_axis",
      "func:wrap_results_list_like",
      "func:wrapper"
    ],
    "old_files": [
      "apply.py_deepseek_2c756d18.py"
    ],
    "new_files": [
      "apply_575d8e.py"
    ]
  },
  {
    "file_signature": [
      "class:LyricClimate",
      "class:LyricThermostatType",
      "func:__init__",
      "func:current_temperature",
      "func:fan_mode",
      "func:hvac_action",
      "func:hvac_mode",
      "func:max_temp",
      "func:min_temp",
      "func:preset_mode",
      "func:target_temperature",
      "func:target_temperature_high",
      "func:target_temperature_low"
    ],
    "old_files": [
      "climate.py_deepseek_ccd2ec23.py"
    ],
    "new_files": [
      "climate_e3517e.py"
    ]
  },
  {
    "file_signature": [
      "class:TestSerializeTraces",
      "class:TestTypeConversion",
      "func:dummy_func",
      "func:test_convert_non_type",
      "func:test_log_failure_and_continue",
      "func:test_maybe_decode_type",
      "func:test_maybe_encode_type",
      "func:test_trace_round_trip",
      "func:test_type_from_dict",
      "func:test_type_from_dict_nested",
      "func:test_type_from_json",
      "func:test_type_round_trip",
      "func:test_type_round_trip_typed_dict",
      "func:test_type_to_dict",
      "func:test_type_to_json"
    ],
    "old_files": [
      "test_encoding.py_deepseek_de4987e5.py"
    ],
    "new_files": [
      "test_encoding_e05f99.py"
    ]
  },
  {
    "file_signature": [
      "class:Dummy",
      "class:Inner",
      "class:Outer",
      "func:a_cached_property",
      "func:a_class_method",
      "func:a_property",
      "func:a_settable_property",
      "func:a_static_method",
      "func:an_instance_method",
      "func:f",
      "func:has_complex_signature",
      "func:smartcov_paths_hook",
      "func:transform_path"
    ],
    "old_files": [
      "util.py_deepseek_32addba5.py"
    ],
    "new_files": [
      "util_d92a2e.py"
    ]
  },
  {
    "file_signature": [
      "class:ImportCollector",
      "func:__init__",
      "func:_add_reference",
      "func:_check_circular_deps",
      "func:_compute_integration_dependencies",
      "func:_validate_circular_dependencies",
      "func:_validate_dependencies",
      "func:_validate_dependency_imports",
      "func:calc_allowed_references",
      "func:collect",
      "func:find_non_referenced_integrations",
      "func:validate",
      "func:visit_Attribute",
      "func:visit_If",
      "func:visit_Import",
      "func:visit_ImportFrom"
    ],
    "old_files": [
      "dependencies.py_deepseek_90aacf7b.py"
    ],
    "new_files": [
      "dependencies_8f19df.py"
    ]
  },
  {
    "file_signature": [
      "class:Pool",
      "class:ThreadException",
      "class:ThreadProxy",
      "class:ThreadResponse",
      "func:__getattr__",
      "func:__init__",
      "func:_identity",
      "func:_new_session",
      "func:exceptions",
      "func:from_exceptions",
      "func:from_urls",
      "func:get_exception",
      "func:get_response",
      "func:join_all",
      "func:responses"
    ],
    "old_files": [
      "pool.py_deepseek_3b7661e7.py"
    ],
    "new_files": [
      "pool_9fd38f.py"
    ]
  },
  {
    "file_signature": [
      "class:Hyperliquid",
      "func:_adjust_hyperliquid_order",
      "func:_ccxt_config",
      "func:_lev_prep",
      "func:dry_run_liquidation_price",
      "func:fetch_order",
      "func:fetch_orders",
      "func:get_funding_fees",
      "func:get_max_leverage"
    ],
    "old_files": [
      "hyperliquid.py_deepseek_bd07fd5a.py"
    ],
    "new_files": [
      "hyperliquid_da9881.py"
    ]
  },
  {
    "file_signature": [
      "class:GMatrixClient",
      "class:GMatrixHttpApi",
      "class:ReceivedCallMessage",
      "class:ReceivedRaidenMessage",
      "class:_ReceivedMessageBase",
      "func:__init__",
      "func:__repr__",
      "func:_handle_message",
      "func:_handle_responses",
      "func:_record_server_ident",
      "func:_send",
      "func:_sync",
      "func:blocking_sync",
      "func:create_room",
      "func:create_sync_filter",
      "func:disable_push_notifications",
      "func:get_aliases",
      "func:get_presence",
      "func:get_room_state_type",
      "func:get_user_presence",
      "func:listen_forever",
      "func:logout",
      "func:node_address_from_userid",
      "func:processed",
      "func:search_user_directory",
      "func:set_access_token",
      "func:set_presence_state",
      "func:set_sync_filter_id",
      "func:start_listener_thread",
      "func:stop",
      "func:stop_listener_thread",
      "func:sync_iteration",
      "func:synced",
      "func:user__repr__"
    ],
    "old_files": [
      "client.py_deepseek_f3bd83fd.py"
    ],
    "new_files": [
      "client_714ccb.py"
    ]
  },
  {
    "file_signature": [
      "class:DatadogMonitor",
      "class:DatadogStatsClient",
      "class:DogStatsD",
      "func:__init__",
      "func:_encode_labels",
      "func:_format_label",
      "func:_format_stream_label",
      "func:_format_table_label",
      "func:_format_tp_label",
      "func:_new_datadog_stats_client",
      "func:_stream_label",
      "func:client",
      "func:count",
      "func:decr",
      "func:decrement",
      "func:gauge",
      "func:histogram",
      "func:incr",
      "func:increment",
      "func:on_assignment_completed",
      "func:on_assignment_error",
      "func:on_commit_completed",
      "func:on_message_in",
      "func:on_message_out",
      "func:on_rebalance_end",
      "func:on_rebalance_return",
      "func:on_rebalance_start",
      "func:on_send_completed",
      "func:on_send_error",
      "func:on_send_initiated",
      "func:on_stream_event_in",
      "func:on_stream_event_out",
      "func:on_table_del",
      "func:on_table_get",
      "func:on_table_set",
      "func:on_tp_commit",
      "func:on_web_request_end",
      "func:sanitize",
      "func:timed",
      "func:timing",
      "func:track_tp_end_offset"
    ],
    "old_files": [
      "datadog.py_deepseek_f9a76ff1.py"
    ],
    "new_files": [
      "datadog_c5ba7b.py"
    ]
  },
  {
    "file_signature": [
      "class:Agent",
      "class:AgentTestWrapper",
      "class:_App",
      "func:__aiter__",
      "func:__call__",
      "func:__init__",
      "func:_agent_label",
      "func:_create_req",
      "func:_get_active_partitions",
      "func:_get_strtopic",
      "func:_get_supervisor_strategy",
      "func:_maybe_unwrap_reply_request",
      "func:_new_supervisor",
      "func:_on_first_isolated_partition_assigned",
      "func:_prepare_channel",
      "func:_repr_info",
      "func:_request_class",
      "func:_response_class",
      "func:actor_from_stream",
      "func:actor_tracebacks",
      "func:add_sink",
      "func:cancel",
      "func:channel",
      "func:channel_iterator",
      "func:clone",
      "func:current_agent",
      "func:get_topic_names",
      "func:info",
      "func:label",
      "func:on_init_dependencies",
      "func:shortlabel",
      "func:stream",
      "func:test_context",
      "func:to_message"
    ],
    "old_files": [
      "agent.py_deepseek_deba533c.py"
    ],
    "new_files": [
      "agent_c9999e.py"
    ]
  },
  {
    "file_signature": [
      "class:CanaryCamera",
      "func:__init__",
      "func:is_recording",
      "func:location",
      "func:motion_detection_enabled",
      "func:renew_live_stream_session"
    ],
    "old_files": [
      "camera.py_deepseek_5a120736.py"
    ],
    "new_files": [
      "camera_4dd787.py"
    ]
  },
  {
    "file_signature": [
      "func:decorator",
      "func:etag_cache",
      "func:generate_cache_key",
      "func:memoized_func",
      "func:set_and_log_cache",
      "func:wrap",
      "func:wrapped_f",
      "func:wrapper"
    ],
    "old_files": [
      "cache.py_deepseek_be14b11e.py"
    ],
    "new_files": [
      "cache_053dd3.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_later_major_version",
      "func:_touch_file",
      "func:test_adjust_first_step_masking",
      "func:test_average_tensors",
      "func:test_check_condition_false",
      "func:test_check_condition_true",
      "func:test_check_version_checks_major",
      "func:test_check_version_disregards_minor",
      "func:test_chunks",
      "func:test_combine_means",
      "func:test_combine_stds",
      "func:test_count_seq_len",
      "func:test_fault_tolerant_symlink",
      "func:test_get_tokens",
      "func:test_is_gzip_file",
      "func:test_metric_value_is_better",
      "func:test_online_mean_and_variance",
      "func:test_online_mean_and_variance_nan",
      "func:test_parse_metrics_line",
      "func:test_parse_version",
      "func:test_rerank_hypotheses_isometric",
      "func:test_smart_open_without_suffix",
      "func:test_update_dict_with_prefix_kv",
      "func:test_version_matches_changelog",
      "func:test_write_read_metric_file"
    ],
    "old_files": [
      "test_utils.py_deepseek_f3910096.py"
    ],
    "new_files": [
      "test_utils_4b4e4d.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseDataReader",
      "class:FileMetadata",
      "class:FileMetadataItem",
      "class:ReaderOptions",
      "class:UploadCommand",
      "class:UploadFileType",
      "func:__init__",
      "func:_dataframe_to_database",
      "func:file_metadata",
      "func:file_to_dataframe",
      "func:read",
      "func:run",
      "func:validate"
    ],
    "old_files": [
      "base.py_deepseek_e4c2f126.py"
    ],
    "new_files": [
      "base_d18b00.py"
    ]
  },
  {
    "file_signature": [
      "func:change_user_is_active",
      "func:do_change_can_change_user_emails",
      "func:do_change_can_create_users",
      "func:do_change_can_forge_sender",
      "func:do_change_is_billing_admin",
      "func:do_change_user_role",
      "func:do_deactivate_user",
      "func:do_delete_user",
      "func:do_delete_user_preserving_messages",
      "func:do_send_password_reset_email",
      "func:do_update_bot_config_data",
      "func:do_update_outgoing_webhook_service",
      "func:generate_password_reset_url",
      "func:get_owned_bot_dicts",
      "func:get_service_dicts_for_bot",
      "func:get_service_dicts_for_bots",
      "func:send_events_for_user_deactivation",
      "func:send_group_update_event_for_anonymous_group_setting",
      "func:send_realm_update_event_for_anonymous_group_setting",
      "func:send_stream_events_for_role_update",
      "func:send_update_events_for_anonymous_group_settings"
    ],
    "old_files": [
      "users.py_deepseek_2376ea08.py"
    ],
    "new_files": [
      "users_e38fbd.py"
    ]
  },
  {
    "file_signature": [
      "class:Reporter",
      "func:__init__",
      "func:_makeDefaultReporter",
      "func:flake",
      "func:syntaxError",
      "func:unexpectedError"
    ],
    "old_files": [
      "reporter.py_deepseek_bfbe984b.py"
    ],
    "new_files": [
      "reporter_7fc9be.py"
    ]
  },
  {
    "file_signature": [
      "class:AutomowerNumberEntity",
      "class:AutomowerNumberEntityDescription",
      "class:WorkAreaNumberEntity",
      "class:WorkAreaNumberEntityDescription",
      "func:__init__",
      "func:_async_add_new_devices",
      "func:_async_add_new_work_areas",
      "func:_async_get_cutting_height",
      "func:native_value",
      "func:translation_key"
    ],
    "old_files": [
      "number.py_deepseek_6c29ede1.py"
    ],
    "new_files": [
      "number_537226.py"
    ]
  },
  {
    "file_signature": [
      "class:DataProvider",
      "func:__init__",
      "func:_add_external_df",
      "func:_emit_df",
      "func:_replace_external_df",
      "func:_set_cached_df",
      "func:_set_dataframe_max_date",
      "func:_set_dataframe_max_index",
      "func:_set_producer_pairs",
      "func:add_pairlisthandler",
      "func:available_pairs",
      "func:clear_cache",
      "func:current_whitelist",
      "func:get_analyzed_dataframe",
      "func:get_pair_dataframe",
      "func:get_producer_df",
      "func:get_producer_pairs",
      "func:get_required_startup",
      "func:historic_ohlcv",
      "func:market",
      "func:ohlcv",
      "func:orderbook",
      "func:refresh",
      "func:refresh_latest_trades",
      "func:runmode",
      "func:send_msg",
      "func:ticker",
      "func:trades"
    ],
    "old_files": [
      "dataprovider.py_deepseek_db0d12a8.py"
    ],
    "new_files": [
      "dataprovider_a0d211.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseDeployStep",
      "class:BuildStage",
      "class:ChaliceDeploymentError",
      "class:Deployer",
      "class:DeploymentPackager",
      "class:DeploymentReporter",
      "class:InjectDefaults",
      "class:LambdaEventSourcePolicyInjector",
      "class:ManagedLayerDeploymentPackager",
      "class:NoopResultsRecorder",
      "class:PolicyGenerator",
      "class:ResultsRecorder",
      "class:SwaggerBuilder",
      "class:WebsocketPolicyInjector",
      "func:__init__",
      "func:_create_deployer",
      "func:_default_report",
      "func:_deploy",
      "func:_get_error_location",
      "func:_get_error_message",
      "func:_get_error_message_for_connection_error",
      "func:_get_error_suggestion",
      "func:_get_mb",
      "func:_get_verb_from_client_method",
      "func:_inject_into_function",
      "func:_inject_policy",
      "func:_inject_trigger_policy",
      "func:_needs_policy_injected",
      "func:_read_document_from_file",
      "func:_report_domain_name",
      "func:_report_lambda_function",
      "func:_report_lambda_layer",
      "func:_report_rest_api",
      "func:_report_websocket_api",
      "func:_validate_config",
      "func:_wrap_text",
      "func:create_build_stage",
      "func:create_default_deployer",
      "func:create_deletion_deployer",
      "func:create_plan_only_deployer",
      "func:deploy",
      "func:display_report",
      "func:execute",
      "func:generate_report",
      "func:handle",
      "func:handle_autogeniampolicy",
      "func:handle_deploymentpackage",
      "func:handle_domainname",
      "func:handle_dynamodbeventsource",
      "func:handle_filebasediampolicy",
      "func:handle_kinesiseventsource",
      "func:handle_lambdafunction",
      "func:handle_lambdalayer",
      "func:handle_restapi",
      "func:handle_sqseventsource",
      "func:handle_websocketapi",
      "func:record_results"
    ],
    "old_files": [
      "deployer.py_deepseek_4d988565.py"
    ],
    "new_files": [
      "deployer_c2beb1.py"
    ]
  },
  {
    "file_signature": [
      "class:NetworkManager",
      "class:Request",
      "class:Response",
      "class:SecurityDetails",
      "func:__init__",
      "func:_bodyLoadedPromiseFulfill",
      "func:_handleRequestRedirect",
      "func:_handleRequestStart",
      "func:_onLoadingFailed",
      "func:_onLoadingFinished",
      "func:_onRequest",
      "func:_onRequestIntercepted",
      "func:_onRequestServedFromCache",
      "func:_onResponseReceived",
      "func:buffer",
      "func:extraHTTPHeaders",
      "func:failure",
      "func:frame",
      "func:fromCache",
      "func:fromServiceWorker",
      "func:generateRequestHash",
      "func:headers",
      "func:isNavigationRequest",
      "func:issuer",
      "func:method",
      "func:ok",
      "func:postData",
      "func:protocol",
      "func:redirectChain",
      "func:request",
      "func:resourceType",
      "func:response",
      "func:securityDetails",
      "func:status",
      "func:subjectName",
      "func:url",
      "func:validFrom",
      "func:validTo"
    ],
    "old_files": [
      "network_manager.py_deepseek_eaf8ec93.py"
    ],
    "new_files": [
      "network_manager_8c67f5.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseMaskedArray",
      "func:T",
      "func:__abs__",
      "func:__array__",
      "func:__array_ufunc__",
      "func:__arrow_array__",
      "func:__contains__",
      "func:__getitem__",
      "func:__init__",
      "func:__invert__",
      "func:__iter__",
      "func:__len__",
      "func:__neg__",
      "func:__pos__",
      "func:__setitem__",
      "func:_arith_method",
      "func:_cmp_method",
      "func:_coerce_to_array",
      "func:_concat_same_type",
      "func:_empty",
      "func:_formatter",
      "func:_from_sequence",
      "func:_hash_pandas_object",
      "func:_hasna",
      "func:_maybe_mask_result",
      "func:_na_value",
      "func:_pad_or_backfill",
      "func:_propagate_mask",
      "func:_simple_new",
      "func:_validate_setitem_value",
      "func:_values_for_json",
      "func:astype",
      "func:delete",
      "func:dtype",
      "func:fillna",
      "func:isin",
      "func:isna",
      "func:nbytes",
      "func:ndim",
      "func:ravel",
      "func:reconstruct",
      "func:reshape",
      "func:round",
      "func:shape",
      "func:swapaxes",
      "func:take",
      "func:to_numpy",
      "func:tolist"
    ],
    "old_files": [
      "masked.py_deepseek_aa74e7e3.py"
    ],
    "new_files": [
      "masked_cd87cc.py"
    ]
  },
  {
    "file_signature": [
      "class:Stream",
      "class:_LinkedListDirection",
      "func:__aiter__",
      "func:__and__",
      "func:__copy__",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:_chain",
      "func:_channel_stop_iteration",
      "func:_enable_passive",
      "func:_human_channel",
      "func:_iter_ll",
      "func:_iter_ll_backwards",
      "func:_iter_ll_forwards",
      "func:_join",
      "func:_repr_channel",
      "func:_repr_info",
      "func:_set_current_event",
      "func:add_processor",
      "func:clone",
      "func:combine",
      "func:contribute_to_stream",
      "func:current_event",
      "func:derive_topic",
      "func:echo",
      "func:enumerate",
      "func:filter",
      "func:get_active_stream",
      "func:get_root_stream",
      "func:group_by",
      "func:info",
      "func:inner_join",
      "func:join",
      "func:label",
      "func:left_join",
      "func:noack",
      "func:outer_join",
      "func:shortlabel",
      "func:through"
    ],
    "old_files": [
      "streams.py_deepseek_eb6777f4.py"
    ],
    "new_files": [
      "streams_3625c4.py"
    ]
  },
  {
    "file_signature": [
      "class:TestCategoricalAPI",
      "class:TestCategoricalAPIWithFactor",
      "class:TestPrivateCategoricalAPI",
      "func:test_add_categories",
      "func:test_add_categories_existing_raises",
      "func:test_add_categories_losing_dtype_information",
      "func:test_codes_immutable",
      "func:test_describe",
      "func:test_ordered_api",
      "func:test_recode_to_categories",
      "func:test_recode_to_categories_large",
      "func:test_remove_categories",
      "func:test_remove_categories_raises",
      "func:test_remove_unused_categories",
      "func:test_rename_categories",
      "func:test_rename_categories_dict",
      "func:test_rename_categories_series",
      "func:test_rename_categories_wrong_length_raises",
      "func:test_reorder_categories",
      "func:test_reorder_categories_raises",
      "func:test_set_categories",
      "func:test_set_categories_many",
      "func:test_set_categories_private",
      "func:test_set_categories_rename_less",
      "func:test_set_ordered"
    ],
    "old_files": [
      "test_api.py_deepseek_9fa83db7.py"
    ],
    "new_files": [
      "test_api_125d2c.py"
    ]
  },
  {
    "file_signature": [
      "class:QueryCacheManager",
      "func:__init__",
      "func:delete",
      "func:get",
      "func:has",
      "func:set",
      "func:set_query_result"
    ],
    "old_files": [
      "query_cache_manager.py_deepseek_92c9b95d.py"
    ],
    "new_files": [
      "query_cache_manager_f69be4.py"
    ]
  },
  {
    "file_signature": [
      "class:Model",
      "class:ModelWithPreprocessing",
      "class:TransformBoundsWrapper",
      "func:__call__",
      "func:__init__",
      "func:_preprocess",
      "func:_process_preprocessing",
      "func:apply_axis",
      "func:bounds",
      "func:data_format",
      "func:dummy",
      "func:to_tensor",
      "func:transform_bounds"
    ],
    "old_files": [
      "base.py_deepseek_67e6ca5f.py"
    ],
    "new_files": [
      "base_41a673.py"
    ]
  },
  {
    "file_signature": [
      "class:MotionEyeEntity",
      "func:__init__",
      "func:available",
      "func:device_info",
      "func:get_motioneye_entity_unique_id",
      "func:unique_id"
    ],
    "old_files": [
      "entity.py_deepseek_5b068941.py"
    ],
    "new_files": [
      "entity_deba6b.py"
    ]
  },
  {
    "file_signature": [
      "class:FasterRcnnRegionDetector",
      "class:RandomRegionDetector",
      "class:RegionDetector",
      "class:RegionDetectorOutput",
      "func:__init__",
      "func:_postprocess_detections",
      "func:_seeded_random_tensor",
      "func:forward"
    ],
    "old_files": [
      "region_detector.py_deepseek_6c3cb449.py"
    ],
    "new_files": [
      "region_detector_fc1ccc.py"
    ]
  },
  {
    "file_signature": [
      "func:clamp",
      "func:count_between_floats",
      "func:float_clamper",
      "func:float_of",
      "func:float_permitted",
      "func:float_to_int",
      "func:int_to_float",
      "func:is_negative",
      "func:make_float_clamper",
      "func:next_down",
      "func:next_down_normal",
      "func:next_up",
      "func:next_up_normal",
      "func:reinterpret_bits",
      "func:sign_aware_lte"
    ],
    "old_files": [
      "floats.py_deepseek_ce2412a7.py"
    ],
    "new_files": [
      "floats_47251e.py"
    ]
  },
  {
    "file_signature": [
      "class:ConditionalRandomField",
      "func:__init__",
      "func:_input_likelihood",
      "func:_joint_likelihood",
      "func:allowed_transitions",
      "func:forward",
      "func:is_transition_allowed",
      "func:reset_parameters",
      "func:viterbi_tags"
    ],
    "old_files": [
      "conditional_random_field.py_deepseek_b0709573.py"
    ],
    "new_files": [
      "conditional_random_field_4f2ecd.py"
    ]
  },
  {
    "file_signature": [
      "class:DropDuplicates",
      "class:TestDropDuplicatesDatetimeIndex",
      "class:TestDropDuplicatesPeriodIndex",
      "class:TestDropDuplicatesTimedeltaIndex",
      "func:freq",
      "func:idx",
      "func:test_drop_duplicates",
      "func:test_drop_duplicates_metadata"
    ],
    "old_files": [
      "test_drop_duplicates.py_deepseek_eba4cfd2.py"
    ],
    "new_files": [
      "test_drop_duplicates_d918e0.py"
    ]
  },
  {
    "file_signature": [
      "class:LoggingDataset",
      "class:TestInvalidThreadRunner",
      "class:TestIsAsync",
      "class:TestMaxWorkers",
      "class:TestSuggestResumeScenario",
      "class:TestThreadRunnerRelease",
      "class:TestValidThreadRunner",
      "func:__init__",
      "func:_describe",
      "func:_load",
      "func:_release",
      "func:_save",
      "func:test_count_multiple_loads",
      "func:test_does_not_log_not_using_async",
      "func:test_dont_release_inputs_and_outputs",
      "func:test_init_with_negative_process_count",
      "func:test_memory_dataset_input",
      "func:test_node_returning_none",
      "func:test_release_at_earliest_opportunity",
      "func:test_release_transcoded",
      "func:test_specified_max_workers",
      "func:test_stricter_suggest_resume_scenario",
      "func:test_suggest_resume_scenario",
      "func:test_task_exception",
      "func:test_thread_run",
      "func:test_thread_run_with_patterns",
      "func:test_thread_run_with_plugin_manager"
    ],
    "old_files": [
      "test_thread_runner.py_deepseek_d2ca7599.py"
    ],
    "new_files": [
      "test_thread_runner_e54f5d.py"
    ]
  },
  {
    "file_signature": [
      "func:controller",
      "func:controller_water_use_summary",
      "func:mock_auth",
      "func:mock_config_entry",
      "func:mock_config_entry_legacy",
      "func:mock_legacy_pydrawise",
      "func:mock_pydrawise",
      "func:mock_setup_entry",
      "func:sensors",
      "func:user",
      "func:zones"
    ],
    "old_files": [
      "conftest.py_deepseek_d36a556c.py"
    ],
    "new_files": [
      "conftest_bc6db5.py"
    ]
  },
  {
    "file_signature": [
      "class:BadTranslatorInput",
      "class:CandidateScorer",
      "class:GreedySearch",
      "class:IndexedTranslation",
      "class:IndexedTranslatorInput",
      "class:NBestTranslations",
      "class:RestrictLexicon",
      "class:SearchResult",
      "class:SockeyeModel",
      "class:Translation",
      "class:Translator",
      "class:TranslatorInput",
      "class:TranslatorOutput",
      "class:Vocab",
      "class:lexicon",
      "class:utils",
      "class:vocab",
      "func:__call__",
      "func:__init__",
      "func:__len__",
      "func:__str__",
      "func:_bad_input",
      "func:_concat_nbest_translations",
      "func:_concat_translations",
      "func:_expand_nbest_translation",
      "func:_get_inference_input",
      "func:_reduce_nbest_translations",
      "func:_remove_target_prefix_tokens",
      "func:_translate_batch",
      "func:check_condition",
      "func:chunks",
      "func:empty_translation",
      "func:eop_id",
      "func:get_source_prefix_tokens",
      "func:get_target_prefix_factors",
      "func:get_target_prefix_tokens",
      "func:get_tokens",
      "func:grouper",
      "func:json",
      "func:make_input_from_dict",
      "func:make_input_from_factored_string",
      "func:make_input_from_json_string",
      "func:make_input_from_multiple_strings",
      "func:make_input_from_plain_string",
      "func:max_batch_size",
      "func:max_input_length",
      "func:num_factors",
      "func:num_source_factors",
      "func:num_source_prefix_tokens",
      "func:num_target_factors",
      "func:num_target_prefix_factors",
      "func:num_target_prefix_tokens",
      "func:reverse_vocab",
      "func:shift_prefix_factors",
      "func:translate",
      "func:unnormalize",
      "func:with_eos"
    ],
    "old_files": [
      "inference.py_deepseek_11291039.py"
    ],
    "new_files": [
      "inference_7e0d57.py"
    ]
  },
  {
    "file_signature": [
      "func:_create_installed_app",
      "func:_create_location",
      "func:_factory",
      "func:app_oauth_client_fixture",
      "func:app_settings_fixture",
      "func:config_entry_fixture",
      "func:config_file_fixture",
      "func:device_factory_fixture",
      "func:device_fixture",
      "func:event_factory_fixture",
      "func:event_request_factory_fixture",
      "func:installed_app_fixture",
      "func:installed_apps_fixture",
      "func:location_fixture",
      "func:locations_fixture",
      "func:scene_factory_fixture",
      "func:scene_fixture",
      "func:smartthings_mock_fixture",
      "func:subscription_factory_fixture"
    ],
    "old_files": [
      "conftest.py_deepseek_63dfd35f.py"
    ],
    "new_files": [
      "conftest_823740.py"
    ]
  },
  {
    "file_signature": [
      "class:EnvisalinkSensor",
      "func:__init__",
      "func:async_update_callback",
      "func:extra_state_attributes",
      "func:icon",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_deepseek_ec1ed581.py"
    ],
    "new_files": [
      "sensor_912d78.py"
    ]
  },
  {
    "file_signature": [
      "class:Application",
      "class:CleanupContext",
      "class:CleanupError",
      "func:__bool__",
      "func:__call__",
      "func:__delitem__",
      "func:__eq__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:_add_subapp",
      "func:_build_middlewares",
      "func:_check_frozen",
      "func:_prepare_middleware",
      "func:_reg_subapp_signals",
      "func:_set_loop",
      "func:add_domain",
      "func:add_routes",
      "func:add_subapp",
      "func:cleanup_ctx",
      "func:debug",
      "func:exceptions",
      "func:freeze",
      "func:frozen",
      "func:get",
      "func:middlewares",
      "func:on_cleanup",
      "func:on_response_prepare",
      "func:on_shutdown",
      "func:on_startup",
      "func:pre_freeze",
      "func:pre_frozen",
      "func:reg_handler",
      "func:router"
    ],
    "old_files": [
      "web_app.py_deepseek_64311f2a.py"
    ],
    "new_files": [
      "web_app_e61508.py"
    ]
  },
  {
    "file_signature": [
      "func:make_sure_its_651",
      "func:patch_RPCManager",
      "func:patch_with_fee",
      "func:refresh_latest_ohlcv_mock",
      "func:reset_open_orders",
      "func:test__safe_exit_amount",
      "func:test_adjust_entry_cancel",
      "func:test_adjust_entry_maintain_replace",
      "func:test_adjust_entry_replace_fail",
      "func:test_adjust_entry_replace_fail_create_order",
      "func:test_apply_fee_conditional",
      "func:test_apply_fee_conditional_multibuy",
      "func:test_bot_cleanup",
      "func:test_bot_cleanup_db_errors",
      "func:test_bot_loop_start_called_once",
      "func:test_cancel_all_open_orders",
      "func:test_check_and_call_adjust_trade_position",
      "func:test_check_available_stake_amount",
      "func:test_check_depth_of_market",
      "func:test_check_for_open_trades",
      "func:test_check_handle_cancelled_buy",
      "func:test_check_handle_cancelled_exit",
      "func:test_close_trade",
      "func:test_create_trade",
      "func:test_create_trade_minimal_amount",
      "func:test_create_trade_no_signal",
      "func:test_create_trade_no_stake_amount",
      "func:test_create_trades_multiple_trades",
      "func:test_create_trades_preopen",
      "func:test_disable_ignore_roi_if_entry_signal",
      "func:test_edge_called_in_process",
      "func:test_edge_overrides_stake_amount",
      "func:test_edge_overrides_stoploss",
      "func:test_enter_positions",
      "func:test_enter_positions_global_pairlock",
      "func:test_enter_positions_no_pairs_left",
      "func:test_execute_entry",
      "func:test_execute_entry_confirm_error",
      "func:test_execute_entry_fully_canceled_on_create",
      "func:test_execute_entry_min_leverage",
      "func:test_execute_trade_exit_custom_exit_price",
      "func:test_execute_trade_exit_down",
      "func:test_execute_trade_exit_insufficient_funds_error",
      "func:test_execute_trade_exit_market_order",
      "func:test_execute_trade_exit_up",
      "func:test_exit_positions",
      "func:test_exit_positions_exception",
      "func:test_exit_profit_only",
      "func:test_freqtradebot_state",
      "func:test_get_real_amount",
      "func:test_get_real_amount_fees_order",
      "func:test_get_real_amount_in_point",
      "func:test_get_real_amount_invalid_order",
      "func:test_get_real_amount_multi",
      "func:test_get_real_amount_no_trade",
      "func:test_get_real_amount_open_trade_usdt",
      "func:test_get_real_amount_quote",
      "func:test_get_real_amount_quote_dust",
      "func:test_get_real_amount_wrong_amount",
      "func:test_get_real_amount_wrong_amount_rounding",
      "func:test_get_trade_stake_amount",
      "func:test_get_valid_price",
      "func:test_handle_cancel_enter",
      "func:test_handle_cancel_enter_corder_empty",
      "func:test_handle_cancel_enter_exchanges",
      "func:test_handle_cancel_exit_cancel_exception",
      "func:test_handle_cancel_exit_limit",
      "func:test_handle_insufficient_funds",
      "func:test_handle_onexchange_order",
      "func:test_handle_onexchange_order_changed_amount",
      "func:test_handle_onexchange_order_exit",
      "func:test_handle_onexchange_order_fully_canceled_enter",
      "func:test_handle_overlapping_signals",
      "func:test_handle_protections",
      "func:test_handle_trade",
      "func:test_handle_trade_roi",
      "func:test_handle_trade_use_exit_signal",
      "func:test_ignore_roi_if_entry_signal",
      "func:test_load_strategy_no_keys",
      "func:test_locked_pairs",
      "func:test_manage_open_orders_buy_exception",
      "func:test_manage_open_orders_entry",
      "func:test_manage_open_orders_entry_usercustom",
      "func:test_manage_open_orders_exception",
      "func:test_manage_open_orders_exit",
      "func:test_manage_open_orders_exit_usercustom",
      "func:test_manage_open_orders_partial",
      "func:test_manage_open_orders_partial_except",
      "func:test_manage_open_orders_partial_fee",
      "func:test_order_book_depth_of_market",
      "func:test_order_book_entry_pricing1",
      "func:test_order_book_exit_pricing",
      "func:test_order_dict",
      "func:test_position_adjust",
      "func:test_position_adjust2",
      "func:test_position_adjust3",
      "func:test_process_calls_sendmsg",
      "func:test_process_exchange_failures",
      "func:test_process_informative_pairs_added",
      "func:test_process_open_trade_positions_exception",
      "func:test_process_operational_exception",
      "func:test_process_stopped",
      "func:test_process_trade_creation",
      "func:test_process_trade_handling",
      "func:test_process_trade_no_whitelist_pair",
      "func:test_reupdate_enter_order_fees",
      "func:test_sell_not_enough_balance",
      "func:test_startup_backpopulate_precision",
      "func:test_startup_state",
      "func:test_startup_trade_reinit",
      "func:test_startup_update_open_orders",
      "func:test_sync_wallet_dry_run",
      "func:test_total_open_trades_stakes",
      "func:test_trailing_stop_loss",
      "func:test_trailing_stop_loss_positive",
      "func:test_update_funding_fees",
      "func:test_update_funding_fees_error",
      "func:test_update_funding_fees_schedule",
      "func:test_update_trade_state",
      "func:test_update_trade_state_exception",
      "func:test_update_trade_state_orderexception",
      "func:test_update_trade_state_sell",
      "func:test_update_trade_state_withorderdict",
      "func:test_update_trades_without_assigned_fees"
    ],
    "old_files": [
      "test_freqtradebot.py_deepseek_2b80392e.py"
    ],
    "new_files": [
      "test_freqtradebot_64c23d.py"
    ]
  },
  {
    "file_signature": [
      "class:BytestringProvider",
      "class:HypothesisProvider",
      "class:PrimitiveProvider",
      "class:_BackendInfoMsg",
      "func:__init__",
      "func:_compute_draw_float_init_logic",
      "func:_draw_bits",
      "func:_draw_bounded_integer",
      "func:_draw_collection",
      "func:_draw_float",
      "func:_draw_float_init_logic",
      "func:_draw_unbounded_integer",
      "func:draw_boolean",
      "func:draw_bytes",
      "func:draw_float",
      "func:draw_integer",
      "func:draw_string",
      "func:observe_information_messages",
      "func:observe_test_case",
      "func:per_test_case_context_manager",
      "func:permitted",
      "func:realize",
      "func:span_end",
      "func:span_start"
    ],
    "old_files": [
      "providers.py_deepseek_fbaf2da5.py"
    ],
    "new_files": [
      "providers_fc28a2.py"
    ]
  },
  {
    "file_signature": [
      "func:_decorator",
      "func:_init",
      "func:column_duplicatable",
      "func:feature_duplicator",
      "func:p"
    ],
    "old_files": [
      "schema.py_deepseek_e3f1013e.py"
    ],
    "new_files": [
      "schema_ee7352.py"
    ]
  },
  {
    "file_signature": [
      "class:TestAsyncQueries",
      "func:test_load_chart_data_into_cache",
      "func:test_load_chart_data_into_cache_error",
      "func:test_load_explore_json_into_cache",
      "func:test_load_explore_json_into_cache_error",
      "func:test_soft_timeout_load_chart_data_into_cache",
      "func:test_soft_timeout_load_explore_json_into_cache"
    ],
    "old_files": [
      "async_queries_tests.py_deepseek_49fe6885.py"
    ],
    "new_files": [
      "async_queries_tests_ab1690.py"
    ]
  },
  {
    "file_signature": [
      "class:Outlet",
      "class:SelectSwitch",
      "class:Switch",
      "class:Vacuum",
      "class:Valve",
      "class:ValveBase",
      "class:ValveInfo",
      "class:ValveSwitch",
      "func:__init__",
      "func:async_update_state",
      "func:is_activate",
      "func:reset_switch",
      "func:select_option",
      "func:set_state"
    ],
    "old_files": [
      "type_switches.py_deepseek_04095f11.py"
    ],
    "new_files": [
      "type_switches_069af3.py"
    ]
  },
  {
    "file_signature": [
      "class:EntropyTest",
      "func:multiple_runs",
      "func:test_distributed_entropy",
      "func:test_entropy_for_uniform_distribution",
      "func:test_low_entropy_distribution",
      "func:test_masked_case",
      "func:test_multiple_distributed_runs"
    ],
    "old_files": [
      "entropy_test.py_deepseek_6f9156a1.py"
    ],
    "new_files": [
      "entropy_test_fa6663.py"
    ]
  },
  {
    "file_signature": [
      "class:RemoteIpAddr",
      "func:delete",
      "func:post_receive",
      "func:pre_receive",
      "func:status_change",
      "func:take_action"
    ],
    "old_files": [
      "remote_ip.py_deepseek_6ab0625f.py"
    ],
    "new_files": [
      "remote_ip_c6c5d8.py"
    ]
  },
  {
    "file_signature": [
      "class:AirzoneAidooSensor",
      "class:AirzoneSensor",
      "class:AirzoneWebServerSensor",
      "class:AirzoneZoneSensor",
      "func:__init__",
      "func:_async_update_attrs",
      "func:_handle_coordinator_update",
      "func:available"
    ],
    "old_files": [
      "sensor.py_deepseek_9758832d.py"
    ],
    "new_files": [
      "sensor_31ba0c.py"
    ]
  },
  {
    "file_signature": [
      "class:TelnetSwitch",
      "func:__init__",
      "func:_telnet_command",
      "func:setup_platform",
      "func:turn_off",
      "func:turn_on",
      "func:update"
    ],
    "old_files": [
      "switch.py_deepseek_12217940.py"
    ],
    "new_files": [
      "switch_045d67.py"
    ]
  },
  {
    "file_signature": [
      "class:YHClientTrader",
      "func:_handle_verify_code",
      "func:_switch_window_to_normal_mode",
      "func:auto_ipo",
      "func:balance",
      "func:broker_type",
      "func:login"
    ],
    "old_files": [
      "yh_clienttrader.py_deepseek_469ca96e.py"
    ],
    "new_files": [
      "yh_clienttrader_6b6d1f.py"
    ]
  },
  {
    "file_signature": [
      "class:ShanghaiBackwardsHeader",
      "class:ShanghaiBlock",
      "class:ShanghaiBlockHeader",
      "func:__init__",
      "func:__str__",
      "func:blob_gas_used",
      "func:deserialize",
      "func:excess_blob_gas",
      "func:from_header",
      "func:get_receipt_builder",
      "func:get_receipts",
      "func:get_transaction_builder",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash",
      "func:number",
      "func:parent_beacon_block_root",
      "func:serialize"
    ],
    "old_files": [
      "blocks.py_deepseek_073555f1.py"
    ],
    "new_files": [
      "blocks_219fd5.py"
    ]
  },
  {
    "file_signature": [
      "func:can_run_model",
      "func:test_backtesting_fit_live_predictions",
      "func:test_download_all_data_for_training",
      "func:test_extract_data_and_train_model_Classifiers",
      "func:test_extract_data_and_train_model_MultiTargets",
      "func:test_extract_data_and_train_model_Standard",
      "func:test_freqai_informative_pairs",
      "func:test_get_required_data_timerange",
      "func:test_get_state_info",
      "func:test_plot_feature_importance",
      "func:test_start_backtesting",
      "func:test_start_backtesting_from_existing_folder",
      "func:test_start_backtesting_subdaily_backtest_period",
      "func:test_start_set_train_queue"
    ],
    "old_files": [
      "test_freqai_interface.py_deepseek_a7012432.py"
    ],
    "new_files": [
      "test_freqai_interface_ca78dd.py"
    ]
  },
  {
    "file_signature": [
      "func:_call_initvar",
      "func:create_dataclass",
      "func:dataclass",
      "func:is_pydantic_dataclass",
      "func:make_pydantic_fields_compatible",
      "func:rebuild_dataclass"
    ],
    "old_files": [
      "dataclasses.py_deepseek_f70d3a68.py"
    ],
    "new_files": [
      "dataclasses_968ced.py"
    ]
  },
  {
    "file_signature": [
      "class:StateGroup",
      "func:AwaitingConcurrencySlot",
      "func:AwaitingRetry",
      "func:Cancelled",
      "func:Cancelling",
      "func:Completed",
      "func:Crashed",
      "func:Failed",
      "func:Late",
      "func:Paused",
      "func:Pending",
      "func:Retrying",
      "func:Running",
      "func:Scheduled",
      "func:Suspended",
      "func:__init__",
      "func:__repr__",
      "func:_get_type_counts",
      "func:_traced",
      "func:all_completed",
      "func:all_final",
      "func:any_cancelled",
      "func:any_failed",
      "func:any_paused",
      "func:counts_message",
      "func:fail_count",
      "func:format_exception",
      "func:get_state_result",
      "func:is_state_iterable",
      "func:to_state_create"
    ],
    "old_files": [
      "states.py_deepseek_3a0b7b54.py"
    ],
    "new_files": [
      "states_ff542b.py"
    ]
  },
  {
    "file_signature": [
      "class:App",
      "class:ConsumeBodyTransport",
      "class:DigestApp",
      "class:RepeatAuth",
      "class:ResponseBodyAuth",
      "class:SyncOrAsyncAuth",
      "func:__call__",
      "func:__init__",
      "func:auth",
      "func:auth_flow",
      "func:challenge_send",
      "func:sync_auth_flow",
      "func:test_auth_hidden_url",
      "func:test_digest_auth_returns_no_auth_if_alternate_auth_scheme",
      "func:test_netrc_auth_credentials_do_not_exist",
      "func:test_netrc_auth_credentials_exist",
      "func:test_netrc_auth_nopassword_parse_error",
      "func:test_sync_auth",
      "func:test_sync_auth_history",
      "func:test_sync_auth_reads_response_body",
      "func:test_sync_digest_auth_raises_protocol_error_on_malformed_header"
    ],
    "old_files": [
      "test_auth.py_deepseek_2a49d4e2.py"
    ],
    "new_files": [
      "test_auth_8863c0.py"
    ]
  },
  {
    "file_signature": [
      "class:Dataset",
      "class:EvaluationData",
      "class:Factors",
      "class:IntendedUse",
      "class:Metrics",
      "class:ModelCard",
      "class:ModelCardInfo",
      "class:ModelCaveatsAndRecommendations",
      "class:ModelDetails",
      "class:ModelEthicalConsiderations",
      "class:ModelUsage",
      "class:Paper",
      "class:QuantitativeAnalyses",
      "class:TrainingData",
      "func:__init__",
      "func:__str__",
      "func:get_description",
      "func:to_dict"
    ],
    "old_files": [
      "model_card.py_deepseek_55460c7b.py"
    ],
    "new_files": [
      "model_card_7b7f62.py"
    ]
  },
  {
    "file_signature": [
      "class:MPLPlot",
      "func:__init__",
      "func:_add_table",
      "func:_adorn_subplots",
      "func:_append_legend_handles_labels",
      "func:_apply_axis_properties",
      "func:_apply_style_colors",
      "func:_axes_and_fig",
      "func:_col_idx_to_axis_idx",
      "func:_color_in_style",
      "func:_compute_plot_data",
      "func:_convert_to_ndarray",
      "func:_ensure_frame",
      "func:_get_ax",
      "func:_get_ax_layer",
      "func:_get_ax_legend",
      "func:_get_colors",
      "func:_get_custom_index_name",
      "func:_get_errorbars",
      "func:_get_index_name",
      "func:_get_nseries",
      "func:_get_xticks",
      "func:_has_plotted_object",
      "func:_iter_data",
      "func:_kind",
      "func:_make_legend",
      "func:_make_plot",
      "func:_mark_right_label",
      "func:_maybe_right_yaxis",
      "func:_parse_errorbars",
      "func:_plot",
      "func:_post_plot_logic",
      "func:_post_plot_logic_common",
      "func:_validate_color_args",
      "func:_validate_log_kwd",
      "func:_validate_sharex",
      "func:_validate_subplots_kwarg",
      "func:axes",
      "func:fig",
      "func:generate",
      "func:holds_integer",
      "func:legend_title",
      "func:match_labels",
      "func:nseries",
      "func:on_right",
      "func:orientation",
      "func:result"
    ],
    "old_files": [
      "core.py_deepseek_f0978ce4.py"
    ],
    "new_files": [
      "core_c55873.py"
    ]
  },
  {
    "file_signature": [
      "func:_frame_value_counts",
      "func:assert_categorical_single_grouper",
      "func:education_df",
      "func:rebuild_index",
      "func:seed_df",
      "func:test_against_frame_and_seriesgroupby",
      "func:test_bad_subset",
      "func:test_basic",
      "func:test_categorical_multiple_groupers",
      "func:test_categorical_non_groupers",
      "func:test_categorical_single_grouper_observed_false",
      "func:test_categorical_single_grouper_observed_true",
      "func:test_categorical_single_grouper_with_only_observed_categories",
      "func:test_compound",
      "func:test_data_frame_value_counts",
      "func:test_data_frame_value_counts_dropna",
      "func:test_dropna_combinations",
      "func:test_series_groupby_value_counts",
      "func:test_series_groupby_value_counts_empty",
      "func:test_series_groupby_value_counts_no_sort",
      "func:test_series_groupby_value_counts_on_categorical",
      "func:test_series_groupby_value_counts_one_row",
      "func:test_series_groupby_value_counts_with_grouper",
      "func:tests_value_counts_index_names_category_column"
    ],
    "old_files": [
      "test_value_counts.py_deepseek_32e737e2.py"
    ],
    "new_files": [
      "test_value_counts_77b3d1.py"
    ]
  },
  {
    "file_signature": [
      "class:TikteckLight",
      "func:__init__",
      "func:set_state",
      "func:setup_platform",
      "func:turn_off",
      "func:turn_on"
    ],
    "old_files": [
      "light.py_deepseek_36343c25.py"
    ],
    "new_files": [
      "light_1f4c8c.py"
    ]
  },
  {
    "file_signature": [
      "class:DeploymentApplyError",
      "class:RunnerDeployment",
      "func:_construct_deployment_schedules",
      "func:_set_defaults_from_flow",
      "func:entrypoint_type",
      "func:from_entrypoint",
      "func:from_flow",
      "func:from_storage",
      "func:full_name",
      "func:reconcile_paused",
      "func:reconcile_schedules",
      "func:validate_automation_names",
      "func:validate_name"
    ],
    "old_files": [
      "runner.py_deepseek_fc821e47.py"
    ],
    "new_files": [
      "runner_7722d1.py"
    ]
  },
  {
    "file_signature": [
      "class:QNAPCPUSensor",
      "class:QNAPDriveSensor",
      "class:QNAPMemorySensor",
      "class:QNAPNetworkSensor",
      "class:QNAPSensor",
      "class:QNAPSystemSensor",
      "class:QNAPVolumeSensor",
      "func:__init__",
      "func:extra_state_attributes",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_deepseek_21456fb9.py"
    ],
    "new_files": [
      "sensor_e4b539.py"
    ]
  },
  {
    "file_signature": [
      "class:JoinableT",
      "class:StreamT",
      "class:_AppT",
      "class:_JoinT",
      "class:_SchemaT",
      "func:__aiter__",
      "func:__and__",
      "func:__copy__",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:_human_channel",
      "func:add_processor",
      "func:clone",
      "func:combine",
      "func:contribute_to_stream",
      "func:derive_topic",
      "func:echo",
      "func:enumerate",
      "func:get_active_stream",
      "func:group_by",
      "func:info",
      "func:inner_join",
      "func:join",
      "func:left_join",
      "func:outer_join",
      "func:through"
    ],
    "old_files": [
      "streams.py_deepseek_4c29e46e.py"
    ],
    "new_files": [
      "streams_a2a52b.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseRequest",
      "class:FileField",
      "class:Request",
      "func:__bool__",
      "func:__delitem__",
      "func:__eq__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:_cancel",
      "func:_etag_values",
      "func:_finish",
      "func:_if_match_or_none_impl",
      "func:app",
      "func:body_exists",
      "func:can_read_body",
      "func:client_max_size",
      "func:clone",
      "func:config_dict",
      "func:content",
      "func:cookies",
      "func:forwarded",
      "func:get_extra_info",
      "func:headers",
      "func:host",
      "func:http_range",
      "func:if_match",
      "func:if_modified_since",
      "func:if_none_match",
      "func:if_range",
      "func:if_unmodified_since",
      "func:keep_alive",
      "func:match_info",
      "func:method",
      "func:path",
      "func:path_qs",
      "func:protocol",
      "func:query",
      "func:query_string",
      "func:raw_headers",
      "func:raw_path",
      "func:rel_url",
      "func:remote",
      "func:scheme",
      "func:secure",
      "func:task",
      "func:transport",
      "func:url",
      "func:version",
      "func:writer"
    ],
    "old_files": [
      "web_request.py_deepseek_90f82707.py"
    ],
    "new_files": [
      "web_request_930455.py"
    ]
  },
  {
    "file_signature": [
      "class:SendNotificationBot",
      "class:XmppNotificationService",
      "func:__init__",
      "func:_read_upload_file",
      "func:discard_ssl_invalid_cert",
      "func:disconnect_on_login_fail",
      "func:get_random_filename",
      "func:get_url",
      "func:send_text_message"
    ],
    "old_files": [
      "notify.py_deepseek_f0af2326.py"
    ],
    "new_files": [
      "notify_7c7ee7.py"
    ]
  },
  {
    "file_signature": [
      "class:IgnoreUnhashableLruCacheWrapper",
      "class:InvalidCacheKeyError",
      "func:__call__",
      "func:__init__",
      "func:active_non_guest_user_ids_cache_key",
      "func:active_user_ids_cache_key",
      "func:bot_dicts_in_realm_cache_key",
      "func:bot_profile_cache_key",
      "func:bounce_key_prefix_for_testing",
      "func:bulk_cached_fetch",
      "func:cache_delete",
      "func:cache_delete_many",
      "func:cache_get",
      "func:cache_get_many",
      "func:cache_set",
      "func:cache_set_many",
      "func:cache_with_key",
      "func:changed",
      "func:decorator",
      "func:delete_display_recipient_cache",
      "func:delete_user_profile_caches",
      "func:dict_items_to_dict",
      "func:dict_to_items_tuple",
      "func:dict_to_tuple",
      "func:display_recipient_cache_key",
      "func:filter_good_and_bad_keys",
      "func:flush_message",
      "func:flush_muting_users_cache",
      "func:flush_realm",
      "func:flush_stream",
      "func:flush_submessage",
      "func:flush_used_upload_space_cache",
      "func:flush_user_profile",
      "func:flush_zoom_server_access_token_cache",
      "func:func_with_caching",
      "func:generic_bulk_cached_fetch",
      "func:get_cache_backend",
      "func:get_cross_realm_dicts_key",
      "func:get_muting_users_cache_key",
      "func:get_or_create_key_prefix",
      "func:get_realm_seat_count_cache_key",
      "func:get_realm_used_upload_space_cache_key",
      "func:get_remote_cache_requests",
      "func:get_remote_cache_time",
      "func:ignore_unhashable_lru_cache",
      "func:items_tuple_to_dict",
      "func:log_invalid_cache_keys",
      "func:open_graph_description_cache_key",
      "func:preview_url_cache_key",
      "func:realm_alert_words_automaton_cache_key",
      "func:realm_alert_words_cache_key",
      "func:realm_rendered_description_cache_key",
      "func:realm_text_description_cache_key",
      "func:realm_user_dicts_cache_key",
      "func:remote_cache_stats_finish",
      "func:remote_cache_stats_start",
      "func:safe_cache_get_many",
      "func:safe_cache_set_many",
      "func:single_user_display_recipient_cache_key",
      "func:to_dict_cache_key",
      "func:to_dict_cache_key_id",
      "func:user_profile_by_api_key_cache_key",
      "func:user_profile_by_email_realm_cache_key",
      "func:user_profile_by_email_realm_id_cache_key",
      "func:user_profile_by_id_cache_key",
      "func:user_profile_delivery_email_cache_key",
      "func:user_profile_narrow_by_id_cache_key",
      "func:validate_cache_key",
      "func:wrapper",
      "func:zoom_server_access_token_cache_key"
    ],
    "old_files": [
      "cache.py_deepseek_b2559857.py"
    ],
    "new_files": [
      "cache_83a043.py"
    ]
  },
  {
    "file_signature": [
      "func:_mocked_execute_query",
      "func:test_execute_query_as_report_executor",
      "func:test_execute_query_failed_max_retries",
      "func:test_execute_query_failed_no_retry",
      "func:test_execute_query_mutate_query_disabled",
      "func:test_execute_query_mutate_query_enabled",
      "func:test_execute_query_succeeded_no_retry",
      "func:test_execute_query_succeeded_with_retries",
      "func:test_get_alert_metadata_from_object"
    ],
    "old_files": [
      "alert_tests.py_deepseek_d23b3a38.py"
    ],
    "new_files": [
      "alert_tests_e8cf0b.py"
    ]
  },
  {
    "file_signature": [
      "class:InsteonEntity",
      "func:__hash__",
      "func:__init__",
      "func:_get_label",
      "func:_print_aldb",
      "func:address",
      "func:async_entity_update",
      "func:device_info",
      "func:extra_state_attributes",
      "func:get_device_property",
      "func:group",
      "func:name",
      "func:unique_id"
    ],
    "old_files": [
      "entity.py_deepseek_a795742b.py"
    ],
    "new_files": [
      "entity_27a2b6.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoLight",
      "func:__init__",
      "func:available",
      "func:brightness",
      "func:color_mode",
      "func:color_temp_kelvin",
      "func:effect",
      "func:effect_list",
      "func:hs_color",
      "func:is_on",
      "func:rgbw_color",
      "func:rgbww_color",
      "func:supported_color_modes",
      "func:unique_id"
    ],
    "old_files": [
      "light.py_deepseek_d56e7802.py"
    ],
    "new_files": [
      "light_41b89c.py"
    ]
  },
  {
    "file_signature": [
      "class:ExecutionContext",
      "func:__init__",
      "func:base_fee_per_gas",
      "func:block_number",
      "func:chain_id",
      "func:coinbase",
      "func:difficulty",
      "func:excess_blob_gas",
      "func:gas_limit",
      "func:mix_hash",
      "func:prev_hashes",
      "func:timestamp"
    ],
    "old_files": [
      "execution_context.py_deepseek_71a45ddd.py"
    ],
    "new_files": [
      "execution_context_61aa2e.py"
    ]
  },
  {
    "file_signature": [
      "class:APILogHandler",
      "class:APILogWorker",
      "class:PrefectConsoleHandler",
      "class:WorkerAPILogHandler",
      "func:__init__",
      "func:_get_payload_size",
      "func:_get_size",
      "func:_max_batch_size",
      "func:_min_interval",
      "func:emit",
      "func:flush",
      "func:handleError",
      "func:instance",
      "func:prepare"
    ],
    "old_files": [
      "handlers.py_deepseek_9ad132ce.py"
    ],
    "new_files": [
      "handlers_890c61.py"
    ]
  },
  {
    "file_signature": [
      "class:PioneerDevice",
      "func:__init__",
      "func:is_volume_muted",
      "func:media_title",
      "func:mute_volume",
      "func:name",
      "func:select_source",
      "func:set_volume_level",
      "func:setup_platform",
      "func:source",
      "func:source_list",
      "func:state",
      "func:telnet_command",
      "func:telnet_request",
      "func:turn_off",
      "func:turn_on",
      "func:update",
      "func:volume_down",
      "func:volume_level",
      "func:volume_up"
    ],
    "old_files": [
      "media_player.py_deepseek_6a1193c9.py"
    ],
    "new_files": [
      "media_player_d56fd8.py"
    ]
  },
  {
    "file_signature": [
      "class:ParserTest",
      "func:_assert_validate_error",
      "func:test_anchor_blocks",
      "func:test_code_blocks",
      "func:test_is_django_block_tag",
      "func:test_tokenize",
      "func:test_validate_bad_handlebars_partial_block",
      "func:test_validate_bad_indentation",
      "func:test_validate_comment",
      "func:test_validate_django",
      "func:test_validate_empty_html_tag",
      "func:test_validate_handlebars",
      "func:test_validate_handlebars_partial_block",
      "func:test_validate_incomplete_django_tag_1",
      "func:test_validate_incomplete_django_tag_2",
      "func:test_validate_incomplete_handlebars_tag_1",
      "func:test_validate_incomplete_handlebars_tag_2",
      "func:test_validate_incomplete_html_tag_1",
      "func:test_validate_incomplete_html_tag_2",
      "func:test_validate_jinja2_whitespace_markers_1",
      "func:test_validate_jinja2_whitespace_markers_2",
      "func:test_validate_jinja2_whitespace_markers_3",
      "func:test_validate_jinja2_whitespace_markers_4",
      "func:test_validate_jinja2_whitespace_type2_markers",
      "func:test_validate_mismatch_jinja2_whitespace_markers_1",
      "func:test_validate_mismatched_tag",
      "func:test_validate_no_start_tag",
      "func:test_validate_state_depth",
      "func:test_validate_vanilla_html"
    ],
    "old_files": [
      "test_template_parser.py_deepseek_70590f1d.py"
    ],
    "new_files": [
      "test_template_parser_7279f4.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseSupersetApi",
      "class:BaseSupersetApiMixin",
      "class:BaseSupersetModelRestApi",
      "class:DistincResponseSchema",
      "class:DistinctResultResponseSchema",
      "class:RelatedFieldFilter",
      "class:RelatedResponseSchema",
      "class:RelatedResultResponseSchema",
      "func:__init__",
      "func:_add_extra_ids_to_result",
      "func:_get_distinct_filter",
      "func:_get_extra_field_for_model",
      "func:_get_related_filter",
      "func:_get_result_from_rows",
      "func:_get_text_for_model",
      "func:_init_properties",
      "func:delete_headless",
      "func:distinct",
      "func:get_headless",
      "func:get_list_headless",
      "func:incr_stats",
      "func:info_headless",
      "func:post_headless",
      "func:put_headless",
      "func:related",
      "func:send_stats_metrics",
      "func:timing_stats"
    ],
    "old_files": [
      "base_api.py_deepseek_025b2fa5.py"
    ],
    "new_files": [
      "base_api_2a8768.py"
    ]
  },
  {
    "file_signature": [
      "class:MacroNamespace",
      "class:MacroNamespaceBuilder",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_add_macro_to",
      "func:_keys",
      "func:_search_order",
      "func:add_macro",
      "func:add_macros",
      "func:build_namespace",
      "func:get_from_package"
    ],
    "old_files": [
      "macros.py_deepseek_6497df06.py"
    ],
    "new_files": [
      "macros_10e8dd.py"
    ]
  },
  {
    "file_signature": [
      "class:OmniLogicChlorinatorSensor",
      "class:OmniLogicORPSensor",
      "class:OmniLogicPHSensor",
      "class:OmniLogicPumpSpeedSensor",
      "class:OmniLogicSaltLevelSensor",
      "class:OmniLogicTemperatureSensor",
      "class:OmnilogicSensor",
      "func:__init__",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_deepseek_731836cd.py"
    ],
    "new_files": [
      "sensor_677086.py"
    ]
  },
  {
    "file_signature": [
      "class:BrowseMedia",
      "func:__init__",
      "func:__repr__",
      "func:as_dict",
      "func:async_process_play_media_url",
      "func:calculate_children_class"
    ],
    "old_files": [
      "browse_media.py_deepseek_a771928a.py"
    ],
    "new_files": [
      "browse_media_2e1817.py"
    ]
  },
  {
    "file_signature": [
      "class:ChartUpdater",
      "class:DashboardUpdater",
      "class:DatasetUpdater",
      "class:FavStarUpdater",
      "class:ObjectType",
      "class:ObjectUpdater",
      "class:QueryUpdater",
      "class:Tag",
      "class:TagType",
      "class:TaggedObject",
      "func:__str__",
      "func:_add_owners",
      "func:add_tag_object_if_not_tagged",
      "func:after_delete",
      "func:after_insert",
      "func:after_update",
      "func:get_object_type",
      "func:get_owner_tag_ids",
      "func:get_owners_ids",
      "func:get_tag"
    ],
    "old_files": [
      "models.py_deepseek_d1a953c3.py"
    ],
    "new_files": [
      "models_234e77.py"
    ]
  },
  {
    "file_signature": [
      "class:RfxtrxSwitch",
      "func:__init__",
      "func:_apply_event",
      "func:_apply_event_lighting4",
      "func:_apply_event_standard",
      "func:_constructor",
      "func:_handle_event",
      "func:supported"
    ],
    "old_files": [
      "switch.py_deepseek_2d748893.py"
    ],
    "new_files": [
      "switch_fa31bd.py"
    ]
  },
  {
    "file_signature": [
      "class:OperationType",
      "func:_all_blocks",
      "func:_check_state",
      "func:_set_operations_by_dict",
      "func:_state_transition_and_sign_block_at_slot",
      "func:_transition_until_active",
      "func:_transition_until_fork_minus_one",
      "func:do_fork",
      "func:f",
      "func:get_upgrade_fn",
      "func:no_blocks",
      "func:only_at",
      "func:run_transition_with_operation",
      "func:skip_slots",
      "func:state_transition_across_slots",
      "func:state_transition_across_slots_with_ignoring_proposers",
      "func:transition_across_forks",
      "func:transition_to_next_epoch_and_append_blocks",
      "func:transition_until_fork"
    ],
    "old_files": [
      "fork_transition.py_deepseek_de86aa91.py"
    ],
    "new_files": [
      "fork_transition_eab473.py"
    ]
  },
  {
    "file_signature": [
      "class:SatelIntegraBinarySensor",
      "func:__init__",
      "func:_devices_updated",
      "func:device_class",
      "func:icon",
      "func:is_on",
      "func:name"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_5476e462.py"
    ],
    "new_files": [
      "binary_sensor_f7efe0.py"
    ]
  },
  {
    "file_signature": [
      "class:AuditMixinNullable",
      "class:CertificationMixin",
      "class:ExploreMixin",
      "class:ExtraJSONMixin",
      "class:ImportExportMixin",
      "class:QueryResult",
      "class:QueryStringExtended",
      "class:SqlaQuery",
      "class:UUIDMixin",
      "func:__init__",
      "func:_apply_cte",
      "func:_get_series_orderby",
      "func:_normalize_prequery_result_type",
      "func:_process_sql_expression",
      "func:_unique_constraints",
      "func:_user",
      "func:adhoc_metric_to_sqla",
      "func:alter_params",
      "func:always_filter_main_dttm",
      "func:assign_column_label",
      "func:cache_timeout",
      "func:catalog",
      "func:certification_details",
      "func:certified_by",
      "func:changed_by_",
      "func:changed_by_fk",
      "func:changed_by_name",
      "func:changed_on_",
      "func:changed_on_delta_humanized",
      "func:changed_on_dttm",
      "func:changed_on_humanized",
      "func:changed_on_utc",
      "func:clone_model",
      "func:column_names",
      "func:columns",
      "func:convert_uuids",
      "func:copy",
      "func:created_by_fk",
      "func:created_by_name",
      "func:created_on_delta_humanized",
      "func:created_on_humanized",
      "func:creator",
      "func:database",
      "func:database_id",
      "func:db_engine_spec",
      "func:db_extra",
      "func:dttm_cols",
      "func:ensure_extra_json_is_not_none",
      "func:exc_query",
      "func:export_schema",
      "func:export_to_dict",
      "func:extra",
      "func:filter_values_handler",
      "func:formatter",
      "func:get_extra_cache_keys",
      "func:get_extra_dict",
      "func:get_fetch_values_predicate",
      "func:get_from_clause",
      "func:get_query_str",
      "func:get_query_str_extended",
      "func:get_rendered_sql",
      "func:get_sqla_row_level_filters",
      "func:get_template_processor",
      "func:handle_single_value",
      "func:import_from_dict",
      "func:is_alias_used_in_orderby",
      "func:is_certified",
      "func:is_rls_supported",
      "func:json_to_dict",
      "func:main_dttm_col",
      "func:make_orderby_compatible",
      "func:make_sqla_column_compatible",
      "func:metrics",
      "func:modified",
      "func:offset",
      "func:override",
      "func:owners_data",
      "func:params_dict",
      "func:parent_foreign_key_mappings",
      "func:query",
      "func:remove_params",
      "func:reset_ownership",
      "func:schema",
      "func:set_extra_json_key",
      "func:short_uuid",
      "func:sql",
      "func:template_params_dict",
      "func:text",
      "func:type",
      "func:uid",
      "func:validate_adhoc_subquery",
      "func:warning_markdown"
    ],
    "old_files": [
      "helpers.py_deepseek_c8399573.py"
    ],
    "new_files": [
      "helpers_b52294.py"
    ]
  },
  {
    "file_signature": [
      "func:make_channel_pair",
      "func:running_sum",
      "func:test_fee_add_remove_invariant",
      "func:test_fee_capping",
      "func:test_fee_round_trip",
      "func:test_get_lock_amount_after_fees",
      "func:test_get_lock_amount_after_fees_imbalanced_channel",
      "func:test_imbalance_penalty",
      "func:test_interpolation",
      "func:test_linspace",
      "func:test_mfee1",
      "func:test_mfee2",
      "func:test_mfee3",
      "func:test_mfee4",
      "func:test_rebalancing_fee_calculation"
    ],
    "old_files": [
      "test_mediation_fee.py_deepseek_bcbdb4de.py"
    ],
    "new_files": [
      "test_mediation_fee_82ecfe.py"
    ]
  },
  {
    "file_signature": [
      "class:AssertTuple",
      "class:BreakOutsideLoop",
      "class:CommentAnnotationSyntaxError",
      "class:ContinueInFinally",
      "class:ContinueOutsideLoop",
      "class:DefaultExceptNotLast",
      "class:DoctestSyntaxError",
      "class:DuplicateArgument",
      "class:FStringMissingPlaceholders",
      "class:ForwardAnnotationSyntaxError",
      "class:FutureFeatureNotDefined",
      "class:IfTuple",
      "class:ImportShadowedByLoopVar",
      "class:ImportStarNotPermitted",
      "class:ImportStarUsage",
      "class:ImportStarUsed",
      "class:InvalidPrintSyntax",
      "class:IsLiteral",
      "class:LateFutureImport",
      "class:Message",
      "class:MultiValueRepeatedKeyLiteral",
      "class:MultiValueRepeatedKeyVariable",
      "class:PercentFormatExpectedMapping",
      "class:PercentFormatExpectedSequence",
      "class:PercentFormatExtraNamedArguments",
      "class:PercentFormatInvalidFormat",
      "class:PercentFormatMissingArgument",
      "class:PercentFormatMixedPositionalAndNamed",
      "class:PercentFormatPositionalCountMismatch",
      "class:PercentFormatStarRequiresSequence",
      "class:PercentFormatUnsupportedFormatCharacter",
      "class:RaiseNotImplemented",
      "class:RedefinedInListComp",
      "class:RedefinedWhileUnused",
      "class:ReturnOutsideFunction",
      "class:ReturnWithArgsInsideGenerator",
      "class:StringDotFormatExtraNamedArguments",
      "class:StringDotFormatExtraPositionalArguments",
      "class:StringDotFormatInvalidFormat",
      "class:StringDotFormatMissingArgument",
      "class:StringDotFormatMixingAutomatic",
      "class:TooManyExpressionsInStarredAssignment",
      "class:TwoStarredExpressions",
      "class:UndefinedExport",
      "class:UndefinedLocal",
      "class:UndefinedName",
      "class:UnusedImport",
      "class:UnusedVariable",
      "class:YieldOutsideFunction",
      "func:__init__",
      "func:__str__"
    ],
    "old_files": [
      "messages.py_deepseek_30e9304b.py"
    ],
    "new_files": [
      "messages_bf1e5c.py"
    ]
  },
  {
    "file_signature": [
      "class:LiteJetSwitch",
      "func:__init__",
      "func:_on_connected_changed",
      "func:_on_switch_pressed",
      "func:_on_switch_released",
      "func:extra_state_attributes"
    ],
    "old_files": [
      "switch.py_deepseek_6cad3583.py"
    ],
    "new_files": [
      "switch_a354e7.py"
    ]
  },
  {
    "file_signature": [
      "class:ImageProcessingAlprEntity",
      "class:OpenAlprCloudEntity",
      "func:__init__",
      "func:async_process_plates",
      "func:camera_entity",
      "func:confidence",
      "func:extra_state_attributes",
      "func:name",
      "func:process_plates",
      "func:state"
    ],
    "old_files": [
      "image_processing.py_deepseek_e6e8e925.py"
    ],
    "new_files": [
      "image_processing_dff0c0.py"
    ]
  },
  {
    "file_signature": [
      "class:GDMOptimizer",
      "class:L1MomentumIterativeFastGradientMethod",
      "class:L2MomentumIterativeFastGradientMethod",
      "class:LinfMomentumIterativeFastGradientMethod",
      "func:__call__",
      "func:__init__",
      "func:get_optimizer"
    ],
    "old_files": [
      "mi_fgsm.py_deepseek_76c7d7df.py"
    ],
    "new_files": [
      "mi_fgsm_09ba33.py"
    ]
  },
  {
    "file_signature": [
      "class:SCSGateScenarioSwitch",
      "class:SCSGateSwitch",
      "func:__init__",
      "func:_setup_scenario_switches",
      "func:_setup_traditional_switches",
      "func:is_on",
      "func:name",
      "func:process_event",
      "func:scs_id",
      "func:setup_platform",
      "func:turn_off",
      "func:turn_on"
    ],
    "old_files": [
      "switch.py_deepseek_6d2bb2c2.py"
    ],
    "new_files": [
      "switch_5119b1.py"
    ]
  },
  {
    "file_signature": [
      "class:A",
      "func:post_convert_style",
      "func:post_handle_nopinyin",
      "func:post_pinyin",
      "func:pre_convert_style",
      "func:pre_handle_nopinyin",
      "func:test_post_convert_style_return_value",
      "func:test_post_handle_nopinyin_return_value",
      "func:test_post_pinyin_return_value_phrase_pinyin",
      "func:test_post_pinyin_return_value_single_pinyin",
      "func:test_pre_convert_style_return_value",
      "func:test_pre_handle_nopinyin_return_value"
    ],
    "old_files": [
      "test_converter.py_deepseek_e9c33d06.py"
    ],
    "new_files": [
      "test_converter_703ec2.py"
    ]
  },
  {
    "file_signature": [
      "class:AsyncHTTPTransport",
      "class:AsyncResponseStream",
      "class:HTTPTransport",
      "class:ResponseStream",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__iter__",
      "func:_load_httpcore_exceptions",
      "func:close",
      "func:handle_request",
      "func:map_httpcore_exceptions"
    ],
    "old_files": [
      "default.py_deepseek_fe677019.py"
    ],
    "new_files": [
      "default_bb0007.py"
    ]
  },
  {
    "file_signature": [
      "class:Decoder",
      "class:TransformerDecoder",
      "func:__init__",
      "func:decode_seq",
      "func:forward",
      "func:get_decoder",
      "func:get_num_hidden",
      "func:init_state_from_encoder",
      "func:register",
      "func:set_inference_only",
      "func:state_structure",
      "func:wrapper"
    ],
    "old_files": [
      "decoder.py_deepseek_b90fbe5f.py"
    ],
    "new_files": [
      "decoder_5a1e74.py"
    ]
  },
  {
    "file_signature": [
      "func:_one_pos_required_arg_one_optional",
      "func:_three_pos_required_args",
      "func:_two_pos_required_args",
      "func:_two_pos_required_args_extra_optional",
      "func:serializer",
      "func:test_inspect_annotated_serializer",
      "func:test_inspect_annotated_serializer_invalid_number_of_arguments",
      "func:test_inspect_validator",
      "func:test_inspect_validator_error",
      "func:test_inspect_validator_error_wrap",
      "func:validator",
      "func:validator1",
      "func:validator3",
      "func:validator4"
    ],
    "old_files": [
      "test_decorators.py_deepseek_065626f4.py"
    ],
    "new_files": [
      "test_decorators_98d50d.py"
    ]
  },
  {
    "file_signature": [
      "class:TestDST",
      "func:_make_timestamp",
      "func:_test_all_offsets",
      "func:_test_offset",
      "func:get_utc_offset_hours",
      "func:test_all_offset_classes",
      "func:test_fallback_singular",
      "func:test_nontick_offset_with_ambiguous_time_error",
      "func:test_springforward_plural",
      "func:test_springforward_singular"
    ],
    "old_files": [
      "test_dst.py_deepseek_d15dd87c.py"
    ],
    "new_files": [
      "test_dst_22fce9.py"
    ]
  },
  {
    "file_signature": [
      "func:_async_describe_event",
      "func:_process_logbook_platform",
      "func:async_log_entry",
      "func:log_entry",
      "func:log_message"
    ],
    "old_files": [
      "__init__.py_deepseek_b4ce3426.py"
    ],
    "new_files": [
      "__init___caf114.py"
    ]
  },
  {
    "file_signature": [
      "func:duplicate_columns_frame",
      "func:memory_usage",
      "func:test_info_categorical",
      "func:test_info_categorical_column_smoke_test",
      "func:test_info_compute_numba",
      "func:test_info_default_verbose_selection",
      "func:test_info_duplicate_columns_shows_correct_dtypes",
      "func:test_info_empty",
      "func:test_info_int_columns",
      "func:test_info_max_cols",
      "func:test_info_memory",
      "func:test_info_memory_usage",
      "func:test_info_memory_usage_bug_on_multiindex",
      "func:test_info_memory_usage_deep_not_pypy",
      "func:test_info_memory_usage_deep_pypy",
      "func:test_info_memory_usage_qualified",
      "func:test_info_show_counts",
      "func:test_info_shows_column_dtypes",
      "func:test_info_smoke_test",
      "func:test_info_smoke_test2",
      "func:test_info_verbose_check_header_separator_body",
      "func:test_info_verbose_with_counts_spacing",
      "func:test_info_wide",
      "func:test_memory_usage_empty_no_warning",
      "func:test_usage_via_getsizeof"
    ],
    "old_files": [
      "test_info.py_deepseek_0c6b742d.py"
    ],
    "new_files": [
      "test_info_8bfc42.py"
    ]
  },
  {
    "file_signature": [
      "class:OwnTracksContext",
      "func:__init__",
      "func:async_handle_mqtt_message",
      "func:async_see",
      "func:async_see_beacons",
      "func:async_valid_accuracy",
      "func:set_async_see"
    ],
    "old_files": [
      "__init__.py_deepseek_88580b96.py"
    ],
    "new_files": [
      "__init___1a62a7.py"
    ]
  },
  {
    "file_signature": [
      "class:TadoClimate",
      "func:__init__",
      "func:_async_update_zone_callback",
      "func:_async_update_zone_data",
      "func:_handle_coordinator_update",
      "func:_is_current_setting_supported_by_current_hvac_mode",
      "func:_is_valid_setting_for_hvac_mode",
      "func:_normalize_target_temp_for_hvac_mode",
      "func:adjust_temp",
      "func:available",
      "func:current_humidity",
      "func:current_temperature",
      "func:extra_state_attributes",
      "func:fan_mode",
      "func:hvac_action",
      "func:hvac_mode",
      "func:max_temp",
      "func:min_temp",
      "func:preset_mode",
      "func:preset_modes",
      "func:swing_mode",
      "func:target_temperature",
      "func:target_temperature_step"
    ],
    "old_files": [
      "climate.py_deepseek_542d0e90.py"
    ],
    "new_files": [
      "climate_d27245.py"
    ]
  },
  {
    "file_signature": [
      "class:ComparisonTestBase",
      "class:ReusedSQLTestCase",
      "class:SQLTestUtils",
      "class:TestUtils",
      "func:_to_pandas",
      "func:assertPandasAlmostEqual",
      "func:assertPandasEqual",
      "func:assert_eq",
      "func:assert_produces_warning",
      "func:compare_both",
      "func:database",
      "func:function",
      "func:kdf",
      "func:pdf",
      "func:setUpClass",
      "func:sql_conf",
      "func:table",
      "func:tearDownClass",
      "func:tempView",
      "func:temp_dir",
      "func:temp_file",
      "func:wrapped"
    ],
    "old_files": [
      "utils.py_deepseek_04b66f49.py"
    ],
    "new_files": [
      "utils_eb1e68.py"
    ]
  },
  {
    "file_signature": [
      "class:Embedding",
      "class:EmbeddingsFileURI",
      "class:EmbeddingsTextFile",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__next__",
      "func:_get_num_tokens_from_first_line",
      "func:_get_the_only_file_in_the_archive",
      "func:_open_inside_tar",
      "func:_open_inside_zip",
      "func:_read_embeddings_from_hdf5",
      "func:_read_embeddings_from_text_file",
      "func:_read_pretrained_embeddings_file",
      "func:close",
      "func:extend_vocab",
      "func:format_embeddings_file_uri",
      "func:forward",
      "func:get_output_dim",
      "func:parse_embeddings_file_uri",
      "func:read",
      "func:readline"
    ],
    "old_files": [
      "embedding.py_deepseek_64e6a5c5.py"
    ],
    "new_files": [
      "embedding_8c6937.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseMapper",
      "class:LambdaMapper",
      "class:Mapper",
      "class:lambda_mapper",
      "func:__call__",
      "func:__init__",
      "func:__repr__",
      "func:_generate_mapped_data_point",
      "func:_update_fields",
      "func:get_hashable",
      "func:get_parameters",
      "func:is_hashable",
      "func:reset_cache",
      "func:run"
    ],
    "old_files": [
      "core.py_deepseek_f5aee000.py"
    ],
    "new_files": [
      "core_b5776a.py"
    ]
  },
  {
    "file_signature": [
      "class:OldImageFeatureEmbeddings",
      "class:TextEmbeddings",
      "func:__init__",
      "func:forward",
      "func:get_modules",
      "func:image_embeddings",
      "func:image_params",
      "func:image_params_dict",
      "func:params",
      "func:params_dict",
      "func:test_can_construct_from_params",
      "func:test_can_construct_image_embeddings_from_params",
      "func:test_forward_against_huggingface_output",
      "func:test_forward_runs_with_inputs",
      "func:test_image_embedding_forward_runs_with_inputs",
      "func:test_image_embeddings_sanity",
      "func:test_loading_albert",
      "func:test_loading_from_pretrained_module",
      "func:test_no_token_type_layer",
      "func:test_output_size",
      "func:test_sanity",
      "func:transformer_embeddings"
    ],
    "old_files": [
      "transformer_embeddings_test.py_deepseek_7e8d35e5.py"
    ],
    "new_files": [
      "transformer_embeddings_test_676185.py"
    ]
  },
  {
    "file_signature": [
      "class:TestProjInfo",
      "func:__init__",
      "func:adapter",
      "func:analyses",
      "func:clean_up_logging",
      "func:create_test_schema",
      "func:dbt_profile_data",
      "func:dbt_profile_target",
      "func:dbt_project_yml",
      "func:dependencies",
      "func:dependencies_yml",
      "func:drop_test_schema",
      "func:environment",
      "func:get_tables_in_schema",
      "func:initialization",
      "func:logs_dir",
      "func:macros",
      "func:models",
      "func:packages",
      "func:packages_yml",
      "func:prefix",
      "func:profile_user",
      "func:profiles_config_update",
      "func:profiles_root",
      "func:profiles_yml",
      "func:project",
      "func:project_config_update",
      "func:project_files",
      "func:project_root",
      "func:project_setup",
      "func:properties",
      "func:run_sql",
      "func:run_sql_file",
      "func:seeds",
      "func:selectors",
      "func:selectors_yml",
      "func:shared_data_dir",
      "func:snapshots",
      "func:test_config",
      "func:test_data_dir",
      "func:tests",
      "func:unique_schema",
      "func:write_project_files",
      "func:write_project_files_recursively"
    ],
    "old_files": [
      "project.py_deepseek_a2c4245c.py"
    ],
    "new_files": [
      "project_72b75e.py"
    ]
  },
  {
    "file_signature": [
      "class:DiscoveryKey",
      "class:FlowDispatcher",
      "class:PendingFlowKey",
      "class:PendingFlowValue",
      "func:__init__",
      "func:_async_init_flow",
      "func:async_create",
      "func:async_create_flow",
      "func:async_setup",
      "func:from_json_dict"
    ],
    "old_files": [
      "discovery_flow.py_deepseek_cc41f229.py"
    ],
    "new_files": [
      "discovery_flow_f269c4.py"
    ]
  },
  {
    "file_signature": [
      "class:Withdrawal",
      "func:__init__",
      "func:decode",
      "func:encode",
      "func:hash",
      "func:validate"
    ],
    "old_files": [
      "withdrawals.py_deepseek_084e60f6.py"
    ],
    "new_files": [
      "withdrawals_8c07d5.py"
    ]
  },
  {
    "file_signature": [
      "class:ConnectionPool",
      "class:HTTPConnectionPool",
      "class:HTTPSConnectionPool",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__str__",
      "func:_absolute_url",
      "func:_add_transport_headers",
      "func:_build_context",
      "func:_get_conn",
      "func:_get_timeout",
      "func:_ipv6_host",
      "func:_make_request",
      "func:_new_conn",
      "func:_put_conn",
      "func:_raise_timeout",
      "func:_start_conn",
      "func:close",
      "func:connection_from_url",
      "func:drain_and_release_conn",
      "func:is_same_host",
      "func:urlopen"
    ],
    "old_files": [
      "connectionpool.py_deepseek_8473b69a.py"
    ],
    "new_files": [
      "connectionpool_8dc770.py"
    ]
  },
  {
    "file_signature": [
      "class:PaymentStatus",
      "class:RaidenService",
      "class:SyncTimeout",
      "class:SynchronizationState",
      "func:__init__",
      "func:__repr__",
      "func:_blockchain_event_listener",
      "func:_initialize_ready_to_process_events",
      "func:_initialize_wal",
      "func:_log_sync_progress",
      "func:_make_initial_state",
      "func:_run",
      "func:_set_rest_api_service_available",
      "func:_start_alarm_task",
      "func:_start_transport",
      "func:_synchronize_with_blockchain",
      "func:add_notification",
      "func:add_pending_greenlet",
      "func:confirmation_blocks",
      "func:get_block_number",
      "func:handle_and_track_state_changes",
      "func:initiator_init",
      "func:matches",
      "func:on_messages",
      "func:privkey",
      "func:remove",
      "func:should_continue",
      "func:smart_contract_filters_from_node_state",
      "func:start",
      "func:stop",
      "func:time_elapsed"
    ],
    "old_files": [
      "raiden_service.py_deepseek_abb03416.py"
    ],
    "new_files": [
      "raiden_service_70320b.py"
    ]
  },
  {
    "file_signature": [
      "class:JSONEncoder",
      "func:default",
      "func:dumps",
      "func:loads",
      "func:on_default",
      "func:str_to_decimal"
    ],
    "old_files": [
      "json.py_deepseek_3bee49f9.py"
    ],
    "new_files": [
      "json_7b3477.py"
    ]
  },
  {
    "file_signature": [
      "class:AttentionModule",
      "class:AttentionOutput",
      "class:SelfAttention",
      "class:T5Attention",
      "func:__init__",
      "func:_from_config",
      "func:_get_attention_probs",
      "func:_get_lengths",
      "func:_normalize",
      "func:_output_layer",
      "func:_position_bias",
      "func:_project",
      "func:_query_layer",
      "func:_relative_position_bucket",
      "func:_transpose_for_scores",
      "func:compute_bias",
      "func:forward"
    ],
    "old_files": [
      "attention_module.py_deepseek_e99ef20b.py"
    ],
    "new_files": [
      "attention_module_7f6559.py"
    ]
  },
  {
    "file_signature": [
      "func:_draft_update_action",
      "func:add_realm_logo_fields",
      "func:always_want",
      "func:apply_event",
      "func:apply_events",
      "func:fetch_initial_state_data"
    ],
    "old_files": [
      "events.py_deepseek_b136f42f.py"
    ],
    "new_files": [
      "events_b9f3ac.py"
    ]
  },
  {
    "file_signature": [
      "class:StoreT",
      "class:_AppT",
      "class:_CollectionT",
      "class:_ModelArg",
      "func:__init__",
      "func:apply_changelog_batch",
      "func:persisted_offset",
      "func:reset_state",
      "func:set_persisted_offset"
    ],
    "old_files": [
      "stores.py_deepseek_6fd2ef14.py"
    ],
    "new_files": [
      "stores_aa1665.py"
    ]
  },
  {
    "file_signature": [
      "class:TadoHomeSensor",
      "class:TadoSensorEntityDescription",
      "class:TadoZoneSensor",
      "func:__init__",
      "func:_handle_coordinator_update",
      "func:format_condition",
      "func:get_automatic_geofencing",
      "func:get_geofencing_mode",
      "func:get_tado_mode"
    ],
    "old_files": [
      "sensor.py_deepseek_ff20edd2.py"
    ],
    "new_files": [
      "sensor_152d62.py"
    ]
  },
  {
    "file_signature": [
      "class:StateMachine",
      "func:is_suppressed",
      "func:next_state",
      "func:register",
      "func:transition",
      "func:trend",
      "func:valid_severities"
    ],
    "old_files": [
      "alerta.py_deepseek_318d4d73.py"
    ],
    "new_files": [
      "alerta_4aa3fa.py"
    ]
  },
  {
    "file_signature": [
      "class:Filter",
      "class:FilterState",
      "class:LowPassFilter",
      "class:OutlierFilter",
      "class:RangeFilter",
      "class:SensorFilter",
      "class:ThrottleFilter",
      "class:TimeSMAFilter",
      "class:TimeThrottleFilter",
      "class:_State",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:_async_hass_started",
      "func:_filter_state",
      "func:_leak",
      "func:_update_filter_sensor_state",
      "func:_update_filter_sensor_state_event",
      "func:filter_state",
      "func:name",
      "func:native_value",
      "func:reset",
      "func:set_precision",
      "func:skip_processing",
      "func:window_size"
    ],
    "old_files": [
      "sensor.py_deepseek_70b43782.py"
    ],
    "new_files": [
      "sensor_f004b2.py"
    ]
  },
  {
    "file_signature": [
      "class:TestInterval",
      "func:interval",
      "func:test_hash",
      "func:test_is_empty",
      "func:test_length",
      "func:test_length_timestamp",
      "func:test_properties"
    ],
    "old_files": [
      "test_interval.py_deepseek_d06ae045.py"
    ],
    "new_files": [
      "test_interval_aba39a.py"
    ]
  },
  {
    "file_signature": [
      "class:GeonetnzVolcanoSensor",
      "func:__init__",
      "func:_update_callback",
      "func:_update_from_feed",
      "func:async_add_sensor",
      "func:extra_state_attributes",
      "func:icon",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_deepseek_98cd40cb.py"
    ],
    "new_files": [
      "sensor_1533dd.py"
    ]
  },
  {
    "file_signature": [
      "class:TestCheckForcingConcurrentBatches",
      "class:TestFailedPartialParse",
      "class:TestGetFullManifest",
      "class:TestPartialParse",
      "class:TestWarnUnusedConfigs",
      "func:event_catcher",
      "func:manifest_loader",
      "func:set_required_mocks",
      "func:test_check_forcing_concurrent_batches",
      "func:test_partial_parse_by_version",
      "func:test_partial_parse_file_diff_flag",
      "func:test_partial_parse_file_path",
      "func:test_partial_parse_safe_update_project_parser_files_partially",
      "func:test_profile_hash_change",
      "func:test_reset",
      "func:test_warn_for_unused_resource_config_paths",
      "func:test_write_perf_info"
    ],
    "old_files": [
      "test_manifest.py_deepseek_4664fd28.py"
    ],
    "new_files": [
      "test_manifest_190497.py"
    ]
  },
  {
    "file_signature": [
      "class:Record",
      "func:_BUILD_asdict",
      "func:_BUILD_asdict_field",
      "func:_BUILD_eq",
      "func:_BUILD_ge",
      "func:_BUILD_gt",
      "func:_BUILD_hash",
      "func:_BUILD_init",
      "func:_BUILD_input_translate_fields",
      "func:_BUILD_le",
      "func:_BUILD_lt",
      "func:_BUILD_ne",
      "func:__eq__",
      "func:__ge__",
      "func:__gt__",
      "func:__init__",
      "func:__init_subclass__",
      "func:__json__",
      "func:__le__",
      "func:__lt__",
      "func:__ne__",
      "func:_contribute_field_descriptors",
      "func:_contribute_methods",
      "func:_contribute_to_options",
      "func:_derive",
      "func:_humanize",
      "func:_kvrepr",
      "func:_prepare_dict",
      "func:add_related_to_tagged_indices",
      "func:add_to_tagged_indices",
      "func:asdict",
      "func:from_data",
      "func:generate_prepare_value",
      "func:generate_setter",
      "func:to_representation"
    ],
    "old_files": [
      "record.py_deepseek_e4228424.py"
    ],
    "new_files": [
      "record_c0e555.py"
    ]
  },
  {
    "file_signature": [
      "class:TestProfiles",
      "class:TestProfilesMayNotExist",
      "func:_write_profiles_yml",
      "func:cleanup",
      "func:cwd",
      "func:cwd_child",
      "func:cwd_parent",
      "func:dbt_debug",
      "func:environ",
      "func:profiles_env_root",
      "func:profiles_flag_root",
      "func:profiles_home_root",
      "func:profiles_project_root",
      "func:profiles_yml",
      "func:test_debug",
      "func:test_deps",
      "func:test_profiles",
      "func:write_profiles_yml"
    ],
    "old_files": [
      "test_profile_dir.py_deepseek_ec19df54.py"
    ],
    "new_files": [
      "test_profile_dir_8b1317.py"
    ]
  },
  {
    "file_signature": [
      "class:SliceCombinerTest",
      "func:create_dataset",
      "func:f",
      "func:g",
      "func:setUp",
      "func:test_make_slice_dataloader",
      "func:test_scores_pipeline",
      "func:test_slice_tasks"
    ],
    "old_files": [
      "test_sliceaware_classifier.py_deepseek_e30a3084.py"
    ],
    "new_files": [
      "test_sliceaware_classifier_1e31e5.py"
    ]
  },
  {
    "file_signature": [
      "class:CircularDependencyError",
      "class:ConfirmNotUniqueError",
      "class:OutputNotUniqueError",
      "class:Pipeline",
      "func:__add__",
      "func:__and__",
      "func:__getattr__",
      "func:__init__",
      "func:__or__",
      "func:__radd__",
      "func:__repr__",
      "func:__sub__",
      "func:_check_node",
      "func:_get_nodes_with_inputs_transcode_compatible",
      "func:_get_nodes_with_outputs_transcode_compatible",
      "func:_remove_intermediates",
      "func:_transcode_compatible_names",
      "func:_validate_duplicate_nodes",
      "func:_validate_transcoded_inputs_outputs",
      "func:_validate_unique_confirms",
      "func:_validate_unique_outputs",
      "func:all_inputs",
      "func:all_outputs",
      "func:datasets",
      "func:describe",
      "func:filter",
      "func:from_inputs",
      "func:from_nodes",
      "func:grouped_nodes",
      "func:grouped_nodes_by_namespace",
      "func:inputs",
      "func:node_dependencies",
      "func:nodes",
      "func:only_nodes",
      "func:only_nodes_with_inputs",
      "func:only_nodes_with_namespace",
      "func:only_nodes_with_outputs",
      "func:only_nodes_with_tags",
      "func:outputs",
      "func:set_to_string",
      "func:tag",
      "func:to_json",
      "func:to_nodes",
      "func:to_outputs"
    ],
    "old_files": [
      "pipeline.py_deepseek_9b0da9bc.py"
    ],
    "new_files": [
      "pipeline_25a0ac.py"
    ]
  },
  {
    "file_signature": [
      "func:test_analyze_trade_parallelism",
      "func:test_calculate_cagr",
      "func:test_calculate_calmar",
      "func:test_calculate_csum",
      "func:test_calculate_expectancy",
      "func:test_calculate_market_change",
      "func:test_calculate_max_drawdown",
      "func:test_calculate_max_drawdown2",
      "func:test_calculate_max_drawdown_abs",
      "func:test_calculate_sharpe",
      "func:test_calculate_sortino",
      "func:test_combine_dataframes_with_mean",
      "func:test_combine_dataframes_with_mean_no_data",
      "func:test_combined_dataframes_with_rel_mean",
      "func:test_create_cum_profit",
      "func:test_create_cum_profit1",
      "func:test_extract_trades_of_period",
      "func:test_get_latest_backtest_filename",
      "func:test_get_latest_hyperopt_file",
      "func:test_load_backtest_data_multi",
      "func:test_load_backtest_data_new_format",
      "func:test_load_backtest_data_old_format",
      "func:test_load_backtest_metadata",
      "func:test_load_file_from_zip",
      "func:test_load_trades",
      "func:test_load_trades_from_db"
    ],
    "old_files": [
      "test_btanalysis.py_deepseek_5d81f97b.py"
    ],
    "new_files": [
      "test_btanalysis_4aed6c.py"
    ]
  },
  {
    "file_signature": [
      "class:CheckAttribute",
      "class:CompiledModule",
      "class:CompiledName",
      "class:CompiledValue",
      "class:CompiledValueFilter",
      "class:CompiledValueName",
      "class:EmptyCompiledName",
      "class:SignatureParamName",
      "class:UnresolvableParamName",
      "func:__call__",
      "func:__get__",
      "func:__init__",
      "func:__repr__",
      "func:_as_context",
      "func:_create_name",
      "func:_ensure_one_filter",
      "func:_execute_function",
      "func:_get",
      "func:_get_cached_name",
      "func:_get_qualified_names",
      "func:_normalize_create_args",
      "func:_parse_function_doc",
      "func:api_type",
      "func:array_type",
      "func:change_options",
      "func:create_cached_compiled_value",
      "func:create_from_access_path",
      "func:create_from_name",
      "func:execute_annotation",
      "func:execute_operation",
      "func:get",
      "func:get_defining_qualified_value",
      "func:get_filters",
      "func:get_key_values",
      "func:get_kind",
      "func:get_metaclasses",
      "func:get_param_names",
      "func:get_qualified_names",
      "func:get_safe_value",
      "func:get_signatures",
      "func:get_type_hint",
      "func:infer",
      "func:infer_compiled_value",
      "func:is_class",
      "func:is_compiled",
      "func:is_function",
      "func:is_instance",
      "func:is_module",
      "func:is_package",
      "func:is_stub",
      "func:name",
      "func:negate",
      "func:py__bases__",
      "func:py__bool__",
      "func:py__call__",
      "func:py__class__",
      "func:py__doc__",
      "func:py__file__",
      "func:py__getitem__",
      "func:py__iter__",
      "func:py__mro__",
      "func:py__name__",
      "func:py__path__",
      "func:py__simple_getitem__",
      "func:string_name",
      "func:string_names",
      "func:to_string",
      "func:values",
      "func:wrapper"
    ],
    "old_files": [
      "value.py_deepseek_6a3b30ed.py"
    ],
    "new_files": [
      "value_05eb19.py"
    ]
  },
  {
    "file_signature": [
      "class:BlobPayloadDecoder",
      "class:BlobTransaction",
      "class:CancunLegacyTransaction",
      "class:CancunTransactionBuilder",
      "class:CancunTypedTransaction",
      "class:CancunUnsignedLegacyTransaction",
      "class:UnsignedBlobTransaction",
      "func:_type_byte",
      "func:as_signed_transaction",
      "func:blob_versioned_hashes",
      "func:check_signature_validity",
      "func:decode",
      "func:encode",
      "func:gas_price",
      "func:gas_used_by",
      "func:get_intrinsic_gas",
      "func:get_message_for_signing",
      "func:get_sender",
      "func:hash",
      "func:intrinsic_gas",
      "func:make_receipt",
      "func:max_fee_per_blob_gas",
      "func:new_blob_transaction",
      "func:new_unsigned_blob_transaction",
      "func:validate"
    ],
    "old_files": [
      "transactions.py_deepseek_8abeba06.py"
    ],
    "new_files": [
      "transactions_ca9596.py"
    ]
  },
  {
    "file_signature": [
      "func:build_gld_probs",
      "func:query_test",
      "func:test_interleaved_multihead_attention",
      "func:test_interleaved_multihead_self_attention",
      "func:test_knn_layer",
      "func:test_lhuc",
      "func:test_output_layer",
      "func:test_positional_embeddings",
      "func:test_source_length_mask"
    ],
    "old_files": [
      "test_layers.py_deepseek_2c94b4d9.py"
    ],
    "new_files": [
      "test_layers_95be9f.py"
    ]
  },
  {
    "file_signature": [
      "func:test_additional_exchange_init_bybit",
      "func:test_bybit__order_needs_price",
      "func:test_bybit_fetch_order_canceled_empty",
      "func:test_bybit_fetch_orders",
      "func:test_bybit_get_funding_fees"
    ],
    "old_files": [
      "test_bybit.py_deepseek_2ea30f5b.py"
    ],
    "new_files": [
      "test_bybit_c7e0f9.py"
    ]
  },
  {
    "file_signature": [
      "class:CancunBackwardsHeader",
      "class:CancunBlock",
      "class:CancunBlockHeader",
      "func:__init__",
      "func:__str__",
      "func:deserialize",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash"
    ],
    "old_files": [
      "blocks.py_deepseek_5859508d.py"
    ],
    "new_files": [
      "blocks_abf4af.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseMethodsTests",
      "func:_test_searchsorted_bool_dtypes",
      "func:test_apply_simple_series",
      "func:test_argmax_argmin_no_skipna_notimplemented",
      "func:test_argmin_argmax",
      "func:test_argmin_argmax_all_na",
      "func:test_argmin_argmax_empty_array",
      "func:test_argreduce_series",
      "func:test_argsort",
      "func:test_argsort_missing",
      "func:test_argsort_missing_array",
      "func:test_combine_add",
      "func:test_combine_first",
      "func:test_combine_le",
      "func:test_container_shift",
      "func:test_count",
      "func:test_delete",
      "func:test_diff",
      "func:test_duplicated",
      "func:test_equals",
      "func:test_equals_same_data_different_object",
      "func:test_factorize",
      "func:test_factorize_empty",
      "func:test_factorize_equivalence",
      "func:test_fillna_copy_frame",
      "func:test_fillna_copy_series",
      "func:test_fillna_length_mismatch",
      "func:test_fillna_limit_frame",
      "func:test_fillna_limit_series",
      "func:test_hash_pandas_object",
      "func:test_hash_pandas_object_works",
      "func:test_insert",
      "func:test_insert_invalid",
      "func:test_insert_invalid_loc",
      "func:test_map",
      "func:test_nargsort",
      "func:test_not_hashable",
      "func:test_repeat",
      "func:test_repeat_raises",
      "func:test_searchsorted",
      "func:test_series_count",
      "func:test_shift_0_periods",
      "func:test_shift_empty_array",
      "func:test_shift_fill_value",
      "func:test_shift_non_empty_array",
      "func:test_shift_zero_copies",
      "func:test_sort_values",
      "func:test_sort_values_frame",
      "func:test_sort_values_missing",
      "func:test_unique",
      "func:test_value_counts",
      "func:test_value_counts_default_dropna",
      "func:test_value_counts_with_normalize",
      "func:test_where_series"
    ],
    "old_files": [
      "methods.py_deepseek_3d415f07.py"
    ],
    "new_files": [
      "methods_fdfe44.py"
    ]
  },
  {
    "file_signature": [
      "class:ArestBinarySensor",
      "class:ArestData",
      "func:__init__",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_f0c44c26.py"
    ],
    "new_files": [
      "binary_sensor_254d71.py"
    ]
  },
  {
    "file_signature": [
      "class:CloudGoogleConfig",
      "func:_2fa_disabled_legacy",
      "func:__init__",
      "func:_async_exposed_entities_updated",
      "func:_handle_device_registry_updated",
      "func:_handle_entity_registry_updated",
      "func:_migrate_google_entity_settings_v1",
      "func:_should_expose_entity_id",
      "func:_should_expose_legacy",
      "func:_supported_legacy",
      "func:agent_user_id",
      "func:async_get_agent_users",
      "func:cloud_user",
      "func:enabled",
      "func:entity_config",
      "func:get_agent_user_id_from_context",
      "func:get_agent_user_id_from_webhook",
      "func:get_local_user_id",
      "func:get_local_webhook_id",
      "func:has_registered_user_agent",
      "func:secure_devices_pin",
      "func:should_2fa",
      "func:should_expose",
      "func:should_report_state"
    ],
    "old_files": [
      "google_config.py_deepseek_bfbc83e7.py"
    ],
    "new_files": [
      "google_config_4b4b29.py"
    ]
  },
  {
    "file_signature": [
      "class:TrainerCallback",
      "func:__init__",
      "func:load_state_dict",
      "func:on_backward",
      "func:on_batch",
      "func:on_end",
      "func:on_epoch",
      "func:on_start",
      "func:state_dict"
    ],
    "old_files": [
      "callback.py_deepseek_1dcc5b58.py"
    ],
    "new_files": [
      "callback_4e27f8.py"
    ]
  },
  {
    "file_signature": [
      "class:Converter",
      "class:DefaultConverter",
      "class:UltimateConverter",
      "class:_neutralToneWith5Converter",
      "class:_toneSandhiConverter",
      "class:_v2UConverter",
      "func:__init__",
      "func:_convert_nopinyin_chars",
      "func:_convert_style",
      "func:_phrase_pinyin",
      "func:_single_pinyin",
      "func:convert",
      "func:convert_style",
      "func:convert_styles",
      "func:handle_nopinyin",
      "func:post_convert_style",
      "func:post_handle_nopinyin",
      "func:post_pinyin",
      "func:pre_convert_style",
      "func:pre_handle_nopinyin"
    ],
    "old_files": [
      "converter.py_deepseek_93b9a29a.py"
    ],
    "new_files": [
      "converter_e14395.py"
    ]
  },
  {
    "file_signature": [
      "class:Kraken",
      "func:_get_params",
      "func:_get_trade_pagination_next_value",
      "func:_set_leverage",
      "func:_valid_trade_pagination_id",
      "func:calculate_funding_fees",
      "func:consolidate_balances",
      "func:get_balances",
      "func:get_tickers",
      "func:market_is_tradable"
    ],
    "old_files": [
      "kraken.py_deepseek_d5b7d358.py"
    ],
    "new_files": [
      "kraken_c1d78e.py"
    ]
  },
  {
    "file_signature": [
      "class:EvolutionStrategy",
      "class:_EvolutionStrategy",
      "func:__init__",
      "func:_internal_ask_candidate",
      "func:_internal_tell_candidate",
      "func:_select"
    ],
    "old_files": [
      "es.py_deepseek_3c66939c.py"
    ],
    "new_files": [
      "es_85f924.py"
    ]
  },
  {
    "file_signature": [
      "class:TestAstype",
      "class:TestAstypeAPI",
      "class:TestAstypeCategorical",
      "class:TestAstypeString",
      "func:cmp",
      "func:rand_str",
      "func:test_arg_for_errors_in_astype",
      "func:test_astype",
      "func:test_astype_bool_missing_to_categorical",
      "func:test_astype_bytes",
      "func:test_astype_cast_nan_inf_int",
      "func:test_astype_cast_object_int",
      "func:test_astype_cast_object_int_fail",
      "func:test_astype_categorical_invalid_conversions",
      "func:test_astype_categorical_to_categorical",
      "func:test_astype_categorical_to_other",
      "func:test_astype_categoricaldtype",
      "func:test_astype_categories_raises",
      "func:test_astype_datetime",
      "func:test_astype_datetime64tz",
      "func:test_astype_dict_like",
      "func:test_astype_dt64_to_str",
      "func:test_astype_dt64tz_to_str",
      "func:test_astype_ea_to_datetimetzdtype",
      "func:test_astype_empty_constructor_equality",
      "func:test_astype_float_to_period",
      "func:test_astype_float_to_uint_negatives_raise",
      "func:test_astype_from_categorical",
      "func:test_astype_from_categorical_with_keywords",
      "func:test_astype_from_float_to_str",
      "func:test_astype_generic_timestamp_no_frequency",
      "func:test_astype_ignores_errors_for_extension_dtypes",
      "func:test_astype_int_na_string",
      "func:test_astype_mixed_object_to_dt64tz",
      "func:test_astype_nan_to_bool",
      "func:test_astype_no_pandas_dtype",
      "func:test_astype_object_to_dt64_non_nano",
      "func:test_astype_retain_attrs",
      "func:test_astype_str_cast_dt64",
      "func:test_astype_str_cast_td64",
      "func:test_astype_str_map",
      "func:test_astype_string_to_extension_dtype_roundtrip",
      "func:test_astype_timedelta64_with_np_nan",
      "func:test_astype_to_str_preserves_na",
      "func:test_astype_unicode",
      "func:test_astype_unitless_dt64_raises",
      "func:test_dt64_series_astype_object",
      "func:test_td64_series_astype_object"
    ],
    "old_files": [
      "test_astype.py_deepseek_52463ffb.py"
    ],
    "new_files": [
      "test_astype_5e9cc9.py"
    ]
  },
  {
    "file_signature": [
      "class:ConfluentConsumerThread",
      "class:Consumer",
      "class:Producer",
      "class:ProducerProduceFuture",
      "class:ProducerThread",
      "class:Transport",
      "class:_Consumer",
      "class:_Message",
      "class:_Producer",
      "func:__init__",
      "func:__post_init__",
      "func:_create_client_consumer",
      "func:_create_consumer",
      "func:_create_worker_consumer",
      "func:_ensure_consumer",
      "func:_new_consumer_thread",
      "func:_new_topicpartition",
      "func:_on_assign",
      "func:_on_revoke",
      "func:_to_message",
      "func:_topic_config",
      "func:assignment",
      "func:close",
      "func:highwater",
      "func:key_partition",
      "func:message_to_metadata",
      "func:produce",
      "func:seek",
      "func:server_list",
      "func:set_from_on_delivery",
      "func:topic_partitions"
    ],
    "old_files": [
      "confluent.py_deepseek_3fc1d46a.py"
    ],
    "new_files": [
      "confluent_3b2473.py"
    ]
  },
  {
    "file_signature": [
      "class:ChangeloggedSet",
      "class:ChangeloggedSetManager",
      "class:SetAction",
      "class:SetGlobalTable",
      "class:SetManagerOperation",
      "class:SetTable",
      "class:SetTableManager",
      "class:SetWindowSet",
      "class:SetWindowWrapper",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__post_init__",
      "func:_apply_set_operation",
      "func:_clear",
      "func:_difference_update",
      "func:_enable",
      "func:_intersection_update",
      "func:_new_store",
      "func:_symmetric_difference_update",
      "func:_update",
      "func:add",
      "func:apply_changelog_event",
      "func:as_stored_value",
      "func:discard",
      "func:on_add",
      "func:on_change",
      "func:on_discard",
      "func:sync_from_storage",
      "func:topic"
    ],
    "old_files": [
      "sets.py_deepseek_3fd4987d.py"
    ],
    "new_files": [
      "sets_3f50ca.py"
    ]
  },
  {
    "file_signature": [
      "class:ForkMeta",
      "class:quoted_str",
      "func:_check_current_version",
      "func:_decorator",
      "func:_get_available_phases",
      "func:_get_basic_dict",
      "func:_get_preset_targets",
      "func:_get_run_phases",
      "func:_prepare_state",
      "func:_run_test_case_with_phases",
      "func:_wrapper",
      "func:always_bls",
      "func:bls_switch",
      "func:config_fork_epoch_overrides",
      "func:deco",
      "func:decorator",
      "func:default_activation_threshold",
      "func:default_balances",
      "func:default_balances_electra",
      "func:description",
      "func:disable_process_reveal_deadlines",
      "func:dump_skipping_message",
      "func:entry",
      "func:expect_assertion_error",
      "func:get_copy_of_spec",
      "func:large_validator_set",
      "func:low_balances",
      "func:low_single_balance",
      "func:misc_balances",
      "func:misc_balances_electra",
      "func:misc_balances_in_default_range_with_many_validators",
      "func:never_bls",
      "func:only_generator",
      "func:post_tag",
      "func:pre_tag",
      "func:scaled_churn_balances_equal_activation_churn_limit",
      "func:scaled_churn_balances_exceed_activation_churn_limit",
      "func:scaled_churn_balances_exceed_activation_exit_churn_limit",
      "func:scaled_churn_balances_min_churn_limit",
      "func:set_fork_metas",
      "func:single_phase",
      "func:spec_configured_state_test",
      "func:spec_state_test",
      "func:spec_state_test_with_matching_config",
      "func:spec_test",
      "func:spec_with_config_overrides",
      "func:with_all_phases",
      "func:with_all_phases_except",
      "func:with_all_phases_from",
      "func:with_all_phases_from_except",
      "func:with_all_phases_from_to",
      "func:with_config_overrides",
      "func:with_custom_state",
      "func:with_fork_metas",
      "func:with_matching_spec_config",
      "func:with_phases",
      "func:with_presets",
      "func:with_test_suite_name",
      "func:wrapper",
      "func:yield_fork_meta",
      "func:zero_activation_threshold"
    ],
    "old_files": [
      "context.py_deepseek_a835034c.py"
    ],
    "new_files": [
      "context_54b9a9.py"
    ]
  },
  {
    "file_signature": [
      "class:IFTTTAlarmPanel",
      "func:__init__",
      "func:_check_code",
      "func:alarm_arm_away",
      "func:alarm_arm_home",
      "func:alarm_arm_night",
      "func:alarm_disarm",
      "func:code_format",
      "func:push_alarm_state",
      "func:set_alarm_state",
      "func:setup_platform"
    ],
    "old_files": [
      "alarm_control_panel.py_deepseek_074d971d.py"
    ],
    "new_files": [
      "alarm_control_panel_0476ed.py"
    ]
  },
  {
    "file_signature": [
      "class:Cyclist",
      "func:__init__",
      "func:follow",
      "func:get_height",
      "func:get_mean_maximum_power",
      "func:get_position",
      "func:get_remaining_energy",
      "func:get_weight",
      "func:increase_fatigue",
      "func:recover",
      "func:reset",
      "func:set_height",
      "func:set_mean_maximum_power",
      "func:set_pace",
      "func:set_position",
      "func:set_weight",
      "func:update_cda",
      "func:update_total_energy"
    ],
    "old_files": [
      "cyclist.py_deepseek_a9eea13e.py"
    ],
    "new_files": [
      "cyclist_8fa926.py"
    ]
  },
  {
    "file_signature": [
      "class:AreaRegistryEntrySnapshot",
      "class:ConfigEntrySnapshot",
      "class:DeviceRegistryEntrySnapshot",
      "class:EntityRegistryEntrySnapshot",
      "class:FlowResultSnapshot",
      "class:HomeAssistantSnapshotExtension",
      "class:HomeAssistantSnapshotSerializer",
      "class:IssueRegistryItemSnapshot",
      "class:StateSnapshot",
      "class:_ANY",
      "class:_FakePytestItem",
      "class:_FakePytestObject",
      "class:_IntFlagWrapper",
      "func:__init__",
      "func:__repr__",
      "func:_merge_serialized_collections",
      "func:_merge_serialized_report",
      "func:_remove_created_and_modified_at",
      "func:_serializable_area_registry_entry",
      "func:_serializable_config_entry",
      "func:_serializable_conversation_result",
      "func:_serializable_device_registry_entry",
      "func:_serializable_entity_registry_entry",
      "func:_serializable_flow_result",
      "func:_serializable_issue_registry_entry",
      "func:_serializable_state",
      "func:_serialize",
      "func:_serialize_collections",
      "func:_serialize_report",
      "func:dirname",
      "func:override_syrupy_finish"
    ],
    "old_files": [
      "syrupy.py_deepseek_bab28c01.py"
    ],
    "new_files": [
      "syrupy_b69260.py"
    ]
  },
  {
    "file_signature": [
      "func:_async_get_allowed_states",
      "func:_cached_template",
      "func:_error_listener",
      "func:_forward_entity_changes",
      "func:_forward_events_check_permissions",
      "func:_forward_events_unconditional",
      "func:_send_handle_entities_init_response",
      "func:_send_handle_get_states_response",
      "func:_serialize_entity_sources",
      "func:_template_listener",
      "func:_thread_safe_error_listener",
      "func:async_register_commands",
      "func:forward_bootstrap_integrations",
      "func:forward_triggers",
      "func:handle_entity_source",
      "func:handle_fire_event",
      "func:handle_get_config",
      "func:handle_get_states",
      "func:handle_integration_setup_info",
      "func:handle_ping",
      "func:handle_subscribe_bootstrap_integrations",
      "func:handle_subscribe_entities",
      "func:handle_subscribe_events",
      "func:handle_supported_features",
      "func:handle_unsubscribe_events",
      "func:pong_message"
    ],
    "old_files": [
      "commands.py_deepseek_472ecc5a.py"
    ],
    "new_files": [
      "commands_33f6b3.py"
    ]
  },
  {
    "file_signature": [
      "class:MyUplinkDevicePointSensor",
      "class:MyUplinkEnumRawSensor",
      "class:MyUplinkEnumSensor",
      "func:__init__",
      "func:get_description",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_deepseek_82288060.py"
    ],
    "new_files": [
      "sensor_48e774.py"
    ]
  },
  {
    "file_signature": [
      "class:InternalServerError",
      "class:SmokeTestApplication",
      "func:__init__",
      "func:_assert_contains_access_control_allow_methods",
      "func:_create_wrapped_retry_function",
      "func:_delete_app",
      "func:_deploy_app",
      "func:_deploy_with_retries",
      "func:_get_error_code_from_exception",
      "func:_get_json",
      "func:_get_resource_id",
      "func:_inject_app_name",
      "func:_send_request",
      "func:_wait_for_stablize",
      "func:_wrapped_with_retry",
      "func:apig_client",
      "func:get_json",
      "func:get_response",
      "func:options_response",
      "func:post_response",
      "func:put_response",
      "func:redeploy_once",
      "func:rest_api_id",
      "func:retry",
      "func:smoke_test_app",
      "func:test_api_key_required_fails_with_no_key",
      "func:test_can_handle_charset",
      "func:test_can_have_nested_routes",
      "func:test_can_raise_bad_request",
      "func:test_can_raise_not_found",
      "func:test_can_read_json_body_on_post",
      "func:test_can_return_default_binary_data_to_a_browser",
      "func:test_can_round_trip_binary",
      "func:test_can_round_trip_binary_custom_content_type",
      "func:test_can_route_multiple_methods_in_one_view",
      "func:test_can_support_cors",
      "func:test_can_support_custom_cors",
      "func:test_can_use_builtin_custom_auth",
      "func:test_can_use_shared_auth",
      "func:test_custom_response",
      "func:test_empty_raw_body",
      "func:test_form_encoded_content_type",
      "func:test_multi_doc_mapped_in_api",
      "func:test_multifile_support",
      "func:test_path_params_mapped_in_api",
      "func:test_redeploy_change_route_info",
      "func:test_redeploy_changed_function",
      "func:test_redeploy_new_function",
      "func:test_redeploy_no_change_view",
      "func:test_redeploy_view_deleted",
      "func:test_returns_simple_response",
      "func:test_single_doc_mapped_in_api",
      "func:test_supports_path_params",
      "func:test_supports_post",
      "func:test_supports_put",
      "func:test_supports_shared_routes",
      "func:test_to_dict_is_also_json_serializable",
      "func:test_unexpected_error_raises_500_in_prod_mode",
      "func:test_websocket_lifecycle",
      "func:url",
      "func:websocket_api_id",
      "func:websocket_connect_url"
    ],
    "old_files": [
      "test_features.py_deepseek_6df2353e.py"
    ],
    "new_files": [
      "test_features_a57fa5.py"
    ]
  },
  {
    "file_signature": [
      "class:GetUsers",
      "class:SubscriberHandler",
      "func:__call__",
      "func:__init__",
      "func:build_attachment",
      "func:build_avatar",
      "func:build_defaultstream",
      "func:build_direct_message_group",
      "func:build_direct_message_group_subscriptions",
      "func:build_message",
      "func:build_personal_subscriptions",
      "func:build_realm",
      "func:build_realm_emoji",
      "func:build_recipient",
      "func:build_recipients",
      "func:build_stream",
      "func:build_stream_subscriptions",
      "func:build_subscription",
      "func:build_user_message",
      "func:build_user_profile",
      "func:build_usermessages",
      "func:build_zerver_realm",
      "func:create_converted_data_files",
      "func:get_avatar",
      "func:get_emojis",
      "func:get_uploads",
      "func:get_users",
      "func:long_term_idle_helper",
      "func:make_subscriber_map",
      "func:make_user_messages",
      "func:process_avatars",
      "func:process_emojis",
      "func:process_uploads",
      "func:run_parallel_wrapper",
      "func:set_info",
      "func:validate_user_emails_for_import",
      "func:wrapping_function"
    ],
    "old_files": [
      "import_util.py_deepseek_1732c302.py"
    ],
    "new_files": [
      "import_util_c23496.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoGeolocationEvent",
      "class:DemoManager",
      "func:__init__",
      "func:_generate_random_event",
      "func:_init_regular_updates",
      "func:_update",
      "func:distance",
      "func:latitude",
      "func:longitude",
      "func:setup_platform",
      "func:source",
      "func:unit_of_measurement"
    ],
    "old_files": [
      "geo_location.py_deepseek_c0edfff6.py"
    ],
    "new_files": [
      "geo_location_9da493.py"
    ]
  },
  {
    "file_signature": [
      "class:ISYAuxControlIndexSelectEntity",
      "class:ISYBacklightSelectEntity",
      "class:ISYRampRateSelectEntity",
      "func:__init__",
      "func:async_on_memory_write",
      "func:current_option",
      "func:time_string"
    ],
    "old_files": [
      "select.py_deepseek_1d2f97a4.py"
    ],
    "new_files": [
      "select_d2495d.py"
    ]
  },
  {
    "file_signature": [
      "class:ElkAttachedEntity",
      "class:ElkEntity",
      "func:__init__",
      "func:_element_callback",
      "func:_element_changed",
      "func:available",
      "func:create_elk_entities",
      "func:device_info",
      "func:extra_state_attributes",
      "func:initial_attrs",
      "func:unique_id"
    ],
    "old_files": [
      "entity.py_deepseek_120bd541.py"
    ],
    "new_files": [
      "entity_e12cd0.py"
    ]
  },
  {
    "file_signature": [
      "class:ShellyReceiver",
      "func:__init__",
      "func:async_create_issue_unsupported_firmware",
      "func:async_remove_orphaned_entities",
      "func:async_remove_shelly_entity",
      "func:async_remove_shelly_rpc_entities",
      "func:brightness_to_percentage",
      "func:get_block_channel_name",
      "func:get_block_device_sleep_period",
      "func:get_block_entity_name",
      "func:get_block_input_triggers",
      "func:get_device_entry_gen",
      "func:get_device_uptime",
      "func:get_host",
      "func:get_http_port",
      "func:get_info_auth",
      "func:get_info_gen",
      "func:get_model_name",
      "func:get_number_of_channels",
      "func:get_release_url",
      "func:get_rpc_channel_name",
      "func:get_rpc_device_wakeup_period",
      "func:get_rpc_entity_name",
      "func:get_rpc_input_triggers",
      "func:get_rpc_key_ids",
      "func:get_rpc_key_instances",
      "func:get_rpc_ws_url",
      "func:get_shbtn_input_triggers",
      "func:get_virtual_component_ids",
      "func:is_block_channel_type_light",
      "func:is_block_momentary_input",
      "func:is_rpc_channel_type_light",
      "func:is_rpc_momentary_input",
      "func:is_rpc_thermostat_internal_actuator",
      "func:is_rpc_thermostat_mode",
      "func:is_rpc_wifi_stations_disabled",
      "func:mac_address_from_name",
      "func:percentage_to_brightness",
      "func:shutdown_listener",
      "func:update_device_fw_info"
    ],
    "old_files": [
      "utils.py_deepseek_c6276c89.py"
    ],
    "new_files": [
      "utils_1a8fd5.py"
    ]
  },
  {
    "file_signature": [
      "class:Actor",
      "class:AsyncIterableActor",
      "class:AwaitableActor",
      "func:__aiter__",
      "func:__await__",
      "func:__init__",
      "func:__repr__",
      "func:cancel",
      "func:label",
      "func:traceback"
    ],
    "old_files": [
      "actor.py_deepseek_fd81ae30.py"
    ],
    "new_files": [
      "actor_865029.py"
    ]
  },
  {
    "file_signature": [
      "class:ConstantLearningRateScheduler",
      "class:ConstantWithWarmupLearningRateScheduler",
      "class:CosineHardRestartsWithWarmupLearningRateScheduler",
      "class:CosineWithWarmupLearningRateScheduler",
      "class:LearningRateScheduler",
      "class:_PyTorchLearningRateSchedulerWithMetricsWrapper",
      "class:_PyTorchLearningRateSchedulerWrapper",
      "func:__init__",
      "func:get_values",
      "func:load_state_dict",
      "func:state_dict",
      "func:step"
    ],
    "old_files": [
      "learning_rate_scheduler.py_deepseek_290a2bf8.py"
    ],
    "new_files": [
      "learning_rate_scheduler_b929ac.py"
    ]
  },
  {
    "file_signature": [
      "func:_decorate_class_members_with_logs",
      "func:_get_logger",
      "func:_is_debug_enable",
      "func:_is_log_info",
      "func:_is_under_info",
      "func:_log_debug",
      "func:_log_enter_to_function",
      "func:_log_exit_of_function",
      "func:_make_decorator",
      "func:_wrapper_func",
      "func:decorator",
      "func:decorator_class",
      "func:decorator_func",
      "func:log"
    ],
    "old_files": [
      "logger_utils.py_deepseek_240f4189.py"
    ],
    "new_files": [
      "logger_utils_ef5455.py"
    ]
  },
  {
    "file_signature": [
      "class:Agent",
      "class:PowerSystem",
      "func:__init__",
      "func:_simulate_power_system",
      "func:block",
      "func:block24",
      "func:deblock24",
      "func:dimension",
      "func:get_num_vars",
      "func:get_output",
      "func:make_plots",
      "func:set_parameters"
    ],
    "old_files": [
      "core.py_deepseek_9f7a19d9.py"
    ],
    "new_files": [
      "core_a86387.py"
    ]
  },
  {
    "file_signature": [
      "class:MemoryLockManager",
      "class:_LockInfo",
      "func:__init__",
      "func:__new__",
      "func:_expire_lock",
      "func:acquire_lock",
      "func:is_lock_holder",
      "func:is_locked",
      "func:release_lock",
      "func:wait_for_lock"
    ],
    "old_files": [
      "memory.py_deepseek_ca2ce909.py"
    ],
    "new_files": [
      "memory_df2954.py"
    ]
  },
  {
    "file_signature": [
      "class:HassImportsFormatChecker",
      "class:NamespaceAlias",
      "class:ObsoleteImportMatch",
      "func:__init__",
      "func:_check_for_component_root_import",
      "func:_check_for_constant_alias",
      "func:_check_for_relative_import",
      "func:_visit_importfrom_relative",
      "func:register",
      "func:visit_import",
      "func:visit_importfrom",
      "func:visit_module"
    ],
    "old_files": [
      "hass_imports.py_deepseek_8670ad81.py"
    ],
    "new_files": [
      "hass_imports_8c6b50.py"
    ]
  },
  {
    "file_signature": [
      "class:ISYEnableSwitchEntity",
      "class:ISYSwitchEntity",
      "class:ISYSwitchEntityDescription",
      "class:ISYSwitchProgramEntity",
      "func:__init__",
      "func:async_on_update",
      "func:available",
      "func:icon",
      "func:is_on"
    ],
    "old_files": [
      "switch.py_deepseek_4b72e2c9.py"
    ],
    "new_files": [
      "switch_ebb0e1.py"
    ]
  },
  {
    "file_signature": [
      "class:EnvFilterSettingsSource",
      "class:FilteredDotEnvSettingsSource",
      "class:PrefectTomlConfigSettingsSource",
      "class:ProfileSettingsTomlLoader",
      "class:PyprojectTomlConfigSettingsSource",
      "class:TomlConfigSettingsSourceBase",
      "func:__call__",
      "func:__init__",
      "func:_get_default_profile",
      "func:_get_profiles_path",
      "func:_get_profiles_path_from_toml",
      "func:_is_test_mode",
      "func:_load_profile_settings",
      "func:_read_file",
      "func:get_field_value"
    ],
    "old_files": [
      "sources.py_deepseek_61b6f7ff.py"
    ],
    "new_files": [
      "sources_dfba5e.py"
    ]
  },
  {
    "file_signature": [
      "class:TestClient",
      "class:WebSocketDenialResponse",
      "class:WebSocketTestSession",
      "class:_AsyncBackend",
      "class:_TestClientTransport",
      "class:_Upgrade",
      "class:_WrapASGI2",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_is_asgi3",
      "func:_portal_factory",
      "func:_raise_on_close",
      "func:close",
      "func:delete",
      "func:get",
      "func:handle_request",
      "func:head",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:receive",
      "func:receive_bytes",
      "func:receive_json",
      "func:receive_text",
      "func:request",
      "func:reset_portal",
      "func:send",
      "func:send_bytes",
      "func:send_json",
      "func:send_text",
      "func:wait_shutdown",
      "func:websocket_connect"
    ],
    "old_files": [
      "testclient.py_deepseek_b53c0624.py"
    ],
    "new_files": [
      "testclient_6e1da5.py"
    ]
  },
  {
    "file_signature": [
      "func:_normalise_json",
      "func:_normalise_json_ordered",
      "func:_pull_field",
      "func:_pull_records",
      "func:_recursive_extract",
      "func:_simple_json_normalize",
      "func:convert_to_line_delimits",
      "func:json_normalize",
      "func:nested_to_record"
    ],
    "old_files": [
      "_normalize.py_deepseek_9c1856db.py"
    ],
    "new_files": [
      "_normalize_0877ea.py"
    ]
  },
  {
    "file_signature": [
      "class:AutomowerSensorEntity",
      "class:AutomowerSensorEntityDescription",
      "class:WorkAreaSensorEntity",
      "class:WorkAreaSensorEntityDescription",
      "func:__init__",
      "func:_async_add_new_devices",
      "func:_async_add_new_work_areas",
      "func:_get_current_work_area_dict",
      "func:_get_current_work_area_name",
      "func:_get_error_string",
      "func:_get_work_area_names",
      "func:extra_state_attributes",
      "func:native_value",
      "func:options",
      "func:translation_key"
    ],
    "old_files": [
      "sensor.py_deepseek_d9eb2569.py"
    ],
    "new_files": [
      "sensor_457aac.py"
    ]
  },
  {
    "file_signature": [
      "class:StrategyTestV3",
      "class:StrategyTestV3Futures",
      "func:adjust_trade_position",
      "func:bot_start",
      "func:informative_pairs",
      "func:leverage",
      "func:populate_entry_trend",
      "func:populate_exit_trend",
      "func:populate_indicators",
      "func:protections"
    ],
    "old_files": [
      "strategy_test_v3.py_deepseek_49c159a8.py"
    ],
    "new_files": [
      "strategy_test_v3_251abc.py"
    ]
  },
  {
    "file_signature": [
      "class:TextualEntailmentSuite",
      "func:__init__",
      "func:_default_coreference_tests",
      "func:_default_fairness_tests",
      "func:_default_logic_tests",
      "func:_default_negation_tests",
      "func:_default_ner_tests",
      "func:_default_robustness_tests",
      "func:_default_taxonomy_tests",
      "func:_default_temporal_tests",
      "func:_default_tests",
      "func:_default_vocabulary_tests",
      "func:_format_failing_examples",
      "func:_prediction_and_confidence_scores",
      "func:_setup_editor",
      "func:_wrap_apply_to_each",
      "func:contractions",
      "func:new_fn",
      "func:preds_and_confs_fn",
      "func:punctuation",
      "func:typos"
    ],
    "old_files": [
      "textual_entailment_suite.py_deepseek_657c92f3.py"
    ],
    "new_files": [
      "textual_entailment_suite_19763e.py"
    ]
  },
  {
    "file_signature": [
      "func:create_node_from_fixture",
      "func:load_and_parse_node_fixture",
      "func:load_node_fixture",
      "func:set_node_attribute",
      "func:snapshot_matter_entities"
    ],
    "old_files": [
      "common.py_deepseek_25a8206c.py"
    ],
    "new_files": [
      "common_d0ad99.py"
    ]
  },
  {
    "file_signature": [
      "class:EnvisalinkAlarm",
      "func:__init__",
      "func:alarm_state",
      "func:async_alarm_keypress",
      "func:async_alarm_keypress_handler",
      "func:async_update_callback"
    ],
    "old_files": [
      "alarm_control_panel.py_deepseek_8577ea27.py"
    ],
    "new_files": [
      "alarm_control_panel_7f2de8.py"
    ]
  },
  {
    "file_signature": [
      "class:EtreeXMLFormatter",
      "class:LxmlXMLFormatter",
      "class:_BaseXMLFormatter",
      "func:__init__",
      "func:_build_attribs",
      "func:_build_elems",
      "func:_build_tree",
      "func:_convert_empty_str_key",
      "func:_get_flat_col_name",
      "func:_get_prefix_uri",
      "func:_handle_indexes",
      "func:_other_namespaces",
      "func:_prettify_tree",
      "func:_process_dataframe",
      "func:_sub_element_cls",
      "func:_transform_doc",
      "func:_validate_columns",
      "func:_validate_encoding",
      "func:write_output"
    ],
    "old_files": [
      "xml.py_deepseek_3e69baff.py"
    ],
    "new_files": [
      "xml_bf31a3.py"
    ]
  },
  {
    "file_signature": [
      "class:MiroboVacuum",
      "func:__init__",
      "func:_handle_coordinator_update",
      "func:activity",
      "func:battery_level",
      "func:extra_state_attributes",
      "func:fan_speed",
      "func:fan_speed_list",
      "func:timers"
    ],
    "old_files": [
      "vacuum.py_deepseek_6c2556ba.py"
    ],
    "new_files": [
      "vacuum_d388a1.py"
    ]
  },
  {
    "file_signature": [
      "class:Channel",
      "class:SerializedChannel",
      "func:__aiter__",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:_clone",
      "func:_clone_args",
      "func:_compile_deliver",
      "func:_contribute_to_schema",
      "func:_create_event",
      "func:_future_message_to_event",
      "func:_get_default_schema",
      "func:_object_id_as_hex",
      "func:_throw",
      "func:as_future_message",
      "func:clone",
      "func:clone_using_queue",
      "func:derive",
      "func:empty",
      "func:get_topic_name",
      "func:label",
      "func:on_stop_iteration",
      "func:prepare_headers",
      "func:prepare_key",
      "func:prepare_value",
      "func:queue",
      "func:send_soon",
      "func:stream",
      "func:subscriber_count"
    ],
    "old_files": [
      "channels.py_deepseek_adb5b020.py"
    ],
    "new_files": [
      "channels_8e6ab8.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseActions",
      "class:BaseEnvironment",
      "class:Positions",
      "func:__init__",
      "func:_get_observation",
      "func:_is_valid",
      "func:_update_history",
      "func:_update_total_profit",
      "func:_update_unrealized_total_profit",
      "func:action_masks",
      "func:add_entry_fee",
      "func:add_exit_fee",
      "func:calculate_reward",
      "func:current_price",
      "func:get_actions",
      "func:get_attr",
      "func:get_trade_duration",
      "func:get_unrealized_profit",
      "func:is_tradesignal",
      "func:opposite",
      "func:reset",
      "func:reset_env",
      "func:reset_tensorboard_log",
      "func:seed",
      "func:set_action_space",
      "func:step",
      "func:tensorboard_log"
    ],
    "old_files": [
      "BaseEnvironment.py_deepseek_5f8d69fa.py"
    ],
    "new_files": [
      "BaseEnvironment_875d27.py"
    ]
  },
  {
    "file_signature": [
      "class:OctoPrintEstimatedFinishTimeSensor",
      "class:OctoPrintJobPercentageSensor",
      "class:OctoPrintSensorBase",
      "class:OctoPrintStartTimeSensor",
      "class:OctoPrintStatusSensor",
      "class:OctoPrintTemperatureSensor",
      "func:__init__",
      "func:_is_printer_printing",
      "func:async_add_tool_sensors",
      "func:available",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_deepseek_58ff999d.py"
    ],
    "new_files": [
      "sensor_ab37f6.py"
    ]
  },
  {
    "file_signature": [
      "class:RobotPmsPaddingPayloadEnum",
      "class:RobotScanResultEnum",
      "class:RobotServerResponsesAnalyzer",
      "class:ServerDoesNotSupportRsa",
      "class:ServerResponseToRobot",
      "class:_RobotTlsRecordPayloads",
      "func:__init__",
      "func:_compute_pms_padding",
      "func:_get_rsa_parameters",
      "func:_run_oracle_detection",
      "func:_send_robot_payload",
      "func:compute_result_enum",
      "func:do_handshake_with_robot",
      "func:get_client_key_exchange_record",
      "func:get_finished_record_bytes",
      "func:test_robot"
    ],
    "old_files": [
      "_robot_tester.py_deepseek_1de23e0a.py"
    ],
    "new_files": [
      "_robot_tester_77d42f.py"
    ]
  },
  {
    "file_signature": [
      "class:DatabaseCatalogSchema",
      "class:SupersetRoleListWidget",
      "class:SupersetSecurityListWidget",
      "class:SupersetSecurityManager",
      "func:__init__",
      "func:_delete_pvm_on_sqla_event",
      "func:_delete_vm_database_access",
      "func:_find_permission_on_sqla_event",
      "func:_find_view_menu_on_sqla_event",
      "func:_get_all_pvms",
      "func:_get_current_epoch_time",
      "func:_get_guest_token_jwt_audience",
      "func:_get_pvms_from_builtin_role",
      "func:_insert_pvm_on_sqla_event",
      "func:_is_accessible_to_all",
      "func:_is_admin_only",
      "func:_is_admin_pvm",
      "func:_is_alpha_only",
      "func:_is_alpha_pvm",
      "func:_is_gamma_pvm",
      "func:_is_sql_lab_only",
      "func:_is_sql_lab_pvm",
      "func:_is_user_defined_permission",
      "func:_update_dataset_catalog_schema_perm",
      "func:_update_dataset_perm",
      "func:_update_vm_database_access",
      "func:_update_vm_datasources_access",
      "func:can_access",
      "func:can_access_all_databases",
      "func:can_access_all_datasources",
      "func:can_access_all_queries",
      "func:can_access_catalog",
      "func:can_access_chart",
      "func:can_access_dashboard",
      "func:can_access_database",
      "func:can_access_datasource",
      "func:can_access_schema",
      "func:can_access_table",
      "func:clean_perms",
      "func:copy_role",
      "func:create_custom_permissions",
      "func:create_guest_access_token",
      "func:create_login_manager",
      "func:create_missing_perms",
      "func:database_after_delete",
      "func:database_after_insert",
      "func:database_after_update",
      "func:dataset_after_delete",
      "func:dataset_after_insert",
      "func:dataset_before_update",
      "func:find_roles_by_id",
      "func:freeze_value",
      "func:get_accessible_databases",
      "func:get_anonymous_user",
      "func:get_catalog_perm",
      "func:get_catalogs_accessible_by_user",
      "func:get_chart_access_error_object",
      "func:get_current_guest_user_if_guest",
      "func:get_dashboard_access_error_object",
      "func:get_database_perm",
      "func:get_dataset_perm",
      "func:get_datasource_access_error_msg",
      "func:get_datasource_access_error_object",
      "func:get_datasource_access_link",
      "func:get_datasources_accessible_by_user",
      "func:get_exclude_users_from_lists",
      "func:get_guest_rls_filters",
      "func:get_guest_rls_filters_str",
      "func:get_guest_user_from_request",
      "func:get_guest_user_from_token",
      "func:get_rls_cache_key",
      "func:get_rls_filters",
      "func:get_rls_sorted",
      "func:get_schema_perm",
      "func:get_schemas_accessible_by_user",
      "func:get_table_access_error_msg",
      "func:get_table_access_error_object",
      "func:get_table_access_link",
      "func:get_user_by_username",
      "func:get_user_datasources",
      "func:get_user_roles",
      "func:has_guest_access",
      "func:is_admin",
      "func:is_guest_user",
      "func:is_owner",
      "func:merge_perm",
      "func:merge_pv",
      "func:on_permission_after_insert",
      "func:on_permission_view_after_delete",
      "func:on_permission_view_after_insert",
      "func:on_role_after_update",
      "func:on_view_menu_after_insert",
      "func:on_view_menu_after_update",
      "func:parse_jwt_guest_token",
      "func:query_context_modified",
      "func:raise_for_access",
      "func:raise_for_ownership",
      "func:request_loader",
      "func:set_role",
      "func:sync_role_definitions",
      "func:user_view_menu_names",
      "func:validate_guest_token_resources"
    ],
    "old_files": [
      "manager.py_deepseek_7ab81e07.py"
    ],
    "new_files": [
      "manager_2630e6.py"
    ]
  },
  {
    "file_signature": [
      "class:AutomaticRunInput",
      "class:BaseRunInput",
      "class:GetAutomaticInputHandler",
      "class:GetInputHandler",
      "class:RunInput",
      "class:RunInputMetadata",
      "func:__aiter__",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:keyset_from_base_key",
      "func:keyset_from_paused_state",
      "func:keyset_from_type",
      "func:load_from_flow_run_input",
      "func:metadata",
      "func:receive",
      "func:receive_input",
      "func:run_input_subclass_from_type",
      "func:subclass_from_base_model_type",
      "func:subclass_from_type",
      "func:to_instance",
      "func:with_initial_data"
    ],
    "old_files": [
      "run_input.py_deepseek_abe94e1b.py"
    ],
    "new_files": [
      "run_input_54b93c.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseWindow",
      "class:BaseWindowGroupby",
      "class:Rolling",
      "class:RollingAndExpandingMixin",
      "class:RollingGroupby",
      "class:Window",
      "func:__getattr__",
      "func:__init__",
      "func:__iter__",
      "func:__repr__",
      "func:_apply",
      "func:_apply_columnwise",
      "func:_apply_pairwise",
      "func:_apply_series",
      "func:_apply_tablewise",
      "func:_center_window",
      "func:_check_window_bounds",
      "func:_create_data",
      "func:_dir_additions",
      "func:_generate_cython_apply_func",
      "func:_get_window_indexer",
      "func:_gotitem",
      "func:_index_array",
      "func:_insert_on_column",
      "func:_make_numeric_only",
      "func:_numba_apply",
      "func:_prep_values",
      "func:_raise_monotonic_error",
      "func:_resolve_output",
      "func:_slice_axis_for_step",
      "func:_validate",
      "func:_validate_datetimelike_monotonic",
      "func:_validate_numeric_only",
      "func:aggregate",
      "func:apply",
      "func:apply_func",
      "func:calc",
      "func:corr",
      "func:corr_func",
      "func:count",
      "func:cov",
      "func:cov_func",
      "func:first",
      "func:homogeneous_func",
      "func:kurt",
      "func:last",
      "func:max",
      "func:mean",
      "func:median",
      "func:min",
      "func:pipe",
      "func:quantile",
      "func:rank",
      "func:sem",
      "func:skew",
      "func:std",
      "func:sum",
      "func:var",
      "func:zsqrt_func"
    ],
    "old_files": [
      "rolling.py_deepseek_ef1f5619.py"
    ],
    "new_files": [
      "rolling_dcc27f.py"
    ]
  },
  {
    "file_signature": [
      "func:ensure_list_vars",
      "func:get_var_names",
      "func:lreshape",
      "func:melt",
      "func:melt_stub",
      "func:wide_to_long"
    ],
    "old_files": [
      "melt.py_deepseek_713be946.py"
    ],
    "new_files": [
      "melt_24cac4.py"
    ]
  },
  {
    "file_signature": [
      "class:Automation",
      "class:AutomationCore",
      "class:AutomationCreate",
      "class:AutomationPartialUpdate",
      "class:AutomationSort",
      "class:AutomationUpdate",
      "class:CompositeTrigger",
      "class:CompoundTrigger",
      "class:EventTrigger",
      "class:Firing",
      "class:Posture",
      "class:ResourceTrigger",
      "class:SequenceTrigger",
      "class:Trigger",
      "class:TriggerState",
      "class:TriggeredAction",
      "func:__init__",
      "func:_set_parent",
      "func:all_events",
      "func:all_firings",
      "func:all_triggers",
      "func:automation",
      "func:bucketing_key",
      "func:child_trigger_ids",
      "func:covers",
      "func:covers_resources",
      "func:create_automation_state_change_event",
      "func:enforce_minimum_within_for_proactive_triggers",
      "func:event_pattern",
      "func:expected_firing_order",
      "func:expects",
      "func:idempotency_key",
      "func:immediate",
      "func:meets_threshold",
      "func:model_validate",
      "func:num_expected_firings",
      "func:parent",
      "func:prevent_run_deployment_loops",
      "func:ready_to_fire",
      "func:reset_ids",
      "func:starts_after",
      "func:trigger_by_id",
      "func:triggers",
      "func:triggers_of_type",
      "func:validate_require",
      "func:validate_trigger_states"
    ],
    "old_files": [
      "automations.py_deepseek_7478a9fa.py"
    ],
    "new_files": [
      "automations_d10ae8.py"
    ]
  },
  {
    "file_signature": [
      "class:TagPlugin",
      "class:TagsTestCase",
      "func:post_receive",
      "func:pre_receive",
      "func:setUp",
      "func:status_change",
      "func:take_action",
      "func:tearDown",
      "func:test_tag_alert"
    ],
    "old_files": [
      "test_tags.py_deepseek_b57b2b15.py"
    ],
    "new_files": [
      "test_tags_ccc8b0.py"
    ]
  },
  {
    "file_signature": [
      "class:BlackRunner",
      "class:BlackTestCase",
      "class:FakeContext",
      "class:FakeParameter",
      "func:__init__",
      "func:cache_dir",
      "func:err",
      "func:event_loop",
      "func:invokeBlack",
      "func:out",
      "func:test_async_as_identifier",
      "func:test_detect_debug_f_strings",
      "func:test_detect_pos_only_arguments",
      "func:test_empty_ff",
      "func:test_expression_diff",
      "func:test_expression_diff_with_color",
      "func:test_expression_ff",
      "func:test_false_positive_symlink_output_issue_3384",
      "func:test_lib2to3_parse",
      "func:test_one_empty_line",
      "func:test_one_empty_line_ff",
      "func:test_pep_572_version_detection",
      "func:test_pep_695_version_detection",
      "func:test_pep_696_version_detection",
      "func:test_piping",
      "func:test_piping_diff",
      "func:test_piping_diff_with_color",
      "func:test_python37",
      "func:test_report_normal",
      "func:test_report_quiet",
      "func:test_report_verbose",
      "func:test_skip_magic_trailing_comma",
      "func:test_skip_source_first_line",
      "func:test_skip_source_first_line_when_mixing_newlines",
      "func:test_string_quotes",
      "func:test_tab_comment_indentation"
    ],
    "old_files": [
      "test_black.py_deepseek_ae8fadad.py"
    ],
    "new_files": [
      "test_black_2d705a.py"
    ]
  },
  {
    "file_signature": [
      "class:DHCPWatcher",
      "class:DeviceTrackerRegisteredWatcher",
      "class:DeviceTrackerWatcher",
      "class:DhcpMatchers",
      "class:NetworkWatcher",
      "class:RediscoveryWatcher",
      "class:WatcherBase",
      "func:__init__",
      "func:_async_process_device_data",
      "func:_async_process_device_event",
      "func:_async_process_device_state",
      "func:_async_process_dhcp_request",
      "func:_async_stop",
      "func:_compile_fnmatch",
      "func:_handle_config_entry_removed",
      "func:_memorized_fnmatch",
      "func:async_index_integration_matchers",
      "func:async_process_client",
      "func:async_start",
      "func:async_start_discover",
      "func:async_stop"
    ],
    "old_files": [
      "__init__.py_deepseek_4cc6b6fa.py"
    ],
    "new_files": [
      "__init___7c4947.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockBinarySensor",
      "class:BlockBinarySensorDescription",
      "class:BlockSleepingBinarySensor",
      "class:RestBinarySensor",
      "class:RestBinarySensorDescription",
      "class:RpcBinarySensor",
      "class:RpcBinarySensorDescription",
      "class:RpcBluTrvBinarySensor",
      "class:RpcSleepingBinarySensor",
      "func:__init__",
      "func:is_on"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_3cc050f1.py"
    ],
    "new_files": [
      "binary_sensor_88cfce.py"
    ]
  },
  {
    "file_signature": [
      "class:BlueprintManager",
      "class:Request",
      "class:Response",
      "class:Web",
      "func:__init__",
      "func:_apply_blueprint",
      "func:_bytes_to_response",
      "func:_headers_serialize",
      "func:_quote_for_url",
      "func:_response_to_bytes",
      "func:_splitheader",
      "func:add",
      "func:add_static",
      "func:add_view",
      "func:apply",
      "func:body",
      "func:body_length",
      "func:bytes",
      "func:bytes_to_response",
      "func:can_read_body",
      "func:charset",
      "func:chunked",
      "func:compression",
      "func:content_length",
      "func:content_type",
      "func:cookies",
      "func:headers",
      "func:html",
      "func:init_server",
      "func:json",
      "func:keep_alive",
      "func:match_info",
      "func:query",
      "func:response_to_bytes",
      "func:route",
      "func:status",
      "func:text",
      "func:url",
      "func:url_for"
    ],
    "old_files": [
      "base.py_deepseek_d000ff4b.py"
    ],
    "new_files": [
      "base_34b940.py"
    ]
  },
  {
    "file_signature": [
      "class:Foo",
      "class:Model",
      "class:MyModel",
      "func:__call__",
      "func:__init__",
      "func:_equals",
      "func:test_annotated_field",
      "func:test_annotated_optional_field",
      "func:test_custom_init_signature",
      "func:test_custom_init_signature_with_no_var_kw",
      "func:test_does_not_use_reserved_word",
      "func:test_extra_allow_conflict",
      "func:test_extra_allow_conflict_custom_signature",
      "func:test_extra_allow_conflict_twice",
      "func:test_extra_allow_no_conflict",
      "func:test_generic_model_signature",
      "func:test_invalid_identifiers_signature",
      "func:test_model_signature",
      "func:test_optional_field",
      "func:test_signature_is_class_only",
      "func:test_use_field_name"
    ],
    "old_files": [
      "test_model_signature.py_deepseek_4509d167.py"
    ],
    "new_files": [
      "test_model_signature_86e541.py"
    ]
  },
  {
    "file_signature": [
      "class:GenericThermostat",
      "func:__init__",
      "func:_async_startup",
      "func:_async_switch_changed",
      "func:_async_update_temp",
      "func:_is_device_active",
      "func:current_temperature",
      "func:hvac_action",
      "func:hvac_mode",
      "func:max_temp",
      "func:min_temp",
      "func:precision",
      "func:target_temperature",
      "func:target_temperature_step"
    ],
    "old_files": [
      "climate.py_deepseek_e4d16686.py"
    ],
    "new_files": [
      "climate_588757.py"
    ]
  },
  {
    "file_signature": [
      "class:FormData",
      "func:__call__",
      "func:__init__",
      "func:_gen_form_data",
      "func:_gen_form_urlencoded",
      "func:add_field",
      "func:add_fields",
      "func:is_multipart"
    ],
    "old_files": [
      "formdata.py_deepseek_c529f9fe.py"
    ],
    "new_files": [
      "formdata_aebdbf.py"
    ]
  },
  {
    "file_signature": [
      "class:InComfortClimate",
      "func:__init__",
      "func:current_temperature",
      "func:extra_state_attributes",
      "func:hvac_action",
      "func:target_temperature"
    ],
    "old_files": [
      "climate.py_deepseek_9cd55e31.py"
    ],
    "new_files": [
      "climate_9505f4.py"
    ]
  },
  {
    "file_signature": [
      "func:_mock_blu_rtv_device",
      "func:_mock_rpc_device",
      "func:disconnected",
      "func:event",
      "func:events",
      "func:initialized",
      "func:mock_bluetooth",
      "func:mock_coap",
      "func:mock_light_set_state",
      "func:mock_white_light_set_state",
      "func:mock_ws_server",
      "func:online",
      "func:update",
      "func:update_reply"
    ],
    "old_files": [
      "conftest.py_deepseek_8f499602.py"
    ],
    "new_files": [
      "conftest_04471e.py"
    ]
  },
  {
    "file_signature": [
      "class:NeatoConnectedVacuum",
      "func:__init__",
      "func:clean_spot",
      "func:device_info",
      "func:extra_state_attributes",
      "func:locate",
      "func:neato_custom_cleaning",
      "func:pause",
      "func:return_to_base",
      "func:start",
      "func:stop",
      "func:update"
    ],
    "old_files": [
      "vacuum.py_deepseek_a1493f57.py"
    ],
    "new_files": [
      "vacuum_0ba5e2.py"
    ]
  },
  {
    "file_signature": [
      "class:HealthCheck",
      "class:HealthCheckMeta",
      "class:Phase",
      "class:Setting",
      "class:Verbosity",
      "class:duration",
      "class:settings",
      "class:settingsMeta",
      "class:settingsProperty",
      "func:__call__",
      "func:__delete__",
      "func:__doc__",
      "func:__get__",
      "func:__getattr__",
      "func:__init__",
      "func:__iter__",
      "func:__repr__",
      "func:__set__",
      "func:__setattr__",
      "func:_assign_default_internal",
      "func:_backend_validator",
      "func:_define_setting",
      "func:_max_examples_validator",
      "func:_validate_database",
      "func:_validate_deadline",
      "func:_validate_phases",
      "func:_validate_stateful_step_count",
      "func:all",
      "func:default",
      "func:get_profile",
      "func:is_in_ci",
      "func:load_profile",
      "func:local_settings",
      "func:lock_further_definitions",
      "func:note_deprecation",
      "func:register_profile",
      "func:show_changed",
      "func:validate_health_check_suppressions",
      "func:validator"
    ],
    "old_files": [
      "_settings.py_deepseek_461b9e31.py"
    ],
    "new_files": [
      "_settings_351566.py"
    ]
  },
  {
    "file_signature": [
      "func:_async_discovered_device",
      "func:_get_manager",
      "func:async_address_present",
      "func:async_ble_device_from_address",
      "func:async_discovered_service_info",
      "func:async_get_advertisement_callback",
      "func:async_get_fallback_availability_interval",
      "func:async_get_learned_advertising_interval",
      "func:async_get_scanner",
      "func:async_last_service_info",
      "func:async_rediscover_address",
      "func:async_register_callback",
      "func:async_register_scanner",
      "func:async_remove_scanner",
      "func:async_scanner_by_source",
      "func:async_scanner_count",
      "func:async_scanner_devices_by_address",
      "func:async_set_fallback_availability_interval",
      "func:async_track_unavailable"
    ],
    "old_files": [
      "api.py_deepseek_cfe233ea.py"
    ],
    "new_files": [
      "api_cbdcbd.py"
    ]
  },
  {
    "file_signature": [
      "class:FixOperator",
      "func:_check_method",
      "func:_handle_rename",
      "func:_handle_type2abc",
      "func:_irepeat",
      "func:_isCallable",
      "func:_isMappingType",
      "func:_isNumberType",
      "func:_isSequenceType",
      "func:_repeat",
      "func:_sequenceIncludes",
      "func:dec",
      "func:invocation",
      "func:transform"
    ],
    "old_files": [
      "fix_operator.py_deepseek_cb44f66b.py"
    ],
    "new_files": [
      "fix_operator_2f0209.py"
    ]
  },
  {
    "file_signature": [
      "func:_download_pair_history",
      "func:_download_trades_history",
      "func:_load_cached_data_for_updating",
      "func:download_data",
      "func:download_data_main",
      "func:get_timerange",
      "func:load_data",
      "func:load_pair_history",
      "func:refresh_backtest_ohlcv_data",
      "func:refresh_backtest_trades_data",
      "func:refresh_data",
      "func:validate_backtest_data"
    ],
    "old_files": [
      "history_utils.py_deepseek_5189a5e1.py"
    ],
    "new_files": [
      "history_utils_a432d7.py"
    ]
  },
  {
    "file_signature": [
      "class:CollectionT",
      "class:GlobalTableT",
      "class:TableManagerT",
      "class:TableT",
      "class:WindowSetT",
      "class:WindowWrapperT",
      "class:WindowedItemsViewT",
      "class:WindowedValuesViewT",
      "class:_AppT",
      "class:_FieldDescriptorT",
      "class:_ModelArg",
      "class:_SchemaT",
      "func:__getitem__",
      "func:__iadd__",
      "func:__iand__",
      "func:__ifloordiv__",
      "func:__ilshift__",
      "func:__imod__",
      "func:__imul__",
      "func:__init__",
      "func:__ior__",
      "func:__ipow__",
      "func:__irshift__",
      "func:__isub__",
      "func:__iter__",
      "func:__itruediv__",
      "func:__ixor__",
      "func:_changelog_topic_name",
      "func:_relative_event",
      "func:_relative_field",
      "func:_relative_now",
      "func:_relative_timestamp",
      "func:_windowed_contains",
      "func:add",
      "func:apply",
      "func:apply_changelog_batch",
      "func:as_ansitable",
      "func:changelog_topic",
      "func:changelog_topics",
      "func:clone",
      "func:current",
      "func:delta",
      "func:get_relative_timestamp",
      "func:get_timestamp",
      "func:hopping",
      "func:keys",
      "func:name",
      "func:now",
      "func:on_commit",
      "func:on_del_key",
      "func:on_partitions_revoked",
      "func:on_rebalance_start",
      "func:on_recover",
      "func:on_set_key",
      "func:partition_for_key",
      "func:persist_offset_on_commit",
      "func:persisted_offset",
      "func:relative_to_field",
      "func:relative_to_now",
      "func:relative_to_stream",
      "func:reset_state",
      "func:send_changelog",
      "func:tumbling",
      "func:using_window",
      "func:value"
    ],
    "old_files": [
      "tables.py_deepseek_1d679a61.py"
    ],
    "new_files": [
      "tables_379478.py"
    ]
  },
  {
    "file_signature": [
      "class:TestSparseArrayArithmetics",
      "func:_assert",
      "func:_check_bool_result",
      "func:_check_comparison_ops",
      "func:_check_logical_ops",
      "func:_check_numeric_ops",
      "func:kind",
      "func:mix",
      "func:test_binary_operators",
      "func:test_binary_ufuncs",
      "func:test_bool_array_logical",
      "func:test_bool_same_index",
      "func:test_float_array",
      "func:test_float_array_comparison",
      "func:test_float_array_different_kind",
      "func:test_float_same_index_comparison",
      "func:test_float_same_index_with_nans",
      "func:test_float_same_index_without_nans",
      "func:test_float_scalar",
      "func:test_float_scalar_comparison",
      "func:test_int_array",
      "func:test_int_array_comparison",
      "func:test_mismatched_length_arith_op",
      "func:test_mismatched_length_cmp_op",
      "func:test_mixed_array_comparison",
      "func:test_mixed_array_float_int",
      "func:test_ndarray_inplace",
      "func:test_sparray_inplace",
      "func:test_ufuncs",
      "func:test_with_dataframe",
      "func:test_with_list",
      "func:test_with_zerodim_ndarray",
      "func:test_xor"
    ],
    "old_files": [
      "test_arithmetics.py_deepseek_1d2db0a9.py"
    ],
    "new_files": [
      "test_arithmetics_2d6e2b.py"
    ]
  },
  {
    "file_signature": [
      "class:NDFrame",
      "func:__abs__",
      "func:__array__",
      "func:__array_ufunc__",
      "func:__bool__",
      "func:__contains__",
      "func:__copy__",
      "func:__deepcopy__",
      "func:__delitem__",
      "func:__finalize__",
      "func:__getattr__",
      "func:__getitem__",
      "func:__getstate__",
      "func:__iadd__",
      "func:__iand__",
      "func:__ifloordiv__",
      "func:__imod__",
      "func:__imul__",
      "func:__init__",
      "func:__invert__",
      "func:__ior__",
      "func:__ipow__",
      "func:__isub__",
      "func:__iter__",
      "func:__itruediv__",
      "func:__ixor__",
      "func:__len__",
      "func:__neg__",
      "func:__pos__",
      "func:__repr__",
      "func:__round__",
      "func:__setattr__",
      "func:__setstate__",
      "func:_accum_func",
      "func:_align_frame",
      "func:_align_series",
      "func:_check_copy_deprecation",
      "func:_check_inplace_and_allows_duplicate_labels",
      "func:_check_label_or_level_ambiguity",
      "func:_clip_with_one_bound",
      "func:_clip_with_scalar",
      "func:_consolidate",
      "func:_consolidate_inplace",
      "func:_construct_axes_dict",
      "func:_constructor",
      "func:_dir_additions",
      "func:_drop_axis",
      "func:_drop_labels_or_levels",
      "func:_find_valid_index",
      "func:_from_mgr",
      "func:_get_axis",
      "func:_get_axis_name",
      "func:_get_axis_number",
      "func:_get_axis_resolvers",
      "func:_get_block_manager_axis",
      "func:_get_bool_data",
      "func:_get_cleaned_column_resolvers",
      "func:_get_index_resolvers",
      "func:_get_label_or_level_values",
      "func:_get_numeric_data",
      "func:_getitem_slice",
      "func:_indexed_same",
      "func:_info_axis",
      "func:_init_mgr",
      "func:_inplace_method",
      "func:_is_label_or_level_reference",
      "func:_is_label_reference",
      "func:_is_level_reference",
      "func:_is_mixed_type",
      "func:_logical_func",
      "func:_min_count_stat_function",
      "func:_needs_reindex_multi",
      "func:_pad_or_backfill",
      "func:_reindex_axes",
      "func:_reindex_multi",
      "func:_reindex_with_indexers",
      "func:_rename",
      "func:_repr_data_resource_",
      "func:_repr_latex_",
      "func:_set_axis",
      "func:_set_axis_name",
      "func:_set_axis_nocheck",
      "func:_shift_with_freq",
      "func:_slice",
      "func:_stat_function",
      "func:_stat_function_ddof",
      "func:_to_latex_via_styler",
      "func:_tz_convert",
      "func:_tz_localize",
      "func:_update_inplace",
      "func:_validate_dtype",
      "func:_values",
      "func:_where",
      "func:_wrap",
      "func:abs",
      "func:add_prefix",
      "func:add_suffix",
      "func:align",
      "func:all",
      "func:any",
      "func:asfreq",
      "func:asof",
      "func:astype",
      "func:at_time",
      "func:attrs",
      "func:axes",
      "func:between_time",
      "func:bfill",
      "func:blk_func",
      "func:block_accum_func",
      "func:clip",
      "func:compare",
      "func:convert_dtypes",
      "func:copy",
      "func:cummax",
      "func:cummin",
      "func:cumprod",
      "func:cumsum",
      "func:describe",
      "func:drop",
      "func:droplevel",
      "func:dtypes",
      "func:empty",
      "func:equals",
      "func:ewm",
      "func:expanding",
      "func:f",
      "func:ffill",
      "func:fillna",
      "func:filter",
      "func:first_valid_index",
      "func:flags",
      "func:get",
      "func:head",
      "func:infer_objects",
      "func:interpolate",
      "func:isna",
      "func:isnull",
      "func:items",
      "func:keys",
      "func:kurt",
      "func:last_valid_index",
      "func:make_doc",
      "func:mask",
      "func:max",
      "func:mean",
      "func:median",
      "func:min",
      "func:ndim",
      "func:notna",
      "func:notnull",
      "func:pct_change",
      "func:pipe",
      "func:pop",
      "func:prod",
      "func:rank",
      "func:ranker",
      "func:reindex",
      "func:reindex_like",
      "func:rename_axis",
      "func:replace",
      "func:resample",
      "func:rolling",
      "func:sample",
      "func:sem",
      "func:set_axis",
      "func:set_flags",
      "func:shape",
      "func:shift",
      "func:size",
      "func:skew",
      "func:sort_index",
      "func:sort_values",
      "func:squeeze",
      "func:std",
      "func:sum",
      "func:tail",
      "func:take",
      "func:to_clipboard",
      "func:to_csv",
      "func:to_excel",
      "func:to_hdf",
      "func:to_json",
      "func:to_latex",
      "func:to_pickle",
      "func:to_sql",
      "func:to_xarray",
      "func:truncate",
      "func:tz_convert",
      "func:tz_localize",
      "func:values",
      "func:var",
      "func:where",
      "func:xs"
    ],
    "old_files": [
      "generic.py_deepseek_ee18657c.py"
    ],
    "new_files": [
      "generic_8a9e7c.py"
    ]
  },
  {
    "file_signature": [
      "class:MockSettings",
      "class:TestSessionHookManager",
      "func:good_plugin",
      "func:mock_settings_with_disabled_hooks",
      "func:naughty_plugin",
      "func:test_assert_register_hooks",
      "func:test_calling_register_hooks_twice",
      "func:test_disabling_auto_discovered_hooks",
      "func:test_hooks_registered_when_session_created"
    ],
    "old_files": [
      "test_session_hook_manager.py_deepseek_fc6974ac.py"
    ],
    "new_files": [
      "test_session_hook_manager_b0d853.py"
    ]
  },
  {
    "file_signature": [
      "class:Runnable",
      "func:__bool__",
      "func:__init__",
      "func:_run",
      "func:_schedule_new_greenlet",
      "func:is_running",
      "func:on_error",
      "func:on_success",
      "func:rawlink",
      "func:start",
      "func:stop"
    ],
    "old_files": [
      "runnable.py_deepseek_2f8337f9.py"
    ],
    "new_files": [
      "runnable_108c88.py"
    ]
  },
  {
    "file_signature": [
      "class:TestDataFrameTruncate",
      "func:test_sort_values_nonsortedindex",
      "func:test_truncate",
      "func:test_truncate_decreasing_index",
      "func:test_truncate_index_only_one_unique_value",
      "func:test_truncate_multiindex",
      "func:test_truncate_nonsortedindex",
      "func:test_truncate_nonsortedindex_axis1"
    ],
    "old_files": [
      "test_truncate.py_deepseek_cd6b171a.py"
    ],
    "new_files": [
      "test_truncate_a84f32.py"
    ]
  },
  {
    "file_signature": [
      "class:SAS7BDATReader",
      "class:_Column",
      "func:__init__",
      "func:__next__",
      "func:_chunk_to_dataframe",
      "func:_convert_datetimes",
      "func:_convert_header_text",
      "func:_decode_string",
      "func:_get_properties",
      "func:_parse_metadata",
      "func:_process_columnattributes_subheader",
      "func:_process_columnlist_subheader",
      "func:_process_columnname_subheader",
      "func:_process_columnsize_subheader",
      "func:_process_columntext_subheader",
      "func:_process_format_subheader",
      "func:_process_page_meta",
      "func:_process_page_metadata",
      "func:_process_rowsize_subheader",
      "func:_process_subheader_counts",
      "func:_read_bytes",
      "func:_read_float",
      "func:_read_next_page",
      "func:_read_page_header",
      "func:_read_uint",
      "func:close",
      "func:column_data_lengths",
      "func:column_data_offsets",
      "func:column_types",
      "func:read"
    ],
    "old_files": [
      "sas7bdat.py_deepseek_217b7b95.py"
    ],
    "new_files": [
      "sas7bdat_f3d8c2.py"
    ]
  },
  {
    "file_signature": [
      "class:StreamDict",
      "class:StreamsCategorizedByPermissions",
      "class:UserGroupMembershipDetails",
      "func:access_stream_by_id",
      "func:access_stream_by_id_for_message",
      "func:access_stream_by_name",
      "func:access_stream_common",
      "func:access_stream_for_delete_or_update_requiring_metadata_access",
      "func:access_stream_for_send_message",
      "func:access_stream_to_remove_visibility_policy_by_id",
      "func:access_stream_to_remove_visibility_policy_by_name",
      "func:access_web_public_stream",
      "func:bulk_can_remove_subscribers_from_streams",
      "func:can_access_stream_history",
      "func:can_access_stream_history_by_id",
      "func:can_access_stream_history_by_name",
      "func:can_access_stream_metadata_user_ids",
      "func:can_administer_accessible_channel",
      "func:check_basic_stream_access",
      "func:check_for_exactly_one_stream_arg",
      "func:check_stream_access_based_on_can_send_message_group",
      "func:check_stream_access_for_delete_or_update_requiring_metadata_access",
      "func:check_stream_name_available",
      "func:create_stream_if_needed",
      "func:create_streams_if_needed",
      "func:filter_stream_authorization",
      "func:get_default_value_for_history_public_to_subscribers",
      "func:get_default_values_for_stream_permission_group_settings",
      "func:get_public_streams_queryset",
      "func:get_stream_permission_default_group",
      "func:get_stream_permission_policy_name",
      "func:get_streams_to_which_user_cannot_add_subscribers",
      "func:get_user_ids_with_metadata_access_via_permission_groups",
      "func:get_web_public_streams_queryset",
      "func:has_metadata_access_to_channel_via_groups",
      "func:is_user_in_can_add_subscribers_group",
      "func:is_user_in_can_administer_channel_group",
      "func:is_user_in_can_remove_subscribers_group",
      "func:list_to_streams",
      "func:private_stream_user_ids",
      "func:public_stream_user_ids",
      "func:render_stream_description",
      "func:send_stream_creation_event",
      "func:subscribed_to_stream",
      "func:user_has_content_access"
    ],
    "old_files": [
      "streams.py_deepseek_5c0ba455.py"
    ],
    "new_files": [
      "streams_748e41.py"
    ]
  },
  {
    "file_signature": [
      "class:MetaModelFailure",
      "func:learn_on_k_best",
      "func:loss_function_sm",
      "func:my_kernel",
      "func:rephrase",
      "func:trans"
    ],
    "old_files": [
      "metamodel.py_deepseek_c025893b.py"
    ],
    "new_files": [
      "metamodel_f9ba03.py"
    ]
  },
  {
    "file_signature": [
      "class:LogFormatter",
      "func:__init__",
      "func:_safe_unicode",
      "func:_stderr_supports_color",
      "func:define_logging_options",
      "func:enable_pretty_logging",
      "func:format"
    ],
    "old_files": [
      "log.py_deepseek_05539337.py"
    ],
    "new_files": [
      "log_fbbf94.py"
    ]
  },
  {
    "file_signature": [
      "class:TransformerModule",
      "func:_from_config",
      "func:_get_mapped_state_dict",
      "func:_get_mapping",
      "func:_get_pretrained_state_dict",
      "func:_get_relevant_submodule_state",
      "func:from_pretrained_module"
    ],
    "old_files": [
      "transformer_module.py_deepseek_54125978.py"
    ],
    "new_files": [
      "transformer_module_941d3c.py"
    ]
  },
  {
    "file_signature": [
      "class:NswRuralFireServiceFeedEntityManager",
      "class:NswRuralFireServiceLocationEvent",
      "func:__init__",
      "func:_delete_callback",
      "func:_update_callback",
      "func:_update_from_feed",
      "func:extra_state_attributes",
      "func:get_entry",
      "func:icon"
    ],
    "old_files": [
      "geo_location.py_deepseek_553a1686.py"
    ],
    "new_files": [
      "geo_location_c45ba4.py"
    ]
  },
  {
    "file_signature": [
      "func:album_fixture",
      "func:artist_albums_fixture",
      "func:children_200_fixture",
      "func:children_20_fixture",
      "func:children_300_fixture",
      "func:children_30_fixture",
      "func:empty_library_fixture",
      "func:empty_payload_fixture",
      "func:grandchildren_300_fixture",
      "func:hubs_fixture",
      "func:hubs_music_library_fixture",
      "func:library_fixture",
      "func:library_movies_all_fixture",
      "func:library_movies_collections_fixture",
      "func:library_movies_filtertypes_fixture",
      "func:library_movies_metadata_fixture",
      "func:library_movies_size_fixture",
      "func:library_movies_sort_fixture",
      "func:library_music_all_fixture",
      "func:library_music_collections_fixture",
      "func:library_music_metadata_fixture",
      "func:library_music_size_fixture",
      "func:library_music_sort_fixture",
      "func:library_sections_fixture",
      "func:library_tvshows_all_fixture",
      "func:library_tvshows_collections_fixture",
      "func:library_tvshows_metadata_fixture",
      "func:library_tvshows_size_episodes_fixture",
      "func:library_tvshows_size_fixture",
      "func:library_tvshows_size_seasons_fixture",
      "func:library_tvshows_sort_fixture",
      "func:livetv_sessions_fixture",
      "func:media_100_fixture",
      "func:media_1_fixture",
      "func:media_200_fixture",
      "func:media_30_fixture",
      "func:mock_plex_calls",
      "func:mock_setup_entry",
      "func:mock_websocket",
      "func:player_plexhtpc_resources_fixture",
      "func:player_plexweb_resources_fixture",
      "func:playlist_500_fixture",
      "func:playlists_fixture",
      "func:playqueue_1234_fixture",
      "func:playqueue_created_fixture",
      "func:plex_server_accounts_fixture",
      "func:plex_server_base_fixture",
      "func:plex_server_clients_fixture",
      "func:plex_server_default_fixture",
      "func:plex_server_url",
      "func:plextv_account_fixture",
      "func:plextv_resources_fixture",
      "func:plextv_resources_two_servers_fixture",
      "func:plextv_shared_users_fixture",
      "func:security_token_fixture",
      "func:session_base_fixture",
      "func:session_default_fixture",
      "func:session_live_tv_fixture",
      "func:session_new_user_fixture",
      "func:session_photo_fixture",
      "func:session_plexweb_fixture",
      "func:session_transient_fixture",
      "func:session_unknown_fixture",
      "func:setup_plex_server",
      "func:show_seasons_fixture",
      "func:sonos_resources_fixture",
      "func:update_check_fixture_new",
      "func:update_check_fixture_new_not_updatable",
      "func:update_check_fixture_nochange"
    ],
    "old_files": [
      "conftest.py_deepseek_27c9761e.py"
    ],
    "new_files": [
      "conftest_ca46fe.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseFollower",
      "func:__init__",
      "func:_calculate_price_by_slippage",
      "func:_execute_trade_cmd",
      "func:_generate_headers",
      "func:_is_number",
      "func:add_cmd_to_expired_cmds",
      "func:check_login_success",
      "func:create_login_params",
      "func:create_query_transaction_params",
      "func:extract_strategy_id",
      "func:extract_strategy_name",
      "func:extract_transactions",
      "func:follow",
      "func:generate_expired_cmd_key",
      "func:is_cmd_expired",
      "func:load_expired_cmd_cache",
      "func:login",
      "func:order_transactions_sell_first",
      "func:project_transactions",
      "func:query_strategy_transaction",
      "func:re_find",
      "func:re_search",
      "func:start_trader_thread",
      "func:track_strategy_worker",
      "func:trade_worker",
      "func:warp_list"
    ],
    "old_files": [
      "follower.py_deepseek_fea1953d.py"
    ],
    "new_files": [
      "follower_4727fb.py"
    ]
  },
  {
    "file_signature": [
      "class:UnknownMediaType",
      "func:browse_media",
      "func:build_item_response",
      "func:generate_plex_uri",
      "func:get_proxy_image_url",
      "func:hub_payload",
      "func:item_payload",
      "func:library_contents",
      "func:library_section_payload",
      "func:playlists_payload",
      "func:root_payload",
      "func:server_payload",
      "func:special_library_payload",
      "func:station_payload"
    ],
    "old_files": [
      "media_browser.py_deepseek_7f9ba9bb.py"
    ],
    "new_files": [
      "media_browser_2b5d62.py"
    ]
  },
  {
    "file_signature": [
      "class:MapperReturnsNone",
      "class:SplitWordsMapper",
      "class:SplitWordsMapperDefaultArgs",
      "class:SquareHitTracker",
      "class:TestMapperCore",
      "func:__call__",
      "func:__init__",
      "func:_get_x",
      "func:_get_x_dict",
      "func:modify_in_place",
      "func:run",
      "func:square",
      "func:test_decorator_mapper_memoized",
      "func:test_decorator_mapper_memoized_none",
      "func:test_decorator_mapper_not_memoized",
      "func:test_mapper_default_args",
      "func:test_mapper_in_place",
      "func:test_mapper_returns_none",
      "func:test_mapper_same_field",
      "func:test_numeric_mapper",
      "func:test_text_mapper"
    ],
    "old_files": [
      "test_spark.py_deepseek_4d095f34.py"
    ],
    "new_files": [
      "test_spark_0e0bdf.py"
    ]
  },
  {
    "file_signature": [
      "func:test_advise_all_indicators",
      "func:test_advise_all_indicators_copy",
      "func:test_analyze_pair_empty",
      "func:test_analyze_ticker_default",
      "func:test_assert_df",
      "func:test_assert_df_raise",
      "func:test_custom_exit",
      "func:test_freqai_not_initialized",
      "func:test_ft_stoploss_reached",
      "func:test_get_signal_empty",
      "func:test_get_signal_exception_valueerror",
      "func:test_get_signal_no_sell_column",
      "func:test_get_signal_old_dataframe",
      "func:test_ignore_expired_candle",
      "func:test_leverage_callback",
      "func:test_min_roi_reached",
      "func:test_min_roi_reached2",
      "func:test_min_roi_reached3",
      "func:test_returns_latest_signal",
      "func:test_should_sell"
    ],
    "old_files": [
      "test_interface.py_deepseek_c697fae0.py"
    ],
    "new_files": [
      "test_interface_94cb57.py"
    ]
  },
  {
    "file_signature": [
      "class:Table",
      "func:__missing__",
      "func:_del_key",
      "func:_get_key",
      "func:_has_key",
      "func:_set_key",
      "func:as_ansitable",
      "func:hopping",
      "func:on_key_del",
      "func:on_key_get",
      "func:on_key_set",
      "func:tumbling",
      "func:using_window"
    ],
    "old_files": [
      "table.py_deepseek_2b29d9db.py"
    ],
    "new_files": [
      "table_e760ca.py"
    ]
  },
  {
    "file_signature": [
      "class:RussoundRNETDevice",
      "func:__init__",
      "func:mute_volume",
      "func:select_source",
      "func:set_volume_level",
      "func:setup_platform",
      "func:turn_off",
      "func:turn_on",
      "func:update"
    ],
    "old_files": [
      "media_player.py_deepseek_66456322.py"
    ],
    "new_files": [
      "media_player_f3d659.py"
    ]
  },
  {
    "file_signature": [
      "class:StreamingSourceWithSize",
      "class:ZulipUploadBackend",
      "func:all_message_attachments",
      "func:attachment_vips_source",
      "func:delete_avatar_image",
      "func:delete_export_tarball",
      "func:delete_message_attachment",
      "func:delete_message_attachments",
      "func:generate_message_upload_path",
      "func:get_avatar_contents",
      "func:get_avatar_path",
      "func:get_avatar_url",
      "func:get_emoji_url",
      "func:get_export_tarball_url",
      "func:get_public_upload_root_url",
      "func:get_realm_icon_url",
      "func:get_realm_logo_url",
      "func:realm_avatar_and_logo_path",
      "func:save_attachment_contents",
      "func:upload_export_tarball",
      "func:upload_message_attachment",
      "func:upload_realm_icon_image",
      "func:upload_realm_logo_image",
      "func:upload_single_avatar_image",
      "func:upload_single_emoji_image"
    ],
    "old_files": [
      "base.py_deepseek_195feea3.py"
    ],
    "new_files": [
      "base_6a0ea7.py"
    ]
  },
  {
    "file_signature": [
      "class:EntityFilter",
      "func:__call__",
      "func:__init__",
      "func:_convert_globs_to_pattern",
      "func:_generate_filter_from_sets_and_pattern_lists",
      "func:convert_filter",
      "func:convert_include_exclude_filter",
      "func:entity_filter_4a",
      "func:entity_filter_4b",
      "func:entity_included",
      "func:entity_not_excluded",
      "func:explicitly_excluded",
      "func:explicitly_included",
      "func:generate_filter",
      "func:get_filter"
    ],
    "old_files": [
      "entityfilter.py_deepseek_351ebdc4.py"
    ],
    "new_files": [
      "entityfilter_421d82.py"
    ]
  },
  {
    "file_signature": [
      "class:Test2DCompat",
      "class:TestMaskedArrays",
      "func:_cast_pointwise_result",
      "func:_get_expected_exception",
      "func:_get_expected_reduction_dtype",
      "func:_supports_accumulation",
      "func:_supports_reduction",
      "func:check_accumulate",
      "func:check_reduce",
      "func:data",
      "func:data_for_grouping",
      "func:data_for_sorting",
      "func:data_for_twos",
      "func:data_missing",
      "func:data_missing_for_sorting",
      "func:dtype",
      "func:make_bool_data",
      "func:make_data",
      "func:make_float_data",
      "func:na_cmp",
      "func:test_combine_le",
      "func:test_divmod_series_array",
      "func:test_map",
      "func:test_map_na_action_ignore"
    ],
    "old_files": [
      "test_masked.py_deepseek_f680e59c.py"
    ],
    "new_files": [
      "test_masked_a94e75.py"
    ]
  },
  {
    "file_signature": [
      "class:MicrosoftProvider",
      "func:__init__",
      "func:default_language",
      "func:default_options",
      "func:get_engine",
      "func:get_tts_audio",
      "func:supported_languages",
      "func:supported_options"
    ],
    "old_files": [
      "tts.py_deepseek_ffb74244.py"
    ],
    "new_files": [
      "tts_37e6e2.py"
    ]
  },
  {
    "file_signature": [
      "class:AioSqliteConfiguration",
      "class:AsyncPostgresConfiguration",
      "class:BaseDatabaseConfiguration",
      "class:ConnectionTracker",
      "func:__init__",
      "func:begin_sqlite_conn",
      "func:begin_sqlite_stmt",
      "func:begin_transaction",
      "func:clear",
      "func:is_inmemory",
      "func:on_close",
      "func:on_close_detached",
      "func:on_connect",
      "func:setup_sqlite",
      "func:track_pool",
      "func:unique_key"
    ],
    "old_files": [
      "configurations.py_deepseek_daf9c686.py"
    ],
    "new_files": [
      "configurations_98b5ec.py"
    ]
  },
  {
    "file_signature": [
      "class:MultiProcessDataLoader",
      "class:WorkerError",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_batch_worker",
      "func:_gather_instances",
      "func:_index_instance",
      "func:_instance_worker",
      "func:_instances_to_batches",
      "func:_iter_batches",
      "func:_join_workers",
      "func:_maybe_tqdm",
      "func:_safe_queue_put",
      "func:_start_batch_workers",
      "func:_start_instance_workers",
      "func:index_with",
      "func:iter_instances",
      "func:set_target_device"
    ],
    "old_files": [
      "multiprocess_data_loader.py_deepseek_59f32091.py"
    ],
    "new_files": [
      "multiprocess_data_loader_8b38d9.py"
    ]
  },
  {
    "file_signature": [
      "class:Worker",
      "func:__init__",
      "func:_executionContextCallback",
      "func:jsHandleFactory",
      "func:onConsoleAPICalled",
      "func:onExecutionContentCreated",
      "func:url"
    ],
    "old_files": [
      "worker.py_deepseek_223fa64d.py"
    ],
    "new_files": [
      "worker_c5c26f.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseSampleMode",
      "class:TestBasicSampleMode",
      "class:TestIncrementalModelSampleModeRelative",
      "class:TestIncrementalModelSampleModeSpecific",
      "class:TestMicrobatchSampleMode",
      "class:TestSampleSeedRefs",
      "func:assert_row_count",
      "func:event_catcher",
      "func:event_time_end_catcher",
      "func:event_time_start_catcher",
      "func:models",
      "func:seeds",
      "func:test_incremental_model_sample",
      "func:test_sample_mode"
    ],
    "old_files": [
      "test_sample_mode.py_deepseek_40df71d0.py"
    ],
    "new_files": [
      "test_sample_mode_75a9c6.py"
    ]
  },
  {
    "file_signature": [
      "class:ScriptError",
      "class:StubPrinter",
      "class:TimeWrapper",
      "func:__getattr__",
      "func:__init__",
      "func:_call_print",
      "func:discover_scripts",
      "func:execute",
      "func:execute_script",
      "func:guarded_import",
      "func:guarded_inplacevar",
      "func:protected_getattr",
      "func:python_script_service_handler",
      "func:reload_scripts_handler",
      "func:setup",
      "func:sleep",
      "func:wrapper"
    ],
    "old_files": [
      "__init__.py_deepseek_3b623c3c.py"
    ],
    "new_files": [
      "__init___97fa7b.py"
    ]
  },
  {
    "file_signature": [
      "func:changed_args",
      "func:cli_args",
      "func:cli_tests_contracts_version",
      "func:dont_print_step",
      "func:raiden_spawner",
      "func:raiden_testchain",
      "func:removed_args",
      "func:spawn_raiden"
    ],
    "old_files": [
      "conftest.py_deepseek_8b971bd2.py"
    ],
    "new_files": [
      "conftest_0be5a6.py"
    ]
  },
  {
    "file_signature": [
      "func:SimplePyFn",
      "func:a",
      "func:aaaaaaaaaaaaaaaaa",
      "func:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
      "func:foo",
      "func:thiiiiiiiiiiiiiiiiiis_iiiiiiiiiiiiiiiiiiiiiiiiiiiiiis_veeeeeeeeeeeeeeeeeeeeeeery_looooooong"
    ],
    "old_files": [
      "funcdef_return_type_trailing_comma.py_deepseek_9d900532.py"
    ],
    "new_files": [
      "funcdef_return_type_trailing_comma_6ef842.py"
    ]
  },
  {
    "file_signature": [
      "class:RiscoAlarm",
      "class:RiscoCloudAlarm",
      "class:RiscoLocalAlarm",
      "func:__init__",
      "func:_get_data_from_coordinator",
      "func:_validate_code",
      "func:alarm_state"
    ],
    "old_files": [
      "alarm_control_panel.py_deepseek_1df18bf0.py"
    ],
    "new_files": [
      "alarm_control_panel_489ba5.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseMissingTests",
      "func:test_dropna_array",
      "func:test_dropna_frame",
      "func:test_dropna_series",
      "func:test_ffill_limit_area",
      "func:test_fillna_fill_other",
      "func:test_fillna_frame",
      "func:test_fillna_limit_backfill",
      "func:test_fillna_limit_pad",
      "func:test_fillna_no_op_returns_copy",
      "func:test_fillna_scalar",
      "func:test_fillna_series",
      "func:test_fillna_series_method",
      "func:test_fillna_with_none",
      "func:test_isna",
      "func:test_isna_returns_copy"
    ],
    "old_files": [
      "missing.py_deepseek_dc85ca80.py"
    ],
    "new_files": [
      "missing_a60b28.py"
    ]
  },
  {
    "file_signature": [
      "class:ResolverSubclass",
      "class:TestBaseResolver",
      "class:TestRuntimeRefResolver",
      "class:TestRuntimeSourceResolver",
      "func:__call__",
      "func:resolver",
      "func:test_create_relation_with_empty",
      "func:test_resolve_event_time_filter",
      "func:test_resolve_limit"
    ],
    "old_files": [
      "test_providers.py_deepseek_7d8a7750.py"
    ],
    "new_files": [
      "test_providers_4601ba.py"
    ]
  },
  {
    "file_signature": [
      "class:NoCiphersAvailableBugInSSlyze",
      "class:SslConnection",
      "class:_ConnectionToHttpProxyFailed",
      "class:_ConnectionToHttpProxyTimedOut",
      "class:_HttpProxyRejectedConnection",
      "func:__init__",
      "func:_do_pre_handshake",
      "func:_open_socket",
      "func:_open_socket_for_connection_via_http_proxy",
      "func:_open_socket_for_direct_connection",
      "func:close",
      "func:connect"
    ],
    "old_files": [
      "tls_connection.py_deepseek_b52e6e1b.py"
    ],
    "new_files": [
      "tls_connection_607baf.py"
    ]
  },
  {
    "file_signature": [
      "class:CustAckPlugin1",
      "class:CustActionPlugin1",
      "class:CustActionPlugin2",
      "class:CustActionPlugin3",
      "class:CustDeletePlugin1",
      "class:CustDeletePlugin2",
      "class:CustNotePlugin1",
      "class:CustPlugin1",
      "class:CustPlugin2",
      "class:CustPlugin3",
      "class:OldPlugin1",
      "class:PluginsTestCase",
      "class:Teapot",
      "func:delete",
      "func:post_action",
      "func:post_receive",
      "func:pre_receive",
      "func:setUp",
      "func:status_change",
      "func:take_action",
      "func:take_note",
      "func:tearDown",
      "func:test_add_and_remove_tags",
      "func:test_custom_ack",
      "func:test_delete",
      "func:test_im_a_teapot",
      "func:test_invalid_action",
      "func:test_status_update",
      "func:test_take_action",
      "func:test_take_note"
    ],
    "old_files": [
      "test_plugins.py_deepseek_e2ab7a56.py"
    ],
    "new_files": [
      "test_plugins_493c2b.py"
    ]
  },
  {
    "file_signature": [
      "class:ConflictingSchwefel",
      "class:FunctionChunk",
      "class:LsgoFunction",
      "class:OverlappingSchwefel",
      "class:PartiallySeparableAckley",
      "class:PartiallySeparableAckley2",
      "class:PartiallySeparableElliptic",
      "class:PartiallySeparableElliptic2",
      "class:PartiallySeparableRastrigin",
      "class:PartiallySeparableRastrigin2",
      "class:PartiallySeparableSchwefel",
      "class:PartiallySeparableSchwefel2",
      "class:ShiftedAckley",
      "class:ShiftedElliptic",
      "class:ShiftedRastrigin",
      "class:ShiftedRosenbrock",
      "class:ShiftedSchwefel",
      "class:_MultiPartFunction",
      "func:__call__",
      "func:__init__",
      "func:__repr__",
      "func:__rmul__",
      "func:_apply_transforms",
      "func:_make_loss",
      "func:_make_transforms",
      "func:dimension",
      "func:instrumented",
      "func:make_function",
      "func:read_data"
    ],
    "old_files": [
      "_funcs.py_deepseek_3974b319.py"
    ],
    "new_files": [
      "_funcs_29fad7.py"
    ]
  },
  {
    "file_signature": [
      "class:Append",
      "class:CategoricalLevel",
      "class:Difference",
      "class:Duplicated",
      "class:Duplicates",
      "class:Equals",
      "class:GetLoc",
      "class:GetLocs",
      "class:Integer",
      "class:Isin",
      "class:Putmask",
      "class:SetOperations",
      "class:SortValues",
      "class:Sortlevel",
      "class:Unique",
      "class:Values",
      "func:setup",
      "func:setup_cache",
      "func:time_append",
      "func:time_categorical_level",
      "func:time_datetime_level_values_copy",
      "func:time_datetime_level_values_sliced",
      "func:time_difference",
      "func:time_duplicated",
      "func:time_equals_deepcopy",
      "func:time_equals_non_object_index",
      "func:time_get_indexer",
      "func:time_get_indexer_and_backfill",
      "func:time_get_indexer_and_pad",
      "func:time_is_monotonic",
      "func:time_isin_large",
      "func:time_isin_small",
      "func:time_large_get_loc",
      "func:time_large_get_loc_warm",
      "func:time_large_get_locs",
      "func:time_med_get_loc",
      "func:time_med_get_loc_warm",
      "func:time_med_get_locs",
      "func:time_operation",
      "func:time_putmask",
      "func:time_putmask_all_different",
      "func:time_remove_unused_levels",
      "func:time_small_get_loc_warm",
      "func:time_small_get_locs",
      "func:time_sort_values",
      "func:time_sortlevel_int64",
      "func:time_sortlevel_one",
      "func:time_sortlevel_zero",
      "func:time_string_get_loc",
      "func:time_unique",
      "func:time_unique_dups"
    ],
    "old_files": [
      "multiindex_object.py_deepseek_c697e158.py"
    ],
    "new_files": [
      "multiindex_object_2ee917.py"
    ]
  },
  {
    "file_signature": [
      "class:BeamSearchTest",
      "func:_check_results",
      "func:_step_function",
      "func:_step_function_with_timestep",
      "func:get_step_function",
      "func:setup_method",
      "func:test_batch_size_of_one",
      "func:test_catch_bad_config",
      "func:test_default_from_params_params",
      "func:test_diff_shape_state",
      "func:test_different_per_node_beam_size",
      "func:test_early_stopping",
      "func:test_empty_sequences",
      "func:test_finished_state",
      "func:test_greedy_search",
      "func:test_gumbel_sampler",
      "func:test_k_val",
      "func:test_length_normalized_sequence_log_prob_scorer",
      "func:test_min_steps",
      "func:test_multinomial_sampler",
      "func:test_p_val",
      "func:test_params_p_sampling",
      "func:test_params_sampling",
      "func:test_repeated_ngram_blocking_constraint_apply",
      "func:test_repeated_ngram_blocking_constraint_init_state",
      "func:test_repeated_ngram_blocking_constraint_update_state",
      "func:test_search",
      "func:test_single_step",
      "func:test_stochastic_beam_search",
      "func:test_take_repeated_ngram_step",
      "func:test_take_short_sequence_step",
      "func:test_top_k_sampler",
      "func:test_top_k_search",
      "func:test_top_p_sampler",
      "func:test_top_p_search",
      "func:test_warn_for_bad_log_probs"
    ],
    "old_files": [
      "beam_search_test.py_deepseek_e8e5dc23.py"
    ],
    "new_files": [
      "beam_search_test_a8133f.py"
    ]
  },
  {
    "file_signature": [
      "class:TelldusLiveClient",
      "func:__init__",
      "func:device",
      "func:device_info",
      "func:identify_device",
      "func:is_available"
    ],
    "old_files": [
      "__init__.py_deepseek_f6db51ae.py"
    ],
    "new_files": [
      "__init___cd0888.py"
    ]
  },
  {
    "file_signature": [
      "class:TestDataFrameGroupByPlots",
      "class:TestDataFramePlots",
      "class:TestSeriesPlots",
      "func:test_grouped_hist_legacy",
      "func:test_grouped_hist_legacy_axes_shape_no_col",
      "func:test_grouped_hist_legacy_external_err",
      "func:test_grouped_hist_legacy_figsize_err",
      "func:test_grouped_hist_legacy_grouped_hist",
      "func:test_grouped_hist_legacy_grouped_hist_kwargs",
      "func:test_grouped_hist_legacy_single_key",
      "func:test_hist_bins_legacy",
      "func:test_hist_by_no_extra_plots",
      "func:test_hist_column_order_unchanged",
      "func:test_hist_df_kwargs",
      "func:test_hist_df_legacy",
      "func:test_hist_df_legacy_external_error",
      "func:test_hist_df_legacy_layout",
      "func:test_hist_df_legacy_layout2",
      "func:test_hist_df_legacy_layout3",
      "func:test_hist_df_legacy_layout_kwargs",
      "func:test_hist_df_legacy_layout_labelsize_rot",
      "func:test_hist_df_legacy_rectangles",
      "func:test_hist_df_legacy_scale",
      "func:test_hist_df_with_nonnumerics",
      "func:test_hist_df_with_nonnumerics_no_bins",
      "func:test_hist_kde",
      "func:test_hist_kde_color",
      "func:test_hist_kde_color_bins",
      "func:test_hist_kde_density_works",
      "func:test_hist_kde_logy",
      "func:test_hist_kde_plot_works",
      "func:test_hist_kwargs",
      "func:test_hist_kwargs_align",
      "func:test_hist_kwargs_horizontal",
      "func:test_hist_layout",
      "func:test_hist_layout_error",
      "func:test_hist_layout_with_by",
      "func:test_hist_layout_with_by_shape",
      "func:test_hist_legacy_ax",
      "func:test_hist_legacy_ax_and_fig",
      "func:test_hist_legacy_by_fig_error",
      "func:test_hist_legacy_fig",
      "func:test_hist_legacy_kwargs",
      "func:test_hist_legacy_kwargs_warning",
      "func:test_hist_legacy_multi_ax",
      "func:test_hist_no_overlap",
      "func:test_hist_non_numerical_or_datetime_raises",
      "func:test_hist_secondary_legend",
      "func:test_hist_secondary_primary",
      "func:test_hist_secondary_secondary",
      "func:test_hist_subplot_xrot",
      "func:test_hist_with_legend",
      "func:test_hist_with_legend_raises",
      "func:test_hist_with_nans_and_weights",
      "func:test_histtype_argument",
      "func:test_plot_fails_when_ax_differs_from_figure",
      "func:test_tight_layout",
      "func:ts"
    ],
    "old_files": [
      "test_hist_method.py_deepseek_c8b56cbb.py"
    ],
    "new_files": [
      "test_hist_method_862ac9.py"
    ]
  },
  {
    "file_signature": [
      "class:AiohttpClientMockResponse",
      "class:AiohttpClientMocker",
      "class:MockLongPollSideEffect",
      "func:__init__",
      "func:call_count",
      "func:clear_requests",
      "func:close",
      "func:content",
      "func:content_type",
      "func:cookies",
      "func:create_session",
      "func:delete",
      "func:get",
      "func:headers",
      "func:match_request",
      "func:mock_aiohttp_client",
      "func:mock_stream",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:queue_response",
      "func:raise_for_status",
      "func:release",
      "func:request",
      "func:response",
      "func:stop",
      "func:url"
    ],
    "old_files": [
      "aiohttp.py_deepseek_5a9bb6c0.py"
    ],
    "new_files": [
      "aiohttp_4fe9b8.py"
    ]
  },
  {
    "file_signature": [
      "class:TestRangeIndexSetOps",
      "func:assert_range_or_not_is_rangelike",
      "func:test_difference",
      "func:test_difference_endpoints_overlap_interior_preserved",
      "func:test_difference_interior_non_preserving",
      "func:test_difference_interior_overlap_endpoints_preserved",
      "func:test_difference_mismatched_step",
      "func:test_difference_sort",
      "func:test_intersection",
      "func:test_intersection_empty",
      "func:test_intersection_mismatched_dtype",
      "func:test_intersection_non_overlapping_gcd",
      "func:test_range_difference",
      "func:test_symmetric_difference",
      "func:test_union_noncomparable",
      "func:test_union_same_step_misaligned",
      "func:test_union_sorted"
    ],
    "old_files": [
      "test_setops.py_deepseek_77fb0ff1.py"
    ],
    "new_files": [
      "test_setops_dfaf2d.py"
    ]
  },
  {
    "file_signature": [
      "class:RedisCacheBackend",
      "class:RedisSentinelCacheBackend",
      "func:__init__",
      "func:from_config",
      "func:xadd",
      "func:xrange"
    ],
    "old_files": [
      "cache_backend.py_deepseek_421ef640.py"
    ],
    "new_files": [
      "cache_backend_1dcc35.py"
    ]
  },
  {
    "file_signature": [
      "class:FeatureFlags",
      "class:FeatureStrategy",
      "func:__init__",
      "func:__repr__",
      "func:do_draw",
      "func:is_enabled"
    ],
    "old_files": [
      "featureflags.py_deepseek_7d9b2b1c.py"
    ],
    "new_files": [
      "featureflags_544034.py"
    ]
  },
  {
    "file_signature": [
      "class:Frame",
      "func:__bool__",
      "func:__getitem__",
      "func:_apply_series_op",
      "func:_count_expr",
      "func:_internal",
      "func:_reduce_for_stat_function",
      "func:_to_internal_pandas",
      "func:abs",
      "func:at",
      "func:bfill",
      "func:bool",
      "func:copy",
      "func:count",
      "func:cummax",
      "func:cummin",
      "func:cumprod",
      "func:cumsum",
      "func:dtypes",
      "func:expanding",
      "func:ffill",
      "func:fillna",
      "func:first_valid_index",
      "func:get",
      "func:get_dtype_counts",
      "func:groupby",
      "func:head",
      "func:iat",
      "func:iloc",
      "func:index",
      "func:kurtosis",
      "func:last_valid_index",
      "func:loc",
      "func:max",
      "func:mean",
      "func:median",
      "func:min",
      "func:pipe",
      "func:prod",
      "func:product",
      "func:rolling",
      "func:sem",
      "func:size",
      "func:skew",
      "func:squeeze",
      "func:std",
      "func:sum",
      "func:to_csv",
      "func:to_excel",
      "func:to_json",
      "func:to_markdown",
      "func:to_numpy",
      "func:to_pandas",
      "func:truncate",
      "func:values",
      "func:var"
    ],
    "old_files": [
      "generic.py_deepseek_c1cad31c.py"
    ],
    "new_files": [
      "generic_8a9e7c.py"
    ]
  },
  {
    "file_signature": [
      "class:RedisMessagingSettings",
      "func:_running_loop",
      "func:async_redis_from_settings",
      "func:cached",
      "func:cached_fn",
      "func:close_all_cached_connections",
      "func:get_async_redis_client"
    ],
    "old_files": [
      "client.py_deepseek_1aba9681.py"
    ],
    "new_files": [
      "client_391ffa.py"
    ]
  },
  {
    "file_signature": [
      "class:HomematicipGroupSwitch",
      "class:HomematicipMultiSwitch",
      "class:HomematicipSwitch",
      "class:HomematicipSwitchMeasuring",
      "func:__init__",
      "func:available",
      "func:extra_state_attributes",
      "func:is_on"
    ],
    "old_files": [
      "switch.py_deepseek_8803b2d7.py"
    ],
    "new_files": [
      "switch_aac10e.py"
    ]
  },
  {
    "file_signature": [
      "class:BP",
      "class:BoxPlot",
      "func:__init__",
      "func:_boxes_c",
      "func:_caps_c",
      "func:_color_attrs",
      "func:_get_colors",
      "func:_grouped_plot_by_column",
      "func:_kind",
      "func:_make_legend",
      "func:_make_plot",
      "func:_medians_c",
      "func:_plot",
      "func:_post_plot_logic",
      "func:_set_ticklabels",
      "func:_validate_color_args",
      "func:_whiskers_c",
      "func:boxplot",
      "func:boxplot_frame",
      "func:boxplot_frame_groupby",
      "func:maybe_color_bp",
      "func:orientation",
      "func:plot_group",
      "func:result"
    ],
    "old_files": [
      "boxplot.py_deepseek_8e4f22bc.py"
    ],
    "new_files": [
      "boxplot_5aedc4.py"
    ]
  },
  {
    "file_signature": [
      "class:BasicPrinter",
      "class:ColoramaPrinter",
      "func:__init__",
      "func:ask_whether_to_apply_changes_to_file",
      "func:create_terminal_printer",
      "func:diff_line",
      "func:error",
      "func:format_natural",
      "func:format_simplified",
      "func:remove_whitespace",
      "func:show_unified_diff",
      "func:style_text",
      "func:success"
    ],
    "old_files": [
      "format.py_deepseek_742bff2c.py"
    ],
    "new_files": [
      "format_0c602c.py"
    ]
  },
  {
    "file_signature": [
      "class:XueQiuFollower",
      "func:__init__",
      "func:_adjust_sell_amount",
      "func:_get_portfolio_info",
      "func:_get_portfolio_net_value",
      "func:calculate_assets",
      "func:create_query_transaction_params",
      "func:extract_strategy_id",
      "func:extract_strategy_name",
      "func:extract_transactions",
      "func:follow",
      "func:login",
      "func:none_to_zero",
      "func:project_transactions"
    ],
    "old_files": [
      "xq_follower.py_deepseek_cbbc76a8.py"
    ],
    "new_files": [
      "xq_follower_0c252a.py"
    ]
  },
  {
    "file_signature": [
      "class:Align",
      "class:Concat",
      "class:ConcatDataFrames",
      "class:ConcatIndexDtype",
      "class:I8Merge",
      "class:Join",
      "class:JoinEmpty",
      "class:JoinIndex",
      "class:JoinMultiindexSubset",
      "class:JoinNonUnique",
      "class:Merge",
      "class:MergeAsof",
      "class:MergeCategoricals",
      "class:MergeDatetime",
      "class:MergeEA",
      "class:MergeMultiIndex",
      "class:MergeOrdered",
      "class:UniqueMerge",
      "func:setup",
      "func:time_by_int",
      "func:time_by_object",
      "func:time_c_ordered",
      "func:time_concat_empty_left",
      "func:time_concat_empty_right",
      "func:time_concat_mixed_ndims",
      "func:time_concat_series",
      "func:time_concat_small_frames",
      "func:time_f_ordered",
      "func:time_i8merge",
      "func:time_inner_join_left_empty",
      "func:time_inner_join_right_empty",
      "func:time_join_dataframe_index_multi",
      "func:time_join_dataframe_index_shuffle_key_bigger_sort",
      "func:time_join_dataframe_index_single_key_bigger",
      "func:time_join_dataframe_index_single_key_small",
      "func:time_join_dataframes_cross",
      "func:time_join_multiindex_subset",
      "func:time_join_non_unique_equal",
      "func:time_left_outer_join_index",
      "func:time_merge",
      "func:time_merge_2intkey",
      "func:time_merge_cat",
      "func:time_merge_dataframe_empty_left",
      "func:time_merge_dataframe_empty_right",
      "func:time_merge_dataframe_integer_2key",
      "func:time_merge_dataframe_integer_key",
      "func:time_merge_dataframes_cross",
      "func:time_merge_object",
      "func:time_merge_on_cat_col",
      "func:time_merge_on_cat_idx",
      "func:time_merge_ordered",
      "func:time_merge_sorted_multiindex",
      "func:time_multiby",
      "func:time_on_int",
      "func:time_on_int32",
      "func:time_on_uint64",
      "func:time_series_align_int64_index",
      "func:time_series_align_left_monotonic",
      "func:time_unique_merge"
    ],
    "old_files": [
      "join_merge.py_deepseek_26247bf6.py"
    ],
    "new_files": [
      "join_merge_5c5786.py"
    ]
  },
  {
    "file_signature": [
      "class:TestStrategyValidation",
      "func:empty_db",
      "func:inner",
      "func:no_explicit",
      "func:no_phases",
      "func:test_can_find_with_db_eq_none",
      "func:test_characters_codec",
      "func:test_given_shrinks_pytest_helper_errors",
      "func:test_is_not_normally_default",
      "func:test_method_with_bad_strategy",
      "func:test_no_such_example",
      "func:test_non_executed_tests_raise_skipped",
      "func:test_pytest_skip_skips_shrinking",
      "func:test_settings_are_default_in_given",
      "func:test_stops_after_max_examples_if_satisfying",
      "func:test_stops_after_ten_times_max_examples_if_not_satisfying",
      "func:test_validates_strategies_for_test_method",
      "func:track"
    ],
    "old_files": [
      "test_core.py_deepseek_050b7066.py"
    ],
    "new_files": [
      "test_core_08030e.py"
    ]
  },
  {
    "file_signature": [
      "func:make_api_task",
      "func:mock_api",
      "func:mock_api_side_effect",
      "func:mock_api_status",
      "func:mock_due",
      "func:mock_setup_entry",
      "func:mock_tasks",
      "func:mock_todoist_config_entry",
      "func:mock_todoist_domain",
      "func:platforms"
    ],
    "old_files": [
      "conftest.py_deepseek_ce9dda9c.py"
    ],
    "new_files": [
      "conftest_ddc29c.py"
    ]
  },
  {
    "file_signature": [
      "class:RunExecutionResult",
      "class:RunResult",
      "class:RunResultOutput",
      "class:RunResultsArtifact",
      "class:RunResultsMetadata",
      "func:compatible_previous_versions",
      "func:from_execution_results",
      "func:from_node",
      "func:process_run_result",
      "func:skipped",
      "func:upgrade_schema_version",
      "func:write"
    ],
    "old_files": [
      "run.py_deepseek_b8f63494.py"
    ],
    "new_files": [
      "run_f6671c.py"
    ]
  },
  {
    "file_signature": [
      "class:DashboardEncoder",
      "func:__init__",
      "func:base_json_conv",
      "func:default",
      "func:dumps",
      "func:format_timedelta",
      "func:json_dumps_w_dates",
      "func:json_int_dttm_ser",
      "func:json_iso_dttm_ser",
      "func:loads",
      "func:pessimistic_json_iso_dttm_ser",
      "func:redact_sensitive",
      "func:reveal_sensitive",
      "func:validate_json"
    ],
    "old_files": [
      "json.py_deepseek_2fb641a5.py"
    ],
    "new_files": [
      "json_5bd122.py"
    ]
  },
  {
    "file_signature": [
      "class:DatabricksBaseEngineSpec",
      "class:DatabricksBaseParametersType",
      "class:DatabricksBaseSchema",
      "class:DatabricksDynamicBaseEngineSpec",
      "class:DatabricksHiveEngineSpec",
      "class:DatabricksNativeEngineSpec",
      "class:DatabricksNativeParametersType",
      "class:DatabricksNativePropertiesSchema",
      "class:DatabricksNativePropertiesType",
      "class:DatabricksNativeSchema",
      "class:DatabricksODBCEngineSpec",
      "class:DatabricksPythonConnectorEngineSpec",
      "class:DatabricksPythonConnectorParametersType",
      "class:DatabricksPythonConnectorPropertiesType",
      "class:DatabricksPythonConnectorSchema",
      "func:adjust_engine_params",
      "func:build_sqlalchemy_uri",
      "func:convert_dttm",
      "func:epoch_to_dttm",
      "func:extract_errors",
      "func:get_catalog_names",
      "func:get_default_catalog",
      "func:get_extra_params",
      "func:get_parameters_from_uri",
      "func:get_prequeries",
      "func:get_table_names",
      "func:parameters_json_schema",
      "func:validate_parameters"
    ],
    "old_files": [
      "databricks.py_deepseek_7fb97399.py"
    ],
    "new_files": [
      "databricks_f5496f.py"
    ]
  },
  {
    "file_signature": [
      "class:BFGSB",
      "class:BrendelBethgeAttack",
      "class:L0BrendelBethgeAttack",
      "class:L1BrendelBethgeAttack",
      "class:L2BrendelBethgeAttack",
      "class:LinfinityBrendelBethgeAttack",
      "class:Optimizer",
      "func:__init__",
      "func:_cauchy_point",
      "func:_max_logit_diff",
      "func:_minimum_norm_to_boundary",
      "func:_subspace_min",
      "func:best_other_classes",
      "func:decorator",
      "func:instantiate_optimizer",
      "func:jitclass",
      "func:logits_diff_and_grads",
      "func:loss_fun",
      "func:mid_points",
      "func:norms",
      "func:optimize_boundary_s_t_trustregion",
      "func:optimize_boundary_s_t_trustregion_fun_and_jac",
      "func:optimize_distance_s_t_boundary_and_trustregion",
      "func:run",
      "func:safe_div",
      "func:solve"
    ],
    "old_files": [
      "brendel_bethge.py_deepseek_21f649e4.py"
    ],
    "new_files": [
      "brendel_bethge_016eab.py"
    ]
  },
  {
    "file_signature": [
      "class:FindLearningRate",
      "func:_save_plot",
      "func:_smooth",
      "func:add_subparser",
      "func:find_learning_rate_from_args",
      "func:find_learning_rate_model",
      "func:search_learning_rate"
    ],
    "old_files": [
      "find_learning_rate.py_deepseek_5b4e5b17.py"
    ],
    "new_files": [
      "find_learning_rate_f33819.py"
    ]
  },
  {
    "file_signature": [
      "class:FileSystemLockManager",
      "class:_LockInfo",
      "func:__init__",
      "func:_ensure_lock_files_directory_exists",
      "func:_get_lock_info",
      "func:_lock_path_for_key",
      "func:acquire_lock",
      "func:is_lock_holder",
      "func:is_locked",
      "func:release_lock",
      "func:wait_for_lock"
    ],
    "old_files": [
      "filesystem.py_deepseek_34c848f8.py"
    ],
    "new_files": [
      "filesystem_970993.py"
    ]
  },
  {
    "file_signature": [
      "func:get_min_new_period_epochs",
      "func:get_mock_aggregate",
      "func:run_compute_subscribed_subnets_arguments",
      "func:run_get_committee_assignment",
      "func:run_get_signature_test",
      "func:run_is_candidate_block",
      "func:test_check_if_validator_active",
      "func:test_compute_fork_digest",
      "func:test_compute_new_state_root",
      "func:test_compute_subnet_for_attestation",
      "func:test_compute_subscribed_subnets_random_1",
      "func:test_compute_subscribed_subnets_random_2",
      "func:test_compute_subscribed_subnets_random_3",
      "func:test_get_aggregate_and_proof",
      "func:test_get_aggregate_and_proof_signature",
      "func:test_get_aggregate_signature",
      "func:test_get_attestation_signature_phase0",
      "func:test_get_block_signature",
      "func:test_get_committee_assignment_current_epoch",
      "func:test_get_committee_assignment_next_epoch",
      "func:test_get_committee_assignment_out_bound_epoch",
      "func:test_get_epoch_signature",
      "func:test_get_eth1_vote_chain_in_past",
      "func:test_get_eth1_vote_consensus_vote",
      "func:test_get_eth1_vote_default_vote",
      "func:test_get_eth1_vote_tie",
      "func:test_get_slot_signature",
      "func:test_is_aggregator",
      "func:test_is_candidate_block",
      "func:test_is_proposer"
    ],
    "old_files": [
      "test_validator_unittest.py_deepseek_d0ddfc83.py"
    ],
    "new_files": [
      "test_validator_unittest_4d4a84.py"
    ]
  },
  {
    "file_signature": [
      "class:MySensorNodeEntity",
      "class:MySensorsChildEntity",
      "func:__init__",
      "func:_async_update",
      "func:_async_update_callback",
      "func:_child",
      "func:_node",
      "func:available",
      "func:dev_id",
      "func:device_info",
      "func:extra_state_attributes",
      "func:get_mysensors_devices",
      "func:name",
      "func:node_name",
      "func:sketch_name",
      "func:sketch_version",
      "func:unique_id"
    ],
    "old_files": [
      "entity.py_deepseek_656d6ebf.py"
    ],
    "new_files": [
      "entity_5876c1.py"
    ]
  },
  {
    "file_signature": [
      "class:SynoDSMBinarySensor",
      "class:SynoDSMSecurityBinarySensor",
      "class:SynoDSMStorageBinarySensor",
      "class:SynologyDSMBinarySensorEntityDescription",
      "func:__init__",
      "func:available",
      "func:extra_state_attributes",
      "func:is_on"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_ab852f85.py"
    ],
    "new_files": [
      "binary_sensor_66e712.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseIncrementalUniqueKey",
      "class:TestIncrementalUniqueKey",
      "func:check_scenario_correctness",
      "func:clean_up",
      "func:fail_to_build_inc_missing_unique_key_column",
      "func:get_expected_fields",
      "func:get_test_fields",
      "func:models",
      "func:seeds",
      "func:test__bad_unique_key",
      "func:test__bad_unique_key_list",
      "func:test__duplicated_unary_unique_key_list",
      "func:test__empty_str_unique_key",
      "func:test__empty_unique_key_list",
      "func:test__no_unique_keys",
      "func:test__one_unique_key",
      "func:test__trinary_unique_key_list",
      "func:test__trinary_unique_key_list_no_update",
      "func:test__unary_unique_key_list",
      "func:update_incremental_model"
    ],
    "old_files": [
      "test_incremental_unique_id.py_deepseek_5edd8e87.py"
    ],
    "new_files": [
      "test_incremental_unique_id_a93cab.py"
    ]
  },
  {
    "file_signature": [
      "class:TagDictStorageCollectionWebsocket",
      "class:TagEntity",
      "class:TagIDExistsError",
      "class:TagIDManager",
      "class:TagStorageCollection",
      "class:TagStore",
      "func:__init__",
      "func:_create_entry",
      "func:_get_suggested_id",
      "func:_serialize_item",
      "func:async_handle_event",
      "func:extra_state_attributes",
      "func:generate_id",
      "func:state",
      "func:ws_list_item"
    ],
    "old_files": [
      "__init__.py_deepseek_7e40ef9f.py"
    ],
    "new_files": [
      "__init___9a6f7a.py"
    ]
  },
  {
    "file_signature": [
      "class:Test2DCompat",
      "class:TestStringArray",
      "func:_cast_pointwise_result",
      "func:_get_expected_exception",
      "func:_supports_accumulation",
      "func:_supports_reduction",
      "func:arrow_not_supported",
      "func:chunked",
      "func:data",
      "func:data_for_grouping",
      "func:data_for_sorting",
      "func:data_missing",
      "func:data_missing_for_sorting",
      "func:dtype",
      "func:maybe_split_array",
      "func:test_arith_series_with_array",
      "func:test_combine_add",
      "func:test_compare_scalar",
      "func:test_construct_from_string_own_name",
      "func:test_dropna_array",
      "func:test_eq_with_str",
      "func:test_fillna_no_op_returns_copy",
      "func:test_from_dtype",
      "func:test_groupby_extension_apply",
      "func:test_is_dtype_from_name",
      "func:test_is_not_string_type",
      "func:test_searchsorted_with_na_raises",
      "func:test_setitem_preserves_views",
      "func:test_transpose",
      "func:test_view"
    ],
    "old_files": [
      "test_string.py_deepseek_7c5cc6f9.py"
    ],
    "new_files": [
      "test_string_c0dad8.py"
    ]
  },
  {
    "file_signature": [
      "class:CheckpointDecoder",
      "func:__init__",
      "func:decode_and_evaluate",
      "func:parallel_subsample",
      "func:warmup",
      "func:write_to_file"
    ],
    "old_files": [
      "checkpoint_decoder.py_deepseek_886fcce4.py"
    ],
    "new_files": [
      "checkpoint_decoder_4db09b.py"
    ]
  },
  {
    "file_signature": [
      "class:ChannelT",
      "class:_AppT",
      "class:_EventT",
      "class:_ModelArg",
      "class:_SchemaT",
      "class:_StreamT",
      "func:__aiter__",
      "func:__anext__",
      "func:__init__",
      "func:_throw",
      "func:as_future_message",
      "func:clone",
      "func:clone_using_queue",
      "func:derive",
      "func:empty",
      "func:get_topic_name",
      "func:on_stop_iteration",
      "func:prepare_key",
      "func:prepare_value",
      "func:queue",
      "func:send_soon",
      "func:stream",
      "func:subscriber_count"
    ],
    "old_files": [
      "channels.py_deepseek_d312aa75.py"
    ],
    "new_files": [
      "channels_7d2bb8.py"
    ]
  },
  {
    "file_signature": [
      "class:DataCollator",
      "class:DefaultDataCollator",
      "class:LanguageModelingDataCollator",
      "func:__call__",
      "func:__init__",
      "func:allennlp_collate",
      "func:process_tokens"
    ],
    "old_files": [
      "data_collator.py_deepseek_ba3de05d.py"
    ],
    "new_files": [
      "data_collator_b6829a.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPServer",
      "class:_CallableAdapter",
      "class:_HTTPRequestContext",
      "class:_ProxyAdapter",
      "func:__init__",
      "func:__str__",
      "func:_apply_xheaders",
      "func:_cleanup",
      "func:_unapply_xheaders",
      "func:configurable_base",
      "func:configurable_default",
      "func:data_received",
      "func:finish",
      "func:handle_stream",
      "func:headers_received",
      "func:initialize",
      "func:on_close",
      "func:on_connection_close",
      "func:start_request"
    ],
    "old_files": [
      "httpserver.py_deepseek_064c87b3.py"
    ],
    "new_files": [
      "httpserver_262275.py"
    ]
  },
  {
    "file_signature": [
      "class:YeelightDevice",
      "func:__init__",
      "func:_active_mode",
      "func:_async_unique_name",
      "func:_color_flow",
      "func:_nightlight_brightness",
      "func:async_format_id",
      "func:async_format_model",
      "func:async_format_model_id",
      "func:async_mark_unavailable",
      "func:async_update_callback",
      "func:available",
      "func:bulb",
      "func:config",
      "func:fw_version",
      "func:host",
      "func:is_color_flow_enabled",
      "func:is_nightlight_enabled",
      "func:is_nightlight_supported",
      "func:model",
      "func:name",
      "func:type",
      "func:unique_id",
      "func:update_needs_bg_power_workaround"
    ],
    "old_files": [
      "device.py_deepseek_7e5392fe.py"
    ],
    "new_files": [
      "device_e3bccf.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractEventLogger",
      "class:DBEventLogger",
      "class:StdOutEventLogger",
      "func:__call__",
      "func:__enter__",
      "func:__exit__",
      "func:_wrapper",
      "func:collect_request_payload",
      "func:curate_form_data",
      "func:curate_payload",
      "func:func",
      "func:get_event_logger_from_cfg_value",
      "func:get_logger_from_status",
      "func:log",
      "func:log_context",
      "func:log_this",
      "func:log_this_with_context",
      "func:log_this_with_extra_payload",
      "func:log_with_context",
      "func:wrapper"
    ],
    "old_files": [
      "log.py_deepseek_08a35b3f.py"
    ],
    "new_files": [
      "log_67c6cb.py"
    ]
  },
  {
    "file_signature": [
      "class:SQLQueryCounter",
      "func:__call__",
      "func:__init__",
      "func:client_cache_items",
      "func:fill_remote_cache",
      "func:get_active_realm_ids",
      "func:get_narrow_users",
      "func:get_users",
      "func:session_cache_items",
      "func:user_cache_items",
      "func:user_narrow_cache_items"
    ],
    "old_files": [
      "cache_helpers.py_deepseek_cb41589e.py"
    ],
    "new_files": [
      "cache_helpers_e012c1.py"
    ]
  },
  {
    "file_signature": [
      "class:HyperionComponentSwitch",
      "func:__init__",
      "func:_component_to_translation_key",
      "func:_component_to_unique_id",
      "func:_update_components",
      "func:available",
      "func:instance_add",
      "func:instance_remove",
      "func:is_on"
    ],
    "old_files": [
      "switch.py_deepseek_a5c8fd54.py"
    ],
    "new_files": [
      "switch_959c09.py"
    ]
  },
  {
    "file_signature": [
      "class:Token",
      "func:__init__",
      "func:abi",
      "func:allowance",
      "func:approve",
      "func:balance_of",
      "func:check_for_insufficient_token_balance",
      "func:total_supply",
      "func:transfer"
    ],
    "old_files": [
      "token.py_deepseek_72ceaf89.py"
    ],
    "new_files": [
      "token_49945a.py"
    ]
  },
  {
    "file_signature": [
      "func:base_expected_catalog",
      "func:case",
      "func:expected_references_catalog",
      "func:no_stats"
    ],
    "old_files": [
      "expected_catalog.py_deepseek_a0db9c34.py"
    ],
    "new_files": [
      "expected_catalog_04b2bc.py"
    ]
  },
  {
    "file_signature": [
      "class:OpenAPI",
      "func:_simple_slugify",
      "func:get_content",
      "func:get_field",
      "func:get_link",
      "func:get_schema_definitions",
      "func:load",
      "func:lookup"
    ],
    "old_files": [
      "openapi.py_deepseek_03accd2a.py"
    ],
    "new_files": [
      "openapi_a5fc11.py"
    ]
  },
  {
    "file_signature": [
      "class:Series",
      "func:__init__",
      "func:_column_label",
      "func:_create_type_for_series_type",
      "func:_drop",
      "func:_fillna",
      "func:_internal",
      "func:_kdf",
      "func:_update_anchor",
      "func:_with_new_scol",
      "func:add",
      "func:add_prefix",
      "func:add_suffix",
      "func:aggregate",
      "func:alias",
      "func:append",
      "func:apply",
      "func:axes",
      "func:between",
      "func:clip",
      "func:corr",
      "func:div",
      "func:divmod",
      "func:drop",
      "func:drop_duplicates",
      "func:dropna",
      "func:dtypes",
      "func:eq",
      "func:fillna",
      "func:first",
      "func:floordiv",
      "func:ge",
      "func:gt",
      "func:head",
      "func:hist",
      "func:index",
      "func:is_unique",
      "func:last",
      "func:le",
      "func:lt",
      "func:map",
      "func:mod",
      "func:mul",
      "func:name",
      "func:ne",
      "func:nlargest",
      "func:nsmallest",
      "func:pow",
      "func:radd",
      "func:rdiv",
      "func:rdivmod",
      "func:reindex",
      "func:reindex_like",
      "func:rename",
      "func:rename_axis",
      "func:reset_index",
      "func:rfloordiv",
      "func:rmod",
      "func:rmul",
      "func:rpow",
      "func:rsub",
      "func:rtruediv",
      "func:sample",
      "func:shape",
      "func:sort_index",
      "func:sort_values",
      "func:spark_type",
      "func:sub",
      "func:swapaxes",
      "func:swaplevel",
      "func:toPandas",
      "func:to_clipboard",
      "func:to_dict",
      "func:to_frame",
      "func:to_latex",
      "func:to_list",
      "func:to_pandas",
      "func:to_string",
      "func:transform",
      "func:transform_batch",
      "func:transpose",
      "func:truediv",
      "func:unique"
    ],
    "old_files": [
      "series.py_deepseek_daa29c75.py"
    ],
    "new_files": [
      "series_e95f35.py"
    ]
  },
  {
    "file_signature": [
      "class:TestApplicationGraphBuilder",
      "func:bar",
      "func:connect",
      "func:create_config",
      "func:disconnect",
      "func:foo",
      "func:message",
      "func:new_handler",
      "func:second",
      "func:test_all_lambda_functions_share_managed_layer",
      "func:test_autogen_policy_for_function",
      "func:test_can_build_app_with_domain_name",
      "func:test_can_build_lambda_function_app_with_reserved_concurrency",
      "func:test_can_build_lambda_function_app_with_vpc_config",
      "func:test_can_build_lambda_function_with_layers",
      "func:test_can_build_private_rest_api",
      "func:test_can_build_private_rest_api_custom_policy",
      "func:test_can_build_rest_api",
      "func:test_can_build_rest_api_with_authorizer",
      "func:test_can_build_single_lambda_function_app",
      "func:test_can_build_single_lambda_function_app_with_log_retention",
      "func:test_can_build_single_lambda_function_app_with_managed_layer",
      "func:test_can_create_ddb_event_handler",
      "func:test_can_create_kinesis_event_handler",
      "func:test_can_create_s3_event_handler",
      "func:test_can_create_sns_event_handler",
      "func:test_can_create_sqs_event_handler",
      "func:test_can_create_sqs_handler_with_queue_arn",
      "func:test_can_create_websocket_api_with_domain_name",
      "func:test_can_create_websocket_app_missing_connect",
      "func:test_can_create_websocket_app_missing_disconnect",
      "func:test_can_create_websocket_app_missing_message",
      "func:test_can_create_websocket_event_handler",
      "func:test_cloudwatch_event_models",
      "func:test_exception_raised_when_missing_vpc_params",
      "func:test_multiple_lambda_functions_share_role_and_package",
      "func:test_scheduled_event_models",
      "func:test_vpc_trait_added_when_vpc_configured",
      "func:websocket_app_without_connect",
      "func:websocket_app_without_disconnect",
      "func:websocket_app_without_message"
    ],
    "old_files": [
      "test_appgraph.py_deepseek_d2cf8562.py"
    ],
    "new_files": [
      "test_appgraph_6f35e2.py"
    ]
  },
  {
    "file_signature": [
      "class:test_Monitor",
      "func:assert_on_web_request_end",
      "func:create_monitor",
      "func:create_populated_monitor",
      "func:event",
      "func:message",
      "func:mon",
      "func:on_sample",
      "func:stream",
      "func:table",
      "func:test_TableState_asdict",
      "func:test__sample",
      "func:test_asdict",
      "func:test_init_max_assignment_latency_history",
      "func:test_init_max_assignment_latency_history__default",
      "func:test_init_max_avg_history",
      "func:test_init_max_avg_history__default",
      "func:test_init_max_commit_latency_history",
      "func:test_init_max_commit_latency_history__default",
      "func:test_init_max_send_latency_history",
      "func:test_init_max_send_latency_history__default",
      "func:test_init_rebalances",
      "func:test_on_assignment_completed",
      "func:test_on_assignment_error",
      "func:test_on_assignment_start",
      "func:test_on_commit_completed",
      "func:test_on_commit_initiated",
      "func:test_on_message_in",
      "func:test_on_message_out",
      "func:test_on_rebalance_end",
      "func:test_on_rebalance_return",
      "func:test_on_rebalance_start",
      "func:test_on_send_completed",
      "func:test_on_send_error",
      "func:test_on_send_initiated",
      "func:test_on_stream_event_in",
      "func:test_on_stream_event_out",
      "func:test_on_stream_event_out__missing_state",
      "func:test_on_table_del",
      "func:test_on_table_get",
      "func:test_on_table_set",
      "func:test_on_topic_buffer_full",
      "func:test_on_tp_commit",
      "func:test_on_web_request_end",
      "func:test_on_web_request_end__None_response",
      "func:test_on_web_request_start",
      "func:test_track_tp_end_offsets",
      "func:time",
      "func:topic"
    ],
    "old_files": [
      "test_monitor.py_deepseek_0fe2bb6f.py"
    ],
    "new_files": [
      "test_monitor_31e01e.py"
    ]
  },
  {
    "file_signature": [
      "class:Affine",
      "class:ArctanBound",
      "class:BoundTransform",
      "class:Clipping",
      "class:CumulativeDensity",
      "class:Exponentiate",
      "class:Fourrier",
      "class:Reverted",
      "class:TanhBound",
      "class:Transform",
      "func:__init__",
      "func:__repr__",
      "func:_check_shape",
      "func:_f",
      "func:backward",
      "func:bound_to_array",
      "func:forward",
      "func:reverted"
    ],
    "old_files": [
      "transforms.py_deepseek_6e373cdf.py"
    ],
    "new_files": [
      "transforms_f38536.py"
    ]
  },
  {
    "file_signature": [
      "class:ConcurrencyLimitAsyncClient",
      "class:ConcurrencyLimitClient",
      "func:create_concurrency_limit",
      "func:create_global_concurrency_limit",
      "func:decrement_v1_concurrency_slots",
      "func:delete_concurrency_limit_by_tag",
      "func:delete_global_concurrency_limit_by_name",
      "func:increment_concurrency_slots",
      "func:increment_v1_concurrency_slots",
      "func:read_concurrency_limit_by_tag",
      "func:read_concurrency_limits",
      "func:read_global_concurrency_limit_by_name",
      "func:read_global_concurrency_limits",
      "func:release_concurrency_slots",
      "func:reset_concurrency_limit_by_tag",
      "func:update_global_concurrency_limit",
      "func:upsert_global_concurrency_limit_by_name"
    ],
    "old_files": [
      "client.py_deepseek_73b83f9f.py"
    ],
    "new_files": [
      "client_aeeaee.py"
    ]
  },
  {
    "file_signature": [
      "class:EvalbBracketingScorerTest",
      "func:multiple_runs",
      "func:setup_method",
      "func:tearDown",
      "func:test_distributed_evalb",
      "func:test_evalb_correctly_calculates_bracketing_metrics_over_multiple_trees",
      "func:test_evalb_correctly_scores_identical_trees",
      "func:test_evalb_correctly_scores_imperfect_trees",
      "func:test_evalb_with_terrible_trees_handles_nan_f1",
      "func:test_multiple_distributed_runs"
    ],
    "old_files": [
      "evalb_bracketing_scorer_test.py_deepseek_12a3ec63.py"
    ],
    "new_files": [
      "evalb_bracketing_scorer_test_a77d39.py"
    ]
  },
  {
    "file_signature": [
      "class:RememberTheMilkEntity",
      "func:__init__",
      "func:_check_token",
      "func:complete_task",
      "func:create_task",
      "func:name",
      "func:state"
    ],
    "old_files": [
      "entity.py_deepseek_54769d24.py"
    ],
    "new_files": [
      "entity_7a1eb0.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseExprVisitor",
      "class:Expr",
      "class:PandasExprVisitor",
      "class:PythonExprVisitor",
      "func:__call__",
      "func:__init__",
      "func:__len__",
      "func:__repr__",
      "func:_compose",
      "func:_compose2",
      "func:_filter_nodes",
      "func:_is_type",
      "func:_maybe_downcast_constants",
      "func:_maybe_eval",
      "func:_maybe_evaluate_binop",
      "func:_maybe_transform_eq_ne",
      "func:_node_not_implemented",
      "func:_op_maker",
      "func:_preparse",
      "func:_replace_booleans",
      "func:_replace_locals",
      "func:_rewrite_assign",
      "func:_rewrite_membership_op",
      "func:_try_visit_binop",
      "func:add_ops",
      "func:assigner",
      "func:disallow",
      "func:disallowed",
      "func:f",
      "func:names",
      "func:parse",
      "func:translate_In",
      "func:visit",
      "func:visit_Assign",
      "func:visit_Attribute",
      "func:visit_BinOp",
      "func:visit_BoolOp",
      "func:visit_Call",
      "func:visit_Compare",
      "func:visit_Constant",
      "func:visit_Expr",
      "func:visit_Index",
      "func:visit_List",
      "func:visit_Module",
      "func:visit_Name",
      "func:visit_NameConstant",
      "func:visit_Num",
      "func:visit_Slice",
      "func:visit_Str",
      "func:visit_Subscript",
      "func:visit_UnaryOp",
      "func:visitor"
    ],
    "old_files": [
      "expr.py_deepseek_e4a118ef.py"
    ],
    "new_files": [
      "expr_a7337f.py"
    ]
  },
  {
    "file_signature": [
      "class:InfluxFluxSensorData",
      "class:InfluxQLSensorData",
      "class:InfluxSensor",
      "func:__init__",
      "func:_merge_connection_config_into_query",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform",
      "func:update",
      "func:validate_query_format_for_version"
    ],
    "old_files": [
      "sensor.py_deepseek_38c42a0d.py"
    ],
    "new_files": [
      "sensor_f9ca2f.py"
    ]
  },
  {
    "file_signature": [
      "func:ephemeral_model",
      "func:ext_model",
      "func:ext_source",
      "func:ext_source_2",
      "func:ext_source_id_unique",
      "func:ext_source_other",
      "func:ext_source_other_2",
      "func:files",
      "func:macro_default_test_not_null",
      "func:macro_default_test_unique",
      "func:macro_materialization_table_default",
      "func:macro_test_not_null",
      "func:macro_test_unique",
      "func:macros",
      "func:make_exposure",
      "func:make_generic_test",
      "func:make_group",
      "func:make_macro",
      "func:make_manifest",
      "func:make_metric",
      "func:make_model",
      "func:make_not_null_test",
      "func:make_saved_query",
      "func:make_seed",
      "func:make_semantic_model",
      "func:make_singular_test",
      "func:make_source",
      "func:make_unique_test",
      "func:make_unit_test",
      "func:manifest",
      "func:metric",
      "func:metricflow_time_spine_model",
      "func:metrics",
      "func:namespace_model",
      "func:namespaced_seed",
      "func:namespaced_union_model",
      "func:nodes",
      "func:saved_queries",
      "func:saved_query",
      "func:seed",
      "func:semantic_model",
      "func:semantic_models",
      "func:source",
      "func:sources",
      "func:table_id_not_null",
      "func:table_id_unique",
      "func:table_model",
      "func:table_model_csv",
      "func:table_model_py",
      "func:union_model",
      "func:unit_test_table_model",
      "func:unit_tests",
      "func:versioned_model_v1",
      "func:versioned_model_v12_string",
      "func:versioned_model_v2",
      "func:versioned_model_v3",
      "func:versioned_model_v4_nested_dir",
      "func:view_id_unique",
      "func:view_model",
      "func:view_test_nothing"
    ],
    "old_files": [
      "manifest.py_deepseek_c8979c4a.py"
    ],
    "new_files": [
      "manifest_87d3d1.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_fqdn",
      "func:_update_route53",
      "func:setup",
      "func:update_records_interval",
      "func:update_records_service"
    ],
    "old_files": [
      "__init__.py_deepseek_9760c5ac.py"
    ],
    "new_files": [
      "__init___943365.py"
    ]
  },
  {
    "file_signature": [
      "class:InfluenceInterpreter",
      "class:InstanceInfluence",
      "class:InstanceWithGrads",
      "class:InterpretOutput",
      "func:__init__",
      "func:_calculate_influence_scores",
      "func:_gather_instances",
      "func:_gather_train_instances_and_compute_gradients",
      "func:from_archive",
      "func:from_path",
      "func:interpret",
      "func:interpret_from_file",
      "func:interpret_instances",
      "func:train_instances",
      "func:used_param_names",
      "func:used_params"
    ],
    "old_files": [
      "influence_interpreter.py_deepseek_c61f4344.py"
    ],
    "new_files": [
      "influence_interpreter_a2577a.py"
    ]
  },
  {
    "file_signature": [
      "class:_Options",
      "func:__contains__",
      "func:__delitem__",
      "func:__getitem__",
      "func:__init__",
      "func:__setitem__",
      "func:_get_canonical_key",
      "func:andrews_curves",
      "func:autocorrelation_plot",
      "func:bootstrap_plot",
      "func:deregister",
      "func:lag_plot",
      "func:parallel_coordinates",
      "func:radviz",
      "func:register",
      "func:reset",
      "func:scatter_matrix",
      "func:table",
      "func:use"
    ],
    "old_files": [
      "_misc.py_deepseek_e437bff3.py"
    ],
    "new_files": [
      "_misc_3826f1.py"
    ]
  },
  {
    "file_signature": [
      "class:AnalyticsTestCase",
      "class:TestCountStats",
      "class:TestProcessCountStat",
      "func:assertFillStateEquals",
      "func:assertTableState",
      "func:create_attachment",
      "func:create_direct_message_group_with_recipient",
      "func:create_message",
      "func:create_stream_with_recipient",
      "func:create_user",
      "func:make_dummy_count_stat",
      "func:setUp",
      "func:test_bad_fill_to_time",
      "func:test_messages_sent_by_client",
      "func:test_messages_sent_by_client_realm_constraint",
      "func:test_messages_sent_by_is_bot",
      "func:test_messages_sent_by_is_bot_realm_constraint",
      "func:test_messages_sent_by_message_type",
      "func:test_messages_sent_by_message_type_realm_constraint",
      "func:test_messages_sent_to_recipients_with_same_id",
      "func:test_messages_sent_to_stream_by_is_bot",
      "func:test_process_dependent_stat",
      "func:test_process_logging_stat",
      "func:test_process_stat",
      "func:test_upload_quota_used_bytes"
    ],
    "old_files": [
      "test_counts.py_deepseek_91638839.py"
    ],
    "new_files": [
      "test_counts_dbbc0a.py"
    ]
  },
  {
    "file_signature": [
      "func:mock_button",
      "func:mock_buttoncounter",
      "func:mock_controller",
      "func:mock_cover",
      "func:mock_cover_no_position",
      "func:mock_dimmer",
      "func:mock_lightsensor",
      "func:mock_module_no_subdevices",
      "func:mock_module_subdevices",
      "func:mock_relay",
      "func:mock_select",
      "func:mock_sensornumber",
      "func:mock_temperature"
    ],
    "old_files": [
      "conftest.py_deepseek_ef4e97b9.py"
    ],
    "new_files": [
      "conftest_976174.py"
    ]
  },
  {
    "file_signature": [
      "class:PretrainedTransformerEmbedder",
      "func:__init__",
      "func:_fold_long_sequences",
      "func:_number_of_token_type_embeddings",
      "func:_unfold_long_sequences",
      "func:fold",
      "func:forward",
      "func:get_output_dim",
      "func:lengths_to_mask",
      "func:train"
    ],
    "old_files": [
      "pretrained_transformer_embedder.py_deepseek_193bb568.py"
    ],
    "new_files": [
      "pretrained_transformer_embedder_dde022.py"
    ]
  },
  {
    "file_signature": [
      "class:GenericHygrostat",
      "func:__init__",
      "func:_async_switch_changed",
      "func:_async_switch_event",
      "func:_is_device_active",
      "func:_time_period_or_none",
      "func:available",
      "func:available_modes",
      "func:current_humidity",
      "func:device_class",
      "func:extra_state_attributes",
      "func:is_on",
      "func:max_humidity",
      "func:min_humidity",
      "func:mode",
      "func:name",
      "func:target_humidity"
    ],
    "old_files": [
      "humidifier.py_deepseek_0cbe9187.py"
    ],
    "new_files": [
      "humidifier_29087a.py"
    ]
  },
  {
    "file_signature": [
      "class:AirzoneAidooBinarySensor",
      "class:AirzoneBinarySensor",
      "class:AirzoneBinarySensorEntityDescription",
      "class:AirzoneSystemBinarySensor",
      "class:AirzoneZoneBinarySensor",
      "func:__init__",
      "func:_async_update_attrs",
      "func:_handle_coordinator_update",
      "func:available"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_a141e660.py"
    ],
    "new_files": [
      "binary_sensor_fae711.py"
    ]
  },
  {
    "file_signature": [
      "class:PlainSerializer",
      "class:SerializeAsAny",
      "class:WrapSerializer",
      "func:__class_getitem__",
      "func:__get_pydantic_core_schema__",
      "func:dec",
      "func:field_serializer",
      "func:model_serializer"
    ],
    "old_files": [
      "functional_serializers.py_deepseek_fbbe2221.py"
    ],
    "new_files": [
      "functional_serializers_f18005.py"
    ]
  },
  {
    "file_signature": [
      "class:DynamicFeePayloadDecoder",
      "class:DynamicFeeTransaction",
      "class:LondonLegacyTransaction",
      "class:LondonTransactionBuilder",
      "class:LondonTypedTransaction",
      "class:LondonUnsignedLegacyTransaction",
      "class:UnsignedDynamicFeeTransaction",
      "func:_type_byte",
      "func:as_signed_transaction",
      "func:blob_versioned_hashes",
      "func:check_signature_validity",
      "func:decode",
      "func:encode",
      "func:gas_price",
      "func:gas_used_by",
      "func:get_intrinsic_gas",
      "func:get_message_for_signing",
      "func:get_sender",
      "func:hash",
      "func:intrinsic_gas",
      "func:make_receipt",
      "func:max_fee_per_blob_gas",
      "func:new_dynamic_fee_transaction",
      "func:new_unsigned_dynamic_fee_transaction",
      "func:validate"
    ],
    "old_files": [
      "transactions.py_deepseek_125a38fe.py"
    ],
    "new_files": [
      "transactions_8ddaaa.py"
    ]
  },
  {
    "file_signature": [
      "class:KoalasUsageLogger",
      "func:__init__",
      "func:_format_signature",
      "func:get_logger",
      "func:log_failure",
      "func:log_missing",
      "func:log_success"
    ],
    "old_files": [
      "usage_logger.py_deepseek_ca12d5e0.py"
    ],
    "new_files": [
      "usage_logger_0d0a99.py"
    ]
  },
  {
    "file_signature": [
      "class:IResolver",
      "class:PathModifier",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_build_rel_location",
      "func:_get_valid_object",
      "func:_load_object",
      "func:_search_all_objects",
      "func:_search_object",
      "func:build_search_paths",
      "func:is_valid_class",
      "func:load_object",
      "func:search_all_objects"
    ],
    "old_files": [
      "iresolver.py_deepseek_3877b365.py"
    ],
    "new_files": [
      "iresolver_51e6b1.py"
    ]
  },
  {
    "file_signature": [
      "class:HTTPFetcher",
      "class:ThreadedLocalServer",
      "func:__init__",
      "func:_assert_env_var_loaded",
      "func:_wait_for_server_ready",
      "func:basic_app",
      "func:cd",
      "func:config",
      "func:configure",
      "func:create_server",
      "func:get_record_counter",
      "func:http_session",
      "func:index",
      "func:index_view",
      "func:json_get",
      "func:local_server_factory",
      "func:make_call",
      "func:make_requests",
      "func:record_counter",
      "func:run",
      "func:sample_app",
      "func:shutdown",
      "func:test_can_accept_get_request",
      "func:test_can_accept_multiple_connections",
      "func:test_can_accept_multiple_options_request",
      "func:test_can_accept_options_request",
      "func:test_can_get_unicode_string_content_length",
      "func:test_can_import_env_vars",
      "func:test_can_reload_server",
      "func:test_cors",
      "func:test_has_thread_safe_current_request",
      "func:unused_tcp_port",
      "func:wait_for_server_ready"
    ],
    "old_files": [
      "test_local.py_deepseek_3856ab90.py"
    ],
    "new_files": [
      "test_local_0cfc7f.py"
    ]
  },
  {
    "file_signature": [
      "class:ThresholdSensor",
      "func:__init__",
      "func:_async_setup_sensor",
      "func:_threshold_type",
      "func:_update_sensor_state",
      "func:_update_state",
      "func:above",
      "func:async_start_preview",
      "func:async_threshold_sensor_state_listener",
      "func:below",
      "func:extra_state_attributes",
      "func:no_missing_threshold"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_eb088605.py"
    ],
    "new_files": [
      "binary_sensor_19876e.py"
    ]
  },
  {
    "file_signature": [
      "class:EnvisalinkBinarySensor",
      "func:__init__",
      "func:async_update_callback",
      "func:device_class",
      "func:extra_state_attributes",
      "func:is_on"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_0433b0a2.py"
    ],
    "new_files": [
      "binary_sensor_e70512.py"
    ]
  },
  {
    "file_signature": [
      "class:MyClass",
      "func:foo1",
      "func:foo2",
      "func:foo3",
      "func:foo4",
      "func:my_func"
    ],
    "old_files": [
      "line_ranges_basic.py_deepseek_995f874f.py"
    ],
    "new_files": [
      "line_ranges_basic_766e5e.py"
    ]
  },
  {
    "file_signature": [
      "class:ISYAuxControlEntity",
      "class:ISYEntity",
      "class:ISYNodeEntity",
      "class:ISYProgramEntity",
      "func:__init__",
      "func:async_on_control",
      "func:async_on_update",
      "func:available",
      "func:extra_state_attributes"
    ],
    "old_files": [
      "entity.py_deepseek_8d553cb4.py"
    ],
    "new_files": [
      "entity_8bb532.py"
    ]
  },
  {
    "file_signature": [
      "class:IOU",
      "class:PFSConfig",
      "class:PFSInfo",
      "class:PFSProxy",
      "func:__init__",
      "func:_query_address_metadata",
      "func:_query_paths",
      "func:as_json",
      "func:check_pfs_for_production",
      "func:configure_pfs_or_exit",
      "func:create_current_iou",
      "func:get_last_iou",
      "func:get_pfs_info",
      "func:get_random_pfs",
      "func:get_valid_pfs_url",
      "func:make_iou",
      "func:post_pfs_feedback",
      "func:post_pfs_paths",
      "func:query_address_metadata",
      "func:query_paths",
      "func:sign",
      "func:update_iou"
    ],
    "old_files": [
      "pathfinding.py_deepseek_40519248.py"
    ],
    "new_files": [
      "pathfinding_7a5b8f.py"
    ]
  },
  {
    "file_signature": [
      "class:CombinedLearningRateScheduler",
      "func:__init__",
      "func:current_scheduler",
      "func:get_values",
      "func:load_state_dict",
      "func:state_dict",
      "func:step",
      "func:step_batch"
    ],
    "old_files": [
      "combined.py_deepseek_3818a3a8.py"
    ],
    "new_files": [
      "combined_d7e31f.py"
    ]
  },
  {
    "file_signature": [
      "class:DeprecatedField",
      "class:QueryObject",
      "func:__init__",
      "func:__repr__",
      "func:_init_series_columns",
      "func:_move_deprecated_extra_fields",
      "func:_rename_deprecated_fields",
      "func:_sanitize_filters",
      "func:_set_annotation_layers",
      "func:_set_is_timeseries",
      "func:_set_metrics",
      "func:_set_post_processing",
      "func:_validate_no_have_duplicate_labels",
      "func:_validate_there_are_no_missing_series",
      "func:cache_key",
      "func:column_names",
      "func:exec_post_processing",
      "func:is_str_or_adhoc",
      "func:metric_names",
      "func:to_dict",
      "func:validate"
    ],
    "old_files": [
      "query_object.py_deepseek_3172d101.py"
    ],
    "new_files": [
      "query_object_6550f7.py"
    ]
  },
  {
    "file_signature": [
      "func:ccxt_exceptionhandlers",
      "func:has_resp",
      "func:sort_data",
      "func:test___now_is_time_to_refresh",
      "func:test__amount_to_contracts",
      "func:test__ccxt_config",
      "func:test__fetch_and_calculate_funding_fees",
      "func:test__fetch_and_calculate_funding_fees_datetime_called",
      "func:test__get_contract_size",
      "func:test__get_funding_fees_from_exchange",
      "func:test__get_params",
      "func:test__get_stake_amount_limit",
      "func:test__get_stop_limit_rate",
      "func:test__load_async_markets",
      "func:test__load_markets",
      "func:test__order_contracts_to_amount",
      "func:test__trades_contracts_to_amount",
      "func:test__valid_trade_pagination_id",
      "func:test_amount_to_contract_precision",
      "func:test_buy_considers_time_in_force",
      "func:test_buy_dry_run",
      "func:test_buy_prod",
      "func:test_calculate_backoff",
      "func:test_calculate_fee_rate",
      "func:test_calculate_funding_fees",
      "func:test_cancel_order",
      "func:test_cancel_order_dry_run",
      "func:test_cancel_order_with_result",
      "func:test_cancel_order_with_result_error",
      "func:test_cancel_stoploss_order",
      "func:test_cancel_stoploss_order_with_result",
      "func:test_check_order_canceled_empty",
      "func:test_combine_funding_and_mark",
      "func:test_create_dry_run_order",
      "func:test_create_dry_run_order_fees",
      "func:test_create_dry_run_order_limit_fill",
      "func:test_create_dry_run_order_market_fill",
      "func:test_create_order",
      "func:test_destroy",
      "func:test_exchange_features",
      "func:test_exchange_has",
      "func:test_exchange_resolver",
      "func:test_extract_cost_curr_rate",
      "func:test_fetch_bids_asks",
      "func:test_fetch_l2_order_book",
      "func:test_fetch_l2_order_book_exception",
      "func:test_fetch_order",
      "func:test_fetch_order_emulated",
      "func:test_fetch_order_or_stoploss_order",
      "func:test_fetch_orders",
      "func:test_fetch_positions",
      "func:test_fetch_stoploss_order",
      "func:test_fetch_ticker",
      "func:test_fetch_trading_fees",
      "func:test_get_balances_prod",
      "func:test_get_conversion_rate",
      "func:test_get_entry_rate",
      "func:test_get_exit_rate",
      "func:test_get_exit_rate_exception",
      "func:test_get_exit_rate_orderbook",
      "func:test_get_exit_rate_orderbook_exception",
      "func:test_get_fee",
      "func:test_get_funding_fees",
      "func:test_get_historic_ohlcv",
      "func:test_get_historic_trades",
      "func:test_get_historic_trades_notsupported",
      "func:test_get_liquidation_price",
      "func:test_get_liquidation_price1",
      "func:test_get_maintenance_ratio_and_amt",
      "func:test_get_maintenance_ratio_and_amt_exceptions",
      "func:test_get_markets",
      "func:test_get_markets_error",
      "func:test_get_max_leverage_from_margin",
      "func:test_get_max_leverage_futures",
      "func:test_get_max_pair_stake_amount",
      "func:test_get_min_pair_stake_amount_real_data",
      "func:test_get_next_limit_in_list",
      "func:test_get_pair_base_currency",
      "func:test_get_pair_quote_currency",
      "func:test_get_quote_currencies",
      "func:test_get_rates_testing_entry",
      "func:test_get_rates_testing_exit",
      "func:test_get_stake_amount_considering_leverage",
      "func:test_get_ticker_rate_error",
      "func:test_get_tickers",
      "func:test_get_trades_for_order",
      "func:test_get_valid_pair_combination",
      "func:test_init",
      "func:test_init_ccxt_kwargs",
      "func:test_init_exception",
      "func:test_is_cancel_order_result_suitable",
      "func:test_liquidation_price_is_none",
      "func:test_load_leverage_tiers",
      "func:test_market_is_active",
      "func:test_market_is_tradable",
      "func:test_merge_ft_has_dict",
      "func:test_name",
      "func:test_ohlcv_candle_limit",
      "func:test_order_has_fee",
      "func:test_parse_leverage_tier",
      "func:test_price_get_one_pip",
      "func:test_price_to_precision_with_default_conf",
      "func:test_refresh_latest_ohlcv",
      "func:test_refresh_latest_ohlcv_cache",
      "func:test_refresh_latest_ohlcv_inv_result",
      "func:test_refresh_latest_trades",
      "func:test_refresh_ohlcv_with_cache",
      "func:test_reload_markets",
      "func:test_reload_markets_exception",
      "func:test_remove_exchange_credentials",
      "func:test_sell_considers_time_in_force",
      "func:test_sell_dry_run",
      "func:test_sell_prod",
      "func:test_set_margin_mode",
      "func:test_stoploss_contract_size",
      "func:test_stoploss_order_unsupported_exchange",
      "func:test_validate_freqai_compat",
      "func:test_validate_order_time_in_force",
      "func:test_validate_order_types_not_in_config",
      "func:test_validate_orderflow",
      "func:test_validate_ordertypes",
      "func:test_validate_ordertypes_stop_advanced",
      "func:test_validate_pricing",
      "func:test_validate_required_startup_candles",
      "func:test_validate_stakecurrency",
      "func:test_validate_stakecurrency_error",
      "func:test_validate_timeframes",
      "func:test_validate_timeframes_emulated_ohlcv_1",
      "func:test_validate_timeframes_emulated_ohlcvi_2",
      "func:test_validate_timeframes_failed",
      "func:test_validate_timeframes_not_in_config",
      "func:test_validate_trading_mode_and_margin_mode"
    ],
    "old_files": [
      "test_exchange.py_deepseek_872a0fde.py"
    ],
    "new_files": [
      "test_exchange_2ba68d.py"
    ]
  },
  {
    "file_signature": [
      "class:AirzoneEntity",
      "class:AirzoneHotWaterEntity",
      "class:AirzoneSystemEntity",
      "class:AirzoneWebServerEntity",
      "class:AirzoneZoneEntity",
      "func:__init__",
      "func:available",
      "func:get_airzone_value"
    ],
    "old_files": [
      "entity.py_deepseek_b83ba77e.py"
    ],
    "new_files": [
      "entity_9f065b.py"
    ]
  },
  {
    "file_signature": [
      "class:PublicTransportData",
      "class:TransportNSWSensor",
      "func:__init__",
      "func:_get_value",
      "func:extra_state_attributes",
      "func:icon",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_deepseek_dab7cb1b.py"
    ],
    "new_files": [
      "sensor_cdccc8.py"
    ]
  },
  {
    "file_signature": [
      "class:Abort",
      "class:BlockMissingCapabilities",
      "class:CancelledRun",
      "class:ConfigurationError",
      "class:CrashedRun",
      "class:ExternalSignal",
      "class:FailedRun",
      "class:FlowPauseTimeout",
      "class:FlowRunWaitTimeout",
      "class:HashError",
      "class:InfrastructureError",
      "class:InfrastructureNotAvailable",
      "class:InfrastructureNotFound",
      "class:InvalidNameError",
      "class:InvalidRepositoryURLError",
      "class:MappingLengthMismatch",
      "class:MappingMissingIterable",
      "class:MissingContextError",
      "class:MissingFlowError",
      "class:MissingProfileError",
      "class:MissingResult",
      "class:NotPausedError",
      "class:ObjectAlreadyExists",
      "class:ObjectNotFound",
      "class:ParameterBindError",
      "class:ParameterTypeError",
      "class:Pause",
      "class:PausedRun",
      "class:PrefectException",
      "class:PrefectHTTPStatusError",
      "class:PrefectImportError",
      "class:PrefectSignal",
      "class:ProfileSettingsValidationError",
      "class:ProtectedBlockError",
      "class:ReservedArgumentError",
      "class:ScriptError",
      "class:SerializationError",
      "class:SignatureMismatchError",
      "class:TerminationSignal",
      "class:UnfinishedRun",
      "class:UnspecifiedFlowError",
      "class:UpstreamTaskError",
      "func:__init__",
      "func:__str__",
      "func:_trim_traceback",
      "func:exception_traceback",
      "func:from_bad_params",
      "func:from_bind_failure",
      "func:from_httpx_error",
      "func:from_validation_error"
    ],
    "old_files": [
      "exceptions.py_deepseek_adfa0765.py"
    ],
    "new_files": [
      "exceptions_725799.py"
    ]
  },
  {
    "file_signature": [
      "class:DeflateDecoder",
      "class:GzipDecoder",
      "class:HTTPResponse",
      "func:__getattr__",
      "func:__init__",
      "func:_decode",
      "func:_error_catcher",
      "func:_flush_decoder",
      "func:_get_decoder",
      "func:_init_decoder",
      "func:close",
      "func:closed",
      "func:connection",
      "func:data",
      "func:decompress",
      "func:fileno",
      "func:from_base",
      "func:get_redirect_location",
      "func:getheader",
      "func:getheaders",
      "func:info",
      "func:readable",
      "func:readinto",
      "func:tell"
    ],
    "old_files": [
      "response.py_deepseek_bf44d9fe.py"
    ],
    "new_files": [
      "response_563505.py"
    ]
  },
  {
    "file_signature": [
      "class:LiveCheck",
      "class:LiveCheckSensor",
      "func:__init__",
      "func:_apply_monkeypatches",
      "func:_can_resolve",
      "func:_connect_signals",
      "func:_contribute_to_app",
      "func:_extract_signals",
      "func:_inner",
      "func:_install_bus_agent",
      "func:_install_test_execution_agent",
      "func:_prepare_case_name",
      "func:add_case",
      "func:bus",
      "func:case",
      "func:current_test",
      "func:for_app",
      "func:on_produce_attach_test_headers",
      "func:on_stream_event_in",
      "func:on_stream_event_out",
      "func:pending_tests",
      "func:reports"
    ],
    "old_files": [
      "app.py_deepseek_4fbf6d96.py"
    ],
    "new_files": [
      "app_986ad6.py"
    ]
  },
  {
    "file_signature": [
      "func:_join_split_log",
      "func:clean_logs",
      "func:fold_iter",
      "func:get_perturbed_columns",
      "func:kwdissoc",
      "func:parallel_validator",
      "func:parallel_validator_iteration",
      "func:validator",
      "func:validator_iteration"
    ],
    "old_files": [
      "validator.py_deepseek_af420d1c.py"
    ],
    "new_files": [
      "validator_71103e.py"
    ]
  },
  {
    "file_signature": [
      "class:ShowRunner",
      "class:ShowTask",
      "class:ShowTaskDirect",
      "func:__init__",
      "func:_handle_result",
      "func:_runtime_initialize",
      "func:execute",
      "func:get_runner_type",
      "func:run",
      "func:task_end_messages"
    ],
    "old_files": [
      "show.py_deepseek_19112c41.py"
    ],
    "new_files": [
      "show_0b8fd6.py"
    ]
  },
  {
    "file_signature": [
      "class:BuildsStrategy",
      "class:CompositeStrategy",
      "class:DataObject",
      "class:DataStrategy",
      "class:DrawFn",
      "class:PermutationStrategy",
      "class:PrettyIter",
      "class:RandomModule",
      "class:RunnerStrategy",
      "func:__call__",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:__not_a_first_class_strategy",
      "func:__repr__",
      "func:_as_finite_decimal",
      "func:_composite",
      "func:_from_type",
      "func:_from_type_deferred",
      "func:_functions",
      "func:_get_annotation_arg",
      "func:_get_typeddict_qualifiers",
      "func:_maybe_nil_uuids",
      "func:accept",
      "func:as_strategy",
      "func:binary",
      "func:booleans",
      "func:builds",
      "func:calc_label",
      "func:characters",
      "func:complex_numbers",
      "func:composite",
      "func:constrained_complex",
      "func:ctx",
      "func:data",
      "func:decimals",
      "func:deferred",
      "func:dictionaries",
      "func:dm_func",
      "func:do_draw",
      "func:domains",
      "func:draw",
      "func:emails",
      "func:example",
      "func:filter",
      "func:fixed_dictionaries",
      "func:flatmap",
      "func:fraction_to_decimal",
      "func:fractions",
      "func:from_regex",
      "func:from_type",
      "func:from_type_guarded",
      "func:frozensets",
      "func:functions",
      "func:int_to_decimal",
      "func:iterables",
      "func:lists",
      "func:map",
      "func:permutations",
      "func:random_module",
      "func:randoms",
      "func:recursive",
      "func:register_type_strategy",
      "func:runner",
      "func:sampled_from",
      "func:sets",
      "func:shared",
      "func:slices",
      "func:text",
      "func:uuids",
      "func:validate"
    ],
    "old_files": [
      "core.py_deepseek_e433c9e7.py"
    ],
    "new_files": [
      "core_336d4b.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseName",
      "class:BaseSignature",
      "class:Completion",
      "class:Name",
      "class:ParamName",
      "class:Signature",
      "func:__eq__",
      "func:__hash__",
      "func:__init__",
      "func:__ne__",
      "func:__repr__",
      "func:_complete",
      "func:_get_cache",
      "func:_get_docstring",
      "func:_get_docstring_signature",
      "func:_get_module_context",
      "func:_get_signatures",
      "func:_sort_names_by_start_pos",
      "func:_values_to_definitions",
      "func:bracket_start",
      "func:column",
      "func:complete",
      "func:defined_names",
      "func:description",
      "func:docstring",
      "func:execute",
      "func:full_name",
      "func:get_completion_prefix_length",
      "func:get_definition_end_position",
      "func:get_definition_start_position",
      "func:get_line_code",
      "func:get_signatures",
      "func:get_type_hint",
      "func:goto",
      "func:in_builtin_module",
      "func:index",
      "func:infer",
      "func:infer_annotation",
      "func:infer_default",
      "func:is_definition",
      "func:is_side_effect",
      "func:is_stub",
      "func:kind",
      "func:line",
      "func:module_name",
      "func:module_path",
      "func:name",
      "func:name_with_symbols",
      "func:params",
      "func:parent",
      "func:to_string",
      "func:type"
    ],
    "old_files": [
      "classes.py_deepseek_5a5bb443.py"
    ],
    "new_files": [
      "classes_29984e.py"
    ]
  },
  {
    "file_signature": [
      "class:DoubledEmailArgumentError",
      "class:EmailNotDeliveredError",
      "class:FromAddress",
      "class:NoEmailArgumentError",
      "func:__init__",
      "func:build_email",
      "func:clear_scheduled_emails",
      "func:clear_scheduled_invitation_emails",
      "func:custom_email_sender",
      "func:deliver_scheduled_emails",
      "func:get_header",
      "func:get_inlined_template",
      "func:get_inliner_instance",
      "func:handle_send_email_format_changes",
      "func:initialize_connection",
      "func:log_email_config_errors",
      "func:render_templates",
      "func:security_email_from_name",
      "func:send_custom_email",
      "func:send_custom_server_email",
      "func:send_email",
      "func:send_email_to_admins",
      "func:send_email_to_billing_admins_and_realm_owners",
      "func:send_future_email",
      "func:send_one_email",
      "func:tokenized_no_reply_address"
    ],
    "old_files": [
      "send_email.py_deepseek_a689bab8.py"
    ],
    "new_files": [
      "send_email_8ce2b6.py"
    ]
  },
  {
    "file_signature": [
      "class:MBCover",
      "func:__init__",
      "func:_reset_open_close",
      "func:actuator_down",
      "func:actuator_up",
      "func:name"
    ],
    "old_files": [
      "cover.py_deepseek_370912ea.py"
    ],
    "new_files": [
      "cover_b92bd5.py"
    ]
  },
  {
    "file_signature": [
      "func:_find_thresholds_with_same_risk",
      "func:find_thresholds_with_same_risk",
      "func:isotonic_calibration_learner",
      "func:p"
    ],
    "old_files": [
      "calibration.py_deepseek_70684408.py"
    ],
    "new_files": [
      "calibration_d3fe81.py"
    ]
  },
  {
    "file_signature": [
      "func:gen_ws_headers",
      "func:test_handshake_compress_bad_ext",
      "func:test_handshake_compress_client_notakeover",
      "func:test_handshake_compress_multi_ext_bad",
      "func:test_handshake_compress_multi_ext_wbits",
      "func:test_handshake_compress_server_notakeover",
      "func:test_handshake_compress_wbits",
      "func:test_handshake_compress_wbits_error",
      "func:test_handshake_no_transfer_encoding"
    ],
    "old_files": [
      "test_websocket_handshake.py_deepseek_5fe4076a.py"
    ],
    "new_files": [
      "test_websocket_handshake_a4bf54.py"
    ]
  },
  {
    "file_signature": [
      "class:LgTVDevice",
      "func:__init__",
      "func:__update_volume",
      "func:is_volume_muted",
      "func:media_channel",
      "func:media_content_id",
      "func:media_image_url",
      "func:media_next_track",
      "func:media_pause",
      "func:media_play",
      "func:media_previous_track",
      "func:media_stop",
      "func:media_title",
      "func:mute_volume",
      "func:play_media",
      "func:select_source",
      "func:send_command",
      "func:set_volume_level",
      "func:source",
      "func:source_list",
      "func:supported_features",
      "func:turn_off",
      "func:update",
      "func:volume_down",
      "func:volume_level",
      "func:volume_up"
    ],
    "old_files": [
      "media_player.py_deepseek_ab8a670a.py"
    ],
    "new_files": [
      "media_player_7d6a6e.py"
    ]
  },
  {
    "file_signature": [
      "class:FixerError",
      "class:MultiprocessRefactoringTool",
      "class:MultiprocessingUnsupported",
      "class:RefactoringTool",
      "class:_EveryNode",
      "func:__init__",
      "func:_child",
      "func:_detect_future_features",
      "func:_from_system_newlines",
      "func:_get_head_types",
      "func:_get_headnode_dict",
      "func:_identity",
      "func:_read_python_source",
      "func:_to_system_newlines",
      "func:advance",
      "func:gen_lines",
      "func:get_all_fix_names",
      "func:get_fixers",
      "func:get_fixers_from_package",
      "func:log_debug",
      "func:log_error",
      "func:log_message",
      "func:parse_block",
      "func:print_output",
      "func:processed_file",
      "func:refactor",
      "func:refactor_dir",
      "func:refactor_docstring",
      "func:refactor_doctest",
      "func:refactor_file",
      "func:refactor_stdin",
      "func:refactor_string",
      "func:refactor_tree",
      "func:summarize",
      "func:traverse_by",
      "func:wrap_toks",
      "func:write_file"
    ],
    "old_files": [
      "refactor.py_deepseek_d1039c8d.py"
    ],
    "new_files": [
      "refactor_3077ca.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseCall",
      "class:Call",
      "class:CallByzantium",
      "class:CallCode",
      "class:CallCodeEIP150",
      "class:CallEIP150",
      "class:CallEIP161",
      "class:DelegateCall",
      "class:DelegateCallEIP150",
      "class:StaticCall",
      "func:__call__",
      "func:compute_eip150_msg_gas",
      "func:compute_msg_extra_gas",
      "func:compute_msg_gas",
      "func:get_account_load_fee",
      "func:get_call_params",
      "func:max_child_gas_eip150"
    ],
    "old_files": [
      "call.py_deepseek_0cbb2796.py"
    ],
    "new_files": [
      "call_824067.py"
    ]
  },
  {
    "file_signature": [
      "class:OmadaDevicePortSwitchEntity",
      "class:OmadaDevicePortSwitchEntityDescription",
      "class:OmadaGatewayPortConfigSwitchEntityDescription",
      "class:OmadaGatewayPortStatusSwitchEntityDescription",
      "class:OmadaSwitchPortSwitchEntityDescription",
      "func:__init__",
      "func:_do_update",
      "func:_get_switch_port_base_name",
      "func:_handle_coordinator_update",
      "func:available"
    ],
    "old_files": [
      "switch.py_deepseek_05bbc9bf.py"
    ],
    "new_files": [
      "switch_e3332d.py"
    ]
  },
  {
    "file_signature": [
      "class:DataFrameInfo",
      "class:SeriesInfo",
      "class:_BaseInfo",
      "class:_DataFrameInfoPrinter",
      "class:_DataFrameTableBuilder",
      "class:_DataFrameTableBuilderNonVerbose",
      "class:_DataFrameTableBuilderVerbose",
      "class:_InfoPrinterAbstract",
      "class:_SeriesInfoPrinter",
      "class:_SeriesTableBuilder",
      "class:_SeriesTableBuilderNonVerbose",
      "class:_SeriesTableBuilderVerbose",
      "class:_TableBuilderAbstract",
      "class:_TableBuilderVerboseMixin",
      "func:__init__",
      "func:_create_table_builder",
      "func:_fill_empty_info",
      "func:_fill_non_empty_info",
      "func:_gen_columns",
      "func:_gen_dtypes",
      "func:_gen_line_numbers",
      "func:_gen_non_null_counts",
      "func:_gen_rows",
      "func:_gen_rows_with_counts",
      "func:_gen_rows_without_counts",
      "func:_get_body_column_widths",
      "func:_get_dataframe_dtype_counts",
      "func:_get_gross_column_widths",
      "func:_initialize_max_cols",
      "func:_initialize_memory_usage",
      "func:_initialize_show_counts",
      "func:_put_str",
      "func:_sizeof_fmt",
      "func:add_body_lines",
      "func:add_columns_summary_line",
      "func:add_dtypes_line",
      "func:add_header_line",
      "func:add_index_range_line",
      "func:add_memory_usage_line",
      "func:add_object_type_line",
      "func:add_separator_line",
      "func:add_series_name_line",
      "func:col_count",
      "func:data",
      "func:display_memory_usage",
      "func:dtype_counts",
      "func:dtypes",
      "func:exceeds_info_cols",
      "func:exceeds_info_rows",
      "func:get_lines",
      "func:header_column_widths",
      "func:headers",
      "func:ids",
      "func:max_rows",
      "func:memory_usage_bytes",
      "func:memory_usage_string",
      "func:non_null_counts",
      "func:render",
      "func:size_qualifier",
      "func:to_buffer"
    ],
    "old_files": [
      "info.py_deepseek_361b7bf2.py"
    ],
    "new_files": [
      "info_58f159.py"
    ]
  },
  {
    "file_signature": [
      "class:KedroSession",
      "class:KedroSessionError",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_describe_git",
      "func:_get_config_loader",
      "func:_init_store",
      "func:_jsonify_cli_context",
      "func:_log_exception",
      "func:_logger",
      "func:close",
      "func:create",
      "func:load_context",
      "func:run",
      "func:store"
    ],
    "old_files": [
      "session.py_deepseek_ce61005a.py"
    ],
    "new_files": [
      "session_127286.py"
    ]
  },
  {
    "file_signature": [
      "class:CannotCommunicate",
      "class:CannotConnect",
      "class:DSMRConnection",
      "class:DSMRFlowHandler",
      "class:DSMROptionFlowHandler",
      "func:__init__",
      "func:async_get_options_flow",
      "func:equipment_identifier",
      "func:equipment_identifier_gas",
      "func:get_serial_by_id",
      "func:update_telegram"
    ],
    "old_files": [
      "config_flow.py_deepseek_245b389c.py"
    ],
    "new_files": [
      "config_flow_b3a401.py"
    ]
  },
  {
    "file_signature": [
      "class:GitLabData",
      "class:GitLabSensor",
      "func:__init__",
      "func:_update",
      "func:icon",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_deepseek_ae00635a.py"
    ],
    "new_files": [
      "sensor_97b467.py"
    ]
  },
  {
    "file_signature": [
      "class:DatetimeIndex",
      "func:__getattr__",
      "func:__new__",
      "func:ceil",
      "func:day",
      "func:day_name",
      "func:day_of_week",
      "func:day_of_year",
      "func:dayofweek",
      "func:dayofyear",
      "func:days_in_month",
      "func:daysinmonth",
      "func:disallow_nanoseconds",
      "func:floor",
      "func:hour",
      "func:indexer_at_time",
      "func:indexer_between_time",
      "func:is_leap_year",
      "func:is_month_end",
      "func:is_month_start",
      "func:is_quarter_end",
      "func:is_quarter_start",
      "func:is_year_end",
      "func:is_year_start",
      "func:microsecond",
      "func:minute",
      "func:month",
      "func:month_name",
      "func:normalize",
      "func:pandas_at_time",
      "func:pandas_between_time",
      "func:quarter",
      "func:round",
      "func:second",
      "func:strftime",
      "func:week",
      "func:weekday",
      "func:weekofyear",
      "func:year"
    ],
    "old_files": [
      "datetimes.py_deepseek_289303b4.py"
    ],
    "new_files": [
      "datetimes_c4b343.py"
    ]
  },
  {
    "file_signature": [
      "class:PilightSensor",
      "func:__init__",
      "func:_handle_code",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform"
    ],
    "old_files": [
      "sensor.py_deepseek_4c09ee3c.py"
    ],
    "new_files": [
      "sensor_f532d5.py"
    ]
  },
  {
    "file_signature": [
      "class:PowConsensus",
      "func:__init__",
      "func:check_pow",
      "func:get_cache",
      "func:get_fee_recipient",
      "func:mine_pow_nonce",
      "func:validate_seal",
      "func:validate_seal_extension"
    ],
    "old_files": [
      "pow.py_deepseek_1aa57c12.py"
    ],
    "new_files": [
      "pow_5b6282.py"
    ]
  },
  {
    "file_signature": [
      "class:Relation",
      "class:RelationInfo",
      "class:TestMicrobatchModelRunner",
      "class:TestModelRunner",
      "class:TestRunTask",
      "func:hook_node",
      "func:log_model_result_catcher",
      "func:mock_run_queue",
      "func:model_runner",
      "func:run_result",
      "func:test__is_incremental",
      "func:test_adapter_info_tracking",
      "func:test_execute",
      "func:test_print_result_line",
      "func:test_run_task_cancel_connections",
      "func:test_run_task_preserve_edges",
      "func:test_safe_run_hooks",
      "func:test_should_run_in_parallel",
      "func:test_tracking_fails_safely_for_missing_adapter"
    ],
    "old_files": [
      "test_run.py_deepseek_3a6172d5.py"
    ],
    "new_files": [
      "test_run_e5cee0.py"
    ]
  },
  {
    "file_signature": [
      "class:NotAFunction",
      "func:__call__",
      "func:mod2",
      "func:test_applying_noop_filter_returns_self",
      "func:test_bumps_min_size_and_filters_for_content_str_methods",
      "func:test_can_rewrite_multiple_length_filters_if_not_lambdas",
      "func:test_does_not_rewrite_unsatisfiable_len_filter",
      "func:test_erroring_rewrite_unsatisfiable_filter",
      "func:test_filter_floats_can_skip_subnormals",
      "func:test_filter_rewriting_floats",
      "func:test_filter_rewriting_ints",
      "func:test_filter_rewriting_lambda_len_unique_elements",
      "func:test_filter_rewriting_text_lambda_len",
      "func:test_filter_rewriting_text_partial_len",
      "func:test_isidentifer_filter_unsatisfiable",
      "func:test_isidentifier_filter_properly_rewritten",
      "func:test_misc_sat_filter_rewrites",
      "func:test_misc_unsat_filter_rewrites",
      "func:test_regex_filter_rewriting",
      "func:test_rewrite_filter_chains_with_some_unhandled",
      "func:test_rewrite_unsatisfiable_filter",
      "func:test_rewriting_does_not_compare_decimal_snan",
      "func:test_rewriting_partially_understood_filters",
      "func:test_sequence_filter_rewriting",
      "func:test_unhandled_operator",
      "func:test_warns_on_suspicious_string_methods"
    ],
    "old_files": [
      "test_filter_rewriting.py_deepseek_5e8e5461.py"
    ],
    "new_files": [
      "test_filter_rewriting_c801f7.py"
    ]
  },
  {
    "file_signature": [
      "class:Cookies",
      "class:Headers",
      "class:Request",
      "class:Response",
      "class:_CookieCompatRequest",
      "class:_CookieCompatResponse",
      "func:__bool__",
      "func:__contains__",
      "func:__delitem__",
      "func:__eq__",
      "func:__getitem__",
      "func:__getstate__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:__setitem__",
      "func:__setstate__",
      "func:_get_content_decoder",
      "func:_is_known_encoding",
      "func:_normalize_header_key",
      "func:_normalize_header_value",
      "func:_obfuscate_sensitive_headers",
      "func:_parse_content_type_charset",
      "func:_parse_header_links",
      "func:_prepare",
      "func:add_unredirected_header",
      "func:charset_encoding",
      "func:clear",
      "func:close",
      "func:content",
      "func:cookies",
      "func:copy",
      "func:delete",
      "func:elapsed",
      "func:encoding",
      "func:extract_cookies",
      "func:get",
      "func:get_list",
      "func:has_redirect_location",
      "func:http_version",
      "func:info",
      "func:is_client_error",
      "func:is_error",
      "func:is_informational",
      "func:is_redirect",
      "func:is_server_error",
      "func:is_success",
      "func:items",
      "func:iter_bytes",
      "func:iter_lines",
      "func:iter_raw",
      "func:iter_text",
      "func:json",
      "func:keys",
      "func:links",
      "func:multi_items",
      "func:num_bytes_downloaded",
      "func:raise_for_status",
      "func:raw",
      "func:read",
      "func:reason_phrase",
      "func:request",
      "func:set",
      "func:set_cookie_header",
      "func:text",
      "func:update",
      "func:url",
      "func:values"
    ],
    "old_files": [
      "_models.py_deepseek_5798ddfd.py"
    ],
    "new_files": [
      "_models_dd672f.py"
    ]
  },
  {
    "file_signature": [
      "class:Node",
      "func:__call__",
      "func:__eq__",
      "func:__hash__",
      "func:__init__",
      "func:__lt__",
      "func:__repr__",
      "func:__str__",
      "func:_copy",
      "func:_dict_inputs_to_list",
      "func:_from_dict",
      "func:_from_list",
      "func:_func_name",
      "func:_get_readable_func_name",
      "func:_logger",
      "func:_node_error_message",
      "func:_outputs_to_dictionary",
      "func:_process_inputs_for_bind",
      "func:_run_with_dict",
      "func:_run_with_list",
      "func:_run_with_no_inputs",
      "func:_run_with_one_input",
      "func:_set_to_str",
      "func:_to_list",
      "func:_unique_key",
      "func:_validate_inputs",
      "func:_validate_inputs_dif_than_outputs",
      "func:_validate_unique_outputs",
      "func:confirms",
      "func:func",
      "func:hashable",
      "func:inputs",
      "func:name",
      "func:namespace",
      "func:node",
      "func:outputs",
      "func:run",
      "func:short_name",
      "func:tag",
      "func:tags"
    ],
    "old_files": [
      "node.py_deepseek_e7f44233.py"
    ],
    "new_files": [
      "node_4a9aca.py"
    ]
  },
  {
    "file_signature": [
      "class:RougeTest",
      "func:f1",
      "func:global_distributed_rouge",
      "func:setup_method",
      "func:test_distributed_rouge",
      "func:test_rouge",
      "func:test_rouge_with_zero_counts"
    ],
    "old_files": [
      "rouge_test.py_deepseek_057140f4.py"
    ],
    "new_files": [
      "rouge_test_960688.py"
    ]
  },
  {
    "file_signature": [
      "class:CreateUserParameters",
      "class:HandleMethod",
      "class:ZulipBaseCommand",
      "func:__call__",
      "func:abort_unless_locked",
      "func:add_create_user_args",
      "func:add_realm_args",
      "func:add_user_list_args",
      "func:check_config",
      "func:create_parser",
      "func:execute",
      "func:get_client",
      "func:get_create_user_params",
      "func:get_realm",
      "func:get_user",
      "func:get_users",
      "func:is_integer_string",
      "func:our_handle"
    ],
    "old_files": [
      "management.py_deepseek_0bb55999.py"
    ],
    "new_files": [
      "management_f4942e.py"
    ]
  },
  {
    "file_signature": [
      "class:TestPipelineCreateCommand",
      "class:TestPipelineDeleteCommand",
      "class:TestSyncDirs",
      "func:make_pipelines",
      "func:mock_click",
      "func:source",
      "func:test_bad_env",
      "func:test_bad_pipeline_name",
      "func:test_catalog_and_params",
      "func:test_create_pipeline",
      "func:test_create_pipeline_skip_config",
      "func:test_create_pipeline_template",
      "func:test_create_pipeline_template_command_line_override",
      "func:test_delete_pipeline",
      "func:test_delete_pipeline_fail",
      "func:test_delete_pipeline_skip",
      "func:test_duplicate_pipeline_name",
      "func:test_failed_copy",
      "func:test_no_pipeline_arg_error",
      "func:test_pipeline_delete_confirmation",
      "func:test_pipeline_delete_confirmation_skip",
      "func:test_pipeline_not_found",
      "func:test_skip_copy",
      "func:test_sync_no_target",
      "func:test_sync_target_exists"
    ],
    "old_files": [
      "test_pipeline.py_deepseek_e758eb0d.py"
    ],
    "new_files": [
      "test_pipeline_ab4ea1.py"
    ]
  },
  {
    "file_signature": [
      "class:freqai_test_strat",
      "func:feature_engineering_expand_all",
      "func:feature_engineering_expand_basic",
      "func:feature_engineering_standard",
      "func:populate_entry_trend",
      "func:populate_exit_trend",
      "func:populate_indicators",
      "func:set_freqai_targets"
    ],
    "old_files": [
      "freqai_test_strat.py_deepseek_1f03992b.py"
    ],
    "new_files": [
      "freqai_test_strat_0dc220.py"
    ]
  },
  {
    "file_signature": [
      "class:EventManager",
      "class:PullPointManager",
      "class:WebHookManager",
      "func:__init__",
      "func:_async_background_pull_messages_or_reschedule",
      "func:_async_register_webhook",
      "func:_async_unregister_webhook",
      "func:async_add_listener",
      "func:async_callback_listeners",
      "func:async_cancel_pull_messages",
      "func:async_mark_events_stale",
      "func:async_pause",
      "func:async_remove_listener",
      "func:async_resume",
      "func:async_schedule_pull_messages",
      "func:async_webhook_failed",
      "func:async_webhook_working",
      "func:get_platform",
      "func:get_uid",
      "func:get_uids_by_platform",
      "func:remove_listener",
      "func:started"
    ],
    "old_files": [
      "event.py_deepseek_d71a1ed0.py"
    ],
    "new_files": [
      "event_0577a3.py"
    ]
  },
  {
    "file_signature": [
      "class:TextClassificationJsonReader",
      "func:__init__",
      "func:_read",
      "func:_truncate",
      "func:apply_token_indexers",
      "func:text_to_instance"
    ],
    "old_files": [
      "text_classification_json.py_deepseek_45388262.py"
    ],
    "new_files": [
      "text_classification_json_d0a412.py"
    ]
  },
  {
    "file_signature": [
      "class:BlocksDocumentAsyncClient",
      "class:BlocksDocumentClient",
      "func:create_block_document",
      "func:delete_block_document",
      "func:read_block_document",
      "func:read_block_documents",
      "func:update_block_document"
    ],
    "old_files": [
      "client.py_deepseek_0fece5a3.py"
    ],
    "new_files": [
      "client_22bde8.py"
    ]
  },
  {
    "file_signature": [
      "class:FieldDescriptorT",
      "class:ModelOptions",
      "class:ModelT",
      "class:_InitSubclassCheck",
      "class:_UsingKwargsInNew",
      "func:__init__",
      "func:__init_subclass__",
      "func:as_dict",
      "func:clone",
      "func:clone_defaults",
      "func:derive",
      "func:dumps",
      "func:from_data",
      "func:getattr",
      "func:ident",
      "func:is_valid",
      "func:lazy_coercion",
      "func:loads",
      "func:on_model_attached",
      "func:prepare_value",
      "func:related_models",
      "func:should_coerce",
      "func:to_python",
      "func:to_representation",
      "func:validate",
      "func:validate_all",
      "func:validate_or_raise",
      "func:validation_error",
      "func:validation_errors"
    ],
    "old_files": [
      "models.py_deepseek_63b1f093.py"
    ],
    "new_files": [
      "models_25879e.py"
    ]
  },
  {
    "file_signature": [
      "class:ChunkState",
      "class:DeflateBuffer",
      "class:HeadersParser",
      "class:HttpParser",
      "class:HttpPayloadParser",
      "class:HttpRequestParser",
      "class:HttpResponseParser",
      "class:ParseState",
      "class:RawRequestMessage",
      "class:RawResponseMessage",
      "func:__init__",
      "func:_is_chunked_te",
      "func:_is_supported_upgrade",
      "func:begin_http_chunk_receiving",
      "func:end_http_chunk_receiving",
      "func:feed_data",
      "func:feed_eof",
      "func:get_content_length",
      "func:parse_headers",
      "func:parse_message",
      "func:set_exception",
      "func:set_upgraded"
    ],
    "old_files": [
      "http_parser.py_deepseek_b7839247.py"
    ],
    "new_files": [
      "http_parser_0d16fa.py"
    ]
  },
  {
    "file_signature": [
      "class:AppEngineAdapter",
      "class:AppEngineMROHack",
      "class:InsecureAppEngineAdapter",
      "class:_AppEngineConnection",
      "class:_AppEnginePoolManager",
      "func:__init__",
      "func:_check_version",
      "func:clear",
      "func:connection_from_url",
      "func:init_poolmanager",
      "func:monkeypatch",
      "func:urlopen"
    ],
    "old_files": [
      "appengine.py_deepseek_3880ff96.py"
    ],
    "new_files": [
      "appengine_f79cd5.py"
    ]
  },
  {
    "file_signature": [
      "class:UnitSystem",
      "func:__init__",
      "func:_deprecated_unit_system",
      "func:_is_valid_unit",
      "func:accumulated_precipitation",
      "func:area",
      "func:as_dict",
      "func:get_converted_unit",
      "func:get_unit_system",
      "func:length",
      "func:pressure",
      "func:temperature",
      "func:volume",
      "func:wind_speed"
    ],
    "old_files": [
      "unit_system.py_deepseek_e74b9d39.py"
    ],
    "new_files": [
      "unit_system_a3b7c4.py"
    ]
  },
  {
    "file_signature": [
      "class:Crossover",
      "class:DifferentialEvolution",
      "class:_DE",
      "func:__init__",
      "func:_internal_ask_candidate",
      "func:_internal_tell_candidate",
      "func:_internal_tell_not_asked",
      "func:apply",
      "func:onepoint",
      "func:recommend",
      "func:rotated_twopoints",
      "func:set_objective_weights",
      "func:twopoints",
      "func:variablewise",
      "func:voronoi"
    ],
    "old_files": [
      "differentialevolution.py_deepseek_3f237df5.py"
    ],
    "new_files": [
      "differentialevolution_f6d97d.py"
    ]
  },
  {
    "file_signature": [
      "class:DatetimeArray",
      "func:__array__",
      "func:__iter__",
      "func:_add_offset",
      "func:_assert_tzawareness_compat",
      "func:_box_func",
      "func:_check_compatible_with",
      "func:_field_accessor",
      "func:_format_native_types",
      "func:_from_scalars",
      "func:_from_sequence",
      "func:_from_sequence_not_strict",
      "func:_generate_range",
      "func:_local_timestamps",
      "func:_resolution_obj",
      "func:_scalar_from_string",
      "func:_scalar_type",
      "func:_simple_new",
      "func:_unbox_scalar",
      "func:_validate_dtype",
      "func:astype",
      "func:dtype",
      "func:f",
      "func:is_normalized",
      "func:tz",
      "func:tz_convert",
      "func:tz_to_dtype",
      "func:tzinfo"
    ],
    "old_files": [
      "datetimes.py_deepseek_c996d436.py"
    ],
    "new_files": [
      "datetimes_71dd39.py"
    ]
  },
  {
    "file_signature": [
      "class:ContractTestCase",
      "class:Obj",
      "class:TestAdapterConversions",
      "func:MockDocumentation",
      "func:MockGenerateMacro",
      "func:MockMacro",
      "func:MockMaterialization",
      "func:MockNode",
      "func:MockSource",
      "func:_get_tester_for",
      "func:_make_table_of",
      "func:assert_fails_validation",
      "func:assert_from_dict",
      "func:assert_symmetric",
      "func:assert_to_dict",
      "func:clear_plugin",
      "func:compare_dicts",
      "func:config_from_parts_or_dicts",
      "func:dict_replace",
      "func:generate_name_macros",
      "func:inject_adapter",
      "func:inject_plugin",
      "func:inject_plugin_for",
      "func:load_internal_manifest_macros",
      "func:make_manifest",
      "func:mock_connection",
      "func:normalize",
      "func:profile_from_dict",
      "func:project_from_dict",
      "func:replace_config",
      "func:setUp"
    ],
    "old_files": [
      "__init__.py_deepseek_38e75939.py"
    ],
    "new_files": [
      "__init___d345bd.py"
    ]
  },
  {
    "file_signature": [
      "func:test_first_categorical_and_datetime_data_nat",
      "func:test_first_last_extension_array_keeps_dtype",
      "func:test_first_last_nth",
      "func:test_first_last_nth_dtypes",
      "func:test_first_last_nth_dtypes2",
      "func:test_first_last_nth_nan_dtype",
      "func:test_first_last_tz",
      "func:test_first_last_tz_multi_column",
      "func:test_first_last_with_None",
      "func:test_first_last_with_None_expanded",
      "func:test_first_last_with_na_object",
      "func:test_first_multi_key_groupby_categorical",
      "func:test_first_strings_timestamps",
      "func:test_group_selection_cache",
      "func:test_groupby_head_tail",
      "func:test_groupby_last_first_nth_with_none",
      "func:test_groupby_nth_int_like_precision",
      "func:test_groupby_nth_interval",
      "func:test_head_tail_dropna_false",
      "func:test_head_tail_dropna_true",
      "func:test_invalid_argument",
      "func:test_negative_step",
      "func:test_np_ints",
      "func:test_nth",
      "func:test_nth2",
      "func:test_nth3",
      "func:test_nth4",
      "func:test_nth5",
      "func:test_nth_after_selection",
      "func:test_nth_bdays",
      "func:test_nth_column_order",
      "func:test_nth_empty",
      "func:test_nth_indexed",
      "func:test_nth_multi_grouper",
      "func:test_nth_multi_index_as_expected",
      "func:test_nth_nan_in_grouper",
      "func:test_nth_nan_in_grouper_series",
      "func:test_nth_with_na_object",
      "func:test_slice"
    ],
    "old_files": [
      "test_nth.py_deepseek_48be8cb9.py"
    ],
    "new_files": [
      "test_nth_cbbcbb.py"
    ]
  },
  {
    "file_signature": [
      "class:TestPreviousVersionState",
      "func:analyses",
      "func:compare_previous_results",
      "func:compare_previous_state",
      "func:generate_latest_manifest",
      "func:generate_latest_run_results",
      "func:macros",
      "func:models",
      "func:seeds",
      "func:snapshots",
      "func:test_backwards_compatible_run_results_versions",
      "func:test_backwards_compatible_versions",
      "func:test_compare_results_current",
      "func:test_compare_state_current",
      "func:test_get_manifest_schema_version",
      "func:test_nonbackwards_compatible_versions",
      "func:test_project",
      "func:tests"
    ],
    "old_files": [
      "test_previous_version_state.py_deepseek_89d24786.py"
    ],
    "new_files": [
      "test_previous_version_state_eb5537.py"
    ]
  },
  {
    "file_signature": [
      "class:BoomFile",
      "class:LenFile",
      "class:NoLenBoomFile",
      "class:RegHandle",
      "class:TestAddressInNetwork",
      "class:TestContentEncodingDetection",
      "class:TestExtractZippedPaths",
      "class:TestGetEnvironProxies",
      "class:TestGuessFilename",
      "class:TestGuessJSONUTF",
      "class:TestIsIPv4Address",
      "class:TestIsValidCIDR",
      "class:TestSuperLen",
      "class:TestToKeyValList",
      "class:TestUnquoteHeaderValue",
      "func:Close",
      "func:OpenKey",
      "func:QueryValueEx",
      "func:__init__",
      "func:__len__",
      "func:no_proxy",
      "func:seek",
      "func:tell",
      "func:test_add_dict_to_cookiejar",
      "func:test_bad_utf_like_encoding",
      "func:test_bypass",
      "func:test_bypass_no_proxy_keyword",
      "func:test_dotted_netmask",
      "func:test_encoded",
      "func:test_file",
      "func:test_get_auth_from_url",
      "func:test_get_encoding_from_headers",
      "func:test_guess_by_bom",
      "func:test_guess_filename_invalid",
      "func:test_guess_filename_valid",
      "func:test_invalid",
      "func:test_io_streams",
      "func:test_is_filename",
      "func:test_iter_slices",
      "func:test_none",
      "func:test_not_bypass",
      "func:test_not_bypass_no_proxy_keyword",
      "func:test_parse_dict_header",
      "func:test_parse_header_links",
      "func:test_pragmas",
      "func:test_precedence",
      "func:test_prepend_scheme_if_needed",
      "func:test_requote_uri_with_unquoted_percents",
      "func:test_select_proxies",
      "func:test_set_environ",
      "func:test_set_environ_raises_exception",
      "func:test_should_bypass_proxies",
      "func:test_should_bypass_proxies_no_proxy",
      "func:test_should_bypass_proxies_win_registry",
      "func:test_string",
      "func:test_super_len_correctly_calculates_len_of_partially_read_file",
      "func:test_super_len_handles_files_raising_weird_errors_in_tell",
      "func:test_super_len_tell_ioerror",
      "func:test_super_len_with__len__",
      "func:test_super_len_with_fileno",
      "func:test_super_len_with_no__len__",
      "func:test_super_len_with_no_matches",
      "func:test_super_len_with_tell",
      "func:test_unicode_is_ascii",
      "func:test_unquote_unreserved",
      "func:test_unzipped_paths_unchanged",
      "func:test_urldefragauth",
      "func:test_valid",
      "func:test_zipped_paths_extracted"
    ],
    "old_files": [
      "test_utils.py_deepseek_5ad1280a.py"
    ],
    "new_files": [
      "test_utils_014a22.py"
    ]
  },
  {
    "file_signature": [
      "class:ParseError",
      "class:Parser",
      "func:__init__",
      "func:addtoken",
      "func:classify",
      "func:pop",
      "func:push",
      "func:setup",
      "func:shift"
    ],
    "old_files": [
      "parse.py_deepseek_20a9738b.py"
    ],
    "new_files": [
      "parse_7b93d1.py"
    ]
  },
  {
    "file_signature": [
      "class:Schema",
      "func:__init__",
      "func:__repr__",
      "func:_model_serializer",
      "func:compile",
      "func:dumps_key",
      "func:dumps_value",
      "func:loads_key",
      "func:loads_value",
      "func:on_dumps_key_prepare_headers",
      "func:on_dumps_value_prepare_headers",
      "func:update"
    ],
    "old_files": [
      "schemas.py_deepseek_f1442ce8.py"
    ],
    "new_files": [
      "schemas_1abb49.py"
    ]
  },
  {
    "file_signature": [
      "class:GrowattData",
      "class:GrowattInverter",
      "func:__init__",
      "func:get_currency",
      "func:get_data",
      "func:get_device_list",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:update"
    ],
    "old_files": [
      "__init__.py_deepseek_892dc81c.py"
    ],
    "new_files": [
      "__init___ea74db.py"
    ]
  },
  {
    "file_signature": [
      "class:MailNotificationService",
      "func:__init__",
      "func:_attach_file",
      "func:_build_html_msg",
      "func:_build_multipart_msg",
      "func:_build_text_msg",
      "func:_send_email",
      "func:connect",
      "func:connection_is_valid",
      "func:get_service",
      "func:send_message"
    ],
    "old_files": [
      "notify.py_deepseek_79a4d062.py"
    ],
    "new_files": [
      "notify_74dbdd.py"
    ]
  },
  {
    "file_signature": [
      "class:AdadeltaOptimizer",
      "class:AdagradOptimizer",
      "class:AdamOptimizer",
      "class:AdamWOptimizer",
      "class:AdamaxOptimizer",
      "class:AveragedSgdOptimizer",
      "class:DenseSparseAdam",
      "class:HuggingfaceAdafactor",
      "class:HuggingfaceAdamWOptimizer",
      "class:MultiOptimizer",
      "class:Optimizer",
      "class:RmsPropOptimizer",
      "class:SgdOptimizer",
      "class:SparseAdamOptimizer",
      "func:__init__",
      "func:default",
      "func:load_state_dict",
      "func:make_parameter_groups",
      "func:make_sparse",
      "func:state_dict",
      "func:step",
      "func:zero_grad"
    ],
    "old_files": [
      "optimizers.py_deepseek_9ab847a5.py"
    ],
    "new_files": [
      "optimizers_03ae81.py"
    ]
  },
  {
    "file_signature": [
      "class:ConnectionPool",
      "class:HTTPConnectionPool",
      "class:HTTPSConnectionPool",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:__str__",
      "func:_absolute_url",
      "func:_add_transport_headers",
      "func:_build_context",
      "func:_get_timeout",
      "func:_ipv6_host",
      "func:_new_conn",
      "func:_raise_timeout",
      "func:close",
      "func:connection_from_url",
      "func:drain_and_release_conn",
      "func:is_same_host"
    ],
    "old_files": [
      "connectionpool.py_deepseek_4740ff85.py"
    ],
    "new_files": [
      "connectionpool_8dc770.py"
    ]
  },
  {
    "file_signature": [
      "func:deps_dir",
      "func:lib_dir",
      "func:mock_async_subprocess",
      "func:mock_env_copy",
      "func:mock_popen",
      "func:mock_sys",
      "func:mock_venv",
      "func:new_path_mock",
      "func:test_check_package_fragment",
      "func:test_check_package_global",
      "func:test_check_package_previous_failed_install",
      "func:test_get_is_installed",
      "func:test_install",
      "func:test_install_constraint",
      "func:test_install_error",
      "func:test_install_pip_compatibility_no_workaround",
      "func:test_install_pip_compatibility_use_workaround",
      "func:test_install_target",
      "func:test_install_upgrade",
      "func:test_install_with_timeout"
    ],
    "old_files": [
      "test_package.py_deepseek_ecc92182.py"
    ],
    "new_files": [
      "test_package_36a67f.py"
    ]
  },
  {
    "file_signature": [
      "func:_assert_frame_equal_both",
      "func:by_blocks_fixture",
      "func:test_allows_duplicate_labels",
      "func:test_assert_frame_equal_check_like_categorical_midx",
      "func:test_assert_frame_equal_check_like_different_indexes",
      "func:test_assert_frame_equal_checking_allow_dups_flag",
      "func:test_assert_frame_equal_columns_mixed_dtype",
      "func:test_assert_frame_equal_datetime_like_dtype_mismatch",
      "func:test_assert_frame_equal_ea_column_definition_in_exception",
      "func:test_assert_frame_equal_ea_column_definition_in_exception_mask",
      "func:test_assert_frame_equal_extension_dtype_mismatch",
      "func:test_assert_frame_equal_ignore_extension_dtype_mismatch",
      "func:test_assert_frame_equal_ignore_extension_dtype_mismatch_cross_class",
      "func:test_assert_frame_equal_interval_dtype_mismatch",
      "func:test_assert_frame_equal_set",
      "func:test_assert_frame_equal_set_mismatch",
      "func:test_assert_frame_equal_ts_column",
      "func:test_empty_dtypes",
      "func:test_frame_equal_block_mismatch",
      "func:test_frame_equal_columns_mismatch",
      "func:test_frame_equal_extension_dtype",
      "func:test_frame_equal_index_dtype_mismatch",
      "func:test_frame_equal_index_mismatch",
      "func:test_frame_equal_mixed_dtypes",
      "func:test_frame_equal_row_order_mismatch",
      "func:test_frame_equal_shape_mismatch",
      "func:test_frame_equal_unicode"
    ],
    "old_files": [
      "test_assert_frame_equal.py_deepseek_ab19c425.py"
    ],
    "new_files": [
      "test_assert_frame_equal_d9bb56.py"
    ]
  },
  {
    "file_signature": [
      "class:PathName",
      "func:_add_os_path_join",
      "func:_add_strings",
      "func:_get_string_additions",
      "func:check",
      "func:complete_file_name",
      "func:iterate_nodes"
    ],
    "old_files": [
      "file_name.py_deepseek_3fa33654.py"
    ],
    "new_files": [
      "file_name_dac33e.py"
    ]
  },
  {
    "file_signature": [
      "class:_NodeCacheItem",
      "func:__init__",
      "func:_get_cache_clear_lock_path",
      "func:_get_cache_directory_path",
      "func:_get_default_cache_path",
      "func:_get_hashed_path",
      "func:_load_from_file_system",
      "func:_remove_cache_and_update_lock",
      "func:_save_to_file_system",
      "func:_set_cache_item",
      "func:_touch",
      "func:clear_cache",
      "func:clear_inactive_cache",
      "func:load_module",
      "func:try_to_save_module"
    ],
    "old_files": [
      "cache.py_deepseek_397aeb92.py"
    ],
    "new_files": [
      "cache_f3079a.py"
    ]
  },
  {
    "file_signature": [
      "class:EnvelopeMessage",
      "class:Lock",
      "class:LockExpired",
      "class:LockedTransfer",
      "class:LockedTransferBase",
      "class:RefundTransfer",
      "class:RevealSecret",
      "class:SecretRequest",
      "class:Unlock",
      "func:__post_init__",
      "func:_data_to_sign",
      "func:_pack_locked_transfer_data",
      "func:_packed_data",
      "func:as_bytes",
      "func:assert_envelope_values",
      "func:assert_transfer_values",
      "func:from_bytes",
      "func:from_event",
      "func:lockhash",
      "func:message_hash",
      "func:secrethash"
    ],
    "old_files": [
      "transfers.py_deepseek_9cc081e0.py"
    ],
    "new_files": [
      "transfers_b8ecf0.py"
    ]
  },
  {
    "file_signature": [
      "class:ClientConnectionError",
      "class:ClientConnectionResetError",
      "class:ClientConnectorCertificateError",
      "class:ClientConnectorDNSError",
      "class:ClientConnectorError",
      "class:ClientConnectorSSLError",
      "class:ClientError",
      "class:ClientHttpProxyError",
      "class:ClientOSError",
      "class:ClientPayloadError",
      "class:ClientProxyConnectionError",
      "class:ClientResponseError",
      "class:ClientSSLError",
      "class:ConnectionTimeoutError",
      "class:ContentTypeError",
      "class:InvalidURL",
      "class:InvalidUrlClientError",
      "class:InvalidUrlRedirectClientError",
      "class:NonHttpUrlClientError",
      "class:NonHttpUrlRedirectClientError",
      "class:RedirectClientError",
      "class:ServerConnectionError",
      "class:ServerDisconnectedError",
      "class:ServerFingerprintMismatch",
      "class:ServerTimeoutError",
      "class:SocketTimeoutError",
      "class:TooManyRedirects",
      "class:UnixClientConnectorError",
      "class:WSMessageTypeError",
      "class:WSServerHandshakeError",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:certificate_error",
      "func:description",
      "func:host",
      "func:os_error",
      "func:path",
      "func:port",
      "func:ssl",
      "func:url"
    ],
    "old_files": [
      "client_exceptions.py_deepseek_dce05f8f.py"
    ],
    "new_files": [
      "client_exceptions_dac1d7.py"
    ]
  },
  {
    "file_signature": [
      "class:BasePassiveBluetoothCoordinator",
      "func:__init__",
      "func:_async_handle_bluetooth_event",
      "func:_async_handle_unavailable",
      "func:_async_start",
      "func:_async_stop",
      "func:async_start",
      "func:last_seen",
      "func:name"
    ],
    "old_files": [
      "update_coordinator.py_deepseek_4245f689.py"
    ],
    "new_files": [
      "update_coordinator_155ec7.py"
    ]
  },
  {
    "file_signature": [
      "func:_drop_random_half",
      "func:_drop_random_quarter",
      "func:_run_transition_test_with_attestations",
      "func:test_non_empty_historical_roots",
      "func:test_normal_transition",
      "func:test_simple_transition",
      "func:test_transition_missing_first_post_block",
      "func:test_transition_missing_last_pre_fork_block",
      "func:test_transition_only_blocks_post_fork",
      "func:test_transition_randomized_state",
      "func:test_transition_with_finality",
      "func:test_transition_with_no_attestations_until_after_fork",
      "func:test_transition_with_random_half_participation",
      "func:test_transition_with_random_three_quarters_participation"
    ],
    "old_files": [
      "test_transition.py_deepseek_5b8686d2.py"
    ],
    "new_files": [
      "test_transition_77bcb3.py"
    ]
  },
  {
    "file_signature": [
      "class:RequestHandler",
      "class:_ArgDefaultMarker",
      "func:__init__",
      "func:_convert_header_value",
      "func:_get_argument",
      "func:_get_arguments",
      "func:_initialize",
      "func:_unimplemented_method",
      "func:add_header",
      "func:clear",
      "func:clear_all_cookies",
      "func:clear_cookie",
      "func:clear_header",
      "func:cookies",
      "func:create_signed_value",
      "func:decode_argument",
      "func:get_argument",
      "func:get_arguments",
      "func:get_body_argument",
      "func:get_body_arguments",
      "func:get_cookie",
      "func:get_query_argument",
      "func:get_query_arguments",
      "func:get_signed_cookie",
      "func:get_signed_cookie_key_version",
      "func:get_status",
      "func:on_connection_close",
      "func:on_finish",
      "func:prepare",
      "func:redirect",
      "func:render",
      "func:set_cookie",
      "func:set_default_headers",
      "func:set_header",
      "func:set_signed_cookie",
      "func:set_status",
      "func:settings",
      "func:write"
    ],
    "old_files": [
      "web.py_deepseek_5a5f7fa7.py"
    ],
    "new_files": [
      "web_779fc7.py"
    ]
  },
  {
    "file_signature": [
      "func:add_new_user_history",
      "func:created_bot_event",
      "func:do_activate_mirror_dummy_user",
      "func:do_create_user",
      "func:do_reactivate_user",
      "func:notify_created_bot",
      "func:notify_created_user",
      "func:notify_new_user",
      "func:process_new_human_user",
      "func:send_group_direct_message_to_admins",
      "func:send_message_to_signup_notification_stream",
      "func:set_up_streams_and_groups_for_new_human_user",
      "func:stream_name"
    ],
    "old_files": [
      "create_user.py_deepseek_46a62a4c.py"
    ],
    "new_files": [
      "create_user_36a545.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseChoice",
      "class:Choice",
      "class:TransitionChoice",
      "func:__init__",
      "func:__len__",
      "func:_get_parameters_str",
      "func:_internal_get_standardized_data",
      "func:_internal_set_standardized_data",
      "func:_layered_get_value",
      "func:_layered_set_value",
      "func:choices",
      "func:get_value_hash",
      "func:index",
      "func:indices",
      "func:mutate",
      "func:transitions"
    ],
    "old_files": [
      "choice.py_deepseek_7210e35e.py"
    ],
    "new_files": [
      "choice_599488.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseReinforcementLearningModel",
      "class:MyRLEnv",
      "func:__init__",
      "func:_init",
      "func:_on_stop",
      "func:_predict",
      "func:build_ohlc_price_dataframes",
      "func:calculate_reward",
      "func:drop_ohlc_from_df",
      "func:fit",
      "func:get_state_info",
      "func:load_model_from_disk",
      "func:make_env",
      "func:pack_env_dict",
      "func:predict",
      "func:rl_model_predict",
      "func:set_train_and_eval_environments",
      "func:train",
      "func:unset_outlier_removal"
    ],
    "old_files": [
      "BaseReinforcementLearningModel.py_deepseek_dcfc684b.py"
    ],
    "new_files": [
      "BaseReinforcementLearningModel_998089.py"
    ]
  },
  {
    "file_signature": [
      "class:AdsCover",
      "func:__init__",
      "func:available",
      "func:close_cover",
      "func:current_cover_position",
      "func:is_closed",
      "func:open_cover",
      "func:set_cover_position",
      "func:setup_platform",
      "func:stop_cover"
    ],
    "old_files": [
      "cover.py_deepseek_b6c0275f.py"
    ],
    "new_files": [
      "cover_1e7e0c.py"
    ]
  },
  {
    "file_signature": [
      "class:ZwaveValueID",
      "class:ZwaveValueMatcher",
      "func:__post_init__",
      "func:_check_type_schema",
      "func:_zwave_js_config_entry",
      "func:async_get_node_from_device_id",
      "func:async_get_node_from_entity_id",
      "func:async_get_node_status_sensor_entity_id",
      "func:async_get_nodes_from_area_id",
      "func:async_get_nodes_from_targets",
      "func:check_type_schema_map",
      "func:copy_available_params",
      "func:get_device_id",
      "func:get_device_id_ext",
      "func:get_device_info",
      "func:get_home_and_node_id_from_device_entry",
      "func:get_network_identifier_for_notification",
      "func:get_state_key_from_unique_id",
      "func:get_unique_id",
      "func:get_value_id_from_unique_id",
      "func:get_value_of_zwave_value",
      "func:get_value_state_schema",
      "func:get_valueless_base_unique_id",
      "func:get_zwave_value_from_config",
      "func:remove_keys_with_empty_values",
      "func:value_matches_matcher"
    ],
    "old_files": [
      "helpers.py_deepseek_d76a9f4a.py"
    ],
    "new_files": [
      "helpers_b607a0.py"
    ]
  },
  {
    "file_signature": [
      "class:CheckTests",
      "class:IntegrationTests",
      "class:LoggingReporter",
      "class:Node",
      "class:SysStreamCapturing",
      "class:TestIterSourceCode",
      "class:TestMain",
      "class:TestReporter",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:_create_StringIO",
      "func:assertHasErrors",
      "func:evaluate",
      "func:flake",
      "func:getErrors",
      "func:getPyflakesBinary",
      "func:makeEmptyFile",
      "func:makeTempFile",
      "func:runPyflakes",
      "func:setUp",
      "func:syntaxError",
      "func:tearDown",
      "func:test_CRLFLineEndings",
      "func:test_checkPathNonExisting",
      "func:test_checkRecursive",
      "func:test_emptyDirectory",
      "func:test_encodedFileUTF8",
      "func:test_eofSyntaxError",
      "func:test_eofSyntaxErrorWithTab",
      "func:test_errors_io",
      "func:test_errors_syntax",
      "func:test_explicitFiles",
      "func:test_fileWithFlakes",
      "func:test_flake",
      "func:test_goodFile",
      "func:test_invalidEscape",
      "func:test_legacyScript",
      "func:test_misencodedFileUTF16",
      "func:test_misencodedFileUTF8",
      "func:test_missingTrailingNewline",
      "func:test_multiLineSyntaxError",
      "func:test_multilineSyntaxError",
      "func:test_multipleDirectories",
      "func:test_nonDefaultFollowsDefaultSyntaxError",
      "func:test_nonKeywordAfterKeywordSyntaxError",
      "func:test_onlyPythonSource",
      "func:test_permissionDenied",
      "func:test_pyflakesWarning",
      "func:test_readFromStdin",
      "func:test_recurses",
      "func:test_shebang",
      "func:test_singleFile",
      "func:test_syntaxError",
      "func:test_syntaxErrorNoOffset",
      "func:test_unexpectedError",
      "func:unexpectedError",
      "func:withStderrTo"
    ],
    "old_files": [
      "test_api.py_deepseek_59b369c4.py"
    ],
    "new_files": [
      "test_api_917878.py"
    ]
  },
  {
    "file_signature": [
      "class:SnowflakeConnector",
      "func:__enter__",
      "func:__exit__",
      "func:__getstate__",
      "func:__setstate__",
      "func:_get_cursor",
      "func:_start_connection",
      "func:close",
      "func:execute",
      "func:execute_many",
      "func:fetch_all",
      "func:fetch_many",
      "func:fetch_one",
      "func:get_connection",
      "func:reset_cursors",
      "func:snowflake_multiquery",
      "func:snowflake_query",
      "func:snowflake_query_sync"
    ],
    "old_files": [
      "database.py_deepseek_2cfbff20.py"
    ],
    "new_files": [
      "database_2ff475.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseNLPLabelingFunction",
      "class:NLPLabelingFunction",
      "class:SpacyPreprocessorConfig",
      "class:SpacyPreprocessorParameters",
      "class:base_nlp_labeling_function",
      "class:nlp_labeling_function",
      "func:__call__",
      "func:__init__",
      "func:_create_or_check_preprocessor",
      "func:_create_preprocessor"
    ],
    "old_files": [
      "nlp.py_deepseek_c6f6e77f.py"
    ],
    "new_files": [
      "nlp_fe0862.py"
    ]
  },
  {
    "file_signature": [
      "class:TestFeather",
      "func:check_error_on_write",
      "func:check_external_error_on_write",
      "func:check_round_trip",
      "func:test_basic",
      "func:test_duplicate_columns",
      "func:test_error",
      "func:test_http_path",
      "func:test_int_columns_and_index",
      "func:test_invalid_dtype_backend",
      "func:test_out_of_bounds_datetime_to_feather",
      "func:test_passthrough_keywords",
      "func:test_path_pathlib",
      "func:test_read_columns",
      "func:test_read_columns_different_order",
      "func:test_read_feather_dtype_backend",
      "func:test_rw_use_threads",
      "func:test_string_inference",
      "func:test_string_inference_string_view_type",
      "func:test_unsupported_other"
    ],
    "old_files": [
      "test_feather.py_deepseek_8185cc8e.py"
    ],
    "new_files": [
      "test_feather_09566a.py"
    ]
  },
  {
    "file_signature": [
      "func:add_monitor",
      "func:assert_power_sensor_registered",
      "func:assert_pulse_counter_registered",
      "func:assert_sensor_registered",
      "func:assert_sensor_state",
      "func:assert_temperature_sensor_registered",
      "func:assert_voltage_sensor_registered",
      "func:monitors"
    ],
    "old_files": [
      "conftest.py_deepseek_4058499b.py"
    ],
    "new_files": [
      "conftest_f547b4.py"
    ]
  },
  {
    "file_signature": [
      "class:Monitor",
      "class:TableState",
      "func:__init__",
      "func:__reduce_keywords__",
      "func:_events_by_stream_dict",
      "func:_events_by_task_dict",
      "func:_http_response_codes_dict",
      "func:_metric_counts_dict",
      "func:_normalize",
      "func:_sample",
      "func:_table_or_create",
      "func:_topic_buffer_full_dict",
      "func:_tp_committed_offsets_dict",
      "func:_tp_end_offsets_dict",
      "func:_tp_offsets_as_dict",
      "func:_tp_read_offsets_dict",
      "func:asdict",
      "func:count",
      "func:ms_since",
      "func:on_assignment_completed",
      "func:on_assignment_error",
      "func:on_assignment_start",
      "func:on_commit_completed",
      "func:on_commit_initiated",
      "func:on_message_in",
      "func:on_message_out",
      "func:on_rebalance_end",
      "func:on_rebalance_return",
      "func:on_rebalance_start",
      "func:on_send_completed",
      "func:on_send_error",
      "func:on_send_initiated",
      "func:on_stream_event_in",
      "func:on_stream_event_out",
      "func:on_table_del",
      "func:on_table_get",
      "func:on_table_set",
      "func:on_topic_buffer_full",
      "func:on_tp_commit",
      "func:on_web_request_end",
      "func:on_web_request_start",
      "func:secs_since",
      "func:secs_to_ms",
      "func:track_tp_end_offset"
    ],
    "old_files": [
      "monitor.py_deepseek_121c517b.py"
    ],
    "new_files": [
      "monitor_7b218d.py"
    ]
  },
  {
    "file_signature": [
      "class:NoURLAvailableError",
      "func:_get_cloud_url",
      "func:_get_external_url",
      "func:_get_internal_url",
      "func:_get_request_host",
      "func:cloud_url",
      "func:get_supervisor_network_url",
      "func:get_url",
      "func:host_ip",
      "func:is_cloud_connection",
      "func:is_hass_url",
      "func:is_internal_request"
    ],
    "old_files": [
      "network.py_deepseek_b74d7a34.py"
    ],
    "new_files": [
      "network_55c06b.py"
    ]
  },
  {
    "file_signature": [
      "func:build_stream_api_dict",
      "func:build_stream_dict_for_never_sub",
      "func:build_stream_dict_for_sub",
      "func:build_unsubscribed_sub_from_stream_dict",
      "func:bulk_get_subscriber_peer_info",
      "func:bulk_get_subscriber_user_ids",
      "func:gather_subscriptions",
      "func:gather_subscriptions_helper",
      "func:get_next_color",
      "func:get_stream_id",
      "func:get_subscribers_query",
      "func:get_web_public_subs",
      "func:has_metadata_access_to_previously_subscribed_stream",
      "func:validate_user_access_to_subscribers",
      "func:validate_user_access_to_subscribers_helper"
    ],
    "old_files": [
      "subscription_info.py_deepseek_bad27e04.py"
    ],
    "new_files": [
      "subscription_info_2fc87f.py"
    ]
  },
  {
    "file_signature": [
      "class:PythonLintHandler",
      "func:__init__",
      "func:_configure_linters",
      "func:_merge",
      "func:_normalize",
      "func:import_validator",
      "func:lint",
      "func:mypy",
      "func:pep257",
      "func:pep8",
      "func:pyflakes",
      "func:pylint"
    ],
    "old_files": [
      "python_lint_handler.py_deepseek_bc6a67c9.py"
    ],
    "new_files": [
      "python_lint_handler_d8f325.py"
    ]
  },
  {
    "file_signature": [
      "class:MessageDict",
      "class:RawReactionRow",
      "class:ReactionDict",
      "func:build_dict_from_raw_db_row",
      "func:build_message_dict",
      "func:bulk_hydrate_recipient_info",
      "func:bulk_hydrate_sender_info",
      "func:extract_message_dict",
      "func:finalize_payload",
      "func:get_rendering_realm_id",
      "func:hydrate_recipient_info",
      "func:ids_to_dict",
      "func:message_to_encoded_cache",
      "func:messages_to_encoded_cache",
      "func:messages_to_encoded_cache_helper",
      "func:post_process_dicts",
      "func:save_message_rendered_content",
      "func:set_sender_avatar",
      "func:sew_messages_and_reactions",
      "func:sew_messages_and_submessages",
      "func:sew_submessages_and_reactions_to_msgs",
      "func:stringify_message_dict",
      "func:update_message_cache",
      "func:wide_dict"
    ],
    "old_files": [
      "message_cache.py_deepseek_ef44c5a4.py"
    ],
    "new_files": [
      "message_cache_dbda93.py"
    ]
  },
  {
    "file_signature": [
      "class:DeploymentAsyncClient",
      "class:DeploymentClient",
      "func:_create_deployment_from_schema",
      "func:create_deployment",
      "func:create_deployment_schedules",
      "func:create_flow_run_from_deployment",
      "func:delete_deployment",
      "func:delete_deployment_schedule",
      "func:get_scheduled_flow_runs_for_deployments",
      "func:read_deployment",
      "func:read_deployment_by_name",
      "func:read_deployment_schedules",
      "func:read_deployments",
      "func:set_deployment_paused_state",
      "func:update_deployment",
      "func:update_deployment_schedule"
    ],
    "old_files": [
      "client.py_deepseek_da9172a9.py"
    ],
    "new_files": [
      "client_1e3c0a.py"
    ]
  },
  {
    "file_signature": [
      "class:TestQueryApi",
      "func:create_queries",
      "func:get_random_string",
      "func:insert_query",
      "func:test_get_list_query",
      "func:test_get_list_query_filter_changed_on",
      "func:test_get_list_query_filter_database",
      "func:test_get_list_query_filter_sql",
      "func:test_get_list_query_filter_user",
      "func:test_get_list_query_no_data_access",
      "func:test_get_list_query_order",
      "func:test_get_query",
      "func:test_get_query_no_data_access",
      "func:test_get_query_not_found",
      "func:test_get_updated_since",
      "func:test_stop_query",
      "func:test_stop_query_not_found"
    ],
    "old_files": [
      "api_tests.py_deepseek_7e37d3ea.py"
    ],
    "new_files": [
      "api_tests_76e6db.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractFilter",
      "class:AnonymousFunctionExecutionFilter",
      "class:AttributeOverwrite",
      "class:DictFilter",
      "class:FilterWrapper",
      "class:FunctionExecutionFilter",
      "class:GlobalNameFilter",
      "class:LazyAttributeOverwrite",
      "class:MergedFilter",
      "class:ParserTreeFilter",
      "class:SpecialMethodFilter",
      "class:SpecialMethodName",
      "class:_AbstractUsedNamesFilter",
      "class:_AttributeOverwriteMixin",
      "class:_BuiltinMappedMethod",
      "class:_FunctionExecutionFilter",
      "class:_OverwriteMeta",
      "func:__init__",
      "func:__repr__",
      "func:_check_flows",
      "func:_convert",
      "func:_convert_names",
      "func:_convert_param",
      "func:_filter",
      "func:_get_definition_names",
      "func:_is_name_reachable",
      "func:decorator",
      "func:get",
      "func:get_filters",
      "func:infer",
      "func:publish_method",
      "func:py__call__",
      "func:values",
      "func:wrap_names",
      "func:yielder"
    ],
    "old_files": [
      "filters.py_deepseek_ab9e6ca6.py"
    ],
    "new_files": [
      "filters_ba549f.py"
    ]
  },
  {
    "file_signature": [
      "func:_mocked_unlock",
      "func:get_netting_channel_closed_events",
      "func:get_netting_channel_deposit_events",
      "func:get_netting_channel_settled_events",
      "func:has_initiator_events",
      "func:test_channel_deposit",
      "func:test_channel_new",
      "func:test_clear_closed_queue",
      "func:test_query_events",
      "func:test_secret_revealed_on_chain",
      "func:wait_both_channel_open"
    ],
    "old_files": [
      "test_integration_events.py_deepseek_d5489aea.py"
    ],
    "new_files": [
      "test_integration_events_f08b97.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseConnector",
      "class:Connection",
      "class:TCPConnector",
      "class:_DNSCacheTable",
      "class:_TransportPlaceholder",
      "func:__bool__",
      "func:__contains__",
      "func:__del__",
      "func:__init__",
      "func:__repr__",
      "func:_available_connections",
      "func:_cleanup",
      "func:_cleanup_closed",
      "func:_close_immediately",
      "func:_make_ssl_context",
      "func:_notify_release",
      "func:_release",
      "func:_release_acquired",
      "func:_release_waiter",
      "func:add",
      "func:add_callback",
      "func:clear",
      "func:clear_dns_cache",
      "func:close",
      "func:closed",
      "func:expired",
      "func:family",
      "func:force_close",
      "func:limit",
      "func:limit_per_host",
      "func:next_addrs",
      "func:protocol",
      "func:release",
      "func:remove",
      "func:transport",
      "func:use_dns_cache"
    ],
    "old_files": [
      "connector.py_deepseek_468d87c7.py"
    ],
    "new_files": [
      "connector_bbd6dd.py"
    ]
  },
  {
    "file_signature": [
      "func:collect_translate_output_and_scores",
      "func:generate_digits_file",
      "func:generate_fast_align_lex",
      "func:generate_json_input_file_with_tgt_prefix",
      "func:generate_low_high_factors",
      "func:generate_odd_even_factors",
      "func:run_train_translate",
      "func:run_translate_restrict",
      "func:tmp_digits_dataset"
    ],
    "old_files": [
      "test_utils.py_deepseek_ef0b5816.py"
    ],
    "new_files": [
      "test_utils_121373.py"
    ]
  },
  {
    "file_signature": [
      "class:AJAXHandler",
      "class:BufferingHandler",
      "class:MemoryHandler",
      "class:QueueHandler",
      "func:__init__",
      "func:ajaxCallback",
      "func:close",
      "func:emit",
      "func:enqueue",
      "func:flush",
      "func:mapLogRecord",
      "func:prepare",
      "func:repl",
      "func:setTarget",
      "func:shouldFlush",
      "func:urlencode"
    ],
    "old_files": [
      "handlers.py_deepseek_21ef1750.py"
    ],
    "new_files": [
      "handlers_facbc6.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseAdditiveNoiseAttack",
      "class:BaseRepeatedAdditiveNoiseAttack",
      "class:GaussianMixin",
      "class:L2AdditiveGaussianNoiseAttack",
      "class:L2AdditiveUniformNoiseAttack",
      "class:L2ClippingAwareAdditiveGaussianNoiseAttack",
      "class:L2ClippingAwareAdditiveUniformNoiseAttack",
      "class:L2ClippingAwareMixin",
      "class:L2ClippingAwareRepeatedAdditiveGaussianNoiseAttack",
      "class:L2ClippingAwareRepeatedAdditiveUniformNoiseAttack",
      "class:L2Mixin",
      "class:L2RepeatedAdditiveGaussianNoiseAttack",
      "class:L2RepeatedAdditiveUniformNoiseAttack",
      "class:LinfAdditiveUniformNoiseAttack",
      "class:LinfMixin",
      "class:LinfRepeatedAdditiveUniformNoiseAttack",
      "class:UniformMixin",
      "func:__init__",
      "func:distance",
      "func:get_epsilons",
      "func:run",
      "func:sample_noise"
    ],
    "old_files": [
      "additive_noise.py_deepseek_36b830d2.py"
    ],
    "new_files": [
      "additive_noise_84a712.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseEndpointResolver",
      "class:EndpointResolver",
      "func:__init__",
      "func:_endpoint_for_partition",
      "func:_expand_template",
      "func:_merge_keys",
      "func:_region_match",
      "func:_resolve",
      "func:construct_endpoint",
      "func:get_available_endpoints",
      "func:get_available_partitions"
    ],
    "old_files": [
      "regions.py_deepseek_08792844.py"
    ],
    "new_files": [
      "regions_ce690d.py"
    ]
  },
  {
    "file_signature": [
      "class:AppT",
      "class:BootStrategyT",
      "class:TracerT",
      "class:_AppCommand",
      "class:_EventT",
      "class:_LiveCheck",
      "class:_ModelArg",
      "class:_Monitor",
      "class:_SchemaT",
      "class:_Settings",
      "class:_Worker",
      "func:FlowControlQueue",
      "func:GlobalTable",
      "func:LiveCheck",
      "func:SetGlobalTable",
      "func:SetTable",
      "func:Table",
      "func:Worker",
      "func:__init__",
      "func:_span_add_default_tags",
      "func:_start_span_from_rebalancing",
      "func:agent",
      "func:assignor",
      "func:cache",
      "func:channel",
      "func:client_only",
      "func:command",
      "func:conf",
      "func:config_from_object",
      "func:consumer",
      "func:create_event",
      "func:crontab",
      "func:default_tracer",
      "func:discover",
      "func:finalize",
      "func:flow_control",
      "func:get_tracer",
      "func:http_client",
      "func:in_transaction",
      "func:is_leader",
      "func:main",
      "func:monitor",
      "func:on_rebalance_end",
      "func:on_rebalance_return",
      "func:on_rebalance_start",
      "func:on_webserver_init",
      "func:page",
      "func:producer",
      "func:producer_only",
      "func:producer_transport",
      "func:router",
      "func:serializers",
      "func:server",
      "func:service",
      "func:stream",
      "func:table_route",
      "func:tables",
      "func:task",
      "func:timer",
      "func:topic",
      "func:topics",
      "func:trace",
      "func:transport",
      "func:web",
      "func:worker_init",
      "func:worker_init_post_autodiscover"
    ],
    "old_files": [
      "app.py_deepseek_39324c85.py"
    ],
    "new_files": [
      "app_c89ec6.py"
    ]
  },
  {
    "file_signature": [
      "func:complex_loss",
      "func:complex_six_losses",
      "func:correlated_loss",
      "func:get_score",
      "func:lcb_score",
      "func:loss",
      "func:mean",
      "func:noisy_six_losses",
      "func:six_losses",
      "func:testing_domain_and_loss_and_budget",
      "func:testing_domain_and_loss_and_single_budget",
      "func:timeout_handler",
      "func:ucb_score"
    ],
    "old_files": [
      "instrumentations_examples.py_deepseek_4572d1a8.py"
    ],
    "new_files": [
      "instrumentations_examples_d8ae97.py"
    ]
  },
  {
    "file_signature": [
      "class:TestIpythonCommand",
      "class:TestPackageCommand",
      "func:call_mock",
      "func:fake_copyfile",
      "func:test_env",
      "func:test_fail_no_ipython",
      "func:test_happy_path",
      "func:test_no_pyproject_toml"
    ],
    "old_files": [
      "test_project.py_deepseek_5bb02c4d.py"
    ],
    "new_files": [
      "test_project_1f989e.py"
    ]
  },
  {
    "file_signature": [
      "class:LondonBackwardsHeader",
      "class:LondonBlock",
      "class:LondonBlockHeader",
      "class:LondonMiningHeader",
      "func:__init__",
      "func:__str__",
      "func:blob_gas_used",
      "func:deserialize",
      "func:excess_blob_gas",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash",
      "func:parent_beacon_block_root",
      "func:serialize",
      "func:withdrawals_root"
    ],
    "old_files": [
      "blocks.py_deepseek_268dfb6c.py"
    ],
    "new_files": [
      "blocks_a65ab4.py"
    ]
  },
  {
    "file_signature": [
      "class:IrishRailTransportData",
      "class:IrishRailTransportSensor",
      "func:__init__",
      "func:_empty_train_data",
      "func:extra_state_attributes",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_deepseek_12d1e163.py"
    ],
    "new_files": [
      "sensor_20a298.py"
    ]
  },
  {
    "file_signature": [
      "class:BiasMitigator",
      "class:HardBiasMitigator",
      "class:INLPBiasMitigator",
      "class:LinearBiasMitigator",
      "class:OSCaRBiasMitigator",
      "func:__call__",
      "func:__init__",
      "func:_get_rowspace_proj",
      "func:_proj",
      "func:_remove_component"
    ],
    "old_files": [
      "bias_mitigators.py_deepseek_294de2be.py"
    ],
    "new_files": [
      "bias_mitigators_adad59.py"
    ]
  },
  {
    "file_signature": [
      "class:ConsumerMessage",
      "class:FutureMessage",
      "class:Message",
      "class:PendingMessage",
      "class:RecordMetadata",
      "class:TP",
      "class:_ChannelT",
      "class:_ConsumerT",
      "func:_PendingMessage_to_Message",
      "func:__init__",
      "func:__repr__",
      "func:_get_len",
      "func:ack",
      "func:decref",
      "func:from_message",
      "func:incref",
      "func:on_final_ack",
      "func:set_result",
      "func:tp_set_to_map"
    ],
    "old_files": [
      "tuples.py_deepseek_03a2bff8.py"
    ],
    "new_files": [
      "tuples_43cb14.py"
    ]
  },
  {
    "file_signature": [
      "class:CachedDataset",
      "func:__getstate__",
      "func:__init__",
      "func:__repr__",
      "func:_describe",
      "func:_exists",
      "func:_from_config",
      "func:_release",
      "func:load",
      "func:save"
    ],
    "old_files": [
      "cached_dataset.py_deepseek_2b01c16a.py"
    ],
    "new_files": [
      "cached_dataset_374c5d.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoLock",
      "func:__init__",
      "func:is_jammed",
      "func:is_locked",
      "func:is_locking",
      "func:is_open",
      "func:is_opening",
      "func:is_unlocking"
    ],
    "old_files": [
      "lock.py_deepseek_558432e9.py"
    ],
    "new_files": [
      "lock_c9b41d.py"
    ]
  },
  {
    "file_signature": [
      "class:HpIloData",
      "class:HpIloSensor",
      "func:__init__",
      "func:extra_state_attributes",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_deepseek_9cbe391f.py"
    ],
    "new_files": [
      "sensor_a7ec9e.py"
    ]
  },
  {
    "file_signature": [
      "class:PrefixPart",
      "func:__init__",
      "func:__repr__",
      "func:create_spacing_part",
      "func:end_pos",
      "func:search_ancestor",
      "func:split_prefix"
    ],
    "old_files": [
      "prefix.py_deepseek_ee5684c9.py"
    ],
    "new_files": [
      "prefix_7be09c.py"
    ]
  },
  {
    "file_signature": [
      "class:ModelTestCase",
      "func:assert_fields_equal",
      "func:check_model_computes_gradients_correctly",
      "func:ensure_batch_predictions_are_consistent",
      "func:ensure_model_can_train",
      "func:ensure_model_can_train_save_and_load",
      "func:set_up_model",
      "func:test_model_batch_norm_verification"
    ],
    "old_files": [
      "model_test_case.py_deepseek_462aa8c2.py"
    ],
    "new_files": [
      "model_test_case_905237.py"
    ]
  },
  {
    "file_signature": [
      "class:FixtureSmartContracts",
      "class:ServicesSmartContracts",
      "func:deploy_monitoring_service",
      "func:deploy_one_to_n",
      "func:deploy_secret_registry",
      "func:deploy_service_registry",
      "func:deploy_smart_contract_bundle_concurrently",
      "func:deploy_token_network_registry",
      "func:deploy_user_deposit",
      "func:fund_node",
      "func:max_token_networks_fixture",
      "func:monitoring_service_address_fixture",
      "func:one_to_n_address_fixture",
      "func:register_token",
      "func:secret_registry_address_fixture",
      "func:secret_registry_proxy_fixture",
      "func:service_registry_address_fixture",
      "func:token_addresses_fixture",
      "func:token_contract_name_fixture",
      "func:token_network_proxy_fixture",
      "func:token_network_registry_address_fixture",
      "func:token_proxy_fixture",
      "func:transfer_user_deposit_tokens",
      "func:user_deposit_address_fixture"
    ],
    "old_files": [
      "smartcontracts.py_deepseek_a6a2c765.py"
    ],
    "new_files": [
      "smartcontracts_989d9a.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseProvider",
      "class:MockSTTPlatform",
      "class:MockSTTProvider",
      "class:MockSTTProviderEntity",
      "func:__init__",
      "func:mock_stt_entity_platform",
      "func:mock_stt_platform",
      "func:supported_bit_rates",
      "func:supported_channels",
      "func:supported_codecs",
      "func:supported_formats",
      "func:supported_languages",
      "func:supported_sample_rates"
    ],
    "old_files": [
      "common.py_deepseek_ac85683f.py"
    ],
    "new_files": [
      "common_dde807.py"
    ]
  },
  {
    "file_signature": [
      "func:_clean_keys_and_objs",
      "func:_concat_indexes",
      "func:_get_concat_axis_dataframe",
      "func:_get_concat_axis_series",
      "func:_get_result",
      "func:_get_sample_object",
      "func:_make_concat_multiindex",
      "func:_sanitize_mixed_ndim",
      "func:concat",
      "func:new_axes",
      "func:validate_unique_levels"
    ],
    "old_files": [
      "concat.py_deepseek_b116fbaa.py"
    ],
    "new_files": [
      "concat_31a224.py"
    ]
  },
  {
    "file_signature": [
      "class:DataFrame",
      "class:TestMemoryDataset",
      "func:_check_equals",
      "func:_update_data",
      "func:memory_dataset",
      "func:mocked_copy_with_mode",
      "func:mocked_infer_mode",
      "func:test_copy_mode_assign",
      "func:test_copy_mode_copy",
      "func:test_copy_mode_deepcopy",
      "func:test_copy_mode_invalid_string",
      "func:test_create_without_data",
      "func:test_ephemeral_attribute",
      "func:test_exists",
      "func:test_infer_mode_assign",
      "func:test_infer_mode_copy",
      "func:test_infer_mode_deepcopy",
      "func:test_is_memory_dataset",
      "func:test_load",
      "func:test_load_infer_mode",
      "func:test_load_modify_original_data",
      "func:test_load_none",
      "func:test_load_returns_new_object",
      "func:test_loading_none",
      "func:test_repr_representation",
      "func:test_save",
      "func:test_save_infer_mode",
      "func:test_save_modify_original_data",
      "func:test_saving_none",
      "func:test_str_representation"
    ],
    "old_files": [
      "test_memory_dataset.py_deepseek_b942d904.py"
    ],
    "new_files": [
      "test_memory_dataset_822706.py"
    ]
  },
  {
    "file_signature": [
      "class:WandBCallback",
      "func:__init__",
      "func:_log",
      "func:close",
      "func:load_state_dict",
      "func:log_scalars",
      "func:log_tensors",
      "func:on_start",
      "func:state_dict"
    ],
    "old_files": [
      "wandb.py_deepseek_0759ce02.py"
    ],
    "new_files": [
      "wandb_4a4375.py"
    ]
  },
  {
    "file_signature": [
      "func:decimal_number_check",
      "func:test_1000_sep_decimal_float_precision",
      "func:test_accurate_parsing_of_large_integers",
      "func:test_boolean_dtype",
      "func:test_decimal_and_exponential",
      "func:test_delimiter_with_usecols_and_parse_dates",
      "func:test_dtype_all_columns",
      "func:test_dtype_backend",
      "func:test_dtype_backend_and_dtype",
      "func:test_dtype_backend_ea_dtype_specified",
      "func:test_dtype_backend_pyarrow",
      "func:test_dtype_backend_string",
      "func:test_dtype_mangle_dup_cols",
      "func:test_dtype_mangle_dup_cols_single_dtype",
      "func:test_dtype_multi_index",
      "func:test_dtype_per_column",
      "func:test_dtype_with_converters",
      "func:test_dtypes_defaultdict",
      "func:test_dtypes_defaultdict_invalid",
      "func:test_dtypes_defaultdict_mangle_dup_cols",
      "func:test_dtypes_with_usecols",
      "func:test_ea_int_avoid_overflow",
      "func:test_index_col_with_dtype_no_rangeindex",
      "func:test_invalid_dtype_per_column",
      "func:test_nullable_int_dtype",
      "func:test_numeric_dtype",
      "func:test_raise_on_passed_int_dtype_with_nas",
      "func:test_skip_whitespace",
      "func:test_string_inference",
      "func:test_string_inference_object_dtype",
      "func:test_true_values_cast_to_bool"
    ],
    "old_files": [
      "test_dtypes_basic.py_deepseek_3cac3357.py"
    ],
    "new_files": [
      "test_dtypes_basic_4a9ebb.py"
    ]
  },
  {
    "file_signature": [
      "class:RemoteClient",
      "func:__init__",
      "func:auto_ipo",
      "func:balance",
      "func:buy",
      "func:cancel_entrust",
      "func:cancel_entrusts",
      "func:common_get",
      "func:exit",
      "func:position",
      "func:prepare",
      "func:sell",
      "func:today_entrusts",
      "func:today_trades",
      "func:use"
    ],
    "old_files": [
      "remoteclient.py_deepseek_903996d9.py"
    ],
    "new_files": [
      "remoteclient_c4932f.py"
    ]
  },
  {
    "file_signature": [
      "class:NotModifiedResponse",
      "class:StaticFiles",
      "func:__init__",
      "func:file_response",
      "func:get_directories",
      "func:get_path",
      "func:is_not_modified",
      "func:lookup_path"
    ],
    "old_files": [
      "staticfiles.py_deepseek_afa0015f.py"
    ],
    "new_files": [
      "staticfiles_164434.py"
    ]
  },
  {
    "file_signature": [
      "class:AddressType",
      "class:ChainChoiceType",
      "class:ConfigParser",
      "class:Context",
      "class:EnumChoiceType",
      "class:ExpandableFile",
      "class:ExpandablePath",
      "class:GasPriceChoiceType",
      "class:GroupableOption",
      "class:GroupableOptionCommand",
      "class:GroupableOptionCommandGroup",
      "class:HelpFormatter",
      "class:HypenTemplate",
      "class:LogLevelConfigType",
      "class:MatrixServerType",
      "class:Parser",
      "class:PathRelativePath",
      "class:SkipParsing",
      "func:__eq__",
      "func:__init__",
      "func:__lt__",
      "func:_process_parse_result",
      "func:command",
      "func:convert",
      "func:decorator",
      "func:default_priority",
      "func:expand_default",
      "func:fixed_gas_price_strategy",
      "func:format_options",
      "func:get_internal_name",
      "func:get_matrix_servers",
      "func:group",
      "func:invoke",
      "func:keyfunc",
      "func:option",
      "func:option_group",
      "func:parse",
      "func:register_param",
      "func:write_dl"
    ],
    "old_files": [
      "cli.py_deepseek_72c847be.py"
    ],
    "new_files": [
      "cli_800977.py"
    ]
  },
  {
    "file_signature": [
      "class:Loader",
      "class:NormDict",
      "func:SubLoader",
      "func:__contains__",
      "func:__delitem__",
      "func:__getitem__",
      "func:__init__",
      "func:__setitem__",
      "func:_add_properties",
      "func:add_context",
      "func:add_namespaces",
      "func:add_schemas",
      "func:check_file",
      "func:expand_url",
      "func:fetch",
      "func:fetch_text",
      "func:getid",
      "func:merge_properties",
      "func:resolve_all",
      "func:resolve_ref",
      "func:validate_link",
      "func:validate_links"
    ],
    "old_files": [
      "ref_resolver.py_deepseek_a5e6c61c.py"
    ],
    "new_files": [
      "ref_resolver_4b8223.py"
    ]
  },
  {
    "file_signature": [
      "class:AmqpDsn",
      "class:AnyHttpUrl",
      "class:AnyUrl",
      "class:CockroachDsn",
      "class:EmailStr",
      "class:FileUrl",
      "class:HostParts",
      "class:HttpUrl",
      "class:IPvAnyAddress",
      "class:IPvAnyInterface",
      "class:IPvAnyNetwork",
      "class:KafkaDsn",
      "class:MongoDsn",
      "class:MultiHostDsn",
      "class:NameEmail",
      "class:Parts",
      "class:PostgresDsn",
      "class:RedisDsn",
      "func:__eq__",
      "func:__get_validators__",
      "func:__init__",
      "func:__modify_schema__",
      "func:__new__",
      "func:__repr__",
      "func:__str__",
      "func:_build_url",
      "func:_match_url",
      "func:_validate_port",
      "func:apply_default_parts",
      "func:ascii_domain_regex",
      "func:build",
      "func:get_default_parts",
      "func:host_regex",
      "func:import_email_validator",
      "func:int_domain_regex",
      "func:multi_host_url_regex",
      "func:stricturl",
      "func:url_regex",
      "func:validate",
      "func:validate_email",
      "func:validate_host",
      "func:validate_parts"
    ],
    "old_files": [
      "networks.py_deepseek_5d69cfc5.py"
    ],
    "new_files": [
      "networks_4fcfb8.py"
    ]
  },
  {
    "file_signature": [
      "class:TopicT",
      "class:_AppT",
      "class:_ModelArg",
      "class:_SchemaT",
      "func:__init__",
      "func:derive",
      "func:derive_topic",
      "func:partitions",
      "func:pattern"
    ],
    "old_files": [
      "topics.py_deepseek_f327fa7b.py"
    ],
    "new_files": [
      "topics_fc6164.py"
    ]
  },
  {
    "file_signature": [
      "class:ArtificialFunction",
      "class:ArtificialVariable",
      "class:FarOptimumFunction",
      "func:__init__",
      "func:_initialize",
      "func:_monofunc",
      "func:_multifunc",
      "func:_noisy_call",
      "func:_short_repr",
      "func:_transform",
      "func:compute_pseudotime",
      "func:dimension",
      "func:evaluation_function",
      "func:function_from_transform",
      "func:itercases",
      "func:list_sorted_function_names",
      "func:noisy_function",
      "func:process"
    ],
    "old_files": [
      "functionlib.py_deepseek_9ac1b2ed.py"
    ],
    "new_files": [
      "functionlib_51de18.py"
    ]
  },
  {
    "file_signature": [
      "class:EarlyStoppingTrainer",
      "class:ModelWithLoss",
      "class:TrainState",
      "class:TrainerConfig",
      "func:__getstate__",
      "func:__init__",
      "func:__setstate__",
      "func:_adjust_learning_rate",
      "func:_create_checkpoint",
      "func:_determine_convergence",
      "func:_determine_divergence",
      "func:_determine_improvement",
      "func:_evaluate",
      "func:_forward_backward",
      "func:_load_lr_scheduler",
      "func:_load_optimizer_state",
      "func:_save_lr_scheduler",
      "func:_save_optimizer_state",
      "func:_save_params",
      "func:_save_training_state",
      "func:_step",
      "func:_update_best_params",
      "func:_write_and_log_metrics",
      "func:fit",
      "func:forward",
      "func:load",
      "func:save",
      "func:time_elapsed",
      "func:update_time_elapsed"
    ],
    "old_files": [
      "training.py_deepseek_79729440.py"
    ],
    "new_files": [
      "training_45f057.py"
    ]
  },
  {
    "file_signature": [
      "class:CattTest",
      "class:CattTestError",
      "func:__init__",
      "func:_failure_test",
      "func:_get_val",
      "func:_regular_test",
      "func:_should_fail_test",
      "func:cli",
      "func:run",
      "func:run_tests",
      "func:set_cmd_base",
      "func:subp_run"
    ],
    "old_files": [
      "test_procedure.py_deepseek_32a863d6.py"
    ],
    "new_files": [
      "test_procedure_3f923d.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_marker_compat",
      "func:andrews_curves",
      "func:autocorrelation_plot",
      "func:bootstrap_plot",
      "func:f",
      "func:function",
      "func:lag_plot",
      "func:normalize",
      "func:parallel_coordinates",
      "func:r",
      "func:radviz",
      "func:scatter_matrix",
      "func:unpack_single_str_list"
    ],
    "old_files": [
      "misc.py_deepseek_3b346c4e.py"
    ],
    "new_files": [
      "misc_23de87.py"
    ]
  },
  {
    "file_signature": [
      "class:ArrowTemporalProperties",
      "class:CombinedDatetimelikeProperties",
      "class:DatetimeProperties",
      "class:PeriodProperties",
      "class:Properties",
      "class:TimedeltaProperties",
      "func:__init__",
      "func:__new__",
      "func:_delegate_method",
      "func:_delegate_property_get",
      "func:_delegate_property_set",
      "func:_get_values",
      "func:components",
      "func:freq",
      "func:isocalendar",
      "func:to_pydatetime",
      "func:to_pytimedelta"
    ],
    "old_files": [
      "accessors.py_deepseek_836896e7.py"
    ],
    "new_files": [
      "accessors_5aa969.py"
    ]
  },
  {
    "file_signature": [
      "class:Collection",
      "func:__and__",
      "func:__copy__",
      "func:__hash__",
      "func:__init__",
      "func:_apply_window_op",
      "func:_changelog_topic_name",
      "func:_del_key",
      "func:_del_windowed",
      "func:_get_key",
      "func:_has_key",
      "func:_human_channel",
      "func:_join",
      "func:_maybe_del_key_ttl",
      "func:_maybe_set_key_ttl",
      "func:_new_changelog_topic",
      "func:_new_store",
      "func:_new_store_by_url",
      "func:_on_changelog_sent",
      "func:_relative_event",
      "func:_relative_field",
      "func:_relative_now",
      "func:_relative_timestamp",
      "func:_repr_info",
      "func:_send_changelog",
      "func:_serializer_from_type",
      "func:_set_key",
      "func:_set_windowed",
      "func:_should_expire_keys",
      "func:_to_key",
      "func:_to_value",
      "func:_verify_source_topic_partitions",
      "func:_window_ranges",
      "func:_windowed_contains",
      "func:_windowed_delta",
      "func:_windowed_now",
      "func:_windowed_timestamp",
      "func:apply_changelog_batch",
      "func:changelog_topic",
      "func:changelog_topic_name",
      "func:clone",
      "func:combine",
      "func:contribute_to_stream",
      "func:data",
      "func:handler",
      "func:info",
      "func:inner_join",
      "func:join",
      "func:label",
      "func:left_join",
      "func:on_recover",
      "func:outer_join",
      "func:partition_for_key",
      "func:persisted_offset",
      "func:reset_state",
      "func:send_changelog",
      "func:shortlabel",
      "func:to_value"
    ],
    "old_files": [
      "base.py_deepseek_dfa8658b.py"
    ],
    "new_files": [
      "base_9c14fc.py"
    ]
  },
  {
    "file_signature": [
      "class:Benchmark",
      "func:__init__",
      "func:create_benchmark_agent",
      "func:create_produce_command",
      "func:generate_values",
      "func:install",
      "func:on_published"
    ],
    "old_files": [
      "base.py_deepseek_c6d6bede.py"
    ],
    "new_files": [
      "base_ef8405.py"
    ]
  },
  {
    "file_signature": [
      "class:LoggingDataset",
      "class:TestMemoryDatasetBehaviour",
      "class:TestSeqentialRunnerBranchlessPipeline",
      "class:TestSequentialRunnerBranchedPipeline",
      "class:TestSequentialRunnerRelease",
      "class:TestSuggestResumeScenario",
      "class:TestValidSequentialRunner",
      "func:__init__",
      "func:_describe",
      "func:_load",
      "func:_release",
      "func:_save",
      "func:test_confirms",
      "func:test_conflict_feed_catalog",
      "func:test_count_multiple_loads",
      "func:test_dont_release_inputs_and_outputs",
      "func:test_input_seq",
      "func:test_log_not_using_async",
      "func:test_no_datasets",
      "func:test_no_feed",
      "func:test_no_input_seq",
      "func:test_node_returning_none",
      "func:test_release_at_earliest_opportunity",
      "func:test_release_transcoded",
      "func:test_result_saved_not_returned",
      "func:test_run_includes_memory_datasets",
      "func:test_run_twice_giving_same_result",
      "func:test_run_with_plugin_manager",
      "func:test_run_without_plugin_manager",
      "func:test_stricter_suggest_resume_scenario",
      "func:test_suggest_resume_scenario",
      "func:test_unsatisfied_inputs"
    ],
    "old_files": [
      "test_sequential_runner.py_deepseek_e5919b4d.py"
    ],
    "new_files": [
      "test_sequential_runner_021190.py"
    ]
  },
  {
    "file_signature": [
      "class:Forwarder",
      "func:append_to_header",
      "func:delete",
      "func:is_in_xloop",
      "func:post_receive",
      "func:pre_receive",
      "func:status_change",
      "func:take_action"
    ],
    "old_files": [
      "forwarder.py_deepseek_46b0ae59.py"
    ],
    "new_files": [
      "forwarder_298c02.py"
    ]
  },
  {
    "file_signature": [
      "class:RegistryT",
      "class:SchemaT",
      "class:_AppT",
      "class:_Message",
      "class:_ModelArg",
      "func:__init__",
      "func:dumps_key",
      "func:dumps_value",
      "func:loads_key",
      "func:loads_value",
      "func:on_dumps_key_prepare_headers",
      "func:on_dumps_value_prepare_headers",
      "func:update"
    ],
    "old_files": [
      "serializers.py_deepseek_d7b8c7c6.py"
    ],
    "new_files": [
      "serializers_307391.py"
    ]
  },
  {
    "file_signature": [
      "class:DevoloBatteryEntity",
      "class:DevoloConsumptionEntity",
      "class:DevoloGenericMultiLevelDeviceEntity",
      "class:DevoloMultiLevelDeviceEntity",
      "func:__init__",
      "func:_sync",
      "func:native_value",
      "func:unique_id"
    ],
    "old_files": [
      "sensor.py_deepseek_bbe187d6.py"
    ],
    "new_files": [
      "sensor_a11f7f.py"
    ]
  },
  {
    "file_signature": [
      "class:NibeClimateEntity",
      "func:__init__",
      "func:_get",
      "func:_get_float",
      "func:_get_value",
      "func:_handle_coordinator_update",
      "func:available",
      "func:climate_systems"
    ],
    "old_files": [
      "climate.py_deepseek_46564e80.py"
    ],
    "new_files": [
      "climate_8c1cee.py"
    ]
  },
  {
    "file_signature": [
      "class:InformativeData",
      "func:__get_pair_formats",
      "func:_create_and_merge_informative_pair",
      "func:_format_pair_name",
      "func:decorator",
      "func:informative"
    ],
    "old_files": [
      "informative_decorator.py_deepseek_bd83f821.py"
    ],
    "new_files": [
      "informative_decorator_cfc496.py"
    ]
  },
  {
    "file_signature": [
      "class:HypothesisFalsified",
      "func:_condition",
      "func:define_test",
      "func:distorted",
      "func:distorted_value",
      "func:double",
      "func:long_list",
      "func:run_test",
      "func:strip_lambda",
      "func:test_function"
    ],
    "old_files": [
      "test_discovery_ability.py_deepseek_36830e91.py"
    ],
    "new_files": [
      "test_discovery_ability_c49e14.py"
    ]
  },
  {
    "file_signature": [
      "class:Model",
      "func:_BUILD_eq",
      "func:_BUILD_hash",
      "func:_BUILD_init",
      "func:__abstract_init__",
      "func:__init_subclass__",
      "func:__repr__",
      "func:_contribute_field_descriptors",
      "func:_contribute_methods",
      "func:_contribute_to_options",
      "func:_derive",
      "func:_from_data_field",
      "func:_humanize",
      "func:_init_subclass",
      "func:_itervalidate",
      "func:_maybe_namespace",
      "func:_maybe_reconstruct",
      "func:derive",
      "func:dumps",
      "func:is_valid",
      "func:loads",
      "func:make_final",
      "func:maybe_model",
      "func:to_representation",
      "func:validate",
      "func:validate_or_raise",
      "func:validation_errors"
    ],
    "old_files": [
      "base.py_deepseek_80b07b73.py"
    ],
    "new_files": [
      "base_4b5828.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseLoader",
      "class:DictLoader",
      "class:IncludeTemplate",
      "class:Indenter",
      "class:Loader",
      "class:ParseError",
      "class:Template",
      "class:_ApplyBlock",
      "class:_ChunkList",
      "class:_CodeWriter",
      "class:_ControlBlock",
      "class:_Expression",
      "class:_ExtendsBlock",
      "class:_File",
      "class:_IncludeBlock",
      "class:_IntermediateControlBlock",
      "class:_Module",
      "class:_NamedBlock",
      "class:_Node",
      "class:_Statement",
      "class:_TemplateReader",
      "class:_Text",
      "class:_UnsetMarker",
      "func:__enter__",
      "func:__exit__",
      "func:__getitem__",
      "func:__init__",
      "func:__len__",
      "func:__str__",
      "func:_create_template",
      "func:_format_code",
      "func:_generate_python",
      "func:_get_ancestors",
      "func:_parse",
      "func:consume",
      "func:each_child",
      "func:filter_whitespace",
      "func:find",
      "func:find_named_blocks",
      "func:generate",
      "func:include",
      "func:indent",
      "func:indent_size",
      "func:load",
      "func:raise_parse_error",
      "func:remaining",
      "func:reset",
      "func:resolve_path",
      "func:write_line"
    ],
    "old_files": [
      "template.py_deepseek_747cbc1c.py"
    ],
    "new_files": [
      "template_0e4e35.py"
    ]
  },
  {
    "file_signature": [
      "class:FBetaVerboseMeasureTest",
      "func:multiple_runs",
      "func:setup_method",
      "func:test_config_errors",
      "func:test_distributed_fbeta_measure",
      "func:test_fbeta_handles_batch_size_of_one",
      "func:test_fbeta_handles_no_prediction_false_last_class",
      "func:test_fbeta_handles_no_prediction_true_all_class",
      "func:test_fbeta_handles_no_prediction_true_last_class",
      "func:test_fbeta_handles_no_prediction_true_other_class",
      "func:test_fbeta_multiclass_macro_average_metric",
      "func:test_fbeta_multiclass_metric",
      "func:test_fbeta_multiclass_micro_average_metric",
      "func:test_fbeta_multiclass_state",
      "func:test_fbeta_multiclass_weighted_average_metric",
      "func:test_fbeta_multiclass_with_explicit_labels",
      "func:test_fbeta_multiclass_with_explicit_labels_macro",
      "func:test_fbeta_multiclass_with_explicit_labels_micro",
      "func:test_fbeta_multiclass_with_explicit_labels_weighted",
      "func:test_fbeta_multiclass_with_mask",
      "func:test_multiple_distributed_runs",
      "func:test_runtime_errors"
    ],
    "old_files": [
      "fbeta_verbose_measure_test.py_deepseek_de506267.py"
    ],
    "new_files": [
      "fbeta_verbose_measure_test_a08d84.py"
    ]
  },
  {
    "file_signature": [
      "class:Flags",
      "class:NestedDict",
      "class:Output",
      "class:TOMLDecodeError",
      "func:__init__",
      "func:append_nest_to_list",
      "func:coord_repr",
      "func:create_dict_rule",
      "func:create_list_rule",
      "func:get_or_create_nest",
      "func:is_",
      "func:is_unicode_scalar_value",
      "func:key_value_rule",
      "func:load",
      "func:loads",
      "func:parse_array",
      "func:parse_basic_str",
      "func:parse_basic_str_escape",
      "func:parse_basic_str_escape_multiline",
      "func:parse_hex_char",
      "func:parse_inline_table",
      "func:parse_key",
      "func:parse_key_part",
      "func:parse_key_value_pair",
      "func:parse_literal_str",
      "func:parse_multiline_str",
      "func:parse_one_line_basic_str",
      "func:parse_value",
      "func:set",
      "func:set_for_relative_key",
      "func:skip_chars",
      "func:skip_comment",
      "func:skip_comments_and_array_ws",
      "func:skip_until",
      "func:suffixed_err",
      "func:unset_all"
    ],
    "old_files": [
      "_parser.py_deepseek_187c4b71.py"
    ],
    "new_files": [
      "_parser_ad554d.py"
    ]
  },
  {
    "file_signature": [
      "class:IPairList",
      "class:SupportsBacktesting",
      "class:__BoolPairlistParameter",
      "class:__ListPairListParamenter",
      "class:__NumberPairlistParameter",
      "class:__OptionPairlistParameter",
      "class:__PairlistParameterBase",
      "class:__StringPairlistParameter",
      "func:__init__",
      "func:_validate_pair",
      "func:_whitelist_for_active_markets",
      "func:available_parameters",
      "func:description",
      "func:filter_pairlist",
      "func:gen_pairlist",
      "func:name",
      "func:needstickers",
      "func:refresh_period_parameter",
      "func:short_desc",
      "func:verify_blacklist",
      "func:verify_whitelist"
    ],
    "old_files": [
      "IPairList.py_deepseek_b7505f0e.py"
    ],
    "new_files": [
      "IPairList_2e2b02.py"
    ]
  },
  {
    "file_signature": [
      "class:GatedCnnEncoder",
      "class:ResidualBlock",
      "func:__init__",
      "func:forward",
      "func:get_input_dim",
      "func:get_output_dim",
      "func:is_bidirectional"
    ],
    "old_files": [
      "gated_cnn_encoder.py_deepseek_3d4edbef.py"
    ],
    "new_files": [
      "gated_cnn_encoder_38b825.py"
    ]
  },
  {
    "file_signature": [
      "class:YamahaConfigInfo",
      "class:YamahaDeviceZone",
      "func:__init__",
      "func:_call_playback_function",
      "func:_discovery",
      "func:build_source_list",
      "func:enable_output",
      "func:media_album_name",
      "func:media_artist",
      "func:media_content_type",
      "func:media_next_track",
      "func:media_pause",
      "func:media_play",
      "func:media_previous_track",
      "func:media_stop",
      "func:media_title",
      "func:menu_cursor",
      "func:mute_volume",
      "func:name",
      "func:play_media",
      "func:select_sound_mode",
      "func:select_source",
      "func:set_scene",
      "func:set_volume_level",
      "func:supported_features",
      "func:turn_off",
      "func:turn_on",
      "func:update",
      "func:zone_id"
    ],
    "old_files": [
      "media_player.py_deepseek_6b769586.py"
    ],
    "new_files": [
      "media_player_8b296d.py"
    ]
  },
  {
    "file_signature": [
      "class:ByteSize",
      "class:ConstrainedBytes",
      "class:ConstrainedDecimal",
      "class:ConstrainedFloat",
      "class:ConstrainedFrozenSet",
      "class:ConstrainedInt",
      "class:ConstrainedList",
      "class:ConstrainedNumberMeta",
      "class:ConstrainedSet",
      "class:ConstrainedStr",
      "class:DirectoryPath",
      "class:FilePath",
      "class:FiniteFloat",
      "class:Json",
      "class:JsonMeta",
      "class:JsonWrapper",
      "class:NegativeFloat",
      "class:NegativeInt",
      "class:NonNegativeFloat",
      "class:NonNegativeInt",
      "class:NonPositiveFloat",
      "class:NonPositiveInt",
      "class:PastDate",
      "class:PaymentCardBrand",
      "class:PaymentCardNumber",
      "class:PositiveFloat",
      "class:PositiveInt",
      "class:PyObject",
      "class:SecretBytes",
      "class:SecretField",
      "class:SecretStr",
      "class:StrictBool",
      "class:StrictBytes",
      "class:StrictFloat",
      "class:StrictInt",
      "class:StrictStr",
      "class:UUID1",
      "class:UUID3",
      "class:UUID4",
      "class:UUID5",
      "func:__eq__",
      "func:__get_validators__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__len__",
      "func:__modify_schema__",
      "func:__new__",
      "func:__repr__",
      "func:__str__",
      "func:_get_brand",
      "func:_get_pattern",
      "func:_registered",
      "func:conbytes",
      "func:condecimal",
      "func:confloat",
      "func:confrozenset",
      "func:conint",
      "func:conlist",
      "func:conset",
      "func:constr",
      "func:display",
      "func:frozenset_length_validator",
      "func:get_secret_value",
      "func:human_readable",
      "func:list_length_validator",
      "func:masked",
      "func:set_length_validator",
      "func:to",
      "func:unique_items_validator",
      "func:validate",
      "func:validate_digits",
      "func:validate_length_for_brand",
      "func:validate_luhn_check_digit"
    ],
    "old_files": [
      "types.py_deepseek_2b86ddd4.py"
    ],
    "new_files": [
      "types_263491.py"
    ]
  },
  {
    "file_signature": [
      "class:Browser",
      "class:BrowserContext",
      "func:__init__",
      "func:_dummy_callback",
      "func:_getVersion",
      "func:browser",
      "func:browserContexts",
      "func:isIncognite",
      "func:isIncognito",
      "func:process",
      "func:targets",
      "func:wsEndpoint"
    ],
    "old_files": [
      "browser.py_deepseek_d70c754b.py"
    ],
    "new_files": [
      "browser_8130a6.py"
    ]
  },
  {
    "file_signature": [
      "func:_validate_versions"
    ],
    "old_files": [
      "core.py_deepseek_35e36449.py"
    ],
    "new_files": [
      "core_711830.py"
    ]
  },
  {
    "file_signature": [
      "class:OlympusEmulator",
      "class:OlympusSurface",
      "func:__init__",
      "func:_get_parametrization",
      "func:_simulate_emulator",
      "func:_simulate_surface",
      "func:evaluation_function"
    ],
    "old_files": [
      "core.py_deepseek_16553488.py"
    ],
    "new_files": [
      "core_fcc14c.py"
    ]
  },
  {
    "file_signature": [
      "class:FluxSwitch",
      "func:__init__",
      "func:find_start_time",
      "func:find_stop_time",
      "func:is_on",
      "func:name"
    ],
    "old_files": [
      "switch.py_deepseek_e0aed1a2.py"
    ],
    "new_files": [
      "switch_67758e.py"
    ]
  },
  {
    "file_signature": [
      "func:cases_fn",
      "func:check_mods",
      "func:combine_mods",
      "func:create_provider",
      "func:generate_case_fn",
      "func:generate_from_tests",
      "func:get_create_provider_fn",
      "func:get_expected_modules",
      "func:get_provider",
      "func:prepare_fn",
      "func:run_state_test_generators"
    ],
    "old_files": [
      "gen.py_deepseek_1e5c7057.py"
    ],
    "new_files": [
      "gen_afcffc.py"
    ]
  },
  {
    "file_signature": [
      "class:AnacondaCompleteFuncargs",
      "class:AnacondaFillFuncargs",
      "class:AnacondaFuncargsKeyListener",
      "func:_insert_characters",
      "func:insert_snippet",
      "func:is_enabled",
      "func:on_query_context",
      "func:run",
      "func:valid_scope"
    ],
    "old_files": [
      "complete_func_args.py_deepseek_add1538b.py"
    ],
    "new_files": [
      "complete_func_args_83358f.py"
    ]
  },
  {
    "file_signature": [
      "class:ExponentialMovingWindow",
      "class:ExponentialMovingWindowGroupby",
      "class:OnlineExponentialMovingWindow",
      "func:__init__",
      "func:_calculate_deltas",
      "func:_check_window_bounds",
      "func:_cov",
      "func:_get_window_indexer",
      "func:aggregate",
      "func:corr",
      "func:cov",
      "func:cov_func",
      "func:get_center_of_mass",
      "func:mean",
      "func:online",
      "func:reset",
      "func:std",
      "func:sum",
      "func:var",
      "func:var_func"
    ],
    "old_files": [
      "ewm.py_deepseek_64027fd2.py"
    ],
    "new_files": [
      "ewm_ef0fa0.py"
    ]
  },
  {
    "file_signature": [
      "class:CategoricalAccessor",
      "func:__init__",
      "func:add_categories",
      "func:as_ordered",
      "func:as_unordered",
      "func:categories",
      "func:codes",
      "func:ordered",
      "func:remove_categories",
      "func:remove_unused_categories",
      "func:rename_categories",
      "func:reorder_categories",
      "func:set_categories"
    ],
    "old_files": [
      "categorical.py_deepseek_f99b3282.py"
    ],
    "new_files": [
      "categorical_2bf83a.py"
    ]
  },
  {
    "file_signature": [
      "class:LogManager",
      "class:LogManagerConfig",
      "func:__init__",
      "func:cleanup",
      "func:reset",
      "func:trigger_checkpointing",
      "func:trigger_evaluation",
      "func:update"
    ],
    "old_files": [
      "log_manager.py_deepseek_1f4b0ed8.py"
    ],
    "new_files": [
      "log_manager_0808f7.py"
    ]
  },
  {
    "file_signature": [
      "class:BaseTypingClassWithGenerics",
      "class:BaseTypingInstance",
      "class:BaseTypingValue",
      "class:DefineGenericBaseClass",
      "class:EmptyFilter",
      "class:GenericClass",
      "class:_AnnotatedClassContext",
      "class:_BoundTypeVarName",
      "class:_GenericInstanceWrapper",
      "class:_LazyGenericBaseClass",
      "class:_PseudoTreeNameClass",
      "class:_TypeVarFilter",
      "func:__init__",
      "func:__repr__",
      "func:_as_context",
      "func:_create_instance_with_generics",
      "func:_get_wrapped_value",
      "func:_remap_type_vars",
      "func:define_generics",
      "func:get",
      "func:get_annotated_class_object",
      "func:get_filters",
      "func:get_generics",
      "func:get_qualified_names",
      "func:get_signatures",
      "func:get_type_hint",
      "func:get_type_var_filter",
      "func:infer",
      "func:infer_type_vars",
      "func:is_same_class",
      "func:is_sub_class_of",
      "func:iter_",
      "func:name",
      "func:py__bases__",
      "func:py__call__",
      "func:py__class__",
      "func:py__name__",
      "func:py__stop_iteration_returns",
      "func:tree_node",
      "func:values",
      "func:with_generics"
    ],
    "old_files": [
      "base.py_deepseek_432e748f.py"
    ],
    "new_files": [
      "base_c73d2b.py"
    ]
  },
  {
    "file_signature": [
      "class:AssistantPreferences",
      "class:ExposedEntities",
      "class:ExposedEntity",
      "class:SerializedExposedEntities",
      "func:__init__",
      "func:_async_schedule_save",
      "func:_async_set_legacy_assistant_option",
      "func:_async_should_expose_legacy_entity",
      "func:_data_to_save",
      "func:_is_default_exposed",
      "func:_new_exposed_entity",
      "func:_update_exposed_entity",
      "func:async_expose_entity",
      "func:async_get_assistant_settings",
      "func:async_get_entity_settings",
      "func:async_get_expose_new_entities",
      "func:async_listen_entity_updates",
      "func:async_set_assistant_option",
      "func:async_set_expose_new_entities",
      "func:async_should_expose",
      "func:to_json",
      "func:unsubscribe",
      "func:ws_expose_entity",
      "func:ws_expose_new_entities_get",
      "func:ws_expose_new_entities_set",
      "func:ws_list_exposed_entities"
    ],
    "old_files": [
      "exposed_entities.py_deepseek_94c60445.py"
    ],
    "new_files": [
      "exposed_entities_a550ba.py"
    ]
  },
  {
    "file_signature": [
      "func:_get_sorted_source_vocab_fnames",
      "func:_get_sorted_target_vocab_fnames",
      "func:are_identical",
      "func:build_from_paths",
      "func:build_pruned_vocab",
      "func:build_vocab",
      "func:count_tokens",
      "func:count_tokens_for_path",
      "func:get_ordered_tokens_from_vocab",
      "func:is_valid_vocab",
      "func:load_or_create_vocab",
      "func:load_or_create_vocabs",
      "func:load_source_vocabs",
      "func:load_target_vocabs",
      "func:main",
      "func:prepare_vocab",
      "func:reverse_vocab",
      "func:save_source_vocabs",
      "func:save_target_vocabs",
      "func:vocab_from_json",
      "func:vocab_to_json"
    ],
    "old_files": [
      "vocab.py_deepseek_aa60a35d.py"
    ],
    "new_files": [
      "vocab_563bd2.py"
    ]
  },
  {
    "file_signature": [
      "class:ZWaveBaseEntity",
      "func:__init__",
      "func:_node_status_alive_or_dead",
      "func:_value_changed",
      "func:_value_removed",
      "func:available",
      "func:generate_name",
      "func:get_zwave_value",
      "func:on_value_update"
    ],
    "old_files": [
      "entity.py_deepseek_505884a2.py"
    ],
    "new_files": [
      "entity_428030.py"
    ]
  },
  {
    "file_signature": [
      "class:BlueprintException",
      "class:BlueprintInUse",
      "class:BlueprintWithNameException",
      "class:FailedToLoad",
      "class:FileAlreadyExists",
      "class:InvalidBlueprint",
      "class:InvalidBlueprintInputs",
      "class:MissingInput",
      "func:__init__"
    ],
    "old_files": [
      "errors.py_deepseek_32f81b16.py"
    ],
    "new_files": [
      "errors_174875.py"
    ]
  },
  {
    "file_signature": [
      "func:test_datahandler__check_empty_df",
      "func:test_datahandler_ohlcv_append",
      "func:test_datahandler_ohlcv_data_min_max",
      "func:test_datahandler_ohlcv_get_available_data",
      "func:test_datahandler_ohlcv_get_pairs",
      "func:test_datahandler_ohlcv_regex",
      "func:test_datahandler_trades_append",
      "func:test_datahandler_trades_data_min_max",
      "func:test_datahandler_trades_get_available_data",
      "func:test_datahandler_trades_get_pairs",
      "func:test_datahandler_trades_load",
      "func:test_datahandler_trades_not_supported",
      "func:test_datahandler_trades_purge",
      "func:test_datahandler_trades_store",
      "func:test_generic_datahandler_ohlcv_load_and_resave",
      "func:test_get_datahandler",
      "func:test_gethandlerclass",
      "func:test_hdf5datahandler_deprecated",
      "func:test_jsondatahandler_ohlcv_load",
      "func:test_jsondatahandler_ohlcv_purge",
      "func:test_jsondatahandler_trades_load",
      "func:test_rebuild_pair_from_filename"
    ],
    "old_files": [
      "test_datahandler.py_deepseek_ef9e6109.py"
    ],
    "new_files": [
      "test_datahandler_39fafd.py"
    ]
  },
  {
    "file_signature": [
      "class:Checkpointer",
      "func:__init__",
      "func:_find_all_checkpoints",
      "func:_is_primary",
      "func:_model_state_path",
      "func:_parse_model_state_path",
      "func:_parse_training_state_path",
      "func:_remove_checkpoint",
      "func:_training_state_path",
      "func:find_latest_checkpoint",
      "func:load_checkpoint",
      "func:maybe_save_checkpoint",
      "func:save_checkpoint"
    ],
    "old_files": [
      "checkpointer.py_deepseek_94c98f2d.py"
    ],
    "new_files": [
      "checkpointer_2adffa.py"
    ]
  },
  {
    "file_signature": [
      "class:_EtreeFrameParser",
      "class:_LxmlFrameParser",
      "class:_XMLFrameParser",
      "func:__init__",
      "func:_data_to_frame",
      "func:_iterparse_nodes",
      "func:_parse",
      "func:_parse_doc",
      "func:_parse_nodes",
      "func:_transform_doc",
      "func:_validate_names",
      "func:_validate_path",
      "func:get_data_from_filepath",
      "func:parse_data",
      "func:preprocess_data",
      "func:read_xml"
    ],
    "old_files": [
      "xml.py_deepseek_792d4f4f.py"
    ],
    "new_files": [
      "xml_da8497.py"
    ]
  },
  {
    "file_signature": [
      "class:CheckConfigError",
      "class:HomeAssistantConfig",
      "func:__init__",
      "func:_comp_error",
      "func:_pack_error",
      "func:add_error",
      "func:add_warning",
      "func:error_str",
      "func:warning_str"
    ],
    "old_files": [
      "check_config.py_deepseek_9da79f7c.py"
    ],
    "new_files": [
      "check_config_125c88.py"
    ]
  },
  {
    "file_signature": [
      "class:CSVFormatter",
      "func:__init__",
      "func:_generate_multiindex_header_rows",
      "func:_get_index_label_flat",
      "func:_get_index_label_from_obj",
      "func:_get_index_label_multiindex",
      "func:_has_aliases",
      "func:_initialize_chunksize",
      "func:_initialize_columns",
      "func:_initialize_index_label",
      "func:_initialize_quotechar",
      "func:_need_to_save_header",
      "func:_number_format",
      "func:_save",
      "func:_save_body",
      "func:_save_chunk",
      "func:_save_header",
      "func:data_index",
      "func:decimal",
      "func:encoded_labels",
      "func:float_format",
      "func:has_mi_columns",
      "func:header",
      "func:index",
      "func:na_rep",
      "func:nlevels",
      "func:save",
      "func:write_cols"
    ],
    "old_files": [
      "csvs.py_deepseek_c26b4e7f.py"
    ],
    "new_files": [
      "csvs_0376ba.py"
    ]
  },
  {
    "file_signature": [
      "class:BroadlinkDevice",
      "class:BroadlinkMP1BG1Device",
      "class:BroadlinkSP4BDevice",
      "class:MockSetup",
      "func:__init__",
      "func:get_device",
      "func:get_entry_data",
      "func:get_mock_api",
      "func:get_mock_entry"
    ],
    "old_files": [
      "__init__.py_deepseek_b35c5769.py"
    ],
    "new_files": [
      "__init___716b23.py"
    ]
  },
  {
    "file_signature": [
      "class:RestData",
      "func:__init__",
      "func:data_without_xml",
      "func:set_payload",
      "func:set_url",
      "func:url"
    ],
    "old_files": [
      "data.py_deepseek_f36d47b3.py"
    ],
    "new_files": [
      "data_b998b2.py"
    ]
  },
  {
    "file_signature": [
      "class:AppRunner",
      "class:BaseRunner",
      "class:BaseSite",
      "class:GracefulExit",
      "class:NamedPipeSite",
      "class:ServerRunner",
      "class:SockSite",
      "class:TCPSite",
      "class:UnixSite",
      "func:__init__",
      "func:_check_site",
      "func:_make_request",
      "func:_raise_graceful_exit",
      "func:_reg_site",
      "func:_unreg_site",
      "func:addresses",
      "func:app",
      "func:name",
      "func:server",
      "func:sites"
    ],
    "old_files": [
      "web_runner.py_deepseek_51d64d7d.py"
    ],
    "new_files": [
      "web_runner_bbf044.py"
    ]
  },
  {
    "file_signature": [
      "class:Token",
      "func:__init__",
      "func:__repr__",
      "func:__str__",
      "func:ensure_text",
      "func:show_token"
    ],
    "old_files": [
      "token_class.py_deepseek_074419f2.py"
    ],
    "new_files": [
      "token_class_8d102b.py"
    ]
  },
  {
    "file_signature": [
      "class:TestGetIndexerNonUnique",
      "class:TestGetLoc",
      "class:TestGetSliceBounds",
      "func:test_get_indexer_non_unique_dtype_mismatch",
      "func:test_get_indexer_non_unique_int_index",
      "func:test_get_loc_nan_object_dtype_nonmonotonic_nonunique",
      "func:test_get_loc_tuple_monotonic_above_size_cutoff",
      "func:test_get_slice_bounds_invalid_side",
      "func:test_get_slice_bounds_outside",
      "func:test_get_slice_bounds_within",
      "func:test_getitem_boolean_ea_indexer"
    ],
    "old_files": [
      "test_indexing.py_deepseek_fa642a88.py"
    ],
    "new_files": [
      "test_indexing_3e5a66.py"
    ]
  },
  {
    "file_signature": [
      "class:CustomProvider",
      "class:Meta",
      "class:Provider1",
      "class:Provider2",
      "class:Provider3",
      "class:Provider4",
      "class:Provider5",
      "class:TestGeneric",
      "class:TestSeededGeneric",
      "class:UnnamedProvider",
      "func:__init__",
      "func:empty",
      "func:five",
      "func:g1",
      "func:g2",
      "func:nothing",
      "func:one",
      "func:test_add_provider",
      "func:test_add_provider_generic_to_generic",
      "func:test_add_providers",
      "func:test_add_providers_generic_to_generic",
      "func:test_bad_argument",
      "func:test_base_address",
      "func:test_base_binary_file",
      "func:test_base_code",
      "func:test_base_finance",
      "func:test_base_food",
      "func:test_base_payment",
      "func:test_base_person",
      "func:test_base_text",
      "func:test_dir",
      "func:test_generic_address",
      "func:test_generic_code",
      "func:test_generic_cryptographic",
      "func:test_generic_datetime",
      "func:test_generic_development",
      "func:test_generic_file",
      "func:test_generic_finance",
      "func:test_generic_food",
      "func:test_generic_hardware",
      "func:test_generic_internet",
      "func:test_generic_numbers",
      "func:test_generic_path",
      "func:test_generic_payment",
      "func:test_generic_person",
      "func:test_generic_science",
      "func:test_generic_transport",
      "func:test_reseed",
      "func:test_str",
      "func:three",
      "func:two"
    ],
    "old_files": [
      "test_generic.py_deepseek_f4c8dffd.py"
    ],
    "new_files": [
      "test_generic_42794f.py"
    ]
  },
  {
    "file_signature": [
      "class:Bool",
      "class:BrokerList",
      "class:Codec",
      "class:Credentials",
      "class:Dict",
      "class:EnumParam",
      "class:Int",
      "class:LogHandlers",
      "class:Number",
      "class:Param",
      "class:Path",
      "class:Port",
      "class:SSLContext",
      "class:Seconds",
      "class:Severity",
      "class:Str",
      "class:Timezone",
      "class:URL",
      "class:UnsignedInt",
      "class:Version",
      "class:_Int",
      "class:_Section",
      "class:_Settings",
      "class:_Symbol",
      "func:Enum",
      "func:Symbol",
      "func:__get__",
      "func:__init__",
      "func:__set__",
      "func:_init_options",
      "func:_out_of_range",
      "func:active",
      "func:broker_list",
      "func:build_deprecation_warning",
      "func:class_name",
      "func:convert",
      "func:deprecated",
      "func:on_get",
      "func:on_get_value",
      "func:on_init_set_default",
      "func:on_init_set_value",
      "func:on_set",
      "func:on_set_default",
      "func:prepare_get",
      "func:prepare_init_default",
      "func:prepare_path",
      "func:prepare_set",
      "func:set_class_default",
      "func:to_bool",
      "func:to_python",
      "func:validate_after",
      "func:validate_before"
    ],
    "old_files": [
      "params.py_deepseek_e6727dc5.py"
    ],
    "new_files": [
      "params_067b56.py"
    ]
  },
  {
    "file_signature": [
      "class:SASReader",
      "func:__enter__",
      "func:__exit__",
      "func:close",
      "func:read",
      "func:read_sas"
    ],
    "old_files": [
      "sasreader.py_deepseek_c1469804.py"
    ],
    "new_files": [
      "sasreader_57b625.py"
    ]
  },
  {
    "file_signature": [
      "class:MqttStateVacuum",
      "func:__init__",
      "func:_prepare_subscribe_topics",
      "func:_setup_from_config",
      "func:_state_message_received",
      "func:_strings_to_services",
      "func:_update_state_attributes",
      "func:config_schema",
      "func:services_to_strings"
    ],
    "old_files": [
      "vacuum.py_deepseek_2389eec8.py"
    ],
    "new_files": [
      "vacuum_0d02fa.py"
    ]
  },
  {
    "file_signature": [
      "class:ClientWSTimeout",
      "class:ClientWebSocketResponse",
      "func:__aiter__",
      "func:__init__",
      "func:_cancel_heartbeat",
      "func:_cancel_pong_response_cb",
      "func:_handle_ping_pong_exception",
      "func:_ping_task_done",
      "func:_pong_not_received",
      "func:_reset_heartbeat",
      "func:_send_heartbeat",
      "func:_set_closed",
      "func:_set_closing",
      "func:client_notakeover",
      "func:close_code",
      "func:closed",
      "func:compress",
      "func:exception",
      "func:get_extra_info",
      "func:protocol"
    ],
    "old_files": [
      "client_ws.py_deepseek_3e5e5648.py"
    ],
    "new_files": [
      "client_ws_7f7caf.py"
    ]
  },
  {
    "file_signature": [
      "class:PeriodIndex",
      "func:__new__",
      "func:_cast_partial_indexing_scalar",
      "func:_convert_tolerance",
      "func:_disallow_mismatched_indexing",
      "func:_engine_type",
      "func:_is_comparable_dtype",
      "func:_maybe_cast_slice_bound",
      "func:_maybe_convert_timedelta",
      "func:_new_PeriodIndex",
      "func:_parsed_string_to_bounds",
      "func:_resolution_obj",
      "func:asfreq",
      "func:asof_locs",
      "func:from_fields",
      "func:from_ordinals",
      "func:get_loc",
      "func:hour",
      "func:inferred_type",
      "func:is_full",
      "func:minute",
      "func:period_range",
      "func:second",
      "func:shift",
      "func:to_timestamp",
      "func:values"
    ],
    "old_files": [
      "period.py_deepseek_290b79c9.py"
    ],
    "new_files": [
      "period_85d698.py"
    ]
  },
  {
    "file_signature": [
      "class:ConductorT",
      "class:ConsumerT",
      "class:ProducerBufferT",
      "class:ProducerT",
      "class:SchedulingStrategyT",
      "class:TransactionManagerT",
      "class:TransportT",
      "class:_AppT",
      "func:__init__",
      "func:ack",
      "func:acking_topics",
      "func:acks_enabled_for",
      "func:assignment",
      "func:close",
      "func:create_conductor",
      "func:create_consumer",
      "func:create_producer",
      "func:create_transaction_manager",
      "func:highwater",
      "func:iterate",
      "func:key_partition",
      "func:on_buffer_drop",
      "func:on_buffer_full",
      "func:pause_partitions",
      "func:put",
      "func:resume_flow",
      "func:resume_partitions",
      "func:send_soon",
      "func:size",
      "func:stop_flow",
      "func:supports_headers",
      "func:topic_partitions",
      "func:track_message",
      "func:unacked",
      "func:verify_recovery_event_path"
    ],
    "old_files": [
      "transports.py_deepseek_583468a3.py"
    ],
    "new_files": [
      "transports_a66523.py"
    ]
  },
  {
    "file_signature": [
      "func:_load_feature_fixtures",
      "func:_mock_protocol",
      "func:_mocked_alarm_module",
      "func:_mocked_camera_module",
      "func:_mocked_clean_module",
      "func:_mocked_device",
      "func:_mocked_energy_features",
      "func:_mocked_fan_module",
      "func:_mocked_feature",
      "func:_mocked_light_effect_module",
      "func:_mocked_light_module",
      "func:_mocked_speaker_module",
      "func:_mocked_strip_children",
      "func:_mocked_thermostat_module",
      "func:_patch_connect",
      "func:_patch_discovery",
      "func:_patch_single_discovery"
    ],
    "old_files": [
      "__init__.py_deepseek_c8544535.py"
    ],
    "new_files": [
      "__init___bc9a6b.py"
    ]
  },
  {
    "file_signature": [
      "class:ApiKeyAuth",
      "class:Client",
      "class:CustomJsonEncoder",
      "class:HTTPClient",
      "class:TokenAuth",
      "func:__call__",
      "func:__init__",
      "func:action",
      "func:default",
      "func:default_headers",
      "func:delete",
      "func:delete_alert",
      "func:get",
      "func:post",
      "func:put",
      "func:send_alert"
    ],
    "old_files": [
      "client.py_deepseek_1a527a58.py"
    ],
    "new_files": [
      "client_8529a4.py"
    ]
  },
  {
    "file_signature": [
      "class:RflinkCommand",
      "class:RflinkDevice",
      "class:SwitchableRflinkDevice",
      "func:__init__",
      "func:_availability_callback",
      "func:_handle_event",
      "func:assumed_state",
      "func:available",
      "func:cancel_queued_send_commands",
      "func:handle_event_callback",
      "func:is_connected",
      "func:is_on",
      "func:name",
      "func:set_rflink_protocol"
    ],
    "old_files": [
      "entity.py_deepseek_98842845.py"
    ],
    "new_files": [
      "entity_543df3.py"
    ]
  },
  {
    "file_signature": [
      "class:Document",
      "class:Field",
      "class:Link",
      "class:Response",
      "class:Section",
      "func:__init__",
      "func:get_body_field",
      "func:get_expanded_body",
      "func:get_links",
      "func:get_path_fields",
      "func:get_query_fields",
      "func:get_sections",
      "func:walk_links"
    ],
    "old_files": [
      "document.py_deepseek_99eb2cc1.py"
    ],
    "new_files": [
      "document_48bf0e.py"
    ]
  },
  {
    "file_signature": [
      "class:ServiceRegistry",
      "func:__init__",
      "func:current_price",
      "func:deposit",
      "func:ever_made_deposits",
      "func:ever_made_deposits_len",
      "func:get_service_url",
      "func:has_valid_registration",
      "func:set_url",
      "func:token_address"
    ],
    "old_files": [
      "service_registry.py_deepseek_7bd579f2.py"
    ],
    "new_files": [
      "service_registry_e94e0b.py"
    ]
  },
  {
    "file_signature": [
      "class:SerializedStore",
      "class:Store",
      "class:_SerializedStoreItemsView",
      "class:_SerializedStoreKeysView",
      "class:_SerializedStoreValuesView",
      "func:__contains__",
      "func:__delitem__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__setitem__",
      "func:_clear",
      "func:_contains",
      "func:_decode_key",
      "func:_decode_value",
      "func:_del",
      "func:_encode_key",
      "func:_encode_value",
      "func:_get",
      "func:_items_decoded",
      "func:_iteritems",
      "func:_iterkeys",
      "func:_itervalues",
      "func:_keys_decoded",
      "func:_repr_info",
      "func:_set",
      "func:_size",
      "func:_values_decoded",
      "func:apply_changelog_batch",
      "func:clear",
      "func:items",
      "func:keys",
      "func:label",
      "func:persisted_offset",
      "func:set_persisted_offset",
      "func:values"
    ],
    "old_files": [
      "base.py_deepseek_aafd8625.py"
    ],
    "new_files": [
      "base_ce86d4.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractDemoPlayer",
      "class:DemoBrowsePlayer",
      "class:DemoGroupPlayer",
      "class:DemoMusicPlayer",
      "class:DemoTVShowPlayer",
      "class:DemoYoutubePlayer",
      "func:__init__",
      "func:clear_playlist",
      "func:join_players",
      "func:media_artist",
      "func:media_episode",
      "func:media_image_url",
      "func:media_next_track",
      "func:media_pause",
      "func:media_play",
      "func:media_position",
      "func:media_position_updated_at",
      "func:media_previous_track",
      "func:media_stop",
      "func:media_title",
      "func:media_track",
      "func:mute_volume",
      "func:play_media",
      "func:select_sound_mode",
      "func:select_source",
      "func:set_repeat",
      "func:set_shuffle",
      "func:set_volume_level",
      "func:turn_off",
      "func:turn_on",
      "func:unjoin_player",
      "func:volume_down",
      "func:volume_up"
    ],
    "old_files": [
      "media_player.py_deepseek_4ae858af.py"
    ],
    "new_files": [
      "media_player_828fe1.py"
    ]
  },
  {
    "file_signature": [
      "func:_colorize_cache_key",
      "func:colorize_value",
      "func:filter_records",
      "func:get_time_display",
      "func:main",
      "func:nice_time_diff",
      "func:parse_log",
      "func:render",
      "func:render_fields",
      "func:replace",
      "func:rgb_color_picker",
      "func:transform_records",
      "func:truncate_logger_name"
    ],
    "old_files": [
      "json-log-to-html.py_deepseek_bd8f0d73.py"
    ],
    "new_files": [
      "json-log-to-html_6abdf7.py"
    ]
  },
  {
    "file_signature": [
      "class:ImplicitNSInfo",
      "func:__init__",
      "func:_find_module",
      "func:_find_module_py33",
      "func:_from_loader",
      "func:_get_init_path",
      "func:_get_source",
      "func:_iter_module_names",
      "func:_test_print",
      "func:_test_raise_error",
      "func:_zip_list_subdirectory",
      "func:create_simple_object",
      "func:get_builtin_module_names",
      "func:get_compiled_method_return",
      "func:get_module_info",
      "func:get_sys_path",
      "func:iter_module_names",
      "func:load_module",
      "func:safe_literal_eval"
    ],
    "old_files": [
      "functions.py_deepseek_02c2585e.py"
    ],
    "new_files": [
      "functions_b12404.py"
    ]
  },
  {
    "file_signature": [
      "class:MountableProtectDeviceBinarySensor",
      "class:ProtectBinaryEntityDescription",
      "class:ProtectBinaryEventEntityDescription",
      "class:ProtectDeviceBinarySensor",
      "class:ProtectDiskBinarySensor",
      "class:ProtectEventBinarySensor",
      "func:__init__",
      "func:_add_new_device",
      "func:_async_event_entities",
      "func:_async_nvr_entities",
      "func:_async_update_device_from_protect",
      "func:_set_event_done"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_5651c40b.py"
    ],
    "new_files": [
      "binary_sensor_9e7fb5.py"
    ]
  },
  {
    "file_signature": [
      "class:XiaomiMiioRemote",
      "func:__init__",
      "func:_send_command",
      "func:device",
      "func:is_on",
      "func:name",
      "func:send_command",
      "func:slot",
      "func:timeout",
      "func:unique_id"
    ],
    "old_files": [
      "remote.py_deepseek_88116a83.py"
    ],
    "new_files": [
      "remote_939ae3.py"
    ]
  },
  {
    "file_signature": [
      "class:GoogleTravelTimeSensor",
      "func:__init__",
      "func:convert_time_to_utc",
      "func:extra_state_attributes",
      "func:native_value",
      "func:update"
    ],
    "old_files": [
      "sensor.py_deepseek_36877070.py"
    ],
    "new_files": [
      "sensor_7457a0.py"
    ]
  },
  {
    "file_signature": [
      "class:SecretRegistry",
      "func:__init__",
      "func:_register_secret_batch",
      "func:get_secret_registration_block_by_secrethash",
      "func:is_secret_registered",
      "func:register_secret",
      "func:register_secret_batch"
    ],
    "old_files": [
      "secret_registry.py_deepseek_9bac50fe.py"
    ],
    "new_files": [
      "secret_registry_13acaf.py"
    ]
  },
  {
    "file_signature": [
      "class:DeploymentPaginationResponse",
      "class:DeploymentResponse",
      "class:FlowPaginationResponse",
      "class:FlowRunPaginationResponse",
      "class:FlowRunResponse",
      "class:GlobalConcurrencyLimitResponse",
      "class:HistoryResponse",
      "class:HistoryResponseState",
      "class:OrchestrationResult",
      "class:SchemaValueIndexError",
      "class:SchemaValuePropertyError",
      "class:SchemaValuesValidationResponse",
      "class:SetStateStatus",
      "class:StateAbortDetails",
      "class:StateAcceptDetails",
      "class:StateRejectDetails",
      "class:StateWaitDetails",
      "class:WorkQueueResponse",
      "class:WorkQueueWithStatus",
      "class:WorkerFlowRunResponse",
      "class:WorkerResponse",
      "func:__eq__",
      "func:model_validate",
      "func:validate_timestamps"
    ],
    "old_files": [
      "responses.py_deepseek_60ef7b70.py"
    ],
    "new_files": [
      "responses_7e84ca.py"
    ]
  },
  {
    "file_signature": [
      "class:ArestSwitchBase",
      "class:ArestSwitchFunction",
      "class:ArestSwitchPin",
      "func:__init__",
      "func:__set_pin_output",
      "func:setup_platform",
      "func:turn_off",
      "func:turn_on",
      "func:update"
    ],
    "old_files": [
      "switch.py_deepseek_1c4fdced.py"
    ],
    "new_files": [
      "switch_9b7d9a.py"
    ]
  },
  {
    "file_signature": [
      "class:PrettyDict",
      "class:TableSchemaFormatter",
      "class:_EastAsianTextAdjustment",
      "class:_TextAdjustment",
      "func:__init__",
      "func:__repr__",
      "func:_adj_justify",
      "func:_extend_line",
      "func:_get_pad",
      "func:_justify",
      "func:_pprint_dict",
      "func:_pprint_seq",
      "func:adjoin",
      "func:as_escaped_string",
      "func:best_len",
      "func:default_pprint",
      "func:enable_data_resource_formatter",
      "func:format_object_summary",
      "func:get_adjustment",
      "func:justify",
      "func:len",
      "func:pprint_thing",
      "func:pprint_thing_encoded"
    ],
    "old_files": [
      "printing.py_deepseek_91cbf2a2.py"
    ],
    "new_files": [
      "printing_6fb550.py"
    ]
  },
  {
    "file_signature": [
      "class:_Constraint",
      "func:__call__",
      "func:__init__",
      "func:doint",
      "func:instrum_discrete",
      "func:keras_tuning",
      "func:mltuning",
      "func:naive_seq_keras_tuning",
      "func:naive_seq_mltuning",
      "func:naive_veryseq_keras_tuning",
      "func:naivemltuning",
      "func:nano_naive_seq_mltuning",
      "func:nano_naive_veryseq_mltuning",
      "func:nano_seq_mltuning",
      "func:nano_veryseq_mltuning",
      "func:oneshot_mltuning",
      "func:parallel_small_budget",
      "func:refactor_optims",
      "func:seq_keras_tuning",
      "func:seq_mltuning",
      "func:skip_ci",
      "func:veryseq_keras_tuning",
      "func:yawidebbob"
    ],
    "old_files": [
      "experiments.py_deepseek_56dbe657.py"
    ],
    "new_files": [
      "experiments_a52bc9.py"
    ]
  },
  {
    "file_signature": [
      "class:Cache",
      "class:Consumer",
      "class:Publisher",
      "class:RedisStreamsMessage",
      "class:Subscription",
      "func:__eq__",
      "func:__init__"
    ],
    "old_files": [
      "messaging.py_deepseek_c5025826.py"
    ],
    "new_files": [
      "messaging_30ade3.py"
    ]
  },
  {
    "file_signature": [
      "class:Case",
      "class:_LiveCheck",
      "func:__init__",
      "func:_failed_longer_than",
      "func:_maybe_recover_from_failed_state",
      "func:_now",
      "func:_set_pass_state",
      "func:current_execution",
      "func:current_test",
      "func:label",
      "func:seconds_since_last_fail"
    ],
    "old_files": [
      "case.py_deepseek_556666e4.py"
    ],
    "new_files": [
      "case_2f1853.py"
    ]
  },
  {
    "file_signature": [
      "func:correct_function",
      "func:f",
      "func:func",
      "func:func_1",
      "func:func_2",
      "func:func_kwargs",
      "func:incorrect_function",
      "func:numba_func",
      "func:sum_last",
      "func:test_args_not_cached",
      "func:test_cache",
      "func:test_check_nopython_kwargs",
      "func:test_correct_function_signature",
      "func:test_engine_kwargs_not_cached",
      "func:test_index_data_correctly_passed",
      "func:test_index_order_consistency_preserved",
      "func:test_multiindex_multi_key_not_supported",
      "func:test_multiindex_one_key",
      "func:test_multilabel_numba_vs_cython",
      "func:test_multilabel_udf_numba_vs_cython",
      "func:test_numba_vs_cython",
      "func:test_string_cython_vs_numba",
      "func:test_use_global_config"
    ],
    "old_files": [
      "test_numba.py_deepseek_3164d287.py"
    ],
    "new_files": [
      "test_numba_b10ee7.py"
    ]
  },
  {
    "file_signature": [
      "func:example",
      "func:func_no_args",
      "func:function_signature_stress_test",
      "func:import_as_names",
      "func:long_lines",
      "func:off_and_on_without_data",
      "func:on_and_off_broken",
      "func:single_literal_yapf_disable",
      "func:spaces",
      "func:spaces2",
      "func:spaces_types",
      "func:subscriptlist",
      "func:testlist_star_expr",
      "func:yield_expr"
    ],
    "old_files": [
      "fmtonoff.py_deepseek_2a9a416c.py"
    ],
    "new_files": [
      "fmtonoff_3a4c86.py"
    ]
  },
  {
    "file_signature": [
      "func:check_delete_message",
      "func:check_has_zoom_token",
      "func:check_presence",
      "func:check_realm_bot_add",
      "func:check_realm_bot_update",
      "func:check_realm_default_update",
      "func:check_realm_emoji_update",
      "func:check_realm_export",
      "func:check_realm_update",
      "func:check_realm_update_dict",
      "func:check_realm_user_update",
      "func:check_stream_update",
      "func:check_subscription_update",
      "func:check_update_display_settings",
      "func:check_update_global_notifications",
      "func:check_update_message",
      "func:check_user_group_update",
      "func:check_user_settings_update",
      "func:check_user_status",
      "func:f",
      "func:make_checker",
      "func:validate_with_model"
    ],
    "old_files": [
      "event_schema.py_deepseek_05532cab.py"
    ],
    "new_files": [
      "event_schema_4d75fe.py"
    ]
  },
  {
    "file_signature": [
      "class:RuntimeConfig",
      "class:UnsetCredentials",
      "class:UnsetProfile",
      "func:__getattribute__",
      "func:__init__",
      "func:__post_init__",
      "func:_connection_keys",
      "func:_get_config_paths",
      "func:_get_project_directories",
      "func:_get_v2_config_paths",
      "func:_is_config_used",
      "func:_project_quoting_dict",
      "func:clear_dependencies",
      "func:collect_parts",
      "func:connection_info",
      "func:from_args",
      "func:from_parts",
      "func:get_metadata",
      "func:get_profile",
      "func:get_resource_config_paths",
      "func:load_dependencies",
      "func:load_profile",
      "func:load_project",
      "func:load_projects",
      "func:new_project",
      "func:serialize",
      "func:to_target_dict",
      "func:type",
      "func:unique_field",
      "func:validate",
      "func:warn_for_unused_resource_config_paths"
    ],
    "old_files": [
      "runtime.py_deepseek_58146c86.py"
    ],
    "new_files": [
      "runtime_8a2834.py"
    ]
  },
  {
    "file_signature": [
      "class:SensiboDeviceBinarySensorEntityDescription",
      "class:SensiboDeviceSensor",
      "class:SensiboMotionBinarySensorEntityDescription",
      "class:SensiboMotionSensor",
      "func:__init__",
      "func:_add_remove_devices",
      "func:is_on"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_c19b27d0.py"
    ],
    "new_files": [
      "binary_sensor_b660c7.py"
    ]
  },
  {
    "file_signature": [
      "class:SchemaGenericTestParser",
      "func:__init__",
      "func:_lookup_attached_node",
      "func:add_test_node",
      "func:create_test_node",
      "func:generate_unique_id",
      "func:get_compiled_path",
      "func:get_hashable_md",
      "func:parse_column_tests",
      "func:parse_file",
      "func:parse_from_dict",
      "func:parse_generic_test",
      "func:parse_node",
      "func:parse_test",
      "func:parse_tests",
      "func:parse_versioned_tests",
      "func:render_test_update",
      "func:render_with_context",
      "func:resource_type",
      "func:store_env_vars"
    ],
    "old_files": [
      "schema_generic_tests.py_deepseek_d32963a8.py"
    ],
    "new_files": [
      "schema_generic_tests_906d8a.py"
    ]
  },
  {
    "file_signature": [
      "class:ManualAlarm",
      "func:__init__",
      "func:_active_state",
      "func:_arming_time",
      "func:_async_set_state_update_events",
      "func:_async_update_state",
      "func:_async_validate_code",
      "func:_pending_time",
      "func:_state_schema",
      "func:_state_validator",
      "func:_within_arming_time",
      "func:_within_pending_time",
      "func:alarm_state",
      "func:async_scheduled_update",
      "func:code_format",
      "func:extra_state_attributes"
    ],
    "old_files": [
      "alarm_control_panel.py_deepseek_b90d8589.py"
    ],
    "new_files": [
      "alarm_control_panel_85f407.py"
    ]
  },
  {
    "file_signature": [
      "class:TPLinkLightEffectEntity",
      "class:TPLinkLightEntity",
      "class:TPLinkLightEntityDescription",
      "func:__init__",
      "func:_async_build_base_effect",
      "func:_async_extract_brightness_transition",
      "func:_async_update_attrs",
      "func:_check_device",
      "func:_determine_color_mode",
      "func:_get_backwards_compatible_light_unique_id",
      "func:_register_effects_services"
    ],
    "old_files": [
      "light.py_deepseek_d41f5759.py"
    ],
    "new_files": [
      "light_638354.py"
    ]
  },
  {
    "file_signature": [
      "class:StdoutRefactoringTool",
      "func:__init__",
      "func:diff_texts",
      "func:log_error",
      "func:main",
      "func:print_output",
      "func:warn",
      "func:write_file"
    ],
    "old_files": [
      "main.py_deepseek_3f8c7064.py"
    ],
    "new_files": [
      "main_be1d12.py"
    ]
  },
  {
    "file_signature": [
      "class:ZHAEntity",
      "func:__init__",
      "func:_handle_entity_events",
      "func:available",
      "func:device_info",
      "func:log",
      "func:name",
      "func:restore_external_state_attributes"
    ],
    "old_files": [
      "entity.py_deepseek_fb3caf10.py"
    ],
    "new_files": [
      "entity_3c2299.py"
    ]
  },
  {
    "file_signature": [
      "class:Starlette",
      "func:__init__",
      "func:add_event_handler",
      "func:add_exception_handler",
      "func:add_middleware",
      "func:add_route",
      "func:add_websocket_route",
      "func:build_middleware_stack",
      "func:decorator",
      "func:exception_handler",
      "func:host",
      "func:middleware",
      "func:mount",
      "func:on_event",
      "func:route",
      "func:routes",
      "func:url_path_for",
      "func:websocket_route"
    ],
    "old_files": [
      "applications.py_deepseek_9a81b2aa.py"
    ],
    "new_files": [
      "applications_c5af27.py"
    ]
  },
  {
    "file_signature": [
      "class:TestBuilder",
      "func:__init__",
      "func:_bad_type",
      "func:_process_legacy_args",
      "func:_render_values",
      "func:build_model_str",
      "func:build_raw_code",
      "func:construct_config",
      "func:extract_test_args",
      "func:get_synthetic_test_names",
      "func:macro_name",
      "func:synthesize_generic_test_names",
      "func:tags"
    ],
    "old_files": [
      "generic_test_builders.py_deepseek_dbe9f303.py"
    ],
    "new_files": [
      "generic_test_builders_3da473.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockHeader",
      "class:MiningHeader",
      "func:__init__",
      "func:__str__",
      "func:base_fee_per_gas",
      "func:blob_gas_used",
      "func:excess_blob_gas",
      "func:hash",
      "func:hex_hash",
      "func:is_genesis",
      "func:mining_hash",
      "func:parent_beacon_block_root",
      "func:withdrawals_root"
    ],
    "old_files": [
      "headers.py_deepseek_a1534da1.py"
    ],
    "new_files": [
      "headers_cc92a5.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockchainServices",
      "class:SimplePFSProxy",
      "func:__init__",
      "func:check_channel",
      "func:create_all_channels_for_network",
      "func:create_apps",
      "func:create_network_channels",
      "func:create_sequential_channels",
      "func:jsonrpc_services",
      "func:network_with_minimum_channels",
      "func:parallel_start_apps",
      "func:payment_channel_open_and_deposit",
      "func:query_address_metadata",
      "func:set_services",
      "func:wait_for_alarm_start",
      "func:wait_for_channels",
      "func:wait_for_token_networks",
      "func:wait_for_usable_channel"
    ],
    "old_files": [
      "network.py_deepseek_8d1b1d1c.py"
    ],
    "new_files": [
      "network_7ec1c6.py"
    ]
  },
  {
    "file_signature": [
      "class:AssertingEventsClient",
      "class:AssertingPassthroughEventsClient",
      "class:EventsClient",
      "class:NullEventsClient",
      "class:PrefectCloudAccountEventSubscriber",
      "class:PrefectCloudEventSubscriber",
      "class:PrefectCloudEventsClient",
      "class:PrefectEventSubscriber",
      "class:PrefectEventsClient",
      "class:WebsocketProxyConnect",
      "func:__aiter__",
      "func:__await__",
      "func:__init__",
      "func:_get_api_url_and_key",
      "func:_log_debug",
      "func:client_name",
      "func:events_in_socket_from_api_url",
      "func:events_out_socket_from_api_url",
      "func:get_events_client",
      "func:get_events_subscriber",
      "func:http_to_ws",
      "func:pop_events",
      "func:reset",
      "func:websocket_connect"
    ],
    "old_files": [
      "clients.py_deepseek_0d12d2c8.py"
    ],
    "new_files": [
      "clients_e6ffbd.py"
    ]
  },
  {
    "file_signature": [
      "func:_add_valid_attestations",
      "func:add_attestations_to_state",
      "func:build_attestation_data",
      "func:cached_prepare_state_with_attestations",
      "func:compute_max_inclusion_slot",
      "func:fill_aggregate_attestation",
      "func:get_attestation_signature",
      "func:get_eip7549_aggregation_bits_offset",
      "func:get_empty_eip7549_aggregation_bits",
      "func:get_max_attestations",
      "func:get_valid_attestation",
      "func:get_valid_attestation_at_slot",
      "func:get_valid_attestations_at_slot",
      "func:next_epoch_with_attestations",
      "func:next_slots_with_attestations",
      "func:participants_filter",
      "func:prepare_state_with_attestations",
      "func:run_attestation_processing",
      "func:sign_aggregate_attestation",
      "func:sign_attestation",
      "func:sign_indexed_attestation",
      "func:state_transition_with_full_attestations_block",
      "func:state_transition_with_full_block",
      "func:temp_participants_filter"
    ],
    "old_files": [
      "attestations.py_deepseek_7db2ae98.py"
    ],
    "new_files": [
      "attestations_9893da.py"
    ]
  },
  {
    "file_signature": [
      "class:KoalasAreaPlot",
      "class:KoalasBarPlot",
      "class:KoalasBarhPlot",
      "class:KoalasBoxPlot",
      "class:KoalasHistPlot",
      "class:KoalasKdePlot",
      "class:KoalasLinePlot",
      "class:KoalasPiePlot",
      "class:KoalasScatterPlot",
      "func:__init__",
      "func:_args_adjust",
      "func:_compute_plot_data",
      "func:_get_ind",
      "func:_make_plot",
      "func:_plot",
      "func:boxplot",
      "func:plot_frame",
      "func:plot_koalas",
      "func:plot_series",
      "func:rc_defaults",
      "func:update_dict"
    ],
    "old_files": [
      "matplotlib.py_deepseek_714edf47.py"
    ],
    "new_files": [
      "matplotlib_5964e7.py"
    ]
  },
  {
    "file_signature": [
      "class:AccessLoggerWrapper",
      "class:PayloadAccessError",
      "class:RequestHandler",
      "class:RequestPayloadError",
      "class:_ErrInfo",
      "func:__init__",
      "func:__repr__",
      "func:_make_error_handler",
      "func:_process_keepalive",
      "func:close",
      "func:connection_lost",
      "func:connection_made",
      "func:data_received",
      "func:enabled",
      "func:eof_received",
      "func:force_close",
      "func:handle_error",
      "func:keep_alive",
      "func:keepalive_timeout",
      "func:log_debug",
      "func:log_exception",
      "func:set_parser"
    ],
    "old_files": [
      "web_protocol.py_deepseek_4cc42b10.py"
    ],
    "new_files": [
      "web_protocol_b74f41.py"
    ]
  },
  {
    "file_signature": [
      "class:InfinityType",
      "class:InvalidVersion",
      "class:NegativeInfinityType",
      "class:Version",
      "class:_BaseVersion",
      "class:_Version",
      "func:__eq__",
      "func:__ge__",
      "func:__gt__",
      "func:__hash__",
      "func:__init__",
      "func:__le__",
      "func:__lt__",
      "func:__ne__",
      "func:__neg__",
      "func:__repr__",
      "func:__str__",
      "func:_cmpkey",
      "func:_parse_letter_version",
      "func:_parse_local_version",
      "func:base_version",
      "func:dev",
      "func:epoch",
      "func:is_devrelease",
      "func:is_postrelease",
      "func:is_prerelease",
      "func:local",
      "func:major",
      "func:micro",
      "func:minor",
      "func:parse",
      "func:post",
      "func:pre",
      "func:public",
      "func:release"
    ],
    "old_files": [
      "__init__.py_deepseek_4e0d6b53.py"
    ],
    "new_files": [
      "__init___733adb.py"
    ]
  },
  {
    "file_signature": [
      "class:Control4Light",
      "func:__init__",
      "func:_create_api_object",
      "func:brightness",
      "func:is_on",
      "func:supported_features"
    ],
    "old_files": [
      "light.py_deepseek_ef965547.py"
    ],
    "new_files": [
      "light_7b6626.py"
    ]
  },
  {
    "file_signature": [
      "class:Elmo",
      "class:_ElmoBiLm",
      "class:_ElmoCharacterEncoder",
      "func:__init__",
      "func:_load_char_embedding",
      "func:_load_cnn_weights",
      "func:_load_highway",
      "func:_load_projection",
      "func:_load_weights",
      "func:batch_to_ids",
      "func:create_cached_cnn_embeddings",
      "func:forward",
      "func:get_output_dim"
    ],
    "old_files": [
      "elmo.py_deepseek_d981c2e3.py"
    ],
    "new_files": [
      "elmo_4ed8b3.py"
    ]
  },
  {
    "file_signature": [
      "class:TemplateVacuum",
      "func:__init__",
      "func:_async_setup_templates",
      "func:_update_battery_level",
      "func:_update_fan_speed",
      "func:_update_state",
      "func:activity"
    ],
    "old_files": [
      "vacuum.py_deepseek_2bdc97a8.py"
    ],
    "new_files": [
      "vacuum_4633b7.py"
    ]
  },
  {
    "file_signature": [
      "class:Color",
      "class:RGBA",
      "func:__eq__",
      "func:__get_validators__",
      "func:__getitem__",
      "func:__hash__",
      "func:__init__",
      "func:__modify_schema__",
      "func:__repr_args__",
      "func:__str__",
      "func:_alpha_float",
      "func:as_hex",
      "func:as_hsl",
      "func:as_hsl_tuple",
      "func:as_named",
      "func:as_rgb",
      "func:as_rgb_tuple",
      "func:float_to_255",
      "func:ints_to_rgba",
      "func:original",
      "func:parse_color_value",
      "func:parse_float_alpha",
      "func:parse_hsl",
      "func:parse_str",
      "func:parse_tuple"
    ],
    "old_files": [
      "color.py_deepseek_41c9bd2a.py"
    ],
    "new_files": [
      "color_334856.py"
    ]
  },
  {
    "file_signature": [
      "class:BalanceProof",
      "func:__init__",
      "func:balance_hash",
      "func:hash_balance_data",
      "func:serialize_bin"
    ],
    "old_files": [
      "__init__.py_deepseek_bfd62efe.py"
    ],
    "new_files": [
      "__init___81f696.py"
    ]
  },
  {
    "file_signature": [
      "class:SerialSensor",
      "func:__init__",
      "func:extra_state_attributes",
      "func:name",
      "func:native_value",
      "func:stop_serial_read"
    ],
    "old_files": [
      "sensor.py_deepseek_6aacde5a.py"
    ],
    "new_files": [
      "sensor_c9d852.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoWeather",
      "func:__init__",
      "func:condition",
      "func:humidity",
      "func:native_pressure",
      "func:native_pressure_unit",
      "func:native_temperature",
      "func:native_temperature_unit",
      "func:native_wind_speed",
      "func:native_wind_speed_unit"
    ],
    "old_files": [
      "weather.py_deepseek_206013a4.py"
    ],
    "new_files": [
      "weather_020398.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoWeather",
      "func:__init__",
      "func:condition",
      "func:humidity",
      "func:native_pressure",
      "func:native_pressure_unit",
      "func:native_temperature",
      "func:native_temperature_unit",
      "func:native_wind_speed",
      "func:native_wind_speed_unit"
    ],
    "old_files": [
      "weather.py_deepseek_4e219085.py"
    ],
    "new_files": [
      "weather_020398.py"
    ]
  },
  {
    "file_signature": [
      "class:Target",
      "func:__init__",
      "func:_closedCallback",
      "func:_initializedCallback",
      "func:_targetInfoChanged",
      "func:browser",
      "func:browserContext",
      "func:opener",
      "func:type",
      "func:url"
    ],
    "old_files": [
      "target.py_deepseek_5c0a10ab.py"
    ],
    "new_files": [
      "target_8f735b.py"
    ]
  },
  {
    "file_signature": [
      "class:MockBaseClassDeprecatedProperty",
      "class:MockDefaultClass",
      "class:MockDeprecatedClass",
      "class:MockUpdatedClass",
      "class:TestDeprecatedConstantEnum",
      "class:TestEnum",
      "func:_get_value",
      "func:mock_deprecated_function",
      "func:new_property",
      "func:old_property",
      "func:test_check_if_deprecated_constant",
      "func:test_check_if_deprecated_constant_integration_not_found",
      "func:test_config_get_deprecated_new",
      "func:test_config_get_deprecated_old",
      "func:test_deprecated_class",
      "func:test_deprecated_function",
      "func:test_deprecated_function_called_from_built_in_integration",
      "func:test_deprecated_function_called_from_custom_integration",
      "func:test_deprecated_substitute_default_class",
      "func:test_deprecated_substitute_new_class",
      "func:test_deprecated_substitute_old_class",
      "func:test_dir_with_deprecated_constants",
      "func:test_enum_with_deprecated_members",
      "func:test_enum_with_deprecated_members_integration_not_found",
      "func:test_test_check_if_deprecated_constant_invalid"
    ],
    "old_files": [
      "test_deprecation.py_deepseek_98a3985d.py"
    ],
    "new_files": [
      "test_deprecation_a6e8da.py"
    ]
  },
  {
    "file_signature": [
      "class:SpuriousDragonTransaction",
      "class:SpuriousDragonUnsignedTransaction",
      "func:as_signed_transaction",
      "func:chain_id",
      "func:create_unsigned_transaction",
      "func:get_message_for_signing",
      "func:v_max",
      "func:v_min",
      "func:y_parity"
    ],
    "old_files": [
      "transactions.py_deepseek_5c5a8715.py"
    ],
    "new_files": [
      "transactions_dad89f.py"
    ]
  },
  {
    "file_signature": [
      "class:MultiIndex",
      "func:__abs__",
      "func:__getattr__",
      "func:__iter__",
      "func:__new__",
      "func:_align_and_column_op",
      "func:_column_label",
      "func:_comparator_for_monotonic_decreasing",
      "func:_comparator_for_monotonic_increasing",
      "func:_get_level_number",
      "func:_internal",
      "func:_is_monotonic",
      "func:_is_monotonic_decreasing",
      "func:_is_monotonic_increasing",
      "func:_verify_for_rename",
      "func:_with_new_scol",
      "func:all",
      "func:any",
      "func:argmax",
      "func:argmin",
      "func:asi8",
      "func:asof",
      "func:copy",
      "func:drop",
      "func:factorize",
      "func:from_arrays",
      "func:from_frame",
      "func:from_product",
      "func:from_tuples",
      "func:get_level_values",
      "func:hasnans",
      "func:inferred_type",
      "func:insert",
      "func:intersection",
      "func:is_all_dates",
      "func:item",
      "func:levshape",
      "func:name",
      "func:nunique",
      "func:swaplevel",
      "func:symmetric_difference",
      "func:toPandas",
      "func:to_frame",
      "func:to_pandas",
      "func:value_counts"
    ],
    "old_files": [
      "multi.py_deepseek_ac01e7fb.py"
    ],
    "new_files": [
      "multi_7dfe48.py"
    ]
  },
  {
    "file_signature": [
      "class:TestEngine",
      "func:run_execution_payload_processing",
      "func:test_incorrect_blob_tx_type",
      "func:test_incorrect_block_hash",
      "func:test_incorrect_commitment",
      "func:test_incorrect_commitments_order",
      "func:test_incorrect_transaction_length_1_byte_short",
      "func:test_incorrect_transaction_length_1_extra_byte",
      "func:test_incorrect_transaction_length_32_extra_bytes",
      "func:test_incorrect_transaction_length_empty",
      "func:test_incorrect_transaction_no_blobs_but_with_commitments",
      "func:test_invalid_correct_input__execution_invalid",
      "func:test_invalid_exceed_max_blobs_per_block",
      "func:test_no_commitments_for_transactions",
      "func:test_no_transactions_with_commitments",
      "func:test_zeroed_commitment",
      "func:verify_and_notify_new_payload"
    ],
    "old_files": [
      "test_process_execution_payload.py_deepseek_14242ef6.py"
    ],
    "new_files": [
      "test_process_execution_payload_bd0176.py"
    ]
  },
  {
    "file_signature": [
      "func:filter_by_topic_name_via_message",
      "func:generate_topic_history_from_db_rows",
      "func:get_first_message_for_user_in_topic",
      "func:get_topic_display_name",
      "func:get_topic_from_message_info",
      "func:get_topic_history_for_public_stream",
      "func:get_topic_history_for_stream",
      "func:get_topic_resolution_and_bare_name",
      "func:maybe_rename_empty_topic_to_general_chat",
      "func:maybe_rename_general_chat_to_empty_topic",
      "func:messages_for_topic",
      "func:participants_for_topic",
      "func:propagate",
      "func:save_message_for_edit_use_case",
      "func:update_edit_history",
      "func:update_messages_for_topic_edit",
      "func:user_message_exists_for_topic"
    ],
    "old_files": [
      "topic.py_deepseek_5018cdae.py"
    ],
    "new_files": [
      "topic_6b7f8d.py"
    ]
  },
  {
    "file_signature": [
      "class:ChartDataRestApi",
      "func:_create_query_context_from_form",
      "func:_get_data_response",
      "func:_load_query_context_form_from_cache",
      "func:_map_form_data_datasource_to_dataset_id",
      "func:_process_data",
      "func:_run_async",
      "func:_send_chart_response",
      "func:data",
      "func:data_from_cache",
      "func:get_data"
    ],
    "old_files": [
      "api.py_deepseek_18d40e57.py"
    ],
    "new_files": [
      "api_fb33d1.py"
    ]
  },
  {
    "file_signature": [
      "class:ONVIFDevice",
      "func:__init__",
      "func:_async_log_time_out_of_sync",
      "func:get_device",
      "func:host",
      "func:name",
      "func:password",
      "func:port",
      "func:username"
    ],
    "old_files": [
      "device.py_deepseek_0d15bcc0.py"
    ],
    "new_files": [
      "device_9b2e80.py"
    ]
  },
  {
    "file_signature": [
      "func:get_all_event_types_for_integration"
    ],
    "old_files": [
      "integrations.py_deepseek_b64115f4.py"
    ],
    "new_files": [
      "integrations_55ac12.py"
    ]
  },
  {
    "file_signature": [
      "class:Project",
      "func:__init__",
      "func:__repr__",
      "func:_get_base_sys_path",
      "func:_get_config_folder_path",
      "func:_get_json_path",
      "func:_get_sys_path",
      "func:_is_django_path",
      "func:_is_potential_project",
      "func:_remove_duplicates_from_path",
      "func:_remove_imports",
      "func:_search_func",
      "func:_try_to_skip_duplicates",
      "func:complete_search",
      "func:get_default_project",
      "func:get_environment",
      "func:load",
      "func:load_unsafe_extensions",
      "func:path",
      "func:save",
      "func:search",
      "func:smart_sys_path",
      "func:sys_path",
      "func:wrapper"
    ],
    "old_files": [
      "project.py_deepseek_e708b8cd.py"
    ],
    "new_files": [
      "project_2d0af1.py"
    ]
  },
  {
    "file_signature": [
      "class:Record",
      "class:Row",
      "func:__getattr__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_mapping",
      "func:create_column_maps",
      "func:keys",
      "func:values"
    ],
    "old_files": [
      "records.py_deepseek_2fe49890.py"
    ],
    "new_files": [
      "records_1f490a.py"
    ]
  },
  {
    "file_signature": [
      "class:DoctestSyntaxError",
      "class:DuplicateArgument",
      "class:ImportShadowedByLoopVar",
      "class:ImportStarUsed",
      "class:LateFutureImport",
      "class:Message",
      "class:RedefinedInListComp",
      "class:RedefinedWhileUnused",
      "class:ReturnOutsideFunction",
      "class:ReturnWithArgsInsideGenerator",
      "class:UndefinedExport",
      "class:UndefinedLocal",
      "class:UndefinedName",
      "class:UnusedImport",
      "class:UnusedVariable",
      "func:__init__",
      "func:__str__"
    ],
    "old_files": [
      "messages.py_deepseek_4d9edd21.py"
    ],
    "new_files": [
      "messages_0d6d46.py"
    ]
  },
  {
    "file_signature": [
      "class:SysMonitorSensorEntityDescription",
      "class:SystemMonitorSensor",
      "func:__init__",
      "func:_handle_coordinator_update",
      "func:available",
      "func:check_legacy_resource",
      "func:clean_obsolete_entities",
      "func:get_arguments",
      "func:get_cpu_icon",
      "func:get_ip_address",
      "func:get_network",
      "func:get_packets",
      "func:get_throughput"
    ],
    "old_files": [
      "sensor.py_deepseek_90181a90.py"
    ],
    "new_files": [
      "sensor_440acd.py"
    ]
  },
  {
    "file_signature": [
      "class:SupersetMetastoreCache",
      "func:__init__",
      "func:_get_expiry",
      "func:add",
      "func:delete",
      "func:factory",
      "func:get",
      "func:get_key",
      "func:has",
      "func:set"
    ],
    "old_files": [
      "metastore_cache.py_deepseek_4531bf2e.py"
    ],
    "new_files": [
      "metastore_cache_b6b4a1.py"
    ]
  },
  {
    "file_signature": [
      "class:TestFirstValidIndex",
      "func:test_first_last_valid",
      "func:test_first_last_valid_all_nan",
      "func:test_first_last_valid_frame",
      "func:test_first_valid_index_empty",
      "func:test_first_valid_index_single_nan"
    ],
    "old_files": [
      "test_first_valid_index.py_deepseek_de8279cb.py"
    ],
    "new_files": [
      "test_first_valid_index_e77512.py"
    ]
  },
  {
    "file_signature": [
      "class:OneShotOptimizer",
      "class:RandomSearchMaker",
      "class:SamplingSearch",
      "class:_RandomSearch",
      "class:_SamplingSearch",
      "func:__init__",
      "func:_internal_ask",
      "func:_internal_ask_candidate",
      "func:_internal_provide_recommendation",
      "func:avg_of_k_best",
      "func:convex_limit",
      "func:hull_center",
      "func:sampler"
    ],
    "old_files": [
      "oneshot.py_deepseek_15f62085.py"
    ],
    "new_files": [
      "oneshot_b70888.py"
    ]
  },
  {
    "file_signature": [
      "class:MinMaxSensor",
      "func:__init__",
      "func:_async_min_max_sensor_state_listener",
      "func:_calc_values",
      "func:calc_max",
      "func:calc_mean",
      "func:calc_median",
      "func:calc_min",
      "func:calc_range",
      "func:calc_sum",
      "func:extra_state_attributes",
      "func:native_unit_of_measurement",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_deepseek_b448be73.py"
    ],
    "new_files": [
      "sensor_279169.py"
    ]
  },
  {
    "file_signature": [
      "class:SupersetTestCase",
      "func:create_app",
      "func:create_fake_db",
      "func:create_fake_db_for_macros",
      "func:create_user",
      "func:create_user_with_roles",
      "func:db_insert_temp_object",
      "func:delete_assert_metric",
      "func:delete_fake_db",
      "func:delete_fake_db_for_macros",
      "func:get_assert_metric",
      "func:get_birth_names_dataset",
      "func:get_dash_by_slug",
      "func:get_database_by_id",
      "func:get_database_by_name",
      "func:get_datasource_mock",
      "func:get_dttm",
      "func:get_json_resp",
      "func:get_list",
      "func:get_nonexistent_numeric_id",
      "func:get_or_create",
      "func:get_resp",
      "func:get_role",
      "func:get_slice",
      "func:get_table",
      "func:get_table_by_id",
      "func:get_user",
      "func:grant_public_access_to_table",
      "func:grant_role_access_to_table",
      "func:insert_dashboard",
      "func:is_module_installed",
      "func:login",
      "func:logout",
      "func:mock_get_dialect",
      "func:post_assert_metric",
      "func:put_assert_metric",
      "func:revoke_public_access_to_table",
      "func:revoke_role_access_to_table",
      "func:run_sql",
      "func:tearDown",
      "func:temporary_user"
    ],
    "old_files": [
      "base_tests.py_deepseek_525dc3b2.py"
    ],
    "new_files": [
      "base_tests_a1e90e.py"
    ]
  },
  {
    "file_signature": [
      "class:GoGoGate2Entity",
      "func:__init__",
      "func:device_info",
      "func:door",
      "func:door_status",
      "func:extra_state_attributes"
    ],
    "old_files": [
      "entity.py_deepseek_317e1156.py"
    ],
    "new_files": [
      "entity_297566.py"
    ]
  },
  {
    "file_signature": [
      "class:DemoClimate",
      "func:__init__",
      "func:current_humidity",
      "func:current_temperature",
      "func:fan_mode",
      "func:fan_modes",
      "func:hvac_action",
      "func:hvac_mode",
      "func:hvac_modes",
      "func:preset_mode",
      "func:preset_modes",
      "func:swing_horizontal_mode",
      "func:swing_horizontal_modes",
      "func:swing_mode",
      "func:swing_modes",
      "func:target_humidity",
      "func:target_temperature",
      "func:target_temperature_high",
      "func:target_temperature_low",
      "func:temperature_unit",
      "func:unique_id"
    ],
    "old_files": [
      "climate.py_deepseek_645306d2.py"
    ],
    "new_files": [
      "climate_5f3cc6.py"
    ]
  },
  {
    "file_signature": [
      "class:test_Case",
      "func:_patch_monotonic",
      "func:frozen_monotonic",
      "func:on_is_leader",
      "func:on_make_fake_request",
      "func:on_sample",
      "func:seconds_since_last_fail",
      "func:test__maybe_recover_from_failed_state",
      "func:test_constructor",
      "func:test_current_execution",
      "func:test_current_test",
      "func:test_failed_longer_than",
      "func:test_label",
      "func:test_now",
      "func:test_seconds_since_last_fail"
    ],
    "old_files": [
      "test_case.py_deepseek_7c281e68.py"
    ],
    "new_files": [
      "test_case_e8713f.py"
    ]
  },
  {
    "file_signature": [
      "class:ConditionerEntity",
      "func:__init__",
      "func:_async_push_update",
      "func:_async_update_from_data",
      "func:_async_update_meteo_from_value",
      "func:_climate",
      "func:_handle_coordinator_update"
    ],
    "old_files": [
      "climate.py_deepseek_d7aa9b80.py"
    ],
    "new_files": [
      "climate_9e8de7.py"
    ]
  },
  {
    "file_signature": [
      "class:Body",
      "class:Cookie",
      "class:Depends",
      "class:File",
      "class:Form",
      "class:Header",
      "class:Param",
      "class:ParamTypes",
      "class:Path",
      "class:Query",
      "class:Security",
      "func:__init__",
      "func:__repr__"
    ],
    "old_files": [
      "params.py_deepseek_5f47f3d9.py"
    ],
    "new_files": [
      "params_3f7432.py"
    ]
  },
  {
    "file_signature": [
      "class:Validator",
      "class:ValidatorGroup",
      "func:__init__",
      "func:_generic_validator_basic",
      "func:_generic_validator_cls",
      "func:_prepare_validator",
      "func:check_for_unused",
      "func:dec",
      "func:extract_root_validators",
      "func:extract_validators",
      "func:gather_all_validators",
      "func:get_validators",
      "func:inherit_validators",
      "func:make_generic_validator",
      "func:prep_validators",
      "func:root_validator",
      "func:validator"
    ],
    "old_files": [
      "class_validators.py_deepseek_43a93416.py"
    ],
    "new_files": [
      "class_validators_8bdfa8.py"
    ]
  },
  {
    "file_signature": [
      "class:TestAsArray",
      "class:TestToIterable",
      "func:test_array",
      "func:test_array_multiindex_raises",
      "func:test_asarray_object_dt64",
      "func:test_asarray_tz_aware",
      "func:test_asarray_tz_naive",
      "func:test_categorial_datetimelike",
      "func:test_iter_box_dt64",
      "func:test_iter_box_dt64tz",
      "func:test_iter_box_period",
      "func:test_iter_box_timedelta64",
      "func:test_iterable",
      "func:test_iterable_items",
      "func:test_iterable_map",
      "func:test_iterable_object_and_category",
      "func:test_numpy_array",
      "func:test_numpy_array_all_dtypes",
      "func:test_to_numpy",
      "func:test_to_numpy_copy",
      "func:test_to_numpy_dataframe_na_value",
      "func:test_to_numpy_dataframe_single_block",
      "func:test_to_numpy_dataframe_single_block_no_mutate",
      "func:test_to_numpy_dtype",
      "func:test_to_numpy_kwargs_raises",
      "func:test_to_numpy_multiindex_series_na_value",
      "func:test_to_numpy_na_value_numpy_dtype",
      "func:test_values_consistent"
    ],
    "old_files": [
      "test_conversion.py_deepseek_43da3ab9.py"
    ],
    "new_files": [
      "test_conversion_928a39.py"
    ]
  },
  {
    "file_signature": [
      "class:BlueprintT",
      "class:CacheBackendT",
      "class:CacheT",
      "class:Request",
      "class:ResourceOptions",
      "class:Response",
      "class:View",
      "class:Web",
      "class:_AppT",
      "func:__init__",
      "func:cache",
      "func:init_webserver",
      "func:on_webserver_init",
      "func:register",
      "func:route",
      "func:static",
      "func:view"
    ],
    "old_files": [
      "web.py_deepseek_8f2f47a8.py"
    ],
    "new_files": [
      "web_6fce4a.py"
    ]
  },
  {
    "file_signature": [
      "class:SpanBasedF1Measure",
      "func:__call__",
      "func:__init__",
      "func:_compute_metrics",
      "func:_handle_continued_spans",
      "func:get_metric",
      "func:reset"
    ],
    "old_files": [
      "span_based_f1_measure.py_deepseek_e66cb97e.py"
    ],
    "new_files": [
      "span_based_f1_measure_cf6fc9.py"
    ]
  },
  {
    "file_signature": [
      "func:correct_function",
      "func:f",
      "func:func_1",
      "func:func_2",
      "func:func_kwargs",
      "func:func_numba",
      "func:incorrect_function",
      "func:numba_func",
      "func:sum_last",
      "func:test_args_not_cached",
      "func:test_cache",
      "func:test_check_nopython_kwargs",
      "func:test_correct_function_signature",
      "func:test_engine_kwargs_not_cached",
      "func:test_index_data_correctly_passed",
      "func:test_multifunc_numba_kwarg_propagation",
      "func:test_multifunc_numba_udf_frame",
      "func:test_multifunc_numba_vs_cython_frame",
      "func:test_multifunc_numba_vs_cython_frame_noskipna",
      "func:test_multifunc_numba_vs_cython_series",
      "func:test_multiindex_multi_key_not_supported",
      "func:test_multiindex_one_key",
      "func:test_multilabel_numba_vs_cython",
      "func:test_multilabel_udf_numba_vs_cython",
      "func:test_numba_vs_cython",
      "func:test_use_global_config"
    ],
    "old_files": [
      "test_numba.py_deepseek_2e23aee3.py"
    ],
    "new_files": [
      "test_numba_246dfa.py"
    ]
  },
  {
    "file_signature": [
      "class:OmniLogicEntity",
      "func:__init__",
      "func:device_info",
      "func:extra_state_attributes",
      "func:icon",
      "func:name",
      "func:unique_id"
    ],
    "old_files": [
      "entity.py_deepseek_c6a208ce.py"
    ],
    "new_files": [
      "entity_ad6171.py"
    ]
  },
  {
    "file_signature": [
      "func:process_business_alias_docstrings",
      "func:process_class_docstrings",
      "func:remove_flags_docstring",
      "func:rstjinja",
      "func:setup"
    ],
    "old_files": [
      "conf.py_deepseek_26eda4d5.py"
    ],
    "new_files": [
      "conf_dd0836.py"
    ]
  },
  {
    "file_signature": [
      "class:BadIndexer",
      "class:CustomIndexer",
      "func:get_window_bounds",
      "func:test_bad_get_window_bounds_signature",
      "func:test_expanding_indexer",
      "func:test_fixed_forward_indexer_bounds",
      "func:test_fixed_forward_indexer_count",
      "func:test_indexer_accepts_rolling_args",
      "func:test_indexer_constructor_arg",
      "func:test_indexer_quantile_sum",
      "func:test_indexers_are_reusable_after_groupby_rolling",
      "func:test_non_fixed_variable_window_indexer",
      "func:test_rolling_forward_cov_corr",
      "func:test_rolling_forward_skewness",
      "func:test_rolling_forward_window",
      "func:test_rolling_groupby_with_fixed_forward_many",
      "func:test_rolling_groupby_with_fixed_forward_specific",
      "func:test_unequal_bounds_to_object",
      "func:test_unequal_start_end_bounds",
      "func:test_variableoffsetwindowindexer_not_dti",
      "func:test_variableoffsetwindowindexer_not_offset"
    ],
    "old_files": [
      "test_base_indexer.py_deepseek_5e5d0ea5.py"
    ],
    "new_files": [
      "test_base_indexer_9339e3.py"
    ]
  },
  {
    "file_signature": [
      "class:HarmonyRemote",
      "func:__init__",
      "func:_setup_callbacks",
      "func:activity_list",
      "func:async_new_activity",
      "func:async_new_activity_finished",
      "func:current_activity",
      "func:extra_state_attributes",
      "func:is_on",
      "func:write_config_file"
    ],
    "old_files": [
      "remote.py_deepseek_dfe711fb.py"
    ],
    "new_files": [
      "remote_60424b.py"
    ]
  },
  {
    "file_signature": [
      "class:FrozenNodeIterator",
      "class:NodeIterator",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:_query",
      "func:_query_doc_id",
      "func:_query_query_hash",
      "func:count",
      "func:first_item",
      "func:freeze",
      "func:magic",
      "func:page_length",
      "func:resumable_iteration",
      "func:thaw",
      "func:total_index"
    ],
    "old_files": [
      "nodeiterator.py_deepseek_5b1db7d4.py"
    ],
    "new_files": [
      "nodeiterator_94d3a3.py"
    ]
  },
  {
    "file_signature": [
      "class:AbstractRouteDef",
      "class:RouteDef",
      "class:RouteTableDef",
      "class:StaticDef",
      "func:__contains__",
      "func:__getitem__",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:__repr__",
      "func:delete",
      "func:get",
      "func:head",
      "func:inner",
      "func:options",
      "func:patch",
      "func:post",
      "func:put",
      "func:register",
      "func:route",
      "func:static",
      "func:view"
    ],
    "old_files": [
      "web_routedef.py_deepseek_dfa030b5.py"
    ],
    "new_files": [
      "web_routedef_a1a149.py"
    ]
  },
  {
    "file_signature": [
      "class:TestXS",
      "class:TestXSWithMultiIndex",
      "func:four_level_index_dataframe",
      "func:test_xs",
      "func:test_xs_IndexSlice_argument_not_implemented",
      "func:test_xs_corner",
      "func:test_xs_doc_example",
      "func:test_xs_droplevel_false",
      "func:test_xs_droplevel_false_view",
      "func:test_xs_dt_error",
      "func:test_xs_duplicates",
      "func:test_xs_integer_key",
      "func:test_xs_keep_level",
      "func:test_xs_level",
      "func:test_xs_level0",
      "func:test_xs_level_eq_2",
      "func:test_xs_level_multiple",
      "func:test_xs_levels_raises",
      "func:test_xs_list_indexer_droplevel_false",
      "func:test_xs_loc_equality",
      "func:test_xs_missing_values_in_index",
      "func:test_xs_mixed",
      "func:test_xs_multiindex_droplevel_false",
      "func:test_xs_named_levels_axis_eq_1",
      "func:test_xs_other",
      "func:test_xs_setting_with_copy_error",
      "func:test_xs_setting_with_copy_error_multiple",
      "func:test_xs_values",
      "func:test_xs_view",
      "func:test_xs_with_duplicates"
    ],
    "old_files": [
      "test_xs.py_deepseek_9ebb5ca1.py"
    ],
    "new_files": [
      "test_xs_1bb8c5.py"
    ]
  },
  {
    "file_signature": [
      "class:BlockShellyValve",
      "class:BlockValveDescription",
      "func:__init__",
      "func:_update_callback",
      "func:async_setup_block_entry",
      "func:is_closing",
      "func:is_opening"
    ],
    "old_files": [
      "valve.py_deepseek_276732a3.py"
    ],
    "new_files": [
      "valve_d875ca.py"
    ]
  },
  {
    "file_signature": [
      "class:PowerViewSensor",
      "class:PowerviewSensorDescription",
      "class:PowerviewSensorDescriptionMixin",
      "func:__init__",
      "func:_async_update_shade_from_group",
      "func:device_class",
      "func:get_signal_device_class",
      "func:get_signal_native_unit",
      "func:native_unit_of_measurement",
      "func:native_value"
    ],
    "old_files": [
      "sensor.py_deepseek_d891af5b.py"
    ],
    "new_files": [
      "sensor_dd9269.py"
    ]
  },
  {
    "file_signature": [
      "class:Block",
      "func:__len__",
      "func:__repr__",
      "func:_can_consolidate",
      "func:_can_hold_element",
      "func:_can_hold_na",
      "func:_consolidate_key",
      "func:_get_refs_and_copy",
      "func:_maybe_copy",
      "func:_maybe_squeeze_arg",
      "func:_replace_coerce",
      "func:_replace_regex",
      "func:_slice",
      "func:_split",
      "func:_split_op_result",
      "func:_standardize_fill_value",
      "func:_unstack",
      "func:_unwrap_setitem_indexer",
      "func:_validate_ndim",
      "func:apply",
      "func:astype",
      "func:coerce_to_target_dtype",
      "func:convert",
      "func:convert_dtypes",
      "func:copy",
      "func:dtype",
      "func:external_values",
      "func:fill_value",
      "func:get_values_for_csv",
      "func:getitem_block_columns",
      "func:iget",
      "func:is_bool",
      "func:is_extension",
      "func:is_object",
      "func:make_block",
      "func:make_block_same_class",
      "func:mgr_locs",
      "func:reduce",
      "func:replace",
      "func:replace_list",
      "func:set_inplace",
      "func:shape",
      "func:should_store",
      "func:slice_block_columns",
      "func:split_and_operate",
      "func:take_block_columns",
      "func:take_nd"
    ],
    "old_files": [
      "blocks.py_deepseek_e29f01b9.py"
    ],
    "new_files": [
      "blocks_3a122c.py"
    ]
  },
  {
    "file_signature": [
      "class:TargetStateSetup",
      "func:make_target_state",
      "func:make_target_transfer",
      "func:test_events_for_onchain_secretreveal",
      "func:test_handle_block",
      "func:test_handle_block_equal_block_number",
      "func:test_handle_block_lower_block_number",
      "func:test_handle_inittarget",
      "func:test_handle_inittarget_bad_expiration",
      "func:test_handle_offchain_secretreveal",
      "func:test_handle_offchain_secretreveal_after_lock_expired",
      "func:test_handle_onchain_secretreveal",
      "func:test_state_transition",
      "func:test_target_accept_keccak_empty_hash",
      "func:test_target_lock_is_expired_if_secret_is_not_registered_onchain",
      "func:test_target_receive_lock_expired",
      "func:test_transfer_successful_after_secret_learned"
    ],
    "old_files": [
      "test_targetstate.py_deepseek_91490d51.py"
    ],
    "new_files": [
      "test_targetstate_85ad01.py"
    ]
  },
  {
    "file_signature": [
      "class:AlarmDecoderBinarySensor",
      "func:__init__",
      "func:_fault_callback",
      "func:_rel_message_callback",
      "func:_restore_callback",
      "func:_rfx_message_callback"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_ff3ffe74.py"
    ],
    "new_files": [
      "binary_sensor_25691a.py"
    ]
  },
  {
    "file_signature": [
      "class:AccountSensor",
      "class:ExchangeRateSensor",
      "func:__init__",
      "func:extra_state_attributes",
      "func:update"
    ],
    "old_files": [
      "sensor.py_deepseek_e1086b56.py"
    ],
    "new_files": [
      "sensor_b70d9a.py"
    ]
  },
  {
    "file_signature": [
      "class:Embedding",
      "class:EmbeddingConfig",
      "class:Encoder",
      "class:FactorConfig",
      "class:TransformerEncoder",
      "func:__init__",
      "func:__post_init__",
      "func:forward",
      "func:get_encoded_seq_len",
      "func:get_max_seq_len",
      "func:get_num_hidden",
      "func:get_transformer_encoder"
    ],
    "old_files": [
      "encoder.py_deepseek_4aa68c40.py"
    ],
    "new_files": [
      "encoder_1dd86d.py"
    ]
  },
  {
    "file_signature": [
      "class:TCPServer",
      "func:__init__",
      "func:_handle_connection",
      "func:add_socket",
      "func:add_sockets",
      "func:bind",
      "func:handle_stream",
      "func:listen",
      "func:start",
      "func:stop"
    ],
    "old_files": [
      "tcpserver.py_deepseek_2efe7729.py"
    ],
    "new_files": [
      "tcpserver_3f34d3.py"
    ]
  },
  {
    "file_signature": [
      "class:MergeStrategies",
      "class:OmegaConfigLoader",
      "func:__getitem__",
      "func:__init__",
      "func:__repr__",
      "func:__setitem__",
      "func:_check_duplicates",
      "func:_destructive_merge",
      "func:_get_all_keys",
      "func:_get_globals_value",
      "func:_get_runtime_value",
      "func:_initialise_filesystem_and_protocol",
      "func:_is_hidden",
      "func:_is_valid_config_path",
      "func:_merge_configs",
      "func:_register_globals_resolver",
      "func:_register_new_resolvers",
      "func:_register_runtime_params_resolver",
      "func:_resolve_environment_variables",
      "func:_soft_merge",
      "func:keys",
      "func:load_and_merge_dir_config"
    ],
    "old_files": [
      "omegaconf_config.py_deepseek_1b499797.py"
    ],
    "new_files": [
      "omegaconf_config_2d1798.py"
    ]
  },
  {
    "file_signature": [
      "class:DataCatalog",
      "class:_FrozenDatasets",
      "func:__contains__",
      "func:__eq__",
      "func:__getitem__",
      "func:__init__",
      "func:__repr__",
      "func:__setattr__",
      "func:_get_dataset",
      "func:_ipython_key_completions_",
      "func:_logger",
      "func:_sub_nonword_chars",
      "func:add",
      "func:add_all",
      "func:add_feed_dict",
      "func:config_resolver",
      "func:confirm",
      "func:exists",
      "func:from_config",
      "func:list",
      "func:load",
      "func:release",
      "func:save",
      "func:shallow_copy"
    ],
    "old_files": [
      "data_catalog.py_deepseek_8d340332.py"
    ],
    "new_files": [
      "data_catalog_8d7fcf.py"
    ]
  },
  {
    "file_signature": [
      "class:Compiler",
      "class:Linker",
      "class:SeenDetails",
      "func:__init__",
      "func:_add_prepended_cte",
      "func:_compile_code",
      "func:_compile_relation_for_foreign_key_constraint_to",
      "func:_create_node_context",
      "func:_extend_prepended_ctes",
      "func:_generate_stats",
      "func:_get_multi_test_edges",
      "func:_get_test_edges_2",
      "func:_get_tests_for_node",
      "func:_node_enabled",
      "func:_recursively_prepend_ctes",
      "func:_write_node",
      "func:add_ephemeral_prefix",
      "func:add_node",
      "func:add_test_edges",
      "func:add_test_edges_1",
      "func:add_test_edges_2",
      "func:compile",
      "func:compile_node",
      "func:dependency",
      "func:edges",
      "func:find_cycles",
      "func:get_graph",
      "func:get_graph_summary",
      "func:initialize",
      "func:inject_ctes_into_sql",
      "func:link_graph",
      "func:link_node",
      "func:nodes",
      "func:print_compile_stats",
      "func:write_graph",
      "func:write_graph_file"
    ],
    "old_files": [
      "compilation.py_deepseek_d99c29f7.py"
    ],
    "new_files": [
      "compilation_283ca2.py"
    ]
  },
  {
    "file_signature": [
      "class:Storage",
      "func:__init__",
      "func:load",
      "func:login",
      "func:logout",
      "func:save"
    ],
    "old_files": [
      "storage.py_deepseek_a492ec7a.py"
    ],
    "new_files": [
      "storage_ecdafa.py"
    ]
  },
  {
    "file_signature": [
      "class:Dataclass",
      "class:DataclassProxy",
      "func:__call__",
      "func:__copy__",
      "func:__deepcopy__",
      "func:__get_validators__",
      "func:__getattr__",
      "func:__init__",
      "func:__instancecheck__",
      "func:__setattr__",
      "func:__validate__",
      "func:_add_pydantic_validation_attributes",
      "func:_dataclass_validate_assignment_setattr",
      "func:_dataclass_validate_values",
      "func:_get_validators",
      "func:_is_field_cached_property",
      "func:_validate_dataclass",
      "func:create_pydantic_model_from_dataclass",
      "func:dataclass",
      "func:handle_extra_init",
      "func:is_builtin_dataclass",
      "func:make_dataclass_validator",
      "func:new_init",
      "func:new_post_init",
      "func:set_validation",
      "func:wrap"
    ],
    "old_files": [
      "dataclasses.py_deepseek_312b2b6e.py"
    ],
    "new_files": [
      "dataclasses_a27d2a.py"
    ]
  },
  {
    "file_signature": [
      "class:TestPipelineGenLegacy",
      "class:TestPipelineGenV2",
      "func:generate_template",
      "func:pipeline_gen",
      "func:pipeline_params",
      "func:setup_method",
      "func:test_app_name_in_param_default",
      "func:test_build_extractor",
      "func:test_can_add_github_as_source_stage",
      "func:test_can_create_buildspec_v2",
      "func:test_can_extract_python_version",
      "func:test_can_generate_github_source",
      "func:test_can_provide_codebuild_image",
      "func:test_can_validate_python_version",
      "func:test_codebuild_resource",
      "func:test_codepipeline_resource",
      "func:test_default_version_range_locks_minor_version",
      "func:test_github_source_uses_secretsmanager_in_v2",
      "func:test_install_requirements_in_buildspec",
      "func:test_invalid_python_throws_error",
      "func:test_new_default_codebuild_image",
      "func:test_no_source_resource_when_using_github",
      "func:test_nonsense_py_version_throws_error",
      "func:test_python_36_in_param_default",
      "func:test_python_version_in_param_default",
      "func:test_source_repo_resource",
      "func:test_uses_v2_codebuild_spec",
      "func:test_validate_python_versions"
    ],
    "old_files": [
      "test_pipeline.py_deepseek_2e127b37.py"
    ],
    "new_files": [
      "test_pipeline_0fd84d.py"
    ]
  },
  {
    "file_signature": [
      "class:BasePlannerTests",
      "class:FakeConfig",
      "class:Foo",
      "class:InMemoryRemoteState",
      "class:TestKeyVariable",
      "class:TestPlanCloudWatchEvent",
      "class:TestPlanCreateUpdateAPIMapping",
      "class:TestPlanCreateUpdateDomainName",
      "class:TestPlanDynamoDBSubscription",
      "class:TestPlanKinesisSubscription",
      "class:TestPlanLambdaFunction",
      "class:TestPlanLogGroup",
      "class:TestPlanManagedRole",
      "class:TestPlanRestAPI",
      "class:TestPlanS3Events",
      "class:TestPlanSNSSubscription",
      "class:TestPlanSQSSubscription",
      "class:TestPlanScheduledEvent",
      "class:TestPlanWebsocketAPI",
      "class:TestRemoteState",
      "class:TestUnreferencedResourcePlanner",
      "func:__init__",
      "func:assert_apicall_equals",
      "func:assert_loads_needed_variables",
      "func:assert_recorded_values",
      "func:create_api_mapping",
      "func:create_domain_name",
      "func:create_function_resource",
      "func:create_http_domain_name",
      "func:create_managed_layer",
      "func:create_rest_api_model",
      "func:create_websocket_api_model",
      "func:create_websocket_domain_name",
      "func:declare_no_resources_exists",
      "func:declare_resource_exists",
      "func:deployed_resources",
      "func:determine_plan",
      "func:execute",
      "func:filter_api_calls",
      "func:function_resource",
      "func:get_remote_model",
      "func:no_deployed_values",
      "func:one_deployed_lambda_function",
      "func:resource_deployed_values",
      "func:resource_exists",
      "func:setup_method",
      "func:test_api_gateway_domain_name_exists",
      "func:test_can_create_api_mapping",
      "func:test_can_create_domain_name",
      "func:test_can_create_function",
      "func:test_can_create_function_with_reserved_concurrency",
      "func:test_can_create_layer",
      "func:test_can_create_log_group",
      "func:test_can_create_plan_for_filebased_role",
      "func:test_can_create_websocket_api_mapping_with_path",
      "func:test_can_delete_api_mapping",
      "func:test_can_delete_api_mapping_none",
      "func:test_can_delete_domain_name",
      "func:test_can_delete_iam_role",
      "func:test_can_delete_lambda_layer",
      "func:test_can_delete_rest_api",
      "func:test_can_delete_s3_event",
      "func:test_can_delete_scheduled_event",
      "func:test_can_delete_sns_subscription",
      "func:test_can_delete_sqs_subscription",
      "func:test_can_delete_websocket_api",
      "func:test_can_get_deployed_values",
      "func:test_can_handle_domain_name_without_api_mapping",
      "func:test_can_handle_when_resource_changes_values",
      "func:test_can_plan_cloudwatch_event",
      "func:test_can_plan_dynamodb_event_source",
      "func:test_can_plan_dynamodb_event_source_update",
      "func:test_can_plan_for_iam_role_creation",
      "func:test_can_plan_kinesis_event_source",
      "func:test_can_plan_rest_api",
      "func:test_can_plan_s3_event",
      "func:test_can_plan_scheduled_event",
      "func:test_can_plan_scheduled_event_can_omit_description",
      "func:test_can_plan_sns_arn_subscription",
      "func:test_can_plan_sns_subscription",
      "func:test_can_plan_sqs_event_source",
      "func:test_can_plan_websocket_api",
      "func:test_can_set_variables_when_needed",
      "func:test_can_update_domain_name",
      "func:test_can_update_file_based_policy",
      "func:test_can_update_kinesis_event_source",
      "func:test_can_update_lambda_function_code",
      "func:test_can_update_lambda_function_with_managed_layer",
      "func:test_can_update_layer",
      "func:test_can_update_log_group",
      "func:test_can_update_managed_role",
      "func:test_can_update_rest_api",
      "func:test_can_update_rest_api_with_policy",
      "func:test_can_update_sqs_event_with_queue_arn",
      "func:test_can_update_websocket_api",
      "func:test_correct_deletion_order_for_dependencies",
      "func:test_create_function_with_layers",
      "func:test_ddb_event_source_exists",
      "func:test_ddb_event_source_not_exists",
      "func:test_domain_name_does_not_exist",
      "func:test_dynamically_lookup_iam_role",
      "func:test_exists_check_is_cached",
      "func:test_exists_check_is_cached_api_mapping",
      "func:test_handles_when_queue_name_change",
      "func:test_handles_when_topic_name_change",
      "func:test_key_variable_str",
      "func:test_key_variables_equal",
      "func:test_kinesis_event_source_exists",
      "func:test_kinesis_event_source_not_exists",
      "func:test_lambda_function_does_not_exist",
      "func:test_lambda_function_exists",
      "func:test_lambda_layer_exists",
      "func:test_lambda_layer_not_exists",
      "func:test_no_deletion_when_no_changes",
      "func:test_no_sqs_deletion_when_no_changes",
      "func:test_no_sweeping_when_resource_value_unchanged",
      "func:test_no_update_for_non_managed_role",
      "func:test_none_api_mapping_exists",
      "func:test_noop_when_all_resources_accounted_for",
      "func:test_path_api_mapping_exists",
      "func:test_path_api_mapping_exists_with_slash",
      "func:test_raise_error_not_existed_resource_delete",
      "func:test_rest_api_exists_no_deploy",
      "func:test_rest_api_exists_with_existing_deploy",
      "func:test_rest_api_not_exists_with_preexisting_deploy",
      "func:test_role_does_not_exist",
      "func:test_role_exists",
      "func:test_sns_subscription_exists",
      "func:test_sns_subscription_exists_is_noop_for_planner",
      "func:test_sns_subscription_not_in_deployed_values",
      "func:test_sqs_event_source_exists",
      "func:test_sqs_event_source_exists_updates_batch_size",
      "func:test_sqs_event_source_exists_updates_maximum_concurrency",
      "func:test_sqs_event_supports_maximum_concurrency",
      "func:test_sqs_event_supports_queue_arn",
      "func:test_store_api_mapping_if_already_exists",
      "func:test_store_api_mapping_none_if_already_exists",
      "func:test_supports_multiple_unreferenced_and_unchanged",
      "func:test_unknown_model_type_raises_error",
      "func:test_update_plan_with_insert_without_message",
      "func:test_value_error_raised_for_unknown_resource_name",
      "func:test_value_error_raised_on_no_deployed_values",
      "func:test_websocket_api_exists_no_deploy",
      "func:test_websocket_api_exists_with_existing_deploy",
      "func:test_websocket_api_not_exists_with_preexisting_deploy",
      "func:test_websocket_api_plan_omits_unused_lambdas",
      "func:test_websocket_domain_name_exists",
      "func:test_will_delete_log_group",
      "func:test_will_delete_unreferenced_resource"
    ],
    "old_files": [
      "test_planner.py_deepseek_8f4efc62.py"
    ],
    "new_files": [
      "test_planner_aec317.py"
    ]
  },
  {
    "file_signature": [
      "class:AioHTTPTestCase",
      "class:BaseTestServer",
      "class:RawTestServer",
      "class:TestClient",
      "class:TestServer",
      "func:__init__",
      "func:_create_app_mock",
      "func:_create_transport",
      "func:app",
      "func:closed",
      "func:delete",
      "func:get",
      "func:get_dict",
      "func:get_extra_info",
      "func:get_port_socket",
      "func:get_unused_port_socket",
      "func:handler",
      "func:head",
      "func:host",
      "func:loop_context",
      "func:make_mocked_coro",
      "func:make_mocked_request",
      "func:make_url",
      "func:options",
      "func:patch",
      "func:port",
      "func:post",
      "func:put",
      "func:request",
      "func:scheme",
      "func:server",
      "func:session",
      "func:set_dict",
      "func:setup_test_loop",
      "func:started",
      "func:teardown_test_loop",
      "func:unused_port",
      "func:ws_connect"
    ],
    "old_files": [
      "test_utils.py_deepseek_1803dff5.py"
    ],
    "new_files": [
      "test_utils_46addc.py"
    ]
  },
  {
    "file_signature": [
      "class:ModularPipelineError",
      "func:_copy_node",
      "func:_get_dataset_names_mapping",
      "func:_get_param_names_mapping",
      "func:_is_all_parameters",
      "func:_is_parameter",
      "func:_is_single_parameter",
      "func:_is_transcode_base_in_mapping",
      "func:_map_transcode_base",
      "func:_normalize_param_name",
      "func:_prefix_dataset",
      "func:_prefix_param",
      "func:_process_dataset_names",
      "func:_rename",
      "func:_validate_datasets_exist",
      "func:_validate_inputs_outputs",
      "func:pipeline"
    ],
    "old_files": [
      "modular_pipeline.py_deepseek_10ad1fa1.py"
    ],
    "new_files": [
      "modular_pipeline_76bcb9.py"
    ]
  },
  {
    "file_signature": [
      "class:Array",
      "class:Data",
      "class:Log",
      "class:Scalar",
      "func:__add__",
      "func:__init__",
      "func:__mod__",
      "func:__mul__",
      "func:__neg__",
      "func:__pow__",
      "func:__radd__",
      "func:__rmul__",
      "func:__rpow__",
      "func:__rtruediv__",
      "func:__sub__",
      "func:__truediv__",
      "func:_fix_legacy",
      "func:_get_name",
      "func:_internal_get_standardized_data",
      "func:_internal_set_standardized_data",
      "func:_layered_get_value",
      "func:_layered_recombine",
      "func:_layered_sample",
      "func:_layered_set_value",
      "func:_new_with_data_layer",
      "func:_param_string",
      "func:_to_reduced_space",
      "func:bounds",
      "func:copy",
      "func:dimension",
      "func:integer",
      "func:set_bounds",
      "func:set_integer_casting",
      "func:set_mutation",
      "func:sigma"
    ],
    "old_files": [
      "data.py_deepseek_3ace3d6d.py"
    ],
    "new_files": [
      "data_9f84cd.py"
    ]
  },
  {
    "file_signature": [
      "class:CookieJar",
      "class:DummyCookieJar",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_delete_cookies",
      "func:_do_expiration",
      "func:_expire_cookie",
      "func:_is_domain_match",
      "func:_parse_date",
      "func:clear",
      "func:clear_domain",
      "func:filter_cookies",
      "func:load",
      "func:quote_cookie",
      "func:save",
      "func:update_cookies"
    ],
    "old_files": [
      "cookiejar.py_deepseek_3ace996d.py"
    ],
    "new_files": [
      "cookiejar_1ce0bd.py"
    ]
  },
  {
    "file_signature": [
      "class:BadLineHandleMethod",
      "class:ParserBase",
      "func:__init__",
      "func:_agg_index",
      "func:_check_data_length",
      "func:_clean_index_names",
      "func:_clean_mapping",
      "func:_do_date_conversions",
      "func:_extract_multi_indexer_columns",
      "func:_get_empty_meta",
      "func:_infer_types",
      "func:_make_index",
      "func:_maybe_make_multi_index_columns",
      "func:_set",
      "func:_set_noconvert_dtype_columns",
      "func:_should_parse_dates",
      "func:_validate_usecols_arg",
      "func:_validate_usecols_names",
      "func:close",
      "func:date_converter",
      "func:evaluate_callable_usecols",
      "func:extract",
      "func:get_na_values",
      "func:is_index_col",
      "func:validate_parse_dates_presence"
    ],
    "old_files": [
      "base_parser.py_deepseek_44b5aad4.py"
    ],
    "new_files": [
      "base_parser_95aa6d.py"
    ]
  },
  {
    "file_signature": [
      "class:MySQLEngineSpec",
      "func:_extract_error_message",
      "func:adjust_engine_params",
      "func:cancel_query",
      "func:convert_dttm",
      "func:epoch_to_dttm",
      "func:get_cancel_query_id",
      "func:get_datatype",
      "func:get_schema_from_engine_params"
    ],
    "old_files": [
      "mysql.py_deepseek_dab081cc.py"
    ],
    "new_files": [
      "mysql_113041.py"
    ]
  },
  {
    "file_signature": [
      "class:ActionBaseModel",
      "class:IDBaseModel",
      "class:ORMBaseModel",
      "class:PrefectBaseModel",
      "class:PrefectDescriptorBase",
      "func:__eq__",
      "func:__get__",
      "func:__rich_repr__",
      "func:_ensure_fields_required",
      "func:get_class_fields_only",
      "func:model_dump_for_orm",
      "func:reset_fields"
    ],
    "old_files": [
      "bases.py_deepseek_770850d1.py"
    ],
    "new_files": [
      "bases_be73fc.py"
    ]
  },
  {
    "file_signature": [
      "class:ConfiguredDoorBird",
      "class:DoorbirdEvent",
      "class:DoorbirdEventConfig",
      "func:__init__",
      "func:_get_event_name",
      "func:custom_url",
      "func:device",
      "func:get_event_data",
      "func:name",
      "func:slug",
      "func:token",
      "func:update_events"
    ],
    "old_files": [
      "device.py_deepseek_60b139c5.py"
    ],
    "new_files": [
      "device_e2c8fa.py"
    ]
  },
  {
    "file_signature": [
      "class:BasePackage",
      "class:PinnedPackage",
      "class:UnpinnedPackage",
      "func:__init__",
      "func:__str__",
      "func:_fetch_metadata",
      "func:_install",
      "func:all_names",
      "func:download_and_untar",
      "func:downloads_directory",
      "func:fetch_metadata",
      "func:from_contract",
      "func:get_downloads_path",
      "func:get_installation_path",
      "func:get_project_name",
      "func:get_subdirectory",
      "func:get_version",
      "func:incorporate",
      "func:install",
      "func:name",
      "func:nice_version_name",
      "func:resolved",
      "func:source_type",
      "func:to_dict"
    ],
    "old_files": [
      "base.py_deepseek_c7a7f089.py"
    ],
    "new_files": [
      "base_7e78cf.py"
    ]
  },
  {
    "file_signature": [
      "class:DBSingleton",
      "class:PrefectDBInterface",
      "func:Agent",
      "func:Artifact",
      "func:ArtifactCollection",
      "func:Automation",
      "func:AutomationBucket",
      "func:AutomationEventFollower",
      "func:AutomationRelatedResource",
      "func:Base",
      "func:BlockDocument",
      "func:BlockDocumentReference",
      "func:BlockSchema",
      "func:BlockSchemaReference",
      "func:BlockType",
      "func:CompositeTriggerChildFiring",
      "func:ConcurrencyLimit",
      "func:ConcurrencyLimitV2",
      "func:Configuration",
      "func:CsrfToken",
      "func:Deployment",
      "func:DeploymentSchedule",
      "func:Event",
      "func:EventResource",
      "func:Flow",
      "func:FlowRun",
      "func:FlowRunInput",
      "func:FlowRunNotificationPolicy",
      "func:FlowRunNotificationQueue",
      "func:FlowRunState",
      "func:Log",
      "func:SavedSearch",
      "func:TaskRun",
      "func:TaskRunState",
      "func:TaskRunStateCache",
      "func:Variable",
      "func:WorkPool",
      "func:WorkQueue",
      "func:Worker",
      "func:__call__",
      "func:__init__",
      "func:dialect"
    ],
    "old_files": [
      "interface.py_deepseek_0bffa7b7.py"
    ],
    "new_files": [
      "interface_7aa819.py"
    ]
  },
  {
    "file_signature": [
      "func:_cleanup_pid_file",
      "func:_is_process_running",
      "func:_read_pid_file",
      "func:_run_in_background",
      "func:_run_in_foreground",
      "func:_write_pid_file",
      "func:generate_welcome_blurb",
      "func:list_services",
      "func:prestart_check",
      "func:run_manager_process",
      "func:start",
      "func:start_services"
    ],
    "old_files": [
      "server.py_deepseek_04969163.py"
    ],
    "new_files": [
      "server_057ee6.py"
    ]
  },
  {
    "file_signature": [
      "func:test_callable_usecols",
      "func:test_empty_usecols",
      "func:test_incomplete_first_row",
      "func:test_np_array_usecols",
      "func:test_raise_on_mixed_dtype_usecols",
      "func:test_raises_on_usecols_names_mismatch",
      "func:test_uneven_length_cols",
      "func:test_usecols",
      "func:test_usecols_additional_columns",
      "func:test_usecols_additional_columns_integer_columns",
      "func:test_usecols_dtype",
      "func:test_usecols_implicit_index_col",
      "func:test_usecols_index_col_conflict",
      "func:test_usecols_index_col_conflict2",
      "func:test_usecols_index_col_end",
      "func:test_usecols_index_col_false",
      "func:test_usecols_index_col_middle",
      "func:test_usecols_indices_out_of_bounds",
      "func:test_usecols_name_length_conflict",
      "func:test_usecols_regex_sep",
      "func:test_usecols_relative_to_names",
      "func:test_usecols_relative_to_names2",
      "func:test_usecols_single_string",
      "func:test_usecols_subset_names_mismatch_orig_columns",
      "func:test_usecols_with_integer_like_header",
      "func:test_usecols_with_names",
      "func:test_usecols_with_whitespace"
    ],
    "old_files": [
      "test_usecols_basic.py_deepseek_c777d637.py"
    ],
    "new_files": [
      "test_usecols_basic_f18d3b.py"
    ]
  },
  {
    "file_signature": [
      "func:allow_name_translation",
      "func:check_translations_directory_name",
      "func:data_description_validator",
      "func:find_references",
      "func:gen_auth_schema",
      "func:gen_data_entry_schema",
      "func:gen_ha_hardware_schema",
      "func:gen_issues_schema",
      "func:gen_strings_schema",
      "func:name_validator",
      "func:removed_title_validator",
      "func:string_no_single_quoted_placeholders",
      "func:translation_key_validator",
      "func:translation_value_validator",
      "func:validate",
      "func:validate_description_set",
      "func:validate_translation_file"
    ],
    "old_files": [
      "translations.py_deepseek_bb3eee59.py"
    ],
    "new_files": [
      "translations_f1af2c.py"
    ]
  },
  {
    "file_signature": [
      "class:EcobeeSensor",
      "class:EcobeeSensorEntityDescription",
      "func:__init__",
      "func:available",
      "func:device_info",
      "func:native_value",
      "func:unique_id"
    ],
    "old_files": [
      "sensor.py_deepseek_975807de.py"
    ],
    "new_files": [
      "sensor_132dfc.py"
    ]
  },
  {
    "file_signature": [
      "class:PreparedRequest",
      "class:Request",
      "class:RequestEncodingMixin",
      "class:RequestHooksMixin",
      "class:Response",
      "func:__enter__",
      "func:__exit__",
      "func:__getstate__",
      "func:__init__",
      "func:__iter__",
      "func:__repr__",
      "func:__setstate__",
      "func:_encode_files",
      "func:_encode_params",
      "func:_get_idna_encoded_host",
      "func:apparent_encoding",
      "func:copy",
      "func:deregister_hook",
      "func:generate",
      "func:is_permanent_redirect",
      "func:is_redirect",
      "func:iter_content",
      "func:iter_lines",
      "func:next",
      "func:ok",
      "func:path_url",
      "func:prepare",
      "func:prepare_auth",
      "func:prepare_body",
      "func:prepare_content_length",
      "func:prepare_cookies",
      "func:prepare_headers",
      "func:prepare_hooks",
      "func:prepare_method",
      "func:prepare_url",
      "func:register_hook",
      "func:send",
      "func:uri"
    ],
    "old_files": [
      "http_models.py_deepseek_cc140ed5.py"
    ],
    "new_files": [
      "http_models_d4e52a.py"
    ]
  },
  {
    "file_signature": [
      "func:__internal_pivot_table",
      "func:_add_margins",
      "func:_all_key",
      "func:_build_names_mapper",
      "func:_compute_grand_margin",
      "func:_convert_by",
      "func:_generate_marginal_results",
      "func:_generate_marginal_results_without_values",
      "func:_get_names",
      "func:_normalize",
      "func:crosstab",
      "func:pivot",
      "func:pivot_table"
    ],
    "old_files": [
      "pivot.py_deepseek_366d7a7a.py"
    ],
    "new_files": [
      "pivot_1f30db.py"
    ]
  },
  {
    "file_signature": [
      "class:AirzoneBaseSelect",
      "class:AirzoneSelectDescription",
      "class:AirzoneZoneSelect",
      "class:ZoneData",
      "func:__init__",
      "func:_async_entity_listener",
      "func:_async_update_attrs",
      "func:_get_current_option",
      "func:_handle_coordinator_update",
      "func:main_zone_options"
    ],
    "old_files": [
      "select.py_deepseek_167ca258.py"
    ],
    "new_files": [
      "select_ce6a0c.py"
    ]
  },
  {
    "file_signature": [
      "class:BiMpmMatching",
      "func:__init__",
      "func:create_parameter",
      "func:forward",
      "func:get_output_dim",
      "func:multi_perspective_match",
      "func:multi_perspective_match_pairwise",
      "func:share_or_create"
    ],
    "old_files": [
      "bimpm_matching.py_deepseek_70e09fb8.py"
    ],
    "new_files": [
      "bimpm_matching_1894c7.py"
    ]
  },
  {
    "file_signature": [
      "class:MicrobatchBuilder",
      "func:__init__",
      "func:batch_id",
      "func:build_batches",
      "func:build_end_time",
      "func:build_jinja_context_for_batch",
      "func:build_start_time",
      "func:ceiling_timestamp",
      "func:format_batch_start",
      "func:offset_timestamp",
      "func:truncate_timestamp"
    ],
    "old_files": [
      "microbatch.py_deepseek_cb5cf043.py"
    ],
    "new_files": [
      "microbatch_743d2f.py"
    ]
  },
  {
    "file_signature": [
      "class:RaidenAPI",
      "func:__init__",
      "func:_batch_coop_settle",
      "func:_raise_for_invalid_channel_timeouts",
      "func:address",
      "func:channel_batch_close",
      "func:channel_close",
      "func:channel_open",
      "func:config",
      "func:event_filter_for_payments",
      "func:flatten_transfer",
      "func:get_channel",
      "func:get_transfer_from_task",
      "func:is_already_existing_channel",
      "func:mint_token_for",
      "func:notifications",
      "func:set_reveal_timeout",
      "func:set_total_channel_deposit",
      "func:set_total_channel_withdraw",
      "func:token_network_leave",
      "func:token_network_register",
      "func:transfer_tasks_view"
    ],
    "old_files": [
      "python.py_deepseek_6ca98bab.py"
    ],
    "new_files": [
      "python_f218d0.py"
    ]
  },
  {
    "file_signature": [
      "class:OpenHardwareMonitorData",
      "class:OpenHardwareMonitorDevice",
      "func:__init__",
      "func:extra_state_attributes",
      "func:initialize",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:parse_children",
      "func:parse_number",
      "func:refresh",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_deepseek_9555a383.py"
    ],
    "new_files": [
      "sensor_6b9561.py"
    ]
  },
  {
    "file_signature": [
      "class:TestCode",
      "class:TestSeededCode",
      "func:c1",
      "func:c2",
      "func:code",
      "func:test_ean",
      "func:test_ean_non_enum",
      "func:test_imei",
      "func:test_isbn",
      "func:test_isbn_non_enum",
      "func:test_issn",
      "func:test_locale_code",
      "func:test_pin",
      "func:test_str"
    ],
    "old_files": [
      "test_code.py_deepseek_2489a7f4.py"
    ],
    "new_files": [
      "test_code_d994fc.py"
    ]
  },
  {
    "file_signature": [
      "class:User",
      "class:UserStatus",
      "func:__init__",
      "func:__repr__",
      "func:_clear_email_hash",
      "func:_set_email_hash",
      "func:check_credentials",
      "func:count",
      "func:create",
      "func:delete",
      "func:domain",
      "func:find_all",
      "func:find_by_email",
      "func:find_by_id",
      "func:find_by_username",
      "func:from_db",
      "func:from_document",
      "func:from_record",
      "func:get_groups",
      "func:is_active",
      "func:parse",
      "func:reset_password",
      "func:send_confirmation",
      "func:send_password_reset",
      "func:serialize",
      "func:set_email_verified",
      "func:update",
      "func:update_attributes",
      "func:update_last_login",
      "func:verify_hash",
      "func:verify_password"
    ],
    "old_files": [
      "user.py_deepseek_e720dd47.py"
    ],
    "new_files": [
      "user_fbdb95.py"
    ]
  },
  {
    "file_signature": [
      "class:Message",
      "func:__init__",
      "func:code_address",
      "func:data_as_bytes",
      "func:is_create",
      "func:storage_address"
    ],
    "old_files": [
      "message.py_deepseek_497b1e8f.py"
    ],
    "new_files": [
      "message_7557cb.py"
    ]
  },
  {
    "file_signature": [
      "class:BondEntity",
      "func:__init__",
      "func:_apply_state",
      "func:_async_bpup_callback",
      "func:_async_schedule_bpup_alive_or_poll",
      "func:_async_state_callback",
      "func:_async_update_if_bpup_not_alive",
      "func:device_info"
    ],
    "old_files": [
      "entity.py_deepseek_2738fb31.py"
    ],
    "new_files": [
      "entity_f58cea.py"
    ]
  },
  {
    "file_signature": [
      "class:Driver",
      "class:ReleaseRange",
      "class:TokenProxy",
      "func:__init__",
      "func:__iter__",
      "func:__next__",
      "func:_generate_pickle_name",
      "func:_newer",
      "func:_partially_consume_prefix",
      "func:can_advance",
      "func:eat",
      "func:load_grammar",
      "func:load_packaged_grammar",
      "func:lock",
      "func:main",
      "func:parse_file",
      "func:parse_stream",
      "func:parse_stream_raw",
      "func:parse_string",
      "func:parse_tokens",
      "func:release"
    ],
    "old_files": [
      "driver.py_deepseek_a019dddb.py"
    ],
    "new_files": [
      "driver_354fe6.py"
    ]
  },
  {
    "file_signature": [
      "func:async_build_cached_discovery",
      "func:async_clear_discovery_cache",
      "func:async_get_discovery",
      "func:async_name_from_discovery",
      "func:async_populate_data_from_discovery",
      "func:async_trigger_discovery",
      "func:async_update_entry_from_discovery"
    ],
    "old_files": [
      "discovery.py_deepseek_0f02b1bd.py"
    ],
    "new_files": [
      "discovery_3110d1.py"
    ]
  },
  {
    "file_signature": [
      "class:OnlineMeanAndVariance",
      "class:SingleProcessPool",
      "class:SockeyeError",
      "func:__enter__",
      "func:__exit__",
      "func:__init__",
      "func:adjust_first_step_masking",
      "func:all_gather_object",
      "func:average_tensors",
      "func:broadcast_object",
      "func:check_condition",
      "func:check_import_faiss",
      "func:check_version",
      "func:chunks",
      "func:combine_means",
      "func:combine_stds",
      "func:compute_isometric_score",
      "func:count",
      "func:count_seq_len",
      "func:create_pool",
      "func:dtype_to_str",
      "func:fault_tolerant_symlink",
      "func:gen_prefix_masking",
      "func:get_local_rank",
      "func:get_numpy_dtype",
      "func:get_tokens",
      "func:get_torch_dtype",
      "func:get_validation_metric_points",
      "func:grouper",
      "func:init_deepspeed",
      "func:init_device",
      "func:is_distributed",
      "func:is_gzip_file",
      "func:is_primary_worker",
      "func:load_version",
      "func:log_basic_info",
      "func:log_parameters",
      "func:map",
      "func:mean",
      "func:metric_value_is_better",
      "func:no_context",
      "func:parse_metrics_line",
      "func:parse_version",
      "func:read_metrics_file",
      "func:seed_rngs",
      "func:shift_prefix_factors",
      "func:smart_open",
      "func:starmap",
      "func:std",
      "func:update",
      "func:update_dict",
      "func:update_dict_with_prefix_kv",
      "func:using_deepspeed",
      "func:variance",
      "func:write_metrics_file"
    ],
    "old_files": [
      "utils.py_deepseek_8b360116.py"
    ],
    "new_files": [
      "utils_b5d4df.py"
    ]
  },
  {
    "file_signature": [
      "class:TestRegistryDescribeCommand",
      "func:pipelines_dict",
      "func:test_describe_registered_pipeline",
      "func:test_describe_registered_pipeline_default",
      "func:test_list_registered_pipelines",
      "func:test_registered_pipeline_not_found",
      "func:yaml_dump_mock"
    ],
    "old_files": [
      "test_registry.py_deepseek_d5122d7f.py"
    ],
    "new_files": [
      "test_registry_31caeb.py"
    ]
  },
  {
    "file_signature": [
      "class:RestartNode",
      "func:__call__",
      "func:__init__",
      "func:adhoc_capability",
      "func:capabilities",
      "func:link_exception_to",
      "func:pfs_mock",
      "func:raiden_chain",
      "func:raiden_network",
      "func:resolvers",
      "func:restart_node",
      "func:routing_mode",
      "func:timeout"
    ],
    "old_files": [
      "raiden_network.py_deepseek_34be1bfe.py"
    ],
    "new_files": [
      "raiden_network_f4d23c.py"
    ]
  },
  {
    "file_signature": [
      "class:EtherscanSensor",
      "func:__init__",
      "func:name",
      "func:native_unit_of_measurement",
      "func:native_value",
      "func:setup_platform",
      "func:update"
    ],
    "old_files": [
      "sensor.py_deepseek_58abeff6.py"
    ],
    "new_files": [
      "sensor_f62020.py"
    ]
  },
  {
    "file_signature": [
      "func:generate_mock_trade",
      "func:test_CooldownPeriod",
      "func:test_CooldownPeriod_unlock_at",
      "func:test_LowProfitPairs",
      "func:test_MaxDrawdown",
      "func:test_protection_manager_desc",
      "func:test_protectionmanager",
      "func:test_protections_init",
      "func:test_stoploss_guard",
      "func:test_stoploss_guard_perpair",
      "func:test_validate_protections"
    ],
    "old_files": [
      "test_protections.py_deepseek_b5e8377a.py"
    ],
    "new_files": [
      "test_protections_3ce579.py"
    ]
  },
  {
    "file_signature": [
      "class:Appender",
      "class:Substitution",
      "func:__call__",
      "func:__init__",
      "func:_deprecate_kwarg",
      "func:_format_argument_list",
      "func:decorate",
      "func:decorator",
      "func:deprecate",
      "func:deprecate_kwarg",
      "func:deprecate_nonkeyword_arguments",
      "func:doc",
      "func:future_version_msg",
      "func:indent",
      "func:set_module",
      "func:update",
      "func:wrapper"
    ],
    "old_files": [
      "_decorators.py_deepseek_7c692e1f.py"
    ],
    "new_files": [
      "_decorators_cfdb34.py"
    ]
  },
  {
    "file_signature": [
      "class:CallTraceRow",
      "func:__eq__",
      "func:__init__",
      "func:arg_types_from_json",
      "func:arg_types_to_json",
      "func:from_trace",
      "func:maybe_decode_type",
      "func:maybe_encode_type",
      "func:serialize_traces",
      "func:to_trace",
      "func:type_from_dict",
      "func:type_from_json",
      "func:type_to_dict",
      "func:type_to_json",
      "func:typed_dict_from_dict",
      "func:typed_dict_to_dict"
    ],
    "old_files": [
      "encoding.py_deepseek_632614ee.py"
    ],
    "new_files": [
      "encoding_93b3e1.py"
    ]
  },
  {
    "file_signature": [
      "class:BooleanField",
      "class:BytesField",
      "class:CharField",
      "class:DatetimeField",
      "class:DecimalField",
      "class:FieldDescriptor",
      "class:FloatField",
      "class:IntegerField",
      "class:NumberField",
      "class:StringField",
      "func:__get__",
      "func:__init__",
      "func:__repr__",
      "func:__set__",
      "func:__set_name__",
      "func:_compile_type_expression",
      "func:_copy_descriptors",
      "func:_is_concrete_model",
      "func:_parents_path",
      "func:_prepare_type_expression",
      "func:as_dict",
      "func:clone",
      "func:field_for_type",
      "func:getattr",
      "func:ident",
      "func:lazy_coercion",
      "func:on_model_attached",
      "func:prepare_value",
      "func:related_models",
      "func:should_coerce",
      "func:to_python",
      "func:validate",
      "func:validate_all",
      "func:validation_error"
    ],
    "old_files": [
      "fields.py_deepseek_49602f5d.py"
    ],
    "new_files": [
      "fields_638399.py"
    ]
  },
  {
    "file_signature": [
      "class:SimpleDataLoader",
      "func:__init__",
      "func:__iter__",
      "func:__len__",
      "func:_iter_batches",
      "func:from_dataset_reader",
      "func:index_with",
      "func:iter_instances",
      "func:set_target_device"
    ],
    "old_files": [
      "simple_data_loader.py_deepseek_259fcea8.py"
    ],
    "new_files": [
      "simple_data_loader_a4f8f3.py"
    ]
  },
  {
    "file_signature": [
      "class:DlibFaceIdentifyEntity",
      "func:__init__",
      "func:camera_entity",
      "func:name",
      "func:process_image",
      "func:setup_platform"
    ],
    "old_files": [
      "image_processing.py_deepseek_0f5979a4.py"
    ],
    "new_files": [
      "image_processing_f9093d.py"
    ]
  },
  {
    "file_signature": [
      "class:BayesianBinarySensor",
      "class:NumericConfig",
      "func:__init__",
      "func:_above_greater_than_below",
      "func:_async_template_result_changed",
      "func:_build_observations_by_entity",
      "func:_build_observations_by_template",
      "func:_calculate_new_probability",
      "func:_initialize_current_observations",
      "func:_no_overlapping",
      "func:_process_numeric_state",
      "func:_process_state",
      "func:_recalculate_and_write_state",
      "func:_record_entity_observations",
      "func:async_threshold_sensor_state_listener",
      "func:extra_state_attributes",
      "func:update_probability"
    ],
    "old_files": [
      "binary_sensor.py_deepseek_1bdaba5b.py"
    ],
    "new_files": [
      "binary_sensor_c1e39b.py"
    ]
  },
  {
    "file_signature": [
      "class:StataMissingValue",
      "class:StataNonCatValueLabel",
      "class:StataParser",
      "class:StataReader",
      "class:StataStrLWriter",
      "class:StataValueLabel",
      "class:StataWriter",
      "class:StataWriter117",
      "class:StataWriterUTF8",
      "func:__enter__",
      "func:__eq__",
      "func:__exit__",
      "func:__init__",
      "func:__next__",
      "func:__repr__",
      "func:__str__",
      "func:_cast_to_stata_types",
      "func:_check_column_names",
      "func:_close",
      "func:_convert_datetime_to_stata_type",
      "func:_convert_key",
      "func:_convert_strls",
      "func:_datetime_to_stata_elapsed_vec",
      "func:_decode",
      "func:_do_convert_categoricals",
      "func:_do_convert_missing",
      "func:_do_select_columns",
      "func:_dtype_to_default_stata_fmt",
      "func:_dtype_to_stata_type",
      "func:_dtype_to_stata_type_117",
      "func:_encode_strings",
      "func:_ensure_open",
      "func:_get_data_label",
      "func:_get_dtypes",
      "func:_get_fmtlist",
      "func:_get_lbllist",
      "func:_get_nobs",
      "func:_get_seek_variable_labels",
      "func:_get_time_stamp",
      "func:_get_variable_labels",
      "func:_get_varlist",
      "func:_insert_strls",
      "func:_maybe_convert_to_int_keys",
      "func:_null_terminate_bytes",
      "func:_null_terminate_str",
      "func:_open_file",
      "func:_pad_bytes",
      "func:_pad_bytes_new",
      "func:_prepare_categoricals",
      "func:_prepare_data",
      "func:_prepare_non_cat_value_labels",
      "func:_prepare_pandas",
      "func:_prepare_value_labels",
      "func:_read_char8",
      "func:_read_header",
      "func:_read_int16",
      "func:_read_int16_count",
      "func:_read_int32",
      "func:_read_int64",
      "func:_read_int8",
      "func:_read_new_header",
      "func:_read_new_value_labels",
      "func:_read_old_header",
      "func:_read_old_value_labels",
      "func:_read_strls",
      "func:_read_uint16",
      "func:_read_uint32",
      "func:_read_uint64",
      "func:_read_uint8",
      "func:_read_value_labels",
      "func:_replace_nans",
      "func:_set_encoding",
      "func:_set_endianness",
      "func:_set_formats_and_types",
      "func:_setup_dtype",
      "func:_stata_elapsed_date_to_datetime_vec",
      "func:_tag",
      "func:_update_map",
      "func:_update_strl_names",
      "func:_validate_variable_name",
      "func:_write",
      "func:_write_bytes",
      "func:_write_characteristics",
      "func:_write_data",
      "func:_write_expansion_fields",
      "func:_write_file_close_tag",
      "func:_write_formats",
      "func:_write_header",
      "func:_write_map",
      "func:_write_sortlist",
      "func:_write_strls",
      "func:_write_value_label_names",
      "func:_write_value_labels",
      "func:_write_variable_labels",
      "func:_write_variable_types",
      "func:_write_varnames",
      "func:data_label",
      "func:f",
      "func:g",
      "func:generate_blob",
      "func:generate_table",
      "func:generate_value_label",
      "func:get_base_missing_value",
      "func:get_chunk",
      "func:parse_dates_safe",
      "func:read",
      "func:read_stata",
      "func:string",
      "func:time_stamp",
      "func:value",
      "func:value_labels",
      "func:variable_labels",
      "func:write_file"
    ],
    "old_files": [
      "stata.py_deepseek_07254f7d.py"
    ],
    "new_files": [
      "stata_4ae9e0.py"
    ]
  },
  {
    "file_signature": [
      "class:IBeaconTrackerEntity",
      "func:__init__",
      "func:_async_device_new",
      "func:_async_seen",
      "func:_async_unavailable",
      "func:source_type",
      "func:state"
    ],
    "old_files": [
      "device_tracker.py_deepseek_0f4fc3ad.py"
    ],
    "new_files": [
      "device_tracker_406c5a.py"
    ]
  },
  {
    "file_signature": [
      "func:create_signed_exit",
      "func:exit_validators",
      "func:get_exited_validators",
      "func:get_unslashed_exited_validators",
      "func:prepare_signed_exits",
      "func:run_voluntary_exit_processing",
      "func:sign_voluntary_exit"
    ],
    "old_files": [
      "voluntary_exits.py_deepseek_0e4efd57.py"
    ],
    "new_files": [
      "voluntary_exits_96290c.py"
    ]
  },
  {
    "file_signature": [
      "class:TestOperations",
      "func:dbt_profile_data",
      "func:macros",
      "func:models",
      "func:run_operation",
      "func:test_access_graph",
      "func:test_cannot_connect",
      "func:test_macro_args",
      "func:test_macro_exception",
      "func:test_macro_missing",
      "func:test_macro_noargs",
      "func:test_print",
      "func:test_run_operation_local_macro",
      "func:test_select",
      "func:test_vacuum",
      "func:test_vacuum_ref"
    ],
    "old_files": [
      "test_run_operations.py_deepseek_cef6908a.py"
    ],
    "new_files": [
      "test_run_operations_c6edf5.py"
    ]
  },
  {
    "file_signature": [
      "class:PushsaferNotificationService",
      "func:__init__",
      "func:get_base64",
      "func:get_service",
      "func:load_from_file",
      "func:load_from_url",
      "func:send_message"
    ],
    "old_files": [
      "notify.py_deepseek_e9e02ff6.py"
    ],
    "new_files": [
      "notify_b3032a.py"
    ]
  },
  {
    "file_signature": [
      "class:ManualMQTTAlarm",
      "func:__init__",
      "func:_active_state",
      "func:_async_update_state",
      "func:_async_validate_code",
      "func:_pending_time",
      "func:_state_schema",
      "func:_state_validator",
      "func:_within_pending_time",
      "func:alarm_state",
      "func:async_scheduled_update",
      "func:code_format",
      "func:extra_state_attributes"
    ],
    "old_files": [
      "alarm_control_panel.py_deepseek_e816d2fa.py"
    ],
    "new_files": [
      "alarm_control_panel_e80274.py"
    ]
  },
  {
    "file_signature": [
      "class:TestTZLocalize",
      "func:test_dti_tz_localize",
      "func:test_dti_tz_localize_ambiguous_flags",
      "func:test_dti_tz_localize_ambiguous_flags2",
      "func:test_dti_tz_localize_ambiguous_infer",
      "func:test_dti_tz_localize_ambiguous_infer2",
      "func:test_dti_tz_localize_ambiguous_infer3",
      "func:test_dti_tz_localize_ambiguous_nat",
      "func:test_dti_tz_localize_ambiguous_times",
      "func:test_dti_tz_localize_bdate_range",
      "func:test_dti_tz_localize_naive",
      "func:test_dti_tz_localize_nonexistent_raise_coerce",
      "func:test_dti_tz_localize_nonexistent_shift",
      "func:test_dti_tz_localize_nonexistent_shift_invalid",
      "func:test_dti_tz_localize_pass_dates_to_utc",
      "func:test_dti_tz_localize_roundtrip",
      "func:test_dti_tz_localize_tzlocal",
      "func:test_dti_tz_localize_utc_conversion",
      "func:test_tz_localize_invalidates_freq",
      "func:test_tz_localize_utc_copies",
      "func:tz"
    ],
    "old_files": [
      "test_tz_localize.py_deepseek_65adf99a.py"
    ],
    "new_files": [
      "test_tz_localize_a90669.py"
    ]
  },
  {
    "file_signature": [
      "class:XiaomiGenericSwitch",
      "func:__init__",
      "func:extra_state_attributes",
      "func:icon",
      "func:is_on",
      "func:parse_data",
      "func:turn_off",
      "func:turn_on",
      "func:update"
    ],
    "old_files": [
      "switch.py_deepseek_56dcbc4e.py"
    ],
    "new_files": [
      "switch_8d0b59.py"
    ]
  },
  {
    "file_signature": [
      "class:X",
      "class:test_ChangeloggedSet",
      "class:test_SetTable",
      "class:test_SetTableManager",
      "class:test_SetWindowSet",
      "func:cset",
      "func:key",
      "func:man",
      "func:manager",
      "func:stable",
      "func:table",
      "func:test_ChangeloggedSetManager",
      "func:test__apply_set_operation",
      "func:test__clear",
      "func:test__difference_update",
      "func:test__getitem__",
      "func:test__intersection_update",
      "func:test__new_store",
      "func:test__symmetric_difference_update",
      "func:test__update",
      "func:test_add",
      "func:test_apply_changelog_event__ADD",
      "func:test_apply_changelog_event__DISCARD",
      "func:test_apply_changelog_event__UPDATE",
      "func:test_apply_changelog_event__not_implemented",
      "func:test_as_stored_value",
      "func:test_constructor",
      "func:test_constructor__with_specific_name",
      "func:test_constructor__with_suffix",
      "func:test_constructor_disabled",
      "func:test_constructor_enabled",
      "func:test_discard",
      "func:test_on_add",
      "func:test_on_change__diff",
      "func:test_on_change__update",
      "func:test_on_discard",
      "func:test_sync_from_storage",
      "func:wrapper",
      "func:wset"
    ],
    "old_files": [
      "test_sets.py_deepseek_a2e17664.py"
    ],
    "new_files": [
      "test_sets_73d779.py"
    ]
  },
  {
    "file_signature": [
      "func:build_reactions",
      "func:check_user_in_team",
      "func:convert_channel_data",
      "func:convert_direct_message_group_data",
      "func:convert_user_data",
      "func:create_username_to_user_mapping",
      "func:do_convert_data",
      "func:fix_mentions",
      "func:get_full_name",
      "func:get_invite_only_value_from_channel_type",
      "func:get_mentioned_user_ids",
      "func:get_recipient_id_from_channel_name",
      "func:get_recipient_id_from_direct_message_group_members",
      "func:get_recipient_id_from_username",
      "func:initialize_stream_membership_dicts",
      "func:is_team_admin",
      "func:is_team_guest",
      "func:label_mirror_dummy_users",
      "func:make_realm",
      "func:mattermost_data_file_to_dict",
      "func:message_to_dict",
      "func:process",
      "func:process_batch",
      "func:process_message_attachments",
      "func:process_posts",
      "func:process_raw_message_batch",
      "func:process_user",
      "func:reset_mirror_dummy_users",
      "func:write_emoticon_data",
      "func:write_message_data"
    ],
    "old_files": [
      "mattermost.py_deepseek_6dd6ba56.py"
    ],
    "new_files": [
      "mattermost_5a1f15.py"
    ]
  }
]